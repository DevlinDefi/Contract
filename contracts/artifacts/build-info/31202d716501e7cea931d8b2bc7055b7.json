{
	"id": "31202d716501e7cea931d8b2bc7055b7",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.7",
	"solcLongVersion": "0.8.7+commit.e28d00a7",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/NFTMasterChef.sol": {
				"content": "/**\r\n *Submitted for verification at BscScan.com on 2022-02-21\r\n*/\r\n\r\n// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.0;\r\n\r\nlibrary SafeMath {\r\n    /**\r\n     * @dev Returns the addition of two unsigned integers, reverting on\r\n     * overflow.\r\n     *\r\n     * Counterpart to Solidity's `+` operator.\r\n     *\r\n     * Requirements:\r\n     * - Addition cannot overflow.\r\n     */\r\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        uint256 c = a + b;\r\n        require(c >= a, \"SafeMath: addition overflow\");\r\n\r\n        return c;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the subtraction of two unsigned integers, reverting on\r\n     * overflow (when the result is negative).\r\n     *\r\n     * Counterpart to Solidity's `-` operator.\r\n     *\r\n     * Requirements:\r\n     * - Subtraction cannot overflow.\r\n     */\r\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        return sub(a, b, \"SafeMath: subtraction overflow\");\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\r\n     * overflow (when the result is negative).\r\n     *\r\n     * Counterpart to Solidity's `-` operator.\r\n     *\r\n     * Requirements:\r\n     * - Subtraction cannot overflow.\r\n     *\r\n     * _Available since v2.4.0._\r\n     */\r\n    function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\r\n        require(b <= a, errorMessage);\r\n        uint256 c = a - b;\r\n\r\n        return c;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the multiplication of two unsigned integers, reverting on\r\n     * overflow.\r\n     *\r\n     * Counterpart to Solidity's `*` operator.\r\n     *\r\n     * Requirements:\r\n     * - Multiplication cannot overflow.\r\n     */\r\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\r\n        // benefit is lost if 'b' is also tested.\r\n        // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\r\n        if (a == 0) {\r\n            return 0;\r\n        }\r\n\r\n        uint256 c = a * b;\r\n        require(c / a == b, \"SafeMath: multiplication overflow\");\r\n\r\n        return c;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the integer division of two unsigned integers. Reverts on\r\n     * division by zero. The result is rounded towards zero.\r\n     *\r\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\r\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\r\n     * uses an invalid opcode to revert (consuming all remaining gas).\r\n     *\r\n     * Requirements:\r\n     * - The divisor cannot be zero.\r\n     */\r\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        return div(a, b, \"SafeMath: division by zero\");\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the integer division of two unsigned integers. Reverts with custom message on\r\n     * division by zero. The result is rounded towards zero.\r\n     *\r\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\r\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\r\n     * uses an invalid opcode to revert (consuming all remaining gas).\r\n     *\r\n     * Requirements:\r\n     * - The divisor cannot be zero.\r\n     *\r\n     * _Available since v2.4.0._\r\n     */\r\n    function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\r\n        // Solidity only automatically asserts when dividing by 0\r\n        require(b > 0, errorMessage);\r\n        uint256 c = a / b;\r\n        // assert(a == b * c + a % b); // There is no case in which this doesn't hold\r\n\r\n        return c;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\r\n     * Reverts when dividing by zero.\r\n     *\r\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\r\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\r\n     * invalid opcode to revert (consuming all remaining gas).\r\n     *\r\n     * Requirements:\r\n     * - The divisor cannot be zero.\r\n     */\r\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        return mod(a, b, \"SafeMath: modulo by zero\");\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\r\n     * Reverts with custom message when dividing by zero.\r\n     *\r\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\r\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\r\n     * invalid opcode to revert (consuming all remaining gas).\r\n     *\r\n     * Requirements:\r\n     * - The divisor cannot be zero.\r\n     *\r\n     * _Available since v2.4.0._\r\n     */\r\n    function mod(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\r\n        require(b != 0, errorMessage);\r\n        return a % b;\r\n    }\r\n}\r\n\r\ninterface IERC20 {\r\n    /**\r\n     * @dev Returns the amount of tokens in existence.\r\n     */\r\n    function totalSupply() external view returns (uint256);\r\n\r\n    /**\r\n     * @dev Returns the amount of tokens owned by `account`.\r\n     */\r\n    function balanceOf(address account) external view returns (uint256);\r\n\r\n    /**\r\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\r\n     *\r\n     * Returns a boolean value indicating whether the operation succeeded.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     */\r\n    function transfer(address recipient, uint256 amount) external returns (bool);\r\n\r\n    /**\r\n     * @dev Returns the remaining number of tokens that `spender` will be\r\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\r\n     * zero by default.\r\n     *\r\n     * This value changes when {approve} or {transferFrom} are called.\r\n     */\r\n    function allowance(address owner, address spender) external view returns (uint256);\r\n\r\n    /**\r\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\r\n     *\r\n     * Returns a boolean value indicating whether the operation succeeded.\r\n     *\r\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\r\n     * that someone may use both the old and the new allowance by unfortunate\r\n     * transaction ordering. One possible solution to mitigate this race\r\n     * condition is to first reduce the spender's allowance to 0 and set the\r\n     * desired value afterwards:\r\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\r\n     *\r\n     * Emits an {Approval} event.\r\n     */\r\n    function approve(address spender, uint256 amount) external returns (bool);\r\n\r\n    function mint(address account, uint256 amount) external returns (bool);\r\n\r\n    /**\r\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\r\n     * allowance mechanism. `amount` is then deducted from the caller's\r\n     * allowance.\r\n     *\r\n     * Returns a boolean value indicating whether the operation succeeded.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     */\r\n    function transferFrom(\r\n        address sender,\r\n        address recipient,\r\n        uint256 amount\r\n    ) external returns (bool);\r\n\r\n    /**\r\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\r\n     * another (`to`).\r\n     *\r\n     * Note that `value` may be zero.\r\n     */\r\n    event Transfer(address indexed from, address indexed to, uint256 value);\r\n\r\n    /**\r\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\r\n     * a call to {approve}. `value` is the new allowance.\r\n     */\r\n    event Approval(address indexed owner, address indexed spender, uint256 value);\r\n\r\n    event Mint(address indexed minter, address indexed to, uint256 amount);\r\n}\r\n\r\nlibrary Address {\r\n    /**\r\n     * @dev Returns true if `account` is a contract.\r\n     *\r\n     * [IMPORTANT]\r\n     * ====\r\n     * It is unsafe to assume that an address for which this function returns\r\n     * false is an externally-owned account (EOA) and not a contract.\r\n     *\r\n     * Among others, `isContract` will return false for the following\r\n     * types of addresses:\r\n     *\r\n     *  - an externally-owned account\r\n     *  - a contract in construction\r\n     *  - an address where a contract will be created\r\n     *  - an address where a contract lived, but was destroyed\r\n     * ====\r\n     *\r\n     * [IMPORTANT]\r\n     * ====\r\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\r\n     *\r\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\r\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\r\n     * constructor.\r\n     * ====\r\n     */\r\n    function isContract(address account) internal view returns (bool) {\r\n        // This method relies on extcodesize/address.code.length, which returns 0\r\n        // for contracts in construction, since the code is only stored at the end\r\n        // of the constructor execution.\r\n\r\n        return account.code.length > 0;\r\n    }\r\n\r\n    /**\r\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\r\n     * `recipient`, forwarding all available gas and reverting on errors.\r\n     *\r\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\r\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\r\n     * imposed by `transfer`, making them unable to receive funds via\r\n     * `transfer`. {sendValue} removes this limitation.\r\n     *\r\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\r\n     *\r\n     * IMPORTANT: because control is transferred to `recipient`, care must be\r\n     * taken to not create reentrancy vulnerabilities. Consider using\r\n     * {ReentrancyGuard} or the\r\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\r\n     */\r\n    function sendValue(address payable recipient, uint256 amount) internal {\r\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\r\n\r\n        (bool success, ) = recipient.call{value: amount}(\"\");\r\n        require(success, \"Address: unable to send value, recipient may have reverted\");\r\n    }\r\n\r\n    /**\r\n     * @dev Performs a Solidity function call using a low level `call`. A\r\n     * plain `call` is an unsafe replacement for a function call: use this\r\n     * function instead.\r\n     *\r\n     * If `target` reverts with a revert reason, it is bubbled up by this\r\n     * function (like regular Solidity function calls).\r\n     *\r\n     * Returns the raw returned data. To convert to the expected return value,\r\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `target` must be a contract.\r\n     * - calling `target` with `data` must not revert.\r\n     *\r\n     * _Available since v3.1._\r\n     */\r\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\r\n        return functionCall(target, data, \"Address: low-level call failed\");\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\r\n     * `errorMessage` as a fallback revert reason when `target` reverts.\r\n     *\r\n     * _Available since v3.1._\r\n     */\r\n    function functionCall(\r\n        address target,\r\n        bytes memory data,\r\n        string memory errorMessage\r\n    ) internal returns (bytes memory) {\r\n        return functionCallWithValue(target, data, 0, errorMessage);\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\r\n     * but also transferring `value` wei to `target`.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - the calling contract must have an ETH balance of at least `value`.\r\n     * - the called Solidity function must be `payable`.\r\n     *\r\n     * _Available since v3.1._\r\n     */\r\n    function functionCallWithValue(\r\n        address target,\r\n        bytes memory data,\r\n        uint256 value\r\n    ) internal returns (bytes memory) {\r\n        return functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\r\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\r\n     *\r\n     * _Available since v3.1._\r\n     */\r\n    function functionCallWithValue(\r\n        address target,\r\n        bytes memory data,\r\n        uint256 value,\r\n        string memory errorMessage\r\n    ) internal returns (bytes memory) {\r\n        require(address(this).balance >= value, \"Address: insufficient balance for call\");\r\n        require(isContract(target), \"Address: call to non-contract\");\r\n\r\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\r\n        return verifyCallResult(success, returndata, errorMessage);\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\r\n     * but performing a static call.\r\n     *\r\n     * _Available since v3.3._\r\n     */\r\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\r\n        return functionStaticCall(target, data, \"Address: low-level static call failed\");\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\r\n     * but performing a static call.\r\n     *\r\n     * _Available since v3.3._\r\n     */\r\n    function functionStaticCall(\r\n        address target,\r\n        bytes memory data,\r\n        string memory errorMessage\r\n    ) internal view returns (bytes memory) {\r\n        require(isContract(target), \"Address: static call to non-contract\");\r\n\r\n        (bool success, bytes memory returndata) = target.staticcall(data);\r\n        return verifyCallResult(success, returndata, errorMessage);\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\r\n     * but performing a delegate call.\r\n     *\r\n     * _Available since v3.4._\r\n     */\r\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\r\n        return functionDelegateCall(target, data, \"Address: low-level delegate call failed\");\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\r\n     * but performing a delegate call.\r\n     *\r\n     * _Available since v3.4._\r\n     */\r\n    function functionDelegateCall(\r\n        address target,\r\n        bytes memory data,\r\n        string memory errorMessage\r\n    ) internal returns (bytes memory) {\r\n        require(isContract(target), \"Address: delegate call to non-contract\");\r\n\r\n        (bool success, bytes memory returndata) = target.delegatecall(data);\r\n        return verifyCallResult(success, returndata, errorMessage);\r\n    }\r\n\r\n    /**\r\n     * @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\r\n     * revert reason using the provided one.\r\n     *\r\n     * _Available since v4.3._\r\n     */\r\n    function verifyCallResult(\r\n        bool success,\r\n        bytes memory returndata,\r\n        string memory errorMessage\r\n    ) internal pure returns (bytes memory) {\r\n        if (success) {\r\n            return returndata;\r\n        } else {\r\n            // Look for revert reason and bubble it up if present\r\n            if (returndata.length > 0) {\r\n                // The easiest way to bubble the revert reason is using memory via assembly\r\n\r\n                assembly {\r\n                    let returndata_size := mload(returndata)\r\n                    revert(add(32, returndata), returndata_size)\r\n                }\r\n            } else {\r\n                revert(errorMessage);\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nlibrary SafeERC20 {\r\n    using Address for address;\r\n\r\n    function safeTransfer(\r\n        IERC20 token,\r\n        address to,\r\n        uint256 value\r\n    ) internal {\r\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value));\r\n    }\r\n\r\n    function safeTransferFrom(\r\n        IERC20 token,\r\n        address from,\r\n        address to,\r\n        uint256 value\r\n    ) internal {\r\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value));\r\n    }\r\n\r\n    /**\r\n     * @dev Deprecated. This function has issues similar to the ones found in\r\n     * {IERC20-approve}, and its usage is discouraged.\r\n     *\r\n     * Whenever possible, use {safeIncreaseAllowance} and\r\n     * {safeDecreaseAllowance} instead.\r\n     */\r\n    function safeApprove(\r\n        IERC20 token,\r\n        address spender,\r\n        uint256 value\r\n    ) internal {\r\n        // safeApprove should only be called when setting an initial allowance,\r\n        // or when resetting it to zero. To increase and decrease it, use\r\n        // 'safeIncreaseAllowance' and 'safeDecreaseAllowance'\r\n        require(\r\n            (value == 0) || (token.allowance(address(this), spender) == 0),\r\n            \"SafeERC20: approve from non-zero to non-zero allowance\"\r\n        );\r\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, value));\r\n    }\r\n\r\n    function safeIncreaseAllowance(\r\n        IERC20 token,\r\n        address spender,\r\n        uint256 value\r\n    ) internal {\r\n        uint256 newAllowance = token.allowance(address(this), spender) + value;\r\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\r\n    }\r\n\r\n    function safeDecreaseAllowance(\r\n        IERC20 token,\r\n        address spender,\r\n        uint256 value\r\n    ) internal {\r\n        unchecked {\r\n            uint256 oldAllowance = token.allowance(address(this), spender);\r\n            require(oldAllowance >= value, \"SafeERC20: decreased allowance below zero\");\r\n            uint256 newAllowance = oldAllowance - value;\r\n            _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\r\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\r\n     * @param token The token targeted by the call.\r\n     * @param data The call data (encoded using abi.encode or one of its variants).\r\n     */\r\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\r\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\r\n        // we're implementing it ourselves. We use {Address.functionCall} to perform this call, which verifies that\r\n        // the target address contains contract code and also asserts for success in the low-level call.\r\n\r\n        bytes memory returndata = address(token).functionCall(data, \"SafeERC20: low-level call failed\");\r\n        if (returndata.length > 0) {\r\n            // Return data is optional\r\n            require(abi.decode(returndata, (bool)), \"SafeERC20: ERC20 operation did not succeed\");\r\n        }\r\n    }\r\n}\r\n\r\nabstract contract Context {\r\n    function _msgSender() internal view virtual returns (address) {\r\n        return msg.sender;\r\n    }\r\n\r\n    function _msgData() internal view virtual returns (bytes calldata) {\r\n        return msg.data;\r\n    }\r\n}\r\n\r\nabstract contract Ownable is Context {\r\n    address private _owner;\r\n\r\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\r\n\r\n    /**\r\n     * @dev Initializes the contract setting the deployer as the initial owner.\r\n     */\r\n    constructor() {\r\n        _transferOwnership(_msgSender());\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the address of the current owner.\r\n     */\r\n    function owner() public view virtual returns (address) {\r\n        return _owner;\r\n    }\r\n\r\n    /**\r\n     * @dev Throws if called by any account other than the owner.\r\n     */\r\n    modifier onlyOwner() {\r\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\r\n        _;\r\n    }\r\n\r\n    /**\r\n     * @dev Leaves the contract without owner. It will not be possible to call\r\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\r\n     *\r\n     * NOTE: Renouncing ownership will leave the contract without an owner,\r\n     * thereby removing any functionality that is only available to the owner.\r\n     */\r\n    function renounceOwnership() public virtual onlyOwner {\r\n        _transferOwnership(address(0));\r\n    }\r\n\r\n    /**\r\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\r\n     * Can only be called by the current owner.\r\n     */\r\n    function transferOwnership(address newOwner) public virtual onlyOwner {\r\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\r\n        _transferOwnership(newOwner);\r\n    }\r\n\r\n    /**\r\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\r\n     * Internal function without access restriction.\r\n     */\r\n    function _transferOwnership(address newOwner) internal virtual {\r\n        address oldOwner = _owner;\r\n        _owner = newOwner;\r\n        emit OwnershipTransferred(oldOwner, newOwner);\r\n    }\r\n}\r\n\r\ninterface IMigratorChef {\r\n    function migrate(IERC20 token) external returns (IERC20);\r\n}\r\n\r\ninterface IERC721 {\r\n    function createNFT(address to) external;\r\n}\r\n\r\n// MasterChef is the master of Power. He can make Power and he is a fair guy.\r\n//\r\n// Note that it's ownable and the owner wields tremendous power. The ownership\r\n// will be transferred to a governance smart contract once Power is sufficiently\r\n// distributed and the community can show to govern itself.\r\n//\r\n// Have fun reading it. Hopefully it's bug-free. God bless.\r\ncontract NFTMasterChef is Ownable {\r\n    using SafeMath for uint256;\r\n    using SafeERC20 for IERC20;\r\n    // Info of each user.\r\n    struct UserInfo {\r\n        uint256 amount; // How many LP tokens the user has provided.\r\n        uint256 rewardDebt; // Reward debt. See explanation below.\r\n        //\r\n        // We do some fancy math here. Basically, any point in time, the amount of Powers\r\n        // entitled to a user but is pending to be distributed is:\r\n        //\r\n        //   pending reward = (user.amount * pool.accPowerPerShare) - user.rewardDebt\r\n        //\r\n        // Whenever a user deposits or withdraws LP tokens to a pool. Here's what happens:\r\n        //   1. The pool's `accPowerPerShare` (and `lastRewardBlock`) gets updated.\r\n        //   2. User receives the pending reward sent to his/her address.\r\n        //   3. User's `amount` gets updated.\r\n        //   4. User's `rewardDebt` gets updated.\r\n    }\r\n    // Info of each pool.\r\n    struct PoolInfo {\r\n        IERC20 lpToken; // Address of LP token contract.\r\n        uint256 allocPoint; // How many allocation points assigned to this pool. Powers to distribute per block.\r\n        uint256 lastRewardBlock; // Last block number that Powers distribution occurs.\r\n        uint256 accPowerPerShare; // Accumulated Powers per share, times 1e12. See below.\r\n    }\r\n\r\n    struct NFTsInfo {\r\n        IERC721 NFT;\r\n        uint256 power;\r\n    }\r\n\r\n    NFTsInfo[] public nftsInfo;\r\n\r\n    // The Power TOKEN!\r\n    IERC20 public DDT;\r\n    // Power tokens created per block.\r\n    uint256 public PowerPerBlock;\r\n    // Bonus muliplier for early Power makers.\r\n    uint256 public BONUS_MULTIPLIER = 1;\r\n    // The migrator contract. It has a lot of power. Can only be set through governance (owner).\r\n    IMigratorChef public migrator;\r\n    // Info of each pool.\r\n    PoolInfo[] public poolInfo;\r\n    // Info of each user that stakes LP tokens.\r\n    mapping(uint256 => mapping(address => UserInfo)) public userInfo;\r\n    // Total allocation poitns. Must be the sum of all allocation points in all pools.\r\n    uint256 public totalAllocPoint = 0;\r\n    // The block number when Power mining starts.\r\n    uint256 public startBlock;\r\n\r\n    mapping(address => uint256) public powerBalance;\r\n\r\n    event Deposit(address indexed user, uint256 indexed pid, uint256 amount);\r\n    event Withdraw(address indexed user, uint256 indexed pid, uint256 amount);\r\n    event EmergencyWithdraw(\r\n        address indexed user,\r\n        uint256 indexed pid,\r\n        uint256 amount\r\n    );\r\n\r\n    constructor(\r\n        IERC20 _DDT,\r\n        uint256 _PowerPerBlock,\r\n        uint256 _startBlock\r\n    ) {\r\n        DDT = _DDT;\r\n        PowerPerBlock = _PowerPerBlock;\r\n        startBlock = _startBlock;\r\n        \r\n        // staking pool\r\n        poolInfo.push(PoolInfo({\r\n            lpToken: DDT,\r\n            allocPoint: 1000,\r\n            lastRewardBlock: startBlock,\r\n            accPowerPerShare: 0\r\n        }));\r\n\r\n        totalAllocPoint = 1000;\r\n\r\n    }\r\n\r\n    function getPowerBalance(address account) public view returns(uint256) {\r\n        return powerBalance[account];\r\n    }\r\n\r\n    function addNFT(IERC721 _NFT, uint256 _power) public onlyOwner {\r\n        nftsInfo.push(\r\n            NFTsInfo({\r\n                NFT: _NFT,\r\n                power: _power\r\n            })\r\n        );\r\n    }\r\n\r\n    function claimNFTReward(uint256 level, uint256 _pid) public {\r\n        PoolInfo storage pool = poolInfo[_pid];\r\n        UserInfo storage user = userInfo[_pid][msg.sender];\r\n        uint256 accPowerPerShare = pool.accPowerPerShare;\r\n        uint256 lpSupply = pool.lpToken.balanceOf(address(this));\r\n        if (block.number > pool.lastRewardBlock && lpSupply != 0) {\r\n            uint256 multiplier = getMultiplier(pool.lastRewardBlock, block.number);\r\n            uint256 PowerReward = multiplier.mul(PowerPerBlock).mul(pool.allocPoint).div(totalAllocPoint);\r\n            accPowerPerShare = accPowerPerShare.add(PowerReward.mul(1e12).div(lpSupply));\r\n        }\r\n        uint256 pending = user.amount.mul(accPowerPerShare).div(1e12).sub(user.rewardDebt);\r\n        NFTsInfo storage nft = nftsInfo[level];\r\n        uint256 total = pending.add(powerBalance[msg.sender]);\r\n        if(total > nft.power){\r\n            if(_pid == 0){\r\n                leaveStaking(0);\r\n            }\r\n            if(_pid != 0){\r\n                withdraw(_pid,0);\r\n            }\r\n        }\r\n        require(nft.power < powerBalance[msg.sender], \"Power is not enough\");\r\n        powerBalance[msg.sender] = powerBalance[msg.sender].sub(nft.power);\r\n        nft.NFT.createNFT(msg.sender);\r\n    }\r\n\r\n    function updateMultiplier(uint256 multiplierNumber) public onlyOwner {\r\n        BONUS_MULTIPLIER = multiplierNumber;\r\n    }\r\n\r\n    function poolLength() external view returns (uint256) {\r\n        return poolInfo.length;\r\n    }\r\n\r\n    // Add a new lp to the pool. Can only be called by the owner.\r\n    // XXX DO NOT add the same LP token more than once. Rewards will be messed up if you do.\r\n    function add( uint256 _allocPoint, IERC20 _lpToken, bool _withUpdate ) public onlyOwner {\r\n        if (_withUpdate) {\r\n            massUpdatePools();\r\n        }\r\n        uint256 lastRewardBlock = block.number > startBlock ? block.number : startBlock;\r\n        totalAllocPoint = totalAllocPoint.add(_allocPoint);\r\n        poolInfo.push(\r\n            PoolInfo({\r\n                lpToken: _lpToken,\r\n                allocPoint: _allocPoint,\r\n                lastRewardBlock: lastRewardBlock,\r\n                accPowerPerShare: 0\r\n            })\r\n        );\r\n    }\r\n\r\n    // Update the given pool's Power allocation point. Can only be called by the owner.\r\n    function set( uint256 _pid, uint256 _allocPoint, bool _withUpdate) public onlyOwner {\r\n        if (_withUpdate) {\r\n            massUpdatePools();\r\n        }\r\n        totalAllocPoint = totalAllocPoint.sub(poolInfo[_pid].allocPoint).add(_allocPoint);\r\n        poolInfo[_pid].allocPoint = _allocPoint;\r\n    }\r\n\r\n    // Set the migrator contract. Can only be called by the owner.\r\n    function setMigrator(IMigratorChef _migrator) public onlyOwner {\r\n        migrator = _migrator;\r\n    }\r\n\r\n    // Migrate lp token to another lp contract. Can be called by anyone. We trust that migrator contract is good.\r\n    function migrate(uint256 _pid) public {\r\n        require(address(migrator) != address(0), \"migrate: no migrator\");\r\n        PoolInfo storage pool = poolInfo[_pid];\r\n        IERC20 lpToken = pool.lpToken;\r\n        uint256 bal = lpToken.balanceOf(address(this));\r\n        lpToken.safeApprove(address(migrator), bal);\r\n        IERC20 newLpToken = migrator.migrate(lpToken);\r\n        require(bal == newLpToken.balanceOf(address(this)), \"migrate: bad\");\r\n        pool.lpToken = newLpToken;\r\n    }\r\n\r\n    // Return reward multiplier over the given _from to _to block.\r\n    function getMultiplier(uint256 _from, uint256 _to) public view returns (uint256) {\r\n         return _to.sub(_from).mul(BONUS_MULTIPLIER);\r\n    }\r\n\r\n    // View function to see pending Powers on frontend.\r\n    function pendingPower(uint256 _pid, address _user) external view returns (uint256){\r\n        PoolInfo storage pool = poolInfo[_pid];\r\n        UserInfo storage user = userInfo[_pid][_user];\r\n        uint256 accPowerPerShare = pool.accPowerPerShare;\r\n        uint256 lpSupply = pool.lpToken.balanceOf(address(this));\r\n        if (block.number > pool.lastRewardBlock && lpSupply != 0) {\r\n            uint256 multiplier = getMultiplier(pool.lastRewardBlock, block.number);\r\n            uint256 PowerReward = multiplier.mul(PowerPerBlock).mul(pool.allocPoint).div(totalAllocPoint);\r\n            accPowerPerShare = accPowerPerShare.add(PowerReward.mul(1e12).div(lpSupply));\r\n        }\r\n        return user.amount.mul(accPowerPerShare).div(1e12).sub(user.rewardDebt);\r\n    }\r\n\r\n    // Update reward vairables for all pools. Be careful of gas spending!\r\n    function massUpdatePools() public {\r\n        uint256 length = poolInfo.length;\r\n        for (uint256 pid = 0; pid < length; ++pid) {\r\n            updatePool(pid);\r\n        }\r\n    }\r\n\r\n    // Update reward variables of the given pool to be up-to-date.\r\n    function updatePool(uint256 _pid) public {\r\n        PoolInfo storage pool = poolInfo[_pid];\r\n        if (block.number <= pool.lastRewardBlock) {\r\n            return;\r\n        }\r\n        uint256 lpSupply = pool.lpToken.balanceOf(address(this));\r\n        if (lpSupply <= 0) {\r\n            pool.lastRewardBlock = block.number;\r\n            return;\r\n        }\r\n        uint256 multiplier = getMultiplier(pool.lastRewardBlock, block.number);\r\n        uint256 PowerReward = multiplier.mul(PowerPerBlock).mul(pool.allocPoint).div(totalAllocPoint);\r\n        pool.accPowerPerShare = pool.accPowerPerShare.add(PowerReward.mul(1e12).div(lpSupply));\r\n        pool.lastRewardBlock = block.number;\r\n    }\r\n\r\n    // Deposit LP tokens to MasterChef for Power allocation.\r\n    function deposit(uint256 _pid, uint256 _amount) public {\r\n\r\n        require (_pid != 0, 'deposit Power by staking');\r\n\r\n        PoolInfo storage pool = poolInfo[_pid];\r\n        UserInfo storage user = userInfo[_pid][msg.sender];\r\n        updatePool(_pid);\r\n        if (user.amount > 0) {\r\n            uint256 pending = user.amount.mul(pool.accPowerPerShare).div(1e12).sub(user.rewardDebt);\r\n            if(pending > 0){\r\n                powerBalance[msg.sender] = powerBalance[msg.sender].add(pending);\r\n            }\r\n        }\r\n        pool.lpToken.safeTransferFrom(address(msg.sender), address(this), _amount);\r\n        user.amount = user.amount.add(_amount);\r\n        user.rewardDebt = user.amount.mul(pool.accPowerPerShare).div(1e12);\r\n        emit Deposit(msg.sender, _pid, _amount);\r\n    }\r\n\r\n    // Withdraw LP tokens from MasterChef.\r\n    function withdraw(uint256 _pid, uint256 _amount) public {\r\n\r\n        require (_pid != 0, 'withdraw Power by unstaking');\r\n\r\n        PoolInfo storage pool = poolInfo[_pid];\r\n        UserInfo storage user = userInfo[_pid][msg.sender];\r\n        require(user.amount >= _amount, \"withdraw: not good\");\r\n        updatePool(_pid);\r\n        uint256 pending = user.amount.mul(pool.accPowerPerShare).div(1e12).sub(user.rewardDebt);\r\n        if(pending > 0){\r\n            powerBalance[msg.sender] = powerBalance[msg.sender].add(pending);\r\n        }\r\n        user.amount = user.amount.sub(_amount);\r\n        user.rewardDebt = user.amount.mul(pool.accPowerPerShare).div(1e12);\r\n        pool.lpToken.safeTransfer(address(msg.sender), _amount);\r\n        emit Withdraw(msg.sender, _pid, _amount);\r\n    }\r\n\r\n        // Stake Power tokens to MasterChef\r\n    function enterStaking(uint256 _amount) public {\r\n        PoolInfo storage pool = poolInfo[0];\r\n        UserInfo storage user = userInfo[0][address(msg.sender)];\r\n        \r\n        updatePool(0);\r\n        if (user.amount > 0) {\r\n            uint256 pending = user.amount.mul(pool.accPowerPerShare).div(1e12).sub(user.rewardDebt);\r\n            if(pending > 0) {\r\n                powerBalance[address(msg.sender)] = powerBalance[address(msg.sender)].add(pending);\r\n            }\r\n        }\r\n        if(_amount > 0) {\r\n            pool.lpToken.safeTransferFrom(address(msg.sender), address(this), _amount);\r\n            user.amount = user.amount.add(_amount);\r\n        }\r\n        user.rewardDebt = user.amount.mul(pool.accPowerPerShare).div(1e12);\r\n        emit Deposit(msg.sender, 0, _amount);\r\n    }\r\n\r\n    // Withdraw Power tokens from STAKING.\r\n    function leaveStaking(uint256 _amount) public {\r\n        PoolInfo storage pool = poolInfo[0];\r\n        UserInfo storage user = userInfo[0][msg.sender];\r\n        require(user.amount >= _amount, \"withdraw: not good\");\r\n        updatePool(0);\r\n        uint256 pending = user.amount.mul(pool.accPowerPerShare).div(1e12).sub(user.rewardDebt);\r\n        if(pending > 0) {\r\n            powerBalance[msg.sender] = powerBalance[msg.sender].add(pending);\r\n        }\r\n        if(_amount > 0) {\r\n            user.amount = user.amount.sub(_amount);\r\n            pool.lpToken.safeTransfer(address(msg.sender), _amount);\r\n        }\r\n        user.rewardDebt = user.amount.mul(pool.accPowerPerShare).div(1e12);\r\n        emit Withdraw(msg.sender, 0, _amount);\r\n    }\r\n\r\n    \r\n\r\n    // Withdraw without caring about rewards. EMERGENCY ONLY.\r\n    function emergencyWithdraw(uint256 _pid) public {\r\n        PoolInfo storage pool = poolInfo[_pid];\r\n        UserInfo storage user = userInfo[_pid][msg.sender];\r\n        pool.lpToken.safeTransfer(address(msg.sender), user.amount);\r\n        emit EmergencyWithdraw(msg.sender, _pid, user.amount);\r\n        user.amount = 0;\r\n        user.rewardDebt = 0;\r\n    }\r\n    \r\n    function updatePowerPerBlock(uint256 newAmount) public onlyOwner {\r\n        PowerPerBlock = newAmount;\r\n    }\r\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"contracts/NFTMasterChef.sol": {
				"Address": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/NFTMasterChef.sol\":7813:16087  library Address {\r... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/NFTMasterChef.sol\":7813:16087  library Address {\r... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220a938ff558e082c1bd249f974e125bbc6326a0ba59359e46ad9a9f36d8991573364736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220a938ff558e082c1bd249f974e125bbc6326a0ba59359e46ad9a9f36d8991573364736f6c63430008070033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xA9 CODESIZE SELFDESTRUCT SSTORE DUP15 ADDMOD 0x2C SHL 0xD2 0x49 0xF9 PUSH21 0xE125BBC6326A0BA59359E46AD9A9F36D8991573364 PUSH20 0x6F6C634300080700330000000000000000000000 ",
							"sourceMap": "7813:8274:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220a938ff558e082c1bd249f974e125bbc6326a0ba59359e46ad9a9f36d8991573364736f6c63430008070033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xA9 CODESIZE SELFDESTRUCT SSTORE DUP15 ADDMOD 0x2C SHL 0xD2 0x49 0xF9 PUSH21 0xE125BBC6326A0BA59359E46AD9A9F36D8991573364 PUSH20 0x6F6C634300080700330000000000000000000000 ",
							"sourceMap": "7813:8274:0:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"functionCall(address,bytes memory)": "infinite",
								"functionCall(address,bytes memory,string memory)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256,string memory)": "infinite",
								"functionDelegateCall(address,bytes memory)": "infinite",
								"functionDelegateCall(address,bytes memory,string memory)": "infinite",
								"functionStaticCall(address,bytes memory)": "infinite",
								"functionStaticCall(address,bytes memory,string memory)": "infinite",
								"isContract(address)": "infinite",
								"sendValue(address payable,uint256)": "infinite",
								"verifyCallResult(bool,bytes memory,string memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 7813,
									"end": 16087,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 7813,
									"end": 16087,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 7813,
									"end": 16087,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 7813,
									"end": 16087,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 7813,
									"end": 16087,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 7813,
									"end": 16087,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 7813,
									"end": 16087,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 7813,
									"end": 16087,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 7813,
									"end": 16087,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 7813,
									"end": 16087,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 7813,
									"end": 16087,
									"name": "BYTE",
									"source": 0
								},
								{
									"begin": 7813,
									"end": 16087,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 7813,
									"end": 16087,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 7813,
									"end": 16087,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 7813,
									"end": 16087,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 7813,
									"end": 16087,
									"name": "PUSH",
									"source": 0,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 7813,
									"end": 16087,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 7813,
									"end": 16087,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 7813,
									"end": 16087,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 7813,
									"end": 16087,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 7813,
									"end": 16087,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 7813,
									"end": 16087,
									"name": "PUSH",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 7813,
									"end": 16087,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 7813,
									"end": 16087,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 7813,
									"end": 16087,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 7813,
									"end": 16087,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 7813,
									"end": 16087,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 7813,
									"end": 16087,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 7813,
									"end": 16087,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 7813,
									"end": 16087,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 7813,
									"end": 16087,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 7813,
									"end": 16087,
									"name": "MSTORE8",
									"source": 0
								},
								{
									"begin": 7813,
									"end": 16087,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 7813,
									"end": 16087,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 7813,
									"end": 16087,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220a938ff558e082c1bd249f974e125bbc6326a0ba59359e46ad9a9f36d8991573364736f6c63430008070033",
									".code": [
										{
											"begin": 7813,
											"end": 16087,
											"name": "PUSHDEPLOYADDRESS",
											"source": 0
										},
										{
											"begin": 7813,
											"end": 16087,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 7813,
											"end": 16087,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 7813,
											"end": 16087,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 7813,
											"end": 16087,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7813,
											"end": 16087,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7813,
											"end": 16087,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7813,
											"end": 16087,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7813,
											"end": 16087,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/NFTMasterChef.sol\":\"Address\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/NFTMasterChef.sol\":{\"keccak256\":\"0xaa3f6650bd0d18c974fb49ff47bb742f7e50cb438781764b06a12790d25fd86c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://18152ee0a5fb58d362f6d5ced4ff3dfecf2f8362e3b7eec88b7d44cde630fec6\",\"dweb:/ipfs/QmdtHL4hcWQnvJtfNCiU4Ehbq1P6Wik9QNYCnbMd5nWHkM\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"Context": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/NFTMasterChef.sol\":\"Context\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/NFTMasterChef.sol\":{\"keccak256\":\"0xaa3f6650bd0d18c974fb49ff47bb742f7e50cb438781764b06a12790d25fd86c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://18152ee0a5fb58d362f6d5ced4ff3dfecf2f8362e3b7eec88b7d44cde630fec6\",\"dweb:/ipfs/QmdtHL4hcWQnvJtfNCiU4Ehbq1P6Wik9QNYCnbMd5nWHkM\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "minter",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "Mint",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "mint",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"mint(address,uint256)": "40c10f19",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"minter\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Mint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/NFTMasterChef.sol\":\"IERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/NFTMasterChef.sol\":{\"keccak256\":\"0xaa3f6650bd0d18c974fb49ff47bb742f7e50cb438781764b06a12790d25fd86c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://18152ee0a5fb58d362f6d5ced4ff3dfecf2f8362e3b7eec88b7d44cde630fec6\",\"dweb:/ipfs/QmdtHL4hcWQnvJtfNCiU4Ehbq1P6Wik9QNYCnbMd5nWHkM\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC721": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								}
							],
							"name": "createNFT",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"createNFT(address)": "17e5883c"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"createNFT\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/NFTMasterChef.sol\":\"IERC721\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/NFTMasterChef.sol\":{\"keccak256\":\"0xaa3f6650bd0d18c974fb49ff47bb742f7e50cb438781764b06a12790d25fd86c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://18152ee0a5fb58d362f6d5ced4ff3dfecf2f8362e3b7eec88b7d44cde630fec6\",\"dweb:/ipfs/QmdtHL4hcWQnvJtfNCiU4Ehbq1P6Wik9QNYCnbMd5nWHkM\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IMigratorChef": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "contract IERC20",
									"name": "token",
									"type": "address"
								}
							],
							"name": "migrate",
							"outputs": [
								{
									"internalType": "contract IERC20",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"migrate(address)": "ce5494bb"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"migrate\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/NFTMasterChef.sol\":\"IMigratorChef\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/NFTMasterChef.sol\":{\"keccak256\":\"0xaa3f6650bd0d18c974fb49ff47bb742f7e50cb438781764b06a12790d25fd86c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://18152ee0a5fb58d362f6d5ced4ff3dfecf2f8362e3b7eec88b7d44cde630fec6\",\"dweb:/ipfs/QmdtHL4hcWQnvJtfNCiU4Ehbq1P6Wik9QNYCnbMd5nWHkM\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"NFTMasterChef": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "contract IERC20",
									"name": "_DDT",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_PowerPerBlock",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_startBlock",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "pid",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "Deposit",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "pid",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "EmergencyWithdraw",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "pid",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "Withdraw",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "BONUS_MULTIPLIER",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "DDT",
							"outputs": [
								{
									"internalType": "contract IERC20",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "PowerPerBlock",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_allocPoint",
									"type": "uint256"
								},
								{
									"internalType": "contract IERC20",
									"name": "_lpToken",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "_withUpdate",
									"type": "bool"
								}
							],
							"name": "add",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "contract IERC721",
									"name": "_NFT",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_power",
									"type": "uint256"
								}
							],
							"name": "addNFT",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "level",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_pid",
									"type": "uint256"
								}
							],
							"name": "claimNFTReward",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_pid",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "deposit",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_pid",
									"type": "uint256"
								}
							],
							"name": "emergencyWithdraw",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "enterStaking",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_from",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_to",
									"type": "uint256"
								}
							],
							"name": "getMultiplier",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "getPowerBalance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "leaveStaking",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "massUpdatePools",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_pid",
									"type": "uint256"
								}
							],
							"name": "migrate",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "migrator",
							"outputs": [
								{
									"internalType": "contract IMigratorChef",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "nftsInfo",
							"outputs": [
								{
									"internalType": "contract IERC721",
									"name": "NFT",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "power",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_pid",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "_user",
									"type": "address"
								}
							],
							"name": "pendingPower",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "poolInfo",
							"outputs": [
								{
									"internalType": "contract IERC20",
									"name": "lpToken",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allocPoint",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "lastRewardBlock",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "accPowerPerShare",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "poolLength",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "powerBalance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_pid",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_allocPoint",
									"type": "uint256"
								},
								{
									"internalType": "bool",
									"name": "_withUpdate",
									"type": "bool"
								}
							],
							"name": "set",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "contract IMigratorChef",
									"name": "_migrator",
									"type": "address"
								}
							],
							"name": "setMigrator",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "startBlock",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalAllocPoint",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "multiplierNumber",
									"type": "uint256"
								}
							],
							"name": "updateMultiplier",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_pid",
									"type": "uint256"
								}
							],
							"name": "updatePool",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "newAmount",
									"type": "uint256"
								}
							],
							"name": "updatePowerPerBlock",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "userInfo",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "rewardDebt",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_pid",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "withdraw",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/NFTMasterChef.sol\":22111:34879  contract NFTMasterChef is Ownable {\r... */\n  mstore(0x40, 0x80)\n    /* \"contracts/NFTMasterChef.sol\":23774:23775  1 */\n  0x01\n    /* \"contracts/NFTMasterChef.sol\":23740:23775  uint256 public BONUS_MULTIPLIER = 1 */\n  0x04\n  sstore\n    /* \"contracts/NFTMasterChef.sol\":24217:24218  0 */\n  0x00\n    /* \"contracts/NFTMasterChef.sol\":24184:24218  uint256 public totalAllocPoint = 0 */\n  0x08\n  sstore\n    /* \"contracts/NFTMasterChef.sol\":24650:25112  constructor(\r... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"contracts/NFTMasterChef.sol\":19984:20016  _transferOwnership(_msgSender()) */\n  tag_7\n    /* \"contracts/NFTMasterChef.sol\":20003:20015  _msgSender() */\n  tag_8\n    /* \"contracts/NFTMasterChef.sol\":20003:20013  _msgSender */\n  shl(0x20, tag_9)\n    /* \"contracts/NFTMasterChef.sol\":20003:20015  _msgSender() */\n  0x20\n  shr\n  jump\t// in\ntag_8:\n    /* \"contracts/NFTMasterChef.sol\":19984:20002  _transferOwnership */\n  shl(0x20, tag_10)\n    /* \"contracts/NFTMasterChef.sol\":19984:20016  _transferOwnership(_msgSender()) */\n  0x20\n  shr\n  jump\t// in\ntag_7:\n    /* \"contracts/NFTMasterChef.sol\":24771:24775  _DDT */\n  dup3\n    /* \"contracts/NFTMasterChef.sol\":24765:24768  DDT */\n  0x02\n  0x00\n    /* \"contracts/NFTMasterChef.sol\":24765:24775  DDT = _DDT */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/NFTMasterChef.sol\":24802:24816  _PowerPerBlock */\n  dup2\n    /* \"contracts/NFTMasterChef.sol\":24786:24799  PowerPerBlock */\n  0x03\n    /* \"contracts/NFTMasterChef.sol\":24786:24816  PowerPerBlock = _PowerPerBlock */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/NFTMasterChef.sol\":24840:24851  _startBlock */\n  dup1\n    /* \"contracts/NFTMasterChef.sol\":24827:24837  startBlock */\n  0x09\n    /* \"contracts/NFTMasterChef.sol\":24827:24851  startBlock = _startBlock */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/NFTMasterChef.sol\":24897:24905  poolInfo */\n  0x06\n    /* \"contracts/NFTMasterChef.sol\":24911:25066  PoolInfo({\r... */\n  mload(0x40)\n  dup1\n  0x80\n  add\n  0x40\n  mstore\n  dup1\n    /* \"contracts/NFTMasterChef.sol\":24944:24947  DDT */\n  0x02\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"contracts/NFTMasterChef.sol\":24911:25066  PoolInfo({\r... */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n    /* \"contracts/NFTMasterChef.sol\":24974:24978  1000 */\n  0x03e8\n    /* \"contracts/NFTMasterChef.sol\":24911:25066  PoolInfo({\r... */\n  dup2\n  mstore\n  0x20\n  add\n    /* \"contracts/NFTMasterChef.sol\":25010:25020  startBlock */\n  sload(0x09)\n    /* \"contracts/NFTMasterChef.sol\":24911:25066  PoolInfo({\r... */\n  dup2\n  mstore\n  0x20\n  add\n    /* \"contracts/NFTMasterChef.sol\":25053:25054  0 */\n  0x00\n    /* \"contracts/NFTMasterChef.sol\":24911:25066  PoolInfo({\r... */\n  dup2\n  mstore\n  pop\n    /* \"contracts/NFTMasterChef.sol\":24897:25067  poolInfo.push(PoolInfo({\r... */\n  swap1\n  dup1\n  0x01\n  dup2\n  sload\n  add\n  dup1\n  dup3\n  sstore\n  dup1\n  swap2\n  pop\n  pop\n  0x01\n  swap1\n  sub\n  swap1\n  0x00\n  mstore\n  keccak256(0x00, 0x20)\n  swap1\n  0x04\n  mul\n  add\n  0x00\n  swap1\n  swap2\n  swap1\n  swap2\n  swap1\n  swap2\n  pop\n  0x00\n  dup3\n  add\n  mload\n  dup2\n  0x00\n  add\n  exp(0x0100, 0x00)\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n  0x20\n  dup3\n  add\n  mload\n  dup2\n  0x01\n  add\n  sstore\n  0x40\n  dup3\n  add\n  mload\n  dup2\n  0x02\n  add\n  sstore\n  0x60\n  dup3\n  add\n  mload\n  dup2\n  0x03\n  add\n  sstore\n  pop\n  pop\n    /* \"contracts/NFTMasterChef.sol\":25098:25102  1000 */\n  0x03e8\n    /* \"contracts/NFTMasterChef.sol\":25080:25095  totalAllocPoint */\n  0x08\n    /* \"contracts/NFTMasterChef.sol\":25080:25102  totalAllocPoint = 1000 */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/NFTMasterChef.sol\":24650:25112  constructor(\r... */\n  pop\n  pop\n  pop\n    /* \"contracts/NFTMasterChef.sol\":22111:34879  contract NFTMasterChef is Ownable {\r... */\n  jump(tag_13)\n    /* \"contracts/NFTMasterChef.sol\":19479:19577  function _msgSender() internal view virtual returns (address) {\r... */\ntag_9:\n    /* \"contracts/NFTMasterChef.sol\":19532:19539  address */\n  0x00\n    /* \"contracts/NFTMasterChef.sol\":19559:19569  msg.sender */\n  caller\n    /* \"contracts/NFTMasterChef.sol\":19552:19569  return msg.sender */\n  swap1\n  pop\n    /* \"contracts/NFTMasterChef.sol\":19479:19577  function _msgSender() internal view virtual returns (address) {\r... */\n  swap1\n  jump\t// out\n    /* \"contracts/NFTMasterChef.sol\":21375:21566  function _transferOwnership(address newOwner) internal virtual {\r... */\ntag_10:\n    /* \"contracts/NFTMasterChef.sol\":21449:21465  address oldOwner */\n  0x00\n    /* \"contracts/NFTMasterChef.sol\":21468:21474  _owner */\n  dup1\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"contracts/NFTMasterChef.sol\":21449:21474  address oldOwner = _owner */\n  swap1\n  pop\n    /* \"contracts/NFTMasterChef.sol\":21494:21502  newOwner */\n  dup2\n    /* \"contracts/NFTMasterChef.sol\":21485:21491  _owner */\n  0x00\n  dup1\n    /* \"contracts/NFTMasterChef.sol\":21485:21502  _owner = newOwner */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/NFTMasterChef.sol\":21549:21557  newOwner */\n  dup2\n    /* \"contracts/NFTMasterChef.sol\":21518:21558  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"contracts/NFTMasterChef.sol\":21539:21547  oldOwner */\n  dup2\n    /* \"contracts/NFTMasterChef.sol\":21518:21558  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"contracts/NFTMasterChef.sol\":21438:21566  {\r... */\n  pop\n    /* \"contracts/NFTMasterChef.sol\":21375:21566  function _transferOwnership(address newOwner) internal virtual {\r... */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7:178   */\ntag_17:\n    /* \"#utility.yul\":78:83   */\n  0x00\n    /* \"#utility.yul\":109:115   */\n  dup2\n    /* \"#utility.yul\":103:116   */\n  mload\n    /* \"#utility.yul\":94:116   */\n  swap1\n  pop\n    /* \"#utility.yul\":125:172   */\n  tag_19\n    /* \"#utility.yul\":166:171   */\n  dup2\n    /* \"#utility.yul\":125:172   */\n  tag_20\n  jump\t// in\ntag_19:\n    /* \"#utility.yul\":7:178   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":184:327   */\ntag_21:\n    /* \"#utility.yul\":241:246   */\n  0x00\n    /* \"#utility.yul\":272:278   */\n  dup2\n    /* \"#utility.yul\":266:279   */\n  mload\n    /* \"#utility.yul\":257:279   */\n  swap1\n  pop\n    /* \"#utility.yul\":288:321   */\n  tag_23\n    /* \"#utility.yul\":315:320   */\n  dup2\n    /* \"#utility.yul\":288:321   */\n  tag_24\n  jump\t// in\ntag_23:\n    /* \"#utility.yul\":184:327   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":333:1024   */\ntag_3:\n    /* \"#utility.yul\":435:441   */\n  0x00\n    /* \"#utility.yul\":443:449   */\n  dup1\n    /* \"#utility.yul\":451:457   */\n  0x00\n    /* \"#utility.yul\":500:502   */\n  0x60\n    /* \"#utility.yul\":488:497   */\n  dup5\n    /* \"#utility.yul\":479:486   */\n  dup7\n    /* \"#utility.yul\":475:498   */\n  sub\n    /* \"#utility.yul\":471:503   */\n  slt\n    /* \"#utility.yul\":468:587   */\n  iszero\n  tag_26\n  jumpi\n    /* \"#utility.yul\":506:585   */\n  tag_27\n  tag_28\n  jump\t// in\ntag_27:\n    /* \"#utility.yul\":468:587   */\ntag_26:\n    /* \"#utility.yul\":626:627   */\n  0x00\n    /* \"#utility.yul\":651:729   */\n  tag_29\n    /* \"#utility.yul\":721:728   */\n  dup7\n    /* \"#utility.yul\":712:718   */\n  dup3\n    /* \"#utility.yul\":701:710   */\n  dup8\n    /* \"#utility.yul\":697:719   */\n  add\n    /* \"#utility.yul\":651:729   */\n  tag_17\n  jump\t// in\ntag_29:\n    /* \"#utility.yul\":641:729   */\n  swap4\n  pop\n    /* \"#utility.yul\":597:739   */\n  pop\n    /* \"#utility.yul\":778:780   */\n  0x20\n    /* \"#utility.yul\":804:868   */\n  tag_30\n    /* \"#utility.yul\":860:867   */\n  dup7\n    /* \"#utility.yul\":851:857   */\n  dup3\n    /* \"#utility.yul\":840:849   */\n  dup8\n    /* \"#utility.yul\":836:858   */\n  add\n    /* \"#utility.yul\":804:868   */\n  tag_21\n  jump\t// in\ntag_30:\n    /* \"#utility.yul\":794:868   */\n  swap3\n  pop\n    /* \"#utility.yul\":749:878   */\n  pop\n    /* \"#utility.yul\":917:919   */\n  0x40\n    /* \"#utility.yul\":943:1007   */\n  tag_31\n    /* \"#utility.yul\":999:1006   */\n  dup7\n    /* \"#utility.yul\":990:996   */\n  dup3\n    /* \"#utility.yul\":979:988   */\n  dup8\n    /* \"#utility.yul\":975:997   */\n  add\n    /* \"#utility.yul\":943:1007   */\n  tag_21\n  jump\t// in\ntag_31:\n    /* \"#utility.yul\":933:1007   */\n  swap2\n  pop\n    /* \"#utility.yul\":888:1017   */\n  pop\n    /* \"#utility.yul\":333:1024   */\n  swap3\n  pop\n  swap3\n  pop\n  swap3\n  jump\t// out\n    /* \"#utility.yul\":1111:1207   */\ntag_34:\n    /* \"#utility.yul\":1148:1155   */\n  0x00\n    /* \"#utility.yul\":1177:1201   */\n  tag_36\n    /* \"#utility.yul\":1195:1200   */\n  dup3\n    /* \"#utility.yul\":1177:1201   */\n  tag_37\n  jump\t// in\ntag_36:\n    /* \"#utility.yul\":1166:1201   */\n  swap1\n  pop\n    /* \"#utility.yul\":1111:1207   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1213:1323   */\ntag_38:\n    /* \"#utility.yul\":1264:1271   */\n  0x00\n    /* \"#utility.yul\":1293:1317   */\n  tag_40\n    /* \"#utility.yul\":1311:1316   */\n  dup3\n    /* \"#utility.yul\":1293:1317   */\n  tag_34\n  jump\t// in\ntag_40:\n    /* \"#utility.yul\":1282:1317   */\n  swap1\n  pop\n    /* \"#utility.yul\":1213:1323   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1329:1455   */\ntag_37:\n    /* \"#utility.yul\":1366:1373   */\n  0x00\n    /* \"#utility.yul\":1406:1448   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":1399:1404   */\n  dup3\n    /* \"#utility.yul\":1395:1449   */\n  and\n    /* \"#utility.yul\":1384:1449   */\n  swap1\n  pop\n    /* \"#utility.yul\":1329:1455   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1461:1538   */\ntag_42:\n    /* \"#utility.yul\":1498:1505   */\n  0x00\n    /* \"#utility.yul\":1527:1532   */\n  dup2\n    /* \"#utility.yul\":1516:1532   */\n  swap1\n  pop\n    /* \"#utility.yul\":1461:1538   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1667:1784   */\ntag_28:\n    /* \"#utility.yul\":1776:1777   */\n  0x00\n    /* \"#utility.yul\":1773:1774   */\n  dup1\n    /* \"#utility.yul\":1766:1778   */\n  revert\n    /* \"#utility.yul\":1790:1940   */\ntag_20:\n    /* \"#utility.yul\":1877:1915   */\n  tag_48\n    /* \"#utility.yul\":1909:1914   */\n  dup2\n    /* \"#utility.yul\":1877:1915   */\n  tag_38\n  jump\t// in\ntag_48:\n    /* \"#utility.yul\":1870:1875   */\n  dup2\n    /* \"#utility.yul\":1867:1916   */\n  eq\n    /* \"#utility.yul\":1857:1934   */\n  tag_49\n  jumpi\n    /* \"#utility.yul\":1930:1931   */\n  0x00\n    /* \"#utility.yul\":1927:1928   */\n  dup1\n    /* \"#utility.yul\":1920:1932   */\n  revert\n    /* \"#utility.yul\":1857:1934   */\ntag_49:\n    /* \"#utility.yul\":1790:1940   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1946:2068   */\ntag_24:\n    /* \"#utility.yul\":2019:2043   */\n  tag_51\n    /* \"#utility.yul\":2037:2042   */\n  dup2\n    /* \"#utility.yul\":2019:2043   */\n  tag_42\n  jump\t// in\ntag_51:\n    /* \"#utility.yul\":2012:2017   */\n  dup2\n    /* \"#utility.yul\":2009:2044   */\n  eq\n    /* \"#utility.yul\":1999:2062   */\n  tag_52\n  jumpi\n    /* \"#utility.yul\":2058:2059   */\n  0x00\n    /* \"#utility.yul\":2055:2056   */\n  dup1\n    /* \"#utility.yul\":2048:2060   */\n  revert\n    /* \"#utility.yul\":1999:2062   */\ntag_52:\n    /* \"#utility.yul\":1946:2068   */\n  pop\n  jump\t// out\n    /* \"contracts/NFTMasterChef.sol\":22111:34879  contract NFTMasterChef is Ownable {\r... */\ntag_13:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/NFTMasterChef.sol\":22111:34879  contract NFTMasterChef is Ownable {\r... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x5ffe6146\n      gt\n      tag_35\n      jumpi\n      dup1\n      0x8da5cb5b\n      gt\n      tag_36\n      jumpi\n      dup1\n      0xd209db8c\n      gt\n      tag_37\n      jumpi\n      dup1\n      0xd209db8c\n      eq\n      tag_31\n      jumpi\n      dup1\n      0xe2bbb158\n      eq\n      tag_32\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_33\n      jumpi\n      dup1\n      0xf3239ab5\n      eq\n      tag_34\n      jumpi\n      jump(tag_2)\n    tag_37:\n      dup1\n      0x8da5cb5b\n      eq\n      tag_27\n      jumpi\n      dup1\n      0x8dbb1e3a\n      eq\n      tag_28\n      jumpi\n      dup1\n      0x93f1a40b\n      eq\n      tag_29\n      jumpi\n      dup1\n      0xcb3cba55\n      eq\n      tag_30\n      jumpi\n      jump(tag_2)\n    tag_36:\n      dup1\n      0x715018a6\n      gt\n      tag_38\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_23\n      jumpi\n      dup1\n      0x7cd07e47\n      eq\n      tag_24\n      jumpi\n      dup1\n      0x8aa28550\n      eq\n      tag_25\n      jumpi\n      dup1\n      0x8c51793b\n      eq\n      tag_26\n      jumpi\n      jump(tag_2)\n    tag_38:\n      dup1\n      0x5ffe6146\n      eq\n      tag_19\n      jumpi\n      dup1\n      0x61c1b724\n      eq\n      tag_20\n      jumpi\n      dup1\n      0x630b5ba1\n      eq\n      tag_21\n      jumpi\n      dup1\n      0x64482f79\n      eq\n      tag_22\n      jumpi\n      jump(tag_2)\n    tag_35:\n      dup1\n      0x41441d3b\n      gt\n      tag_39\n      jumpi\n      dup1\n      0x4ea2813c\n      gt\n      tag_40\n      jumpi\n      dup1\n      0x4ea2813c\n      eq\n      tag_15\n      jumpi\n      dup1\n      0x51eb05a6\n      eq\n      tag_16\n      jumpi\n      dup1\n      0x5312ea8e\n      eq\n      tag_17\n      jumpi\n      dup1\n      0x5990c569\n      eq\n      tag_18\n      jumpi\n      jump(tag_2)\n    tag_40:\n      dup1\n      0x41441d3b\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x441a3e70\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x454b0608\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x48cd4cb1\n      eq\n      tag_14\n      jumpi\n      jump(tag_2)\n    tag_39:\n      dup1\n      0x1d5fbd87\n      gt\n      tag_41\n      jumpi\n      dup1\n      0x1d5fbd87\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x1eaaa045\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x23cf3118\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x3df7aff3\n      eq\n      tag_10\n      jumpi\n      jump(tag_2)\n    tag_41:\n      dup1\n      0x081e3eda\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x1058d281\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x1526fe27\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x17caf6f1\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/NFTMasterChef.sol\":26867:26962  function poolLength() external view returns (uint256) {\r... */\n    tag_3:\n      tag_42\n      tag_43\n      jump\t// in\n    tag_42:\n      mload(0x40)\n      tag_44\n      swap2\n      swap1\n      tag_45\n      jump\t// in\n    tag_44:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/NFTMasterChef.sol\":33573:34320  function leaveStaking(uint256 _amount) public {\r... */\n    tag_4:\n      tag_46\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_47\n      swap2\n      swap1\n      tag_48\n      jump\t// in\n    tag_47:\n      tag_49\n      jump\t// in\n    tag_46:\n      stop\n        /* \"contracts/NFTMasterChef.sol\":23943:23969  PoolInfo[] public poolInfo */\n    tag_5:\n      tag_50\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_51\n      swap2\n      swap1\n      tag_48\n      jump\t// in\n    tag_51:\n      tag_52\n      jump\t// in\n    tag_50:\n      mload(0x40)\n      tag_53\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_54\n      jump\t// in\n    tag_53:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/NFTMasterChef.sol\":24184:24218  uint256 public totalAllocPoint = 0 */\n    tag_6:\n      tag_55\n      tag_56\n      jump\t// in\n    tag_55:\n      mload(0x40)\n      tag_57\n      swap2\n      swap1\n      tag_45\n      jump\t// in\n    tag_57:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/NFTMasterChef.sol\":25460:26728  function claimNFTReward(uint256 level, uint256 _pid) public {\r... */\n    tag_7:\n      tag_58\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_59\n      swap2\n      swap1\n      tag_60\n      jump\t// in\n    tag_59:\n      tag_61\n      jump\t// in\n    tag_58:\n      stop\n        /* \"contracts/NFTMasterChef.sol\":27131:27691  function add( uint256 _allocPoint, IERC20 _lpToken, bool _withUpdate ) public onlyOwner {\r... */\n    tag_8:\n      tag_62\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_63\n      swap2\n      swap1\n      tag_64\n      jump\t// in\n    tag_63:\n      tag_65\n      jump\t// in\n    tag_62:\n      stop\n        /* \"contracts/NFTMasterChef.sol\":28169:28271  function setMigrator(IMigratorChef _migrator) public onlyOwner {\r... */\n    tag_9:\n      tag_66\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_67\n      swap2\n      swap1\n      tag_68\n      jump\t// in\n    tag_67:\n      tag_69\n      jump\t// in\n    tag_66:\n      stop\n        /* \"contracts/NFTMasterChef.sol\":34767:34876  function updatePowerPerBlock(uint256 newAmount) public onlyOwner {\r... */\n    tag_10:\n      tag_70\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_71\n      swap2\n      swap1\n      tag_48\n      jump\t// in\n    tag_71:\n      tag_72\n      jump\t// in\n    tag_70:\n      stop\n        /* \"contracts/NFTMasterChef.sol\":32724:33521  function enterStaking(uint256 _amount) public {\r... */\n    tag_11:\n      tag_73\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_74\n      swap2\n      swap1\n      tag_48\n      jump\t// in\n    tag_74:\n      tag_75\n      jump\t// in\n    tag_73:\n      stop\n        /* \"contracts/NFTMasterChef.sol\":31884:32671  function withdraw(uint256 _pid, uint256 _amount) public {\r... */\n    tag_12:\n      tag_76\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_77\n      swap2\n      swap1\n      tag_60\n      jump\t// in\n    tag_77:\n      tag_78\n      jump\t// in\n    tag_76:\n      stop\n        /* \"contracts/NFTMasterChef.sol\":28394:28885  function migrate(uint256 _pid) public {\r... */\n    tag_13:\n      tag_79\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_80\n      swap2\n      swap1\n      tag_48\n      jump\t// in\n    tag_80:\n      tag_81\n      jump\t// in\n    tag_79:\n      stop\n        /* \"contracts/NFTMasterChef.sol\":24276:24301  uint256 public startBlock */\n    tag_14:\n      tag_82\n      tag_83\n      jump\t// in\n    tag_82:\n      mload(0x40)\n      tag_84\n      swap2\n      swap1\n      tag_45\n      jump\t// in\n    tag_84:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/NFTMasterChef.sol\":25246:25452  function addNFT(IERC721 _NFT, uint256 _power) public onlyOwner {\r... */\n    tag_15:\n      tag_85\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_86\n      swap2\n      swap1\n      tag_87\n      jump\t// in\n    tag_86:\n      tag_88\n      jump\t// in\n    tag_85:\n      stop\n        /* \"contracts/NFTMasterChef.sol\":30276:30966  function updatePool(uint256 _pid) public {\r... */\n    tag_16:\n      tag_89\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_90\n      swap2\n      swap1\n      tag_48\n      jump\t// in\n    tag_90:\n      tag_91\n      jump\t// in\n    tag_89:\n      stop\n        /* \"contracts/NFTMasterChef.sol\":34399:34755  function emergencyWithdraw(uint256 _pid) public {\r... */\n    tag_17:\n      tag_92\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_93\n      swap2\n      swap1\n      tag_48\n      jump\t// in\n    tag_93:\n      tag_94\n      jump\t// in\n    tag_92:\n      stop\n        /* \"contracts/NFTMasterChef.sol\":23657:23685  uint256 public PowerPerBlock */\n    tag_18:\n      tag_95\n      tag_96\n      jump\t// in\n    tag_95:\n      mload(0x40)\n      tag_97\n      swap2\n      swap1\n      tag_45\n      jump\t// in\n    tag_97:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/NFTMasterChef.sol\":26736:26859  function updateMultiplier(uint256 multiplierNumber) public onlyOwner {\r... */\n    tag_19:\n      tag_98\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_99\n      swap2\n      swap1\n      tag_48\n      jump\t// in\n    tag_99:\n      tag_100\n      jump\t// in\n    tag_98:\n      stop\n        /* \"contracts/NFTMasterChef.sol\":23533:23559  NFTsInfo[] public nftsInfo */\n    tag_20:\n      tag_101\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_102\n      swap2\n      swap1\n      tag_48\n      jump\t// in\n    tag_102:\n      tag_103\n      jump\t// in\n    tag_101:\n      mload(0x40)\n      tag_104\n      swap3\n      swap2\n      swap1\n      tag_105\n      jump\t// in\n    tag_104:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/NFTMasterChef.sol\":30020:30200  function massUpdatePools() public {\r... */\n    tag_21:\n      tag_106\n      tag_107\n      jump\t// in\n    tag_106:\n      stop\n        /* \"contracts/NFTMasterChef.sol\":27788:28093  function set( uint256 _pid, uint256 _allocPoint, bool _withUpdate) public onlyOwner {\r... */\n    tag_22:\n      tag_108\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_109\n      swap2\n      swap1\n      tag_110\n      jump\t// in\n    tag_109:\n      tag_111\n      jump\t// in\n    tag_108:\n      stop\n        /* \"contracts/NFTMasterChef.sol\":20756:20859  function renounceOwnership() public virtual onlyOwner {\r... */\n    tag_23:\n      tag_112\n      tag_113\n      jump\t// in\n    tag_112:\n      stop\n        /* \"contracts/NFTMasterChef.sol\":23880:23909  IMigratorChef public migrator */\n    tag_24:\n      tag_114\n      tag_115\n      jump\t// in\n    tag_114:\n      mload(0x40)\n      tag_116\n      swap2\n      swap1\n      tag_117\n      jump\t// in\n    tag_116:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/NFTMasterChef.sol\":23740:23775  uint256 public BONUS_MULTIPLIER = 1 */\n    tag_25:\n      tag_118\n      tag_119\n      jump\t// in\n    tag_118:\n      mload(0x40)\n      tag_120\n      swap2\n      swap1\n      tag_45\n      jump\t// in\n    tag_120:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/NFTMasterChef.sol\":25120:25238  function getPowerBalance(address account) public view returns(uint256) {\r... */\n    tag_26:\n      tag_121\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_122\n      swap2\n      swap1\n      tag_123\n      jump\t// in\n    tag_122:\n      tag_124\n      jump\t// in\n    tag_121:\n      mload(0x40)\n      tag_125\n      swap2\n      swap1\n      tag_45\n      jump\t// in\n    tag_125:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/NFTMasterChef.sol\":20105:20192  function owner() public view virtual returns (address) {\r... */\n    tag_27:\n      tag_126\n      tag_127\n      jump\t// in\n    tag_126:\n      mload(0x40)\n      tag_128\n      swap2\n      swap1\n      tag_129\n      jump\t// in\n    tag_128:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/NFTMasterChef.sol\":28961:29105  function getMultiplier(uint256 _from, uint256 _to) public view returns (uint256) {\r... */\n    tag_28:\n      tag_130\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_131\n      swap2\n      swap1\n      tag_60\n      jump\t// in\n    tag_131:\n      tag_132\n      jump\t// in\n    tag_130:\n      mload(0x40)\n      tag_133\n      swap2\n      swap1\n      tag_45\n      jump\t// in\n    tag_133:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/NFTMasterChef.sol\":24025:24089  mapping(uint256 => mapping(address => UserInfo)) public userInfo */\n    tag_29:\n      tag_134\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_135\n      swap2\n      swap1\n      tag_136\n      jump\t// in\n    tag_135:\n      tag_137\n      jump\t// in\n    tag_134:\n      mload(0x40)\n      tag_138\n      swap3\n      swap2\n      swap1\n      tag_139\n      jump\t// in\n    tag_138:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/NFTMasterChef.sol\":23593:23610  IERC20 public DDT */\n    tag_30:\n      tag_140\n      tag_141\n      jump\t// in\n    tag_140:\n      mload(0x40)\n      tag_142\n      swap2\n      swap1\n      tag_143\n      jump\t// in\n    tag_142:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/NFTMasterChef.sol\":24310:24357  mapping(address => uint256) public powerBalance */\n    tag_31:\n      tag_144\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_145\n      swap2\n      swap1\n      tag_123\n      jump\t// in\n    tag_145:\n      tag_146\n      jump\t// in\n    tag_144:\n      mload(0x40)\n      tag_147\n      swap2\n      swap1\n      tag_45\n      jump\t// in\n    tag_147:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/NFTMasterChef.sol\":31036:31832  function deposit(uint256 _pid, uint256 _amount) public {\r... */\n    tag_32:\n      tag_148\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_149\n      swap2\n      swap1\n      tag_60\n      jump\t// in\n    tag_149:\n      tag_150\n      jump\t// in\n    tag_148:\n      stop\n        /* \"contracts/NFTMasterChef.sol\":21014:21215  function transferOwnership(address newOwner) public virtual onlyOwner {\r... */\n    tag_33:\n      tag_151\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_152\n      swap2\n      swap1\n      tag_123\n      jump\t// in\n    tag_152:\n      tag_153\n      jump\t// in\n    tag_151:\n      stop\n        /* \"contracts/NFTMasterChef.sol\":29170:29937  function pendingPower(uint256 _pid, address _user) external view returns (uint256){\r... */\n    tag_34:\n      tag_154\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_155\n      swap2\n      swap1\n      tag_136\n      jump\t// in\n    tag_155:\n      tag_156\n      jump\t// in\n    tag_154:\n      mload(0x40)\n      tag_157\n      swap2\n      swap1\n      tag_45\n      jump\t// in\n    tag_157:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/NFTMasterChef.sol\":26867:26962  function poolLength() external view returns (uint256) {\r... */\n    tag_43:\n        /* \"contracts/NFTMasterChef.sol\":26912:26919  uint256 */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":26939:26947  poolInfo */\n      0x06\n        /* \"contracts/NFTMasterChef.sol\":26939:26954  poolInfo.length */\n      dup1\n      sload\n      swap1\n      pop\n        /* \"contracts/NFTMasterChef.sol\":26932:26954  return poolInfo.length */\n      swap1\n      pop\n        /* \"contracts/NFTMasterChef.sol\":26867:26962  function poolLength() external view returns (uint256) {\r... */\n      swap1\n      jump\t// out\n        /* \"contracts/NFTMasterChef.sol\":33573:34320  function leaveStaking(uint256 _amount) public {\r... */\n    tag_49:\n        /* \"contracts/NFTMasterChef.sol\":33630:33651  PoolInfo storage pool */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":33654:33662  poolInfo */\n      0x06\n        /* \"contracts/NFTMasterChef.sol\":33663:33664  0 */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":33654:33665  poolInfo[0] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_160\n      jumpi\n      tag_161\n      tag_162\n      jump\t// in\n    tag_161:\n    tag_160:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x04\n      mul\n      add\n        /* \"contracts/NFTMasterChef.sol\":33630:33665  PoolInfo storage pool = poolInfo[0] */\n      swap1\n      pop\n        /* \"contracts/NFTMasterChef.sol\":33676:33697  UserInfo storage user */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":33700:33708  userInfo */\n      0x07\n        /* \"contracts/NFTMasterChef.sol\":33700:33711  userInfo[0] */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":33709:33710  0 */\n      dup1\n        /* \"contracts/NFTMasterChef.sol\":33700:33711  userInfo[0] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/NFTMasterChef.sol\":33700:33723  userInfo[0][msg.sender] */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":33712:33722  msg.sender */\n      caller\n        /* \"contracts/NFTMasterChef.sol\":33700:33723  userInfo[0][msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/NFTMasterChef.sol\":33676:33723  UserInfo storage user = userInfo[0][msg.sender] */\n      swap1\n      pop\n        /* \"contracts/NFTMasterChef.sol\":33757:33764  _amount */\n      dup3\n        /* \"contracts/NFTMasterChef.sol\":33742:33746  user */\n      dup2\n        /* \"contracts/NFTMasterChef.sol\":33742:33753  user.amount */\n      0x00\n      add\n      sload\n        /* \"contracts/NFTMasterChef.sol\":33742:33764  user.amount >= _amount */\n      lt\n      iszero\n        /* \"contracts/NFTMasterChef.sol\":33734:33787  require(user.amount >= _amount, \"withdraw: not good\") */\n      tag_164\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_165\n      swap1\n      tag_166\n      jump\t// in\n    tag_165:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_164:\n        /* \"contracts/NFTMasterChef.sol\":33798:33811  updatePool(0) */\n      tag_167\n        /* \"contracts/NFTMasterChef.sol\":33809:33810  0 */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":33798:33808  updatePool */\n      tag_91\n        /* \"contracts/NFTMasterChef.sol\":33798:33811  updatePool(0) */\n      jump\t// in\n    tag_167:\n        /* \"contracts/NFTMasterChef.sol\":33822:33837  uint256 pending */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":33840:33909  user.amount.mul(pool.accPowerPerShare).div(1e12).sub(user.rewardDebt) */\n      tag_168\n        /* \"contracts/NFTMasterChef.sol\":33893:33897  user */\n      dup3\n        /* \"contracts/NFTMasterChef.sol\":33893:33908  user.rewardDebt */\n      0x01\n      add\n      sload\n        /* \"contracts/NFTMasterChef.sol\":33840:33888  user.amount.mul(pool.accPowerPerShare).div(1e12) */\n      tag_169\n        /* \"contracts/NFTMasterChef.sol\":33883:33887  1e12 */\n      0xe8d4a51000\n        /* \"contracts/NFTMasterChef.sol\":33840:33878  user.amount.mul(pool.accPowerPerShare) */\n      tag_170\n        /* \"contracts/NFTMasterChef.sol\":33856:33860  pool */\n      dup8\n        /* \"contracts/NFTMasterChef.sol\":33856:33877  pool.accPowerPerShare */\n      0x03\n      add\n      sload\n        /* \"contracts/NFTMasterChef.sol\":33840:33844  user */\n      dup8\n        /* \"contracts/NFTMasterChef.sol\":33840:33851  user.amount */\n      0x00\n      add\n      sload\n        /* \"contracts/NFTMasterChef.sol\":33840:33855  user.amount.mul */\n      tag_171\n      swap1\n        /* \"contracts/NFTMasterChef.sol\":33840:33878  user.amount.mul(pool.accPowerPerShare) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_170:\n        /* \"contracts/NFTMasterChef.sol\":33840:33882  user.amount.mul(pool.accPowerPerShare).div */\n      tag_172\n      swap1\n        /* \"contracts/NFTMasterChef.sol\":33840:33888  user.amount.mul(pool.accPowerPerShare).div(1e12) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_169:\n        /* \"contracts/NFTMasterChef.sol\":33840:33892  user.amount.mul(pool.accPowerPerShare).div(1e12).sub */\n      tag_173\n      swap1\n        /* \"contracts/NFTMasterChef.sol\":33840:33909  user.amount.mul(pool.accPowerPerShare).div(1e12).sub(user.rewardDebt) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_168:\n        /* \"contracts/NFTMasterChef.sol\":33822:33909  uint256 pending = user.amount.mul(pool.accPowerPerShare).div(1e12).sub(user.rewardDebt) */\n      swap1\n      pop\n        /* \"contracts/NFTMasterChef.sol\":33933:33934  0 */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":33923:33930  pending */\n      dup2\n        /* \"contracts/NFTMasterChef.sol\":33923:33934  pending > 0 */\n      gt\n        /* \"contracts/NFTMasterChef.sol\":33920:34027  if(pending > 0) {\r... */\n      iszero\n      tag_174\n      jumpi\n        /* \"contracts/NFTMasterChef.sol\":33978:34015  powerBalance[msg.sender].add(pending) */\n      tag_175\n        /* \"contracts/NFTMasterChef.sol\":34007:34014  pending */\n      dup2\n        /* \"contracts/NFTMasterChef.sol\":33978:33990  powerBalance */\n      0x0a\n        /* \"contracts/NFTMasterChef.sol\":33978:34002  powerBalance[msg.sender] */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":33991:34001  msg.sender */\n      caller\n        /* \"contracts/NFTMasterChef.sol\":33978:34002  powerBalance[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/NFTMasterChef.sol\":33978:34006  powerBalance[msg.sender].add */\n      tag_176\n      swap1\n        /* \"contracts/NFTMasterChef.sol\":33978:34015  powerBalance[msg.sender].add(pending) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_175:\n        /* \"contracts/NFTMasterChef.sol\":33951:33963  powerBalance */\n      0x0a\n        /* \"contracts/NFTMasterChef.sol\":33951:33975  powerBalance[msg.sender] */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":33964:33974  msg.sender */\n      caller\n        /* \"contracts/NFTMasterChef.sol\":33951:33975  powerBalance[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/NFTMasterChef.sol\":33951:34015  powerBalance[msg.sender] = powerBalance[msg.sender].add(pending) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/NFTMasterChef.sol\":33920:34027  if(pending > 0) {\r... */\n    tag_174:\n        /* \"contracts/NFTMasterChef.sol\":34050:34051  0 */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":34040:34047  _amount */\n      dup5\n        /* \"contracts/NFTMasterChef.sol\":34040:34051  _amount > 0 */\n      gt\n        /* \"contracts/NFTMasterChef.sol\":34037:34188  if(_amount > 0) {\r... */\n      iszero\n      tag_177\n      jumpi\n        /* \"contracts/NFTMasterChef.sol\":34082:34106  user.amount.sub(_amount) */\n      tag_178\n        /* \"contracts/NFTMasterChef.sol\":34098:34105  _amount */\n      dup5\n        /* \"contracts/NFTMasterChef.sol\":34082:34086  user */\n      dup4\n        /* \"contracts/NFTMasterChef.sol\":34082:34093  user.amount */\n      0x00\n      add\n      sload\n        /* \"contracts/NFTMasterChef.sol\":34082:34097  user.amount.sub */\n      tag_173\n      swap1\n        /* \"contracts/NFTMasterChef.sol\":34082:34106  user.amount.sub(_amount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_178:\n        /* \"contracts/NFTMasterChef.sol\":34068:34072  user */\n      dup3\n        /* \"contracts/NFTMasterChef.sol\":34068:34079  user.amount */\n      0x00\n      add\n        /* \"contracts/NFTMasterChef.sol\":34068:34106  user.amount = user.amount.sub(_amount) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/NFTMasterChef.sol\":34121:34176  pool.lpToken.safeTransfer(address(msg.sender), _amount) */\n      tag_179\n        /* \"contracts/NFTMasterChef.sol\":34155:34165  msg.sender */\n      caller\n        /* \"contracts/NFTMasterChef.sol\":34168:34175  _amount */\n      dup6\n        /* \"contracts/NFTMasterChef.sol\":34121:34125  pool */\n      dup6\n        /* \"contracts/NFTMasterChef.sol\":34121:34133  pool.lpToken */\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/NFTMasterChef.sol\":34121:34146  pool.lpToken.safeTransfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_180\n      swap1\n        /* \"contracts/NFTMasterChef.sol\":34121:34176  pool.lpToken.safeTransfer(address(msg.sender), _amount) */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_179:\n        /* \"contracts/NFTMasterChef.sol\":34037:34188  if(_amount > 0) {\r... */\n    tag_177:\n        /* \"contracts/NFTMasterChef.sol\":34216:34264  user.amount.mul(pool.accPowerPerShare).div(1e12) */\n      tag_181\n        /* \"contracts/NFTMasterChef.sol\":34259:34263  1e12 */\n      0xe8d4a51000\n        /* \"contracts/NFTMasterChef.sol\":34216:34254  user.amount.mul(pool.accPowerPerShare) */\n      tag_182\n        /* \"contracts/NFTMasterChef.sol\":34232:34236  pool */\n      dup6\n        /* \"contracts/NFTMasterChef.sol\":34232:34253  pool.accPowerPerShare */\n      0x03\n      add\n      sload\n        /* \"contracts/NFTMasterChef.sol\":34216:34220  user */\n      dup6\n        /* \"contracts/NFTMasterChef.sol\":34216:34227  user.amount */\n      0x00\n      add\n      sload\n        /* \"contracts/NFTMasterChef.sol\":34216:34231  user.amount.mul */\n      tag_171\n      swap1\n        /* \"contracts/NFTMasterChef.sol\":34216:34254  user.amount.mul(pool.accPowerPerShare) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_182:\n        /* \"contracts/NFTMasterChef.sol\":34216:34258  user.amount.mul(pool.accPowerPerShare).div */\n      tag_172\n      swap1\n        /* \"contracts/NFTMasterChef.sol\":34216:34264  user.amount.mul(pool.accPowerPerShare).div(1e12) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_181:\n        /* \"contracts/NFTMasterChef.sol\":34198:34202  user */\n      dup3\n        /* \"contracts/NFTMasterChef.sol\":34198:34213  user.rewardDebt */\n      0x01\n      add\n        /* \"contracts/NFTMasterChef.sol\":34198:34264  user.rewardDebt = user.amount.mul(pool.accPowerPerShare).div(1e12) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/NFTMasterChef.sol\":34301:34302  0 */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":34289:34299  msg.sender */\n      caller\n        /* \"contracts/NFTMasterChef.sol\":34280:34312  Withdraw(msg.sender, 0, _amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xf279e6a1f5e320cca91135676d9cb6e44ca8a08c0b88342bcdb1144f6511b568\n        /* \"contracts/NFTMasterChef.sol\":34304:34311  _amount */\n      dup7\n        /* \"contracts/NFTMasterChef.sol\":34280:34312  Withdraw(msg.sender, 0, _amount) */\n      mload(0x40)\n      tag_183\n      swap2\n      swap1\n      tag_45\n      jump\t// in\n    tag_183:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/NFTMasterChef.sol\":33619:34320  {\r... */\n      pop\n      pop\n      pop\n        /* \"contracts/NFTMasterChef.sol\":33573:34320  function leaveStaking(uint256 _amount) public {\r... */\n      pop\n      jump\t// out\n        /* \"contracts/NFTMasterChef.sol\":23943:23969  PoolInfo[] public poolInfo */\n    tag_52:\n      0x06\n      dup2\n      dup2\n      sload\n      dup2\n      lt\n      tag_184\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_184:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x04\n      mul\n      add\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      dup1\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      dup1\n      0x01\n      add\n      sload\n      swap1\n      dup1\n      0x02\n      add\n      sload\n      swap1\n      dup1\n      0x03\n      add\n      sload\n      swap1\n      pop\n      dup5\n      jump\t// out\n        /* \"contracts/NFTMasterChef.sol\":24184:24218  uint256 public totalAllocPoint = 0 */\n    tag_56:\n      sload(0x08)\n      dup2\n      jump\t// out\n        /* \"contracts/NFTMasterChef.sol\":25460:26728  function claimNFTReward(uint256 level, uint256 _pid) public {\r... */\n    tag_61:\n        /* \"contracts/NFTMasterChef.sol\":25531:25552  PoolInfo storage pool */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":25555:25563  poolInfo */\n      0x06\n        /* \"contracts/NFTMasterChef.sol\":25564:25568  _pid */\n      dup3\n        /* \"contracts/NFTMasterChef.sol\":25555:25569  poolInfo[_pid] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_187\n      jumpi\n      tag_188\n      tag_162\n      jump\t// in\n    tag_188:\n    tag_187:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x04\n      mul\n      add\n        /* \"contracts/NFTMasterChef.sol\":25531:25569  PoolInfo storage pool = poolInfo[_pid] */\n      swap1\n      pop\n        /* \"contracts/NFTMasterChef.sol\":25580:25601  UserInfo storage user */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":25604:25612  userInfo */\n      0x07\n        /* \"contracts/NFTMasterChef.sol\":25604:25618  userInfo[_pid] */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":25613:25617  _pid */\n      dup5\n        /* \"contracts/NFTMasterChef.sol\":25604:25618  userInfo[_pid] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/NFTMasterChef.sol\":25604:25630  userInfo[_pid][msg.sender] */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":25619:25629  msg.sender */\n      caller\n        /* \"contracts/NFTMasterChef.sol\":25604:25630  userInfo[_pid][msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/NFTMasterChef.sol\":25580:25630  UserInfo storage user = userInfo[_pid][msg.sender] */\n      swap1\n      pop\n        /* \"contracts/NFTMasterChef.sol\":25641:25665  uint256 accPowerPerShare */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":25668:25672  pool */\n      dup3\n        /* \"contracts/NFTMasterChef.sol\":25668:25689  pool.accPowerPerShare */\n      0x03\n      add\n      sload\n        /* \"contracts/NFTMasterChef.sol\":25641:25689  uint256 accPowerPerShare = pool.accPowerPerShare */\n      swap1\n      pop\n        /* \"contracts/NFTMasterChef.sol\":25700:25716  uint256 lpSupply */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":25719:25723  pool */\n      dup4\n        /* \"contracts/NFTMasterChef.sol\":25719:25731  pool.lpToken */\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/NFTMasterChef.sol\":25719:25741  pool.lpToken.balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"contracts/NFTMasterChef.sol\":25750:25754  this */\n      address\n        /* \"contracts/NFTMasterChef.sol\":25719:25756  pool.lpToken.balanceOf(address(this)) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_190\n      swap2\n      swap1\n      tag_129\n      jump\t// in\n    tag_190:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_191\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_191:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_193\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_193:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_194\n      swap2\n      swap1\n      tag_195\n      jump\t// in\n    tag_194:\n        /* \"contracts/NFTMasterChef.sol\":25700:25756  uint256 lpSupply = pool.lpToken.balanceOf(address(this)) */\n      swap1\n      pop\n        /* \"contracts/NFTMasterChef.sol\":25786:25790  pool */\n      dup4\n        /* \"contracts/NFTMasterChef.sol\":25786:25806  pool.lastRewardBlock */\n      0x02\n      add\n      sload\n        /* \"contracts/NFTMasterChef.sol\":25771:25783  block.number */\n      number\n        /* \"contracts/NFTMasterChef.sol\":25771:25806  block.number > pool.lastRewardBlock */\n      gt\n        /* \"contracts/NFTMasterChef.sol\":25771:25823  block.number > pool.lastRewardBlock && lpSupply != 0 */\n      dup1\n      iszero\n      tag_196\n      jumpi\n      pop\n        /* \"contracts/NFTMasterChef.sol\":25822:25823  0 */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":25810:25818  lpSupply */\n      dup2\n        /* \"contracts/NFTMasterChef.sol\":25810:25823  lpSupply != 0 */\n      eq\n      iszero\n        /* \"contracts/NFTMasterChef.sol\":25771:25823  block.number > pool.lastRewardBlock && lpSupply != 0 */\n    tag_196:\n        /* \"contracts/NFTMasterChef.sol\":25767:26121  if (block.number > pool.lastRewardBlock && lpSupply != 0) {\r... */\n      iszero\n      tag_197\n      jumpi\n        /* \"contracts/NFTMasterChef.sol\":25840:25858  uint256 multiplier */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":25861:25910  getMultiplier(pool.lastRewardBlock, block.number) */\n      tag_198\n        /* \"contracts/NFTMasterChef.sol\":25875:25879  pool */\n      dup6\n        /* \"contracts/NFTMasterChef.sol\":25875:25895  pool.lastRewardBlock */\n      0x02\n      add\n      sload\n        /* \"contracts/NFTMasterChef.sol\":25897:25909  block.number */\n      number\n        /* \"contracts/NFTMasterChef.sol\":25861:25874  getMultiplier */\n      tag_132\n        /* \"contracts/NFTMasterChef.sol\":25861:25910  getMultiplier(pool.lastRewardBlock, block.number) */\n      jump\t// in\n    tag_198:\n        /* \"contracts/NFTMasterChef.sol\":25840:25910  uint256 multiplier = getMultiplier(pool.lastRewardBlock, block.number) */\n      swap1\n      pop\n        /* \"contracts/NFTMasterChef.sol\":25925:25944  uint256 PowerReward */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":25947:26018  multiplier.mul(PowerPerBlock).mul(pool.allocPoint).div(totalAllocPoint) */\n      tag_199\n        /* \"contracts/NFTMasterChef.sol\":26002:26017  totalAllocPoint */\n      sload(0x08)\n        /* \"contracts/NFTMasterChef.sol\":25947:25997  multiplier.mul(PowerPerBlock).mul(pool.allocPoint) */\n      tag_200\n        /* \"contracts/NFTMasterChef.sol\":25981:25985  pool */\n      dup9\n        /* \"contracts/NFTMasterChef.sol\":25981:25996  pool.allocPoint */\n      0x01\n      add\n      sload\n        /* \"contracts/NFTMasterChef.sol\":25947:25976  multiplier.mul(PowerPerBlock) */\n      tag_201\n        /* \"contracts/NFTMasterChef.sol\":25962:25975  PowerPerBlock */\n      sload(0x03)\n        /* \"contracts/NFTMasterChef.sol\":25947:25957  multiplier */\n      dup8\n        /* \"contracts/NFTMasterChef.sol\":25947:25961  multiplier.mul */\n      tag_171\n      swap1\n        /* \"contracts/NFTMasterChef.sol\":25947:25976  multiplier.mul(PowerPerBlock) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_201:\n        /* \"contracts/NFTMasterChef.sol\":25947:25980  multiplier.mul(PowerPerBlock).mul */\n      tag_171\n      swap1\n        /* \"contracts/NFTMasterChef.sol\":25947:25997  multiplier.mul(PowerPerBlock).mul(pool.allocPoint) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_200:\n        /* \"contracts/NFTMasterChef.sol\":25947:26001  multiplier.mul(PowerPerBlock).mul(pool.allocPoint).div */\n      tag_172\n      swap1\n        /* \"contracts/NFTMasterChef.sol\":25947:26018  multiplier.mul(PowerPerBlock).mul(pool.allocPoint).div(totalAllocPoint) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_199:\n        /* \"contracts/NFTMasterChef.sol\":25925:26018  uint256 PowerReward = multiplier.mul(PowerPerBlock).mul(pool.allocPoint).div(totalAllocPoint) */\n      swap1\n      pop\n        /* \"contracts/NFTMasterChef.sol\":26052:26109  accPowerPerShare.add(PowerReward.mul(1e12).div(lpSupply)) */\n      tag_202\n        /* \"contracts/NFTMasterChef.sol\":26073:26108  PowerReward.mul(1e12).div(lpSupply) */\n      tag_203\n        /* \"contracts/NFTMasterChef.sol\":26099:26107  lpSupply */\n      dup5\n        /* \"contracts/NFTMasterChef.sol\":26073:26094  PowerReward.mul(1e12) */\n      tag_204\n        /* \"contracts/NFTMasterChef.sol\":26089:26093  1e12 */\n      0xe8d4a51000\n        /* \"contracts/NFTMasterChef.sol\":26073:26084  PowerReward */\n      dup6\n        /* \"contracts/NFTMasterChef.sol\":26073:26088  PowerReward.mul */\n      tag_171\n      swap1\n        /* \"contracts/NFTMasterChef.sol\":26073:26094  PowerReward.mul(1e12) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_204:\n        /* \"contracts/NFTMasterChef.sol\":26073:26098  PowerReward.mul(1e12).div */\n      tag_172\n      swap1\n        /* \"contracts/NFTMasterChef.sol\":26073:26108  PowerReward.mul(1e12).div(lpSupply) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_203:\n        /* \"contracts/NFTMasterChef.sol\":26052:26068  accPowerPerShare */\n      dup6\n        /* \"contracts/NFTMasterChef.sol\":26052:26072  accPowerPerShare.add */\n      tag_176\n      swap1\n        /* \"contracts/NFTMasterChef.sol\":26052:26109  accPowerPerShare.add(PowerReward.mul(1e12).div(lpSupply)) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_202:\n        /* \"contracts/NFTMasterChef.sol\":26033:26109  accPowerPerShare = accPowerPerShare.add(PowerReward.mul(1e12).div(lpSupply)) */\n      swap4\n      pop\n        /* \"contracts/NFTMasterChef.sol\":25825:26121  {\r... */\n      pop\n      pop\n        /* \"contracts/NFTMasterChef.sol\":25767:26121  if (block.number > pool.lastRewardBlock && lpSupply != 0) {\r... */\n    tag_197:\n        /* \"contracts/NFTMasterChef.sol\":26131:26146  uint256 pending */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":26149:26213  user.amount.mul(accPowerPerShare).div(1e12).sub(user.rewardDebt) */\n      tag_205\n        /* \"contracts/NFTMasterChef.sol\":26197:26201  user */\n      dup5\n        /* \"contracts/NFTMasterChef.sol\":26197:26212  user.rewardDebt */\n      0x01\n      add\n      sload\n        /* \"contracts/NFTMasterChef.sol\":26149:26192  user.amount.mul(accPowerPerShare).div(1e12) */\n      tag_206\n        /* \"contracts/NFTMasterChef.sol\":26187:26191  1e12 */\n      0xe8d4a51000\n        /* \"contracts/NFTMasterChef.sol\":26149:26182  user.amount.mul(accPowerPerShare) */\n      tag_207\n        /* \"contracts/NFTMasterChef.sol\":26165:26181  accPowerPerShare */\n      dup8\n        /* \"contracts/NFTMasterChef.sol\":26149:26153  user */\n      dup10\n        /* \"contracts/NFTMasterChef.sol\":26149:26160  user.amount */\n      0x00\n      add\n      sload\n        /* \"contracts/NFTMasterChef.sol\":26149:26164  user.amount.mul */\n      tag_171\n      swap1\n        /* \"contracts/NFTMasterChef.sol\":26149:26182  user.amount.mul(accPowerPerShare) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_207:\n        /* \"contracts/NFTMasterChef.sol\":26149:26186  user.amount.mul(accPowerPerShare).div */\n      tag_172\n      swap1\n        /* \"contracts/NFTMasterChef.sol\":26149:26192  user.amount.mul(accPowerPerShare).div(1e12) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_206:\n        /* \"contracts/NFTMasterChef.sol\":26149:26196  user.amount.mul(accPowerPerShare).div(1e12).sub */\n      tag_173\n      swap1\n        /* \"contracts/NFTMasterChef.sol\":26149:26213  user.amount.mul(accPowerPerShare).div(1e12).sub(user.rewardDebt) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_205:\n        /* \"contracts/NFTMasterChef.sol\":26131:26213  uint256 pending = user.amount.mul(accPowerPerShare).div(1e12).sub(user.rewardDebt) */\n      swap1\n      pop\n        /* \"contracts/NFTMasterChef.sol\":26224:26244  NFTsInfo storage nft */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":26247:26255  nftsInfo */\n      0x01\n        /* \"contracts/NFTMasterChef.sol\":26256:26261  level */\n      dup9\n        /* \"contracts/NFTMasterChef.sol\":26247:26262  nftsInfo[level] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_208\n      jumpi\n      tag_209\n      tag_162\n      jump\t// in\n    tag_209:\n    tag_208:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x02\n      mul\n      add\n        /* \"contracts/NFTMasterChef.sol\":26224:26262  NFTsInfo storage nft = nftsInfo[level] */\n      swap1\n      pop\n        /* \"contracts/NFTMasterChef.sol\":26273:26286  uint256 total */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":26289:26326  pending.add(powerBalance[msg.sender]) */\n      tag_211\n        /* \"contracts/NFTMasterChef.sol\":26301:26313  powerBalance */\n      0x0a\n        /* \"contracts/NFTMasterChef.sol\":26301:26325  powerBalance[msg.sender] */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":26314:26324  msg.sender */\n      caller\n        /* \"contracts/NFTMasterChef.sol\":26301:26325  powerBalance[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/NFTMasterChef.sol\":26289:26296  pending */\n      dup5\n        /* \"contracts/NFTMasterChef.sol\":26289:26300  pending.add */\n      tag_176\n      swap1\n        /* \"contracts/NFTMasterChef.sol\":26289:26326  pending.add(powerBalance[msg.sender]) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_211:\n        /* \"contracts/NFTMasterChef.sol\":26273:26326  uint256 total = pending.add(powerBalance[msg.sender]) */\n      swap1\n      pop\n        /* \"contracts/NFTMasterChef.sol\":26348:26351  nft */\n      dup2\n        /* \"contracts/NFTMasterChef.sol\":26348:26357  nft.power */\n      0x01\n      add\n      sload\n        /* \"contracts/NFTMasterChef.sol\":26340:26345  total */\n      dup2\n        /* \"contracts/NFTMasterChef.sol\":26340:26357  total > nft.power */\n      gt\n        /* \"contracts/NFTMasterChef.sol\":26337:26525  if(total > nft.power){\r... */\n      iszero\n      tag_212\n      jumpi\n        /* \"contracts/NFTMasterChef.sol\":26384:26385  0 */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":26376:26380  _pid */\n      dup9\n        /* \"contracts/NFTMasterChef.sol\":26376:26385  _pid == 0 */\n      eq\n        /* \"contracts/NFTMasterChef.sol\":26373:26436  if(_pid == 0){\r... */\n      iszero\n      tag_213\n      jumpi\n        /* \"contracts/NFTMasterChef.sol\":26405:26420  leaveStaking(0) */\n      tag_214\n        /* \"contracts/NFTMasterChef.sol\":26418:26419  0 */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":26405:26417  leaveStaking */\n      tag_49\n        /* \"contracts/NFTMasterChef.sol\":26405:26420  leaveStaking(0) */\n      jump\t// in\n    tag_214:\n        /* \"contracts/NFTMasterChef.sol\":26373:26436  if(_pid == 0){\r... */\n    tag_213:\n        /* \"contracts/NFTMasterChef.sol\":26461:26462  0 */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":26453:26457  _pid */\n      dup9\n        /* \"contracts/NFTMasterChef.sol\":26453:26462  _pid != 0 */\n      eq\n        /* \"contracts/NFTMasterChef.sol\":26450:26514  if(_pid != 0){\r... */\n      tag_215\n      jumpi\n        /* \"contracts/NFTMasterChef.sol\":26482:26498  withdraw(_pid,0) */\n      tag_216\n        /* \"contracts/NFTMasterChef.sol\":26491:26495  _pid */\n      dup9\n        /* \"contracts/NFTMasterChef.sol\":26496:26497  0 */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":26482:26490  withdraw */\n      tag_78\n        /* \"contracts/NFTMasterChef.sol\":26482:26498  withdraw(_pid,0) */\n      jump\t// in\n    tag_216:\n        /* \"contracts/NFTMasterChef.sol\":26450:26514  if(_pid != 0){\r... */\n    tag_215:\n        /* \"contracts/NFTMasterChef.sol\":26337:26525  if(total > nft.power){\r... */\n    tag_212:\n        /* \"contracts/NFTMasterChef.sol\":26555:26567  powerBalance */\n      0x0a\n        /* \"contracts/NFTMasterChef.sol\":26555:26579  powerBalance[msg.sender] */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":26568:26578  msg.sender */\n      caller\n        /* \"contracts/NFTMasterChef.sol\":26555:26579  powerBalance[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/NFTMasterChef.sol\":26543:26546  nft */\n      dup3\n        /* \"contracts/NFTMasterChef.sol\":26543:26552  nft.power */\n      0x01\n      add\n      sload\n        /* \"contracts/NFTMasterChef.sol\":26543:26579  nft.power < powerBalance[msg.sender] */\n      lt\n        /* \"contracts/NFTMasterChef.sol\":26535:26603  require(nft.power < powerBalance[msg.sender], \"Power is not enough\") */\n      tag_217\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_218\n      swap1\n      tag_219\n      jump\t// in\n    tag_218:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_217:\n        /* \"contracts/NFTMasterChef.sol\":26641:26680  powerBalance[msg.sender].sub(nft.power) */\n      tag_220\n        /* \"contracts/NFTMasterChef.sol\":26670:26673  nft */\n      dup3\n        /* \"contracts/NFTMasterChef.sol\":26670:26679  nft.power */\n      0x01\n      add\n      sload\n        /* \"contracts/NFTMasterChef.sol\":26641:26653  powerBalance */\n      0x0a\n        /* \"contracts/NFTMasterChef.sol\":26641:26665  powerBalance[msg.sender] */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":26654:26664  msg.sender */\n      caller\n        /* \"contracts/NFTMasterChef.sol\":26641:26665  powerBalance[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/NFTMasterChef.sol\":26641:26669  powerBalance[msg.sender].sub */\n      tag_173\n      swap1\n        /* \"contracts/NFTMasterChef.sol\":26641:26680  powerBalance[msg.sender].sub(nft.power) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_220:\n        /* \"contracts/NFTMasterChef.sol\":26614:26626  powerBalance */\n      0x0a\n        /* \"contracts/NFTMasterChef.sol\":26614:26638  powerBalance[msg.sender] */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":26627:26637  msg.sender */\n      caller\n        /* \"contracts/NFTMasterChef.sol\":26614:26638  powerBalance[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/NFTMasterChef.sol\":26614:26680  powerBalance[msg.sender] = powerBalance[msg.sender].sub(nft.power) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/NFTMasterChef.sol\":26691:26694  nft */\n      dup2\n        /* \"contracts/NFTMasterChef.sol\":26691:26698  nft.NFT */\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/NFTMasterChef.sol\":26691:26708  nft.NFT.createNFT */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x17e5883c\n        /* \"contracts/NFTMasterChef.sol\":26709:26719  msg.sender */\n      caller\n        /* \"contracts/NFTMasterChef.sol\":26691:26720  nft.NFT.createNFT(msg.sender) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_221\n      swap2\n      swap1\n      tag_129\n      jump\t// in\n    tag_221:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_222\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_222:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_224\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_224:\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/NFTMasterChef.sol\":25520:26728  {\r... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/NFTMasterChef.sol\":25460:26728  function claimNFTReward(uint256 level, uint256 _pid) public {\r... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/NFTMasterChef.sol\":27131:27691  function add( uint256 _allocPoint, IERC20 _lpToken, bool _withUpdate ) public onlyOwner {\r... */\n    tag_65:\n        /* \"contracts/NFTMasterChef.sol\":20336:20348  _msgSender() */\n      tag_226\n        /* \"contracts/NFTMasterChef.sol\":20336:20346  _msgSender */\n      tag_227\n        /* \"contracts/NFTMasterChef.sol\":20336:20348  _msgSender() */\n      jump\t// in\n    tag_226:\n        /* \"contracts/NFTMasterChef.sol\":20325:20348  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/NFTMasterChef.sol\":20325:20332  owner() */\n      tag_228\n        /* \"contracts/NFTMasterChef.sol\":20325:20330  owner */\n      tag_127\n        /* \"contracts/NFTMasterChef.sol\":20325:20332  owner() */\n      jump\t// in\n    tag_228:\n        /* \"contracts/NFTMasterChef.sol\":20325:20348  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/NFTMasterChef.sol\":20317:20385  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_229\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_230\n      swap1\n      tag_231\n      jump\t// in\n    tag_230:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_229:\n        /* \"contracts/NFTMasterChef.sol\":27234:27245  _withUpdate */\n      dup1\n        /* \"contracts/NFTMasterChef.sol\":27230:27291  if (_withUpdate) {\r... */\n      iszero\n      tag_233\n      jumpi\n        /* \"contracts/NFTMasterChef.sol\":27262:27279  massUpdatePools() */\n      tag_234\n        /* \"contracts/NFTMasterChef.sol\":27262:27277  massUpdatePools */\n      tag_107\n        /* \"contracts/NFTMasterChef.sol\":27262:27279  massUpdatePools() */\n      jump\t// in\n    tag_234:\n        /* \"contracts/NFTMasterChef.sol\":27230:27291  if (_withUpdate) {\r... */\n    tag_233:\n        /* \"contracts/NFTMasterChef.sol\":27301:27324  uint256 lastRewardBlock */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":27342:27352  startBlock */\n      sload(0x09)\n        /* \"contracts/NFTMasterChef.sol\":27327:27339  block.number */\n      number\n        /* \"contracts/NFTMasterChef.sol\":27327:27352  block.number > startBlock */\n      gt\n        /* \"contracts/NFTMasterChef.sol\":27327:27380  block.number > startBlock ? block.number : startBlock */\n      tag_235\n      jumpi\n        /* \"contracts/NFTMasterChef.sol\":27370:27380  startBlock */\n      sload(0x09)\n        /* \"contracts/NFTMasterChef.sol\":27327:27380  block.number > startBlock ? block.number : startBlock */\n      jump(tag_236)\n    tag_235:\n        /* \"contracts/NFTMasterChef.sol\":27355:27367  block.number */\n      number\n        /* \"contracts/NFTMasterChef.sol\":27327:27380  block.number > startBlock ? block.number : startBlock */\n    tag_236:\n        /* \"contracts/NFTMasterChef.sol\":27301:27380  uint256 lastRewardBlock = block.number > startBlock ? block.number : startBlock */\n      swap1\n      pop\n        /* \"contracts/NFTMasterChef.sol\":27409:27441  totalAllocPoint.add(_allocPoint) */\n      tag_237\n        /* \"contracts/NFTMasterChef.sol\":27429:27440  _allocPoint */\n      dup5\n        /* \"contracts/NFTMasterChef.sol\":27409:27424  totalAllocPoint */\n      sload(0x08)\n        /* \"contracts/NFTMasterChef.sol\":27409:27428  totalAllocPoint.add */\n      tag_176\n      swap1\n        /* \"contracts/NFTMasterChef.sol\":27409:27441  totalAllocPoint.add(_allocPoint) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_237:\n        /* \"contracts/NFTMasterChef.sol\":27391:27406  totalAllocPoint */\n      0x08\n        /* \"contracts/NFTMasterChef.sol\":27391:27441  totalAllocPoint = totalAllocPoint.add(_allocPoint) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/NFTMasterChef.sol\":27452:27460  poolInfo */\n      0x06\n        /* \"contracts/NFTMasterChef.sol\":27480:27672  PoolInfo({\r... */\n      mload(0x40)\n      dup1\n      0x80\n      add\n      0x40\n      mstore\n      dup1\n        /* \"contracts/NFTMasterChef.sol\":27517:27525  _lpToken */\n      dup6\n        /* \"contracts/NFTMasterChef.sol\":27480:27672  PoolInfo({\r... */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/NFTMasterChef.sol\":27556:27567  _allocPoint */\n      dup7\n        /* \"contracts/NFTMasterChef.sol\":27480:27672  PoolInfo({\r... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/NFTMasterChef.sol\":27603:27618  lastRewardBlock */\n      dup4\n        /* \"contracts/NFTMasterChef.sol\":27480:27672  PoolInfo({\r... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/NFTMasterChef.sol\":27655:27656  0 */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":27480:27672  PoolInfo({\r... */\n      dup2\n      mstore\n      pop\n        /* \"contracts/NFTMasterChef.sol\":27452:27683  poolInfo.push(\r... */\n      swap1\n      dup1\n      0x01\n      dup2\n      sload\n      add\n      dup1\n      dup3\n      sstore\n      dup1\n      swap2\n      pop\n      pop\n      0x01\n      swap1\n      sub\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x04\n      mul\n      add\n      0x00\n      swap1\n      swap2\n      swap1\n      swap2\n      swap1\n      swap2\n      pop\n      0x00\n      dup3\n      add\n      mload\n      dup2\n      0x00\n      add\n      exp(0x0100, 0x00)\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n      0x20\n      dup3\n      add\n      mload\n      dup2\n      0x01\n      add\n      sstore\n      0x40\n      dup3\n      add\n      mload\n      dup2\n      0x02\n      add\n      sstore\n      0x60\n      dup3\n      add\n      mload\n      dup2\n      0x03\n      add\n      sstore\n      pop\n      pop\n        /* \"contracts/NFTMasterChef.sol\":27219:27691  {\r... */\n      pop\n        /* \"contracts/NFTMasterChef.sol\":27131:27691  function add( uint256 _allocPoint, IERC20 _lpToken, bool _withUpdate ) public onlyOwner {\r... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/NFTMasterChef.sol\":28169:28271  function setMigrator(IMigratorChef _migrator) public onlyOwner {\r... */\n    tag_69:\n        /* \"contracts/NFTMasterChef.sol\":20336:20348  _msgSender() */\n      tag_240\n        /* \"contracts/NFTMasterChef.sol\":20336:20346  _msgSender */\n      tag_227\n        /* \"contracts/NFTMasterChef.sol\":20336:20348  _msgSender() */\n      jump\t// in\n    tag_240:\n        /* \"contracts/NFTMasterChef.sol\":20325:20348  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/NFTMasterChef.sol\":20325:20332  owner() */\n      tag_241\n        /* \"contracts/NFTMasterChef.sol\":20325:20330  owner */\n      tag_127\n        /* \"contracts/NFTMasterChef.sol\":20325:20332  owner() */\n      jump\t// in\n    tag_241:\n        /* \"contracts/NFTMasterChef.sol\":20325:20348  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/NFTMasterChef.sol\":20317:20385  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_242\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_243\n      swap1\n      tag_231\n      jump\t// in\n    tag_243:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_242:\n        /* \"contracts/NFTMasterChef.sol\":28254:28263  _migrator */\n      dup1\n        /* \"contracts/NFTMasterChef.sol\":28243:28251  migrator */\n      0x05\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":28243:28263  migrator = _migrator */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/NFTMasterChef.sol\":28169:28271  function setMigrator(IMigratorChef _migrator) public onlyOwner {\r... */\n      pop\n      jump\t// out\n        /* \"contracts/NFTMasterChef.sol\":34767:34876  function updatePowerPerBlock(uint256 newAmount) public onlyOwner {\r... */\n    tag_72:\n        /* \"contracts/NFTMasterChef.sol\":20336:20348  _msgSender() */\n      tag_246\n        /* \"contracts/NFTMasterChef.sol\":20336:20346  _msgSender */\n      tag_227\n        /* \"contracts/NFTMasterChef.sol\":20336:20348  _msgSender() */\n      jump\t// in\n    tag_246:\n        /* \"contracts/NFTMasterChef.sol\":20325:20348  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/NFTMasterChef.sol\":20325:20332  owner() */\n      tag_247\n        /* \"contracts/NFTMasterChef.sol\":20325:20330  owner */\n      tag_127\n        /* \"contracts/NFTMasterChef.sol\":20325:20332  owner() */\n      jump\t// in\n    tag_247:\n        /* \"contracts/NFTMasterChef.sol\":20325:20348  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/NFTMasterChef.sol\":20317:20385  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_248\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_249\n      swap1\n      tag_231\n      jump\t// in\n    tag_249:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_248:\n        /* \"contracts/NFTMasterChef.sol\":34859:34868  newAmount */\n      dup1\n        /* \"contracts/NFTMasterChef.sol\":34843:34856  PowerPerBlock */\n      0x03\n        /* \"contracts/NFTMasterChef.sol\":34843:34868  PowerPerBlock = newAmount */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/NFTMasterChef.sol\":34767:34876  function updatePowerPerBlock(uint256 newAmount) public onlyOwner {\r... */\n      pop\n      jump\t// out\n        /* \"contracts/NFTMasterChef.sol\":32724:33521  function enterStaking(uint256 _amount) public {\r... */\n    tag_75:\n        /* \"contracts/NFTMasterChef.sol\":32781:32802  PoolInfo storage pool */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":32805:32813  poolInfo */\n      0x06\n        /* \"contracts/NFTMasterChef.sol\":32814:32815  0 */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":32805:32816  poolInfo[0] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_252\n      jumpi\n      tag_253\n      tag_162\n      jump\t// in\n    tag_253:\n    tag_252:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x04\n      mul\n      add\n        /* \"contracts/NFTMasterChef.sol\":32781:32816  PoolInfo storage pool = poolInfo[0] */\n      swap1\n      pop\n        /* \"contracts/NFTMasterChef.sol\":32827:32848  UserInfo storage user */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":32851:32859  userInfo */\n      0x07\n        /* \"contracts/NFTMasterChef.sol\":32851:32862  userInfo[0] */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":32860:32861  0 */\n      dup1\n        /* \"contracts/NFTMasterChef.sol\":32851:32862  userInfo[0] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/NFTMasterChef.sol\":32851:32883  userInfo[0][address(msg.sender)] */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":32871:32881  msg.sender */\n      caller\n        /* \"contracts/NFTMasterChef.sol\":32851:32883  userInfo[0][address(msg.sender)] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/NFTMasterChef.sol\":32827:32883  UserInfo storage user = userInfo[0][address(msg.sender)] */\n      swap1\n      pop\n        /* \"contracts/NFTMasterChef.sol\":32904:32917  updatePool(0) */\n      tag_255\n        /* \"contracts/NFTMasterChef.sol\":32915:32916  0 */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":32904:32914  updatePool */\n      tag_91\n        /* \"contracts/NFTMasterChef.sol\":32904:32917  updatePool(0) */\n      jump\t// in\n    tag_255:\n        /* \"contracts/NFTMasterChef.sol\":32946:32947  0 */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":32932:32936  user */\n      dup2\n        /* \"contracts/NFTMasterChef.sol\":32932:32943  user.amount */\n      0x00\n      add\n      sload\n        /* \"contracts/NFTMasterChef.sol\":32932:32947  user.amount > 0 */\n      gt\n        /* \"contracts/NFTMasterChef.sol\":32928:33210  if (user.amount > 0) {\r... */\n      iszero\n      tag_256\n      jumpi\n        /* \"contracts/NFTMasterChef.sol\":32964:32979  uint256 pending */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":32982:33051  user.amount.mul(pool.accPowerPerShare).div(1e12).sub(user.rewardDebt) */\n      tag_257\n        /* \"contracts/NFTMasterChef.sol\":33035:33039  user */\n      dup3\n        /* \"contracts/NFTMasterChef.sol\":33035:33050  user.rewardDebt */\n      0x01\n      add\n      sload\n        /* \"contracts/NFTMasterChef.sol\":32982:33030  user.amount.mul(pool.accPowerPerShare).div(1e12) */\n      tag_258\n        /* \"contracts/NFTMasterChef.sol\":33025:33029  1e12 */\n      0xe8d4a51000\n        /* \"contracts/NFTMasterChef.sol\":32982:33020  user.amount.mul(pool.accPowerPerShare) */\n      tag_259\n        /* \"contracts/NFTMasterChef.sol\":32998:33002  pool */\n      dup8\n        /* \"contracts/NFTMasterChef.sol\":32998:33019  pool.accPowerPerShare */\n      0x03\n      add\n      sload\n        /* \"contracts/NFTMasterChef.sol\":32982:32986  user */\n      dup8\n        /* \"contracts/NFTMasterChef.sol\":32982:32993  user.amount */\n      0x00\n      add\n      sload\n        /* \"contracts/NFTMasterChef.sol\":32982:32997  user.amount.mul */\n      tag_171\n      swap1\n        /* \"contracts/NFTMasterChef.sol\":32982:33020  user.amount.mul(pool.accPowerPerShare) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_259:\n        /* \"contracts/NFTMasterChef.sol\":32982:33024  user.amount.mul(pool.accPowerPerShare).div */\n      tag_172\n      swap1\n        /* \"contracts/NFTMasterChef.sol\":32982:33030  user.amount.mul(pool.accPowerPerShare).div(1e12) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_258:\n        /* \"contracts/NFTMasterChef.sol\":32982:33034  user.amount.mul(pool.accPowerPerShare).div(1e12).sub */\n      tag_173\n      swap1\n        /* \"contracts/NFTMasterChef.sol\":32982:33051  user.amount.mul(pool.accPowerPerShare).div(1e12).sub(user.rewardDebt) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_257:\n        /* \"contracts/NFTMasterChef.sol\":32964:33051  uint256 pending = user.amount.mul(pool.accPowerPerShare).div(1e12).sub(user.rewardDebt) */\n      swap1\n      pop\n        /* \"contracts/NFTMasterChef.sol\":33079:33080  0 */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":33069:33076  pending */\n      dup2\n        /* \"contracts/NFTMasterChef.sol\":33069:33080  pending > 0 */\n      gt\n        /* \"contracts/NFTMasterChef.sol\":33066:33199  if(pending > 0) {\r... */\n      iszero\n      tag_260\n      jumpi\n        /* \"contracts/NFTMasterChef.sol\":33137:33183  powerBalance[address(msg.sender)].add(pending) */\n      tag_261\n        /* \"contracts/NFTMasterChef.sol\":33175:33182  pending */\n      dup2\n        /* \"contracts/NFTMasterChef.sol\":33137:33149  powerBalance */\n      0x0a\n        /* \"contracts/NFTMasterChef.sol\":33137:33170  powerBalance[address(msg.sender)] */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":33158:33168  msg.sender */\n      caller\n        /* \"contracts/NFTMasterChef.sol\":33137:33170  powerBalance[address(msg.sender)] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/NFTMasterChef.sol\":33137:33174  powerBalance[address(msg.sender)].add */\n      tag_176\n      swap1\n        /* \"contracts/NFTMasterChef.sol\":33137:33183  powerBalance[address(msg.sender)].add(pending) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_261:\n        /* \"contracts/NFTMasterChef.sol\":33101:33113  powerBalance */\n      0x0a\n        /* \"contracts/NFTMasterChef.sol\":33101:33134  powerBalance[address(msg.sender)] */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":33122:33132  msg.sender */\n      caller\n        /* \"contracts/NFTMasterChef.sol\":33101:33134  powerBalance[address(msg.sender)] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/NFTMasterChef.sol\":33101:33183  powerBalance[address(msg.sender)] = powerBalance[address(msg.sender)].add(pending) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/NFTMasterChef.sol\":33066:33199  if(pending > 0) {\r... */\n    tag_260:\n        /* \"contracts/NFTMasterChef.sol\":32949:33210  {\r... */\n      pop\n        /* \"contracts/NFTMasterChef.sol\":32928:33210  if (user.amount > 0) {\r... */\n    tag_256:\n        /* \"contracts/NFTMasterChef.sol\":33233:33234  0 */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":33223:33230  _amount */\n      dup4\n        /* \"contracts/NFTMasterChef.sol\":33223:33234  _amount > 0 */\n      gt\n        /* \"contracts/NFTMasterChef.sol\":33220:33390  if(_amount > 0) {\r... */\n      iszero\n      tag_262\n      jumpi\n        /* \"contracts/NFTMasterChef.sol\":33251:33325  pool.lpToken.safeTransferFrom(address(msg.sender), address(this), _amount) */\n      tag_263\n        /* \"contracts/NFTMasterChef.sol\":33289:33299  msg.sender */\n      caller\n        /* \"contracts/NFTMasterChef.sol\":33310:33314  this */\n      address\n        /* \"contracts/NFTMasterChef.sol\":33317:33324  _amount */\n      dup6\n        /* \"contracts/NFTMasterChef.sol\":33251:33255  pool */\n      dup6\n        /* \"contracts/NFTMasterChef.sol\":33251:33263  pool.lpToken */\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/NFTMasterChef.sol\":33251:33280  pool.lpToken.safeTransferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_264\n      swap1\n        /* \"contracts/NFTMasterChef.sol\":33251:33325  pool.lpToken.safeTransferFrom(address(msg.sender), address(this), _amount) */\n      swap4\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_263:\n        /* \"contracts/NFTMasterChef.sol\":33354:33378  user.amount.add(_amount) */\n      tag_265\n        /* \"contracts/NFTMasterChef.sol\":33370:33377  _amount */\n      dup4\n        /* \"contracts/NFTMasterChef.sol\":33354:33358  user */\n      dup3\n        /* \"contracts/NFTMasterChef.sol\":33354:33365  user.amount */\n      0x00\n      add\n      sload\n        /* \"contracts/NFTMasterChef.sol\":33354:33369  user.amount.add */\n      tag_176\n      swap1\n        /* \"contracts/NFTMasterChef.sol\":33354:33378  user.amount.add(_amount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_265:\n        /* \"contracts/NFTMasterChef.sol\":33340:33344  user */\n      dup2\n        /* \"contracts/NFTMasterChef.sol\":33340:33351  user.amount */\n      0x00\n      add\n        /* \"contracts/NFTMasterChef.sol\":33340:33378  user.amount = user.amount.add(_amount) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/NFTMasterChef.sol\":33220:33390  if(_amount > 0) {\r... */\n    tag_262:\n        /* \"contracts/NFTMasterChef.sol\":33418:33466  user.amount.mul(pool.accPowerPerShare).div(1e12) */\n      tag_266\n        /* \"contracts/NFTMasterChef.sol\":33461:33465  1e12 */\n      0xe8d4a51000\n        /* \"contracts/NFTMasterChef.sol\":33418:33456  user.amount.mul(pool.accPowerPerShare) */\n      tag_267\n        /* \"contracts/NFTMasterChef.sol\":33434:33438  pool */\n      dup5\n        /* \"contracts/NFTMasterChef.sol\":33434:33455  pool.accPowerPerShare */\n      0x03\n      add\n      sload\n        /* \"contracts/NFTMasterChef.sol\":33418:33422  user */\n      dup5\n        /* \"contracts/NFTMasterChef.sol\":33418:33429  user.amount */\n      0x00\n      add\n      sload\n        /* \"contracts/NFTMasterChef.sol\":33418:33433  user.amount.mul */\n      tag_171\n      swap1\n        /* \"contracts/NFTMasterChef.sol\":33418:33456  user.amount.mul(pool.accPowerPerShare) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_267:\n        /* \"contracts/NFTMasterChef.sol\":33418:33460  user.amount.mul(pool.accPowerPerShare).div */\n      tag_172\n      swap1\n        /* \"contracts/NFTMasterChef.sol\":33418:33466  user.amount.mul(pool.accPowerPerShare).div(1e12) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_266:\n        /* \"contracts/NFTMasterChef.sol\":33400:33404  user */\n      dup2\n        /* \"contracts/NFTMasterChef.sol\":33400:33415  user.rewardDebt */\n      0x01\n      add\n        /* \"contracts/NFTMasterChef.sol\":33400:33466  user.rewardDebt = user.amount.mul(pool.accPowerPerShare).div(1e12) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/NFTMasterChef.sol\":33502:33503  0 */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":33490:33500  msg.sender */\n      caller\n        /* \"contracts/NFTMasterChef.sol\":33482:33513  Deposit(msg.sender, 0, _amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x90890809c654f11d6e72a28fa60149770a0d11ec6c92319d6ceb2bb0a4ea1a15\n        /* \"contracts/NFTMasterChef.sol\":33505:33512  _amount */\n      dup6\n        /* \"contracts/NFTMasterChef.sol\":33482:33513  Deposit(msg.sender, 0, _amount) */\n      mload(0x40)\n      tag_268\n      swap2\n      swap1\n      tag_45\n      jump\t// in\n    tag_268:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/NFTMasterChef.sol\":32770:33521  {\r... */\n      pop\n      pop\n        /* \"contracts/NFTMasterChef.sol\":32724:33521  function enterStaking(uint256 _amount) public {\r... */\n      pop\n      jump\t// out\n        /* \"contracts/NFTMasterChef.sol\":31884:32671  function withdraw(uint256 _pid, uint256 _amount) public {\r... */\n    tag_78:\n        /* \"contracts/NFTMasterChef.sol\":31970:31971  0 */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":31962:31966  _pid */\n      dup3\n        /* \"contracts/NFTMasterChef.sol\":31962:31971  _pid != 0 */\n      eq\n      iszero\n        /* \"contracts/NFTMasterChef.sol\":31953:32003  require (_pid != 0, 'withdraw Power by unstaking') */\n      tag_270\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_271\n      swap1\n      tag_272\n      jump\t// in\n    tag_271:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_270:\n        /* \"contracts/NFTMasterChef.sol\":32016:32037  PoolInfo storage pool */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":32040:32048  poolInfo */\n      0x06\n        /* \"contracts/NFTMasterChef.sol\":32049:32053  _pid */\n      dup4\n        /* \"contracts/NFTMasterChef.sol\":32040:32054  poolInfo[_pid] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_273\n      jumpi\n      tag_274\n      tag_162\n      jump\t// in\n    tag_274:\n    tag_273:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x04\n      mul\n      add\n        /* \"contracts/NFTMasterChef.sol\":32016:32054  PoolInfo storage pool = poolInfo[_pid] */\n      swap1\n      pop\n        /* \"contracts/NFTMasterChef.sol\":32065:32086  UserInfo storage user */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":32089:32097  userInfo */\n      0x07\n        /* \"contracts/NFTMasterChef.sol\":32089:32103  userInfo[_pid] */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":32098:32102  _pid */\n      dup6\n        /* \"contracts/NFTMasterChef.sol\":32089:32103  userInfo[_pid] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/NFTMasterChef.sol\":32089:32115  userInfo[_pid][msg.sender] */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":32104:32114  msg.sender */\n      caller\n        /* \"contracts/NFTMasterChef.sol\":32089:32115  userInfo[_pid][msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/NFTMasterChef.sol\":32065:32115  UserInfo storage user = userInfo[_pid][msg.sender] */\n      swap1\n      pop\n        /* \"contracts/NFTMasterChef.sol\":32149:32156  _amount */\n      dup3\n        /* \"contracts/NFTMasterChef.sol\":32134:32138  user */\n      dup2\n        /* \"contracts/NFTMasterChef.sol\":32134:32145  user.amount */\n      0x00\n      add\n      sload\n        /* \"contracts/NFTMasterChef.sol\":32134:32156  user.amount >= _amount */\n      lt\n      iszero\n        /* \"contracts/NFTMasterChef.sol\":32126:32179  require(user.amount >= _amount, \"withdraw: not good\") */\n      tag_276\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_277\n      swap1\n      tag_166\n      jump\t// in\n    tag_277:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_276:\n        /* \"contracts/NFTMasterChef.sol\":32190:32206  updatePool(_pid) */\n      tag_278\n        /* \"contracts/NFTMasterChef.sol\":32201:32205  _pid */\n      dup5\n        /* \"contracts/NFTMasterChef.sol\":32190:32200  updatePool */\n      tag_91\n        /* \"contracts/NFTMasterChef.sol\":32190:32206  updatePool(_pid) */\n      jump\t// in\n    tag_278:\n        /* \"contracts/NFTMasterChef.sol\":32217:32232  uint256 pending */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":32235:32304  user.amount.mul(pool.accPowerPerShare).div(1e12).sub(user.rewardDebt) */\n      tag_279\n        /* \"contracts/NFTMasterChef.sol\":32288:32292  user */\n      dup3\n        /* \"contracts/NFTMasterChef.sol\":32288:32303  user.rewardDebt */\n      0x01\n      add\n      sload\n        /* \"contracts/NFTMasterChef.sol\":32235:32283  user.amount.mul(pool.accPowerPerShare).div(1e12) */\n      tag_280\n        /* \"contracts/NFTMasterChef.sol\":32278:32282  1e12 */\n      0xe8d4a51000\n        /* \"contracts/NFTMasterChef.sol\":32235:32273  user.amount.mul(pool.accPowerPerShare) */\n      tag_281\n        /* \"contracts/NFTMasterChef.sol\":32251:32255  pool */\n      dup8\n        /* \"contracts/NFTMasterChef.sol\":32251:32272  pool.accPowerPerShare */\n      0x03\n      add\n      sload\n        /* \"contracts/NFTMasterChef.sol\":32235:32239  user */\n      dup8\n        /* \"contracts/NFTMasterChef.sol\":32235:32246  user.amount */\n      0x00\n      add\n      sload\n        /* \"contracts/NFTMasterChef.sol\":32235:32250  user.amount.mul */\n      tag_171\n      swap1\n        /* \"contracts/NFTMasterChef.sol\":32235:32273  user.amount.mul(pool.accPowerPerShare) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_281:\n        /* \"contracts/NFTMasterChef.sol\":32235:32277  user.amount.mul(pool.accPowerPerShare).div */\n      tag_172\n      swap1\n        /* \"contracts/NFTMasterChef.sol\":32235:32283  user.amount.mul(pool.accPowerPerShare).div(1e12) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_280:\n        /* \"contracts/NFTMasterChef.sol\":32235:32287  user.amount.mul(pool.accPowerPerShare).div(1e12).sub */\n      tag_173\n      swap1\n        /* \"contracts/NFTMasterChef.sol\":32235:32304  user.amount.mul(pool.accPowerPerShare).div(1e12).sub(user.rewardDebt) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_279:\n        /* \"contracts/NFTMasterChef.sol\":32217:32304  uint256 pending = user.amount.mul(pool.accPowerPerShare).div(1e12).sub(user.rewardDebt) */\n      swap1\n      pop\n        /* \"contracts/NFTMasterChef.sol\":32328:32329  0 */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":32318:32325  pending */\n      dup2\n        /* \"contracts/NFTMasterChef.sol\":32318:32329  pending > 0 */\n      gt\n        /* \"contracts/NFTMasterChef.sol\":32315:32421  if(pending > 0){\r... */\n      iszero\n      tag_282\n      jumpi\n        /* \"contracts/NFTMasterChef.sol\":32372:32409  powerBalance[msg.sender].add(pending) */\n      tag_283\n        /* \"contracts/NFTMasterChef.sol\":32401:32408  pending */\n      dup2\n        /* \"contracts/NFTMasterChef.sol\":32372:32384  powerBalance */\n      0x0a\n        /* \"contracts/NFTMasterChef.sol\":32372:32396  powerBalance[msg.sender] */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":32385:32395  msg.sender */\n      caller\n        /* \"contracts/NFTMasterChef.sol\":32372:32396  powerBalance[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/NFTMasterChef.sol\":32372:32400  powerBalance[msg.sender].add */\n      tag_176\n      swap1\n        /* \"contracts/NFTMasterChef.sol\":32372:32409  powerBalance[msg.sender].add(pending) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_283:\n        /* \"contracts/NFTMasterChef.sol\":32345:32357  powerBalance */\n      0x0a\n        /* \"contracts/NFTMasterChef.sol\":32345:32369  powerBalance[msg.sender] */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":32358:32368  msg.sender */\n      caller\n        /* \"contracts/NFTMasterChef.sol\":32345:32369  powerBalance[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/NFTMasterChef.sol\":32345:32409  powerBalance[msg.sender] = powerBalance[msg.sender].add(pending) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/NFTMasterChef.sol\":32315:32421  if(pending > 0){\r... */\n    tag_282:\n        /* \"contracts/NFTMasterChef.sol\":32445:32469  user.amount.sub(_amount) */\n      tag_284\n        /* \"contracts/NFTMasterChef.sol\":32461:32468  _amount */\n      dup5\n        /* \"contracts/NFTMasterChef.sol\":32445:32449  user */\n      dup4\n        /* \"contracts/NFTMasterChef.sol\":32445:32456  user.amount */\n      0x00\n      add\n      sload\n        /* \"contracts/NFTMasterChef.sol\":32445:32460  user.amount.sub */\n      tag_173\n      swap1\n        /* \"contracts/NFTMasterChef.sol\":32445:32469  user.amount.sub(_amount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_284:\n        /* \"contracts/NFTMasterChef.sol\":32431:32435  user */\n      dup3\n        /* \"contracts/NFTMasterChef.sol\":32431:32442  user.amount */\n      0x00\n      add\n        /* \"contracts/NFTMasterChef.sol\":32431:32469  user.amount = user.amount.sub(_amount) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/NFTMasterChef.sol\":32498:32546  user.amount.mul(pool.accPowerPerShare).div(1e12) */\n      tag_285\n        /* \"contracts/NFTMasterChef.sol\":32541:32545  1e12 */\n      0xe8d4a51000\n        /* \"contracts/NFTMasterChef.sol\":32498:32536  user.amount.mul(pool.accPowerPerShare) */\n      tag_286\n        /* \"contracts/NFTMasterChef.sol\":32514:32518  pool */\n      dup6\n        /* \"contracts/NFTMasterChef.sol\":32514:32535  pool.accPowerPerShare */\n      0x03\n      add\n      sload\n        /* \"contracts/NFTMasterChef.sol\":32498:32502  user */\n      dup6\n        /* \"contracts/NFTMasterChef.sol\":32498:32509  user.amount */\n      0x00\n      add\n      sload\n        /* \"contracts/NFTMasterChef.sol\":32498:32513  user.amount.mul */\n      tag_171\n      swap1\n        /* \"contracts/NFTMasterChef.sol\":32498:32536  user.amount.mul(pool.accPowerPerShare) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_286:\n        /* \"contracts/NFTMasterChef.sol\":32498:32540  user.amount.mul(pool.accPowerPerShare).div */\n      tag_172\n      swap1\n        /* \"contracts/NFTMasterChef.sol\":32498:32546  user.amount.mul(pool.accPowerPerShare).div(1e12) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_285:\n        /* \"contracts/NFTMasterChef.sol\":32480:32484  user */\n      dup3\n        /* \"contracts/NFTMasterChef.sol\":32480:32495  user.rewardDebt */\n      0x01\n      add\n        /* \"contracts/NFTMasterChef.sol\":32480:32546  user.rewardDebt = user.amount.mul(pool.accPowerPerShare).div(1e12) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/NFTMasterChef.sol\":32557:32612  pool.lpToken.safeTransfer(address(msg.sender), _amount) */\n      tag_287\n        /* \"contracts/NFTMasterChef.sol\":32591:32601  msg.sender */\n      caller\n        /* \"contracts/NFTMasterChef.sol\":32604:32611  _amount */\n      dup6\n        /* \"contracts/NFTMasterChef.sol\":32557:32561  pool */\n      dup6\n        /* \"contracts/NFTMasterChef.sol\":32557:32569  pool.lpToken */\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/NFTMasterChef.sol\":32557:32582  pool.lpToken.safeTransfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_180\n      swap1\n        /* \"contracts/NFTMasterChef.sol\":32557:32612  pool.lpToken.safeTransfer(address(msg.sender), _amount) */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_287:\n        /* \"contracts/NFTMasterChef.sol\":32649:32653  _pid */\n      dup5\n        /* \"contracts/NFTMasterChef.sol\":32637:32647  msg.sender */\n      caller\n        /* \"contracts/NFTMasterChef.sol\":32628:32663  Withdraw(msg.sender, _pid, _amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xf279e6a1f5e320cca91135676d9cb6e44ca8a08c0b88342bcdb1144f6511b568\n        /* \"contracts/NFTMasterChef.sol\":32655:32662  _amount */\n      dup7\n        /* \"contracts/NFTMasterChef.sol\":32628:32663  Withdraw(msg.sender, _pid, _amount) */\n      mload(0x40)\n      tag_288\n      swap2\n      swap1\n      tag_45\n      jump\t// in\n    tag_288:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/NFTMasterChef.sol\":31940:32671  {\r... */\n      pop\n      pop\n      pop\n        /* \"contracts/NFTMasterChef.sol\":31884:32671  function withdraw(uint256 _pid, uint256 _amount) public {\r... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/NFTMasterChef.sol\":28394:28885  function migrate(uint256 _pid) public {\r... */\n    tag_81:\n        /* \"contracts/NFTMasterChef.sol\":28480:28481  0 */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":28451:28482  address(migrator) != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/NFTMasterChef.sol\":28459:28467  migrator */\n      0x05\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/NFTMasterChef.sol\":28451:28482  address(migrator) != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"contracts/NFTMasterChef.sol\":28443:28507  require(address(migrator) != address(0), \"migrate: no migrator\") */\n      tag_290\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_291\n      swap1\n      tag_292\n      jump\t// in\n    tag_291:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_290:\n        /* \"contracts/NFTMasterChef.sol\":28518:28539  PoolInfo storage pool */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":28542:28550  poolInfo */\n      0x06\n        /* \"contracts/NFTMasterChef.sol\":28551:28555  _pid */\n      dup3\n        /* \"contracts/NFTMasterChef.sol\":28542:28556  poolInfo[_pid] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_293\n      jumpi\n      tag_294\n      tag_162\n      jump\t// in\n    tag_294:\n    tag_293:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x04\n      mul\n      add\n        /* \"contracts/NFTMasterChef.sol\":28518:28556  PoolInfo storage pool = poolInfo[_pid] */\n      swap1\n      pop\n        /* \"contracts/NFTMasterChef.sol\":28567:28581  IERC20 lpToken */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":28584:28588  pool */\n      dup2\n        /* \"contracts/NFTMasterChef.sol\":28584:28596  pool.lpToken */\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/NFTMasterChef.sol\":28567:28596  IERC20 lpToken = pool.lpToken */\n      swap1\n      pop\n        /* \"contracts/NFTMasterChef.sol\":28607:28618  uint256 bal */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":28621:28628  lpToken */\n      dup2\n        /* \"contracts/NFTMasterChef.sol\":28621:28638  lpToken.balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"contracts/NFTMasterChef.sol\":28647:28651  this */\n      address\n        /* \"contracts/NFTMasterChef.sol\":28621:28653  lpToken.balanceOf(address(this)) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_296\n      swap2\n      swap1\n      tag_129\n      jump\t// in\n    tag_296:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_297\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_297:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_299\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_299:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_300\n      swap2\n      swap1\n      tag_195\n      jump\t// in\n    tag_300:\n        /* \"contracts/NFTMasterChef.sol\":28607:28653  uint256 bal = lpToken.balanceOf(address(this)) */\n      swap1\n      pop\n        /* \"contracts/NFTMasterChef.sol\":28664:28707  lpToken.safeApprove(address(migrator), bal) */\n      tag_301\n        /* \"contracts/NFTMasterChef.sol\":28692:28700  migrator */\n      0x05\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/NFTMasterChef.sol\":28703:28706  bal */\n      dup3\n        /* \"contracts/NFTMasterChef.sol\":28664:28671  lpToken */\n      dup5\n        /* \"contracts/NFTMasterChef.sol\":28664:28683  lpToken.safeApprove */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_302\n      swap1\n        /* \"contracts/NFTMasterChef.sol\":28664:28707  lpToken.safeApprove(address(migrator), bal) */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_301:\n        /* \"contracts/NFTMasterChef.sol\":28718:28735  IERC20 newLpToken */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":28738:28746  migrator */\n      0x05\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/NFTMasterChef.sol\":28738:28754  migrator.migrate */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xce5494bb\n        /* \"contracts/NFTMasterChef.sol\":28755:28762  lpToken */\n      dup5\n        /* \"contracts/NFTMasterChef.sol\":28738:28763  migrator.migrate(lpToken) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_303\n      swap2\n      swap1\n      tag_143\n      jump\t// in\n    tag_303:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_304\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_304:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_306\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_306:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_307\n      swap2\n      swap1\n      tag_308\n      jump\t// in\n    tag_307:\n        /* \"contracts/NFTMasterChef.sol\":28718:28763  IERC20 newLpToken = migrator.migrate(lpToken) */\n      swap1\n      pop\n        /* \"contracts/NFTMasterChef.sol\":28789:28799  newLpToken */\n      dup1\n        /* \"contracts/NFTMasterChef.sol\":28789:28809  newLpToken.balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"contracts/NFTMasterChef.sol\":28818:28822  this */\n      address\n        /* \"contracts/NFTMasterChef.sol\":28789:28824  newLpToken.balanceOf(address(this)) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_309\n      swap2\n      swap1\n      tag_129\n      jump\t// in\n    tag_309:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_310\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_310:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_312\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_312:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_313\n      swap2\n      swap1\n      tag_195\n      jump\t// in\n    tag_313:\n        /* \"contracts/NFTMasterChef.sol\":28782:28785  bal */\n      dup3\n        /* \"contracts/NFTMasterChef.sol\":28782:28824  bal == newLpToken.balanceOf(address(this)) */\n      eq\n        /* \"contracts/NFTMasterChef.sol\":28774:28841  require(bal == newLpToken.balanceOf(address(this)), \"migrate: bad\") */\n      tag_314\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_315\n      swap1\n      tag_316\n      jump\t// in\n    tag_315:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_314:\n        /* \"contracts/NFTMasterChef.sol\":28867:28877  newLpToken */\n      dup1\n        /* \"contracts/NFTMasterChef.sol\":28852:28856  pool */\n      dup5\n        /* \"contracts/NFTMasterChef.sol\":28852:28864  pool.lpToken */\n      0x00\n      add\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":28852:28877  pool.lpToken = newLpToken */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/NFTMasterChef.sol\":28432:28885  {\r... */\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/NFTMasterChef.sol\":28394:28885  function migrate(uint256 _pid) public {\r... */\n      pop\n      jump\t// out\n        /* \"contracts/NFTMasterChef.sol\":24276:24301  uint256 public startBlock */\n    tag_83:\n      sload(0x09)\n      dup2\n      jump\t// out\n        /* \"contracts/NFTMasterChef.sol\":25246:25452  function addNFT(IERC721 _NFT, uint256 _power) public onlyOwner {\r... */\n    tag_88:\n        /* \"contracts/NFTMasterChef.sol\":20336:20348  _msgSender() */\n      tag_318\n        /* \"contracts/NFTMasterChef.sol\":20336:20346  _msgSender */\n      tag_227\n        /* \"contracts/NFTMasterChef.sol\":20336:20348  _msgSender() */\n      jump\t// in\n    tag_318:\n        /* \"contracts/NFTMasterChef.sol\":20325:20348  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/NFTMasterChef.sol\":20325:20332  owner() */\n      tag_319\n        /* \"contracts/NFTMasterChef.sol\":20325:20330  owner */\n      tag_127\n        /* \"contracts/NFTMasterChef.sol\":20325:20332  owner() */\n      jump\t// in\n    tag_319:\n        /* \"contracts/NFTMasterChef.sol\":20325:20348  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/NFTMasterChef.sol\":20317:20385  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_320\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_321\n      swap1\n      tag_231\n      jump\t// in\n    tag_321:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_320:\n        /* \"contracts/NFTMasterChef.sol\":25320:25328  nftsInfo */\n      0x01\n        /* \"contracts/NFTMasterChef.sol\":25348:25433  NFTsInfo({\r... */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n        /* \"contracts/NFTMasterChef.sol\":25381:25385  _NFT */\n      dup5\n        /* \"contracts/NFTMasterChef.sol\":25348:25433  NFTsInfo({\r... */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/NFTMasterChef.sol\":25411:25417  _power */\n      dup4\n        /* \"contracts/NFTMasterChef.sol\":25348:25433  NFTsInfo({\r... */\n      dup2\n      mstore\n      pop\n        /* \"contracts/NFTMasterChef.sol\":25320:25444  nftsInfo.push(\r... */\n      swap1\n      dup1\n      0x01\n      dup2\n      sload\n      add\n      dup1\n      dup3\n      sstore\n      dup1\n      swap2\n      pop\n      pop\n      0x01\n      swap1\n      sub\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x02\n      mul\n      add\n      0x00\n      swap1\n      swap2\n      swap1\n      swap2\n      swap1\n      swap2\n      pop\n      0x00\n      dup3\n      add\n      mload\n      dup2\n      0x00\n      add\n      exp(0x0100, 0x00)\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n      0x20\n      dup3\n      add\n      mload\n      dup2\n      0x01\n      add\n      sstore\n      pop\n      pop\n        /* \"contracts/NFTMasterChef.sol\":25246:25452  function addNFT(IERC721 _NFT, uint256 _power) public onlyOwner {\r... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/NFTMasterChef.sol\":30276:30966  function updatePool(uint256 _pid) public {\r... */\n    tag_91:\n        /* \"contracts/NFTMasterChef.sol\":30328:30349  PoolInfo storage pool */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":30352:30360  poolInfo */\n      0x06\n        /* \"contracts/NFTMasterChef.sol\":30361:30365  _pid */\n      dup3\n        /* \"contracts/NFTMasterChef.sol\":30352:30366  poolInfo[_pid] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_325\n      jumpi\n      tag_326\n      tag_162\n      jump\t// in\n    tag_326:\n    tag_325:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x04\n      mul\n      add\n        /* \"contracts/NFTMasterChef.sol\":30328:30366  PoolInfo storage pool = poolInfo[_pid] */\n      swap1\n      pop\n        /* \"contracts/NFTMasterChef.sol\":30397:30401  pool */\n      dup1\n        /* \"contracts/NFTMasterChef.sol\":30397:30417  pool.lastRewardBlock */\n      0x02\n      add\n      sload\n        /* \"contracts/NFTMasterChef.sol\":30381:30393  block.number */\n      number\n        /* \"contracts/NFTMasterChef.sol\":30381:30417  block.number <= pool.lastRewardBlock */\n      gt\n        /* \"contracts/NFTMasterChef.sol\":30377:30452  if (block.number <= pool.lastRewardBlock) {\r... */\n      tag_328\n      jumpi\n        /* \"contracts/NFTMasterChef.sol\":30434:30441  return; */\n      pop\n      jump(tag_324)\n        /* \"contracts/NFTMasterChef.sol\":30377:30452  if (block.number <= pool.lastRewardBlock) {\r... */\n    tag_328:\n        /* \"contracts/NFTMasterChef.sol\":30462:30478  uint256 lpSupply */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":30481:30485  pool */\n      dup2\n        /* \"contracts/NFTMasterChef.sol\":30481:30493  pool.lpToken */\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/NFTMasterChef.sol\":30481:30503  pool.lpToken.balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"contracts/NFTMasterChef.sol\":30512:30516  this */\n      address\n        /* \"contracts/NFTMasterChef.sol\":30481:30518  pool.lpToken.balanceOf(address(this)) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_329\n      swap2\n      swap1\n      tag_129\n      jump\t// in\n    tag_329:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_330\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_330:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_332\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_332:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_333\n      swap2\n      swap1\n      tag_195\n      jump\t// in\n    tag_333:\n        /* \"contracts/NFTMasterChef.sol\":30462:30518  uint256 lpSupply = pool.lpToken.balanceOf(address(this)) */\n      swap1\n      pop\n        /* \"contracts/NFTMasterChef.sol\":30545:30546  0 */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":30533:30541  lpSupply */\n      dup2\n        /* \"contracts/NFTMasterChef.sol\":30533:30546  lpSupply <= 0 */\n      gt\n        /* \"contracts/NFTMasterChef.sol\":30529:30631  if (lpSupply <= 0) {\r... */\n      tag_334\n      jumpi\n        /* \"contracts/NFTMasterChef.sol\":30586:30598  block.number */\n      number\n        /* \"contracts/NFTMasterChef.sol\":30563:30567  pool */\n      dup3\n        /* \"contracts/NFTMasterChef.sol\":30563:30583  pool.lastRewardBlock */\n      0x02\n      add\n        /* \"contracts/NFTMasterChef.sol\":30563:30598  pool.lastRewardBlock = block.number */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/NFTMasterChef.sol\":30613:30620  return; */\n      pop\n      pop\n      jump(tag_324)\n        /* \"contracts/NFTMasterChef.sol\":30529:30631  if (lpSupply <= 0) {\r... */\n    tag_334:\n        /* \"contracts/NFTMasterChef.sol\":30641:30659  uint256 multiplier */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":30662:30711  getMultiplier(pool.lastRewardBlock, block.number) */\n      tag_335\n        /* \"contracts/NFTMasterChef.sol\":30676:30680  pool */\n      dup4\n        /* \"contracts/NFTMasterChef.sol\":30676:30696  pool.lastRewardBlock */\n      0x02\n      add\n      sload\n        /* \"contracts/NFTMasterChef.sol\":30698:30710  block.number */\n      number\n        /* \"contracts/NFTMasterChef.sol\":30662:30675  getMultiplier */\n      tag_132\n        /* \"contracts/NFTMasterChef.sol\":30662:30711  getMultiplier(pool.lastRewardBlock, block.number) */\n      jump\t// in\n    tag_335:\n        /* \"contracts/NFTMasterChef.sol\":30641:30711  uint256 multiplier = getMultiplier(pool.lastRewardBlock, block.number) */\n      swap1\n      pop\n        /* \"contracts/NFTMasterChef.sol\":30722:30741  uint256 PowerReward */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":30744:30815  multiplier.mul(PowerPerBlock).mul(pool.allocPoint).div(totalAllocPoint) */\n      tag_336\n        /* \"contracts/NFTMasterChef.sol\":30799:30814  totalAllocPoint */\n      sload(0x08)\n        /* \"contracts/NFTMasterChef.sol\":30744:30794  multiplier.mul(PowerPerBlock).mul(pool.allocPoint) */\n      tag_337\n        /* \"contracts/NFTMasterChef.sol\":30778:30782  pool */\n      dup7\n        /* \"contracts/NFTMasterChef.sol\":30778:30793  pool.allocPoint */\n      0x01\n      add\n      sload\n        /* \"contracts/NFTMasterChef.sol\":30744:30773  multiplier.mul(PowerPerBlock) */\n      tag_338\n        /* \"contracts/NFTMasterChef.sol\":30759:30772  PowerPerBlock */\n      sload(0x03)\n        /* \"contracts/NFTMasterChef.sol\":30744:30754  multiplier */\n      dup8\n        /* \"contracts/NFTMasterChef.sol\":30744:30758  multiplier.mul */\n      tag_171\n      swap1\n        /* \"contracts/NFTMasterChef.sol\":30744:30773  multiplier.mul(PowerPerBlock) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_338:\n        /* \"contracts/NFTMasterChef.sol\":30744:30777  multiplier.mul(PowerPerBlock).mul */\n      tag_171\n      swap1\n        /* \"contracts/NFTMasterChef.sol\":30744:30794  multiplier.mul(PowerPerBlock).mul(pool.allocPoint) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_337:\n        /* \"contracts/NFTMasterChef.sol\":30744:30798  multiplier.mul(PowerPerBlock).mul(pool.allocPoint).div */\n      tag_172\n      swap1\n        /* \"contracts/NFTMasterChef.sol\":30744:30815  multiplier.mul(PowerPerBlock).mul(pool.allocPoint).div(totalAllocPoint) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_336:\n        /* \"contracts/NFTMasterChef.sol\":30722:30815  uint256 PowerReward = multiplier.mul(PowerPerBlock).mul(pool.allocPoint).div(totalAllocPoint) */\n      swap1\n      pop\n        /* \"contracts/NFTMasterChef.sol\":30850:30912  pool.accPowerPerShare.add(PowerReward.mul(1e12).div(lpSupply)) */\n      tag_339\n        /* \"contracts/NFTMasterChef.sol\":30876:30911  PowerReward.mul(1e12).div(lpSupply) */\n      tag_340\n        /* \"contracts/NFTMasterChef.sol\":30902:30910  lpSupply */\n      dup5\n        /* \"contracts/NFTMasterChef.sol\":30876:30897  PowerReward.mul(1e12) */\n      tag_341\n        /* \"contracts/NFTMasterChef.sol\":30892:30896  1e12 */\n      0xe8d4a51000\n        /* \"contracts/NFTMasterChef.sol\":30876:30887  PowerReward */\n      dup6\n        /* \"contracts/NFTMasterChef.sol\":30876:30891  PowerReward.mul */\n      tag_171\n      swap1\n        /* \"contracts/NFTMasterChef.sol\":30876:30897  PowerReward.mul(1e12) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_341:\n        /* \"contracts/NFTMasterChef.sol\":30876:30901  PowerReward.mul(1e12).div */\n      tag_172\n      swap1\n        /* \"contracts/NFTMasterChef.sol\":30876:30911  PowerReward.mul(1e12).div(lpSupply) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_340:\n        /* \"contracts/NFTMasterChef.sol\":30850:30854  pool */\n      dup6\n        /* \"contracts/NFTMasterChef.sol\":30850:30871  pool.accPowerPerShare */\n      0x03\n      add\n      sload\n        /* \"contracts/NFTMasterChef.sol\":30850:30875  pool.accPowerPerShare.add */\n      tag_176\n      swap1\n        /* \"contracts/NFTMasterChef.sol\":30850:30912  pool.accPowerPerShare.add(PowerReward.mul(1e12).div(lpSupply)) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_339:\n        /* \"contracts/NFTMasterChef.sol\":30826:30830  pool */\n      dup5\n        /* \"contracts/NFTMasterChef.sol\":30826:30847  pool.accPowerPerShare */\n      0x03\n      add\n        /* \"contracts/NFTMasterChef.sol\":30826:30912  pool.accPowerPerShare = pool.accPowerPerShare.add(PowerReward.mul(1e12).div(lpSupply)) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/NFTMasterChef.sol\":30946:30958  block.number */\n      number\n        /* \"contracts/NFTMasterChef.sol\":30923:30927  pool */\n      dup5\n        /* \"contracts/NFTMasterChef.sol\":30923:30943  pool.lastRewardBlock */\n      0x02\n      add\n        /* \"contracts/NFTMasterChef.sol\":30923:30958  pool.lastRewardBlock = block.number */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/NFTMasterChef.sol\":30317:30966  {\r... */\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/NFTMasterChef.sol\":30276:30966  function updatePool(uint256 _pid) public {\r... */\n    tag_324:\n      pop\n      jump\t// out\n        /* \"contracts/NFTMasterChef.sol\":34399:34755  function emergencyWithdraw(uint256 _pid) public {\r... */\n    tag_94:\n        /* \"contracts/NFTMasterChef.sol\":34458:34479  PoolInfo storage pool */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":34482:34490  poolInfo */\n      0x06\n        /* \"contracts/NFTMasterChef.sol\":34491:34495  _pid */\n      dup3\n        /* \"contracts/NFTMasterChef.sol\":34482:34496  poolInfo[_pid] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_343\n      jumpi\n      tag_344\n      tag_162\n      jump\t// in\n    tag_344:\n    tag_343:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x04\n      mul\n      add\n        /* \"contracts/NFTMasterChef.sol\":34458:34496  PoolInfo storage pool = poolInfo[_pid] */\n      swap1\n      pop\n        /* \"contracts/NFTMasterChef.sol\":34507:34528  UserInfo storage user */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":34531:34539  userInfo */\n      0x07\n        /* \"contracts/NFTMasterChef.sol\":34531:34545  userInfo[_pid] */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":34540:34544  _pid */\n      dup5\n        /* \"contracts/NFTMasterChef.sol\":34531:34545  userInfo[_pid] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/NFTMasterChef.sol\":34531:34557  userInfo[_pid][msg.sender] */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":34546:34556  msg.sender */\n      caller\n        /* \"contracts/NFTMasterChef.sol\":34531:34557  userInfo[_pid][msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/NFTMasterChef.sol\":34507:34557  UserInfo storage user = userInfo[_pid][msg.sender] */\n      swap1\n      pop\n        /* \"contracts/NFTMasterChef.sol\":34568:34627  pool.lpToken.safeTransfer(address(msg.sender), user.amount) */\n      tag_346\n        /* \"contracts/NFTMasterChef.sol\":34602:34612  msg.sender */\n      caller\n        /* \"contracts/NFTMasterChef.sol\":34615:34619  user */\n      dup3\n        /* \"contracts/NFTMasterChef.sol\":34615:34626  user.amount */\n      0x00\n      add\n      sload\n        /* \"contracts/NFTMasterChef.sol\":34568:34572  pool */\n      dup5\n        /* \"contracts/NFTMasterChef.sol\":34568:34580  pool.lpToken */\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/NFTMasterChef.sol\":34568:34593  pool.lpToken.safeTransfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_180\n      swap1\n        /* \"contracts/NFTMasterChef.sol\":34568:34627  pool.lpToken.safeTransfer(address(msg.sender), user.amount) */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_346:\n        /* \"contracts/NFTMasterChef.sol\":34673:34677  _pid */\n      dup3\n        /* \"contracts/NFTMasterChef.sol\":34661:34671  msg.sender */\n      caller\n        /* \"contracts/NFTMasterChef.sol\":34643:34691  EmergencyWithdraw(msg.sender, _pid, user.amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xbb757047c2b5f3974fe26b7c10f732e7bce710b0952a71082702781e62ae0595\n        /* \"contracts/NFTMasterChef.sol\":34679:34683  user */\n      dup4\n        /* \"contracts/NFTMasterChef.sol\":34679:34690  user.amount */\n      0x00\n      add\n      sload\n        /* \"contracts/NFTMasterChef.sol\":34643:34691  EmergencyWithdraw(msg.sender, _pid, user.amount) */\n      mload(0x40)\n      tag_347\n      swap2\n      swap1\n      tag_45\n      jump\t// in\n    tag_347:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/NFTMasterChef.sol\":34716:34717  0 */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":34702:34706  user */\n      dup2\n        /* \"contracts/NFTMasterChef.sol\":34702:34713  user.amount */\n      0x00\n      add\n        /* \"contracts/NFTMasterChef.sol\":34702:34717  user.amount = 0 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/NFTMasterChef.sol\":34746:34747  0 */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":34728:34732  user */\n      dup2\n        /* \"contracts/NFTMasterChef.sol\":34728:34743  user.rewardDebt */\n      0x01\n      add\n        /* \"contracts/NFTMasterChef.sol\":34728:34747  user.rewardDebt = 0 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/NFTMasterChef.sol\":34447:34755  {\r... */\n      pop\n      pop\n        /* \"contracts/NFTMasterChef.sol\":34399:34755  function emergencyWithdraw(uint256 _pid) public {\r... */\n      pop\n      jump\t// out\n        /* \"contracts/NFTMasterChef.sol\":23657:23685  uint256 public PowerPerBlock */\n    tag_96:\n      sload(0x03)\n      dup2\n      jump\t// out\n        /* \"contracts/NFTMasterChef.sol\":26736:26859  function updateMultiplier(uint256 multiplierNumber) public onlyOwner {\r... */\n    tag_100:\n        /* \"contracts/NFTMasterChef.sol\":20336:20348  _msgSender() */\n      tag_349\n        /* \"contracts/NFTMasterChef.sol\":20336:20346  _msgSender */\n      tag_227\n        /* \"contracts/NFTMasterChef.sol\":20336:20348  _msgSender() */\n      jump\t// in\n    tag_349:\n        /* \"contracts/NFTMasterChef.sol\":20325:20348  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/NFTMasterChef.sol\":20325:20332  owner() */\n      tag_350\n        /* \"contracts/NFTMasterChef.sol\":20325:20330  owner */\n      tag_127\n        /* \"contracts/NFTMasterChef.sol\":20325:20332  owner() */\n      jump\t// in\n    tag_350:\n        /* \"contracts/NFTMasterChef.sol\":20325:20348  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/NFTMasterChef.sol\":20317:20385  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_351\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_352\n      swap1\n      tag_231\n      jump\t// in\n    tag_352:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_351:\n        /* \"contracts/NFTMasterChef.sol\":26835:26851  multiplierNumber */\n      dup1\n        /* \"contracts/NFTMasterChef.sol\":26816:26832  BONUS_MULTIPLIER */\n      0x04\n        /* \"contracts/NFTMasterChef.sol\":26816:26851  BONUS_MULTIPLIER = multiplierNumber */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/NFTMasterChef.sol\":26736:26859  function updateMultiplier(uint256 multiplierNumber) public onlyOwner {\r... */\n      pop\n      jump\t// out\n        /* \"contracts/NFTMasterChef.sol\":23533:23559  NFTsInfo[] public nftsInfo */\n    tag_103:\n      0x01\n      dup2\n      dup2\n      sload\n      dup2\n      lt\n      tag_354\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_354:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x02\n      mul\n      add\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      dup1\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      dup1\n      0x01\n      add\n      sload\n      swap1\n      pop\n      dup3\n      jump\t// out\n        /* \"contracts/NFTMasterChef.sol\":30020:30200  function massUpdatePools() public {\r... */\n    tag_107:\n        /* \"contracts/NFTMasterChef.sol\":30065:30079  uint256 length */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":30082:30090  poolInfo */\n      0x06\n        /* \"contracts/NFTMasterChef.sol\":30082:30097  poolInfo.length */\n      dup1\n      sload\n      swap1\n      pop\n        /* \"contracts/NFTMasterChef.sol\":30065:30097  uint256 length = poolInfo.length */\n      swap1\n      pop\n        /* \"contracts/NFTMasterChef.sol\":30113:30124  uint256 pid */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":30108:30193  for (uint256 pid = 0; pid < length; ++pid) {\r... */\n    tag_357:\n        /* \"contracts/NFTMasterChef.sol\":30136:30142  length */\n      dup2\n        /* \"contracts/NFTMasterChef.sol\":30130:30133  pid */\n      dup2\n        /* \"contracts/NFTMasterChef.sol\":30130:30142  pid < length */\n      lt\n        /* \"contracts/NFTMasterChef.sol\":30108:30193  for (uint256 pid = 0; pid < length; ++pid) {\r... */\n      iszero\n      tag_358\n      jumpi\n        /* \"contracts/NFTMasterChef.sol\":30166:30181  updatePool(pid) */\n      tag_360\n        /* \"contracts/NFTMasterChef.sol\":30177:30180  pid */\n      dup2\n        /* \"contracts/NFTMasterChef.sol\":30166:30176  updatePool */\n      tag_91\n        /* \"contracts/NFTMasterChef.sol\":30166:30181  updatePool(pid) */\n      jump\t// in\n    tag_360:\n        /* \"contracts/NFTMasterChef.sol\":30144:30149  ++pid */\n      dup1\n      tag_361\n      swap1\n      tag_362\n      jump\t// in\n    tag_361:\n      swap1\n      pop\n        /* \"contracts/NFTMasterChef.sol\":30108:30193  for (uint256 pid = 0; pid < length; ++pid) {\r... */\n      jump(tag_357)\n    tag_358:\n      pop\n        /* \"contracts/NFTMasterChef.sol\":30054:30200  {\r... */\n      pop\n        /* \"contracts/NFTMasterChef.sol\":30020:30200  function massUpdatePools() public {\r... */\n      jump\t// out\n        /* \"contracts/NFTMasterChef.sol\":27788:28093  function set( uint256 _pid, uint256 _allocPoint, bool _withUpdate) public onlyOwner {\r... */\n    tag_111:\n        /* \"contracts/NFTMasterChef.sol\":20336:20348  _msgSender() */\n      tag_364\n        /* \"contracts/NFTMasterChef.sol\":20336:20346  _msgSender */\n      tag_227\n        /* \"contracts/NFTMasterChef.sol\":20336:20348  _msgSender() */\n      jump\t// in\n    tag_364:\n        /* \"contracts/NFTMasterChef.sol\":20325:20348  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/NFTMasterChef.sol\":20325:20332  owner() */\n      tag_365\n        /* \"contracts/NFTMasterChef.sol\":20325:20330  owner */\n      tag_127\n        /* \"contracts/NFTMasterChef.sol\":20325:20332  owner() */\n      jump\t// in\n    tag_365:\n        /* \"contracts/NFTMasterChef.sol\":20325:20348  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/NFTMasterChef.sol\":20317:20385  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_366\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_367\n      swap1\n      tag_231\n      jump\t// in\n    tag_367:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_366:\n        /* \"contracts/NFTMasterChef.sol\":27887:27898  _withUpdate */\n      dup1\n        /* \"contracts/NFTMasterChef.sol\":27883:27944  if (_withUpdate) {\r... */\n      iszero\n      tag_369\n      jumpi\n        /* \"contracts/NFTMasterChef.sol\":27915:27932  massUpdatePools() */\n      tag_370\n        /* \"contracts/NFTMasterChef.sol\":27915:27930  massUpdatePools */\n      tag_107\n        /* \"contracts/NFTMasterChef.sol\":27915:27932  massUpdatePools() */\n      jump\t// in\n    tag_370:\n        /* \"contracts/NFTMasterChef.sol\":27883:27944  if (_withUpdate) {\r... */\n    tag_369:\n        /* \"contracts/NFTMasterChef.sol\":27972:28035  totalAllocPoint.sub(poolInfo[_pid].allocPoint).add(_allocPoint) */\n      tag_371\n        /* \"contracts/NFTMasterChef.sol\":28023:28034  _allocPoint */\n      dup3\n        /* \"contracts/NFTMasterChef.sol\":27972:28018  totalAllocPoint.sub(poolInfo[_pid].allocPoint) */\n      tag_372\n        /* \"contracts/NFTMasterChef.sol\":27992:28000  poolInfo */\n      0x06\n        /* \"contracts/NFTMasterChef.sol\":28001:28005  _pid */\n      dup7\n        /* \"contracts/NFTMasterChef.sol\":27992:28006  poolInfo[_pid] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_373\n      jumpi\n      tag_374\n      tag_162\n      jump\t// in\n    tag_374:\n    tag_373:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x04\n      mul\n      add\n        /* \"contracts/NFTMasterChef.sol\":27992:28017  poolInfo[_pid].allocPoint */\n      0x01\n      add\n      sload\n        /* \"contracts/NFTMasterChef.sol\":27972:27987  totalAllocPoint */\n      sload(0x08)\n        /* \"contracts/NFTMasterChef.sol\":27972:27991  totalAllocPoint.sub */\n      tag_173\n      swap1\n        /* \"contracts/NFTMasterChef.sol\":27972:28018  totalAllocPoint.sub(poolInfo[_pid].allocPoint) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_372:\n        /* \"contracts/NFTMasterChef.sol\":27972:28022  totalAllocPoint.sub(poolInfo[_pid].allocPoint).add */\n      tag_176\n      swap1\n        /* \"contracts/NFTMasterChef.sol\":27972:28035  totalAllocPoint.sub(poolInfo[_pid].allocPoint).add(_allocPoint) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_371:\n        /* \"contracts/NFTMasterChef.sol\":27954:27969  totalAllocPoint */\n      0x08\n        /* \"contracts/NFTMasterChef.sol\":27954:28035  totalAllocPoint = totalAllocPoint.sub(poolInfo[_pid].allocPoint).add(_allocPoint) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/NFTMasterChef.sol\":28074:28085  _allocPoint */\n      dup2\n        /* \"contracts/NFTMasterChef.sol\":28046:28054  poolInfo */\n      0x06\n        /* \"contracts/NFTMasterChef.sol\":28055:28059  _pid */\n      dup5\n        /* \"contracts/NFTMasterChef.sol\":28046:28060  poolInfo[_pid] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_376\n      jumpi\n      tag_377\n      tag_162\n      jump\t// in\n    tag_377:\n    tag_376:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x04\n      mul\n      add\n        /* \"contracts/NFTMasterChef.sol\":28046:28071  poolInfo[_pid].allocPoint */\n      0x01\n      add\n        /* \"contracts/NFTMasterChef.sol\":28046:28085  poolInfo[_pid].allocPoint = _allocPoint */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/NFTMasterChef.sol\":27788:28093  function set( uint256 _pid, uint256 _allocPoint, bool _withUpdate) public onlyOwner {\r... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/NFTMasterChef.sol\":20756:20859  function renounceOwnership() public virtual onlyOwner {\r... */\n    tag_113:\n        /* \"contracts/NFTMasterChef.sol\":20336:20348  _msgSender() */\n      tag_380\n        /* \"contracts/NFTMasterChef.sol\":20336:20346  _msgSender */\n      tag_227\n        /* \"contracts/NFTMasterChef.sol\":20336:20348  _msgSender() */\n      jump\t// in\n    tag_380:\n        /* \"contracts/NFTMasterChef.sol\":20325:20348  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/NFTMasterChef.sol\":20325:20332  owner() */\n      tag_381\n        /* \"contracts/NFTMasterChef.sol\":20325:20330  owner */\n      tag_127\n        /* \"contracts/NFTMasterChef.sol\":20325:20332  owner() */\n      jump\t// in\n    tag_381:\n        /* \"contracts/NFTMasterChef.sol\":20325:20348  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/NFTMasterChef.sol\":20317:20385  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_382\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_383\n      swap1\n      tag_231\n      jump\t// in\n    tag_383:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_382:\n        /* \"contracts/NFTMasterChef.sol\":20821:20851  _transferOwnership(address(0)) */\n      tag_385\n        /* \"contracts/NFTMasterChef.sol\":20848:20849  0 */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":20821:20839  _transferOwnership */\n      tag_386\n        /* \"contracts/NFTMasterChef.sol\":20821:20851  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_385:\n        /* \"contracts/NFTMasterChef.sol\":20756:20859  function renounceOwnership() public virtual onlyOwner {\r... */\n      jump\t// out\n        /* \"contracts/NFTMasterChef.sol\":23880:23909  IMigratorChef public migrator */\n    tag_115:\n      0x05\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/NFTMasterChef.sol\":23740:23775  uint256 public BONUS_MULTIPLIER = 1 */\n    tag_119:\n      sload(0x04)\n      dup2\n      jump\t// out\n        /* \"contracts/NFTMasterChef.sol\":25120:25238  function getPowerBalance(address account) public view returns(uint256) {\r... */\n    tag_124:\n        /* \"contracts/NFTMasterChef.sol\":25182:25189  uint256 */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":25209:25221  powerBalance */\n      0x0a\n        /* \"contracts/NFTMasterChef.sol\":25209:25230  powerBalance[account] */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":25222:25229  account */\n      dup4\n        /* \"contracts/NFTMasterChef.sol\":25209:25230  powerBalance[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/NFTMasterChef.sol\":25202:25230  return powerBalance[account] */\n      swap1\n      pop\n        /* \"contracts/NFTMasterChef.sol\":25120:25238  function getPowerBalance(address account) public view returns(uint256) {\r... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/NFTMasterChef.sol\":20105:20192  function owner() public view virtual returns (address) {\r... */\n    tag_127:\n        /* \"contracts/NFTMasterChef.sol\":20151:20158  address */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":20178:20184  _owner */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/NFTMasterChef.sol\":20171:20184  return _owner */\n      swap1\n      pop\n        /* \"contracts/NFTMasterChef.sol\":20105:20192  function owner() public view virtual returns (address) {\r... */\n      swap1\n      jump\t// out\n        /* \"contracts/NFTMasterChef.sol\":28961:29105  function getMultiplier(uint256 _from, uint256 _to) public view returns (uint256) {\r... */\n    tag_132:\n        /* \"contracts/NFTMasterChef.sol\":29033:29040  uint256 */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":29061:29097  _to.sub(_from).mul(BONUS_MULTIPLIER) */\n      tag_390\n        /* \"contracts/NFTMasterChef.sol\":29080:29096  BONUS_MULTIPLIER */\n      sload(0x04)\n        /* \"contracts/NFTMasterChef.sol\":29061:29075  _to.sub(_from) */\n      tag_391\n        /* \"contracts/NFTMasterChef.sol\":29069:29074  _from */\n      dup6\n        /* \"contracts/NFTMasterChef.sol\":29061:29064  _to */\n      dup6\n        /* \"contracts/NFTMasterChef.sol\":29061:29068  _to.sub */\n      tag_173\n      swap1\n        /* \"contracts/NFTMasterChef.sol\":29061:29075  _to.sub(_from) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_391:\n        /* \"contracts/NFTMasterChef.sol\":29061:29079  _to.sub(_from).mul */\n      tag_171\n      swap1\n        /* \"contracts/NFTMasterChef.sol\":29061:29097  _to.sub(_from).mul(BONUS_MULTIPLIER) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_390:\n        /* \"contracts/NFTMasterChef.sol\":29054:29097  return _to.sub(_from).mul(BONUS_MULTIPLIER) */\n      swap1\n      pop\n        /* \"contracts/NFTMasterChef.sol\":28961:29105  function getMultiplier(uint256 _from, uint256 _to) public view returns (uint256) {\r... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/NFTMasterChef.sol\":24025:24089  mapping(uint256 => mapping(address => UserInfo)) public userInfo */\n    tag_137:\n      mstore(0x20, 0x07)\n      dup2\n      0x00\n      mstore\n      mstore(0x20, keccak256(0x00, 0x40))\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap2\n      pop\n      pop\n      dup1\n      0x00\n      add\n      sload\n      swap1\n      dup1\n      0x01\n      add\n      sload\n      swap1\n      pop\n      dup3\n      jump\t// out\n        /* \"contracts/NFTMasterChef.sol\":23593:23610  IERC20 public DDT */\n    tag_141:\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/NFTMasterChef.sol\":24310:24357  mapping(address => uint256) public powerBalance */\n    tag_146:\n      mstore(0x20, 0x0a)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      sload\n      dup2\n      jump\t// out\n        /* \"contracts/NFTMasterChef.sol\":31036:31832  function deposit(uint256 _pid, uint256 _amount) public {\r... */\n    tag_150:\n        /* \"contracts/NFTMasterChef.sol\":31121:31122  0 */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":31113:31117  _pid */\n      dup3\n        /* \"contracts/NFTMasterChef.sol\":31113:31122  _pid != 0 */\n      eq\n      iszero\n        /* \"contracts/NFTMasterChef.sol\":31104:31151  require (_pid != 0, 'deposit Power by staking') */\n      tag_393\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_394\n      swap1\n      tag_395\n      jump\t// in\n    tag_394:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_393:\n        /* \"contracts/NFTMasterChef.sol\":31164:31185  PoolInfo storage pool */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":31188:31196  poolInfo */\n      0x06\n        /* \"contracts/NFTMasterChef.sol\":31197:31201  _pid */\n      dup4\n        /* \"contracts/NFTMasterChef.sol\":31188:31202  poolInfo[_pid] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_396\n      jumpi\n      tag_397\n      tag_162\n      jump\t// in\n    tag_397:\n    tag_396:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x04\n      mul\n      add\n        /* \"contracts/NFTMasterChef.sol\":31164:31202  PoolInfo storage pool = poolInfo[_pid] */\n      swap1\n      pop\n        /* \"contracts/NFTMasterChef.sol\":31213:31234  UserInfo storage user */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":31237:31245  userInfo */\n      0x07\n        /* \"contracts/NFTMasterChef.sol\":31237:31251  userInfo[_pid] */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":31246:31250  _pid */\n      dup6\n        /* \"contracts/NFTMasterChef.sol\":31237:31251  userInfo[_pid] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/NFTMasterChef.sol\":31237:31263  userInfo[_pid][msg.sender] */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":31252:31262  msg.sender */\n      caller\n        /* \"contracts/NFTMasterChef.sol\":31237:31263  userInfo[_pid][msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/NFTMasterChef.sol\":31213:31263  UserInfo storage user = userInfo[_pid][msg.sender] */\n      swap1\n      pop\n        /* \"contracts/NFTMasterChef.sol\":31274:31290  updatePool(_pid) */\n      tag_399\n        /* \"contracts/NFTMasterChef.sol\":31285:31289  _pid */\n      dup5\n        /* \"contracts/NFTMasterChef.sol\":31274:31284  updatePool */\n      tag_91\n        /* \"contracts/NFTMasterChef.sol\":31274:31290  updatePool(_pid) */\n      jump\t// in\n    tag_399:\n        /* \"contracts/NFTMasterChef.sol\":31319:31320  0 */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":31305:31309  user */\n      dup2\n        /* \"contracts/NFTMasterChef.sol\":31305:31316  user.amount */\n      0x00\n      add\n      sload\n        /* \"contracts/NFTMasterChef.sol\":31305:31320  user.amount > 0 */\n      gt\n        /* \"contracts/NFTMasterChef.sol\":31301:31564  if (user.amount > 0) {\r... */\n      iszero\n      tag_400\n      jumpi\n        /* \"contracts/NFTMasterChef.sol\":31337:31352  uint256 pending */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":31355:31424  user.amount.mul(pool.accPowerPerShare).div(1e12).sub(user.rewardDebt) */\n      tag_401\n        /* \"contracts/NFTMasterChef.sol\":31408:31412  user */\n      dup3\n        /* \"contracts/NFTMasterChef.sol\":31408:31423  user.rewardDebt */\n      0x01\n      add\n      sload\n        /* \"contracts/NFTMasterChef.sol\":31355:31403  user.amount.mul(pool.accPowerPerShare).div(1e12) */\n      tag_402\n        /* \"contracts/NFTMasterChef.sol\":31398:31402  1e12 */\n      0xe8d4a51000\n        /* \"contracts/NFTMasterChef.sol\":31355:31393  user.amount.mul(pool.accPowerPerShare) */\n      tag_403\n        /* \"contracts/NFTMasterChef.sol\":31371:31375  pool */\n      dup8\n        /* \"contracts/NFTMasterChef.sol\":31371:31392  pool.accPowerPerShare */\n      0x03\n      add\n      sload\n        /* \"contracts/NFTMasterChef.sol\":31355:31359  user */\n      dup8\n        /* \"contracts/NFTMasterChef.sol\":31355:31366  user.amount */\n      0x00\n      add\n      sload\n        /* \"contracts/NFTMasterChef.sol\":31355:31370  user.amount.mul */\n      tag_171\n      swap1\n        /* \"contracts/NFTMasterChef.sol\":31355:31393  user.amount.mul(pool.accPowerPerShare) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_403:\n        /* \"contracts/NFTMasterChef.sol\":31355:31397  user.amount.mul(pool.accPowerPerShare).div */\n      tag_172\n      swap1\n        /* \"contracts/NFTMasterChef.sol\":31355:31403  user.amount.mul(pool.accPowerPerShare).div(1e12) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_402:\n        /* \"contracts/NFTMasterChef.sol\":31355:31407  user.amount.mul(pool.accPowerPerShare).div(1e12).sub */\n      tag_173\n      swap1\n        /* \"contracts/NFTMasterChef.sol\":31355:31424  user.amount.mul(pool.accPowerPerShare).div(1e12).sub(user.rewardDebt) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_401:\n        /* \"contracts/NFTMasterChef.sol\":31337:31424  uint256 pending = user.amount.mul(pool.accPowerPerShare).div(1e12).sub(user.rewardDebt) */\n      swap1\n      pop\n        /* \"contracts/NFTMasterChef.sol\":31452:31453  0 */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":31442:31449  pending */\n      dup2\n        /* \"contracts/NFTMasterChef.sol\":31442:31453  pending > 0 */\n      gt\n        /* \"contracts/NFTMasterChef.sol\":31439:31553  if(pending > 0){\r... */\n      iszero\n      tag_404\n      jumpi\n        /* \"contracts/NFTMasterChef.sol\":31500:31537  powerBalance[msg.sender].add(pending) */\n      tag_405\n        /* \"contracts/NFTMasterChef.sol\":31529:31536  pending */\n      dup2\n        /* \"contracts/NFTMasterChef.sol\":31500:31512  powerBalance */\n      0x0a\n        /* \"contracts/NFTMasterChef.sol\":31500:31524  powerBalance[msg.sender] */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":31513:31523  msg.sender */\n      caller\n        /* \"contracts/NFTMasterChef.sol\":31500:31524  powerBalance[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/NFTMasterChef.sol\":31500:31528  powerBalance[msg.sender].add */\n      tag_176\n      swap1\n        /* \"contracts/NFTMasterChef.sol\":31500:31537  powerBalance[msg.sender].add(pending) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_405:\n        /* \"contracts/NFTMasterChef.sol\":31473:31485  powerBalance */\n      0x0a\n        /* \"contracts/NFTMasterChef.sol\":31473:31497  powerBalance[msg.sender] */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":31486:31496  msg.sender */\n      caller\n        /* \"contracts/NFTMasterChef.sol\":31473:31497  powerBalance[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/NFTMasterChef.sol\":31473:31537  powerBalance[msg.sender] = powerBalance[msg.sender].add(pending) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/NFTMasterChef.sol\":31439:31553  if(pending > 0){\r... */\n    tag_404:\n        /* \"contracts/NFTMasterChef.sol\":31322:31564  {\r... */\n      pop\n        /* \"contracts/NFTMasterChef.sol\":31301:31564  if (user.amount > 0) {\r... */\n    tag_400:\n        /* \"contracts/NFTMasterChef.sol\":31574:31648  pool.lpToken.safeTransferFrom(address(msg.sender), address(this), _amount) */\n      tag_406\n        /* \"contracts/NFTMasterChef.sol\":31612:31622  msg.sender */\n      caller\n        /* \"contracts/NFTMasterChef.sol\":31633:31637  this */\n      address\n        /* \"contracts/NFTMasterChef.sol\":31640:31647  _amount */\n      dup6\n        /* \"contracts/NFTMasterChef.sol\":31574:31578  pool */\n      dup6\n        /* \"contracts/NFTMasterChef.sol\":31574:31586  pool.lpToken */\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/NFTMasterChef.sol\":31574:31603  pool.lpToken.safeTransferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_264\n      swap1\n        /* \"contracts/NFTMasterChef.sol\":31574:31648  pool.lpToken.safeTransferFrom(address(msg.sender), address(this), _amount) */\n      swap4\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_406:\n        /* \"contracts/NFTMasterChef.sol\":31673:31697  user.amount.add(_amount) */\n      tag_407\n        /* \"contracts/NFTMasterChef.sol\":31689:31696  _amount */\n      dup4\n        /* \"contracts/NFTMasterChef.sol\":31673:31677  user */\n      dup3\n        /* \"contracts/NFTMasterChef.sol\":31673:31684  user.amount */\n      0x00\n      add\n      sload\n        /* \"contracts/NFTMasterChef.sol\":31673:31688  user.amount.add */\n      tag_176\n      swap1\n        /* \"contracts/NFTMasterChef.sol\":31673:31697  user.amount.add(_amount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_407:\n        /* \"contracts/NFTMasterChef.sol\":31659:31663  user */\n      dup2\n        /* \"contracts/NFTMasterChef.sol\":31659:31670  user.amount */\n      0x00\n      add\n        /* \"contracts/NFTMasterChef.sol\":31659:31697  user.amount = user.amount.add(_amount) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/NFTMasterChef.sol\":31726:31774  user.amount.mul(pool.accPowerPerShare).div(1e12) */\n      tag_408\n        /* \"contracts/NFTMasterChef.sol\":31769:31773  1e12 */\n      0xe8d4a51000\n        /* \"contracts/NFTMasterChef.sol\":31726:31764  user.amount.mul(pool.accPowerPerShare) */\n      tag_409\n        /* \"contracts/NFTMasterChef.sol\":31742:31746  pool */\n      dup5\n        /* \"contracts/NFTMasterChef.sol\":31742:31763  pool.accPowerPerShare */\n      0x03\n      add\n      sload\n        /* \"contracts/NFTMasterChef.sol\":31726:31730  user */\n      dup5\n        /* \"contracts/NFTMasterChef.sol\":31726:31737  user.amount */\n      0x00\n      add\n      sload\n        /* \"contracts/NFTMasterChef.sol\":31726:31741  user.amount.mul */\n      tag_171\n      swap1\n        /* \"contracts/NFTMasterChef.sol\":31726:31764  user.amount.mul(pool.accPowerPerShare) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_409:\n        /* \"contracts/NFTMasterChef.sol\":31726:31768  user.amount.mul(pool.accPowerPerShare).div */\n      tag_172\n      swap1\n        /* \"contracts/NFTMasterChef.sol\":31726:31774  user.amount.mul(pool.accPowerPerShare).div(1e12) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_408:\n        /* \"contracts/NFTMasterChef.sol\":31708:31712  user */\n      dup2\n        /* \"contracts/NFTMasterChef.sol\":31708:31723  user.rewardDebt */\n      0x01\n      add\n        /* \"contracts/NFTMasterChef.sol\":31708:31774  user.rewardDebt = user.amount.mul(pool.accPowerPerShare).div(1e12) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/NFTMasterChef.sol\":31810:31814  _pid */\n      dup4\n        /* \"contracts/NFTMasterChef.sol\":31798:31808  msg.sender */\n      caller\n        /* \"contracts/NFTMasterChef.sol\":31790:31824  Deposit(msg.sender, _pid, _amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x90890809c654f11d6e72a28fa60149770a0d11ec6c92319d6ceb2bb0a4ea1a15\n        /* \"contracts/NFTMasterChef.sol\":31816:31823  _amount */\n      dup6\n        /* \"contracts/NFTMasterChef.sol\":31790:31824  Deposit(msg.sender, _pid, _amount) */\n      mload(0x40)\n      tag_410\n      swap2\n      swap1\n      tag_45\n      jump\t// in\n    tag_410:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/NFTMasterChef.sol\":31091:31832  {\r... */\n      pop\n      pop\n        /* \"contracts/NFTMasterChef.sol\":31036:31832  function deposit(uint256 _pid, uint256 _amount) public {\r... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/NFTMasterChef.sol\":21014:21215  function transferOwnership(address newOwner) public virtual onlyOwner {\r... */\n    tag_153:\n        /* \"contracts/NFTMasterChef.sol\":20336:20348  _msgSender() */\n      tag_412\n        /* \"contracts/NFTMasterChef.sol\":20336:20346  _msgSender */\n      tag_227\n        /* \"contracts/NFTMasterChef.sol\":20336:20348  _msgSender() */\n      jump\t// in\n    tag_412:\n        /* \"contracts/NFTMasterChef.sol\":20325:20348  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/NFTMasterChef.sol\":20325:20332  owner() */\n      tag_413\n        /* \"contracts/NFTMasterChef.sol\":20325:20330  owner */\n      tag_127\n        /* \"contracts/NFTMasterChef.sol\":20325:20332  owner() */\n      jump\t// in\n    tag_413:\n        /* \"contracts/NFTMasterChef.sol\":20325:20348  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/NFTMasterChef.sol\":20317:20385  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_414\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_415\n      swap1\n      tag_231\n      jump\t// in\n    tag_415:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_414:\n        /* \"contracts/NFTMasterChef.sol\":21123:21124  0 */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":21103:21125  newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/NFTMasterChef.sol\":21103:21111  newOwner */\n      dup2\n        /* \"contracts/NFTMasterChef.sol\":21103:21125  newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"contracts/NFTMasterChef.sol\":21095:21168  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_417\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_418\n      swap1\n      tag_419\n      jump\t// in\n    tag_418:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_417:\n        /* \"contracts/NFTMasterChef.sol\":21179:21207  _transferOwnership(newOwner) */\n      tag_420\n        /* \"contracts/NFTMasterChef.sol\":21198:21206  newOwner */\n      dup2\n        /* \"contracts/NFTMasterChef.sol\":21179:21197  _transferOwnership */\n      tag_386\n        /* \"contracts/NFTMasterChef.sol\":21179:21207  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_420:\n        /* \"contracts/NFTMasterChef.sol\":21014:21215  function transferOwnership(address newOwner) public virtual onlyOwner {\r... */\n      pop\n      jump\t// out\n        /* \"contracts/NFTMasterChef.sol\":29170:29937  function pendingPower(uint256 _pid, address _user) external view returns (uint256){\r... */\n    tag_156:\n        /* \"contracts/NFTMasterChef.sol\":29244:29251  uint256 */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":29263:29284  PoolInfo storage pool */\n      dup1\n        /* \"contracts/NFTMasterChef.sol\":29287:29295  poolInfo */\n      0x06\n        /* \"contracts/NFTMasterChef.sol\":29296:29300  _pid */\n      dup5\n        /* \"contracts/NFTMasterChef.sol\":29287:29301  poolInfo[_pid] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_422\n      jumpi\n      tag_423\n      tag_162\n      jump\t// in\n    tag_423:\n    tag_422:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x04\n      mul\n      add\n        /* \"contracts/NFTMasterChef.sol\":29263:29301  PoolInfo storage pool = poolInfo[_pid] */\n      swap1\n      pop\n        /* \"contracts/NFTMasterChef.sol\":29312:29333  UserInfo storage user */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":29336:29344  userInfo */\n      0x07\n        /* \"contracts/NFTMasterChef.sol\":29336:29350  userInfo[_pid] */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":29345:29349  _pid */\n      dup7\n        /* \"contracts/NFTMasterChef.sol\":29336:29350  userInfo[_pid] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/NFTMasterChef.sol\":29336:29357  userInfo[_pid][_user] */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":29351:29356  _user */\n      dup6\n        /* \"contracts/NFTMasterChef.sol\":29336:29357  userInfo[_pid][_user] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/NFTMasterChef.sol\":29312:29357  UserInfo storage user = userInfo[_pid][_user] */\n      swap1\n      pop\n        /* \"contracts/NFTMasterChef.sol\":29368:29392  uint256 accPowerPerShare */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":29395:29399  pool */\n      dup3\n        /* \"contracts/NFTMasterChef.sol\":29395:29416  pool.accPowerPerShare */\n      0x03\n      add\n      sload\n        /* \"contracts/NFTMasterChef.sol\":29368:29416  uint256 accPowerPerShare = pool.accPowerPerShare */\n      swap1\n      pop\n        /* \"contracts/NFTMasterChef.sol\":29427:29443  uint256 lpSupply */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":29446:29450  pool */\n      dup4\n        /* \"contracts/NFTMasterChef.sol\":29446:29458  pool.lpToken */\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/NFTMasterChef.sol\":29446:29468  pool.lpToken.balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"contracts/NFTMasterChef.sol\":29477:29481  this */\n      address\n        /* \"contracts/NFTMasterChef.sol\":29446:29483  pool.lpToken.balanceOf(address(this)) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_425\n      swap2\n      swap1\n      tag_129\n      jump\t// in\n    tag_425:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_426\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_426:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_428\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_428:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_429\n      swap2\n      swap1\n      tag_195\n      jump\t// in\n    tag_429:\n        /* \"contracts/NFTMasterChef.sol\":29427:29483  uint256 lpSupply = pool.lpToken.balanceOf(address(this)) */\n      swap1\n      pop\n        /* \"contracts/NFTMasterChef.sol\":29513:29517  pool */\n      dup4\n        /* \"contracts/NFTMasterChef.sol\":29513:29533  pool.lastRewardBlock */\n      0x02\n      add\n      sload\n        /* \"contracts/NFTMasterChef.sol\":29498:29510  block.number */\n      number\n        /* \"contracts/NFTMasterChef.sol\":29498:29533  block.number > pool.lastRewardBlock */\n      gt\n        /* \"contracts/NFTMasterChef.sol\":29498:29550  block.number > pool.lastRewardBlock && lpSupply != 0 */\n      dup1\n      iszero\n      tag_430\n      jumpi\n      pop\n        /* \"contracts/NFTMasterChef.sol\":29549:29550  0 */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":29537:29545  lpSupply */\n      dup2\n        /* \"contracts/NFTMasterChef.sol\":29537:29550  lpSupply != 0 */\n      eq\n      iszero\n        /* \"contracts/NFTMasterChef.sol\":29498:29550  block.number > pool.lastRewardBlock && lpSupply != 0 */\n    tag_430:\n        /* \"contracts/NFTMasterChef.sol\":29494:29848  if (block.number > pool.lastRewardBlock && lpSupply != 0) {\r... */\n      iszero\n      tag_431\n      jumpi\n        /* \"contracts/NFTMasterChef.sol\":29567:29585  uint256 multiplier */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":29588:29637  getMultiplier(pool.lastRewardBlock, block.number) */\n      tag_432\n        /* \"contracts/NFTMasterChef.sol\":29602:29606  pool */\n      dup6\n        /* \"contracts/NFTMasterChef.sol\":29602:29622  pool.lastRewardBlock */\n      0x02\n      add\n      sload\n        /* \"contracts/NFTMasterChef.sol\":29624:29636  block.number */\n      number\n        /* \"contracts/NFTMasterChef.sol\":29588:29601  getMultiplier */\n      tag_132\n        /* \"contracts/NFTMasterChef.sol\":29588:29637  getMultiplier(pool.lastRewardBlock, block.number) */\n      jump\t// in\n    tag_432:\n        /* \"contracts/NFTMasterChef.sol\":29567:29637  uint256 multiplier = getMultiplier(pool.lastRewardBlock, block.number) */\n      swap1\n      pop\n        /* \"contracts/NFTMasterChef.sol\":29652:29671  uint256 PowerReward */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":29674:29745  multiplier.mul(PowerPerBlock).mul(pool.allocPoint).div(totalAllocPoint) */\n      tag_433\n        /* \"contracts/NFTMasterChef.sol\":29729:29744  totalAllocPoint */\n      sload(0x08)\n        /* \"contracts/NFTMasterChef.sol\":29674:29724  multiplier.mul(PowerPerBlock).mul(pool.allocPoint) */\n      tag_434\n        /* \"contracts/NFTMasterChef.sol\":29708:29712  pool */\n      dup9\n        /* \"contracts/NFTMasterChef.sol\":29708:29723  pool.allocPoint */\n      0x01\n      add\n      sload\n        /* \"contracts/NFTMasterChef.sol\":29674:29703  multiplier.mul(PowerPerBlock) */\n      tag_435\n        /* \"contracts/NFTMasterChef.sol\":29689:29702  PowerPerBlock */\n      sload(0x03)\n        /* \"contracts/NFTMasterChef.sol\":29674:29684  multiplier */\n      dup8\n        /* \"contracts/NFTMasterChef.sol\":29674:29688  multiplier.mul */\n      tag_171\n      swap1\n        /* \"contracts/NFTMasterChef.sol\":29674:29703  multiplier.mul(PowerPerBlock) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_435:\n        /* \"contracts/NFTMasterChef.sol\":29674:29707  multiplier.mul(PowerPerBlock).mul */\n      tag_171\n      swap1\n        /* \"contracts/NFTMasterChef.sol\":29674:29724  multiplier.mul(PowerPerBlock).mul(pool.allocPoint) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_434:\n        /* \"contracts/NFTMasterChef.sol\":29674:29728  multiplier.mul(PowerPerBlock).mul(pool.allocPoint).div */\n      tag_172\n      swap1\n        /* \"contracts/NFTMasterChef.sol\":29674:29745  multiplier.mul(PowerPerBlock).mul(pool.allocPoint).div(totalAllocPoint) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_433:\n        /* \"contracts/NFTMasterChef.sol\":29652:29745  uint256 PowerReward = multiplier.mul(PowerPerBlock).mul(pool.allocPoint).div(totalAllocPoint) */\n      swap1\n      pop\n        /* \"contracts/NFTMasterChef.sol\":29779:29836  accPowerPerShare.add(PowerReward.mul(1e12).div(lpSupply)) */\n      tag_436\n        /* \"contracts/NFTMasterChef.sol\":29800:29835  PowerReward.mul(1e12).div(lpSupply) */\n      tag_437\n        /* \"contracts/NFTMasterChef.sol\":29826:29834  lpSupply */\n      dup5\n        /* \"contracts/NFTMasterChef.sol\":29800:29821  PowerReward.mul(1e12) */\n      tag_438\n        /* \"contracts/NFTMasterChef.sol\":29816:29820  1e12 */\n      0xe8d4a51000\n        /* \"contracts/NFTMasterChef.sol\":29800:29811  PowerReward */\n      dup6\n        /* \"contracts/NFTMasterChef.sol\":29800:29815  PowerReward.mul */\n      tag_171\n      swap1\n        /* \"contracts/NFTMasterChef.sol\":29800:29821  PowerReward.mul(1e12) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_438:\n        /* \"contracts/NFTMasterChef.sol\":29800:29825  PowerReward.mul(1e12).div */\n      tag_172\n      swap1\n        /* \"contracts/NFTMasterChef.sol\":29800:29835  PowerReward.mul(1e12).div(lpSupply) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_437:\n        /* \"contracts/NFTMasterChef.sol\":29779:29795  accPowerPerShare */\n      dup6\n        /* \"contracts/NFTMasterChef.sol\":29779:29799  accPowerPerShare.add */\n      tag_176\n      swap1\n        /* \"contracts/NFTMasterChef.sol\":29779:29836  accPowerPerShare.add(PowerReward.mul(1e12).div(lpSupply)) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_436:\n        /* \"contracts/NFTMasterChef.sol\":29760:29836  accPowerPerShare = accPowerPerShare.add(PowerReward.mul(1e12).div(lpSupply)) */\n      swap4\n      pop\n        /* \"contracts/NFTMasterChef.sol\":29552:29848  {\r... */\n      pop\n      pop\n        /* \"contracts/NFTMasterChef.sol\":29494:29848  if (block.number > pool.lastRewardBlock && lpSupply != 0) {\r... */\n    tag_431:\n        /* \"contracts/NFTMasterChef.sol\":29865:29929  user.amount.mul(accPowerPerShare).div(1e12).sub(user.rewardDebt) */\n      tag_439\n        /* \"contracts/NFTMasterChef.sol\":29913:29917  user */\n      dup4\n        /* \"contracts/NFTMasterChef.sol\":29913:29928  user.rewardDebt */\n      0x01\n      add\n      sload\n        /* \"contracts/NFTMasterChef.sol\":29865:29908  user.amount.mul(accPowerPerShare).div(1e12) */\n      tag_440\n        /* \"contracts/NFTMasterChef.sol\":29903:29907  1e12 */\n      0xe8d4a51000\n        /* \"contracts/NFTMasterChef.sol\":29865:29898  user.amount.mul(accPowerPerShare) */\n      tag_441\n        /* \"contracts/NFTMasterChef.sol\":29881:29897  accPowerPerShare */\n      dup7\n        /* \"contracts/NFTMasterChef.sol\":29865:29869  user */\n      dup9\n        /* \"contracts/NFTMasterChef.sol\":29865:29876  user.amount */\n      0x00\n      add\n      sload\n        /* \"contracts/NFTMasterChef.sol\":29865:29880  user.amount.mul */\n      tag_171\n      swap1\n        /* \"contracts/NFTMasterChef.sol\":29865:29898  user.amount.mul(accPowerPerShare) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_441:\n        /* \"contracts/NFTMasterChef.sol\":29865:29902  user.amount.mul(accPowerPerShare).div */\n      tag_172\n      swap1\n        /* \"contracts/NFTMasterChef.sol\":29865:29908  user.amount.mul(accPowerPerShare).div(1e12) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_440:\n        /* \"contracts/NFTMasterChef.sol\":29865:29912  user.amount.mul(accPowerPerShare).div(1e12).sub */\n      tag_173\n      swap1\n        /* \"contracts/NFTMasterChef.sol\":29865:29929  user.amount.mul(accPowerPerShare).div(1e12).sub(user.rewardDebt) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_439:\n        /* \"contracts/NFTMasterChef.sol\":29858:29929  return user.amount.mul(accPowerPerShare).div(1e12).sub(user.rewardDebt) */\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/NFTMasterChef.sol\":29170:29937  function pendingPower(uint256 _pid, address _user) external view returns (uint256){\r... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/NFTMasterChef.sol\":1757:2228  function mul(uint256 a, uint256 b) internal pure returns (uint256) {\r... */\n    tag_171:\n        /* \"contracts/NFTMasterChef.sol\":1815:1822  uint256 */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":2065:2066  0 */\n      dup1\n        /* \"contracts/NFTMasterChef.sol\":2060:2061  a */\n      dup4\n        /* \"contracts/NFTMasterChef.sol\":2060:2066  a == 0 */\n      eq\n        /* \"contracts/NFTMasterChef.sol\":2056:2103  if (a == 0) {\r... */\n      iszero\n      tag_443\n      jumpi\n        /* \"contracts/NFTMasterChef.sol\":2090:2091  0 */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":2083:2091  return 0 */\n      swap1\n      pop\n      jump(tag_442)\n        /* \"contracts/NFTMasterChef.sol\":2056:2103  if (a == 0) {\r... */\n    tag_443:\n        /* \"contracts/NFTMasterChef.sol\":2115:2124  uint256 c */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":2131:2132  b */\n      dup3\n        /* \"contracts/NFTMasterChef.sol\":2127:2128  a */\n      dup5\n        /* \"contracts/NFTMasterChef.sol\":2127:2132  a * b */\n      tag_444\n      swap2\n      swap1\n      tag_445\n      jump\t// in\n    tag_444:\n        /* \"contracts/NFTMasterChef.sol\":2115:2132  uint256 c = a * b */\n      swap1\n      pop\n        /* \"contracts/NFTMasterChef.sol\":2160:2161  b */\n      dup3\n        /* \"contracts/NFTMasterChef.sol\":2155:2156  a */\n      dup5\n        /* \"contracts/NFTMasterChef.sol\":2151:2152  c */\n      dup3\n        /* \"contracts/NFTMasterChef.sol\":2151:2156  c / a */\n      tag_446\n      swap2\n      swap1\n      tag_447\n      jump\t// in\n    tag_446:\n        /* \"contracts/NFTMasterChef.sol\":2151:2161  c / a == b */\n      eq\n        /* \"contracts/NFTMasterChef.sol\":2143:2199  require(c / a == b, \"SafeMath: multiplication overflow\") */\n      tag_448\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_449\n      swap1\n      tag_450\n      jump\t// in\n    tag_449:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_448:\n        /* \"contracts/NFTMasterChef.sol\":2219:2220  c */\n      dup1\n        /* \"contracts/NFTMasterChef.sol\":2212:2220  return c */\n      swap2\n      pop\n      pop\n        /* \"contracts/NFTMasterChef.sol\":1757:2228  function mul(uint256 a, uint256 b) internal pure returns (uint256) {\r... */\n    tag_442:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/NFTMasterChef.sol\":2696:2828  function div(uint256 a, uint256 b) internal pure returns (uint256) {\r... */\n    tag_172:\n        /* \"contracts/NFTMasterChef.sol\":2754:2761  uint256 */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":2781:2820  div(a, b, \"SafeMath: division by zero\") */\n      tag_452\n        /* \"contracts/NFTMasterChef.sol\":2785:2786  a */\n      dup4\n        /* \"contracts/NFTMasterChef.sol\":2788:2789  b */\n      dup4\n        /* \"contracts/NFTMasterChef.sol\":2781:2820  div(a, b, \"SafeMath: division by zero\") */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x1a\n      dup2\n      mstore\n      0x20\n      add\n      0x536166654d6174683a206469766973696f6e206279207a65726f000000000000\n      dup2\n      mstore\n      pop\n        /* \"contracts/NFTMasterChef.sol\":2781:2784  div */\n      tag_453\n        /* \"contracts/NFTMasterChef.sol\":2781:2820  div(a, b, \"SafeMath: division by zero\") */\n      jump\t// in\n    tag_452:\n        /* \"contracts/NFTMasterChef.sol\":2774:2820  return div(a, b, \"SafeMath: division by zero\") */\n      swap1\n      pop\n        /* \"contracts/NFTMasterChef.sol\":2696:2828  function div(uint256 a, uint256 b) internal pure returns (uint256) {\r... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/NFTMasterChef.sol\":841:977  function sub(uint256 a, uint256 b) internal pure returns (uint256) {\r... */\n    tag_173:\n        /* \"contracts/NFTMasterChef.sol\":899:906  uint256 */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":926:969  sub(a, b, \"SafeMath: subtraction overflow\") */\n      tag_455\n        /* \"contracts/NFTMasterChef.sol\":930:931  a */\n      dup4\n        /* \"contracts/NFTMasterChef.sol\":933:934  b */\n      dup4\n        /* \"contracts/NFTMasterChef.sol\":926:969  sub(a, b, \"SafeMath: subtraction overflow\") */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x1e\n      dup2\n      mstore\n      0x20\n      add\n      0x536166654d6174683a207375627472616374696f6e206f766572666c6f770000\n      dup2\n      mstore\n      pop\n        /* \"contracts/NFTMasterChef.sol\":926:929  sub */\n      tag_456\n        /* \"contracts/NFTMasterChef.sol\":926:969  sub(a, b, \"SafeMath: subtraction overflow\") */\n      jump\t// in\n    tag_455:\n        /* \"contracts/NFTMasterChef.sol\":919:969  return sub(a, b, \"SafeMath: subtraction overflow\") */\n      swap1\n      pop\n        /* \"contracts/NFTMasterChef.sol\":841:977  function sub(uint256 a, uint256 b) internal pure returns (uint256) {\r... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/NFTMasterChef.sol\":385:566  function add(uint256 a, uint256 b) internal pure returns (uint256) {\r... */\n    tag_176:\n        /* \"contracts/NFTMasterChef.sol\":443:450  uint256 */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":463:472  uint256 c */\n      dup1\n        /* \"contracts/NFTMasterChef.sol\":479:480  b */\n      dup3\n        /* \"contracts/NFTMasterChef.sol\":475:476  a */\n      dup5\n        /* \"contracts/NFTMasterChef.sol\":475:480  a + b */\n      tag_458\n      swap2\n      swap1\n      tag_459\n      jump\t// in\n    tag_458:\n        /* \"contracts/NFTMasterChef.sol\":463:480  uint256 c = a + b */\n      swap1\n      pop\n        /* \"contracts/NFTMasterChef.sol\":504:505  a */\n      dup4\n        /* \"contracts/NFTMasterChef.sol\":499:500  c */\n      dup2\n        /* \"contracts/NFTMasterChef.sol\":499:505  c >= a */\n      lt\n      iszero\n        /* \"contracts/NFTMasterChef.sol\":491:537  require(c >= a, \"SafeMath: addition overflow\") */\n      tag_460\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_461\n      swap1\n      tag_462\n      jump\t// in\n    tag_461:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_460:\n        /* \"contracts/NFTMasterChef.sol\":557:558  c */\n      dup1\n        /* \"contracts/NFTMasterChef.sol\":550:558  return c */\n      swap2\n      pop\n      pop\n        /* \"contracts/NFTMasterChef.sol\":385:566  function add(uint256 a, uint256 b) internal pure returns (uint256) {\r... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/NFTMasterChef.sol\":16150:16361  function safeTransfer(\r... */\n    tag_180:\n        /* \"contracts/NFTMasterChef.sol\":16267:16353  _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value)) */\n      tag_464\n        /* \"contracts/NFTMasterChef.sol\":16287:16292  token */\n      dup4\n        /* \"contracts/NFTMasterChef.sol\":16317:16340  token.transfer.selector */\n      shl(0xe0, 0xa9059cbb)\n        /* \"contracts/NFTMasterChef.sol\":16342:16344  to */\n      dup5\n        /* \"contracts/NFTMasterChef.sol\":16346:16351  value */\n      dup5\n        /* \"contracts/NFTMasterChef.sol\":16294:16352  abi.encodeWithSelector(token.transfer.selector, to, value) */\n      add(0x24, mload(0x40))\n      tag_465\n      swap3\n      swap2\n      swap1\n      tag_466\n      jump\t// in\n    tag_465:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n      swap1\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      0x20\n      dup3\n      add\n      dup1\n      mload\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n      dup4\n      dup2\n      dup4\n      and\n      or\n      dup4\n      mstore\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/NFTMasterChef.sol\":16267:16286  _callOptionalReturn */\n      tag_467\n        /* \"contracts/NFTMasterChef.sol\":16267:16353  _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value)) */\n      jump\t// in\n    tag_464:\n        /* \"contracts/NFTMasterChef.sol\":16150:16361  function safeTransfer(\r... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/NFTMasterChef.sol\":19479:19577  function _msgSender() internal view virtual returns (address) {\r... */\n    tag_227:\n        /* \"contracts/NFTMasterChef.sol\":19532:19539  address */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":19559:19569  msg.sender */\n      caller\n        /* \"contracts/NFTMasterChef.sol\":19552:19569  return msg.sender */\n      swap1\n      pop\n        /* \"contracts/NFTMasterChef.sol\":19479:19577  function _msgSender() internal view virtual returns (address) {\r... */\n      swap1\n      jump\t// out\n        /* \"contracts/NFTMasterChef.sol\":16369:16617  function safeTransferFrom(\r... */\n    tag_264:\n        /* \"contracts/NFTMasterChef.sol\":16513:16609  _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value)) */\n      tag_470\n        /* \"contracts/NFTMasterChef.sol\":16533:16538  token */\n      dup5\n        /* \"contracts/NFTMasterChef.sol\":16563:16590  token.transferFrom.selector */\n      shl(0xe0, 0x23b872dd)\n        /* \"contracts/NFTMasterChef.sol\":16592:16596  from */\n      dup6\n        /* \"contracts/NFTMasterChef.sol\":16598:16600  to */\n      dup6\n        /* \"contracts/NFTMasterChef.sol\":16602:16607  value */\n      dup6\n        /* \"contracts/NFTMasterChef.sol\":16540:16608  abi.encodeWithSelector(token.transferFrom.selector, from, to, value) */\n      add(0x24, mload(0x40))\n      tag_471\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_472\n      jump\t// in\n    tag_471:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n      swap1\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      0x20\n      dup3\n      add\n      dup1\n      mload\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n      dup4\n      dup2\n      dup4\n      and\n      or\n      dup4\n      mstore\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/NFTMasterChef.sol\":16513:16532  _callOptionalReturn */\n      tag_467\n        /* \"contracts/NFTMasterChef.sol\":16513:16609  _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value)) */\n      jump\t// in\n    tag_470:\n        /* \"contracts/NFTMasterChef.sol\":16369:16617  function safeTransferFrom(\r... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/NFTMasterChef.sol\":16886:17502  function safeApprove(\r... */\n    tag_302:\n        /* \"contracts/NFTMasterChef.sol\":17259:17260  0 */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":17250:17255  value */\n      dup2\n        /* \"contracts/NFTMasterChef.sol\":17250:17260  value == 0 */\n      eq\n        /* \"contracts/NFTMasterChef.sol\":17249:17311  (value == 0) || (token.allowance(address(this), spender) == 0) */\n      dup1\n      tag_474\n      jumpi\n      pop\n        /* \"contracts/NFTMasterChef.sol\":17309:17310  0 */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":17266:17271  token */\n      dup4\n        /* \"contracts/NFTMasterChef.sol\":17266:17281  token.allowance */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xdd62ed3e\n        /* \"contracts/NFTMasterChef.sol\":17290:17294  this */\n      address\n        /* \"contracts/NFTMasterChef.sol\":17297:17304  spender */\n      dup6\n        /* \"contracts/NFTMasterChef.sol\":17266:17305  token.allowance(address(this), spender) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_475\n      swap3\n      swap2\n      swap1\n      tag_476\n      jump\t// in\n    tag_475:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_477\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_477:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_479\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_479:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_480\n      swap2\n      swap1\n      tag_195\n      jump\t// in\n    tag_480:\n        /* \"contracts/NFTMasterChef.sol\":17266:17310  token.allowance(address(this), spender) == 0 */\n      eq\n        /* \"contracts/NFTMasterChef.sol\":17249:17311  (value == 0) || (token.allowance(address(this), spender) == 0) */\n    tag_474:\n        /* \"contracts/NFTMasterChef.sol\":17227:17393  require(\r... */\n      tag_481\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_482\n      swap1\n      tag_483\n      jump\t// in\n    tag_482:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_481:\n        /* \"contracts/NFTMasterChef.sol\":17404:17494  _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, value)) */\n      tag_484\n        /* \"contracts/NFTMasterChef.sol\":17424:17429  token */\n      dup4\n        /* \"contracts/NFTMasterChef.sol\":17454:17476  token.approve.selector */\n      shl(0xe0, 0x095ea7b3)\n        /* \"contracts/NFTMasterChef.sol\":17478:17485  spender */\n      dup5\n        /* \"contracts/NFTMasterChef.sol\":17487:17492  value */\n      dup5\n        /* \"contracts/NFTMasterChef.sol\":17431:17493  abi.encodeWithSelector(token.approve.selector, spender, value) */\n      add(0x24, mload(0x40))\n      tag_485\n      swap3\n      swap2\n      swap1\n      tag_466\n      jump\t// in\n    tag_485:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n      swap1\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      0x20\n      dup3\n      add\n      dup1\n      mload\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n      dup4\n      dup2\n      dup4\n      and\n      or\n      dup4\n      mstore\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/NFTMasterChef.sol\":17404:17423  _callOptionalReturn */\n      tag_467\n        /* \"contracts/NFTMasterChef.sol\":17404:17494  _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, value)) */\n      jump\t// in\n    tag_484:\n        /* \"contracts/NFTMasterChef.sol\":16886:17502  function safeApprove(\r... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/NFTMasterChef.sol\":21375:21566  function _transferOwnership(address newOwner) internal virtual {\r... */\n    tag_386:\n        /* \"contracts/NFTMasterChef.sol\":21449:21465  address oldOwner */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":21468:21474  _owner */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/NFTMasterChef.sol\":21449:21474  address oldOwner = _owner */\n      swap1\n      pop\n        /* \"contracts/NFTMasterChef.sol\":21494:21502  newOwner */\n      dup2\n        /* \"contracts/NFTMasterChef.sol\":21485:21491  _owner */\n      0x00\n      dup1\n        /* \"contracts/NFTMasterChef.sol\":21485:21502  _owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/NFTMasterChef.sol\":21549:21557  newOwner */\n      dup2\n        /* \"contracts/NFTMasterChef.sol\":21518:21558  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/NFTMasterChef.sol\":21539:21547  oldOwner */\n      dup2\n        /* \"contracts/NFTMasterChef.sol\":21518:21558  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/NFTMasterChef.sol\":21438:21566  {\r... */\n      pop\n        /* \"contracts/NFTMasterChef.sol\":21375:21566  function _transferOwnership(address newOwner) internal virtual {\r... */\n      pop\n      jump\t// out\n        /* \"contracts/NFTMasterChef.sol\":3358:3703  function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\r... */\n    tag_453:\n        /* \"contracts/NFTMasterChef.sol\":3444:3451  uint256 */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":3543:3544  0 */\n      dup1\n        /* \"contracts/NFTMasterChef.sol\":3539:3540  b */\n      dup4\n        /* \"contracts/NFTMasterChef.sol\":3539:3544  b > 0 */\n      gt\n        /* \"contracts/NFTMasterChef.sol\":3546:3558  errorMessage */\n      dup3\n        /* \"contracts/NFTMasterChef.sol\":3531:3559  require(b > 0, errorMessage) */\n      swap1\n      tag_488\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_489\n      swap2\n      swap1\n      tag_490\n      jump\t// in\n    tag_489:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_488:\n      pop\n        /* \"contracts/NFTMasterChef.sol\":3570:3579  uint256 c */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":3586:3587  b */\n      dup4\n        /* \"contracts/NFTMasterChef.sol\":3582:3583  a */\n      dup6\n        /* \"contracts/NFTMasterChef.sol\":3582:3587  a / b */\n      tag_491\n      swap2\n      swap1\n      tag_447\n      jump\t// in\n    tag_491:\n        /* \"contracts/NFTMasterChef.sol\":3570:3587  uint256 c = a / b */\n      swap1\n      pop\n        /* \"contracts/NFTMasterChef.sol\":3694:3695  c */\n      dup1\n        /* \"contracts/NFTMasterChef.sol\":3687:3695  return c */\n      swap2\n      pop\n      pop\n        /* \"contracts/NFTMasterChef.sol\":3358:3703  function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\r... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/NFTMasterChef.sol\":1314:1506  function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\r... */\n    tag_456:\n        /* \"contracts/NFTMasterChef.sol\":1400:1407  uint256 */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":1433:1434  a */\n      dup4\n        /* \"contracts/NFTMasterChef.sol\":1428:1429  b */\n      dup4\n        /* \"contracts/NFTMasterChef.sol\":1428:1434  b <= a */\n      gt\n      iszero\n        /* \"contracts/NFTMasterChef.sol\":1436:1448  errorMessage */\n      dup3\n        /* \"contracts/NFTMasterChef.sol\":1420:1449  require(b <= a, errorMessage) */\n      swap1\n      tag_493\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_494\n      swap2\n      swap1\n      tag_490\n      jump\t// in\n    tag_494:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_493:\n      pop\n        /* \"contracts/NFTMasterChef.sol\":1460:1469  uint256 c */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":1476:1477  b */\n      dup4\n        /* \"contracts/NFTMasterChef.sol\":1472:1473  a */\n      dup6\n        /* \"contracts/NFTMasterChef.sol\":1472:1477  a - b */\n      tag_495\n      swap2\n      swap1\n      tag_496\n      jump\t// in\n    tag_495:\n        /* \"contracts/NFTMasterChef.sol\":1460:1477  uint256 c = a - b */\n      swap1\n      pop\n        /* \"contracts/NFTMasterChef.sol\":1497:1498  c */\n      dup1\n        /* \"contracts/NFTMasterChef.sol\":1490:1498  return c */\n      swap2\n      pop\n      pop\n        /* \"contracts/NFTMasterChef.sol\":1314:1506  function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\r... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/NFTMasterChef.sol\":18723:19439  function _callOptionalReturn(IERC20 token, bytes memory data) private {\r... */\n    tag_467:\n        /* \"contracts/NFTMasterChef.sol\":19147:19170  bytes memory returndata */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":19173:19242  address(token).functionCall(data, \"SafeERC20: low-level call failed\") */\n      tag_498\n        /* \"contracts/NFTMasterChef.sol\":19201:19205  data */\n      dup3\n        /* \"contracts/NFTMasterChef.sol\":19173:19242  address(token).functionCall(data, \"SafeERC20: low-level call failed\") */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x20\n      dup2\n      mstore\n      0x20\n      add\n      0x5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564\n      dup2\n      mstore\n      pop\n        /* \"contracts/NFTMasterChef.sol\":19181:19186  token */\n      dup6\n        /* \"contracts/NFTMasterChef.sol\":19173:19200  address(token).functionCall */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_499\n      swap1\n        /* \"contracts/NFTMasterChef.sol\":19173:19242  address(token).functionCall(data, \"SafeERC20: low-level call failed\") */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_498:\n        /* \"contracts/NFTMasterChef.sol\":19147:19242  bytes memory returndata = address(token).functionCall(data, \"SafeERC20: low-level call failed\") */\n      swap1\n      pop\n        /* \"contracts/NFTMasterChef.sol\":19277:19278  0 */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":19257:19267  returndata */\n      dup2\n        /* \"contracts/NFTMasterChef.sol\":19257:19274  returndata.length */\n      mload\n        /* \"contracts/NFTMasterChef.sol\":19257:19278  returndata.length > 0 */\n      gt\n        /* \"contracts/NFTMasterChef.sol\":19253:19432  if (returndata.length > 0) {\r... */\n      iszero\n      tag_500\n      jumpi\n        /* \"contracts/NFTMasterChef.sol\":19354:19364  returndata */\n      dup1\n        /* \"contracts/NFTMasterChef.sol\":19343:19373  abi.decode(returndata, (bool)) */\n      dup1\n      0x20\n      add\n      swap1\n      mload\n      dup2\n      add\n      swap1\n      tag_501\n      swap2\n      swap1\n      tag_502\n      jump\t// in\n    tag_501:\n        /* \"contracts/NFTMasterChef.sol\":19335:19420  require(abi.decode(returndata, (bool)), \"SafeERC20: ERC20 operation did not succeed\") */\n      tag_503\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_504\n      swap1\n      tag_505\n      jump\t// in\n    tag_504:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_503:\n        /* \"contracts/NFTMasterChef.sol\":19253:19432  if (returndata.length > 0) {\r... */\n    tag_500:\n        /* \"contracts/NFTMasterChef.sol\":18793:19439  {\r... */\n      pop\n        /* \"contracts/NFTMasterChef.sol\":18723:19439  function _callOptionalReturn(IERC20 token, bytes memory data) private {\r... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/NFTMasterChef.sol\":11566:11795  function functionCall(\r... */\n    tag_499:\n        /* \"contracts/NFTMasterChef.sol\":11703:11715  bytes memory */\n      0x60\n        /* \"contracts/NFTMasterChef.sol\":11735:11787  functionCallWithValue(target, data, 0, errorMessage) */\n      tag_507\n        /* \"contracts/NFTMasterChef.sol\":11757:11763  target */\n      dup5\n        /* \"contracts/NFTMasterChef.sol\":11765:11769  data */\n      dup5\n        /* \"contracts/NFTMasterChef.sol\":11771:11772  0 */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":11774:11786  errorMessage */\n      dup6\n        /* \"contracts/NFTMasterChef.sol\":11735:11756  functionCallWithValue */\n      tag_508\n        /* \"contracts/NFTMasterChef.sol\":11735:11787  functionCallWithValue(target, data, 0, errorMessage) */\n      jump\t// in\n    tag_507:\n        /* \"contracts/NFTMasterChef.sol\":11728:11787  return functionCallWithValue(target, data, 0, errorMessage) */\n      swap1\n      pop\n        /* \"contracts/NFTMasterChef.sol\":11566:11795  function functionCall(\r... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/NFTMasterChef.sol\":12686:13196  function functionCallWithValue(\r... */\n    tag_508:\n        /* \"contracts/NFTMasterChef.sol\":12856:12868  bytes memory */\n      0x60\n        /* \"contracts/NFTMasterChef.sol\":12914:12919  value */\n      dup3\n        /* \"contracts/NFTMasterChef.sol\":12889:12910  address(this).balance */\n      selfbalance\n        /* \"contracts/NFTMasterChef.sol\":12889:12919  address(this).balance >= value */\n      lt\n      iszero\n        /* \"contracts/NFTMasterChef.sol\":12881:12962  require(address(this).balance >= value, \"Address: insufficient balance for call\") */\n      tag_510\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_511\n      swap1\n      tag_512\n      jump\t// in\n    tag_511:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_510:\n        /* \"contracts/NFTMasterChef.sol\":12981:12999  isContract(target) */\n      tag_513\n        /* \"contracts/NFTMasterChef.sol\":12992:12998  target */\n      dup6\n        /* \"contracts/NFTMasterChef.sol\":12981:12991  isContract */\n      tag_514\n        /* \"contracts/NFTMasterChef.sol\":12981:12999  isContract(target) */\n      jump\t// in\n    tag_513:\n        /* \"contracts/NFTMasterChef.sol\":12973:13033  require(isContract(target), \"Address: call to non-contract\") */\n      tag_515\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_516\n      swap1\n      tag_517\n      jump\t// in\n    tag_516:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_515:\n        /* \"contracts/NFTMasterChef.sol\":13047:13059  bool success */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":13061:13084  bytes memory returndata */\n      dup1\n        /* \"contracts/NFTMasterChef.sol\":13088:13094  target */\n      dup7\n        /* \"contracts/NFTMasterChef.sol\":13088:13099  target.call */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/NFTMasterChef.sol\":13107:13112  value */\n      dup6\n        /* \"contracts/NFTMasterChef.sol\":13114:13118  data */\n      dup8\n        /* \"contracts/NFTMasterChef.sol\":13088:13119  target.call{value: value}(data) */\n      mload(0x40)\n      tag_518\n      swap2\n      swap1\n      tag_519\n      jump\t// in\n    tag_518:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_522\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_521)\n    tag_522:\n      0x60\n      swap2\n      pop\n    tag_521:\n      pop\n        /* \"contracts/NFTMasterChef.sol\":13046:13119  (bool success, bytes memory returndata) = target.call{value: value}(data) */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"contracts/NFTMasterChef.sol\":13137:13188  verifyCallResult(success, returndata, errorMessage) */\n      tag_523\n        /* \"contracts/NFTMasterChef.sol\":13154:13161  success */\n      dup3\n        /* \"contracts/NFTMasterChef.sol\":13163:13173  returndata */\n      dup3\n        /* \"contracts/NFTMasterChef.sol\":13175:13187  errorMessage */\n      dup7\n        /* \"contracts/NFTMasterChef.sol\":13137:13153  verifyCallResult */\n      tag_524\n        /* \"contracts/NFTMasterChef.sol\":13137:13188  verifyCallResult(success, returndata, errorMessage) */\n      jump\t// in\n    tag_523:\n        /* \"contracts/NFTMasterChef.sol\":13130:13188  return verifyCallResult(success, returndata, errorMessage) */\n      swap3\n      pop\n      pop\n      pop\n        /* \"contracts/NFTMasterChef.sol\":12686:13196  function functionCallWithValue(\r... */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/NFTMasterChef.sol\":8821:9147  function isContract(address account) internal view returns (bool) {\r... */\n    tag_514:\n        /* \"contracts/NFTMasterChef.sol\":8881:8885  bool */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":9138:9139  0 */\n      dup1\n        /* \"contracts/NFTMasterChef.sol\":9116:9123  account */\n      dup3\n        /* \"contracts/NFTMasterChef.sol\":9116:9135  account.code.length */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      extcodesize\n        /* \"contracts/NFTMasterChef.sol\":9116:9139  account.code.length > 0 */\n      gt\n        /* \"contracts/NFTMasterChef.sol\":9109:9139  return account.code.length > 0 */\n      swap1\n      pop\n        /* \"contracts/NFTMasterChef.sol\":8821:9147  function isContract(address account) internal view returns (bool) {\r... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/NFTMasterChef.sol\":15372:16084  function verifyCallResult(\r... */\n    tag_524:\n        /* \"contracts/NFTMasterChef.sol\":15522:15534  bytes memory */\n      0x60\n        /* \"contracts/NFTMasterChef.sol\":15551:15558  success */\n      dup4\n        /* \"contracts/NFTMasterChef.sol\":15547:16077  if (success) {\r... */\n      iszero\n      tag_527\n      jumpi\n        /* \"contracts/NFTMasterChef.sol\":15582:15592  returndata */\n      dup3\n        /* \"contracts/NFTMasterChef.sol\":15575:15592  return returndata */\n      swap1\n      pop\n      jump(tag_526)\n        /* \"contracts/NFTMasterChef.sol\":15547:16077  if (success) {\r... */\n    tag_527:\n        /* \"contracts/NFTMasterChef.sol\":15716:15717  0 */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":15696:15706  returndata */\n      dup4\n        /* \"contracts/NFTMasterChef.sol\":15696:15713  returndata.length */\n      mload\n        /* \"contracts/NFTMasterChef.sol\":15696:15717  returndata.length > 0 */\n      gt\n        /* \"contracts/NFTMasterChef.sol\":15692:16066  if (returndata.length > 0) {\r... */\n      iszero\n      tag_529\n      jumpi\n        /* \"contracts/NFTMasterChef.sol\":15894:15904  returndata */\n      dup3\n        /* \"contracts/NFTMasterChef.sol\":15888:15905  mload(returndata) */\n      mload\n        /* \"contracts/NFTMasterChef.sol\":15955:15970  returndata_size */\n      dup1\n        /* \"contracts/NFTMasterChef.sol\":15942:15952  returndata */\n      dup5\n        /* \"contracts/NFTMasterChef.sol\":15938:15940  32 */\n      0x20\n        /* \"contracts/NFTMasterChef.sol\":15934:15953  add(32, returndata) */\n      add\n        /* \"contracts/NFTMasterChef.sol\":15927:15971  revert(add(32, returndata), returndata_size) */\n      revert\n        /* \"contracts/NFTMasterChef.sol\":15692:16066  if (returndata.length > 0) {\r... */\n    tag_529:\n        /* \"contracts/NFTMasterChef.sol\":16037:16049  errorMessage */\n      dup2\n        /* \"contracts/NFTMasterChef.sol\":16030:16050  revert(errorMessage) */\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_531\n      swap2\n      swap1\n      tag_490\n      jump\t// in\n    tag_531:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/NFTMasterChef.sol\":15372:16084  function verifyCallResult(\r... */\n    tag_526:\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:146   */\n    tag_533:\n        /* \"#utility.yul\":53:58   */\n      0x00\n        /* \"#utility.yul\":91:97   */\n      dup2\n        /* \"#utility.yul\":78:98   */\n      calldataload\n        /* \"#utility.yul\":69:98   */\n      swap1\n      pop\n        /* \"#utility.yul\":107:140   */\n      tag_535\n        /* \"#utility.yul\":134:139   */\n      dup2\n        /* \"#utility.yul\":107:140   */\n      tag_536\n      jump\t// in\n    tag_535:\n        /* \"#utility.yul\":7:146   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":152:285   */\n    tag_537:\n        /* \"#utility.yul\":195:200   */\n      0x00\n        /* \"#utility.yul\":233:239   */\n      dup2\n        /* \"#utility.yul\":220:240   */\n      calldataload\n        /* \"#utility.yul\":211:240   */\n      swap1\n      pop\n        /* \"#utility.yul\":249:279   */\n      tag_539\n        /* \"#utility.yul\":273:278   */\n      dup2\n        /* \"#utility.yul\":249:279   */\n      tag_540\n      jump\t// in\n    tag_539:\n        /* \"#utility.yul\":152:285   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":291:428   */\n    tag_541:\n        /* \"#utility.yul\":345:350   */\n      0x00\n        /* \"#utility.yul\":376:382   */\n      dup2\n        /* \"#utility.yul\":370:383   */\n      mload\n        /* \"#utility.yul\":361:383   */\n      swap1\n      pop\n        /* \"#utility.yul\":392:422   */\n      tag_543\n        /* \"#utility.yul\":416:421   */\n      dup2\n        /* \"#utility.yul\":392:422   */\n      tag_540\n      jump\t// in\n    tag_543:\n        /* \"#utility.yul\":291:428   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":434:601   */\n    tag_544:\n        /* \"#utility.yul\":494:499   */\n      0x00\n        /* \"#utility.yul\":532:538   */\n      dup2\n        /* \"#utility.yul\":519:539   */\n      calldataload\n        /* \"#utility.yul\":510:539   */\n      swap1\n      pop\n        /* \"#utility.yul\":548:595   */\n      tag_546\n        /* \"#utility.yul\":589:594   */\n      dup2\n        /* \"#utility.yul\":548:595   */\n      tag_547\n      jump\t// in\n    tag_546:\n        /* \"#utility.yul\":434:601   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":607:778   */\n    tag_548:\n        /* \"#utility.yul\":678:683   */\n      0x00\n        /* \"#utility.yul\":709:715   */\n      dup2\n        /* \"#utility.yul\":703:716   */\n      mload\n        /* \"#utility.yul\":694:716   */\n      swap1\n      pop\n        /* \"#utility.yul\":725:772   */\n      tag_550\n        /* \"#utility.yul\":766:771   */\n      dup2\n        /* \"#utility.yul\":725:772   */\n      tag_547\n      jump\t// in\n    tag_550:\n        /* \"#utility.yul\":607:778   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":784:953   */\n    tag_551:\n        /* \"#utility.yul\":845:850   */\n      0x00\n        /* \"#utility.yul\":883:889   */\n      dup2\n        /* \"#utility.yul\":870:890   */\n      calldataload\n        /* \"#utility.yul\":861:890   */\n      swap1\n      pop\n        /* \"#utility.yul\":899:947   */\n      tag_553\n        /* \"#utility.yul\":941:946   */\n      dup2\n        /* \"#utility.yul\":899:947   */\n      tag_554\n      jump\t// in\n    tag_553:\n        /* \"#utility.yul\":784:953   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":959:1140   */\n    tag_555:\n        /* \"#utility.yul\":1026:1031   */\n      0x00\n        /* \"#utility.yul\":1064:1070   */\n      dup2\n        /* \"#utility.yul\":1051:1071   */\n      calldataload\n        /* \"#utility.yul\":1042:1071   */\n      swap1\n      pop\n        /* \"#utility.yul\":1080:1134   */\n      tag_557\n        /* \"#utility.yul\":1128:1133   */\n      dup2\n        /* \"#utility.yul\":1080:1134   */\n      tag_558\n      jump\t// in\n    tag_557:\n        /* \"#utility.yul\":959:1140   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1146:1285   */\n    tag_559:\n        /* \"#utility.yul\":1192:1197   */\n      0x00\n        /* \"#utility.yul\":1230:1236   */\n      dup2\n        /* \"#utility.yul\":1217:1237   */\n      calldataload\n        /* \"#utility.yul\":1208:1237   */\n      swap1\n      pop\n        /* \"#utility.yul\":1246:1279   */\n      tag_561\n        /* \"#utility.yul\":1273:1278   */\n      dup2\n        /* \"#utility.yul\":1246:1279   */\n      tag_562\n      jump\t// in\n    tag_561:\n        /* \"#utility.yul\":1146:1285   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1291:1434   */\n    tag_563:\n        /* \"#utility.yul\":1348:1353   */\n      0x00\n        /* \"#utility.yul\":1379:1385   */\n      dup2\n        /* \"#utility.yul\":1373:1386   */\n      mload\n        /* \"#utility.yul\":1364:1386   */\n      swap1\n      pop\n        /* \"#utility.yul\":1395:1428   */\n      tag_565\n        /* \"#utility.yul\":1422:1427   */\n      dup2\n        /* \"#utility.yul\":1395:1428   */\n      tag_562\n      jump\t// in\n    tag_565:\n        /* \"#utility.yul\":1291:1434   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1440:1769   */\n    tag_123:\n        /* \"#utility.yul\":1499:1505   */\n      0x00\n        /* \"#utility.yul\":1548:1550   */\n      0x20\n        /* \"#utility.yul\":1536:1545   */\n      dup3\n        /* \"#utility.yul\":1527:1534   */\n      dup5\n        /* \"#utility.yul\":1523:1546   */\n      sub\n        /* \"#utility.yul\":1519:1551   */\n      slt\n        /* \"#utility.yul\":1516:1635   */\n      iszero\n      tag_567\n      jumpi\n        /* \"#utility.yul\":1554:1633   */\n      tag_568\n      tag_569\n      jump\t// in\n    tag_568:\n        /* \"#utility.yul\":1516:1635   */\n    tag_567:\n        /* \"#utility.yul\":1674:1675   */\n      0x00\n        /* \"#utility.yul\":1699:1752   */\n      tag_570\n        /* \"#utility.yul\":1744:1751   */\n      dup5\n        /* \"#utility.yul\":1735:1741   */\n      dup3\n        /* \"#utility.yul\":1724:1733   */\n      dup6\n        /* \"#utility.yul\":1720:1742   */\n      add\n        /* \"#utility.yul\":1699:1752   */\n      tag_533\n      jump\t// in\n    tag_570:\n        /* \"#utility.yul\":1689:1752   */\n      swap2\n      pop\n        /* \"#utility.yul\":1645:1762   */\n      pop\n        /* \"#utility.yul\":1440:1769   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1775:2120   */\n    tag_502:\n        /* \"#utility.yul\":1842:1848   */\n      0x00\n        /* \"#utility.yul\":1891:1893   */\n      0x20\n        /* \"#utility.yul\":1879:1888   */\n      dup3\n        /* \"#utility.yul\":1870:1877   */\n      dup5\n        /* \"#utility.yul\":1866:1889   */\n      sub\n        /* \"#utility.yul\":1862:1894   */\n      slt\n        /* \"#utility.yul\":1859:1978   */\n      iszero\n      tag_572\n      jumpi\n        /* \"#utility.yul\":1897:1976   */\n      tag_573\n      tag_569\n      jump\t// in\n    tag_573:\n        /* \"#utility.yul\":1859:1978   */\n    tag_572:\n        /* \"#utility.yul\":2017:2018   */\n      0x00\n        /* \"#utility.yul\":2042:2103   */\n      tag_574\n        /* \"#utility.yul\":2095:2102   */\n      dup5\n        /* \"#utility.yul\":2086:2092   */\n      dup3\n        /* \"#utility.yul\":2075:2084   */\n      dup6\n        /* \"#utility.yul\":2071:2093   */\n      add\n        /* \"#utility.yul\":2042:2103   */\n      tag_541\n      jump\t// in\n    tag_574:\n        /* \"#utility.yul\":2032:2103   */\n      swap2\n      pop\n        /* \"#utility.yul\":1988:2113   */\n      pop\n        /* \"#utility.yul\":1775:2120   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2126:2505   */\n    tag_308:\n        /* \"#utility.yul\":2210:2216   */\n      0x00\n        /* \"#utility.yul\":2259:2261   */\n      0x20\n        /* \"#utility.yul\":2247:2256   */\n      dup3\n        /* \"#utility.yul\":2238:2245   */\n      dup5\n        /* \"#utility.yul\":2234:2257   */\n      sub\n        /* \"#utility.yul\":2230:2262   */\n      slt\n        /* \"#utility.yul\":2227:2346   */\n      iszero\n      tag_576\n      jumpi\n        /* \"#utility.yul\":2265:2344   */\n      tag_577\n      tag_569\n      jump\t// in\n    tag_577:\n        /* \"#utility.yul\":2227:2346   */\n    tag_576:\n        /* \"#utility.yul\":2385:2386   */\n      0x00\n        /* \"#utility.yul\":2410:2488   */\n      tag_578\n        /* \"#utility.yul\":2480:2487   */\n      dup5\n        /* \"#utility.yul\":2471:2477   */\n      dup3\n        /* \"#utility.yul\":2460:2469   */\n      dup6\n        /* \"#utility.yul\":2456:2478   */\n      add\n        /* \"#utility.yul\":2410:2488   */\n      tag_548\n      jump\t// in\n    tag_578:\n        /* \"#utility.yul\":2400:2488   */\n      swap2\n      pop\n        /* \"#utility.yul\":2356:2498   */\n      pop\n        /* \"#utility.yul\":2126:2505   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2511:3015   */\n    tag_87:\n        /* \"#utility.yul\":2594:2600   */\n      0x00\n        /* \"#utility.yul\":2602:2608   */\n      dup1\n        /* \"#utility.yul\":2651:2653   */\n      0x40\n        /* \"#utility.yul\":2639:2648   */\n      dup4\n        /* \"#utility.yul\":2630:2637   */\n      dup6\n        /* \"#utility.yul\":2626:2649   */\n      sub\n        /* \"#utility.yul\":2622:2654   */\n      slt\n        /* \"#utility.yul\":2619:2738   */\n      iszero\n      tag_580\n      jumpi\n        /* \"#utility.yul\":2657:2736   */\n      tag_581\n      tag_569\n      jump\t// in\n    tag_581:\n        /* \"#utility.yul\":2619:2738   */\n    tag_580:\n        /* \"#utility.yul\":2777:2778   */\n      0x00\n        /* \"#utility.yul\":2802:2870   */\n      tag_582\n        /* \"#utility.yul\":2862:2869   */\n      dup6\n        /* \"#utility.yul\":2853:2859   */\n      dup3\n        /* \"#utility.yul\":2842:2851   */\n      dup7\n        /* \"#utility.yul\":2838:2860   */\n      add\n        /* \"#utility.yul\":2802:2870   */\n      tag_551\n      jump\t// in\n    tag_582:\n        /* \"#utility.yul\":2792:2870   */\n      swap3\n      pop\n        /* \"#utility.yul\":2748:2880   */\n      pop\n        /* \"#utility.yul\":2919:2921   */\n      0x20\n        /* \"#utility.yul\":2945:2998   */\n      tag_583\n        /* \"#utility.yul\":2990:2997   */\n      dup6\n        /* \"#utility.yul\":2981:2987   */\n      dup3\n        /* \"#utility.yul\":2970:2979   */\n      dup7\n        /* \"#utility.yul\":2966:2988   */\n      add\n        /* \"#utility.yul\":2945:2998   */\n      tag_559\n      jump\t// in\n    tag_583:\n        /* \"#utility.yul\":2935:2998   */\n      swap2\n      pop\n        /* \"#utility.yul\":2890:3008   */\n      pop\n        /* \"#utility.yul\":2511:3015   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3021:3392   */\n    tag_68:\n        /* \"#utility.yul\":3101:3107   */\n      0x00\n        /* \"#utility.yul\":3150:3152   */\n      0x20\n        /* \"#utility.yul\":3138:3147   */\n      dup3\n        /* \"#utility.yul\":3129:3136   */\n      dup5\n        /* \"#utility.yul\":3125:3148   */\n      sub\n        /* \"#utility.yul\":3121:3153   */\n      slt\n        /* \"#utility.yul\":3118:3237   */\n      iszero\n      tag_585\n      jumpi\n        /* \"#utility.yul\":3156:3235   */\n      tag_586\n      tag_569\n      jump\t// in\n    tag_586:\n        /* \"#utility.yul\":3118:3237   */\n    tag_585:\n        /* \"#utility.yul\":3276:3277   */\n      0x00\n        /* \"#utility.yul\":3301:3375   */\n      tag_587\n        /* \"#utility.yul\":3367:3374   */\n      dup5\n        /* \"#utility.yul\":3358:3364   */\n      dup3\n        /* \"#utility.yul\":3347:3356   */\n      dup6\n        /* \"#utility.yul\":3343:3365   */\n      add\n        /* \"#utility.yul\":3301:3375   */\n      tag_555\n      jump\t// in\n    tag_587:\n        /* \"#utility.yul\":3291:3375   */\n      swap2\n      pop\n        /* \"#utility.yul\":3247:3385   */\n      pop\n        /* \"#utility.yul\":3021:3392   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3398:3727   */\n    tag_48:\n        /* \"#utility.yul\":3457:3463   */\n      0x00\n        /* \"#utility.yul\":3506:3508   */\n      0x20\n        /* \"#utility.yul\":3494:3503   */\n      dup3\n        /* \"#utility.yul\":3485:3492   */\n      dup5\n        /* \"#utility.yul\":3481:3504   */\n      sub\n        /* \"#utility.yul\":3477:3509   */\n      slt\n        /* \"#utility.yul\":3474:3593   */\n      iszero\n      tag_589\n      jumpi\n        /* \"#utility.yul\":3512:3591   */\n      tag_590\n      tag_569\n      jump\t// in\n    tag_590:\n        /* \"#utility.yul\":3474:3593   */\n    tag_589:\n        /* \"#utility.yul\":3632:3633   */\n      0x00\n        /* \"#utility.yul\":3657:3710   */\n      tag_591\n        /* \"#utility.yul\":3702:3709   */\n      dup5\n        /* \"#utility.yul\":3693:3699   */\n      dup3\n        /* \"#utility.yul\":3682:3691   */\n      dup6\n        /* \"#utility.yul\":3678:3700   */\n      add\n        /* \"#utility.yul\":3657:3710   */\n      tag_559\n      jump\t// in\n    tag_591:\n        /* \"#utility.yul\":3647:3710   */\n      swap2\n      pop\n        /* \"#utility.yul\":3603:3720   */\n      pop\n        /* \"#utility.yul\":3398:3727   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3733:4084   */\n    tag_195:\n        /* \"#utility.yul\":3803:3809   */\n      0x00\n        /* \"#utility.yul\":3852:3854   */\n      0x20\n        /* \"#utility.yul\":3840:3849   */\n      dup3\n        /* \"#utility.yul\":3831:3838   */\n      dup5\n        /* \"#utility.yul\":3827:3850   */\n      sub\n        /* \"#utility.yul\":3823:3855   */\n      slt\n        /* \"#utility.yul\":3820:3939   */\n      iszero\n      tag_593\n      jumpi\n        /* \"#utility.yul\":3858:3937   */\n      tag_594\n      tag_569\n      jump\t// in\n    tag_594:\n        /* \"#utility.yul\":3820:3939   */\n    tag_593:\n        /* \"#utility.yul\":3978:3979   */\n      0x00\n        /* \"#utility.yul\":4003:4067   */\n      tag_595\n        /* \"#utility.yul\":4059:4066   */\n      dup5\n        /* \"#utility.yul\":4050:4056   */\n      dup3\n        /* \"#utility.yul\":4039:4048   */\n      dup6\n        /* \"#utility.yul\":4035:4057   */\n      add\n        /* \"#utility.yul\":4003:4067   */\n      tag_563\n      jump\t// in\n    tag_595:\n        /* \"#utility.yul\":3993:4067   */\n      swap2\n      pop\n        /* \"#utility.yul\":3949:4077   */\n      pop\n        /* \"#utility.yul\":3733:4084   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4090:4564   */\n    tag_136:\n        /* \"#utility.yul\":4158:4164   */\n      0x00\n        /* \"#utility.yul\":4166:4172   */\n      dup1\n        /* \"#utility.yul\":4215:4217   */\n      0x40\n        /* \"#utility.yul\":4203:4212   */\n      dup4\n        /* \"#utility.yul\":4194:4201   */\n      dup6\n        /* \"#utility.yul\":4190:4213   */\n      sub\n        /* \"#utility.yul\":4186:4218   */\n      slt\n        /* \"#utility.yul\":4183:4302   */\n      iszero\n      tag_597\n      jumpi\n        /* \"#utility.yul\":4221:4300   */\n      tag_598\n      tag_569\n      jump\t// in\n    tag_598:\n        /* \"#utility.yul\":4183:4302   */\n    tag_597:\n        /* \"#utility.yul\":4341:4342   */\n      0x00\n        /* \"#utility.yul\":4366:4419   */\n      tag_599\n        /* \"#utility.yul\":4411:4418   */\n      dup6\n        /* \"#utility.yul\":4402:4408   */\n      dup3\n        /* \"#utility.yul\":4391:4400   */\n      dup7\n        /* \"#utility.yul\":4387:4409   */\n      add\n        /* \"#utility.yul\":4366:4419   */\n      tag_559\n      jump\t// in\n    tag_599:\n        /* \"#utility.yul\":4356:4419   */\n      swap3\n      pop\n        /* \"#utility.yul\":4312:4429   */\n      pop\n        /* \"#utility.yul\":4468:4470   */\n      0x20\n        /* \"#utility.yul\":4494:4547   */\n      tag_600\n        /* \"#utility.yul\":4539:4546   */\n      dup6\n        /* \"#utility.yul\":4530:4536   */\n      dup3\n        /* \"#utility.yul\":4519:4528   */\n      dup7\n        /* \"#utility.yul\":4515:4537   */\n      add\n        /* \"#utility.yul\":4494:4547   */\n      tag_533\n      jump\t// in\n    tag_600:\n        /* \"#utility.yul\":4484:4547   */\n      swap2\n      pop\n        /* \"#utility.yul\":4439:4557   */\n      pop\n        /* \"#utility.yul\":4090:4564   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4570:5211   */\n    tag_64:\n        /* \"#utility.yul\":4658:4664   */\n      0x00\n        /* \"#utility.yul\":4666:4672   */\n      dup1\n        /* \"#utility.yul\":4674:4680   */\n      0x00\n        /* \"#utility.yul\":4723:4725   */\n      0x60\n        /* \"#utility.yul\":4711:4720   */\n      dup5\n        /* \"#utility.yul\":4702:4709   */\n      dup7\n        /* \"#utility.yul\":4698:4721   */\n      sub\n        /* \"#utility.yul\":4694:4726   */\n      slt\n        /* \"#utility.yul\":4691:4810   */\n      iszero\n      tag_602\n      jumpi\n        /* \"#utility.yul\":4729:4808   */\n      tag_603\n      tag_569\n      jump\t// in\n    tag_603:\n        /* \"#utility.yul\":4691:4810   */\n    tag_602:\n        /* \"#utility.yul\":4849:4850   */\n      0x00\n        /* \"#utility.yul\":4874:4927   */\n      tag_604\n        /* \"#utility.yul\":4919:4926   */\n      dup7\n        /* \"#utility.yul\":4910:4916   */\n      dup3\n        /* \"#utility.yul\":4899:4908   */\n      dup8\n        /* \"#utility.yul\":4895:4917   */\n      add\n        /* \"#utility.yul\":4874:4927   */\n      tag_559\n      jump\t// in\n    tag_604:\n        /* \"#utility.yul\":4864:4927   */\n      swap4\n      pop\n        /* \"#utility.yul\":4820:4937   */\n      pop\n        /* \"#utility.yul\":4976:4978   */\n      0x20\n        /* \"#utility.yul\":5002:5069   */\n      tag_605\n        /* \"#utility.yul\":5061:5068   */\n      dup7\n        /* \"#utility.yul\":5052:5058   */\n      dup3\n        /* \"#utility.yul\":5041:5050   */\n      dup8\n        /* \"#utility.yul\":5037:5059   */\n      add\n        /* \"#utility.yul\":5002:5069   */\n      tag_544\n      jump\t// in\n    tag_605:\n        /* \"#utility.yul\":4992:5069   */\n      swap3\n      pop\n        /* \"#utility.yul\":4947:5079   */\n      pop\n        /* \"#utility.yul\":5118:5120   */\n      0x40\n        /* \"#utility.yul\":5144:5194   */\n      tag_606\n        /* \"#utility.yul\":5186:5193   */\n      dup7\n        /* \"#utility.yul\":5177:5183   */\n      dup3\n        /* \"#utility.yul\":5166:5175   */\n      dup8\n        /* \"#utility.yul\":5162:5184   */\n      add\n        /* \"#utility.yul\":5144:5194   */\n      tag_537\n      jump\t// in\n    tag_606:\n        /* \"#utility.yul\":5134:5194   */\n      swap2\n      pop\n        /* \"#utility.yul\":5089:5204   */\n      pop\n        /* \"#utility.yul\":4570:5211   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":5217:5691   */\n    tag_60:\n        /* \"#utility.yul\":5285:5291   */\n      0x00\n        /* \"#utility.yul\":5293:5299   */\n      dup1\n        /* \"#utility.yul\":5342:5344   */\n      0x40\n        /* \"#utility.yul\":5330:5339   */\n      dup4\n        /* \"#utility.yul\":5321:5328   */\n      dup6\n        /* \"#utility.yul\":5317:5340   */\n      sub\n        /* \"#utility.yul\":5313:5345   */\n      slt\n        /* \"#utility.yul\":5310:5429   */\n      iszero\n      tag_608\n      jumpi\n        /* \"#utility.yul\":5348:5427   */\n      tag_609\n      tag_569\n      jump\t// in\n    tag_609:\n        /* \"#utility.yul\":5310:5429   */\n    tag_608:\n        /* \"#utility.yul\":5468:5469   */\n      0x00\n        /* \"#utility.yul\":5493:5546   */\n      tag_610\n        /* \"#utility.yul\":5538:5545   */\n      dup6\n        /* \"#utility.yul\":5529:5535   */\n      dup3\n        /* \"#utility.yul\":5518:5527   */\n      dup7\n        /* \"#utility.yul\":5514:5536   */\n      add\n        /* \"#utility.yul\":5493:5546   */\n      tag_559\n      jump\t// in\n    tag_610:\n        /* \"#utility.yul\":5483:5546   */\n      swap3\n      pop\n        /* \"#utility.yul\":5439:5556   */\n      pop\n        /* \"#utility.yul\":5595:5597   */\n      0x20\n        /* \"#utility.yul\":5621:5674   */\n      tag_611\n        /* \"#utility.yul\":5666:5673   */\n      dup6\n        /* \"#utility.yul\":5657:5663   */\n      dup3\n        /* \"#utility.yul\":5646:5655   */\n      dup7\n        /* \"#utility.yul\":5642:5664   */\n      add\n        /* \"#utility.yul\":5621:5674   */\n      tag_559\n      jump\t// in\n    tag_611:\n        /* \"#utility.yul\":5611:5674   */\n      swap2\n      pop\n        /* \"#utility.yul\":5566:5684   */\n      pop\n        /* \"#utility.yul\":5217:5691   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5697:6310   */\n    tag_110:\n        /* \"#utility.yul\":5771:5777   */\n      0x00\n        /* \"#utility.yul\":5779:5785   */\n      dup1\n        /* \"#utility.yul\":5787:5793   */\n      0x00\n        /* \"#utility.yul\":5836:5838   */\n      0x60\n        /* \"#utility.yul\":5824:5833   */\n      dup5\n        /* \"#utility.yul\":5815:5822   */\n      dup7\n        /* \"#utility.yul\":5811:5834   */\n      sub\n        /* \"#utility.yul\":5807:5839   */\n      slt\n        /* \"#utility.yul\":5804:5923   */\n      iszero\n      tag_613\n      jumpi\n        /* \"#utility.yul\":5842:5921   */\n      tag_614\n      tag_569\n      jump\t// in\n    tag_614:\n        /* \"#utility.yul\":5804:5923   */\n    tag_613:\n        /* \"#utility.yul\":5962:5963   */\n      0x00\n        /* \"#utility.yul\":5987:6040   */\n      tag_615\n        /* \"#utility.yul\":6032:6039   */\n      dup7\n        /* \"#utility.yul\":6023:6029   */\n      dup3\n        /* \"#utility.yul\":6012:6021   */\n      dup8\n        /* \"#utility.yul\":6008:6030   */\n      add\n        /* \"#utility.yul\":5987:6040   */\n      tag_559\n      jump\t// in\n    tag_615:\n        /* \"#utility.yul\":5977:6040   */\n      swap4\n      pop\n        /* \"#utility.yul\":5933:6050   */\n      pop\n        /* \"#utility.yul\":6089:6091   */\n      0x20\n        /* \"#utility.yul\":6115:6168   */\n      tag_616\n        /* \"#utility.yul\":6160:6167   */\n      dup7\n        /* \"#utility.yul\":6151:6157   */\n      dup3\n        /* \"#utility.yul\":6140:6149   */\n      dup8\n        /* \"#utility.yul\":6136:6158   */\n      add\n        /* \"#utility.yul\":6115:6168   */\n      tag_559\n      jump\t// in\n    tag_616:\n        /* \"#utility.yul\":6105:6168   */\n      swap3\n      pop\n        /* \"#utility.yul\":6060:6178   */\n      pop\n        /* \"#utility.yul\":6217:6219   */\n      0x40\n        /* \"#utility.yul\":6243:6293   */\n      tag_617\n        /* \"#utility.yul\":6285:6292   */\n      dup7\n        /* \"#utility.yul\":6276:6282   */\n      dup3\n        /* \"#utility.yul\":6265:6274   */\n      dup8\n        /* \"#utility.yul\":6261:6283   */\n      add\n        /* \"#utility.yul\":6243:6293   */\n      tag_537\n      jump\t// in\n    tag_617:\n        /* \"#utility.yul\":6233:6293   */\n      swap2\n      pop\n        /* \"#utility.yul\":6188:6303   */\n      pop\n        /* \"#utility.yul\":5697:6310   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":6316:6434   */\n    tag_618:\n        /* \"#utility.yul\":6403:6427   */\n      tag_620\n        /* \"#utility.yul\":6421:6426   */\n      dup2\n        /* \"#utility.yul\":6403:6427   */\n      tag_621\n      jump\t// in\n    tag_620:\n        /* \"#utility.yul\":6398:6401   */\n      dup3\n        /* \"#utility.yul\":6391:6428   */\n      mstore\n        /* \"#utility.yul\":6316:6434   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6440:6813   */\n    tag_622:\n        /* \"#utility.yul\":6544:6547   */\n      0x00\n        /* \"#utility.yul\":6572:6610   */\n      tag_624\n        /* \"#utility.yul\":6604:6609   */\n      dup3\n        /* \"#utility.yul\":6572:6610   */\n      tag_625\n      jump\t// in\n    tag_624:\n        /* \"#utility.yul\":6626:6714   */\n      tag_626\n        /* \"#utility.yul\":6707:6713   */\n      dup2\n        /* \"#utility.yul\":6702:6705   */\n      dup6\n        /* \"#utility.yul\":6626:6714   */\n      tag_627\n      jump\t// in\n    tag_626:\n        /* \"#utility.yul\":6619:6714   */\n      swap4\n      pop\n        /* \"#utility.yul\":6723:6775   */\n      tag_628\n        /* \"#utility.yul\":6768:6774   */\n      dup2\n        /* \"#utility.yul\":6763:6766   */\n      dup6\n        /* \"#utility.yul\":6756:6760   */\n      0x20\n        /* \"#utility.yul\":6749:6754   */\n      dup7\n        /* \"#utility.yul\":6745:6761   */\n      add\n        /* \"#utility.yul\":6723:6775   */\n      tag_629\n      jump\t// in\n    tag_628:\n        /* \"#utility.yul\":6800:6806   */\n      dup1\n        /* \"#utility.yul\":6795:6798   */\n      dup5\n        /* \"#utility.yul\":6791:6807   */\n      add\n        /* \"#utility.yul\":6784:6807   */\n      swap2\n      pop\n        /* \"#utility.yul\":6548:6813   */\n      pop\n        /* \"#utility.yul\":6440:6813   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6819:6978   */\n    tag_630:\n        /* \"#utility.yul\":6920:6971   */\n      tag_632\n        /* \"#utility.yul\":6965:6970   */\n      dup2\n        /* \"#utility.yul\":6920:6971   */\n      tag_633\n      jump\t// in\n    tag_632:\n        /* \"#utility.yul\":6915:6918   */\n      dup3\n        /* \"#utility.yul\":6908:6972   */\n      mstore\n        /* \"#utility.yul\":6819:6978   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6984:7145   */\n    tag_634:\n        /* \"#utility.yul\":7086:7138   */\n      tag_636\n        /* \"#utility.yul\":7132:7137   */\n      dup2\n        /* \"#utility.yul\":7086:7138   */\n      tag_637\n      jump\t// in\n    tag_636:\n        /* \"#utility.yul\":7081:7084   */\n      dup3\n        /* \"#utility.yul\":7074:7139   */\n      mstore\n        /* \"#utility.yul\":6984:7145   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7151:7324   */\n    tag_638:\n        /* \"#utility.yul\":7259:7317   */\n      tag_640\n        /* \"#utility.yul\":7311:7316   */\n      dup2\n        /* \"#utility.yul\":7259:7317   */\n      tag_641\n      jump\t// in\n    tag_640:\n        /* \"#utility.yul\":7254:7257   */\n      dup3\n        /* \"#utility.yul\":7247:7318   */\n      mstore\n        /* \"#utility.yul\":7151:7324   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7330:7694   */\n    tag_642:\n        /* \"#utility.yul\":7418:7421   */\n      0x00\n        /* \"#utility.yul\":7446:7485   */\n      tag_644\n        /* \"#utility.yul\":7479:7484   */\n      dup3\n        /* \"#utility.yul\":7446:7485   */\n      tag_645\n      jump\t// in\n    tag_644:\n        /* \"#utility.yul\":7501:7572   */\n      tag_646\n        /* \"#utility.yul\":7565:7571   */\n      dup2\n        /* \"#utility.yul\":7560:7563   */\n      dup6\n        /* \"#utility.yul\":7501:7572   */\n      tag_647\n      jump\t// in\n    tag_646:\n        /* \"#utility.yul\":7494:7572   */\n      swap4\n      pop\n        /* \"#utility.yul\":7581:7633   */\n      tag_648\n        /* \"#utility.yul\":7626:7632   */\n      dup2\n        /* \"#utility.yul\":7621:7624   */\n      dup6\n        /* \"#utility.yul\":7614:7618   */\n      0x20\n        /* \"#utility.yul\":7607:7612   */\n      dup7\n        /* \"#utility.yul\":7603:7619   */\n      add\n        /* \"#utility.yul\":7581:7633   */\n      tag_629\n      jump\t// in\n    tag_648:\n        /* \"#utility.yul\":7658:7687   */\n      tag_649\n        /* \"#utility.yul\":7680:7686   */\n      dup2\n        /* \"#utility.yul\":7658:7687   */\n      tag_650\n      jump\t// in\n    tag_649:\n        /* \"#utility.yul\":7653:7656   */\n      dup5\n        /* \"#utility.yul\":7649:7688   */\n      add\n        /* \"#utility.yul\":7642:7688   */\n      swap2\n      pop\n        /* \"#utility.yul\":7422:7694   */\n      pop\n        /* \"#utility.yul\":7330:7694   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7700:8066   */\n    tag_651:\n        /* \"#utility.yul\":7842:7845   */\n      0x00\n        /* \"#utility.yul\":7863:7930   */\n      tag_653\n        /* \"#utility.yul\":7927:7929   */\n      0x26\n        /* \"#utility.yul\":7922:7925   */\n      dup4\n        /* \"#utility.yul\":7863:7930   */\n      tag_647\n      jump\t// in\n    tag_653:\n        /* \"#utility.yul\":7856:7930   */\n      swap2\n      pop\n        /* \"#utility.yul\":7939:8032   */\n      tag_654\n        /* \"#utility.yul\":8028:8031   */\n      dup3\n        /* \"#utility.yul\":7939:8032   */\n      tag_655\n      jump\t// in\n    tag_654:\n        /* \"#utility.yul\":8057:8059   */\n      0x40\n        /* \"#utility.yul\":8052:8055   */\n      dup3\n        /* \"#utility.yul\":8048:8060   */\n      add\n        /* \"#utility.yul\":8041:8060   */\n      swap1\n      pop\n        /* \"#utility.yul\":7700:8066   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8072:8438   */\n    tag_656:\n        /* \"#utility.yul\":8214:8217   */\n      0x00\n        /* \"#utility.yul\":8235:8302   */\n      tag_658\n        /* \"#utility.yul\":8299:8301   */\n      0x13\n        /* \"#utility.yul\":8294:8297   */\n      dup4\n        /* \"#utility.yul\":8235:8302   */\n      tag_647\n      jump\t// in\n    tag_658:\n        /* \"#utility.yul\":8228:8302   */\n      swap2\n      pop\n        /* \"#utility.yul\":8311:8404   */\n      tag_659\n        /* \"#utility.yul\":8400:8403   */\n      dup3\n        /* \"#utility.yul\":8311:8404   */\n      tag_660\n      jump\t// in\n    tag_659:\n        /* \"#utility.yul\":8429:8431   */\n      0x20\n        /* \"#utility.yul\":8424:8427   */\n      dup3\n        /* \"#utility.yul\":8420:8432   */\n      add\n        /* \"#utility.yul\":8413:8432   */\n      swap1\n      pop\n        /* \"#utility.yul\":8072:8438   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8444:8810   */\n    tag_661:\n        /* \"#utility.yul\":8586:8589   */\n      0x00\n        /* \"#utility.yul\":8607:8674   */\n      tag_663\n        /* \"#utility.yul\":8671:8673   */\n      0x1b\n        /* \"#utility.yul\":8666:8669   */\n      dup4\n        /* \"#utility.yul\":8607:8674   */\n      tag_647\n      jump\t// in\n    tag_663:\n        /* \"#utility.yul\":8600:8674   */\n      swap2\n      pop\n        /* \"#utility.yul\":8683:8776   */\n      tag_664\n        /* \"#utility.yul\":8772:8775   */\n      dup3\n        /* \"#utility.yul\":8683:8776   */\n      tag_665\n      jump\t// in\n    tag_664:\n        /* \"#utility.yul\":8801:8803   */\n      0x20\n        /* \"#utility.yul\":8796:8799   */\n      dup3\n        /* \"#utility.yul\":8792:8804   */\n      add\n        /* \"#utility.yul\":8785:8804   */\n      swap1\n      pop\n        /* \"#utility.yul\":8444:8810   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8816:9182   */\n    tag_666:\n        /* \"#utility.yul\":8958:8961   */\n      0x00\n        /* \"#utility.yul\":8979:9046   */\n      tag_668\n        /* \"#utility.yul\":9043:9045   */\n      0x1b\n        /* \"#utility.yul\":9038:9041   */\n      dup4\n        /* \"#utility.yul\":8979:9046   */\n      tag_647\n      jump\t// in\n    tag_668:\n        /* \"#utility.yul\":8972:9046   */\n      swap2\n      pop\n        /* \"#utility.yul\":9055:9148   */\n      tag_669\n        /* \"#utility.yul\":9144:9147   */\n      dup3\n        /* \"#utility.yul\":9055:9148   */\n      tag_670\n      jump\t// in\n    tag_669:\n        /* \"#utility.yul\":9173:9175   */\n      0x20\n        /* \"#utility.yul\":9168:9171   */\n      dup3\n        /* \"#utility.yul\":9164:9176   */\n      add\n        /* \"#utility.yul\":9157:9176   */\n      swap1\n      pop\n        /* \"#utility.yul\":8816:9182   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9188:9554   */\n    tag_671:\n        /* \"#utility.yul\":9330:9333   */\n      0x00\n        /* \"#utility.yul\":9351:9418   */\n      tag_673\n        /* \"#utility.yul\":9415:9417   */\n      0x26\n        /* \"#utility.yul\":9410:9413   */\n      dup4\n        /* \"#utility.yul\":9351:9418   */\n      tag_647\n      jump\t// in\n    tag_673:\n        /* \"#utility.yul\":9344:9418   */\n      swap2\n      pop\n        /* \"#utility.yul\":9427:9520   */\n      tag_674\n        /* \"#utility.yul\":9516:9519   */\n      dup3\n        /* \"#utility.yul\":9427:9520   */\n      tag_675\n      jump\t// in\n    tag_674:\n        /* \"#utility.yul\":9545:9547   */\n      0x40\n        /* \"#utility.yul\":9540:9543   */\n      dup3\n        /* \"#utility.yul\":9536:9548   */\n      add\n        /* \"#utility.yul\":9529:9548   */\n      swap1\n      pop\n        /* \"#utility.yul\":9188:9554   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9560:9926   */\n    tag_676:\n        /* \"#utility.yul\":9702:9705   */\n      0x00\n        /* \"#utility.yul\":9723:9790   */\n      tag_678\n        /* \"#utility.yul\":9787:9789   */\n      0x18\n        /* \"#utility.yul\":9782:9785   */\n      dup4\n        /* \"#utility.yul\":9723:9790   */\n      tag_647\n      jump\t// in\n    tag_678:\n        /* \"#utility.yul\":9716:9790   */\n      swap2\n      pop\n        /* \"#utility.yul\":9799:9892   */\n      tag_679\n        /* \"#utility.yul\":9888:9891   */\n      dup3\n        /* \"#utility.yul\":9799:9892   */\n      tag_680\n      jump\t// in\n    tag_679:\n        /* \"#utility.yul\":9917:9919   */\n      0x20\n        /* \"#utility.yul\":9912:9915   */\n      dup3\n        /* \"#utility.yul\":9908:9920   */\n      add\n        /* \"#utility.yul\":9901:9920   */\n      swap1\n      pop\n        /* \"#utility.yul\":9560:9926   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9932:10298   */\n    tag_681:\n        /* \"#utility.yul\":10074:10077   */\n      0x00\n        /* \"#utility.yul\":10095:10162   */\n      tag_683\n        /* \"#utility.yul\":10159:10161   */\n      0x21\n        /* \"#utility.yul\":10154:10157   */\n      dup4\n        /* \"#utility.yul\":10095:10162   */\n      tag_647\n      jump\t// in\n    tag_683:\n        /* \"#utility.yul\":10088:10162   */\n      swap2\n      pop\n        /* \"#utility.yul\":10171:10264   */\n      tag_684\n        /* \"#utility.yul\":10260:10263   */\n      dup3\n        /* \"#utility.yul\":10171:10264   */\n      tag_685\n      jump\t// in\n    tag_684:\n        /* \"#utility.yul\":10289:10291   */\n      0x40\n        /* \"#utility.yul\":10284:10287   */\n      dup3\n        /* \"#utility.yul\":10280:10292   */\n      add\n        /* \"#utility.yul\":10273:10292   */\n      swap1\n      pop\n        /* \"#utility.yul\":9932:10298   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10304:10670   */\n    tag_686:\n        /* \"#utility.yul\":10446:10449   */\n      0x00\n        /* \"#utility.yul\":10467:10534   */\n      tag_688\n        /* \"#utility.yul\":10531:10533   */\n      0x20\n        /* \"#utility.yul\":10526:10529   */\n      dup4\n        /* \"#utility.yul\":10467:10534   */\n      tag_647\n      jump\t// in\n    tag_688:\n        /* \"#utility.yul\":10460:10534   */\n      swap2\n      pop\n        /* \"#utility.yul\":10543:10636   */\n      tag_689\n        /* \"#utility.yul\":10632:10635   */\n      dup3\n        /* \"#utility.yul\":10543:10636   */\n      tag_690\n      jump\t// in\n    tag_689:\n        /* \"#utility.yul\":10661:10663   */\n      0x20\n        /* \"#utility.yul\":10656:10659   */\n      dup3\n        /* \"#utility.yul\":10652:10664   */\n      add\n        /* \"#utility.yul\":10645:10664   */\n      swap1\n      pop\n        /* \"#utility.yul\":10304:10670   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10676:11042   */\n    tag_691:\n        /* \"#utility.yul\":10818:10821   */\n      0x00\n        /* \"#utility.yul\":10839:10906   */\n      tag_693\n        /* \"#utility.yul\":10903:10905   */\n      0x1d\n        /* \"#utility.yul\":10898:10901   */\n      dup4\n        /* \"#utility.yul\":10839:10906   */\n      tag_647\n      jump\t// in\n    tag_693:\n        /* \"#utility.yul\":10832:10906   */\n      swap2\n      pop\n        /* \"#utility.yul\":10915:11008   */\n      tag_694\n        /* \"#utility.yul\":11004:11007   */\n      dup3\n        /* \"#utility.yul\":10915:11008   */\n      tag_695\n      jump\t// in\n    tag_694:\n        /* \"#utility.yul\":11033:11035   */\n      0x20\n        /* \"#utility.yul\":11028:11031   */\n      dup3\n        /* \"#utility.yul\":11024:11036   */\n      add\n        /* \"#utility.yul\":11017:11036   */\n      swap1\n      pop\n        /* \"#utility.yul\":10676:11042   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11048:11414   */\n    tag_696:\n        /* \"#utility.yul\":11190:11193   */\n      0x00\n        /* \"#utility.yul\":11211:11278   */\n      tag_698\n        /* \"#utility.yul\":11275:11277   */\n      0x12\n        /* \"#utility.yul\":11270:11273   */\n      dup4\n        /* \"#utility.yul\":11211:11278   */\n      tag_647\n      jump\t// in\n    tag_698:\n        /* \"#utility.yul\":11204:11278   */\n      swap2\n      pop\n        /* \"#utility.yul\":11287:11380   */\n      tag_699\n        /* \"#utility.yul\":11376:11379   */\n      dup3\n        /* \"#utility.yul\":11287:11380   */\n      tag_700\n      jump\t// in\n    tag_699:\n        /* \"#utility.yul\":11405:11407   */\n      0x20\n        /* \"#utility.yul\":11400:11403   */\n      dup3\n        /* \"#utility.yul\":11396:11408   */\n      add\n        /* \"#utility.yul\":11389:11408   */\n      swap1\n      pop\n        /* \"#utility.yul\":11048:11414   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11420:11786   */\n    tag_701:\n        /* \"#utility.yul\":11562:11565   */\n      0x00\n        /* \"#utility.yul\":11583:11650   */\n      tag_703\n        /* \"#utility.yul\":11647:11649   */\n      0x2a\n        /* \"#utility.yul\":11642:11645   */\n      dup4\n        /* \"#utility.yul\":11583:11650   */\n      tag_647\n      jump\t// in\n    tag_703:\n        /* \"#utility.yul\":11576:11650   */\n      swap2\n      pop\n        /* \"#utility.yul\":11659:11752   */\n      tag_704\n        /* \"#utility.yul\":11748:11751   */\n      dup3\n        /* \"#utility.yul\":11659:11752   */\n      tag_705\n      jump\t// in\n    tag_704:\n        /* \"#utility.yul\":11777:11779   */\n      0x40\n        /* \"#utility.yul\":11772:11775   */\n      dup3\n        /* \"#utility.yul\":11768:11780   */\n      add\n        /* \"#utility.yul\":11761:11780   */\n      swap1\n      pop\n        /* \"#utility.yul\":11420:11786   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11792:12158   */\n    tag_706:\n        /* \"#utility.yul\":11934:11937   */\n      0x00\n        /* \"#utility.yul\":11955:12022   */\n      tag_708\n        /* \"#utility.yul\":12019:12021   */\n      0x0c\n        /* \"#utility.yul\":12014:12017   */\n      dup4\n        /* \"#utility.yul\":11955:12022   */\n      tag_647\n      jump\t// in\n    tag_708:\n        /* \"#utility.yul\":11948:12022   */\n      swap2\n      pop\n        /* \"#utility.yul\":12031:12124   */\n      tag_709\n        /* \"#utility.yul\":12120:12123   */\n      dup3\n        /* \"#utility.yul\":12031:12124   */\n      tag_710\n      jump\t// in\n    tag_709:\n        /* \"#utility.yul\":12149:12151   */\n      0x20\n        /* \"#utility.yul\":12144:12147   */\n      dup3\n        /* \"#utility.yul\":12140:12152   */\n      add\n        /* \"#utility.yul\":12133:12152   */\n      swap1\n      pop\n        /* \"#utility.yul\":11792:12158   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12164:12530   */\n    tag_711:\n        /* \"#utility.yul\":12306:12309   */\n      0x00\n        /* \"#utility.yul\":12327:12394   */\n      tag_713\n        /* \"#utility.yul\":12391:12393   */\n      0x36\n        /* \"#utility.yul\":12386:12389   */\n      dup4\n        /* \"#utility.yul\":12327:12394   */\n      tag_647\n      jump\t// in\n    tag_713:\n        /* \"#utility.yul\":12320:12394   */\n      swap2\n      pop\n        /* \"#utility.yul\":12403:12496   */\n      tag_714\n        /* \"#utility.yul\":12492:12495   */\n      dup3\n        /* \"#utility.yul\":12403:12496   */\n      tag_715\n      jump\t// in\n    tag_714:\n        /* \"#utility.yul\":12521:12523   */\n      0x40\n        /* \"#utility.yul\":12516:12519   */\n      dup3\n        /* \"#utility.yul\":12512:12524   */\n      add\n        /* \"#utility.yul\":12505:12524   */\n      swap1\n      pop\n        /* \"#utility.yul\":12164:12530   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12536:12902   */\n    tag_716:\n        /* \"#utility.yul\":12678:12681   */\n      0x00\n        /* \"#utility.yul\":12699:12766   */\n      tag_718\n        /* \"#utility.yul\":12763:12765   */\n      0x14\n        /* \"#utility.yul\":12758:12761   */\n      dup4\n        /* \"#utility.yul\":12699:12766   */\n      tag_647\n      jump\t// in\n    tag_718:\n        /* \"#utility.yul\":12692:12766   */\n      swap2\n      pop\n        /* \"#utility.yul\":12775:12868   */\n      tag_719\n        /* \"#utility.yul\":12864:12867   */\n      dup3\n        /* \"#utility.yul\":12775:12868   */\n      tag_720\n      jump\t// in\n    tag_719:\n        /* \"#utility.yul\":12893:12895   */\n      0x20\n        /* \"#utility.yul\":12888:12891   */\n      dup3\n        /* \"#utility.yul\":12884:12896   */\n      add\n        /* \"#utility.yul\":12877:12896   */\n      swap1\n      pop\n        /* \"#utility.yul\":12536:12902   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12908:13026   */\n    tag_721:\n        /* \"#utility.yul\":12995:13019   */\n      tag_723\n        /* \"#utility.yul\":13013:13018   */\n      dup2\n        /* \"#utility.yul\":12995:13019   */\n      tag_724\n      jump\t// in\n    tag_723:\n        /* \"#utility.yul\":12990:12993   */\n      dup3\n        /* \"#utility.yul\":12983:13020   */\n      mstore\n        /* \"#utility.yul\":12908:13026   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13032:13303   */\n    tag_519:\n        /* \"#utility.yul\":13162:13165   */\n      0x00\n        /* \"#utility.yul\":13184:13277   */\n      tag_726\n        /* \"#utility.yul\":13273:13276   */\n      dup3\n        /* \"#utility.yul\":13264:13270   */\n      dup5\n        /* \"#utility.yul\":13184:13277   */\n      tag_622\n      jump\t// in\n    tag_726:\n        /* \"#utility.yul\":13177:13277   */\n      swap2\n      pop\n        /* \"#utility.yul\":13294:13297   */\n      dup2\n        /* \"#utility.yul\":13287:13297   */\n      swap1\n      pop\n        /* \"#utility.yul\":13032:13303   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13309:13531   */\n    tag_129:\n        /* \"#utility.yul\":13402:13406   */\n      0x00\n        /* \"#utility.yul\":13440:13442   */\n      0x20\n        /* \"#utility.yul\":13429:13438   */\n      dup3\n        /* \"#utility.yul\":13425:13443   */\n      add\n        /* \"#utility.yul\":13417:13443   */\n      swap1\n      pop\n        /* \"#utility.yul\":13453:13524   */\n      tag_728\n        /* \"#utility.yul\":13521:13522   */\n      0x00\n        /* \"#utility.yul\":13510:13519   */\n      dup4\n        /* \"#utility.yul\":13506:13523   */\n      add\n        /* \"#utility.yul\":13497:13503   */\n      dup5\n        /* \"#utility.yul\":13453:13524   */\n      tag_618\n      jump\t// in\n    tag_728:\n        /* \"#utility.yul\":13309:13531   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13537:13869   */\n    tag_476:\n        /* \"#utility.yul\":13658:13662   */\n      0x00\n        /* \"#utility.yul\":13696:13698   */\n      0x40\n        /* \"#utility.yul\":13685:13694   */\n      dup3\n        /* \"#utility.yul\":13681:13699   */\n      add\n        /* \"#utility.yul\":13673:13699   */\n      swap1\n      pop\n        /* \"#utility.yul\":13709:13780   */\n      tag_730\n        /* \"#utility.yul\":13777:13778   */\n      0x00\n        /* \"#utility.yul\":13766:13775   */\n      dup4\n        /* \"#utility.yul\":13762:13779   */\n      add\n        /* \"#utility.yul\":13753:13759   */\n      dup6\n        /* \"#utility.yul\":13709:13780   */\n      tag_618\n      jump\t// in\n    tag_730:\n        /* \"#utility.yul\":13790:13862   */\n      tag_731\n        /* \"#utility.yul\":13858:13860   */\n      0x20\n        /* \"#utility.yul\":13847:13856   */\n      dup4\n        /* \"#utility.yul\":13843:13861   */\n      add\n        /* \"#utility.yul\":13834:13840   */\n      dup5\n        /* \"#utility.yul\":13790:13862   */\n      tag_618\n      jump\t// in\n    tag_731:\n        /* \"#utility.yul\":13537:13869   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13875:14317   */\n    tag_472:\n        /* \"#utility.yul\":14024:14028   */\n      0x00\n        /* \"#utility.yul\":14062:14064   */\n      0x60\n        /* \"#utility.yul\":14051:14060   */\n      dup3\n        /* \"#utility.yul\":14047:14065   */\n      add\n        /* \"#utility.yul\":14039:14065   */\n      swap1\n      pop\n        /* \"#utility.yul\":14075:14146   */\n      tag_733\n        /* \"#utility.yul\":14143:14144   */\n      0x00\n        /* \"#utility.yul\":14132:14141   */\n      dup4\n        /* \"#utility.yul\":14128:14145   */\n      add\n        /* \"#utility.yul\":14119:14125   */\n      dup7\n        /* \"#utility.yul\":14075:14146   */\n      tag_618\n      jump\t// in\n    tag_733:\n        /* \"#utility.yul\":14156:14228   */\n      tag_734\n        /* \"#utility.yul\":14224:14226   */\n      0x20\n        /* \"#utility.yul\":14213:14222   */\n      dup4\n        /* \"#utility.yul\":14209:14227   */\n      add\n        /* \"#utility.yul\":14200:14206   */\n      dup6\n        /* \"#utility.yul\":14156:14228   */\n      tag_618\n      jump\t// in\n    tag_734:\n        /* \"#utility.yul\":14238:14310   */\n      tag_735\n        /* \"#utility.yul\":14306:14308   */\n      0x40\n        /* \"#utility.yul\":14295:14304   */\n      dup4\n        /* \"#utility.yul\":14291:14309   */\n      add\n        /* \"#utility.yul\":14282:14288   */\n      dup5\n        /* \"#utility.yul\":14238:14310   */\n      tag_721\n      jump\t// in\n    tag_735:\n        /* \"#utility.yul\":13875:14317   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14323:14655   */\n    tag_466:\n        /* \"#utility.yul\":14444:14448   */\n      0x00\n        /* \"#utility.yul\":14482:14484   */\n      0x40\n        /* \"#utility.yul\":14471:14480   */\n      dup3\n        /* \"#utility.yul\":14467:14485   */\n      add\n        /* \"#utility.yul\":14459:14485   */\n      swap1\n      pop\n        /* \"#utility.yul\":14495:14566   */\n      tag_737\n        /* \"#utility.yul\":14563:14564   */\n      0x00\n        /* \"#utility.yul\":14552:14561   */\n      dup4\n        /* \"#utility.yul\":14548:14565   */\n      add\n        /* \"#utility.yul\":14539:14545   */\n      dup6\n        /* \"#utility.yul\":14495:14566   */\n      tag_618\n      jump\t// in\n    tag_737:\n        /* \"#utility.yul\":14576:14648   */\n      tag_738\n        /* \"#utility.yul\":14644:14646   */\n      0x20\n        /* \"#utility.yul\":14633:14642   */\n      dup4\n        /* \"#utility.yul\":14629:14647   */\n      add\n        /* \"#utility.yul\":14620:14626   */\n      dup5\n        /* \"#utility.yul\":14576:14648   */\n      tag_721\n      jump\t// in\n    tag_738:\n        /* \"#utility.yul\":14323:14655   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14661:14911   */\n    tag_143:\n        /* \"#utility.yul\":14768:14772   */\n      0x00\n        /* \"#utility.yul\":14806:14808   */\n      0x20\n        /* \"#utility.yul\":14795:14804   */\n      dup3\n        /* \"#utility.yul\":14791:14809   */\n      add\n        /* \"#utility.yul\":14783:14809   */\n      swap1\n      pop\n        /* \"#utility.yul\":14819:14904   */\n      tag_740\n        /* \"#utility.yul\":14901:14902   */\n      0x00\n        /* \"#utility.yul\":14890:14899   */\n      dup4\n        /* \"#utility.yul\":14886:14903   */\n      add\n        /* \"#utility.yul\":14877:14883   */\n      dup5\n        /* \"#utility.yul\":14819:14904   */\n      tag_630\n      jump\t// in\n    tag_740:\n        /* \"#utility.yul\":14661:14911   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14917:15498   */\n    tag_54:\n        /* \"#utility.yul\":15108:15112   */\n      0x00\n        /* \"#utility.yul\":15146:15149   */\n      0x80\n        /* \"#utility.yul\":15135:15144   */\n      dup3\n        /* \"#utility.yul\":15131:15150   */\n      add\n        /* \"#utility.yul\":15123:15150   */\n      swap1\n      pop\n        /* \"#utility.yul\":15160:15245   */\n      tag_742\n        /* \"#utility.yul\":15242:15243   */\n      0x00\n        /* \"#utility.yul\":15231:15240   */\n      dup4\n        /* \"#utility.yul\":15227:15244   */\n      add\n        /* \"#utility.yul\":15218:15224   */\n      dup8\n        /* \"#utility.yul\":15160:15245   */\n      tag_630\n      jump\t// in\n    tag_742:\n        /* \"#utility.yul\":15255:15327   */\n      tag_743\n        /* \"#utility.yul\":15323:15325   */\n      0x20\n        /* \"#utility.yul\":15312:15321   */\n      dup4\n        /* \"#utility.yul\":15308:15326   */\n      add\n        /* \"#utility.yul\":15299:15305   */\n      dup7\n        /* \"#utility.yul\":15255:15327   */\n      tag_721\n      jump\t// in\n    tag_743:\n        /* \"#utility.yul\":15337:15409   */\n      tag_744\n        /* \"#utility.yul\":15405:15407   */\n      0x40\n        /* \"#utility.yul\":15394:15403   */\n      dup4\n        /* \"#utility.yul\":15390:15408   */\n      add\n        /* \"#utility.yul\":15381:15387   */\n      dup6\n        /* \"#utility.yul\":15337:15409   */\n      tag_721\n      jump\t// in\n    tag_744:\n        /* \"#utility.yul\":15419:15491   */\n      tag_745\n        /* \"#utility.yul\":15487:15489   */\n      0x60\n        /* \"#utility.yul\":15476:15485   */\n      dup4\n        /* \"#utility.yul\":15472:15490   */\n      add\n        /* \"#utility.yul\":15463:15469   */\n      dup5\n        /* \"#utility.yul\":15419:15491   */\n      tag_721\n      jump\t// in\n    tag_745:\n        /* \"#utility.yul\":14917:15498   */\n      swap6\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15504:15866   */\n    tag_105:\n        /* \"#utility.yul\":15640:15644   */\n      0x00\n        /* \"#utility.yul\":15678:15680   */\n      0x40\n        /* \"#utility.yul\":15667:15676   */\n      dup3\n        /* \"#utility.yul\":15663:15681   */\n      add\n        /* \"#utility.yul\":15655:15681   */\n      swap1\n      pop\n        /* \"#utility.yul\":15691:15777   */\n      tag_747\n        /* \"#utility.yul\":15774:15775   */\n      0x00\n        /* \"#utility.yul\":15763:15772   */\n      dup4\n        /* \"#utility.yul\":15759:15776   */\n      add\n        /* \"#utility.yul\":15750:15756   */\n      dup6\n        /* \"#utility.yul\":15691:15777   */\n      tag_634\n      jump\t// in\n    tag_747:\n        /* \"#utility.yul\":15787:15859   */\n      tag_748\n        /* \"#utility.yul\":15855:15857   */\n      0x20\n        /* \"#utility.yul\":15844:15853   */\n      dup4\n        /* \"#utility.yul\":15840:15858   */\n      add\n        /* \"#utility.yul\":15831:15837   */\n      dup5\n        /* \"#utility.yul\":15787:15859   */\n      tag_721\n      jump\t// in\n    tag_748:\n        /* \"#utility.yul\":15504:15866   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15872:16136   */\n    tag_117:\n        /* \"#utility.yul\":15986:15990   */\n      0x00\n        /* \"#utility.yul\":16024:16026   */\n      0x20\n        /* \"#utility.yul\":16013:16022   */\n      dup3\n        /* \"#utility.yul\":16009:16027   */\n      add\n        /* \"#utility.yul\":16001:16027   */\n      swap1\n      pop\n        /* \"#utility.yul\":16037:16129   */\n      tag_750\n        /* \"#utility.yul\":16126:16127   */\n      0x00\n        /* \"#utility.yul\":16115:16124   */\n      dup4\n        /* \"#utility.yul\":16111:16128   */\n      add\n        /* \"#utility.yul\":16102:16108   */\n      dup5\n        /* \"#utility.yul\":16037:16129   */\n      tag_638\n      jump\t// in\n    tag_750:\n        /* \"#utility.yul\":15872:16136   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16142:16455   */\n    tag_490:\n        /* \"#utility.yul\":16255:16259   */\n      0x00\n        /* \"#utility.yul\":16293:16295   */\n      0x20\n        /* \"#utility.yul\":16282:16291   */\n      dup3\n        /* \"#utility.yul\":16278:16296   */\n      add\n        /* \"#utility.yul\":16270:16296   */\n      swap1\n      pop\n        /* \"#utility.yul\":16342:16351   */\n      dup2\n        /* \"#utility.yul\":16336:16340   */\n      dup2\n        /* \"#utility.yul\":16332:16352   */\n      sub\n        /* \"#utility.yul\":16328:16329   */\n      0x00\n        /* \"#utility.yul\":16317:16326   */\n      dup4\n        /* \"#utility.yul\":16313:16330   */\n      add\n        /* \"#utility.yul\":16306:16353   */\n      mstore\n        /* \"#utility.yul\":16370:16448   */\n      tag_752\n        /* \"#utility.yul\":16443:16447   */\n      dup2\n        /* \"#utility.yul\":16434:16440   */\n      dup5\n        /* \"#utility.yul\":16370:16448   */\n      tag_642\n      jump\t// in\n    tag_752:\n        /* \"#utility.yul\":16362:16448   */\n      swap1\n      pop\n        /* \"#utility.yul\":16142:16455   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16461:16880   */\n    tag_419:\n        /* \"#utility.yul\":16627:16631   */\n      0x00\n        /* \"#utility.yul\":16665:16667   */\n      0x20\n        /* \"#utility.yul\":16654:16663   */\n      dup3\n        /* \"#utility.yul\":16650:16668   */\n      add\n        /* \"#utility.yul\":16642:16668   */\n      swap1\n      pop\n        /* \"#utility.yul\":16714:16723   */\n      dup2\n        /* \"#utility.yul\":16708:16712   */\n      dup2\n        /* \"#utility.yul\":16704:16724   */\n      sub\n        /* \"#utility.yul\":16700:16701   */\n      0x00\n        /* \"#utility.yul\":16689:16698   */\n      dup4\n        /* \"#utility.yul\":16685:16702   */\n      add\n        /* \"#utility.yul\":16678:16725   */\n      mstore\n        /* \"#utility.yul\":16742:16873   */\n      tag_754\n        /* \"#utility.yul\":16868:16872   */\n      dup2\n        /* \"#utility.yul\":16742:16873   */\n      tag_651\n      jump\t// in\n    tag_754:\n        /* \"#utility.yul\":16734:16873   */\n      swap1\n      pop\n        /* \"#utility.yul\":16461:16880   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16886:17305   */\n    tag_219:\n        /* \"#utility.yul\":17052:17056   */\n      0x00\n        /* \"#utility.yul\":17090:17092   */\n      0x20\n        /* \"#utility.yul\":17079:17088   */\n      dup3\n        /* \"#utility.yul\":17075:17093   */\n      add\n        /* \"#utility.yul\":17067:17093   */\n      swap1\n      pop\n        /* \"#utility.yul\":17139:17148   */\n      dup2\n        /* \"#utility.yul\":17133:17137   */\n      dup2\n        /* \"#utility.yul\":17129:17149   */\n      sub\n        /* \"#utility.yul\":17125:17126   */\n      0x00\n        /* \"#utility.yul\":17114:17123   */\n      dup4\n        /* \"#utility.yul\":17110:17127   */\n      add\n        /* \"#utility.yul\":17103:17150   */\n      mstore\n        /* \"#utility.yul\":17167:17298   */\n      tag_756\n        /* \"#utility.yul\":17293:17297   */\n      dup2\n        /* \"#utility.yul\":17167:17298   */\n      tag_656\n      jump\t// in\n    tag_756:\n        /* \"#utility.yul\":17159:17298   */\n      swap1\n      pop\n        /* \"#utility.yul\":16886:17305   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17311:17730   */\n    tag_272:\n        /* \"#utility.yul\":17477:17481   */\n      0x00\n        /* \"#utility.yul\":17515:17517   */\n      0x20\n        /* \"#utility.yul\":17504:17513   */\n      dup3\n        /* \"#utility.yul\":17500:17518   */\n      add\n        /* \"#utility.yul\":17492:17518   */\n      swap1\n      pop\n        /* \"#utility.yul\":17564:17573   */\n      dup2\n        /* \"#utility.yul\":17558:17562   */\n      dup2\n        /* \"#utility.yul\":17554:17574   */\n      sub\n        /* \"#utility.yul\":17550:17551   */\n      0x00\n        /* \"#utility.yul\":17539:17548   */\n      dup4\n        /* \"#utility.yul\":17535:17552   */\n      add\n        /* \"#utility.yul\":17528:17575   */\n      mstore\n        /* \"#utility.yul\":17592:17723   */\n      tag_758\n        /* \"#utility.yul\":17718:17722   */\n      dup2\n        /* \"#utility.yul\":17592:17723   */\n      tag_661\n      jump\t// in\n    tag_758:\n        /* \"#utility.yul\":17584:17723   */\n      swap1\n      pop\n        /* \"#utility.yul\":17311:17730   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17736:18155   */\n    tag_462:\n        /* \"#utility.yul\":17902:17906   */\n      0x00\n        /* \"#utility.yul\":17940:17942   */\n      0x20\n        /* \"#utility.yul\":17929:17938   */\n      dup3\n        /* \"#utility.yul\":17925:17943   */\n      add\n        /* \"#utility.yul\":17917:17943   */\n      swap1\n      pop\n        /* \"#utility.yul\":17989:17998   */\n      dup2\n        /* \"#utility.yul\":17983:17987   */\n      dup2\n        /* \"#utility.yul\":17979:17999   */\n      sub\n        /* \"#utility.yul\":17975:17976   */\n      0x00\n        /* \"#utility.yul\":17964:17973   */\n      dup4\n        /* \"#utility.yul\":17960:17977   */\n      add\n        /* \"#utility.yul\":17953:18000   */\n      mstore\n        /* \"#utility.yul\":18017:18148   */\n      tag_760\n        /* \"#utility.yul\":18143:18147   */\n      dup2\n        /* \"#utility.yul\":18017:18148   */\n      tag_666\n      jump\t// in\n    tag_760:\n        /* \"#utility.yul\":18009:18148   */\n      swap1\n      pop\n        /* \"#utility.yul\":17736:18155   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18161:18580   */\n    tag_512:\n        /* \"#utility.yul\":18327:18331   */\n      0x00\n        /* \"#utility.yul\":18365:18367   */\n      0x20\n        /* \"#utility.yul\":18354:18363   */\n      dup3\n        /* \"#utility.yul\":18350:18368   */\n      add\n        /* \"#utility.yul\":18342:18368   */\n      swap1\n      pop\n        /* \"#utility.yul\":18414:18423   */\n      dup2\n        /* \"#utility.yul\":18408:18412   */\n      dup2\n        /* \"#utility.yul\":18404:18424   */\n      sub\n        /* \"#utility.yul\":18400:18401   */\n      0x00\n        /* \"#utility.yul\":18389:18398   */\n      dup4\n        /* \"#utility.yul\":18385:18402   */\n      add\n        /* \"#utility.yul\":18378:18425   */\n      mstore\n        /* \"#utility.yul\":18442:18573   */\n      tag_762\n        /* \"#utility.yul\":18568:18572   */\n      dup2\n        /* \"#utility.yul\":18442:18573   */\n      tag_671\n      jump\t// in\n    tag_762:\n        /* \"#utility.yul\":18434:18573   */\n      swap1\n      pop\n        /* \"#utility.yul\":18161:18580   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18586:19005   */\n    tag_395:\n        /* \"#utility.yul\":18752:18756   */\n      0x00\n        /* \"#utility.yul\":18790:18792   */\n      0x20\n        /* \"#utility.yul\":18779:18788   */\n      dup3\n        /* \"#utility.yul\":18775:18793   */\n      add\n        /* \"#utility.yul\":18767:18793   */\n      swap1\n      pop\n        /* \"#utility.yul\":18839:18848   */\n      dup2\n        /* \"#utility.yul\":18833:18837   */\n      dup2\n        /* \"#utility.yul\":18829:18849   */\n      sub\n        /* \"#utility.yul\":18825:18826   */\n      0x00\n        /* \"#utility.yul\":18814:18823   */\n      dup4\n        /* \"#utility.yul\":18810:18827   */\n      add\n        /* \"#utility.yul\":18803:18850   */\n      mstore\n        /* \"#utility.yul\":18867:18998   */\n      tag_764\n        /* \"#utility.yul\":18993:18997   */\n      dup2\n        /* \"#utility.yul\":18867:18998   */\n      tag_676\n      jump\t// in\n    tag_764:\n        /* \"#utility.yul\":18859:18998   */\n      swap1\n      pop\n        /* \"#utility.yul\":18586:19005   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19011:19430   */\n    tag_450:\n        /* \"#utility.yul\":19177:19181   */\n      0x00\n        /* \"#utility.yul\":19215:19217   */\n      0x20\n        /* \"#utility.yul\":19204:19213   */\n      dup3\n        /* \"#utility.yul\":19200:19218   */\n      add\n        /* \"#utility.yul\":19192:19218   */\n      swap1\n      pop\n        /* \"#utility.yul\":19264:19273   */\n      dup2\n        /* \"#utility.yul\":19258:19262   */\n      dup2\n        /* \"#utility.yul\":19254:19274   */\n      sub\n        /* \"#utility.yul\":19250:19251   */\n      0x00\n        /* \"#utility.yul\":19239:19248   */\n      dup4\n        /* \"#utility.yul\":19235:19252   */\n      add\n        /* \"#utility.yul\":19228:19275   */\n      mstore\n        /* \"#utility.yul\":19292:19423   */\n      tag_766\n        /* \"#utility.yul\":19418:19422   */\n      dup2\n        /* \"#utility.yul\":19292:19423   */\n      tag_681\n      jump\t// in\n    tag_766:\n        /* \"#utility.yul\":19284:19423   */\n      swap1\n      pop\n        /* \"#utility.yul\":19011:19430   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19436:19855   */\n    tag_231:\n        /* \"#utility.yul\":19602:19606   */\n      0x00\n        /* \"#utility.yul\":19640:19642   */\n      0x20\n        /* \"#utility.yul\":19629:19638   */\n      dup3\n        /* \"#utility.yul\":19625:19643   */\n      add\n        /* \"#utility.yul\":19617:19643   */\n      swap1\n      pop\n        /* \"#utility.yul\":19689:19698   */\n      dup2\n        /* \"#utility.yul\":19683:19687   */\n      dup2\n        /* \"#utility.yul\":19679:19699   */\n      sub\n        /* \"#utility.yul\":19675:19676   */\n      0x00\n        /* \"#utility.yul\":19664:19673   */\n      dup4\n        /* \"#utility.yul\":19660:19677   */\n      add\n        /* \"#utility.yul\":19653:19700   */\n      mstore\n        /* \"#utility.yul\":19717:19848   */\n      tag_768\n        /* \"#utility.yul\":19843:19847   */\n      dup2\n        /* \"#utility.yul\":19717:19848   */\n      tag_686\n      jump\t// in\n    tag_768:\n        /* \"#utility.yul\":19709:19848   */\n      swap1\n      pop\n        /* \"#utility.yul\":19436:19855   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19861:20280   */\n    tag_517:\n        /* \"#utility.yul\":20027:20031   */\n      0x00\n        /* \"#utility.yul\":20065:20067   */\n      0x20\n        /* \"#utility.yul\":20054:20063   */\n      dup3\n        /* \"#utility.yul\":20050:20068   */\n      add\n        /* \"#utility.yul\":20042:20068   */\n      swap1\n      pop\n        /* \"#utility.yul\":20114:20123   */\n      dup2\n        /* \"#utility.yul\":20108:20112   */\n      dup2\n        /* \"#utility.yul\":20104:20124   */\n      sub\n        /* \"#utility.yul\":20100:20101   */\n      0x00\n        /* \"#utility.yul\":20089:20098   */\n      dup4\n        /* \"#utility.yul\":20085:20102   */\n      add\n        /* \"#utility.yul\":20078:20125   */\n      mstore\n        /* \"#utility.yul\":20142:20273   */\n      tag_770\n        /* \"#utility.yul\":20268:20272   */\n      dup2\n        /* \"#utility.yul\":20142:20273   */\n      tag_691\n      jump\t// in\n    tag_770:\n        /* \"#utility.yul\":20134:20273   */\n      swap1\n      pop\n        /* \"#utility.yul\":19861:20280   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20286:20705   */\n    tag_166:\n        /* \"#utility.yul\":20452:20456   */\n      0x00\n        /* \"#utility.yul\":20490:20492   */\n      0x20\n        /* \"#utility.yul\":20479:20488   */\n      dup3\n        /* \"#utility.yul\":20475:20493   */\n      add\n        /* \"#utility.yul\":20467:20493   */\n      swap1\n      pop\n        /* \"#utility.yul\":20539:20548   */\n      dup2\n        /* \"#utility.yul\":20533:20537   */\n      dup2\n        /* \"#utility.yul\":20529:20549   */\n      sub\n        /* \"#utility.yul\":20525:20526   */\n      0x00\n        /* \"#utility.yul\":20514:20523   */\n      dup4\n        /* \"#utility.yul\":20510:20527   */\n      add\n        /* \"#utility.yul\":20503:20550   */\n      mstore\n        /* \"#utility.yul\":20567:20698   */\n      tag_772\n        /* \"#utility.yul\":20693:20697   */\n      dup2\n        /* \"#utility.yul\":20567:20698   */\n      tag_696\n      jump\t// in\n    tag_772:\n        /* \"#utility.yul\":20559:20698   */\n      swap1\n      pop\n        /* \"#utility.yul\":20286:20705   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20711:21130   */\n    tag_505:\n        /* \"#utility.yul\":20877:20881   */\n      0x00\n        /* \"#utility.yul\":20915:20917   */\n      0x20\n        /* \"#utility.yul\":20904:20913   */\n      dup3\n        /* \"#utility.yul\":20900:20918   */\n      add\n        /* \"#utility.yul\":20892:20918   */\n      swap1\n      pop\n        /* \"#utility.yul\":20964:20973   */\n      dup2\n        /* \"#utility.yul\":20958:20962   */\n      dup2\n        /* \"#utility.yul\":20954:20974   */\n      sub\n        /* \"#utility.yul\":20950:20951   */\n      0x00\n        /* \"#utility.yul\":20939:20948   */\n      dup4\n        /* \"#utility.yul\":20935:20952   */\n      add\n        /* \"#utility.yul\":20928:20975   */\n      mstore\n        /* \"#utility.yul\":20992:21123   */\n      tag_774\n        /* \"#utility.yul\":21118:21122   */\n      dup2\n        /* \"#utility.yul\":20992:21123   */\n      tag_701\n      jump\t// in\n    tag_774:\n        /* \"#utility.yul\":20984:21123   */\n      swap1\n      pop\n        /* \"#utility.yul\":20711:21130   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21136:21555   */\n    tag_316:\n        /* \"#utility.yul\":21302:21306   */\n      0x00\n        /* \"#utility.yul\":21340:21342   */\n      0x20\n        /* \"#utility.yul\":21329:21338   */\n      dup3\n        /* \"#utility.yul\":21325:21343   */\n      add\n        /* \"#utility.yul\":21317:21343   */\n      swap1\n      pop\n        /* \"#utility.yul\":21389:21398   */\n      dup2\n        /* \"#utility.yul\":21383:21387   */\n      dup2\n        /* \"#utility.yul\":21379:21399   */\n      sub\n        /* \"#utility.yul\":21375:21376   */\n      0x00\n        /* \"#utility.yul\":21364:21373   */\n      dup4\n        /* \"#utility.yul\":21360:21377   */\n      add\n        /* \"#utility.yul\":21353:21400   */\n      mstore\n        /* \"#utility.yul\":21417:21548   */\n      tag_776\n        /* \"#utility.yul\":21543:21547   */\n      dup2\n        /* \"#utility.yul\":21417:21548   */\n      tag_706\n      jump\t// in\n    tag_776:\n        /* \"#utility.yul\":21409:21548   */\n      swap1\n      pop\n        /* \"#utility.yul\":21136:21555   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21561:21980   */\n    tag_483:\n        /* \"#utility.yul\":21727:21731   */\n      0x00\n        /* \"#utility.yul\":21765:21767   */\n      0x20\n        /* \"#utility.yul\":21754:21763   */\n      dup3\n        /* \"#utility.yul\":21750:21768   */\n      add\n        /* \"#utility.yul\":21742:21768   */\n      swap1\n      pop\n        /* \"#utility.yul\":21814:21823   */\n      dup2\n        /* \"#utility.yul\":21808:21812   */\n      dup2\n        /* \"#utility.yul\":21804:21824   */\n      sub\n        /* \"#utility.yul\":21800:21801   */\n      0x00\n        /* \"#utility.yul\":21789:21798   */\n      dup4\n        /* \"#utility.yul\":21785:21802   */\n      add\n        /* \"#utility.yul\":21778:21825   */\n      mstore\n        /* \"#utility.yul\":21842:21973   */\n      tag_778\n        /* \"#utility.yul\":21968:21972   */\n      dup2\n        /* \"#utility.yul\":21842:21973   */\n      tag_711\n      jump\t// in\n    tag_778:\n        /* \"#utility.yul\":21834:21973   */\n      swap1\n      pop\n        /* \"#utility.yul\":21561:21980   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21986:22405   */\n    tag_292:\n        /* \"#utility.yul\":22152:22156   */\n      0x00\n        /* \"#utility.yul\":22190:22192   */\n      0x20\n        /* \"#utility.yul\":22179:22188   */\n      dup3\n        /* \"#utility.yul\":22175:22193   */\n      add\n        /* \"#utility.yul\":22167:22193   */\n      swap1\n      pop\n        /* \"#utility.yul\":22239:22248   */\n      dup2\n        /* \"#utility.yul\":22233:22237   */\n      dup2\n        /* \"#utility.yul\":22229:22249   */\n      sub\n        /* \"#utility.yul\":22225:22226   */\n      0x00\n        /* \"#utility.yul\":22214:22223   */\n      dup4\n        /* \"#utility.yul\":22210:22227   */\n      add\n        /* \"#utility.yul\":22203:22250   */\n      mstore\n        /* \"#utility.yul\":22267:22398   */\n      tag_780\n        /* \"#utility.yul\":22393:22397   */\n      dup2\n        /* \"#utility.yul\":22267:22398   */\n      tag_716\n      jump\t// in\n    tag_780:\n        /* \"#utility.yul\":22259:22398   */\n      swap1\n      pop\n        /* \"#utility.yul\":21986:22405   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22411:22633   */\n    tag_45:\n        /* \"#utility.yul\":22504:22508   */\n      0x00\n        /* \"#utility.yul\":22542:22544   */\n      0x20\n        /* \"#utility.yul\":22531:22540   */\n      dup3\n        /* \"#utility.yul\":22527:22545   */\n      add\n        /* \"#utility.yul\":22519:22545   */\n      swap1\n      pop\n        /* \"#utility.yul\":22555:22626   */\n      tag_782\n        /* \"#utility.yul\":22623:22624   */\n      0x00\n        /* \"#utility.yul\":22612:22621   */\n      dup4\n        /* \"#utility.yul\":22608:22625   */\n      add\n        /* \"#utility.yul\":22599:22605   */\n      dup5\n        /* \"#utility.yul\":22555:22626   */\n      tag_721\n      jump\t// in\n    tag_782:\n        /* \"#utility.yul\":22411:22633   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22639:22971   */\n    tag_139:\n        /* \"#utility.yul\":22760:22764   */\n      0x00\n        /* \"#utility.yul\":22798:22800   */\n      0x40\n        /* \"#utility.yul\":22787:22796   */\n      dup3\n        /* \"#utility.yul\":22783:22801   */\n      add\n        /* \"#utility.yul\":22775:22801   */\n      swap1\n      pop\n        /* \"#utility.yul\":22811:22882   */\n      tag_784\n        /* \"#utility.yul\":22879:22880   */\n      0x00\n        /* \"#utility.yul\":22868:22877   */\n      dup4\n        /* \"#utility.yul\":22864:22881   */\n      add\n        /* \"#utility.yul\":22855:22861   */\n      dup6\n        /* \"#utility.yul\":22811:22882   */\n      tag_721\n      jump\t// in\n    tag_784:\n        /* \"#utility.yul\":22892:22964   */\n      tag_785\n        /* \"#utility.yul\":22960:22962   */\n      0x20\n        /* \"#utility.yul\":22949:22958   */\n      dup4\n        /* \"#utility.yul\":22945:22963   */\n      add\n        /* \"#utility.yul\":22936:22942   */\n      dup5\n        /* \"#utility.yul\":22892:22964   */\n      tag_721\n      jump\t// in\n    tag_785:\n        /* \"#utility.yul\":22639:22971   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23058:23156   */\n    tag_625:\n        /* \"#utility.yul\":23109:23115   */\n      0x00\n        /* \"#utility.yul\":23143:23148   */\n      dup2\n        /* \"#utility.yul\":23137:23149   */\n      mload\n        /* \"#utility.yul\":23127:23149   */\n      swap1\n      pop\n        /* \"#utility.yul\":23058:23156   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23162:23261   */\n    tag_645:\n        /* \"#utility.yul\":23214:23220   */\n      0x00\n        /* \"#utility.yul\":23248:23253   */\n      dup2\n        /* \"#utility.yul\":23242:23254   */\n      mload\n        /* \"#utility.yul\":23232:23254   */\n      swap1\n      pop\n        /* \"#utility.yul\":23162:23261   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23267:23414   */\n    tag_627:\n        /* \"#utility.yul\":23368:23379   */\n      0x00\n        /* \"#utility.yul\":23405:23408   */\n      dup2\n        /* \"#utility.yul\":23390:23408   */\n      swap1\n      pop\n        /* \"#utility.yul\":23267:23414   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23420:23589   */\n    tag_647:\n        /* \"#utility.yul\":23504:23515   */\n      0x00\n        /* \"#utility.yul\":23538:23544   */\n      dup3\n        /* \"#utility.yul\":23533:23536   */\n      dup3\n        /* \"#utility.yul\":23526:23545   */\n      mstore\n        /* \"#utility.yul\":23578:23582   */\n      0x20\n        /* \"#utility.yul\":23573:23576   */\n      dup3\n        /* \"#utility.yul\":23569:23583   */\n      add\n        /* \"#utility.yul\":23554:23583   */\n      swap1\n      pop\n        /* \"#utility.yul\":23420:23589   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23595:23900   */\n    tag_459:\n        /* \"#utility.yul\":23635:23638   */\n      0x00\n        /* \"#utility.yul\":23654:23674   */\n      tag_793\n        /* \"#utility.yul\":23672:23673   */\n      dup3\n        /* \"#utility.yul\":23654:23674   */\n      tag_724\n      jump\t// in\n    tag_793:\n        /* \"#utility.yul\":23649:23674   */\n      swap2\n      pop\n        /* \"#utility.yul\":23688:23708   */\n      tag_794\n        /* \"#utility.yul\":23706:23707   */\n      dup4\n        /* \"#utility.yul\":23688:23708   */\n      tag_724\n      jump\t// in\n    tag_794:\n        /* \"#utility.yul\":23683:23708   */\n      swap3\n      pop\n        /* \"#utility.yul\":23842:23843   */\n      dup3\n        /* \"#utility.yul\":23774:23840   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":23770:23844   */\n      sub\n        /* \"#utility.yul\":23767:23768   */\n      dup3\n        /* \"#utility.yul\":23764:23845   */\n      gt\n        /* \"#utility.yul\":23761:23868   */\n      iszero\n      tag_795\n      jumpi\n        /* \"#utility.yul\":23848:23866   */\n      tag_796\n      tag_797\n      jump\t// in\n    tag_796:\n        /* \"#utility.yul\":23761:23868   */\n    tag_795:\n        /* \"#utility.yul\":23892:23893   */\n      dup3\n        /* \"#utility.yul\":23889:23890   */\n      dup3\n        /* \"#utility.yul\":23885:23894   */\n      add\n        /* \"#utility.yul\":23878:23894   */\n      swap1\n      pop\n        /* \"#utility.yul\":23595:23900   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23906:24091   */\n    tag_447:\n        /* \"#utility.yul\":23946:23947   */\n      0x00\n        /* \"#utility.yul\":23963:23983   */\n      tag_799\n        /* \"#utility.yul\":23981:23982   */\n      dup3\n        /* \"#utility.yul\":23963:23983   */\n      tag_724\n      jump\t// in\n    tag_799:\n        /* \"#utility.yul\":23958:23983   */\n      swap2\n      pop\n        /* \"#utility.yul\":23997:24017   */\n      tag_800\n        /* \"#utility.yul\":24015:24016   */\n      dup4\n        /* \"#utility.yul\":23997:24017   */\n      tag_724\n      jump\t// in\n    tag_800:\n        /* \"#utility.yul\":23992:24017   */\n      swap3\n      pop\n        /* \"#utility.yul\":24036:24037   */\n      dup3\n        /* \"#utility.yul\":24026:24061   */\n      tag_801\n      jumpi\n        /* \"#utility.yul\":24041:24059   */\n      tag_802\n      tag_803\n      jump\t// in\n    tag_802:\n        /* \"#utility.yul\":24026:24061   */\n    tag_801:\n        /* \"#utility.yul\":24083:24084   */\n      dup3\n        /* \"#utility.yul\":24080:24081   */\n      dup3\n        /* \"#utility.yul\":24076:24085   */\n      div\n        /* \"#utility.yul\":24071:24085   */\n      swap1\n      pop\n        /* \"#utility.yul\":23906:24091   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24097:24445   */\n    tag_445:\n        /* \"#utility.yul\":24137:24144   */\n      0x00\n        /* \"#utility.yul\":24160:24180   */\n      tag_805\n        /* \"#utility.yul\":24178:24179   */\n      dup3\n        /* \"#utility.yul\":24160:24180   */\n      tag_724\n      jump\t// in\n    tag_805:\n        /* \"#utility.yul\":24155:24180   */\n      swap2\n      pop\n        /* \"#utility.yul\":24194:24214   */\n      tag_806\n        /* \"#utility.yul\":24212:24213   */\n      dup4\n        /* \"#utility.yul\":24194:24214   */\n      tag_724\n      jump\t// in\n    tag_806:\n        /* \"#utility.yul\":24189:24214   */\n      swap3\n      pop\n        /* \"#utility.yul\":24382:24383   */\n      dup2\n        /* \"#utility.yul\":24314:24380   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":24310:24384   */\n      div\n        /* \"#utility.yul\":24307:24308   */\n      dup4\n        /* \"#utility.yul\":24304:24385   */\n      gt\n        /* \"#utility.yul\":24299:24300   */\n      dup3\n        /* \"#utility.yul\":24292:24301   */\n      iszero\n        /* \"#utility.yul\":24285:24302   */\n      iszero\n        /* \"#utility.yul\":24281:24386   */\n      and\n        /* \"#utility.yul\":24278:24409   */\n      iszero\n      tag_807\n      jumpi\n        /* \"#utility.yul\":24389:24407   */\n      tag_808\n      tag_797\n      jump\t// in\n    tag_808:\n        /* \"#utility.yul\":24278:24409   */\n    tag_807:\n        /* \"#utility.yul\":24437:24438   */\n      dup3\n        /* \"#utility.yul\":24434:24435   */\n      dup3\n        /* \"#utility.yul\":24430:24439   */\n      mul\n        /* \"#utility.yul\":24419:24439   */\n      swap1\n      pop\n        /* \"#utility.yul\":24097:24445   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24451:24642   */\n    tag_496:\n        /* \"#utility.yul\":24491:24495   */\n      0x00\n        /* \"#utility.yul\":24511:24531   */\n      tag_810\n        /* \"#utility.yul\":24529:24530   */\n      dup3\n        /* \"#utility.yul\":24511:24531   */\n      tag_724\n      jump\t// in\n    tag_810:\n        /* \"#utility.yul\":24506:24531   */\n      swap2\n      pop\n        /* \"#utility.yul\":24545:24565   */\n      tag_811\n        /* \"#utility.yul\":24563:24564   */\n      dup4\n        /* \"#utility.yul\":24545:24565   */\n      tag_724\n      jump\t// in\n    tag_811:\n        /* \"#utility.yul\":24540:24565   */\n      swap3\n      pop\n        /* \"#utility.yul\":24584:24585   */\n      dup3\n        /* \"#utility.yul\":24581:24582   */\n      dup3\n        /* \"#utility.yul\":24578:24586   */\n      lt\n        /* \"#utility.yul\":24575:24609   */\n      iszero\n      tag_812\n      jumpi\n        /* \"#utility.yul\":24589:24607   */\n      tag_813\n      tag_797\n      jump\t// in\n    tag_813:\n        /* \"#utility.yul\":24575:24609   */\n    tag_812:\n        /* \"#utility.yul\":24634:24635   */\n      dup3\n        /* \"#utility.yul\":24631:24632   */\n      dup3\n        /* \"#utility.yul\":24627:24636   */\n      sub\n        /* \"#utility.yul\":24619:24636   */\n      swap1\n      pop\n        /* \"#utility.yul\":24451:24642   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24648:24744   */\n    tag_621:\n        /* \"#utility.yul\":24685:24692   */\n      0x00\n        /* \"#utility.yul\":24714:24738   */\n      tag_815\n        /* \"#utility.yul\":24732:24737   */\n      dup3\n        /* \"#utility.yul\":24714:24738   */\n      tag_816\n      jump\t// in\n    tag_815:\n        /* \"#utility.yul\":24703:24738   */\n      swap1\n      pop\n        /* \"#utility.yul\":24648:24744   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24750:24840   */\n    tag_817:\n        /* \"#utility.yul\":24784:24791   */\n      0x00\n        /* \"#utility.yul\":24827:24832   */\n      dup2\n        /* \"#utility.yul\":24820:24833   */\n      iszero\n        /* \"#utility.yul\":24813:24834   */\n      iszero\n        /* \"#utility.yul\":24802:24834   */\n      swap1\n      pop\n        /* \"#utility.yul\":24750:24840   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24846:24956   */\n    tag_819:\n        /* \"#utility.yul\":24897:24904   */\n      0x00\n        /* \"#utility.yul\":24926:24950   */\n      tag_821\n        /* \"#utility.yul\":24944:24949   */\n      dup3\n        /* \"#utility.yul\":24926:24950   */\n      tag_621\n      jump\t// in\n    tag_821:\n        /* \"#utility.yul\":24915:24950   */\n      swap1\n      pop\n        /* \"#utility.yul\":24846:24956   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24962:25073   */\n    tag_822:\n        /* \"#utility.yul\":25014:25021   */\n      0x00\n        /* \"#utility.yul\":25043:25067   */\n      tag_824\n        /* \"#utility.yul\":25061:25066   */\n      dup3\n        /* \"#utility.yul\":25043:25067   */\n      tag_621\n      jump\t// in\n    tag_824:\n        /* \"#utility.yul\":25032:25067   */\n      swap1\n      pop\n        /* \"#utility.yul\":24962:25073   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":25079:25196   */\n    tag_825:\n        /* \"#utility.yul\":25137:25144   */\n      0x00\n        /* \"#utility.yul\":25166:25190   */\n      tag_827\n        /* \"#utility.yul\":25184:25189   */\n      dup3\n        /* \"#utility.yul\":25166:25190   */\n      tag_621\n      jump\t// in\n    tag_827:\n        /* \"#utility.yul\":25155:25190   */\n      swap1\n      pop\n        /* \"#utility.yul\":25079:25196   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":25202:25328   */\n    tag_816:\n        /* \"#utility.yul\":25239:25246   */\n      0x00\n        /* \"#utility.yul\":25279:25321   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":25272:25277   */\n      dup3\n        /* \"#utility.yul\":25268:25322   */\n      and\n        /* \"#utility.yul\":25257:25322   */\n      swap1\n      pop\n        /* \"#utility.yul\":25202:25328   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":25334:25411   */\n    tag_724:\n        /* \"#utility.yul\":25371:25378   */\n      0x00\n        /* \"#utility.yul\":25400:25405   */\n      dup2\n        /* \"#utility.yul\":25389:25405   */\n      swap1\n      pop\n        /* \"#utility.yul\":25334:25411   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":25417:25557   */\n    tag_633:\n        /* \"#utility.yul\":25481:25490   */\n      0x00\n        /* \"#utility.yul\":25514:25551   */\n      tag_831\n        /* \"#utility.yul\":25545:25550   */\n      dup3\n        /* \"#utility.yul\":25514:25551   */\n      tag_832\n      jump\t// in\n    tag_831:\n        /* \"#utility.yul\":25501:25551   */\n      swap1\n      pop\n        /* \"#utility.yul\":25417:25557   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":25563:25704   */\n    tag_637:\n        /* \"#utility.yul\":25628:25637   */\n      0x00\n        /* \"#utility.yul\":25661:25698   */\n      tag_834\n        /* \"#utility.yul\":25692:25697   */\n      dup3\n        /* \"#utility.yul\":25661:25698   */\n      tag_832\n      jump\t// in\n    tag_834:\n        /* \"#utility.yul\":25648:25698   */\n      swap1\n      pop\n        /* \"#utility.yul\":25563:25704   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":25710:25857   */\n    tag_641:\n        /* \"#utility.yul\":25781:25790   */\n      0x00\n        /* \"#utility.yul\":25814:25851   */\n      tag_836\n        /* \"#utility.yul\":25845:25850   */\n      dup3\n        /* \"#utility.yul\":25814:25851   */\n      tag_832\n      jump\t// in\n    tag_836:\n        /* \"#utility.yul\":25801:25851   */\n      swap1\n      pop\n        /* \"#utility.yul\":25710:25857   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":25863:25989   */\n    tag_832:\n        /* \"#utility.yul\":25913:25922   */\n      0x00\n        /* \"#utility.yul\":25946:25983   */\n      tag_838\n        /* \"#utility.yul\":25977:25982   */\n      dup3\n        /* \"#utility.yul\":25946:25983   */\n      tag_839\n      jump\t// in\n    tag_838:\n        /* \"#utility.yul\":25933:25983   */\n      swap1\n      pop\n        /* \"#utility.yul\":25863:25989   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":25995:26108   */\n    tag_839:\n        /* \"#utility.yul\":26045:26054   */\n      0x00\n        /* \"#utility.yul\":26078:26102   */\n      tag_841\n        /* \"#utility.yul\":26096:26101   */\n      dup3\n        /* \"#utility.yul\":26078:26102   */\n      tag_816\n      jump\t// in\n    tag_841:\n        /* \"#utility.yul\":26065:26102   */\n      swap1\n      pop\n        /* \"#utility.yul\":25995:26108   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":26114:26421   */\n    tag_629:\n        /* \"#utility.yul\":26182:26183   */\n      0x00\n        /* \"#utility.yul\":26192:26305   */\n    tag_843:\n        /* \"#utility.yul\":26206:26212   */\n      dup4\n        /* \"#utility.yul\":26203:26204   */\n      dup2\n        /* \"#utility.yul\":26200:26213   */\n      lt\n        /* \"#utility.yul\":26192:26305   */\n      iszero\n      tag_845\n      jumpi\n        /* \"#utility.yul\":26291:26292   */\n      dup1\n        /* \"#utility.yul\":26286:26289   */\n      dup3\n        /* \"#utility.yul\":26282:26293   */\n      add\n        /* \"#utility.yul\":26276:26294   */\n      mload\n        /* \"#utility.yul\":26272:26273   */\n      dup2\n        /* \"#utility.yul\":26267:26270   */\n      dup5\n        /* \"#utility.yul\":26263:26274   */\n      add\n        /* \"#utility.yul\":26256:26295   */\n      mstore\n        /* \"#utility.yul\":26228:26230   */\n      0x20\n        /* \"#utility.yul\":26225:26226   */\n      dup2\n        /* \"#utility.yul\":26221:26231   */\n      add\n        /* \"#utility.yul\":26216:26231   */\n      swap1\n      pop\n        /* \"#utility.yul\":26192:26305   */\n      jump(tag_843)\n    tag_845:\n        /* \"#utility.yul\":26323:26329   */\n      dup4\n        /* \"#utility.yul\":26320:26321   */\n      dup2\n        /* \"#utility.yul\":26317:26330   */\n      gt\n        /* \"#utility.yul\":26314:26415   */\n      iszero\n      tag_846\n      jumpi\n        /* \"#utility.yul\":26403:26404   */\n      0x00\n        /* \"#utility.yul\":26394:26400   */\n      dup5\n        /* \"#utility.yul\":26389:26392   */\n      dup5\n        /* \"#utility.yul\":26385:26401   */\n      add\n        /* \"#utility.yul\":26378:26405   */\n      mstore\n        /* \"#utility.yul\":26314:26415   */\n    tag_846:\n        /* \"#utility.yul\":26163:26421   */\n      pop\n        /* \"#utility.yul\":26114:26421   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":26427:26660   */\n    tag_362:\n        /* \"#utility.yul\":26466:26469   */\n      0x00\n        /* \"#utility.yul\":26489:26513   */\n      tag_848\n        /* \"#utility.yul\":26507:26512   */\n      dup3\n        /* \"#utility.yul\":26489:26513   */\n      tag_724\n      jump\t// in\n    tag_848:\n        /* \"#utility.yul\":26480:26513   */\n      swap2\n      pop\n        /* \"#utility.yul\":26535:26601   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":26528:26533   */\n      dup3\n        /* \"#utility.yul\":26525:26602   */\n      eq\n        /* \"#utility.yul\":26522:26625   */\n      iszero\n      tag_849\n      jumpi\n        /* \"#utility.yul\":26605:26623   */\n      tag_850\n      tag_797\n      jump\t// in\n    tag_850:\n        /* \"#utility.yul\":26522:26625   */\n    tag_849:\n        /* \"#utility.yul\":26652:26653   */\n      0x01\n        /* \"#utility.yul\":26645:26650   */\n      dup3\n        /* \"#utility.yul\":26641:26654   */\n      add\n        /* \"#utility.yul\":26634:26654   */\n      swap1\n      pop\n        /* \"#utility.yul\":26427:26660   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":26666:26846   */\n    tag_797:\n        /* \"#utility.yul\":26714:26791   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":26711:26712   */\n      0x00\n        /* \"#utility.yul\":26704:26792   */\n      mstore\n        /* \"#utility.yul\":26811:26815   */\n      0x11\n        /* \"#utility.yul\":26808:26809   */\n      0x04\n        /* \"#utility.yul\":26801:26816   */\n      mstore\n        /* \"#utility.yul\":26835:26839   */\n      0x24\n        /* \"#utility.yul\":26832:26833   */\n      0x00\n        /* \"#utility.yul\":26825:26840   */\n      revert\n        /* \"#utility.yul\":26852:27032   */\n    tag_803:\n        /* \"#utility.yul\":26900:26977   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":26897:26898   */\n      0x00\n        /* \"#utility.yul\":26890:26978   */\n      mstore\n        /* \"#utility.yul\":26997:27001   */\n      0x12\n        /* \"#utility.yul\":26994:26995   */\n      0x04\n        /* \"#utility.yul\":26987:27002   */\n      mstore\n        /* \"#utility.yul\":27021:27025   */\n      0x24\n        /* \"#utility.yul\":27018:27019   */\n      0x00\n        /* \"#utility.yul\":27011:27026   */\n      revert\n        /* \"#utility.yul\":27038:27218   */\n    tag_162:\n        /* \"#utility.yul\":27086:27163   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":27083:27084   */\n      0x00\n        /* \"#utility.yul\":27076:27164   */\n      mstore\n        /* \"#utility.yul\":27183:27187   */\n      0x32\n        /* \"#utility.yul\":27180:27181   */\n      0x04\n        /* \"#utility.yul\":27173:27188   */\n      mstore\n        /* \"#utility.yul\":27207:27211   */\n      0x24\n        /* \"#utility.yul\":27204:27205   */\n      0x00\n        /* \"#utility.yul\":27197:27212   */\n      revert\n        /* \"#utility.yul\":27347:27464   */\n    tag_569:\n        /* \"#utility.yul\":27456:27457   */\n      0x00\n        /* \"#utility.yul\":27453:27454   */\n      dup1\n        /* \"#utility.yul\":27446:27458   */\n      revert\n        /* \"#utility.yul\":27470:27572   */\n    tag_650:\n        /* \"#utility.yul\":27511:27517   */\n      0x00\n        /* \"#utility.yul\":27562:27564   */\n      0x1f\n        /* \"#utility.yul\":27558:27565   */\n      not\n        /* \"#utility.yul\":27553:27555   */\n      0x1f\n        /* \"#utility.yul\":27546:27551   */\n      dup4\n        /* \"#utility.yul\":27542:27556   */\n      add\n        /* \"#utility.yul\":27538:27566   */\n      and\n        /* \"#utility.yul\":27528:27566   */\n      swap1\n      pop\n        /* \"#utility.yul\":27470:27572   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":27578:27803   */\n    tag_655:\n        /* \"#utility.yul\":27718:27752   */\n      0x4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061\n        /* \"#utility.yul\":27714:27715   */\n      0x00\n        /* \"#utility.yul\":27706:27712   */\n      dup3\n        /* \"#utility.yul\":27702:27716   */\n      add\n        /* \"#utility.yul\":27695:27753   */\n      mstore\n        /* \"#utility.yul\":27787:27795   */\n      0x6464726573730000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":27782:27784   */\n      0x20\n        /* \"#utility.yul\":27774:27780   */\n      dup3\n        /* \"#utility.yul\":27770:27785   */\n      add\n        /* \"#utility.yul\":27763:27796   */\n      mstore\n        /* \"#utility.yul\":27578:27803   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":27809:27978   */\n    tag_660:\n        /* \"#utility.yul\":27949:27970   */\n      0x506f776572206973206e6f7420656e6f75676800000000000000000000000000\n        /* \"#utility.yul\":27945:27946   */\n      0x00\n        /* \"#utility.yul\":27937:27943   */\n      dup3\n        /* \"#utility.yul\":27933:27947   */\n      add\n        /* \"#utility.yul\":27926:27971   */\n      mstore\n        /* \"#utility.yul\":27809:27978   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":27984:28161   */\n    tag_665:\n        /* \"#utility.yul\":28124:28153   */\n      0x776974686472617720506f77657220627920756e7374616b696e670000000000\n        /* \"#utility.yul\":28120:28121   */\n      0x00\n        /* \"#utility.yul\":28112:28118   */\n      dup3\n        /* \"#utility.yul\":28108:28122   */\n      add\n        /* \"#utility.yul\":28101:28154   */\n      mstore\n        /* \"#utility.yul\":27984:28161   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":28167:28344   */\n    tag_670:\n        /* \"#utility.yul\":28307:28336   */\n      0x536166654d6174683a206164646974696f6e206f766572666c6f770000000000\n        /* \"#utility.yul\":28303:28304   */\n      0x00\n        /* \"#utility.yul\":28295:28301   */\n      dup3\n        /* \"#utility.yul\":28291:28305   */\n      add\n        /* \"#utility.yul\":28284:28337   */\n      mstore\n        /* \"#utility.yul\":28167:28344   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":28350:28575   */\n    tag_675:\n        /* \"#utility.yul\":28490:28524   */\n      0x416464726573733a20696e73756666696369656e742062616c616e636520666f\n        /* \"#utility.yul\":28486:28487   */\n      0x00\n        /* \"#utility.yul\":28478:28484   */\n      dup3\n        /* \"#utility.yul\":28474:28488   */\n      add\n        /* \"#utility.yul\":28467:28525   */\n      mstore\n        /* \"#utility.yul\":28559:28567   */\n      0x722063616c6c0000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":28554:28556   */\n      0x20\n        /* \"#utility.yul\":28546:28552   */\n      dup3\n        /* \"#utility.yul\":28542:28557   */\n      add\n        /* \"#utility.yul\":28535:28568   */\n      mstore\n        /* \"#utility.yul\":28350:28575   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":28581:28755   */\n    tag_680:\n        /* \"#utility.yul\":28721:28747   */\n      0x6465706f73697420506f776572206279207374616b696e670000000000000000\n        /* \"#utility.yul\":28717:28718   */\n      0x00\n        /* \"#utility.yul\":28709:28715   */\n      dup3\n        /* \"#utility.yul\":28705:28719   */\n      add\n        /* \"#utility.yul\":28698:28748   */\n      mstore\n        /* \"#utility.yul\":28581:28755   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":28761:28981   */\n    tag_685:\n        /* \"#utility.yul\":28901:28935   */\n      0x536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f\n        /* \"#utility.yul\":28897:28898   */\n      0x00\n        /* \"#utility.yul\":28889:28895   */\n      dup3\n        /* \"#utility.yul\":28885:28899   */\n      add\n        /* \"#utility.yul\":28878:28936   */\n      mstore\n        /* \"#utility.yul\":28970:28973   */\n      0x7700000000000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":28965:28967   */\n      0x20\n        /* \"#utility.yul\":28957:28963   */\n      dup3\n        /* \"#utility.yul\":28953:28968   */\n      add\n        /* \"#utility.yul\":28946:28974   */\n      mstore\n        /* \"#utility.yul\":28761:28981   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":28987:29169   */\n    tag_690:\n        /* \"#utility.yul\":29127:29161   */\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n        /* \"#utility.yul\":29123:29124   */\n      0x00\n        /* \"#utility.yul\":29115:29121   */\n      dup3\n        /* \"#utility.yul\":29111:29125   */\n      add\n        /* \"#utility.yul\":29104:29162   */\n      mstore\n        /* \"#utility.yul\":28987:29169   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":29175:29354   */\n    tag_695:\n        /* \"#utility.yul\":29315:29346   */\n      0x416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000\n        /* \"#utility.yul\":29311:29312   */\n      0x00\n        /* \"#utility.yul\":29303:29309   */\n      dup3\n        /* \"#utility.yul\":29299:29313   */\n      add\n        /* \"#utility.yul\":29292:29347   */\n      mstore\n        /* \"#utility.yul\":29175:29354   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":29360:29528   */\n    tag_700:\n        /* \"#utility.yul\":29500:29520   */\n      0x77697468647261773a206e6f7420676f6f640000000000000000000000000000\n        /* \"#utility.yul\":29496:29497   */\n      0x00\n        /* \"#utility.yul\":29488:29494   */\n      dup3\n        /* \"#utility.yul\":29484:29498   */\n      add\n        /* \"#utility.yul\":29477:29521   */\n      mstore\n        /* \"#utility.yul\":29360:29528   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":29534:29763   */\n    tag_705:\n        /* \"#utility.yul\":29674:29708   */\n      0x5361666545524332303a204552433230206f7065726174696f6e20646964206e\n        /* \"#utility.yul\":29670:29671   */\n      0x00\n        /* \"#utility.yul\":29662:29668   */\n      dup3\n        /* \"#utility.yul\":29658:29672   */\n      add\n        /* \"#utility.yul\":29651:29709   */\n      mstore\n        /* \"#utility.yul\":29743:29755   */\n      0x6f74207375636365656400000000000000000000000000000000000000000000\n        /* \"#utility.yul\":29738:29740   */\n      0x20\n        /* \"#utility.yul\":29730:29736   */\n      dup3\n        /* \"#utility.yul\":29726:29741   */\n      add\n        /* \"#utility.yul\":29719:29756   */\n      mstore\n        /* \"#utility.yul\":29534:29763   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":29769:29931   */\n    tag_710:\n        /* \"#utility.yul\":29909:29923   */\n      0x6d6967726174653a206261640000000000000000000000000000000000000000\n        /* \"#utility.yul\":29905:29906   */\n      0x00\n        /* \"#utility.yul\":29897:29903   */\n      dup3\n        /* \"#utility.yul\":29893:29907   */\n      add\n        /* \"#utility.yul\":29886:29924   */\n      mstore\n        /* \"#utility.yul\":29769:29931   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":29937:30178   */\n    tag_715:\n        /* \"#utility.yul\":30077:30111   */\n      0x5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f\n        /* \"#utility.yul\":30073:30074   */\n      0x00\n        /* \"#utility.yul\":30065:30071   */\n      dup3\n        /* \"#utility.yul\":30061:30075   */\n      add\n        /* \"#utility.yul\":30054:30112   */\n      mstore\n        /* \"#utility.yul\":30146:30170   */\n      0x20746f206e6f6e2d7a65726f20616c6c6f77616e636500000000000000000000\n        /* \"#utility.yul\":30141:30143   */\n      0x20\n        /* \"#utility.yul\":30133:30139   */\n      dup3\n        /* \"#utility.yul\":30129:30144   */\n      add\n        /* \"#utility.yul\":30122:30171   */\n      mstore\n        /* \"#utility.yul\":29937:30178   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":30184:30354   */\n    tag_720:\n        /* \"#utility.yul\":30324:30346   */\n      0x6d6967726174653a206e6f206d69677261746f72000000000000000000000000\n        /* \"#utility.yul\":30320:30321   */\n      0x00\n        /* \"#utility.yul\":30312:30318   */\n      dup3\n        /* \"#utility.yul\":30308:30322   */\n      add\n        /* \"#utility.yul\":30301:30347   */\n      mstore\n        /* \"#utility.yul\":30184:30354   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":30360:30482   */\n    tag_536:\n        /* \"#utility.yul\":30433:30457   */\n      tag_873\n        /* \"#utility.yul\":30451:30456   */\n      dup2\n        /* \"#utility.yul\":30433:30457   */\n      tag_621\n      jump\t// in\n    tag_873:\n        /* \"#utility.yul\":30426:30431   */\n      dup2\n        /* \"#utility.yul\":30423:30458   */\n      eq\n        /* \"#utility.yul\":30413:30476   */\n      tag_874\n      jumpi\n        /* \"#utility.yul\":30472:30473   */\n      0x00\n        /* \"#utility.yul\":30469:30470   */\n      dup1\n        /* \"#utility.yul\":30462:30474   */\n      revert\n        /* \"#utility.yul\":30413:30476   */\n    tag_874:\n        /* \"#utility.yul\":30360:30482   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":30488:30604   */\n    tag_540:\n        /* \"#utility.yul\":30558:30579   */\n      tag_876\n        /* \"#utility.yul\":30573:30578   */\n      dup2\n        /* \"#utility.yul\":30558:30579   */\n      tag_817\n      jump\t// in\n    tag_876:\n        /* \"#utility.yul\":30551:30556   */\n      dup2\n        /* \"#utility.yul\":30548:30580   */\n      eq\n        /* \"#utility.yul\":30538:30598   */\n      tag_877\n      jumpi\n        /* \"#utility.yul\":30594:30595   */\n      0x00\n        /* \"#utility.yul\":30591:30592   */\n      dup1\n        /* \"#utility.yul\":30584:30596   */\n      revert\n        /* \"#utility.yul\":30538:30598   */\n    tag_877:\n        /* \"#utility.yul\":30488:30604   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":30610:30760   */\n    tag_547:\n        /* \"#utility.yul\":30697:30735   */\n      tag_879\n        /* \"#utility.yul\":30729:30734   */\n      dup2\n        /* \"#utility.yul\":30697:30735   */\n      tag_819\n      jump\t// in\n    tag_879:\n        /* \"#utility.yul\":30690:30695   */\n      dup2\n        /* \"#utility.yul\":30687:30736   */\n      eq\n        /* \"#utility.yul\":30677:30754   */\n      tag_880\n      jumpi\n        /* \"#utility.yul\":30750:30751   */\n      0x00\n        /* \"#utility.yul\":30747:30748   */\n      dup1\n        /* \"#utility.yul\":30740:30752   */\n      revert\n        /* \"#utility.yul\":30677:30754   */\n    tag_880:\n        /* \"#utility.yul\":30610:30760   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":30766:30918   */\n    tag_554:\n        /* \"#utility.yul\":30854:30893   */\n      tag_882\n        /* \"#utility.yul\":30887:30892   */\n      dup2\n        /* \"#utility.yul\":30854:30893   */\n      tag_822\n      jump\t// in\n    tag_882:\n        /* \"#utility.yul\":30847:30852   */\n      dup2\n        /* \"#utility.yul\":30844:30894   */\n      eq\n        /* \"#utility.yul\":30834:30912   */\n      tag_883\n      jumpi\n        /* \"#utility.yul\":30908:30909   */\n      0x00\n        /* \"#utility.yul\":30905:30906   */\n      dup1\n        /* \"#utility.yul\":30898:30910   */\n      revert\n        /* \"#utility.yul\":30834:30912   */\n    tag_883:\n        /* \"#utility.yul\":30766:30918   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":30924:31088   */\n    tag_558:\n        /* \"#utility.yul\":31018:31063   */\n      tag_885\n        /* \"#utility.yul\":31057:31062   */\n      dup2\n        /* \"#utility.yul\":31018:31063   */\n      tag_825\n      jump\t// in\n    tag_885:\n        /* \"#utility.yul\":31011:31016   */\n      dup2\n        /* \"#utility.yul\":31008:31064   */\n      eq\n        /* \"#utility.yul\":30998:31082   */\n      tag_886\n      jumpi\n        /* \"#utility.yul\":31078:31079   */\n      0x00\n        /* \"#utility.yul\":31075:31076   */\n      dup1\n        /* \"#utility.yul\":31068:31080   */\n      revert\n        /* \"#utility.yul\":30998:31082   */\n    tag_886:\n        /* \"#utility.yul\":30924:31088   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":31094:31216   */\n    tag_562:\n        /* \"#utility.yul\":31167:31191   */\n      tag_888\n        /* \"#utility.yul\":31185:31190   */\n      dup2\n        /* \"#utility.yul\":31167:31191   */\n      tag_724\n      jump\t// in\n    tag_888:\n        /* \"#utility.yul\":31160:31165   */\n      dup2\n        /* \"#utility.yul\":31157:31192   */\n      eq\n        /* \"#utility.yul\":31147:31210   */\n      tag_889\n      jumpi\n        /* \"#utility.yul\":31206:31207   */\n      0x00\n        /* \"#utility.yul\":31203:31204   */\n      dup1\n        /* \"#utility.yul\":31196:31208   */\n      revert\n        /* \"#utility.yul\":31147:31210   */\n    tag_889:\n        /* \"#utility.yul\":31094:31216   */\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220db217bfbe705683e7b534bbc98e376d0970ceae3cc096b62152a224709176d9b64736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_1060": {
									"entryPoint": null,
									"id": 1060,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_836": {
									"entryPoint": null,
									"id": 836,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_806": {
									"entryPoint": 434,
									"id": 806,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_916": {
									"entryPoint": 442,
									"id": 916,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_contract$_IERC20_$286_fromMemory": {
									"entryPoint": 638,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 661,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_contract$_IERC20_$286t_uint256t_uint256_fromMemory": {
									"entryPoint": 684,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 776,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_contract$_IERC20_$286": {
									"entryPoint": 796,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 816,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 848,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 858,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_contract$_IERC20_$286": {
									"entryPoint": 863,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 889,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:2071:1",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "84:94:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "94:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "109:6:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "103:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "103:13:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "94:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "166:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_contract$_IERC20_$286",
																	"nodeType": "YulIdentifier",
																	"src": "125:40:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "125:47:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "125:47:1"
														}
													]
												},
												"name": "abi_decode_t_contract$_IERC20_$286_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "62:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "70:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "78:5:1",
														"type": ""
													}
												],
												"src": "7:171:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "247:80:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "257:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "272:6:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "266:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "266:13:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "257:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "315:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "288:26:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "288:33:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "288:33:1"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "225:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "233:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "241:5:1",
														"type": ""
													}
												],
												"src": "184:143:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "458:566:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "504:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "506:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "506:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "506:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "479:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "488:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "475:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "475:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "500:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "471:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "471:32:1"
															},
															"nodeType": "YulIf",
															"src": "468:119:1"
														},
														{
															"nodeType": "YulBlock",
															"src": "597:142:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "612:15:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "626:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "616:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "641:88:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "701:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "712:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "697:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "697:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "721:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_contract$_IERC20_$286_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "651:45:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "651:78:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "641:6:1"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "749:129:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "764:16:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "778:2:1",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "768:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "794:74:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "840:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "851:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "836:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "836:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "860:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "804:31:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "804:64:1"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "794:6:1"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "888:129:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "903:16:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "917:2:1",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "907:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "933:74:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "979:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "990:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "975:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "975:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "999:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "943:31:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "943:64:1"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "933:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_contract$_IERC20_$286t_uint256t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "412:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "423:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "435:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "443:6:1",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "451:6:1",
														"type": ""
													}
												],
												"src": "333:691:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1070:35:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1080:19:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1096:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1090:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1090:9:1"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "1080:6:1"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "1063:6:1",
														"type": ""
													}
												],
												"src": "1030:75:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1156:51:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1166:35:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1195:5:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "1177:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1177:24:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1166:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1138:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1148:7:1",
														"type": ""
													}
												],
												"src": "1111:96:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1272:51:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1282:35:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1311:5:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "1293:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1293:24:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1282:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_contract$_IERC20_$286",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1254:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1264:7:1",
														"type": ""
													}
												],
												"src": "1213:110:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1374:81:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1384:65:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1399:5:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1406:42:1",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "1395:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1395:54:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1384:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1356:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1366:7:1",
														"type": ""
													}
												],
												"src": "1329:126:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1506:32:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1516:16:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "1527:5:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1516:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1488:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1498:7:1",
														"type": ""
													}
												],
												"src": "1461:77:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1633:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1650:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1653:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1643:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1643:12:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1643:12:1"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "1544:117:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1756:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1773:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1776:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1766:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1766:12:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1766:12:1"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "1667:117:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1847:93:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1918:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1927:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1930:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1920:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1920:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1920:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1870:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "1909:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_contract$_IERC20_$286",
																					"nodeType": "YulIdentifier",
																					"src": "1877:31:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1877:38:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "1867:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1867:49:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1860:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1860:57:1"
															},
															"nodeType": "YulIf",
															"src": "1857:77:1"
														}
													]
												},
												"name": "validator_revert_t_contract$_IERC20_$286",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1840:5:1",
														"type": ""
													}
												],
												"src": "1790:150:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1989:79:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2046:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2055:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2058:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2048:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2048:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2048:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2012:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "2037:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "2019:17:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2019:24:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "2009:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2009:35:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2002:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2002:43:1"
															},
															"nodeType": "YulIf",
															"src": "1999:63:1"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1982:5:1",
														"type": ""
													}
												],
												"src": "1946:122:1"
											}
										]
									},
									"contents": "{\n\n    function abi_decode_t_contract$_IERC20_$286_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_contract$_IERC20_$286(value)\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_contract$_IERC20_$286t_uint256t_uint256_fromMemory(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_contract$_IERC20_$286_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_contract$_IERC20_$286(value) -> cleaned {\n        cleaned := cleanup_t_address(value)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function validator_revert_t_contract$_IERC20_$286(value) {\n        if iszero(eq(value, cleanup_t_contract$_IERC20_$286(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n}\n",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "6080604052600160045560006008553480156200001b57600080fd5b506040516200434d3803806200434d8339818101604052810190620000419190620002ac565b6200006162000055620001b260201b60201c565b620001ba60201b60201c565b82600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550816003819055508060098190555060066040518060800160405280600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016103e8815260200160095481526020016000815250908060018154018082558091505060019003906000526020600020906004020160009091909190915060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160010155604082015181600201556060820151816003015550506103e860088190555050505062000393565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b6000815190506200028f816200035f565b92915050565b600081519050620002a68162000379565b92915050565b600080600060608486031215620002c857620002c76200035a565b5b6000620002d8868287016200027e565b9350506020620002eb8682870162000295565b9250506040620002fe8682870162000295565b9150509250925092565b6000620003158262000330565b9050919050565b6000620003298262000308565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600080fd5b6200036a816200031c565b81146200037657600080fd5b50565b620003848162000350565b81146200039057600080fd5b50565b613faa80620003a36000396000f3fe608060405234801561001057600080fd5b50600436106101f05760003560e01c80635ffe61461161010f5780638da5cb5b116100a2578063d209db8c11610071578063d209db8c1461055a578063e2bbb1581461058a578063f2fde38b146105a6578063f3239ab5146105c2576101f0565b80638da5cb5b146104bd5780638dbb1e3a146104db57806393f1a40b1461050b578063cb3cba551461053c576101f0565b8063715018a6116100de578063715018a6146104475780637cd07e47146104515780638aa285501461046f5780638c51793b1461048d576101f0565b80635ffe6146146103d457806361c1b724146103f0578063630b5ba11461042157806364482f791461042b576101f0565b806341441d3b116101875780634ea2813c116101565780634ea2813c1461036257806351eb05a61461037e5780635312ea8e1461039a5780635990c569146103b6576101f0565b806341441d3b146102f0578063441a3e701461030c578063454b06081461032857806348cd4cb114610344576101f0565b80631d5fbd87116101c35780631d5fbd87146102805780631eaaa0451461029c57806323cf3118146102b85780633df7aff3146102d4576101f0565b8063081e3eda146101f55780631058d281146102135780631526fe271461022f57806317caf6f114610262575b600080fd5b6101fd6105f2565b60405161020a919061386c565b60405180910390f35b61022d6004803603810190610228919061310c565b6105ff565b005b6102496004803603810190610244919061310c565b6108be565b6040516102599493929190613601565b60405180910390f35b61026a61091e565b604051610277919061386c565b60405180910390f35b61029a600480360381019061029591906131f9565b610924565b005b6102b660048036038101906102b191906131a6565b610db8565b005b6102d260048036038101906102cd91906130df565b610f45565b005b6102ee60048036038101906102e9919061310c565b611005565b005b61030a6004803603810190610305919061310c565b61108b565b005b610326600480360381019061032191906131f9565b611313565b005b610342600480360381019061033d919061310c565b61160a565b005b61034c61198a565b604051610359919061386c565b60405180910390f35b61037c6004803603810190610377919061309f565b611990565b005b6103986004803603810190610393919061310c565b611ab9565b005b6103b460048036038101906103af919061310c565b611c67565b005b6103be611da0565b6040516103cb919061386c565b60405180910390f35b6103ee60048036038101906103e9919061310c565b611da6565b005b61040a6004803603810190610405919061310c565b611e2c565b604051610418929190613646565b60405180910390f35b610429611e80565b005b61044560048036038101906104409190613239565b611eb3565b005b61044f611fbf565b005b610459612047565b604051610466919061366f565b60405180910390f35b61047761206d565b604051610484919061386c565b60405180910390f35b6104a760048036038101906104a29190613018565b612073565b6040516104b4919061386c565b60405180910390f35b6104c56120bc565b6040516104d29190613542565b60405180910390f35b6104f560048036038101906104f091906131f9565b6120e5565b604051610502919061386c565b60405180910390f35b61052560048036038101906105209190613166565b612116565b604051610533929190613887565b60405180910390f35b610544612147565b60405161055191906135e6565b60405180910390f35b610574600480360381019061056f9190613018565b61216d565b604051610581919061386c565b60405180910390f35b6105a4600480360381019061059f91906131f9565b612185565b005b6105c060048036038101906105bb9190613018565b612445565b005b6105dc60048036038101906105d79190613166565b61253d565b6040516105e9919061386c565b60405180910390f35b6000600680549050905090565b6000600660008154811061061657610615613ba9565b5b9060005260206000209060040201905060006007600080815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020905082816000015410156106c1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106b8906137cc565b60405180910390fd5b6106cb6000611ab9565b6000610715826001015461070764e8d4a510006106f98760030154876000015461277190919063ffffffff16565b6127ec90919063ffffffff16565b61283690919063ffffffff16565b905060008111156107b65761077281600a60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461288090919063ffffffff16565b600a60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505b600084111561082e576107d684836000015461283690919063ffffffff16565b826000018190555061082d33858560000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166128de9092919063ffffffff16565b5b61086064e8d4a510006108528560030154856000015461277190919063ffffffff16565b6127ec90919063ffffffff16565b826001018190555060003373ffffffffffffffffffffffffffffffffffffffff167ff279e6a1f5e320cca91135676d9cb6e44ca8a08c0b88342bcdb1144f6511b568866040516108b0919061386c565b60405180910390a350505050565b600681815481106108ce57600080fd5b90600052602060002090600402016000915090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060010154908060020154908060030154905084565b60085481565b60006006828154811061093a57610939613ba9565b5b9060005260206000209060040201905060006007600084815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020905060008260030154905060008360000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401610a069190613542565b60206040518083038186803b158015610a1e57600080fd5b505afa158015610a32573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a569190613139565b9050836002015443118015610a6c575060008114155b15610b07576000610a818560020154436120e5565b90506000610ac4600854610ab68860010154610aa86003548761277190919063ffffffff16565b61277190919063ffffffff16565b6127ec90919063ffffffff16565b9050610b02610af384610ae564e8d4a510008561277190919063ffffffff16565b6127ec90919063ffffffff16565b8561288090919063ffffffff16565b935050505b6000610b4d8460010154610b3f64e8d4a51000610b3187896000015461277190919063ffffffff16565b6127ec90919063ffffffff16565b61283690919063ffffffff16565b9050600060018881548110610b6557610b64613ba9565b5b906000526020600020906002020190506000610bc9600a60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020548461288090919063ffffffff16565b90508160010154811115610c00576000881415610beb57610bea60006105ff565b5b60008814610bff57610bfe886000611313565b5b5b600a60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054826001015410610c85576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c7c906136cc565b60405180910390fd5b610cdb8260010154600a60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461283690919063ffffffff16565b600a60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166317e5883c336040518263ffffffff1660e01b8152600401610d7b9190613542565b600060405180830381600087803b158015610d9557600080fd5b505af1158015610da9573d6000803e3d6000fd5b50505050505050505050505050565b610dc0612964565b73ffffffffffffffffffffffffffffffffffffffff16610dde6120bc565b73ffffffffffffffffffffffffffffffffffffffff1614610e34576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e2b9061378c565b60405180910390fd5b8015610e4357610e42611e80565b5b60006009544311610e5657600954610e58565b435b9050610e6f8460085461288090919063ffffffff16565b600881905550600660405180608001604052808573ffffffffffffffffffffffffffffffffffffffff1681526020018681526020018381526020016000815250908060018154018082558091505060019003906000526020600020906004020160009091909190915060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550602082015181600101556040820151816002015560608201518160030155505050505050565b610f4d612964565b73ffffffffffffffffffffffffffffffffffffffff16610f6b6120bc565b73ffffffffffffffffffffffffffffffffffffffff1614610fc1576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610fb89061378c565b60405180910390fd5b80600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b61100d612964565b73ffffffffffffffffffffffffffffffffffffffff1661102b6120bc565b73ffffffffffffffffffffffffffffffffffffffff1614611081576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016110789061378c565b60405180910390fd5b8060038190555050565b600060066000815481106110a2576110a1613ba9565b5b9060005260206000209060040201905060006007600080815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002090506111106000611ab9565b60008160000154111561120a576000611167826001015461115964e8d4a5100061114b8760030154876000015461277190919063ffffffff16565b6127ec90919063ffffffff16565b61283690919063ffffffff16565b90506000811115611208576111c481600a60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461288090919063ffffffff16565b600a60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505b505b6000831115611284576112643330858560000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1661296c909392919063ffffffff16565b61127b83826000015461288090919063ffffffff16565b81600001819055505b6112b664e8d4a510006112a88460030154846000015461277190919063ffffffff16565b6127ec90919063ffffffff16565b816001018190555060003373ffffffffffffffffffffffffffffffffffffffff167f90890809c654f11d6e72a28fa60149770a0d11ec6c92319d6ceb2bb0a4ea1a1585604051611306919061386c565b60405180910390a3505050565b6000821415611357576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161134e906136ec565b60405180910390fd5b60006006838154811061136d5761136c613ba9565b5b9060005260206000209060040201905060006007600085815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002090508281600001541015611418576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161140f906137cc565b60405180910390fd5b61142184611ab9565b600061146b826001015461145d64e8d4a5100061144f8760030154876000015461277190919063ffffffff16565b6127ec90919063ffffffff16565b61283690919063ffffffff16565b9050600081111561150c576114c881600a60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461288090919063ffffffff16565b600a60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505b61152384836000015461283690919063ffffffff16565b826000018190555061155d64e8d4a5100061154f8560030154856000015461277190919063ffffffff16565b6127ec90919063ffffffff16565b82600101819055506115b433858560000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166128de9092919063ffffffff16565b843373ffffffffffffffffffffffffffffffffffffffff167ff279e6a1f5e320cca91135676d9cb6e44ca8a08c0b88342bcdb1144f6511b568866040516115fb919061386c565b60405180910390a35050505050565b600073ffffffffffffffffffffffffffffffffffffffff16600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16141561169c576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016116939061384c565b60405180910390fd5b6000600682815481106116b2576116b1613ba9565b5b9060005260206000209060040201905060008160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905060008173ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016117269190613542565b60206040518083038186803b15801561173e57600080fd5b505afa158015611752573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906117769190613139565b90506117c5600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16828473ffffffffffffffffffffffffffffffffffffffff166129f59092919063ffffffff16565b6000600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663ce5494bb846040518263ffffffff1660e01b815260040161182291906135e6565b602060405180830381600087803b15801561183c57600080fd5b505af1158015611850573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906118749190613072565b90508073ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016118af9190613542565b60206040518083038186803b1580156118c757600080fd5b505afa1580156118db573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906118ff9190613139565b8214611940576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016119379061380c565b60405180910390fd5b808460000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050505050565b60095481565b611998612964565b73ffffffffffffffffffffffffffffffffffffffff166119b66120bc565b73ffffffffffffffffffffffffffffffffffffffff1614611a0c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611a039061378c565b60405180910390fd5b600160405180604001604052808473ffffffffffffffffffffffffffffffffffffffff16815260200183815250908060018154018082558091505060019003906000526020600020906002020160009091909190915060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506020820151816001015550505050565b600060068281548110611acf57611ace613ba9565b5b9060005260206000209060040201905080600201544311611af05750611c64565b60008160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401611b4f9190613542565b60206040518083038186803b158015611b6757600080fd5b505afa158015611b7b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611b9f9190613139565b905060008111611bb9574382600201819055505050611c64565b6000611bc98360020154436120e5565b90506000611c0c600854611bfe8660010154611bf06003548761277190919063ffffffff16565b61277190919063ffffffff16565b6127ec90919063ffffffff16565b9050611c4e611c3b84611c2d64e8d4a510008561277190919063ffffffff16565b6127ec90919063ffffffff16565b856003015461288090919063ffffffff16565b8460030181905550438460020181905550505050505b50565b600060068281548110611c7d57611c7c613ba9565b5b9060005260206000209060040201905060006007600084815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000209050611d343382600001548460000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166128de9092919063ffffffff16565b823373ffffffffffffffffffffffffffffffffffffffff167fbb757047c2b5f3974fe26b7c10f732e7bce710b0952a71082702781e62ae05958360000154604051611d7f919061386c565b60405180910390a36000816000018190555060008160010181905550505050565b60035481565b611dae612964565b73ffffffffffffffffffffffffffffffffffffffff16611dcc6120bc565b73ffffffffffffffffffffffffffffffffffffffff1614611e22576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611e199061378c565b60405180910390fd5b8060048190555050565b60018181548110611e3c57600080fd5b90600052602060002090600202016000915090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060010154905082565b6000600680549050905060005b81811015611eaf57611e9e81611ab9565b80611ea890613b02565b9050611e8d565b5050565b611ebb612964565b73ffffffffffffffffffffffffffffffffffffffff16611ed96120bc565b73ffffffffffffffffffffffffffffffffffffffff1614611f2f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611f269061378c565b60405180910390fd5b8015611f3e57611f3d611e80565b5b611f8a82611f7c60068681548110611f5957611f58613ba9565b5b90600052602060002090600402016001015460085461283690919063ffffffff16565b61288090919063ffffffff16565b6008819055508160068481548110611fa557611fa4613ba9565b5b906000526020600020906004020160010181905550505050565b611fc7612964565b73ffffffffffffffffffffffffffffffffffffffff16611fe56120bc565b73ffffffffffffffffffffffffffffffffffffffff161461203b576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016120329061378c565b60405180910390fd5b6120456000612b53565b565b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60045481565b6000600a60008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600061210e600454612100858561283690919063ffffffff16565b61277190919063ffffffff16565b905092915050565b6007602052816000526040600020602052806000526040600020600091509150508060000154908060010154905082565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600a6020528060005260406000206000915090505481565b60008214156121c9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016121c09061374c565b60405180910390fd5b6000600683815481106121df576121de613ba9565b5b9060005260206000209060040201905060006007600085815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020905061224c84611ab9565b6000816000015411156123465760006122a3826001015461229564e8d4a510006122878760030154876000015461277190919063ffffffff16565b6127ec90919063ffffffff16565b61283690919063ffffffff16565b905060008111156123445761230081600a60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461288090919063ffffffff16565b600a60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505b505b6123973330858560000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1661296c909392919063ffffffff16565b6123ae83826000015461288090919063ffffffff16565b81600001819055506123e864e8d4a510006123da8460030154846000015461277190919063ffffffff16565b6127ec90919063ffffffff16565b8160010181905550833373ffffffffffffffffffffffffffffffffffffffff167f90890809c654f11d6e72a28fa60149770a0d11ec6c92319d6ceb2bb0a4ea1a1585604051612437919061386c565b60405180910390a350505050565b61244d612964565b73ffffffffffffffffffffffffffffffffffffffff1661246b6120bc565b73ffffffffffffffffffffffffffffffffffffffff16146124c1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016124b89061378c565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415612531576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612528906136ac565b60405180910390fd5b61253a81612b53565b50565b6000806006848154811061255457612553613ba9565b5b9060005260206000209060040201905060006007600086815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020905060008260030154905060008360000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016126209190613542565b60206040518083038186803b15801561263857600080fd5b505afa15801561264c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906126709190613139565b9050836002015443118015612686575060008114155b1561272157600061269b8560020154436120e5565b905060006126de6008546126d088600101546126c26003548761277190919063ffffffff16565b61277190919063ffffffff16565b6127ec90919063ffffffff16565b905061271c61270d846126ff64e8d4a510008561277190919063ffffffff16565b6127ec90919063ffffffff16565b8561288090919063ffffffff16565b935050505b612765836001015461275764e8d4a5100061274986886000015461277190919063ffffffff16565b6127ec90919063ffffffff16565b61283690919063ffffffff16565b94505050505092915050565b60008083141561278457600090506127e6565b600082846127929190613969565b90508284826127a19190613938565b146127e1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016127d89061376c565b60405180910390fd5b809150505b92915050565b600061282e83836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f000000000000815250612c17565b905092915050565b600061287883836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250612c7a565b905092915050565b600080828461288f91906138e2565b9050838110156128d4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016128cb9061370c565b60405180910390fd5b8091505092915050565b61295f8363a9059cbb60e01b84846040516024016128fd9291906135bd565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050612cde565b505050565b600033905090565b6129ef846323b872dd60e01b85858560405160240161298d93929190613586565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050612cde565b50505050565b6000811480612a8e575060008373ffffffffffffffffffffffffffffffffffffffff1663dd62ed3e30856040518363ffffffff1660e01b8152600401612a3c92919061355d565b60206040518083038186803b158015612a5457600080fd5b505afa158015612a68573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612a8c9190613139565b145b612acd576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612ac49061382c565b60405180910390fd5b612b4e8363095ea7b360e01b8484604051602401612aec9291906135bd565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050612cde565b505050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b60008083118290612c5e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612c55919061368a565b60405180910390fd5b5060008385612c6d9190613938565b9050809150509392505050565b6000838311158290612cc2576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612cb9919061368a565b60405180910390fd5b5060008385612cd191906139c3565b9050809150509392505050565b6000612d40826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65648152508573ffffffffffffffffffffffffffffffffffffffff16612da59092919063ffffffff16565b9050600081511115612da05780806020019051810190612d609190613045565b612d9f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612d96906137ec565b60405180910390fd5b5b505050565b6060612db48484600085612dbd565b90509392505050565b606082471015612e02576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612df99061372c565b60405180910390fd5b612e0b85612ed1565b612e4a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612e41906137ac565b60405180910390fd5b6000808673ffffffffffffffffffffffffffffffffffffffff168587604051612e73919061352b565b60006040518083038185875af1925050503d8060008114612eb0576040519150601f19603f3d011682016040523d82523d6000602084013e612eb5565b606091505b5091509150612ec5828286612ef4565b92505050949350505050565b6000808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b60608315612f0457829050612f54565b600083511115612f175782518084602001fd5b816040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612f4b919061368a565b60405180910390fd5b9392505050565b600081359050612f6a81613eea565b92915050565b600081359050612f7f81613f01565b92915050565b600081519050612f9481613f01565b92915050565b600081359050612fa981613f18565b92915050565b600081519050612fbe81613f18565b92915050565b600081359050612fd381613f2f565b92915050565b600081359050612fe881613f46565b92915050565b600081359050612ffd81613f5d565b92915050565b60008151905061301281613f5d565b92915050565b60006020828403121561302e5761302d613bd8565b5b600061303c84828501612f5b565b91505092915050565b60006020828403121561305b5761305a613bd8565b5b600061306984828501612f85565b91505092915050565b60006020828403121561308857613087613bd8565b5b600061309684828501612faf565b91505092915050565b600080604083850312156130b6576130b5613bd8565b5b60006130c485828601612fc4565b92505060206130d585828601612fee565b9150509250929050565b6000602082840312156130f5576130f4613bd8565b5b600061310384828501612fd9565b91505092915050565b60006020828403121561312257613121613bd8565b5b600061313084828501612fee565b91505092915050565b60006020828403121561314f5761314e613bd8565b5b600061315d84828501613003565b91505092915050565b6000806040838503121561317d5761317c613bd8565b5b600061318b85828601612fee565b925050602061319c85828601612f5b565b9150509250929050565b6000806000606084860312156131bf576131be613bd8565b5b60006131cd86828701612fee565b93505060206131de86828701612f9a565b92505060406131ef86828701612f70565b9150509250925092565b600080604083850312156132105761320f613bd8565b5b600061321e85828601612fee565b925050602061322f85828601612fee565b9150509250929050565b60008060006060848603121561325257613251613bd8565b5b600061326086828701612fee565b935050602061327186828701612fee565b925050604061328286828701612f70565b9150509250925092565b613295816139f7565b82525050565b60006132a6826138b0565b6132b081856138c6565b93506132c0818560208601613acf565b80840191505092915050565b6132d581613a75565b82525050565b6132e481613a87565b82525050565b6132f381613a99565b82525050565b6000613304826138bb565b61330e81856138d1565b935061331e818560208601613acf565b61332781613bdd565b840191505092915050565b600061333f6026836138d1565b915061334a82613bee565b604082019050919050565b60006133626013836138d1565b915061336d82613c3d565b602082019050919050565b6000613385601b836138d1565b915061339082613c66565b602082019050919050565b60006133a8601b836138d1565b91506133b382613c8f565b602082019050919050565b60006133cb6026836138d1565b91506133d682613cb8565b604082019050919050565b60006133ee6018836138d1565b91506133f982613d07565b602082019050919050565b60006134116021836138d1565b915061341c82613d30565b604082019050919050565b60006134346020836138d1565b915061343f82613d7f565b602082019050919050565b6000613457601d836138d1565b915061346282613da8565b602082019050919050565b600061347a6012836138d1565b915061348582613dd1565b602082019050919050565b600061349d602a836138d1565b91506134a882613dfa565b604082019050919050565b60006134c0600c836138d1565b91506134cb82613e49565b602082019050919050565b60006134e36036836138d1565b91506134ee82613e72565b604082019050919050565b60006135066014836138d1565b915061351182613ec1565b602082019050919050565b61352581613a6b565b82525050565b6000613537828461329b565b915081905092915050565b6000602082019050613557600083018461328c565b92915050565b6000604082019050613572600083018561328c565b61357f602083018461328c565b9392505050565b600060608201905061359b600083018661328c565b6135a8602083018561328c565b6135b5604083018461351c565b949350505050565b60006040820190506135d2600083018561328c565b6135df602083018461351c565b9392505050565b60006020820190506135fb60008301846132cc565b92915050565b600060808201905061361660008301876132cc565b613623602083018661351c565b613630604083018561351c565b61363d606083018461351c565b95945050505050565b600060408201905061365b60008301856132db565b613668602083018461351c565b9392505050565b600060208201905061368460008301846132ea565b92915050565b600060208201905081810360008301526136a481846132f9565b905092915050565b600060208201905081810360008301526136c581613332565b9050919050565b600060208201905081810360008301526136e581613355565b9050919050565b6000602082019050818103600083015261370581613378565b9050919050565b600060208201905081810360008301526137258161339b565b9050919050565b60006020820190508181036000830152613745816133be565b9050919050565b60006020820190508181036000830152613765816133e1565b9050919050565b6000602082019050818103600083015261378581613404565b9050919050565b600060208201905081810360008301526137a581613427565b9050919050565b600060208201905081810360008301526137c58161344a565b9050919050565b600060208201905081810360008301526137e58161346d565b9050919050565b6000602082019050818103600083015261380581613490565b9050919050565b60006020820190508181036000830152613825816134b3565b9050919050565b60006020820190508181036000830152613845816134d6565b9050919050565b60006020820190508181036000830152613865816134f9565b9050919050565b6000602082019050613881600083018461351c565b92915050565b600060408201905061389c600083018561351c565b6138a9602083018461351c565b9392505050565b600081519050919050565b600081519050919050565b600081905092915050565b600082825260208201905092915050565b60006138ed82613a6b565b91506138f883613a6b565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0382111561392d5761392c613b4b565b5b828201905092915050565b600061394382613a6b565b915061394e83613a6b565b92508261395e5761395d613b7a565b5b828204905092915050565b600061397482613a6b565b915061397f83613a6b565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04831182151516156139b8576139b7613b4b565b5b828202905092915050565b60006139ce82613a6b565b91506139d983613a6b565b9250828210156139ec576139eb613b4b565b5b828203905092915050565b6000613a0282613a4b565b9050919050565b60008115159050919050565b6000613a20826139f7565b9050919050565b6000613a32826139f7565b9050919050565b6000613a44826139f7565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b6000613a8082613aab565b9050919050565b6000613a9282613aab565b9050919050565b6000613aa482613aab565b9050919050565b6000613ab682613abd565b9050919050565b6000613ac882613a4b565b9050919050565b60005b83811015613aed578082015181840152602081019050613ad2565b83811115613afc576000848401525b50505050565b6000613b0d82613a6b565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415613b4057613b3f613b4b565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600080fd5b6000601f19601f8301169050919050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b7f506f776572206973206e6f7420656e6f75676800000000000000000000000000600082015250565b7f776974686472617720506f77657220627920756e7374616b696e670000000000600082015250565b7f536166654d6174683a206164646974696f6e206f766572666c6f770000000000600082015250565b7f416464726573733a20696e73756666696369656e742062616c616e636520666f60008201527f722063616c6c0000000000000000000000000000000000000000000000000000602082015250565b7f6465706f73697420506f776572206279207374616b696e670000000000000000600082015250565b7f536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f60008201527f7700000000000000000000000000000000000000000000000000000000000000602082015250565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b7f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000600082015250565b7f77697468647261773a206e6f7420676f6f640000000000000000000000000000600082015250565b7f5361666545524332303a204552433230206f7065726174696f6e20646964206e60008201527f6f74207375636365656400000000000000000000000000000000000000000000602082015250565b7f6d6967726174653a206261640000000000000000000000000000000000000000600082015250565b7f5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f60008201527f20746f206e6f6e2d7a65726f20616c6c6f77616e636500000000000000000000602082015250565b7f6d6967726174653a206e6f206d69677261746f72000000000000000000000000600082015250565b613ef3816139f7565b8114613efe57600080fd5b50565b613f0a81613a09565b8114613f1557600080fd5b50565b613f2181613a15565b8114613f2c57600080fd5b50565b613f3881613a27565b8114613f4357600080fd5b50565b613f4f81613a39565b8114613f5a57600080fd5b50565b613f6681613a6b565b8114613f7157600080fd5b5056fea2646970667358221220db217bfbe705683e7b534bbc98e376d0970ceae3cc096b62152a224709176d9b64736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x1 PUSH1 0x4 SSTORE PUSH1 0x0 PUSH1 0x8 SSTORE CALLVALUE DUP1 ISZERO PUSH3 0x1B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x434D CODESIZE SUB DUP1 PUSH3 0x434D DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x41 SWAP2 SWAP1 PUSH3 0x2AC JUMP JUMPDEST PUSH3 0x61 PUSH3 0x55 PUSH3 0x1B2 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0x1BA PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST DUP3 PUSH1 0x2 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH1 0x3 DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x9 DUP2 SWAP1 SSTORE POP PUSH1 0x6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x3E8 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x9 SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE POP SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x4 MUL ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD SSTORE POP POP PUSH2 0x3E8 PUSH1 0x8 DUP2 SWAP1 SSTORE POP POP POP POP PUSH3 0x393 JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x28F DUP2 PUSH3 0x35F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x2A6 DUP2 PUSH3 0x379 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH3 0x2C8 JUMPI PUSH3 0x2C7 PUSH3 0x35A JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH3 0x2D8 DUP7 DUP3 DUP8 ADD PUSH3 0x27E JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH3 0x2EB DUP7 DUP3 DUP8 ADD PUSH3 0x295 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH3 0x2FE DUP7 DUP3 DUP8 ADD PUSH3 0x295 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH3 0x315 DUP3 PUSH3 0x330 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x329 DUP3 PUSH3 0x308 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x36A DUP2 PUSH3 0x31C JUMP JUMPDEST DUP2 EQ PUSH3 0x376 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH3 0x384 DUP2 PUSH3 0x350 JUMP JUMPDEST DUP2 EQ PUSH3 0x390 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x3FAA DUP1 PUSH3 0x3A3 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1F0 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x5FFE6146 GT PUSH2 0x10F JUMPI DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0xA2 JUMPI DUP1 PUSH4 0xD209DB8C GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xD209DB8C EQ PUSH2 0x55A JUMPI DUP1 PUSH4 0xE2BBB158 EQ PUSH2 0x58A JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x5A6 JUMPI DUP1 PUSH4 0xF3239AB5 EQ PUSH2 0x5C2 JUMPI PUSH2 0x1F0 JUMP JUMPDEST DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x4BD JUMPI DUP1 PUSH4 0x8DBB1E3A EQ PUSH2 0x4DB JUMPI DUP1 PUSH4 0x93F1A40B EQ PUSH2 0x50B JUMPI DUP1 PUSH4 0xCB3CBA55 EQ PUSH2 0x53C JUMPI PUSH2 0x1F0 JUMP JUMPDEST DUP1 PUSH4 0x715018A6 GT PUSH2 0xDE JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x447 JUMPI DUP1 PUSH4 0x7CD07E47 EQ PUSH2 0x451 JUMPI DUP1 PUSH4 0x8AA28550 EQ PUSH2 0x46F JUMPI DUP1 PUSH4 0x8C51793B EQ PUSH2 0x48D JUMPI PUSH2 0x1F0 JUMP JUMPDEST DUP1 PUSH4 0x5FFE6146 EQ PUSH2 0x3D4 JUMPI DUP1 PUSH4 0x61C1B724 EQ PUSH2 0x3F0 JUMPI DUP1 PUSH4 0x630B5BA1 EQ PUSH2 0x421 JUMPI DUP1 PUSH4 0x64482F79 EQ PUSH2 0x42B JUMPI PUSH2 0x1F0 JUMP JUMPDEST DUP1 PUSH4 0x41441D3B GT PUSH2 0x187 JUMPI DUP1 PUSH4 0x4EA2813C GT PUSH2 0x156 JUMPI DUP1 PUSH4 0x4EA2813C EQ PUSH2 0x362 JUMPI DUP1 PUSH4 0x51EB05A6 EQ PUSH2 0x37E JUMPI DUP1 PUSH4 0x5312EA8E EQ PUSH2 0x39A JUMPI DUP1 PUSH4 0x5990C569 EQ PUSH2 0x3B6 JUMPI PUSH2 0x1F0 JUMP JUMPDEST DUP1 PUSH4 0x41441D3B EQ PUSH2 0x2F0 JUMPI DUP1 PUSH4 0x441A3E70 EQ PUSH2 0x30C JUMPI DUP1 PUSH4 0x454B0608 EQ PUSH2 0x328 JUMPI DUP1 PUSH4 0x48CD4CB1 EQ PUSH2 0x344 JUMPI PUSH2 0x1F0 JUMP JUMPDEST DUP1 PUSH4 0x1D5FBD87 GT PUSH2 0x1C3 JUMPI DUP1 PUSH4 0x1D5FBD87 EQ PUSH2 0x280 JUMPI DUP1 PUSH4 0x1EAAA045 EQ PUSH2 0x29C JUMPI DUP1 PUSH4 0x23CF3118 EQ PUSH2 0x2B8 JUMPI DUP1 PUSH4 0x3DF7AFF3 EQ PUSH2 0x2D4 JUMPI PUSH2 0x1F0 JUMP JUMPDEST DUP1 PUSH4 0x81E3EDA EQ PUSH2 0x1F5 JUMPI DUP1 PUSH4 0x1058D281 EQ PUSH2 0x213 JUMPI DUP1 PUSH4 0x1526FE27 EQ PUSH2 0x22F JUMPI DUP1 PUSH4 0x17CAF6F1 EQ PUSH2 0x262 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1FD PUSH2 0x5F2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x20A SWAP2 SWAP1 PUSH2 0x386C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x22D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x228 SWAP2 SWAP1 PUSH2 0x310C JUMP JUMPDEST PUSH2 0x5FF JUMP JUMPDEST STOP JUMPDEST PUSH2 0x249 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x244 SWAP2 SWAP1 PUSH2 0x310C JUMP JUMPDEST PUSH2 0x8BE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x259 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3601 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x26A PUSH2 0x91E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x277 SWAP2 SWAP1 PUSH2 0x386C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x29A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x295 SWAP2 SWAP1 PUSH2 0x31F9 JUMP JUMPDEST PUSH2 0x924 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2B6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2B1 SWAP2 SWAP1 PUSH2 0x31A6 JUMP JUMPDEST PUSH2 0xDB8 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2D2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2CD SWAP2 SWAP1 PUSH2 0x30DF JUMP JUMPDEST PUSH2 0xF45 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2EE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2E9 SWAP2 SWAP1 PUSH2 0x310C JUMP JUMPDEST PUSH2 0x1005 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x30A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x305 SWAP2 SWAP1 PUSH2 0x310C JUMP JUMPDEST PUSH2 0x108B JUMP JUMPDEST STOP JUMPDEST PUSH2 0x326 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x321 SWAP2 SWAP1 PUSH2 0x31F9 JUMP JUMPDEST PUSH2 0x1313 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x342 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x33D SWAP2 SWAP1 PUSH2 0x310C JUMP JUMPDEST PUSH2 0x160A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x34C PUSH2 0x198A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x359 SWAP2 SWAP1 PUSH2 0x386C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x37C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x377 SWAP2 SWAP1 PUSH2 0x309F JUMP JUMPDEST PUSH2 0x1990 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x398 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x393 SWAP2 SWAP1 PUSH2 0x310C JUMP JUMPDEST PUSH2 0x1AB9 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3B4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3AF SWAP2 SWAP1 PUSH2 0x310C JUMP JUMPDEST PUSH2 0x1C67 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3BE PUSH2 0x1DA0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3CB SWAP2 SWAP1 PUSH2 0x386C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3EE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3E9 SWAP2 SWAP1 PUSH2 0x310C JUMP JUMPDEST PUSH2 0x1DA6 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x40A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x405 SWAP2 SWAP1 PUSH2 0x310C JUMP JUMPDEST PUSH2 0x1E2C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x418 SWAP3 SWAP2 SWAP1 PUSH2 0x3646 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x429 PUSH2 0x1E80 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x445 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x440 SWAP2 SWAP1 PUSH2 0x3239 JUMP JUMPDEST PUSH2 0x1EB3 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x44F PUSH2 0x1FBF JUMP JUMPDEST STOP JUMPDEST PUSH2 0x459 PUSH2 0x2047 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x466 SWAP2 SWAP1 PUSH2 0x366F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x477 PUSH2 0x206D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x484 SWAP2 SWAP1 PUSH2 0x386C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4A7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4A2 SWAP2 SWAP1 PUSH2 0x3018 JUMP JUMPDEST PUSH2 0x2073 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4B4 SWAP2 SWAP1 PUSH2 0x386C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4C5 PUSH2 0x20BC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4D2 SWAP2 SWAP1 PUSH2 0x3542 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4F5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4F0 SWAP2 SWAP1 PUSH2 0x31F9 JUMP JUMPDEST PUSH2 0x20E5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x502 SWAP2 SWAP1 PUSH2 0x386C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x525 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x520 SWAP2 SWAP1 PUSH2 0x3166 JUMP JUMPDEST PUSH2 0x2116 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x533 SWAP3 SWAP2 SWAP1 PUSH2 0x3887 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x544 PUSH2 0x2147 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x551 SWAP2 SWAP1 PUSH2 0x35E6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x574 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x56F SWAP2 SWAP1 PUSH2 0x3018 JUMP JUMPDEST PUSH2 0x216D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x581 SWAP2 SWAP1 PUSH2 0x386C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x5A4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x59F SWAP2 SWAP1 PUSH2 0x31F9 JUMP JUMPDEST PUSH2 0x2185 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x5C0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5BB SWAP2 SWAP1 PUSH2 0x3018 JUMP JUMPDEST PUSH2 0x2445 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x5DC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5D7 SWAP2 SWAP1 PUSH2 0x3166 JUMP JUMPDEST PUSH2 0x253D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5E9 SWAP2 SWAP1 PUSH2 0x386C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH1 0x6 DUP1 SLOAD SWAP1 POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 DUP2 SLOAD DUP2 LT PUSH2 0x616 JUMPI PUSH2 0x615 PUSH2 0x3BA9 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x4 MUL ADD SWAP1 POP PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 DUP1 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP DUP3 DUP2 PUSH1 0x0 ADD SLOAD LT ISZERO PUSH2 0x6C1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6B8 SWAP1 PUSH2 0x37CC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x6CB PUSH1 0x0 PUSH2 0x1AB9 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x715 DUP3 PUSH1 0x1 ADD SLOAD PUSH2 0x707 PUSH5 0xE8D4A51000 PUSH2 0x6F9 DUP8 PUSH1 0x3 ADD SLOAD DUP8 PUSH1 0x0 ADD SLOAD PUSH2 0x2771 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x27EC SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x2836 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 GT ISZERO PUSH2 0x7B6 JUMPI PUSH2 0x772 DUP2 PUSH1 0xA PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x2880 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0xA PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP JUMPDEST PUSH1 0x0 DUP5 GT ISZERO PUSH2 0x82E JUMPI PUSH2 0x7D6 DUP5 DUP4 PUSH1 0x0 ADD SLOAD PUSH2 0x2836 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP3 PUSH1 0x0 ADD DUP2 SWAP1 SSTORE POP PUSH2 0x82D CALLER DUP6 DUP6 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x28DE SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST JUMPDEST PUSH2 0x860 PUSH5 0xE8D4A51000 PUSH2 0x852 DUP6 PUSH1 0x3 ADD SLOAD DUP6 PUSH1 0x0 ADD SLOAD PUSH2 0x2771 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x27EC SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP3 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xF279E6A1F5E320CCA91135676D9CB6E44CA8A08C0B88342BCDB1144F6511B568 DUP7 PUSH1 0x40 MLOAD PUSH2 0x8B0 SWAP2 SWAP1 PUSH2 0x386C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH1 0x6 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x8CE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x4 MUL ADD PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 DUP1 PUSH1 0x2 ADD SLOAD SWAP1 DUP1 PUSH1 0x3 ADD SLOAD SWAP1 POP DUP5 JUMP JUMPDEST PUSH1 0x8 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x6 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x93A JUMPI PUSH2 0x939 PUSH2 0x3BA9 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x4 MUL ADD SWAP1 POP PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP PUSH1 0x0 DUP3 PUSH1 0x3 ADD SLOAD SWAP1 POP PUSH1 0x0 DUP4 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA06 SWAP2 SWAP1 PUSH2 0x3542 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xA1E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xA32 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xA56 SWAP2 SWAP1 PUSH2 0x3139 JUMP JUMPDEST SWAP1 POP DUP4 PUSH1 0x2 ADD SLOAD NUMBER GT DUP1 ISZERO PUSH2 0xA6C JUMPI POP PUSH1 0x0 DUP2 EQ ISZERO JUMPDEST ISZERO PUSH2 0xB07 JUMPI PUSH1 0x0 PUSH2 0xA81 DUP6 PUSH1 0x2 ADD SLOAD NUMBER PUSH2 0x20E5 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xAC4 PUSH1 0x8 SLOAD PUSH2 0xAB6 DUP9 PUSH1 0x1 ADD SLOAD PUSH2 0xAA8 PUSH1 0x3 SLOAD DUP8 PUSH2 0x2771 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x2771 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x27EC SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0xB02 PUSH2 0xAF3 DUP5 PUSH2 0xAE5 PUSH5 0xE8D4A51000 DUP6 PUSH2 0x2771 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x27EC SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP6 PUSH2 0x2880 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP4 POP POP POP JUMPDEST PUSH1 0x0 PUSH2 0xB4D DUP5 PUSH1 0x1 ADD SLOAD PUSH2 0xB3F PUSH5 0xE8D4A51000 PUSH2 0xB31 DUP8 DUP10 PUSH1 0x0 ADD SLOAD PUSH2 0x2771 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x27EC SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x2836 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x1 DUP9 DUP2 SLOAD DUP2 LT PUSH2 0xB65 JUMPI PUSH2 0xB64 PUSH2 0x3BA9 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD SWAP1 POP PUSH1 0x0 PUSH2 0xBC9 PUSH1 0xA PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD DUP5 PUSH2 0x2880 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP DUP2 PUSH1 0x1 ADD SLOAD DUP2 GT ISZERO PUSH2 0xC00 JUMPI PUSH1 0x0 DUP9 EQ ISZERO PUSH2 0xBEB JUMPI PUSH2 0xBEA PUSH1 0x0 PUSH2 0x5FF JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP9 EQ PUSH2 0xBFF JUMPI PUSH2 0xBFE DUP9 PUSH1 0x0 PUSH2 0x1313 JUMP JUMPDEST JUMPDEST JUMPDEST PUSH1 0xA PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD DUP3 PUSH1 0x1 ADD SLOAD LT PUSH2 0xC85 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC7C SWAP1 PUSH2 0x36CC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xCDB DUP3 PUSH1 0x1 ADD SLOAD PUSH1 0xA PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x2836 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0xA PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x17E5883C CALLER PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD7B SWAP2 SWAP1 PUSH2 0x3542 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xD95 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xDA9 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0xDC0 PUSH2 0x2964 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xDDE PUSH2 0x20BC JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xE34 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE2B SWAP1 PUSH2 0x378C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 ISZERO PUSH2 0xE43 JUMPI PUSH2 0xE42 PUSH2 0x1E80 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH1 0x9 SLOAD NUMBER GT PUSH2 0xE56 JUMPI PUSH1 0x9 SLOAD PUSH2 0xE58 JUMP JUMPDEST NUMBER JUMPDEST SWAP1 POP PUSH2 0xE6F DUP5 PUSH1 0x8 SLOAD PUSH2 0x2880 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x8 DUP2 SWAP1 SSTORE POP PUSH1 0x6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP7 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE POP SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x4 MUL ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD SSTORE POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0xF4D PUSH2 0x2964 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xF6B PUSH2 0x20BC JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xFC1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFB8 SWAP1 PUSH2 0x378C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x5 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH2 0x100D PUSH2 0x2964 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x102B PUSH2 0x20BC JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1081 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1078 SWAP1 PUSH2 0x378C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x3 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 DUP2 SLOAD DUP2 LT PUSH2 0x10A2 JUMPI PUSH2 0x10A1 PUSH2 0x3BA9 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x4 MUL ADD SWAP1 POP PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 DUP1 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP PUSH2 0x1110 PUSH1 0x0 PUSH2 0x1AB9 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 ADD SLOAD GT ISZERO PUSH2 0x120A JUMPI PUSH1 0x0 PUSH2 0x1167 DUP3 PUSH1 0x1 ADD SLOAD PUSH2 0x1159 PUSH5 0xE8D4A51000 PUSH2 0x114B DUP8 PUSH1 0x3 ADD SLOAD DUP8 PUSH1 0x0 ADD SLOAD PUSH2 0x2771 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x27EC SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x2836 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 GT ISZERO PUSH2 0x1208 JUMPI PUSH2 0x11C4 DUP2 PUSH1 0xA PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x2880 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0xA PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP JUMPDEST POP JUMPDEST PUSH1 0x0 DUP4 GT ISZERO PUSH2 0x1284 JUMPI PUSH2 0x1264 CALLER ADDRESS DUP6 DUP6 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x296C SWAP1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x127B DUP4 DUP3 PUSH1 0x0 ADD SLOAD PUSH2 0x2880 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP2 PUSH1 0x0 ADD DUP2 SWAP1 SSTORE POP JUMPDEST PUSH2 0x12B6 PUSH5 0xE8D4A51000 PUSH2 0x12A8 DUP5 PUSH1 0x3 ADD SLOAD DUP5 PUSH1 0x0 ADD SLOAD PUSH2 0x2771 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x27EC SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP2 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x90890809C654F11D6E72A28FA60149770A0D11EC6C92319D6CEB2BB0A4EA1A15 DUP6 PUSH1 0x40 MLOAD PUSH2 0x1306 SWAP2 SWAP1 PUSH2 0x386C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 EQ ISZERO PUSH2 0x1357 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x134E SWAP1 PUSH2 0x36EC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x6 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x136D JUMPI PUSH2 0x136C PUSH2 0x3BA9 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x4 MUL ADD SWAP1 POP PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP DUP3 DUP2 PUSH1 0x0 ADD SLOAD LT ISZERO PUSH2 0x1418 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x140F SWAP1 PUSH2 0x37CC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1421 DUP5 PUSH2 0x1AB9 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x146B DUP3 PUSH1 0x1 ADD SLOAD PUSH2 0x145D PUSH5 0xE8D4A51000 PUSH2 0x144F DUP8 PUSH1 0x3 ADD SLOAD DUP8 PUSH1 0x0 ADD SLOAD PUSH2 0x2771 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x27EC SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x2836 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 GT ISZERO PUSH2 0x150C JUMPI PUSH2 0x14C8 DUP2 PUSH1 0xA PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x2880 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0xA PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP JUMPDEST PUSH2 0x1523 DUP5 DUP4 PUSH1 0x0 ADD SLOAD PUSH2 0x2836 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP3 PUSH1 0x0 ADD DUP2 SWAP1 SSTORE POP PUSH2 0x155D PUSH5 0xE8D4A51000 PUSH2 0x154F DUP6 PUSH1 0x3 ADD SLOAD DUP6 PUSH1 0x0 ADD SLOAD PUSH2 0x2771 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x27EC SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP3 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP PUSH2 0x15B4 CALLER DUP6 DUP6 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x28DE SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP5 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xF279E6A1F5E320CCA91135676D9CB6E44CA8A08C0B88342BCDB1144F6511B568 DUP7 PUSH1 0x40 MLOAD PUSH2 0x15FB SWAP2 SWAP1 PUSH2 0x386C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x169C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1693 SWAP1 PUSH2 0x384C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x6 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x16B2 JUMPI PUSH2 0x16B1 PUSH2 0x3BA9 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x4 MUL ADD SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH1 0x0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1726 SWAP2 SWAP1 PUSH2 0x3542 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x173E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1752 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1776 SWAP2 SWAP1 PUSH2 0x3139 JUMP JUMPDEST SWAP1 POP PUSH2 0x17C5 PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x29F5 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xCE5494BB DUP5 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1822 SWAP2 SWAP1 PUSH2 0x35E6 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x183C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1850 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1874 SWAP2 SWAP1 PUSH2 0x3072 JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x18AF SWAP2 SWAP1 PUSH2 0x3542 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x18C7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x18DB JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x18FF SWAP2 SWAP1 PUSH2 0x3139 JUMP JUMPDEST DUP3 EQ PUSH2 0x1940 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1937 SWAP1 PUSH2 0x380C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 DUP5 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x9 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x1998 PUSH2 0x2964 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x19B6 PUSH2 0x20BC JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1A0C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1A03 SWAP1 PUSH2 0x378C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE POP SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x6 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x1ACF JUMPI PUSH2 0x1ACE PUSH2 0x3BA9 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x4 MUL ADD SWAP1 POP DUP1 PUSH1 0x2 ADD SLOAD NUMBER GT PUSH2 0x1AF0 JUMPI POP PUSH2 0x1C64 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1B4F SWAP2 SWAP1 PUSH2 0x3542 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1B67 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1B7B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1B9F SWAP2 SWAP1 PUSH2 0x3139 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 GT PUSH2 0x1BB9 JUMPI NUMBER DUP3 PUSH1 0x2 ADD DUP2 SWAP1 SSTORE POP POP POP PUSH2 0x1C64 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1BC9 DUP4 PUSH1 0x2 ADD SLOAD NUMBER PUSH2 0x20E5 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1C0C PUSH1 0x8 SLOAD PUSH2 0x1BFE DUP7 PUSH1 0x1 ADD SLOAD PUSH2 0x1BF0 PUSH1 0x3 SLOAD DUP8 PUSH2 0x2771 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x2771 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x27EC SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0x1C4E PUSH2 0x1C3B DUP5 PUSH2 0x1C2D PUSH5 0xE8D4A51000 DUP6 PUSH2 0x2771 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x27EC SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP6 PUSH1 0x3 ADD SLOAD PUSH2 0x2880 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP5 PUSH1 0x3 ADD DUP2 SWAP1 SSTORE POP NUMBER DUP5 PUSH1 0x2 ADD DUP2 SWAP1 SSTORE POP POP POP POP POP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x6 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x1C7D JUMPI PUSH2 0x1C7C PUSH2 0x3BA9 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x4 MUL ADD SWAP1 POP PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP PUSH2 0x1D34 CALLER DUP3 PUSH1 0x0 ADD SLOAD DUP5 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x28DE SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP3 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xBB757047C2B5F3974FE26B7C10F732E7BCE710B0952A71082702781E62AE0595 DUP4 PUSH1 0x0 ADD SLOAD PUSH1 0x40 MLOAD PUSH2 0x1D7F SWAP2 SWAP1 PUSH2 0x386C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x0 DUP2 PUSH1 0x0 ADD DUP2 SWAP1 SSTORE POP PUSH1 0x0 DUP2 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x1DAE PUSH2 0x2964 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1DCC PUSH2 0x20BC JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1E22 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1E19 SWAP1 PUSH2 0x378C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x4 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x1E3C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 POP DUP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x6 DUP1 SLOAD SWAP1 POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1EAF JUMPI PUSH2 0x1E9E DUP2 PUSH2 0x1AB9 JUMP JUMPDEST DUP1 PUSH2 0x1EA8 SWAP1 PUSH2 0x3B02 JUMP JUMPDEST SWAP1 POP PUSH2 0x1E8D JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x1EBB PUSH2 0x2964 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1ED9 PUSH2 0x20BC JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1F2F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1F26 SWAP1 PUSH2 0x378C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 ISZERO PUSH2 0x1F3E JUMPI PUSH2 0x1F3D PUSH2 0x1E80 JUMP JUMPDEST JUMPDEST PUSH2 0x1F8A DUP3 PUSH2 0x1F7C PUSH1 0x6 DUP7 DUP2 SLOAD DUP2 LT PUSH2 0x1F59 JUMPI PUSH2 0x1F58 PUSH2 0x3BA9 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x4 MUL ADD PUSH1 0x1 ADD SLOAD PUSH1 0x8 SLOAD PUSH2 0x2836 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x2880 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x8 DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x6 DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x1FA5 JUMPI PUSH2 0x1FA4 PUSH2 0x3BA9 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x4 MUL ADD PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP POP POP POP JUMP JUMPDEST PUSH2 0x1FC7 PUSH2 0x2964 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1FE5 PUSH2 0x20BC JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x203B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2032 SWAP1 PUSH2 0x378C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x2045 PUSH1 0x0 PUSH2 0x2B53 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x210E PUSH1 0x4 SLOAD PUSH2 0x2100 DUP6 DUP6 PUSH2 0x2836 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x2771 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x7 PUSH1 0x20 MSTORE DUP2 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP2 POP POP DUP1 PUSH1 0x0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 POP DUP3 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0xA PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP3 EQ ISZERO PUSH2 0x21C9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x21C0 SWAP1 PUSH2 0x374C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x6 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x21DF JUMPI PUSH2 0x21DE PUSH2 0x3BA9 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x4 MUL ADD SWAP1 POP PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP PUSH2 0x224C DUP5 PUSH2 0x1AB9 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 ADD SLOAD GT ISZERO PUSH2 0x2346 JUMPI PUSH1 0x0 PUSH2 0x22A3 DUP3 PUSH1 0x1 ADD SLOAD PUSH2 0x2295 PUSH5 0xE8D4A51000 PUSH2 0x2287 DUP8 PUSH1 0x3 ADD SLOAD DUP8 PUSH1 0x0 ADD SLOAD PUSH2 0x2771 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x27EC SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x2836 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 GT ISZERO PUSH2 0x2344 JUMPI PUSH2 0x2300 DUP2 PUSH1 0xA PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x2880 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0xA PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP JUMPDEST POP JUMPDEST PUSH2 0x2397 CALLER ADDRESS DUP6 DUP6 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x296C SWAP1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x23AE DUP4 DUP3 PUSH1 0x0 ADD SLOAD PUSH2 0x2880 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP2 PUSH1 0x0 ADD DUP2 SWAP1 SSTORE POP PUSH2 0x23E8 PUSH5 0xE8D4A51000 PUSH2 0x23DA DUP5 PUSH1 0x3 ADD SLOAD DUP5 PUSH1 0x0 ADD SLOAD PUSH2 0x2771 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x27EC SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP2 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP DUP4 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x90890809C654F11D6E72A28FA60149770A0D11EC6C92319D6CEB2BB0A4EA1A15 DUP6 PUSH1 0x40 MLOAD PUSH2 0x2437 SWAP2 SWAP1 PUSH2 0x386C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH2 0x244D PUSH2 0x2964 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x246B PUSH2 0x20BC JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x24C1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x24B8 SWAP1 PUSH2 0x378C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x2531 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2528 SWAP1 PUSH2 0x36AC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x253A DUP2 PUSH2 0x2B53 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x6 DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x2554 JUMPI PUSH2 0x2553 PUSH2 0x3BA9 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x4 MUL ADD SWAP1 POP PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP PUSH1 0x0 DUP3 PUSH1 0x3 ADD SLOAD SWAP1 POP PUSH1 0x0 DUP4 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2620 SWAP2 SWAP1 PUSH2 0x3542 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2638 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x264C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2670 SWAP2 SWAP1 PUSH2 0x3139 JUMP JUMPDEST SWAP1 POP DUP4 PUSH1 0x2 ADD SLOAD NUMBER GT DUP1 ISZERO PUSH2 0x2686 JUMPI POP PUSH1 0x0 DUP2 EQ ISZERO JUMPDEST ISZERO PUSH2 0x2721 JUMPI PUSH1 0x0 PUSH2 0x269B DUP6 PUSH1 0x2 ADD SLOAD NUMBER PUSH2 0x20E5 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x26DE PUSH1 0x8 SLOAD PUSH2 0x26D0 DUP9 PUSH1 0x1 ADD SLOAD PUSH2 0x26C2 PUSH1 0x3 SLOAD DUP8 PUSH2 0x2771 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x2771 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x27EC SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0x271C PUSH2 0x270D DUP5 PUSH2 0x26FF PUSH5 0xE8D4A51000 DUP6 PUSH2 0x2771 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x27EC SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP6 PUSH2 0x2880 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP4 POP POP POP JUMPDEST PUSH2 0x2765 DUP4 PUSH1 0x1 ADD SLOAD PUSH2 0x2757 PUSH5 0xE8D4A51000 PUSH2 0x2749 DUP7 DUP9 PUSH1 0x0 ADD SLOAD PUSH2 0x2771 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x27EC SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x2836 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP5 POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 EQ ISZERO PUSH2 0x2784 JUMPI PUSH1 0x0 SWAP1 POP PUSH2 0x27E6 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP5 PUSH2 0x2792 SWAP2 SWAP1 PUSH2 0x3969 JUMP JUMPDEST SWAP1 POP DUP3 DUP5 DUP3 PUSH2 0x27A1 SWAP2 SWAP1 PUSH2 0x3938 JUMP JUMPDEST EQ PUSH2 0x27E1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x27D8 SWAP1 PUSH2 0x376C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x282E DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1A DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x536166654D6174683A206469766973696F6E206279207A65726F000000000000 DUP2 MSTORE POP PUSH2 0x2C17 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2878 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1E DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x536166654D6174683A207375627472616374696F6E206F766572666C6F770000 DUP2 MSTORE POP PUSH2 0x2C7A JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 DUP5 PUSH2 0x288F SWAP2 SWAP1 PUSH2 0x38E2 JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x28D4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x28CB SWAP1 PUSH2 0x370C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x295F DUP4 PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP5 DUP5 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x28FD SWAP3 SWAP2 SWAP1 PUSH2 0x35BD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x2CDE JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x29EF DUP5 PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP6 DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x298D SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3586 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x2CDE JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 EQ DUP1 PUSH2 0x2A8E JUMPI POP PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xDD62ED3E ADDRESS DUP6 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2A3C SWAP3 SWAP2 SWAP1 PUSH2 0x355D JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2A54 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2A68 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2A8C SWAP2 SWAP1 PUSH2 0x3139 JUMP JUMPDEST EQ JUMPDEST PUSH2 0x2ACD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2AC4 SWAP1 PUSH2 0x382C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x2B4E DUP4 PUSH4 0x95EA7B3 PUSH1 0xE0 SHL DUP5 DUP5 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x2AEC SWAP3 SWAP2 SWAP1 PUSH2 0x35BD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x2CDE JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 GT DUP3 SWAP1 PUSH2 0x2C5E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2C55 SWAP2 SWAP1 PUSH2 0x368A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x0 DUP4 DUP6 PUSH2 0x2C6D SWAP2 SWAP1 PUSH2 0x3938 JUMP JUMPDEST SWAP1 POP DUP1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP4 DUP4 GT ISZERO DUP3 SWAP1 PUSH2 0x2CC2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2CB9 SWAP2 SWAP1 PUSH2 0x368A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x0 DUP4 DUP6 PUSH2 0x2CD1 SWAP2 SWAP1 PUSH2 0x39C3 JUMP JUMPDEST SWAP1 POP DUP1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2D40 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564 DUP2 MSTORE POP DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x2DA5 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD GT ISZERO PUSH2 0x2DA0 JUMPI DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x2D60 SWAP2 SWAP1 PUSH2 0x3045 JUMP JUMPDEST PUSH2 0x2D9F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2D96 SWAP1 PUSH2 0x37EC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x2DB4 DUP5 DUP5 PUSH1 0x0 DUP6 PUSH2 0x2DBD JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 SELFBALANCE LT ISZERO PUSH2 0x2E02 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2DF9 SWAP1 PUSH2 0x372C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x2E0B DUP6 PUSH2 0x2ED1 JUMP JUMPDEST PUSH2 0x2E4A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2E41 SWAP1 PUSH2 0x37AC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 DUP8 PUSH1 0x40 MLOAD PUSH2 0x2E73 SWAP2 SWAP1 PUSH2 0x352B JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x2EB0 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x2EB5 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x2EC5 DUP3 DUP3 DUP7 PUSH2 0x2EF4 JUMP JUMPDEST SWAP3 POP POP POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0x2F04 JUMPI DUP3 SWAP1 POP PUSH2 0x2F54 JUMP JUMPDEST PUSH1 0x0 DUP4 MLOAD GT ISZERO PUSH2 0x2F17 JUMPI DUP3 MLOAD DUP1 DUP5 PUSH1 0x20 ADD REVERT JUMPDEST DUP2 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2F4B SWAP2 SWAP1 PUSH2 0x368A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2F6A DUP2 PUSH2 0x3EEA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2F7F DUP2 PUSH2 0x3F01 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x2F94 DUP2 PUSH2 0x3F01 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2FA9 DUP2 PUSH2 0x3F18 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x2FBE DUP2 PUSH2 0x3F18 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2FD3 DUP2 PUSH2 0x3F2F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2FE8 DUP2 PUSH2 0x3F46 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2FFD DUP2 PUSH2 0x3F5D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x3012 DUP2 PUSH2 0x3F5D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x302E JUMPI PUSH2 0x302D PUSH2 0x3BD8 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x303C DUP5 DUP3 DUP6 ADD PUSH2 0x2F5B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x305B JUMPI PUSH2 0x305A PUSH2 0x3BD8 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3069 DUP5 DUP3 DUP6 ADD PUSH2 0x2F85 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3088 JUMPI PUSH2 0x3087 PUSH2 0x3BD8 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3096 DUP5 DUP3 DUP6 ADD PUSH2 0x2FAF JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x30B6 JUMPI PUSH2 0x30B5 PUSH2 0x3BD8 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x30C4 DUP6 DUP3 DUP7 ADD PUSH2 0x2FC4 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x30D5 DUP6 DUP3 DUP7 ADD PUSH2 0x2FEE JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x30F5 JUMPI PUSH2 0x30F4 PUSH2 0x3BD8 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3103 DUP5 DUP3 DUP6 ADD PUSH2 0x2FD9 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3122 JUMPI PUSH2 0x3121 PUSH2 0x3BD8 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3130 DUP5 DUP3 DUP6 ADD PUSH2 0x2FEE JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x314F JUMPI PUSH2 0x314E PUSH2 0x3BD8 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x315D DUP5 DUP3 DUP6 ADD PUSH2 0x3003 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x317D JUMPI PUSH2 0x317C PUSH2 0x3BD8 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x318B DUP6 DUP3 DUP7 ADD PUSH2 0x2FEE JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x319C DUP6 DUP3 DUP7 ADD PUSH2 0x2F5B JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x31BF JUMPI PUSH2 0x31BE PUSH2 0x3BD8 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x31CD DUP7 DUP3 DUP8 ADD PUSH2 0x2FEE JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x31DE DUP7 DUP3 DUP8 ADD PUSH2 0x2F9A JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x31EF DUP7 DUP3 DUP8 ADD PUSH2 0x2F70 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x3210 JUMPI PUSH2 0x320F PUSH2 0x3BD8 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x321E DUP6 DUP3 DUP7 ADD PUSH2 0x2FEE JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x322F DUP6 DUP3 DUP7 ADD PUSH2 0x2FEE JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x3252 JUMPI PUSH2 0x3251 PUSH2 0x3BD8 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3260 DUP7 DUP3 DUP8 ADD PUSH2 0x2FEE JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x3271 DUP7 DUP3 DUP8 ADD PUSH2 0x2FEE JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x3282 DUP7 DUP3 DUP8 ADD PUSH2 0x2F70 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH2 0x3295 DUP2 PUSH2 0x39F7 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x32A6 DUP3 PUSH2 0x38B0 JUMP JUMPDEST PUSH2 0x32B0 DUP2 DUP6 PUSH2 0x38C6 JUMP JUMPDEST SWAP4 POP PUSH2 0x32C0 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x3ACF JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x32D5 DUP2 PUSH2 0x3A75 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x32E4 DUP2 PUSH2 0x3A87 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x32F3 DUP2 PUSH2 0x3A99 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3304 DUP3 PUSH2 0x38BB JUMP JUMPDEST PUSH2 0x330E DUP2 DUP6 PUSH2 0x38D1 JUMP JUMPDEST SWAP4 POP PUSH2 0x331E DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x3ACF JUMP JUMPDEST PUSH2 0x3327 DUP2 PUSH2 0x3BDD JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x333F PUSH1 0x26 DUP4 PUSH2 0x38D1 JUMP JUMPDEST SWAP2 POP PUSH2 0x334A DUP3 PUSH2 0x3BEE JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3362 PUSH1 0x13 DUP4 PUSH2 0x38D1 JUMP JUMPDEST SWAP2 POP PUSH2 0x336D DUP3 PUSH2 0x3C3D JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3385 PUSH1 0x1B DUP4 PUSH2 0x38D1 JUMP JUMPDEST SWAP2 POP PUSH2 0x3390 DUP3 PUSH2 0x3C66 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x33A8 PUSH1 0x1B DUP4 PUSH2 0x38D1 JUMP JUMPDEST SWAP2 POP PUSH2 0x33B3 DUP3 PUSH2 0x3C8F JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x33CB PUSH1 0x26 DUP4 PUSH2 0x38D1 JUMP JUMPDEST SWAP2 POP PUSH2 0x33D6 DUP3 PUSH2 0x3CB8 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x33EE PUSH1 0x18 DUP4 PUSH2 0x38D1 JUMP JUMPDEST SWAP2 POP PUSH2 0x33F9 DUP3 PUSH2 0x3D07 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3411 PUSH1 0x21 DUP4 PUSH2 0x38D1 JUMP JUMPDEST SWAP2 POP PUSH2 0x341C DUP3 PUSH2 0x3D30 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3434 PUSH1 0x20 DUP4 PUSH2 0x38D1 JUMP JUMPDEST SWAP2 POP PUSH2 0x343F DUP3 PUSH2 0x3D7F JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3457 PUSH1 0x1D DUP4 PUSH2 0x38D1 JUMP JUMPDEST SWAP2 POP PUSH2 0x3462 DUP3 PUSH2 0x3DA8 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x347A PUSH1 0x12 DUP4 PUSH2 0x38D1 JUMP JUMPDEST SWAP2 POP PUSH2 0x3485 DUP3 PUSH2 0x3DD1 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x349D PUSH1 0x2A DUP4 PUSH2 0x38D1 JUMP JUMPDEST SWAP2 POP PUSH2 0x34A8 DUP3 PUSH2 0x3DFA JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x34C0 PUSH1 0xC DUP4 PUSH2 0x38D1 JUMP JUMPDEST SWAP2 POP PUSH2 0x34CB DUP3 PUSH2 0x3E49 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x34E3 PUSH1 0x36 DUP4 PUSH2 0x38D1 JUMP JUMPDEST SWAP2 POP PUSH2 0x34EE DUP3 PUSH2 0x3E72 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3506 PUSH1 0x14 DUP4 PUSH2 0x38D1 JUMP JUMPDEST SWAP2 POP PUSH2 0x3511 DUP3 PUSH2 0x3EC1 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3525 DUP2 PUSH2 0x3A6B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3537 DUP3 DUP5 PUSH2 0x329B JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x3557 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x328C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x3572 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x328C JUMP JUMPDEST PUSH2 0x357F PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x328C JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x359B PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x328C JUMP JUMPDEST PUSH2 0x35A8 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x328C JUMP JUMPDEST PUSH2 0x35B5 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x351C JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x35D2 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x328C JUMP JUMPDEST PUSH2 0x35DF PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x351C JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x35FB PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x32CC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x3616 PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x32CC JUMP JUMPDEST PUSH2 0x3623 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x351C JUMP JUMPDEST PUSH2 0x3630 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x351C JUMP JUMPDEST PUSH2 0x363D PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x351C JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x365B PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x32DB JUMP JUMPDEST PUSH2 0x3668 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x351C JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x3684 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x32EA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x36A4 DUP2 DUP5 PUSH2 0x32F9 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x36C5 DUP2 PUSH2 0x3332 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x36E5 DUP2 PUSH2 0x3355 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3705 DUP2 PUSH2 0x3378 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3725 DUP2 PUSH2 0x339B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3745 DUP2 PUSH2 0x33BE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3765 DUP2 PUSH2 0x33E1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3785 DUP2 PUSH2 0x3404 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x37A5 DUP2 PUSH2 0x3427 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x37C5 DUP2 PUSH2 0x344A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x37E5 DUP2 PUSH2 0x346D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3805 DUP2 PUSH2 0x3490 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3825 DUP2 PUSH2 0x34B3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3845 DUP2 PUSH2 0x34D6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3865 DUP2 PUSH2 0x34F9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x3881 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x351C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x389C PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x351C JUMP JUMPDEST PUSH2 0x38A9 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x351C JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x38ED DUP3 PUSH2 0x3A6B JUMP JUMPDEST SWAP2 POP PUSH2 0x38F8 DUP4 PUSH2 0x3A6B JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x392D JUMPI PUSH2 0x392C PUSH2 0x3B4B JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3943 DUP3 PUSH2 0x3A6B JUMP JUMPDEST SWAP2 POP PUSH2 0x394E DUP4 PUSH2 0x3A6B JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x395E JUMPI PUSH2 0x395D PUSH2 0x3B7A JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3974 DUP3 PUSH2 0x3A6B JUMP JUMPDEST SWAP2 POP PUSH2 0x397F DUP4 PUSH2 0x3A6B JUMP JUMPDEST SWAP3 POP DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x39B8 JUMPI PUSH2 0x39B7 PUSH2 0x3B4B JUMP JUMPDEST JUMPDEST DUP3 DUP3 MUL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x39CE DUP3 PUSH2 0x3A6B JUMP JUMPDEST SWAP2 POP PUSH2 0x39D9 DUP4 PUSH2 0x3A6B JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0x39EC JUMPI PUSH2 0x39EB PUSH2 0x3B4B JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3A02 DUP3 PUSH2 0x3A4B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3A20 DUP3 PUSH2 0x39F7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3A32 DUP3 PUSH2 0x39F7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3A44 DUP3 PUSH2 0x39F7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3A80 DUP3 PUSH2 0x3AAB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3A92 DUP3 PUSH2 0x3AAB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3AA4 DUP3 PUSH2 0x3AAB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3AB6 DUP3 PUSH2 0x3ABD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3AC8 DUP3 PUSH2 0x3A4B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x3AED JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x3AD2 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x3AFC JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3B0D DUP3 PUSH2 0x3A6B JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 EQ ISZERO PUSH2 0x3B40 JUMPI PUSH2 0x3B3F PUSH2 0x3B4B JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x506F776572206973206E6F7420656E6F75676800000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x776974686472617720506F77657220627920756E7374616B696E670000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x416464726573733A20696E73756666696369656E742062616C616E636520666F PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x722063616C6C0000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x6465706F73697420506F776572206279207374616B696E670000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x536166654D6174683A206D756C7469706C69636174696F6E206F766572666C6F PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7700000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x77697468647261773A206E6F7420676F6F640000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x5361666545524332303A204552433230206F7065726174696F6E20646964206E PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6F74207375636365656400000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x6D6967726174653A206261640000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x5361666545524332303A20617070726F76652066726F6D206E6F6E2D7A65726F PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x20746F206E6F6E2D7A65726F20616C6C6F77616E636500000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x6D6967726174653A206E6F206D69677261746F72000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH2 0x3EF3 DUP2 PUSH2 0x39F7 JUMP JUMPDEST DUP2 EQ PUSH2 0x3EFE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x3F0A DUP2 PUSH2 0x3A09 JUMP JUMPDEST DUP2 EQ PUSH2 0x3F15 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x3F21 DUP2 PUSH2 0x3A15 JUMP JUMPDEST DUP2 EQ PUSH2 0x3F2C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x3F38 DUP2 PUSH2 0x3A27 JUMP JUMPDEST DUP2 EQ PUSH2 0x3F43 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x3F4F DUP2 PUSH2 0x3A39 JUMP JUMPDEST DUP2 EQ PUSH2 0x3F5A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x3F66 DUP2 PUSH2 0x3A6B JUMP JUMPDEST DUP2 EQ PUSH2 0x3F71 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xDB 0x21 PUSH28 0xFBE705683E7B534BBC98E376D0970CEAE3CC096B62152A224709176D SWAP12 PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "22111:12768:0:-:0;;;23774:1;23740:35;;24217:1;24184:34;;24650:462;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;19984:32;20003:12;:10;;;:12;;:::i;:::-;19984:18;;;:32;;:::i;:::-;24771:4;24765:3;;:10;;;;;;;;;;;;;;;;;;24802:14;24786:13;:30;;;;24840:11;24827:10;:24;;;;24897:8;24911:155;;;;;;;;24944:3;;;;;;;;;;;24911:155;;;;;;24974:4;24911:155;;;;25010:10;;24911:155;;;;25053:1;24911:155;;;24897:170;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;25098:4;25080:15;:22;;;;24650:462;;;22111:12768;;19479:98;19532:7;19559:10;19552:17;;19479:98;:::o;21375:191::-;21449:16;21468:6;;;;;;;;;;;21449:25;;21494:8;21485:6;;:17;;;;;;;;;;;;;;;;;;21549:8;21518:40;;21539:8;21518:40;;;;;;;;;;;;21438:128;21375:191;:::o;7:171:1:-;78:5;109:6;103:13;94:22;;125:47;166:5;125:47;:::i;:::-;7:171;;;;:::o;184:143::-;241:5;272:6;266:13;257:22;;288:33;315:5;288:33;:::i;:::-;184:143;;;;:::o;333:691::-;435:6;443;451;500:2;488:9;479:7;475:23;471:32;468:119;;;506:79;;:::i;:::-;468:119;626:1;651:78;721:7;712:6;701:9;697:22;651:78;:::i;:::-;641:88;;597:142;778:2;804:64;860:7;851:6;840:9;836:22;804:64;:::i;:::-;794:74;;749:129;917:2;943:64;999:7;990:6;979:9;975:22;943:64;:::i;:::-;933:74;;888:129;333:691;;;;;:::o;1111:96::-;1148:7;1177:24;1195:5;1177:24;:::i;:::-;1166:35;;1111:96;;;:::o;1213:110::-;1264:7;1293:24;1311:5;1293:24;:::i;:::-;1282:35;;1213:110;;;:::o;1329:126::-;1366:7;1406:42;1399:5;1395:54;1384:65;;1329:126;;;:::o;1461:77::-;1498:7;1527:5;1516:16;;1461:77;;;:::o;1667:117::-;1776:1;1773;1766:12;1790:150;1877:38;1909:5;1877:38;:::i;:::-;1870:5;1867:49;1857:77;;1930:1;1927;1920:12;1857:77;1790:150;:::o;1946:122::-;2019:24;2037:5;2019:24;:::i;:::-;2012:5;2009:35;1999:63;;2058:1;2055;2048:12;1999:63;1946:122;:::o;22111:12768:0:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@BONUS_MULTIPLIER_975": {
									"entryPoint": 8301,
									"id": 975,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@DDT_970": {
									"entryPoint": 8519,
									"id": 970,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@PowerPerBlock_972": {
									"entryPoint": 7584,
									"id": 972,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_callOptionalReturn_796": {
									"entryPoint": 11486,
									"id": 796,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_msgSender_806": {
									"entryPoint": 10596,
									"id": 806,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_916": {
									"entryPoint": 11091,
									"id": 916,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@addNFT_1092": {
									"entryPoint": 6544,
									"id": 1092,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@add_1340": {
									"entryPoint": 3512,
									"id": 1340,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@add_27": {
									"entryPoint": 10368,
									"id": 27,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@claimNFTReward_1271": {
									"entryPoint": 2340,
									"id": 1271,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@deposit_1830": {
									"entryPoint": 8581,
									"id": 1830,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@div_124": {
									"entryPoint": 10220,
									"id": 124,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@div_152": {
									"entryPoint": 11287,
									"id": 152,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@emergencyWithdraw_2256": {
									"entryPoint": 7271,
									"id": 2256,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@enterStaking_2081": {
									"entryPoint": 4235,
									"id": 2081,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@functionCallWithValue_442": {
									"entryPoint": 11709,
									"id": 442,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"@functionCall_372": {
									"entryPoint": 11685,
									"id": 372,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@getMultiplier_1488": {
									"entryPoint": 8421,
									"id": 1488,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@getPowerBalance_1072": {
									"entryPoint": 8307,
									"id": 1072,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@isContract_301": {
									"entryPoint": 11985,
									"id": 301,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@leaveStaking_2199": {
									"entryPoint": 1535,
									"id": 2199,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@massUpdatePools_1615": {
									"entryPoint": 7808,
									"id": 1615,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@migrate_1470": {
									"entryPoint": 5642,
									"id": 1470,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@migrator_978": {
									"entryPoint": 8263,
									"id": 978,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@mul_107": {
									"entryPoint": 10097,
									"id": 107,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@nftsInfo_967": {
									"entryPoint": 7724,
									"id": 967,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@owner_845": {
									"entryPoint": 8380,
									"id": 845,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@pendingPower_1590": {
									"entryPoint": 9533,
									"id": 1590,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@poolInfo_982": {
									"entryPoint": 2238,
									"id": 982,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@poolLength_1292": {
									"entryPoint": 1522,
									"id": 1292,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@powerBalance_998": {
									"entryPoint": 8557,
									"id": 998,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@renounceOwnership_873": {
									"entryPoint": 8127,
									"id": 873,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@safeApprove_674": {
									"entryPoint": 10741,
									"id": 674,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@safeTransferFrom_630": {
									"entryPoint": 10604,
									"id": 630,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@safeTransfer_604": {
									"entryPoint": 10462,
									"id": 604,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@setMigrator_1391": {
									"entryPoint": 3909,
									"id": 1391,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@set_1378": {
									"entryPoint": 7859,
									"id": 1378,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@startBlock_994": {
									"entryPoint": 6538,
									"id": 994,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@sub_44": {
									"entryPoint": 10294,
									"id": 44,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@sub_72": {
									"entryPoint": 11386,
									"id": 72,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@totalAllocPoint_992": {
									"entryPoint": 2334,
									"id": 992,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@transferOwnership_896": {
									"entryPoint": 9285,
									"id": 896,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@updateMultiplier_1283": {
									"entryPoint": 7590,
									"id": 1283,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@updatePool_1706": {
									"entryPoint": 6841,
									"id": 1706,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@updatePowerPerBlock_2268": {
									"entryPoint": 4101,
									"id": 2268,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@userInfo_989": {
									"entryPoint": 8470,
									"id": 989,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@verifyCallResult_577": {
									"entryPoint": 12020,
									"id": 577,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@withdraw_1952": {
									"entryPoint": 4883,
									"id": 1952,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 12123,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool": {
									"entryPoint": 12144,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool_fromMemory": {
									"entryPoint": 12165,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_contract$_IERC20_$286": {
									"entryPoint": 12186,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_contract$_IERC20_$286_fromMemory": {
									"entryPoint": 12207,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_contract$_IERC721_$933": {
									"entryPoint": 12228,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_contract$_IMigratorChef_$927": {
									"entryPoint": 12249,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 12270,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 12291,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 12312,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 12357,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_contract$_IERC20_$286_fromMemory": {
									"entryPoint": 12402,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_contract$_IERC721_$933t_uint256": {
									"entryPoint": 12447,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_contract$_IMigratorChef_$927": {
									"entryPoint": 12511,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 12556,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256_fromMemory": {
									"entryPoint": 12601,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256t_address": {
									"entryPoint": 12646,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_uint256t_contract$_IERC20_$286t_bool": {
									"entryPoint": 12710,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_uint256t_uint256": {
									"entryPoint": 12793,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_uint256t_uint256t_bool": {
									"entryPoint": 12857,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 12940,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 12955,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_contract$_IERC20_$286_to_t_address_fromStack": {
									"entryPoint": 13004,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_contract$_IERC721_$933_to_t_address_fromStack": {
									"entryPoint": 13019,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_contract$_IMigratorChef_$927_to_t_address_fromStack": {
									"entryPoint": 13034,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 13049,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 13106,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_2802e724701dc68a9a3726c72d44a6e6756fa09a3efd95f836f437d22954c406_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 13141,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_2af9ac489fdfd3845a7a7fd4a89fb65b5b2a06bf8679b70fd9b405dd9a5bbd5f_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 13176,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 13211,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 13246,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_8997113db37475c3d966d2b1151c847dca6ccea70a4d4a2b46d60e92c3a8e108_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 13281,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 13316,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 13351,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 13386,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_d09049ba12a4b0d32c8152176161276998fb1529c6184e3c4227161fe99644df_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 13421,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 13456,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_ed1ac0ecd515e3d8f412b4c0ca319587a2238640d669089c98335a92c60abee8_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 13491,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 13526,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_f2b78d14701a493fa40394b414840abc22dde75251115d332366fec4d94c3445_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 13561,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 13596,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 13611,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 13634,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed": {
									"entryPoint": 13661,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 13702,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 13757,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_IERC20_$286__to_t_address__fromStack_reversed": {
									"entryPoint": 13798,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_IERC20_$286_t_uint256_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 13825,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_IERC721_$933_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 13894,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_IMigratorChef_$927__to_t_address__fromStack_reversed": {
									"entryPoint": 13935,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 13962,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 13996,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_2802e724701dc68a9a3726c72d44a6e6756fa09a3efd95f836f437d22954c406__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 14028,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_2af9ac489fdfd3845a7a7fd4a89fb65b5b2a06bf8679b70fd9b405dd9a5bbd5f__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 14060,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 14092,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 14124,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_8997113db37475c3d966d2b1151c847dca6ccea70a4d4a2b46d60e92c3a8e108__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 14156,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 14188,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 14220,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 14252,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_d09049ba12a4b0d32c8152176161276998fb1529c6184e3c4227161fe99644df__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 14284,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 14316,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_ed1ac0ecd515e3d8f412b4c0ca319587a2238640d669089c98335a92c60abee8__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 14348,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 14380,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_f2b78d14701a493fa40394b414840abc22dde75251115d332366fec4d94c3445__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 14412,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 14444,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 14471,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_length_t_bytes_memory_ptr": {
									"entryPoint": 14512,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 14523,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 14534,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 14545,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 14562,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 14648,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 14697,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 14787,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 14839,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 14857,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_contract$_IERC20_$286": {
									"entryPoint": 14869,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_contract$_IERC721_$933": {
									"entryPoint": 14887,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_contract$_IMigratorChef_$927": {
									"entryPoint": 14905,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 14923,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 14955,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_contract$_IERC20_$286_to_t_address": {
									"entryPoint": 14965,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_contract$_IERC721_$933_to_t_address": {
									"entryPoint": 14983,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_contract$_IMigratorChef_$927_to_t_address": {
									"entryPoint": 15001,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_address": {
									"entryPoint": 15019,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_uint160": {
									"entryPoint": 15037,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_memory_to_memory": {
									"entryPoint": 15055,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"increment_t_uint256": {
									"entryPoint": 15106,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 15179,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 15226,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 15273,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 15320,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 15325,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe": {
									"entryPoint": 15342,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_2802e724701dc68a9a3726c72d44a6e6756fa09a3efd95f836f437d22954c406": {
									"entryPoint": 15421,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_2af9ac489fdfd3845a7a7fd4a89fb65b5b2a06bf8679b70fd9b405dd9a5bbd5f": {
									"entryPoint": 15462,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a": {
									"entryPoint": 15503,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c": {
									"entryPoint": 15544,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_8997113db37475c3d966d2b1151c847dca6ccea70a4d4a2b46d60e92c3a8e108": {
									"entryPoint": 15623,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3": {
									"entryPoint": 15664,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe": {
									"entryPoint": 15743,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad": {
									"entryPoint": 15784,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_d09049ba12a4b0d32c8152176161276998fb1529c6184e3c4227161fe99644df": {
									"entryPoint": 15825,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd": {
									"entryPoint": 15866,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_ed1ac0ecd515e3d8f412b4c0ca319587a2238640d669089c98335a92c60abee8": {
									"entryPoint": 15945,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25": {
									"entryPoint": 15986,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_f2b78d14701a493fa40394b414840abc22dde75251115d332366fec4d94c3445": {
									"entryPoint": 16065,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 16106,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 16129,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_contract$_IERC20_$286": {
									"entryPoint": 16152,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_contract$_IERC721_$933": {
									"entryPoint": 16175,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_contract$_IMigratorChef_$927": {
									"entryPoint": 16198,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 16221,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:31219:1",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "59:87:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "69:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "91:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "78:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "78:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "69:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "134:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "107:26:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "107:33:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "107:33:1"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "37:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "45:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "53:5:1",
														"type": ""
													}
												],
												"src": "7:139:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "201:84:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "211:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "233:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "220:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "220:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "211:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "273:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nodeType": "YulIdentifier",
																	"src": "249:23:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "249:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "249:30:1"
														}
													]
												},
												"name": "abi_decode_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "179:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "187:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "195:5:1",
														"type": ""
													}
												],
												"src": "152:133:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "351:77:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "361:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "376:6:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "370:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "370:13:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "361:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "416:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nodeType": "YulIdentifier",
																	"src": "392:23:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "392:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "392:30:1"
														}
													]
												},
												"name": "abi_decode_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "329:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "337:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "345:5:1",
														"type": ""
													}
												],
												"src": "291:137:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "500:101:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "510:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "532:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "519:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "519:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "510:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "589:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_contract$_IERC20_$286",
																	"nodeType": "YulIdentifier",
																	"src": "548:40:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "548:47:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "548:47:1"
														}
													]
												},
												"name": "abi_decode_t_contract$_IERC20_$286",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "478:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "486:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "494:5:1",
														"type": ""
													}
												],
												"src": "434:167:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "684:94:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "694:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "709:6:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "703:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "703:13:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "694:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "766:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_contract$_IERC20_$286",
																	"nodeType": "YulIdentifier",
																	"src": "725:40:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "725:47:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "725:47:1"
														}
													]
												},
												"name": "abi_decode_t_contract$_IERC20_$286_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "662:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "670:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "678:5:1",
														"type": ""
													}
												],
												"src": "607:171:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "851:102:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "861:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "883:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "870:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "870:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "861:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "941:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_contract$_IERC721_$933",
																	"nodeType": "YulIdentifier",
																	"src": "899:41:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "899:48:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "899:48:1"
														}
													]
												},
												"name": "abi_decode_t_contract$_IERC721_$933",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "829:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "837:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "845:5:1",
														"type": ""
													}
												],
												"src": "784:169:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1032:108:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1042:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1064:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1051:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1051:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "1042:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1128:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_contract$_IMigratorChef_$927",
																	"nodeType": "YulIdentifier",
																	"src": "1080:47:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1080:54:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1080:54:1"
														}
													]
												},
												"name": "abi_decode_t_contract$_IMigratorChef_$927",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "1010:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1018:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1026:5:1",
														"type": ""
													}
												],
												"src": "959:181:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1198:87:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1208:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1230:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1217:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1217:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "1208:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1273:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "1246:26:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1246:33:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1246:33:1"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "1176:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1184:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1192:5:1",
														"type": ""
													}
												],
												"src": "1146:139:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1354:80:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1364:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1379:6:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1373:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1373:13:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "1364:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1422:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "1395:26:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1395:33:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1395:33:1"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "1332:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1340:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1348:5:1",
														"type": ""
													}
												],
												"src": "1291:143:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1506:263:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1552:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "1554:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1554:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1554:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1527:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1536:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1523:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1523:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1548:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1519:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1519:32:1"
															},
															"nodeType": "YulIf",
															"src": "1516:119:1"
														},
														{
															"nodeType": "YulBlock",
															"src": "1645:117:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1660:15:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1674:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1664:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1689:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1724:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1735:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1720:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1720:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1744:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "1699:20:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1699:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1689:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1476:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1487:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1499:6:1",
														"type": ""
													}
												],
												"src": "1440:329:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1849:271:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1895:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "1897:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1897:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1897:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1870:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1879:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1866:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1866:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1891:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1862:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1862:32:1"
															},
															"nodeType": "YulIf",
															"src": "1859:119:1"
														},
														{
															"nodeType": "YulBlock",
															"src": "1988:125:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2003:15:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2017:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2007:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2032:71:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2075:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2086:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2071:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2071:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2095:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "2042:28:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2042:61:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "2032:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1819:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1830:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1842:6:1",
														"type": ""
													}
												],
												"src": "1775:345:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2217:288:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2263:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "2265:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2265:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2265:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2238:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2247:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2234:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2234:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2259:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2230:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2230:32:1"
															},
															"nodeType": "YulIf",
															"src": "2227:119:1"
														},
														{
															"nodeType": "YulBlock",
															"src": "2356:142:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2371:15:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2385:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2375:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2400:88:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2460:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2471:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2456:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2456:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2480:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_contract$_IERC20_$286_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "2410:45:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2410:78:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "2400:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_contract$_IERC20_$286_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2187:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2198:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2210:6:1",
														"type": ""
													}
												],
												"src": "2126:379:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2609:406:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2655:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "2657:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2657:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2657:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2630:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2639:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2626:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2626:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2651:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2622:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2622:32:1"
															},
															"nodeType": "YulIf",
															"src": "2619:119:1"
														},
														{
															"nodeType": "YulBlock",
															"src": "2748:132:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2763:15:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2777:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2767:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2792:78:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2842:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2853:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2838:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2838:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2862:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_contract$_IERC721_$933",
																			"nodeType": "YulIdentifier",
																			"src": "2802:35:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2802:68:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "2792:6:1"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "2890:118:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2905:16:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2919:2:1",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2909:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2935:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2970:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2981:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2966:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2966:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2990:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "2945:20:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2945:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "2935:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_contract$_IERC721_$933t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2571:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2582:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2594:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2602:6:1",
														"type": ""
													}
												],
												"src": "2511:504:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3108:284:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3154:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "3156:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3156:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3156:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3129:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3138:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3125:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3125:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3150:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3121:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3121:32:1"
															},
															"nodeType": "YulIf",
															"src": "3118:119:1"
														},
														{
															"nodeType": "YulBlock",
															"src": "3247:138:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3262:15:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3276:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3266:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3291:84:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3347:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3358:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3343:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3343:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3367:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_contract$_IMigratorChef_$927",
																			"nodeType": "YulIdentifier",
																			"src": "3301:41:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3301:74:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "3291:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_contract$_IMigratorChef_$927",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3078:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3089:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3101:6:1",
														"type": ""
													}
												],
												"src": "3021:371:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3464:263:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3510:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "3512:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3512:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3512:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3485:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3494:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3481:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3481:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3506:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3477:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3477:32:1"
															},
															"nodeType": "YulIf",
															"src": "3474:119:1"
														},
														{
															"nodeType": "YulBlock",
															"src": "3603:117:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3618:15:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3632:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3622:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3647:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3682:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3693:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3678:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3678:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3702:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "3657:20:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3657:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "3647:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3434:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3445:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3457:6:1",
														"type": ""
													}
												],
												"src": "3398:329:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3810:274:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3856:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "3858:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3858:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3858:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3831:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3840:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3827:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3827:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3852:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3823:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3823:32:1"
															},
															"nodeType": "YulIf",
															"src": "3820:119:1"
														},
														{
															"nodeType": "YulBlock",
															"src": "3949:128:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3964:15:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3978:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3968:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3993:74:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4039:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4050:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4035:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4035:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4059:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "4003:31:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4003:64:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "3993:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3780:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3791:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3803:6:1",
														"type": ""
													}
												],
												"src": "3733:351:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4173:391:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4219:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "4221:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4221:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4221:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4194:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4203:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4190:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4190:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4215:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "4186:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4186:32:1"
															},
															"nodeType": "YulIf",
															"src": "4183:119:1"
														},
														{
															"nodeType": "YulBlock",
															"src": "4312:117:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4327:15:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4341:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "4331:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4356:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4391:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4402:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4387:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4387:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4411:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "4366:20:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4366:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "4356:6:1"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "4439:118:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4454:16:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4468:2:1",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "4458:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4484:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4519:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4530:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4515:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4515:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4539:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "4494:20:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4494:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "4484:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4135:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "4146:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4158:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "4166:6:1",
														"type": ""
													}
												],
												"src": "4090:474:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4681:530:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4727:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "4729:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4729:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4729:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4702:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4711:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4698:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4698:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4723:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "4694:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4694:32:1"
															},
															"nodeType": "YulIf",
															"src": "4691:119:1"
														},
														{
															"nodeType": "YulBlock",
															"src": "4820:117:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4835:15:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4849:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "4839:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4864:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4899:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4910:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4895:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4895:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4919:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "4874:20:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4874:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "4864:6:1"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "4947:132:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4962:16:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4976:2:1",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "4966:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4992:77:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "5041:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "5052:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5037:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5037:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5061:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_contract$_IERC20_$286",
																			"nodeType": "YulIdentifier",
																			"src": "5002:34:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5002:67:1"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "4992:6:1"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "5089:115:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "5104:16:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5118:2:1",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "5108:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "5134:60:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "5166:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "5177:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5162:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5162:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5186:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "5144:17:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5144:50:1"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "5134:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_contract$_IERC20_$286t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4635:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "4646:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4658:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "4666:6:1",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "4674:6:1",
														"type": ""
													}
												],
												"src": "4570:641:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5300:391:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5346:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "5348:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5348:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5348:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5321:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5330:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5317:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5317:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5342:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "5313:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5313:32:1"
															},
															"nodeType": "YulIf",
															"src": "5310:119:1"
														},
														{
															"nodeType": "YulBlock",
															"src": "5439:117:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "5454:15:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5468:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "5458:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "5483:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "5518:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "5529:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5514:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5514:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5538:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "5493:20:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5493:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "5483:6:1"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "5566:118:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "5581:16:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5595:2:1",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "5585:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "5611:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "5646:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "5657:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5642:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5642:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5666:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "5621:20:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5621:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "5611:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5262:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "5273:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5285:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "5293:6:1",
														"type": ""
													}
												],
												"src": "5217:474:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5794:516:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5840:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "5842:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5842:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5842:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5815:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5824:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5811:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5811:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5836:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "5807:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5807:32:1"
															},
															"nodeType": "YulIf",
															"src": "5804:119:1"
														},
														{
															"nodeType": "YulBlock",
															"src": "5933:117:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "5948:15:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5962:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "5952:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "5977:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "6012:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "6023:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "6008:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6008:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6032:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "5987:20:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5987:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "5977:6:1"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "6060:118:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "6075:16:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6089:2:1",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "6079:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "6105:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "6140:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "6151:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "6136:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6136:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6160:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "6115:20:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6115:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "6105:6:1"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "6188:115:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "6203:16:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6217:2:1",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "6207:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "6233:60:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "6265:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "6276:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "6261:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6261:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6285:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "6243:17:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6243:50:1"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "6233:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_uint256t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5748:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "5759:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5771:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "5779:6:1",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "5787:6:1",
														"type": ""
													}
												],
												"src": "5697:613:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6381:53:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6398:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "6421:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "6403:17:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6403:24:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6391:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6391:37:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6391:37:1"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6369:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "6376:3:1",
														"type": ""
													}
												],
												"src": "6316:118:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6548:265:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6558:52:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "6604:5:1"
																	}
																],
																"functionName": {
																	"name": "array_length_t_bytes_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "6572:31:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6572:38:1"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "6562:6:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "6619:95:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6702:3:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "6707:6:1"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6626:75:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6626:88:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "6619:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "6749:5:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6756:4:1",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6745:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6745:16:1"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6763:3:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "6768:6:1"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "6723:21:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6723:52:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6723:52:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6784:23:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6795:3:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "6800:6:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6791:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6791:16:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "6784:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6529:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "6536:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "6544:3:1",
														"type": ""
													}
												],
												"src": "6440:373:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6898:80:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6915:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "6965:5:1"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_contract$_IERC20_$286_to_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "6920:44:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6920:51:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6908:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6908:64:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6908:64:1"
														}
													]
												},
												"name": "abi_encode_t_contract$_IERC20_$286_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6886:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "6893:3:1",
														"type": ""
													}
												],
												"src": "6819:159:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7064:81:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7081:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "7132:5:1"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_contract$_IERC721_$933_to_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "7086:45:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7086:52:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7074:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7074:65:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7074:65:1"
														}
													]
												},
												"name": "abi_encode_t_contract$_IERC721_$933_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "7052:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "7059:3:1",
														"type": ""
													}
												],
												"src": "6984:161:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7237:87:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7254:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "7311:5:1"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_contract$_IMigratorChef_$927_to_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "7259:51:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7259:58:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7247:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7247:71:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7247:71:1"
														}
													]
												},
												"name": "abi_encode_t_contract$_IMigratorChef_$927_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "7225:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "7232:3:1",
														"type": ""
													}
												],
												"src": "7151:173:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7422:272:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7432:53:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "7479:5:1"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "7446:32:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7446:39:1"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "7436:6:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "7494:78:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7560:3:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "7565:6:1"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7501:58:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7501:71:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "7494:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "7607:5:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7614:4:1",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7603:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7603:16:1"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7621:3:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "7626:6:1"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "7581:21:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7581:52:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7581:52:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7642:46:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7653:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "7680:6:1"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "7658:21:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7658:29:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7649:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7649:39:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "7642:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "7403:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "7410:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "7418:3:1",
														"type": ""
													}
												],
												"src": "7330:364:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7846:220:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7856:74:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7922:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7927:2:1",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7863:58:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7863:67:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "7856:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8028:3:1"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																	"nodeType": "YulIdentifier",
																	"src": "7939:88:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7939:93:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7939:93:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8041:19:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8052:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8057:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8048:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8048:12:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "8041:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "7834:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "7842:3:1",
														"type": ""
													}
												],
												"src": "7700:366:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8218:220:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8228:74:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8294:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8299:2:1",
																		"type": "",
																		"value": "19"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8235:58:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8235:67:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "8228:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8400:3:1"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_2802e724701dc68a9a3726c72d44a6e6756fa09a3efd95f836f437d22954c406",
																	"nodeType": "YulIdentifier",
																	"src": "8311:88:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8311:93:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8311:93:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8413:19:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8424:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8429:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8420:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8420:12:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "8413:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_2802e724701dc68a9a3726c72d44a6e6756fa09a3efd95f836f437d22954c406_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "8206:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "8214:3:1",
														"type": ""
													}
												],
												"src": "8072:366:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8590:220:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8600:74:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8666:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8671:2:1",
																		"type": "",
																		"value": "27"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8607:58:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8607:67:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "8600:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8772:3:1"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_2af9ac489fdfd3845a7a7fd4a89fb65b5b2a06bf8679b70fd9b405dd9a5bbd5f",
																	"nodeType": "YulIdentifier",
																	"src": "8683:88:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8683:93:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8683:93:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8785:19:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8796:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8801:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8792:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8792:12:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "8785:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_2af9ac489fdfd3845a7a7fd4a89fb65b5b2a06bf8679b70fd9b405dd9a5bbd5f_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "8578:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "8586:3:1",
														"type": ""
													}
												],
												"src": "8444:366:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8962:220:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8972:74:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9038:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9043:2:1",
																		"type": "",
																		"value": "27"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8979:58:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8979:67:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "8972:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9144:3:1"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a",
																	"nodeType": "YulIdentifier",
																	"src": "9055:88:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9055:93:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9055:93:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9157:19:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9168:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9173:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9164:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9164:12:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "9157:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "8950:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "8958:3:1",
														"type": ""
													}
												],
												"src": "8816:366:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9334:220:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9344:74:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9410:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9415:2:1",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "9351:58:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9351:67:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "9344:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9516:3:1"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																	"nodeType": "YulIdentifier",
																	"src": "9427:88:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9427:93:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9427:93:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9529:19:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9540:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9545:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9536:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9536:12:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "9529:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "9322:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "9330:3:1",
														"type": ""
													}
												],
												"src": "9188:366:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9706:220:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9716:74:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9782:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9787:2:1",
																		"type": "",
																		"value": "24"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "9723:58:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9723:67:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "9716:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9888:3:1"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_8997113db37475c3d966d2b1151c847dca6ccea70a4d4a2b46d60e92c3a8e108",
																	"nodeType": "YulIdentifier",
																	"src": "9799:88:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9799:93:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9799:93:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9901:19:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9912:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9917:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9908:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9908:12:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "9901:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_8997113db37475c3d966d2b1151c847dca6ccea70a4d4a2b46d60e92c3a8e108_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "9694:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "9702:3:1",
														"type": ""
													}
												],
												"src": "9560:366:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10078:220:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10088:74:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10154:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10159:2:1",
																		"type": "",
																		"value": "33"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "10095:58:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10095:67:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "10088:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10260:3:1"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3",
																	"nodeType": "YulIdentifier",
																	"src": "10171:88:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10171:93:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10171:93:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10273:19:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10284:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10289:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10280:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10280:12:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "10273:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "10066:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "10074:3:1",
														"type": ""
													}
												],
												"src": "9932:366:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10450:220:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10460:74:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10526:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10531:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "10467:58:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10467:67:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "10460:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10632:3:1"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																	"nodeType": "YulIdentifier",
																	"src": "10543:88:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10543:93:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10543:93:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10645:19:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10656:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10661:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10652:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10652:12:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "10645:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "10438:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "10446:3:1",
														"type": ""
													}
												],
												"src": "10304:366:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10822:220:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10832:74:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10898:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10903:2:1",
																		"type": "",
																		"value": "29"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "10839:58:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10839:67:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "10832:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11004:3:1"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																	"nodeType": "YulIdentifier",
																	"src": "10915:88:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10915:93:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10915:93:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11017:19:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11028:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11033:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11024:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11024:12:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "11017:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "10810:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "10818:3:1",
														"type": ""
													}
												],
												"src": "10676:366:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11194:220:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11204:74:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11270:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11275:2:1",
																		"type": "",
																		"value": "18"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "11211:58:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11211:67:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "11204:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11376:3:1"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_d09049ba12a4b0d32c8152176161276998fb1529c6184e3c4227161fe99644df",
																	"nodeType": "YulIdentifier",
																	"src": "11287:88:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11287:93:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11287:93:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11389:19:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11400:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11405:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11396:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11396:12:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "11389:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_d09049ba12a4b0d32c8152176161276998fb1529c6184e3c4227161fe99644df_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "11182:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "11190:3:1",
														"type": ""
													}
												],
												"src": "11048:366:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11566:220:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11576:74:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11642:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11647:2:1",
																		"type": "",
																		"value": "42"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "11583:58:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11583:67:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "11576:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11748:3:1"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd",
																	"nodeType": "YulIdentifier",
																	"src": "11659:88:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11659:93:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11659:93:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11761:19:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11772:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11777:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11768:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11768:12:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "11761:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "11554:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "11562:3:1",
														"type": ""
													}
												],
												"src": "11420:366:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11938:220:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11948:74:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "12014:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12019:2:1",
																		"type": "",
																		"value": "12"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "11955:58:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11955:67:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "11948:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "12120:3:1"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_ed1ac0ecd515e3d8f412b4c0ca319587a2238640d669089c98335a92c60abee8",
																	"nodeType": "YulIdentifier",
																	"src": "12031:88:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12031:93:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12031:93:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12133:19:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "12144:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12149:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12140:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12140:12:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "12133:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_ed1ac0ecd515e3d8f412b4c0ca319587a2238640d669089c98335a92c60abee8_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "11926:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "11934:3:1",
														"type": ""
													}
												],
												"src": "11792:366:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12310:220:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12320:74:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "12386:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12391:2:1",
																		"type": "",
																		"value": "54"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "12327:58:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12327:67:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "12320:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "12492:3:1"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25",
																	"nodeType": "YulIdentifier",
																	"src": "12403:88:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12403:93:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12403:93:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12505:19:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "12516:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12521:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12512:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12512:12:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "12505:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "12298:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "12306:3:1",
														"type": ""
													}
												],
												"src": "12164:366:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12682:220:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12692:74:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "12758:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12763:2:1",
																		"type": "",
																		"value": "20"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "12699:58:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12699:67:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "12692:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "12864:3:1"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_f2b78d14701a493fa40394b414840abc22dde75251115d332366fec4d94c3445",
																	"nodeType": "YulIdentifier",
																	"src": "12775:88:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12775:93:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12775:93:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12877:19:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "12888:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12893:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12884:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12884:12:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "12877:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_f2b78d14701a493fa40394b414840abc22dde75251115d332366fec4d94c3445_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "12670:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "12678:3:1",
														"type": ""
													}
												],
												"src": "12536:366:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12973:53:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "12990:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "13013:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "12995:17:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12995:24:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12983:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12983:37:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12983:37:1"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "12961:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "12968:3:1",
														"type": ""
													}
												],
												"src": "12908:118:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13166:137:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13177:100:1",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "13264:6:1"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "13273:3:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "13184:79:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13184:93:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "13177:3:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "13287:10:1",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "13294:3:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "13287:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "13145:3:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "13151:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "13162:3:1",
														"type": ""
													}
												],
												"src": "13032:271:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13407:124:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13417:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13429:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13440:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13425:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13425:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13417:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "13497:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13510:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13521:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13506:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13506:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "13453:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13453:71:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13453:71:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "13379:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "13391:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "13402:4:1",
														"type": ""
													}
												],
												"src": "13309:222:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13663:206:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13673:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13685:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13696:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13681:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13681:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13673:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "13753:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13766:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13777:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13762:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13762:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "13709:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13709:71:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13709:71:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "13834:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13847:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13858:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13843:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13843:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "13790:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13790:72:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13790:72:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "13627:9:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "13639:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "13647:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "13658:4:1",
														"type": ""
													}
												],
												"src": "13537:332:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14029:288:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "14039:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "14051:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14062:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14047:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14047:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "14039:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "14119:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14132:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14143:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14128:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14128:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "14075:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14075:71:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14075:71:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "14200:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14213:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14224:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14209:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14209:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "14156:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14156:72:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14156:72:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "14282:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14295:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14306:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14291:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14291:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "14238:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14238:72:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14238:72:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "13985:9:1",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "13997:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "14005:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "14013:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "14024:4:1",
														"type": ""
													}
												],
												"src": "13875:442:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14449:206:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "14459:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "14471:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14482:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14467:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14467:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "14459:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "14539:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14552:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14563:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14548:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14548:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "14495:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14495:71:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14495:71:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "14620:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14633:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14644:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14629:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14629:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "14576:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14576:72:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14576:72:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "14413:9:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "14425:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "14433:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "14444:4:1",
														"type": ""
													}
												],
												"src": "14323:332:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14773:138:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "14783:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "14795:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14806:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14791:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14791:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "14783:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "14877:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14890:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14901:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14886:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14886:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_contract$_IERC20_$286_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "14819:57:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14819:85:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14819:85:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IERC20_$286__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "14745:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "14757:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "14768:4:1",
														"type": ""
													}
												],
												"src": "14661:250:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15113:385:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "15123:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "15135:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15146:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "15131:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "15131:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "15123:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "15218:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15231:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15242:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15227:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15227:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_contract$_IERC20_$286_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "15160:57:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "15160:85:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15160:85:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "15299:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15312:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15323:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15308:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15308:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "15255:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "15255:72:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15255:72:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "15381:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15394:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15405:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15390:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15390:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "15337:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "15337:72:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15337:72:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "15463:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15476:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15487:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15472:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15472:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "15419:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "15419:72:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15419:72:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IERC20_$286_t_uint256_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "15061:9:1",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "15073:6:1",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "15081:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "15089:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "15097:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "15108:4:1",
														"type": ""
													}
												],
												"src": "14917:581:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15645:221:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "15655:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "15667:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15678:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "15663:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "15663:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "15655:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "15750:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15763:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15774:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15759:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15759:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_contract$_IERC721_$933_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "15691:58:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "15691:86:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15691:86:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "15831:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15844:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15855:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15840:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15840:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "15787:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "15787:72:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15787:72:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IERC721_$933_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "15609:9:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "15621:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "15629:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "15640:4:1",
														"type": ""
													}
												],
												"src": "15504:362:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15991:145:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "16001:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "16013:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16024:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "16009:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "16009:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "16001:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "16102:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16115:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16126:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16111:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16111:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_contract$_IMigratorChef_$927_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "16037:64:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "16037:92:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16037:92:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IMigratorChef_$927__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "15963:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "15975:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "15986:4:1",
														"type": ""
													}
												],
												"src": "15872:264:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16260:195:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "16270:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "16282:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16293:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "16278:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "16278:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "16270:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16317:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16328:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16313:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16313:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "16336:4:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16342:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "16332:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16332:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16306:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "16306:47:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16306:47:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "16362:86:1",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "16434:6:1"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "16443:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "16370:63:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "16370:78:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "16362:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "16232:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "16244:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "16255:4:1",
														"type": ""
													}
												],
												"src": "16142:313:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16632:248:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "16642:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "16654:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16665:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "16650:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "16650:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "16642:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16689:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16700:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16685:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16685:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "16708:4:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16714:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "16704:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16704:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16678:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "16678:47:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16678:47:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "16734:139:1",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "16868:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "16742:124:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "16742:131:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "16734:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "16612:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "16627:4:1",
														"type": ""
													}
												],
												"src": "16461:419:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17057:248:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "17067:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "17079:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17090:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "17075:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "17075:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "17067:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "17114:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17125:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17110:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17110:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "17133:4:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "17139:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "17129:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17129:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17103:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "17103:47:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17103:47:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "17159:139:1",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "17293:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_2802e724701dc68a9a3726c72d44a6e6756fa09a3efd95f836f437d22954c406_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "17167:124:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "17167:131:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "17159:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_2802e724701dc68a9a3726c72d44a6e6756fa09a3efd95f836f437d22954c406__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "17037:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "17052:4:1",
														"type": ""
													}
												],
												"src": "16886:419:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17482:248:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "17492:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "17504:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17515:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "17500:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "17500:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "17492:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "17539:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17550:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17535:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17535:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "17558:4:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "17564:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "17554:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17554:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17528:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "17528:47:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17528:47:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "17584:139:1",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "17718:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_2af9ac489fdfd3845a7a7fd4a89fb65b5b2a06bf8679b70fd9b405dd9a5bbd5f_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "17592:124:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "17592:131:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "17584:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_2af9ac489fdfd3845a7a7fd4a89fb65b5b2a06bf8679b70fd9b405dd9a5bbd5f__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "17462:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "17477:4:1",
														"type": ""
													}
												],
												"src": "17311:419:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17907:248:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "17917:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "17929:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17940:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "17925:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "17925:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "17917:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "17964:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17975:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17960:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17960:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "17983:4:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "17989:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "17979:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17979:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17953:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "17953:47:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17953:47:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "18009:139:1",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "18143:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "18017:124:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "18017:131:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "18009:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "17887:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "17902:4:1",
														"type": ""
													}
												],
												"src": "17736:419:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18332:248:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "18342:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "18354:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18365:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "18350:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "18350:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "18342:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "18389:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "18400:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "18385:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18385:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "18408:4:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "18414:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "18404:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18404:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "18378:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "18378:47:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18378:47:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "18434:139:1",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "18568:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "18442:124:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "18442:131:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "18434:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "18312:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "18327:4:1",
														"type": ""
													}
												],
												"src": "18161:419:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18757:248:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "18767:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "18779:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18790:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "18775:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "18775:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "18767:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "18814:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "18825:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "18810:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18810:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "18833:4:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "18839:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "18829:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18829:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "18803:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "18803:47:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18803:47:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "18859:139:1",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "18993:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_8997113db37475c3d966d2b1151c847dca6ccea70a4d4a2b46d60e92c3a8e108_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "18867:124:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "18867:131:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "18859:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_8997113db37475c3d966d2b1151c847dca6ccea70a4d4a2b46d60e92c3a8e108__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "18737:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "18752:4:1",
														"type": ""
													}
												],
												"src": "18586:419:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "19182:248:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "19192:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "19204:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19215:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "19200:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "19200:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "19192:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "19239:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "19250:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "19235:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19235:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "19258:4:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "19264:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "19254:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19254:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "19228:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "19228:47:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19228:47:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "19284:139:1",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "19418:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "19292:124:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "19292:131:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "19284:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "19162:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "19177:4:1",
														"type": ""
													}
												],
												"src": "19011:419:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "19607:248:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "19617:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "19629:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19640:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "19625:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "19625:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "19617:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "19664:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "19675:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "19660:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19660:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "19683:4:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "19689:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "19679:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19679:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "19653:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "19653:47:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19653:47:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "19709:139:1",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "19843:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "19717:124:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "19717:131:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "19709:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "19587:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "19602:4:1",
														"type": ""
													}
												],
												"src": "19436:419:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "20032:248:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "20042:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "20054:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20065:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "20050:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "20050:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "20042:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "20089:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "20100:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "20085:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20085:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "20108:4:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "20114:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "20104:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20104:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "20078:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "20078:47:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "20078:47:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "20134:139:1",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "20268:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "20142:124:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "20142:131:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "20134:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "20012:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "20027:4:1",
														"type": ""
													}
												],
												"src": "19861:419:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "20457:248:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "20467:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "20479:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20490:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "20475:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "20475:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "20467:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "20514:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "20525:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "20510:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20510:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "20533:4:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "20539:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "20529:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20529:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "20503:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "20503:47:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "20503:47:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "20559:139:1",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "20693:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_d09049ba12a4b0d32c8152176161276998fb1529c6184e3c4227161fe99644df_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "20567:124:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "20567:131:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "20559:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_d09049ba12a4b0d32c8152176161276998fb1529c6184e3c4227161fe99644df__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "20437:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "20452:4:1",
														"type": ""
													}
												],
												"src": "20286:419:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "20882:248:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "20892:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "20904:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20915:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "20900:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "20900:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "20892:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "20939:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "20950:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "20935:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20935:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "20958:4:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "20964:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "20954:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20954:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "20928:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "20928:47:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "20928:47:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "20984:139:1",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "21118:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "20992:124:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "20992:131:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "20984:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "20862:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "20877:4:1",
														"type": ""
													}
												],
												"src": "20711:419:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "21307:248:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "21317:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "21329:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21340:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "21325:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "21325:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "21317:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "21364:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "21375:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "21360:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "21360:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "21383:4:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "21389:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "21379:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "21379:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "21353:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "21353:47:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "21353:47:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "21409:139:1",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "21543:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_ed1ac0ecd515e3d8f412b4c0ca319587a2238640d669089c98335a92c60abee8_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "21417:124:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "21417:131:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "21409:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ed1ac0ecd515e3d8f412b4c0ca319587a2238640d669089c98335a92c60abee8__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "21287:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "21302:4:1",
														"type": ""
													}
												],
												"src": "21136:419:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "21732:248:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "21742:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "21754:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21765:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "21750:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "21750:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "21742:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "21789:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "21800:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "21785:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "21785:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "21808:4:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "21814:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "21804:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "21804:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "21778:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "21778:47:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "21778:47:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "21834:139:1",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "21968:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "21842:124:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "21842:131:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "21834:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "21712:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "21727:4:1",
														"type": ""
													}
												],
												"src": "21561:419:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "22157:248:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "22167:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "22179:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "22190:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "22175:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "22175:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "22167:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "22214:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "22225:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "22210:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "22210:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "22233:4:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "22239:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "22229:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "22229:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "22203:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "22203:47:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "22203:47:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "22259:139:1",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "22393:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_f2b78d14701a493fa40394b414840abc22dde75251115d332366fec4d94c3445_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "22267:124:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "22267:131:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "22259:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_f2b78d14701a493fa40394b414840abc22dde75251115d332366fec4d94c3445__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "22137:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "22152:4:1",
														"type": ""
													}
												],
												"src": "21986:419:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "22509:124:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "22519:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "22531:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "22542:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "22527:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "22527:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "22519:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "22599:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "22612:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "22623:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "22608:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "22608:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "22555:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "22555:71:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "22555:71:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "22481:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "22493:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "22504:4:1",
														"type": ""
													}
												],
												"src": "22411:222:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "22765:206:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "22775:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "22787:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "22798:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "22783:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "22783:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "22775:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "22855:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "22868:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "22879:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "22864:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "22864:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "22811:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "22811:71:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "22811:71:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "22936:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "22949:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "22960:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "22945:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "22945:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "22892:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "22892:72:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "22892:72:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "22729:9:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "22741:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "22749:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "22760:4:1",
														"type": ""
													}
												],
												"src": "22639:332:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "23017:35:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "23027:19:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "23043:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "23037:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "23037:9:1"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "23027:6:1"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "23010:6:1",
														"type": ""
													}
												],
												"src": "22977:75:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "23116:40:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "23127:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "23143:5:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "23137:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "23137:12:1"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "23127:6:1"
																}
															]
														}
													]
												},
												"name": "array_length_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "23099:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "23109:6:1",
														"type": ""
													}
												],
												"src": "23058:98:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "23221:40:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "23232:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "23248:5:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "23242:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "23242:12:1"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "23232:6:1"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "23204:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "23214:6:1",
														"type": ""
													}
												],
												"src": "23162:99:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "23380:34:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "23390:18:1",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "23405:3:1"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "23390:11:1"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "23352:3:1",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "23357:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "23368:11:1",
														"type": ""
													}
												],
												"src": "23267:147:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "23516:73:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "23533:3:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "23538:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "23526:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "23526:19:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "23526:19:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "23554:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "23573:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "23578:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "23569:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "23569:14:1"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "23554:11:1"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "23488:3:1",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "23493:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "23504:11:1",
														"type": ""
													}
												],
												"src": "23420:169:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "23639:261:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "23649:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "23672:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "23654:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "23654:20:1"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "23649:1:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "23683:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "23706:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "23688:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "23688:20:1"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "23683:1:1"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "23846:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "23848:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "23848:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "23848:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "23767:1:1"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "23774:66:1",
																				"type": "",
																				"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																			},
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "23842:1:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "23770:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "23770:74:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "23764:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "23764:81:1"
															},
															"nodeType": "YulIf",
															"src": "23761:107:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "23878:16:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "23889:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "23892:1:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "23885:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "23885:9:1"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "23878:3:1"
																}
															]
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "23626:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "23629:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "23635:3:1",
														"type": ""
													}
												],
												"src": "23595:305:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "23948:143:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "23958:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "23981:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "23963:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "23963:20:1"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "23958:1:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "23992:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "24015:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "23997:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "23997:20:1"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "23992:1:1"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "24039:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nodeType": "YulIdentifier",
																				"src": "24041:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "24041:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "24041:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "24036:1:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "24029:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "24029:9:1"
															},
															"nodeType": "YulIf",
															"src": "24026:35:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "24071:14:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "24080:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "24083:1:1"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "24076:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "24076:9:1"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "24071:1:1"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "23937:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "23940:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "23946:1:1",
														"type": ""
													}
												],
												"src": "23906:185:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "24145:300:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "24155:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "24178:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "24160:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "24160:20:1"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "24155:1:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "24189:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "24212:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "24194:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "24194:20:1"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "24189:1:1"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "24387:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "24389:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "24389:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "24389:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "24299:1:1"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "24292:6:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "24292:9:1"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "24285:6:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "24285:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "24307:1:1"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "24314:66:1",
																						"type": "",
																						"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																					},
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "24382:1:1"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nodeType": "YulIdentifier",
																					"src": "24310:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "24310:74:1"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "24304:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "24304:81:1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "24281:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "24281:105:1"
															},
															"nodeType": "YulIf",
															"src": "24278:131:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "24419:20:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "24434:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "24437:1:1"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "24430:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "24430:9:1"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nodeType": "YulIdentifier",
																	"src": "24419:7:1"
																}
															]
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "24128:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "24131:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nodeType": "YulTypedName",
														"src": "24137:7:1",
														"type": ""
													}
												],
												"src": "24097:348:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "24496:146:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "24506:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "24529:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "24511:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "24511:20:1"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "24506:1:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "24540:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "24563:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "24545:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "24545:20:1"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "24540:1:1"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "24587:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "24589:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "24589:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "24589:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "24581:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "24584:1:1"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "24578:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "24578:8:1"
															},
															"nodeType": "YulIf",
															"src": "24575:34:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "24619:17:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "24631:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "24634:1:1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "24627:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "24627:9:1"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "24619:4:1"
																}
															]
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "24482:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "24485:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "24491:4:1",
														"type": ""
													}
												],
												"src": "24451:191:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "24693:51:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "24703:35:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "24732:5:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "24714:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "24714:24:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "24703:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "24675:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "24685:7:1",
														"type": ""
													}
												],
												"src": "24648:96:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "24792:48:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "24802:32:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "24827:5:1"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "24820:6:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "24820:13:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "24813:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "24813:21:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "24802:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "24774:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "24784:7:1",
														"type": ""
													}
												],
												"src": "24750:90:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "24905:51:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "24915:35:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "24944:5:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "24926:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "24926:24:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "24915:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_contract$_IERC20_$286",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "24887:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "24897:7:1",
														"type": ""
													}
												],
												"src": "24846:110:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "25022:51:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "25032:35:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "25061:5:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "25043:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "25043:24:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "25032:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_contract$_IERC721_$933",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "25004:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "25014:7:1",
														"type": ""
													}
												],
												"src": "24962:111:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "25145:51:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "25155:35:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "25184:5:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "25166:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "25166:24:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "25155:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_contract$_IMigratorChef_$927",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "25127:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "25137:7:1",
														"type": ""
													}
												],
												"src": "25079:117:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "25247:81:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "25257:65:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "25272:5:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "25279:42:1",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "25268:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "25268:54:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "25257:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "25229:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "25239:7:1",
														"type": ""
													}
												],
												"src": "25202:126:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "25379:32:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "25389:16:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "25400:5:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "25389:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "25361:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "25371:7:1",
														"type": ""
													}
												],
												"src": "25334:77:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "25491:66:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "25501:50:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "25545:5:1"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "25514:30:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "25514:37:1"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "25501:9:1"
																}
															]
														}
													]
												},
												"name": "convert_t_contract$_IERC20_$286_to_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "25471:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "25481:9:1",
														"type": ""
													}
												],
												"src": "25417:140:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "25638:66:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "25648:50:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "25692:5:1"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "25661:30:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "25661:37:1"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "25648:9:1"
																}
															]
														}
													]
												},
												"name": "convert_t_contract$_IERC721_$933_to_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "25618:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "25628:9:1",
														"type": ""
													}
												],
												"src": "25563:141:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "25791:66:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "25801:50:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "25845:5:1"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "25814:30:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "25814:37:1"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "25801:9:1"
																}
															]
														}
													]
												},
												"name": "convert_t_contract$_IMigratorChef_$927_to_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "25771:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "25781:9:1",
														"type": ""
													}
												],
												"src": "25710:147:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "25923:66:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "25933:50:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "25977:5:1"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "25946:30:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "25946:37:1"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "25933:9:1"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "25903:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "25913:9:1",
														"type": ""
													}
												],
												"src": "25863:126:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "26055:53:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "26065:37:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "26096:5:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "26078:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "26078:24:1"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "26065:9:1"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "26035:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "26045:9:1",
														"type": ""
													}
												],
												"src": "25995:113:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "26163:258:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "26173:10:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "26182:1:1",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "26177:1:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "26242:63:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "26267:3:1"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "26272:1:1"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "26263:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "26263:11:1"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nodeType": "YulIdentifier",
																									"src": "26286:3:1"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "26291:1:1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "26282:3:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "26282:11:1"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "26276:5:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "26276:18:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "26256:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "26256:39:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "26256:39:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "26203:1:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "26206:6:1"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "26200:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "26200:13:1"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "26214:19:1",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "26216:15:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "26225:1:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "26228:2:1",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "26221:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "26221:10:1"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "26216:1:1"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "26196:3:1",
																"statements": []
															},
															"src": "26192:113:1"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "26339:76:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "26389:3:1"
																						},
																						{
																							"name": "length",
																							"nodeType": "YulIdentifier",
																							"src": "26394:6:1"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "26385:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "26385:16:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "26403:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "26378:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "26378:27:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "26378:27:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "26320:1:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "26323:6:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "26317:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "26317:13:1"
															},
															"nodeType": "YulIf",
															"src": "26314:101:1"
														}
													]
												},
												"name": "copy_memory_to_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "26145:3:1",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "26150:3:1",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "26155:6:1",
														"type": ""
													}
												],
												"src": "26114:307:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "26470:190:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "26480:33:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "26507:5:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "26489:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "26489:24:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "26480:5:1"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "26603:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "26605:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "26605:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "26605:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "26528:5:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "26535:66:1",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "26525:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "26525:77:1"
															},
															"nodeType": "YulIf",
															"src": "26522:103:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "26634:20:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "26645:5:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "26652:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "26641:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "26641:13:1"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "26634:3:1"
																}
															]
														}
													]
												},
												"name": "increment_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "26456:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "26466:3:1",
														"type": ""
													}
												],
												"src": "26427:233:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "26694:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "26711:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "26714:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "26704:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "26704:88:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "26704:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "26808:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "26811:4:1",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "26801:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "26801:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "26801:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "26832:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "26835:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "26825:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "26825:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "26825:15:1"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "26666:180:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "26880:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "26897:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "26900:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "26890:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "26890:88:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "26890:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "26994:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "26997:4:1",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "26987:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "26987:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "26987:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "27018:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "27021:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "27011:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "27011:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "27011:15:1"
														}
													]
												},
												"name": "panic_error_0x12",
												"nodeType": "YulFunctionDefinition",
												"src": "26852:180:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "27066:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "27083:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "27086:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "27076:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "27076:88:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "27076:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "27180:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "27183:4:1",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "27173:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "27173:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "27173:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "27204:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "27207:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "27197:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "27197:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "27197:15:1"
														}
													]
												},
												"name": "panic_error_0x32",
												"nodeType": "YulFunctionDefinition",
												"src": "27038:180:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "27313:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "27330:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "27333:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "27323:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "27323:12:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "27323:12:1"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "27224:117:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "27436:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "27453:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "27456:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "27446:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "27446:12:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "27446:12:1"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "27347:117:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "27518:54:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "27528:38:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "27546:5:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "27553:2:1",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "27542:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "27542:14:1"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "27562:2:1",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "27558:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "27558:7:1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "27538:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "27538:28:1"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "27528:6:1"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "27501:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "27511:6:1",
														"type": ""
													}
												],
												"src": "27470:102:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "27684:119:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "27706:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "27714:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "27702:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "27702:14:1"
																	},
																	{
																		"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "27718:34:1",
																		"type": "",
																		"value": "Ownable: new owner is the zero a"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "27695:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "27695:58:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "27695:58:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "27774:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "27782:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "27770:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "27770:15:1"
																	},
																	{
																		"hexValue": "646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "27787:8:1",
																		"type": "",
																		"value": "ddress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "27763:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "27763:33:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "27763:33:1"
														}
													]
												},
												"name": "store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "27676:6:1",
														"type": ""
													}
												],
												"src": "27578:225:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "27915:63:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "27937:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "27945:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "27933:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "27933:14:1"
																	},
																	{
																		"hexValue": "506f776572206973206e6f7420656e6f756768",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "27949:21:1",
																		"type": "",
																		"value": "Power is not enough"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "27926:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "27926:45:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "27926:45:1"
														}
													]
												},
												"name": "store_literal_in_memory_2802e724701dc68a9a3726c72d44a6e6756fa09a3efd95f836f437d22954c406",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "27907:6:1",
														"type": ""
													}
												],
												"src": "27809:169:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "28090:71:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "28112:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "28120:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "28108:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "28108:14:1"
																	},
																	{
																		"hexValue": "776974686472617720506f77657220627920756e7374616b696e67",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "28124:29:1",
																		"type": "",
																		"value": "withdraw Power by unstaking"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "28101:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "28101:53:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "28101:53:1"
														}
													]
												},
												"name": "store_literal_in_memory_2af9ac489fdfd3845a7a7fd4a89fb65b5b2a06bf8679b70fd9b405dd9a5bbd5f",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "28082:6:1",
														"type": ""
													}
												],
												"src": "27984:177:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "28273:71:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "28295:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "28303:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "28291:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "28291:14:1"
																	},
																	{
																		"hexValue": "536166654d6174683a206164646974696f6e206f766572666c6f77",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "28307:29:1",
																		"type": "",
																		"value": "SafeMath: addition overflow"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "28284:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "28284:53:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "28284:53:1"
														}
													]
												},
												"name": "store_literal_in_memory_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "28265:6:1",
														"type": ""
													}
												],
												"src": "28167:177:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "28456:119:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "28478:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "28486:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "28474:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "28474:14:1"
																	},
																	{
																		"hexValue": "416464726573733a20696e73756666696369656e742062616c616e636520666f",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "28490:34:1",
																		"type": "",
																		"value": "Address: insufficient balance fo"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "28467:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "28467:58:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "28467:58:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "28546:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "28554:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "28542:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "28542:15:1"
																	},
																	{
																		"hexValue": "722063616c6c",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "28559:8:1",
																		"type": "",
																		"value": "r call"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "28535:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "28535:33:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "28535:33:1"
														}
													]
												},
												"name": "store_literal_in_memory_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "28448:6:1",
														"type": ""
													}
												],
												"src": "28350:225:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "28687:68:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "28709:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "28717:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "28705:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "28705:14:1"
																	},
																	{
																		"hexValue": "6465706f73697420506f776572206279207374616b696e67",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "28721:26:1",
																		"type": "",
																		"value": "deposit Power by staking"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "28698:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "28698:50:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "28698:50:1"
														}
													]
												},
												"name": "store_literal_in_memory_8997113db37475c3d966d2b1151c847dca6ccea70a4d4a2b46d60e92c3a8e108",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "28679:6:1",
														"type": ""
													}
												],
												"src": "28581:174:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "28867:114:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "28889:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "28897:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "28885:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "28885:14:1"
																	},
																	{
																		"hexValue": "536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "28901:34:1",
																		"type": "",
																		"value": "SafeMath: multiplication overflo"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "28878:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "28878:58:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "28878:58:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "28957:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "28965:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "28953:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "28953:15:1"
																	},
																	{
																		"hexValue": "77",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "28970:3:1",
																		"type": "",
																		"value": "w"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "28946:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "28946:28:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "28946:28:1"
														}
													]
												},
												"name": "store_literal_in_memory_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "28859:6:1",
														"type": ""
													}
												],
												"src": "28761:220:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "29093:76:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "29115:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "29123:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "29111:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "29111:14:1"
																	},
																	{
																		"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "29127:34:1",
																		"type": "",
																		"value": "Ownable: caller is not the owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "29104:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "29104:58:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "29104:58:1"
														}
													]
												},
												"name": "store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "29085:6:1",
														"type": ""
													}
												],
												"src": "28987:182:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "29281:73:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "29303:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "29311:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "29299:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "29299:14:1"
																	},
																	{
																		"hexValue": "416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "29315:31:1",
																		"type": "",
																		"value": "Address: call to non-contract"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "29292:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "29292:55:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "29292:55:1"
														}
													]
												},
												"name": "store_literal_in_memory_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "29273:6:1",
														"type": ""
													}
												],
												"src": "29175:179:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "29466:62:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "29488:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "29496:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "29484:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "29484:14:1"
																	},
																	{
																		"hexValue": "77697468647261773a206e6f7420676f6f64",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "29500:20:1",
																		"type": "",
																		"value": "withdraw: not good"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "29477:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "29477:44:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "29477:44:1"
														}
													]
												},
												"name": "store_literal_in_memory_d09049ba12a4b0d32c8152176161276998fb1529c6184e3c4227161fe99644df",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "29458:6:1",
														"type": ""
													}
												],
												"src": "29360:168:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "29640:123:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "29662:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "29670:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "29658:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "29658:14:1"
																	},
																	{
																		"hexValue": "5361666545524332303a204552433230206f7065726174696f6e20646964206e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "29674:34:1",
																		"type": "",
																		"value": "SafeERC20: ERC20 operation did n"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "29651:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "29651:58:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "29651:58:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "29730:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "29738:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "29726:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "29726:15:1"
																	},
																	{
																		"hexValue": "6f742073756363656564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "29743:12:1",
																		"type": "",
																		"value": "ot succeed"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "29719:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "29719:37:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "29719:37:1"
														}
													]
												},
												"name": "store_literal_in_memory_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "29632:6:1",
														"type": ""
													}
												],
												"src": "29534:229:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "29875:56:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "29897:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "29905:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "29893:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "29893:14:1"
																	},
																	{
																		"hexValue": "6d6967726174653a20626164",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "29909:14:1",
																		"type": "",
																		"value": "migrate: bad"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "29886:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "29886:38:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "29886:38:1"
														}
													]
												},
												"name": "store_literal_in_memory_ed1ac0ecd515e3d8f412b4c0ca319587a2238640d669089c98335a92c60abee8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "29867:6:1",
														"type": ""
													}
												],
												"src": "29769:162:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "30043:135:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "30065:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "30073:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "30061:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "30061:14:1"
																	},
																	{
																		"hexValue": "5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "30077:34:1",
																		"type": "",
																		"value": "SafeERC20: approve from non-zero"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "30054:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "30054:58:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "30054:58:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "30133:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "30141:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "30129:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "30129:15:1"
																	},
																	{
																		"hexValue": "20746f206e6f6e2d7a65726f20616c6c6f77616e6365",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "30146:24:1",
																		"type": "",
																		"value": " to non-zero allowance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "30122:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "30122:49:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "30122:49:1"
														}
													]
												},
												"name": "store_literal_in_memory_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "30035:6:1",
														"type": ""
													}
												],
												"src": "29937:241:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "30290:64:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "30312:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "30320:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "30308:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "30308:14:1"
																	},
																	{
																		"hexValue": "6d6967726174653a206e6f206d69677261746f72",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "30324:22:1",
																		"type": "",
																		"value": "migrate: no migrator"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "30301:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "30301:46:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "30301:46:1"
														}
													]
												},
												"name": "store_literal_in_memory_f2b78d14701a493fa40394b414840abc22dde75251115d332366fec4d94c3445",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "30282:6:1",
														"type": ""
													}
												],
												"src": "30184:170:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "30403:79:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "30460:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "30469:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "30472:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "30462:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "30462:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "30462:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "30426:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "30451:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "30433:17:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "30433:24:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "30423:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "30423:35:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "30416:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "30416:43:1"
															},
															"nodeType": "YulIf",
															"src": "30413:63:1"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "30396:5:1",
														"type": ""
													}
												],
												"src": "30360:122:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "30528:76:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "30582:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "30591:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "30594:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "30584:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "30584:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "30584:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "30551:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "30573:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nodeType": "YulIdentifier",
																					"src": "30558:14:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "30558:21:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "30548:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "30548:32:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "30541:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "30541:40:1"
															},
															"nodeType": "YulIf",
															"src": "30538:60:1"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "30521:5:1",
														"type": ""
													}
												],
												"src": "30488:116:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "30667:93:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "30738:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "30747:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "30750:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "30740:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "30740:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "30740:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "30690:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "30729:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_contract$_IERC20_$286",
																					"nodeType": "YulIdentifier",
																					"src": "30697:31:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "30697:38:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "30687:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "30687:49:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "30680:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "30680:57:1"
															},
															"nodeType": "YulIf",
															"src": "30677:77:1"
														}
													]
												},
												"name": "validator_revert_t_contract$_IERC20_$286",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "30660:5:1",
														"type": ""
													}
												],
												"src": "30610:150:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "30824:94:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "30896:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "30905:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "30908:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "30898:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "30898:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "30898:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "30847:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "30887:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_contract$_IERC721_$933",
																					"nodeType": "YulIdentifier",
																					"src": "30854:32:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "30854:39:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "30844:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "30844:50:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "30837:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "30837:58:1"
															},
															"nodeType": "YulIf",
															"src": "30834:78:1"
														}
													]
												},
												"name": "validator_revert_t_contract$_IERC721_$933",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "30817:5:1",
														"type": ""
													}
												],
												"src": "30766:152:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "30988:100:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "31066:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "31075:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "31078:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "31068:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "31068:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "31068:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "31011:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "31057:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_contract$_IMigratorChef_$927",
																					"nodeType": "YulIdentifier",
																					"src": "31018:38:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "31018:45:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "31008:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "31008:56:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "31001:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "31001:64:1"
															},
															"nodeType": "YulIf",
															"src": "30998:84:1"
														}
													]
												},
												"name": "validator_revert_t_contract$_IMigratorChef_$927",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "30981:5:1",
														"type": ""
													}
												],
												"src": "30924:164:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "31137:79:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "31194:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "31203:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "31206:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "31196:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "31196:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "31196:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "31160:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "31185:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "31167:17:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "31167:24:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "31157:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "31157:35:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "31150:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "31150:43:1"
															},
															"nodeType": "YulIf",
															"src": "31147:63:1"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "31130:5:1",
														"type": ""
													}
												],
												"src": "31094:122:1"
											}
										]
									},
									"contents": "{\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_t_bool(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_t_contract$_IERC20_$286(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_contract$_IERC20_$286(value)\n    }\n\n    function abi_decode_t_contract$_IERC20_$286_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_contract$_IERC20_$286(value)\n    }\n\n    function abi_decode_t_contract$_IERC721_$933(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_contract$_IERC721_$933(value)\n    }\n\n    function abi_decode_t_contract$_IMigratorChef_$927(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_contract$_IMigratorChef_$927(value)\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_contract$_IERC20_$286_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_contract$_IERC20_$286_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_contract$_IERC721_$933t_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_contract$_IERC721_$933(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_contract$_IMigratorChef_$927(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_contract$_IMigratorChef_$927(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256t_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256t_contract$_IERC20_$286t_bool(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_contract$_IERC20_$286(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_bool(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256t_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256t_uint256t_bool(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_bool(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, length)\n    }\n\n    function abi_encode_t_contract$_IERC20_$286_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_IERC20_$286_to_t_address(value))\n    }\n\n    function abi_encode_t_contract$_IERC721_$933_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_IERC721_$933_to_t_address(value))\n    }\n\n    function abi_encode_t_contract$_IMigratorChef_$927_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_IMigratorChef_$927_to_t_address(value))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_2802e724701dc68a9a3726c72d44a6e6756fa09a3efd95f836f437d22954c406_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 19)\n        store_literal_in_memory_2802e724701dc68a9a3726c72d44a6e6756fa09a3efd95f836f437d22954c406(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_2af9ac489fdfd3845a7a7fd4a89fb65b5b2a06bf8679b70fd9b405dd9a5bbd5f_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 27)\n        store_literal_in_memory_2af9ac489fdfd3845a7a7fd4a89fb65b5b2a06bf8679b70fd9b405dd9a5bbd5f(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 27)\n        store_literal_in_memory_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_8997113db37475c3d966d2b1151c847dca6ccea70a4d4a2b46d60e92c3a8e108_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 24)\n        store_literal_in_memory_8997113db37475c3d966d2b1151c847dca6ccea70a4d4a2b46d60e92c3a8e108(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 33)\n        store_literal_in_memory_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 32)\n        store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 29)\n        store_literal_in_memory_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_d09049ba12a4b0d32c8152176161276998fb1529c6184e3c4227161fe99644df_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 18)\n        store_literal_in_memory_d09049ba12a4b0d32c8152176161276998fb1529c6184e3c4227161fe99644df(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 42)\n        store_literal_in_memory_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_ed1ac0ecd515e3d8f412b4c0ca319587a2238640d669089c98335a92c60abee8_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 12)\n        store_literal_in_memory_ed1ac0ecd515e3d8f412b4c0ca319587a2238640d669089c98335a92c60abee8(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 54)\n        store_literal_in_memory_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_f2b78d14701a493fa40394b414840abc22dde75251115d332366fec4d94c3445_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 20)\n        store_literal_in_memory_f2b78d14701a493fa40394b414840abc22dde75251115d332366fec4d94c3445(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value0) -> end {\n\n        pos := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        end := pos\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_contract$_IERC20_$286__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_IERC20_$286_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_contract$_IERC20_$286_t_uint256_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_contract$_IERC20_$286_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n    }\n\n    function abi_encode_tuple_t_contract$_IERC721_$933_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_contract$_IERC721_$933_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_contract$_IMigratorChef_$927__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_IMigratorChef_$927_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_2802e724701dc68a9a3726c72d44a6e6756fa09a3efd95f836f437d22954c406__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_2802e724701dc68a9a3726c72d44a6e6756fa09a3efd95f836f437d22954c406_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_2af9ac489fdfd3845a7a7fd4a89fb65b5b2a06bf8679b70fd9b405dd9a5bbd5f__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_2af9ac489fdfd3845a7a7fd4a89fb65b5b2a06bf8679b70fd9b405dd9a5bbd5f_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_8997113db37475c3d966d2b1151c847dca6ccea70a4d4a2b46d60e92c3a8e108__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_8997113db37475c3d966d2b1151c847dca6ccea70a4d4a2b46d60e92c3a8e108_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_d09049ba12a4b0d32c8152176161276998fb1529c6184e3c4227161fe99644df__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_d09049ba12a4b0d32c8152176161276998fb1529c6184e3c4227161fe99644df_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_ed1ac0ecd515e3d8f412b4c0ca319587a2238640d669089c98335a92c60abee8__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_ed1ac0ecd515e3d8f412b4c0ca319587a2238640d669089c98335a92c60abee8_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_f2b78d14701a493fa40394b414840abc22dde75251115d332366fec4d94c3445__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_f2b78d14701a493fa40394b414840abc22dde75251115d332366fec4d94c3445_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x > (maxValue - y)\n        if gt(x, sub(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, y)) { panic_error_0x11() }\n\n        sum := add(x, y)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x != 0 and y > (maxValue / x)\n        if and(iszero(iszero(x)), gt(y, div(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, x))) { panic_error_0x11() }\n\n        product := mul(x, y)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        if lt(x, y) { panic_error_0x11() }\n\n        diff := sub(x, y)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function cleanup_t_contract$_IERC20_$286(value) -> cleaned {\n        cleaned := cleanup_t_address(value)\n    }\n\n    function cleanup_t_contract$_IERC721_$933(value) -> cleaned {\n        cleaned := cleanup_t_address(value)\n    }\n\n    function cleanup_t_contract$_IMigratorChef_$927(value) -> cleaned {\n        cleaned := cleanup_t_address(value)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function convert_t_contract$_IERC20_$286_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function convert_t_contract$_IERC721_$933_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function convert_t_contract$_IMigratorChef_$927_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function convert_t_uint160_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_uint160(value)\n    }\n\n    function convert_t_uint160_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(value)\n    }\n\n    function copy_memory_to_memory(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length)\n        {\n            // clear end\n            mstore(add(dst, length), 0)\n        }\n    }\n\n    function increment_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: new owner is the zero a\")\n\n        mstore(add(memPtr, 32), \"ddress\")\n\n    }\n\n    function store_literal_in_memory_2802e724701dc68a9a3726c72d44a6e6756fa09a3efd95f836f437d22954c406(memPtr) {\n\n        mstore(add(memPtr, 0), \"Power is not enough\")\n\n    }\n\n    function store_literal_in_memory_2af9ac489fdfd3845a7a7fd4a89fb65b5b2a06bf8679b70fd9b405dd9a5bbd5f(memPtr) {\n\n        mstore(add(memPtr, 0), \"withdraw Power by unstaking\")\n\n    }\n\n    function store_literal_in_memory_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a(memPtr) {\n\n        mstore(add(memPtr, 0), \"SafeMath: addition overflow\")\n\n    }\n\n    function store_literal_in_memory_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c(memPtr) {\n\n        mstore(add(memPtr, 0), \"Address: insufficient balance fo\")\n\n        mstore(add(memPtr, 32), \"r call\")\n\n    }\n\n    function store_literal_in_memory_8997113db37475c3d966d2b1151c847dca6ccea70a4d4a2b46d60e92c3a8e108(memPtr) {\n\n        mstore(add(memPtr, 0), \"deposit Power by staking\")\n\n    }\n\n    function store_literal_in_memory_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3(memPtr) {\n\n        mstore(add(memPtr, 0), \"SafeMath: multiplication overflo\")\n\n        mstore(add(memPtr, 32), \"w\")\n\n    }\n\n    function store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: caller is not the owner\")\n\n    }\n\n    function store_literal_in_memory_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad(memPtr) {\n\n        mstore(add(memPtr, 0), \"Address: call to non-contract\")\n\n    }\n\n    function store_literal_in_memory_d09049ba12a4b0d32c8152176161276998fb1529c6184e3c4227161fe99644df(memPtr) {\n\n        mstore(add(memPtr, 0), \"withdraw: not good\")\n\n    }\n\n    function store_literal_in_memory_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd(memPtr) {\n\n        mstore(add(memPtr, 0), \"SafeERC20: ERC20 operation did n\")\n\n        mstore(add(memPtr, 32), \"ot succeed\")\n\n    }\n\n    function store_literal_in_memory_ed1ac0ecd515e3d8f412b4c0ca319587a2238640d669089c98335a92c60abee8(memPtr) {\n\n        mstore(add(memPtr, 0), \"migrate: bad\")\n\n    }\n\n    function store_literal_in_memory_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25(memPtr) {\n\n        mstore(add(memPtr, 0), \"SafeERC20: approve from non-zero\")\n\n        mstore(add(memPtr, 32), \" to non-zero allowance\")\n\n    }\n\n    function store_literal_in_memory_f2b78d14701a493fa40394b414840abc22dde75251115d332366fec4d94c3445(memPtr) {\n\n        mstore(add(memPtr, 0), \"migrate: no migrator\")\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_contract$_IERC20_$286(value) {\n        if iszero(eq(value, cleanup_t_contract$_IERC20_$286(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_contract$_IERC721_$933(value) {\n        if iszero(eq(value, cleanup_t_contract$_IERC721_$933(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_contract$_IMigratorChef_$927(value) {\n        if iszero(eq(value, cleanup_t_contract$_IMigratorChef_$927(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n}\n",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106101f05760003560e01c80635ffe61461161010f5780638da5cb5b116100a2578063d209db8c11610071578063d209db8c1461055a578063e2bbb1581461058a578063f2fde38b146105a6578063f3239ab5146105c2576101f0565b80638da5cb5b146104bd5780638dbb1e3a146104db57806393f1a40b1461050b578063cb3cba551461053c576101f0565b8063715018a6116100de578063715018a6146104475780637cd07e47146104515780638aa285501461046f5780638c51793b1461048d576101f0565b80635ffe6146146103d457806361c1b724146103f0578063630b5ba11461042157806364482f791461042b576101f0565b806341441d3b116101875780634ea2813c116101565780634ea2813c1461036257806351eb05a61461037e5780635312ea8e1461039a5780635990c569146103b6576101f0565b806341441d3b146102f0578063441a3e701461030c578063454b06081461032857806348cd4cb114610344576101f0565b80631d5fbd87116101c35780631d5fbd87146102805780631eaaa0451461029c57806323cf3118146102b85780633df7aff3146102d4576101f0565b8063081e3eda146101f55780631058d281146102135780631526fe271461022f57806317caf6f114610262575b600080fd5b6101fd6105f2565b60405161020a919061386c565b60405180910390f35b61022d6004803603810190610228919061310c565b6105ff565b005b6102496004803603810190610244919061310c565b6108be565b6040516102599493929190613601565b60405180910390f35b61026a61091e565b604051610277919061386c565b60405180910390f35b61029a600480360381019061029591906131f9565b610924565b005b6102b660048036038101906102b191906131a6565b610db8565b005b6102d260048036038101906102cd91906130df565b610f45565b005b6102ee60048036038101906102e9919061310c565b611005565b005b61030a6004803603810190610305919061310c565b61108b565b005b610326600480360381019061032191906131f9565b611313565b005b610342600480360381019061033d919061310c565b61160a565b005b61034c61198a565b604051610359919061386c565b60405180910390f35b61037c6004803603810190610377919061309f565b611990565b005b6103986004803603810190610393919061310c565b611ab9565b005b6103b460048036038101906103af919061310c565b611c67565b005b6103be611da0565b6040516103cb919061386c565b60405180910390f35b6103ee60048036038101906103e9919061310c565b611da6565b005b61040a6004803603810190610405919061310c565b611e2c565b604051610418929190613646565b60405180910390f35b610429611e80565b005b61044560048036038101906104409190613239565b611eb3565b005b61044f611fbf565b005b610459612047565b604051610466919061366f565b60405180910390f35b61047761206d565b604051610484919061386c565b60405180910390f35b6104a760048036038101906104a29190613018565b612073565b6040516104b4919061386c565b60405180910390f35b6104c56120bc565b6040516104d29190613542565b60405180910390f35b6104f560048036038101906104f091906131f9565b6120e5565b604051610502919061386c565b60405180910390f35b61052560048036038101906105209190613166565b612116565b604051610533929190613887565b60405180910390f35b610544612147565b60405161055191906135e6565b60405180910390f35b610574600480360381019061056f9190613018565b61216d565b604051610581919061386c565b60405180910390f35b6105a4600480360381019061059f91906131f9565b612185565b005b6105c060048036038101906105bb9190613018565b612445565b005b6105dc60048036038101906105d79190613166565b61253d565b6040516105e9919061386c565b60405180910390f35b6000600680549050905090565b6000600660008154811061061657610615613ba9565b5b9060005260206000209060040201905060006007600080815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020905082816000015410156106c1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106b8906137cc565b60405180910390fd5b6106cb6000611ab9565b6000610715826001015461070764e8d4a510006106f98760030154876000015461277190919063ffffffff16565b6127ec90919063ffffffff16565b61283690919063ffffffff16565b905060008111156107b65761077281600a60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461288090919063ffffffff16565b600a60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505b600084111561082e576107d684836000015461283690919063ffffffff16565b826000018190555061082d33858560000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166128de9092919063ffffffff16565b5b61086064e8d4a510006108528560030154856000015461277190919063ffffffff16565b6127ec90919063ffffffff16565b826001018190555060003373ffffffffffffffffffffffffffffffffffffffff167ff279e6a1f5e320cca91135676d9cb6e44ca8a08c0b88342bcdb1144f6511b568866040516108b0919061386c565b60405180910390a350505050565b600681815481106108ce57600080fd5b90600052602060002090600402016000915090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060010154908060020154908060030154905084565b60085481565b60006006828154811061093a57610939613ba9565b5b9060005260206000209060040201905060006007600084815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020905060008260030154905060008360000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401610a069190613542565b60206040518083038186803b158015610a1e57600080fd5b505afa158015610a32573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a569190613139565b9050836002015443118015610a6c575060008114155b15610b07576000610a818560020154436120e5565b90506000610ac4600854610ab68860010154610aa86003548761277190919063ffffffff16565b61277190919063ffffffff16565b6127ec90919063ffffffff16565b9050610b02610af384610ae564e8d4a510008561277190919063ffffffff16565b6127ec90919063ffffffff16565b8561288090919063ffffffff16565b935050505b6000610b4d8460010154610b3f64e8d4a51000610b3187896000015461277190919063ffffffff16565b6127ec90919063ffffffff16565b61283690919063ffffffff16565b9050600060018881548110610b6557610b64613ba9565b5b906000526020600020906002020190506000610bc9600a60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020548461288090919063ffffffff16565b90508160010154811115610c00576000881415610beb57610bea60006105ff565b5b60008814610bff57610bfe886000611313565b5b5b600a60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054826001015410610c85576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c7c906136cc565b60405180910390fd5b610cdb8260010154600a60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461283690919063ffffffff16565b600a60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166317e5883c336040518263ffffffff1660e01b8152600401610d7b9190613542565b600060405180830381600087803b158015610d9557600080fd5b505af1158015610da9573d6000803e3d6000fd5b50505050505050505050505050565b610dc0612964565b73ffffffffffffffffffffffffffffffffffffffff16610dde6120bc565b73ffffffffffffffffffffffffffffffffffffffff1614610e34576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e2b9061378c565b60405180910390fd5b8015610e4357610e42611e80565b5b60006009544311610e5657600954610e58565b435b9050610e6f8460085461288090919063ffffffff16565b600881905550600660405180608001604052808573ffffffffffffffffffffffffffffffffffffffff1681526020018681526020018381526020016000815250908060018154018082558091505060019003906000526020600020906004020160009091909190915060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550602082015181600101556040820151816002015560608201518160030155505050505050565b610f4d612964565b73ffffffffffffffffffffffffffffffffffffffff16610f6b6120bc565b73ffffffffffffffffffffffffffffffffffffffff1614610fc1576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610fb89061378c565b60405180910390fd5b80600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b61100d612964565b73ffffffffffffffffffffffffffffffffffffffff1661102b6120bc565b73ffffffffffffffffffffffffffffffffffffffff1614611081576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016110789061378c565b60405180910390fd5b8060038190555050565b600060066000815481106110a2576110a1613ba9565b5b9060005260206000209060040201905060006007600080815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002090506111106000611ab9565b60008160000154111561120a576000611167826001015461115964e8d4a5100061114b8760030154876000015461277190919063ffffffff16565b6127ec90919063ffffffff16565b61283690919063ffffffff16565b90506000811115611208576111c481600a60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461288090919063ffffffff16565b600a60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505b505b6000831115611284576112643330858560000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1661296c909392919063ffffffff16565b61127b83826000015461288090919063ffffffff16565b81600001819055505b6112b664e8d4a510006112a88460030154846000015461277190919063ffffffff16565b6127ec90919063ffffffff16565b816001018190555060003373ffffffffffffffffffffffffffffffffffffffff167f90890809c654f11d6e72a28fa60149770a0d11ec6c92319d6ceb2bb0a4ea1a1585604051611306919061386c565b60405180910390a3505050565b6000821415611357576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161134e906136ec565b60405180910390fd5b60006006838154811061136d5761136c613ba9565b5b9060005260206000209060040201905060006007600085815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002090508281600001541015611418576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161140f906137cc565b60405180910390fd5b61142184611ab9565b600061146b826001015461145d64e8d4a5100061144f8760030154876000015461277190919063ffffffff16565b6127ec90919063ffffffff16565b61283690919063ffffffff16565b9050600081111561150c576114c881600a60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461288090919063ffffffff16565b600a60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505b61152384836000015461283690919063ffffffff16565b826000018190555061155d64e8d4a5100061154f8560030154856000015461277190919063ffffffff16565b6127ec90919063ffffffff16565b82600101819055506115b433858560000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166128de9092919063ffffffff16565b843373ffffffffffffffffffffffffffffffffffffffff167ff279e6a1f5e320cca91135676d9cb6e44ca8a08c0b88342bcdb1144f6511b568866040516115fb919061386c565b60405180910390a35050505050565b600073ffffffffffffffffffffffffffffffffffffffff16600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16141561169c576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016116939061384c565b60405180910390fd5b6000600682815481106116b2576116b1613ba9565b5b9060005260206000209060040201905060008160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905060008173ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016117269190613542565b60206040518083038186803b15801561173e57600080fd5b505afa158015611752573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906117769190613139565b90506117c5600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16828473ffffffffffffffffffffffffffffffffffffffff166129f59092919063ffffffff16565b6000600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663ce5494bb846040518263ffffffff1660e01b815260040161182291906135e6565b602060405180830381600087803b15801561183c57600080fd5b505af1158015611850573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906118749190613072565b90508073ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016118af9190613542565b60206040518083038186803b1580156118c757600080fd5b505afa1580156118db573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906118ff9190613139565b8214611940576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016119379061380c565b60405180910390fd5b808460000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050505050565b60095481565b611998612964565b73ffffffffffffffffffffffffffffffffffffffff166119b66120bc565b73ffffffffffffffffffffffffffffffffffffffff1614611a0c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611a039061378c565b60405180910390fd5b600160405180604001604052808473ffffffffffffffffffffffffffffffffffffffff16815260200183815250908060018154018082558091505060019003906000526020600020906002020160009091909190915060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506020820151816001015550505050565b600060068281548110611acf57611ace613ba9565b5b9060005260206000209060040201905080600201544311611af05750611c64565b60008160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401611b4f9190613542565b60206040518083038186803b158015611b6757600080fd5b505afa158015611b7b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611b9f9190613139565b905060008111611bb9574382600201819055505050611c64565b6000611bc98360020154436120e5565b90506000611c0c600854611bfe8660010154611bf06003548761277190919063ffffffff16565b61277190919063ffffffff16565b6127ec90919063ffffffff16565b9050611c4e611c3b84611c2d64e8d4a510008561277190919063ffffffff16565b6127ec90919063ffffffff16565b856003015461288090919063ffffffff16565b8460030181905550438460020181905550505050505b50565b600060068281548110611c7d57611c7c613ba9565b5b9060005260206000209060040201905060006007600084815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000209050611d343382600001548460000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166128de9092919063ffffffff16565b823373ffffffffffffffffffffffffffffffffffffffff167fbb757047c2b5f3974fe26b7c10f732e7bce710b0952a71082702781e62ae05958360000154604051611d7f919061386c565b60405180910390a36000816000018190555060008160010181905550505050565b60035481565b611dae612964565b73ffffffffffffffffffffffffffffffffffffffff16611dcc6120bc565b73ffffffffffffffffffffffffffffffffffffffff1614611e22576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611e199061378c565b60405180910390fd5b8060048190555050565b60018181548110611e3c57600080fd5b90600052602060002090600202016000915090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060010154905082565b6000600680549050905060005b81811015611eaf57611e9e81611ab9565b80611ea890613b02565b9050611e8d565b5050565b611ebb612964565b73ffffffffffffffffffffffffffffffffffffffff16611ed96120bc565b73ffffffffffffffffffffffffffffffffffffffff1614611f2f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611f269061378c565b60405180910390fd5b8015611f3e57611f3d611e80565b5b611f8a82611f7c60068681548110611f5957611f58613ba9565b5b90600052602060002090600402016001015460085461283690919063ffffffff16565b61288090919063ffffffff16565b6008819055508160068481548110611fa557611fa4613ba9565b5b906000526020600020906004020160010181905550505050565b611fc7612964565b73ffffffffffffffffffffffffffffffffffffffff16611fe56120bc565b73ffffffffffffffffffffffffffffffffffffffff161461203b576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016120329061378c565b60405180910390fd5b6120456000612b53565b565b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60045481565b6000600a60008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600061210e600454612100858561283690919063ffffffff16565b61277190919063ffffffff16565b905092915050565b6007602052816000526040600020602052806000526040600020600091509150508060000154908060010154905082565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600a6020528060005260406000206000915090505481565b60008214156121c9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016121c09061374c565b60405180910390fd5b6000600683815481106121df576121de613ba9565b5b9060005260206000209060040201905060006007600085815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020905061224c84611ab9565b6000816000015411156123465760006122a3826001015461229564e8d4a510006122878760030154876000015461277190919063ffffffff16565b6127ec90919063ffffffff16565b61283690919063ffffffff16565b905060008111156123445761230081600a60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461288090919063ffffffff16565b600a60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505b505b6123973330858560000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1661296c909392919063ffffffff16565b6123ae83826000015461288090919063ffffffff16565b81600001819055506123e864e8d4a510006123da8460030154846000015461277190919063ffffffff16565b6127ec90919063ffffffff16565b8160010181905550833373ffffffffffffffffffffffffffffffffffffffff167f90890809c654f11d6e72a28fa60149770a0d11ec6c92319d6ceb2bb0a4ea1a1585604051612437919061386c565b60405180910390a350505050565b61244d612964565b73ffffffffffffffffffffffffffffffffffffffff1661246b6120bc565b73ffffffffffffffffffffffffffffffffffffffff16146124c1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016124b89061378c565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415612531576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612528906136ac565b60405180910390fd5b61253a81612b53565b50565b6000806006848154811061255457612553613ba9565b5b9060005260206000209060040201905060006007600086815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020905060008260030154905060008360000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016126209190613542565b60206040518083038186803b15801561263857600080fd5b505afa15801561264c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906126709190613139565b9050836002015443118015612686575060008114155b1561272157600061269b8560020154436120e5565b905060006126de6008546126d088600101546126c26003548761277190919063ffffffff16565b61277190919063ffffffff16565b6127ec90919063ffffffff16565b905061271c61270d846126ff64e8d4a510008561277190919063ffffffff16565b6127ec90919063ffffffff16565b8561288090919063ffffffff16565b935050505b612765836001015461275764e8d4a5100061274986886000015461277190919063ffffffff16565b6127ec90919063ffffffff16565b61283690919063ffffffff16565b94505050505092915050565b60008083141561278457600090506127e6565b600082846127929190613969565b90508284826127a19190613938565b146127e1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016127d89061376c565b60405180910390fd5b809150505b92915050565b600061282e83836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f000000000000815250612c17565b905092915050565b600061287883836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250612c7a565b905092915050565b600080828461288f91906138e2565b9050838110156128d4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016128cb9061370c565b60405180910390fd5b8091505092915050565b61295f8363a9059cbb60e01b84846040516024016128fd9291906135bd565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050612cde565b505050565b600033905090565b6129ef846323b872dd60e01b85858560405160240161298d93929190613586565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050612cde565b50505050565b6000811480612a8e575060008373ffffffffffffffffffffffffffffffffffffffff1663dd62ed3e30856040518363ffffffff1660e01b8152600401612a3c92919061355d565b60206040518083038186803b158015612a5457600080fd5b505afa158015612a68573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612a8c9190613139565b145b612acd576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612ac49061382c565b60405180910390fd5b612b4e8363095ea7b360e01b8484604051602401612aec9291906135bd565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050612cde565b505050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b60008083118290612c5e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612c55919061368a565b60405180910390fd5b5060008385612c6d9190613938565b9050809150509392505050565b6000838311158290612cc2576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612cb9919061368a565b60405180910390fd5b5060008385612cd191906139c3565b9050809150509392505050565b6000612d40826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65648152508573ffffffffffffffffffffffffffffffffffffffff16612da59092919063ffffffff16565b9050600081511115612da05780806020019051810190612d609190613045565b612d9f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612d96906137ec565b60405180910390fd5b5b505050565b6060612db48484600085612dbd565b90509392505050565b606082471015612e02576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612df99061372c565b60405180910390fd5b612e0b85612ed1565b612e4a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612e41906137ac565b60405180910390fd5b6000808673ffffffffffffffffffffffffffffffffffffffff168587604051612e73919061352b565b60006040518083038185875af1925050503d8060008114612eb0576040519150601f19603f3d011682016040523d82523d6000602084013e612eb5565b606091505b5091509150612ec5828286612ef4565b92505050949350505050565b6000808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b60608315612f0457829050612f54565b600083511115612f175782518084602001fd5b816040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612f4b919061368a565b60405180910390fd5b9392505050565b600081359050612f6a81613eea565b92915050565b600081359050612f7f81613f01565b92915050565b600081519050612f9481613f01565b92915050565b600081359050612fa981613f18565b92915050565b600081519050612fbe81613f18565b92915050565b600081359050612fd381613f2f565b92915050565b600081359050612fe881613f46565b92915050565b600081359050612ffd81613f5d565b92915050565b60008151905061301281613f5d565b92915050565b60006020828403121561302e5761302d613bd8565b5b600061303c84828501612f5b565b91505092915050565b60006020828403121561305b5761305a613bd8565b5b600061306984828501612f85565b91505092915050565b60006020828403121561308857613087613bd8565b5b600061309684828501612faf565b91505092915050565b600080604083850312156130b6576130b5613bd8565b5b60006130c485828601612fc4565b92505060206130d585828601612fee565b9150509250929050565b6000602082840312156130f5576130f4613bd8565b5b600061310384828501612fd9565b91505092915050565b60006020828403121561312257613121613bd8565b5b600061313084828501612fee565b91505092915050565b60006020828403121561314f5761314e613bd8565b5b600061315d84828501613003565b91505092915050565b6000806040838503121561317d5761317c613bd8565b5b600061318b85828601612fee565b925050602061319c85828601612f5b565b9150509250929050565b6000806000606084860312156131bf576131be613bd8565b5b60006131cd86828701612fee565b93505060206131de86828701612f9a565b92505060406131ef86828701612f70565b9150509250925092565b600080604083850312156132105761320f613bd8565b5b600061321e85828601612fee565b925050602061322f85828601612fee565b9150509250929050565b60008060006060848603121561325257613251613bd8565b5b600061326086828701612fee565b935050602061327186828701612fee565b925050604061328286828701612f70565b9150509250925092565b613295816139f7565b82525050565b60006132a6826138b0565b6132b081856138c6565b93506132c0818560208601613acf565b80840191505092915050565b6132d581613a75565b82525050565b6132e481613a87565b82525050565b6132f381613a99565b82525050565b6000613304826138bb565b61330e81856138d1565b935061331e818560208601613acf565b61332781613bdd565b840191505092915050565b600061333f6026836138d1565b915061334a82613bee565b604082019050919050565b60006133626013836138d1565b915061336d82613c3d565b602082019050919050565b6000613385601b836138d1565b915061339082613c66565b602082019050919050565b60006133a8601b836138d1565b91506133b382613c8f565b602082019050919050565b60006133cb6026836138d1565b91506133d682613cb8565b604082019050919050565b60006133ee6018836138d1565b91506133f982613d07565b602082019050919050565b60006134116021836138d1565b915061341c82613d30565b604082019050919050565b60006134346020836138d1565b915061343f82613d7f565b602082019050919050565b6000613457601d836138d1565b915061346282613da8565b602082019050919050565b600061347a6012836138d1565b915061348582613dd1565b602082019050919050565b600061349d602a836138d1565b91506134a882613dfa565b604082019050919050565b60006134c0600c836138d1565b91506134cb82613e49565b602082019050919050565b60006134e36036836138d1565b91506134ee82613e72565b604082019050919050565b60006135066014836138d1565b915061351182613ec1565b602082019050919050565b61352581613a6b565b82525050565b6000613537828461329b565b915081905092915050565b6000602082019050613557600083018461328c565b92915050565b6000604082019050613572600083018561328c565b61357f602083018461328c565b9392505050565b600060608201905061359b600083018661328c565b6135a8602083018561328c565b6135b5604083018461351c565b949350505050565b60006040820190506135d2600083018561328c565b6135df602083018461351c565b9392505050565b60006020820190506135fb60008301846132cc565b92915050565b600060808201905061361660008301876132cc565b613623602083018661351c565b613630604083018561351c565b61363d606083018461351c565b95945050505050565b600060408201905061365b60008301856132db565b613668602083018461351c565b9392505050565b600060208201905061368460008301846132ea565b92915050565b600060208201905081810360008301526136a481846132f9565b905092915050565b600060208201905081810360008301526136c581613332565b9050919050565b600060208201905081810360008301526136e581613355565b9050919050565b6000602082019050818103600083015261370581613378565b9050919050565b600060208201905081810360008301526137258161339b565b9050919050565b60006020820190508181036000830152613745816133be565b9050919050565b60006020820190508181036000830152613765816133e1565b9050919050565b6000602082019050818103600083015261378581613404565b9050919050565b600060208201905081810360008301526137a581613427565b9050919050565b600060208201905081810360008301526137c58161344a565b9050919050565b600060208201905081810360008301526137e58161346d565b9050919050565b6000602082019050818103600083015261380581613490565b9050919050565b60006020820190508181036000830152613825816134b3565b9050919050565b60006020820190508181036000830152613845816134d6565b9050919050565b60006020820190508181036000830152613865816134f9565b9050919050565b6000602082019050613881600083018461351c565b92915050565b600060408201905061389c600083018561351c565b6138a9602083018461351c565b9392505050565b600081519050919050565b600081519050919050565b600081905092915050565b600082825260208201905092915050565b60006138ed82613a6b565b91506138f883613a6b565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0382111561392d5761392c613b4b565b5b828201905092915050565b600061394382613a6b565b915061394e83613a6b565b92508261395e5761395d613b7a565b5b828204905092915050565b600061397482613a6b565b915061397f83613a6b565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04831182151516156139b8576139b7613b4b565b5b828202905092915050565b60006139ce82613a6b565b91506139d983613a6b565b9250828210156139ec576139eb613b4b565b5b828203905092915050565b6000613a0282613a4b565b9050919050565b60008115159050919050565b6000613a20826139f7565b9050919050565b6000613a32826139f7565b9050919050565b6000613a44826139f7565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b6000613a8082613aab565b9050919050565b6000613a9282613aab565b9050919050565b6000613aa482613aab565b9050919050565b6000613ab682613abd565b9050919050565b6000613ac882613a4b565b9050919050565b60005b83811015613aed578082015181840152602081019050613ad2565b83811115613afc576000848401525b50505050565b6000613b0d82613a6b565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415613b4057613b3f613b4b565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600080fd5b6000601f19601f8301169050919050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b7f506f776572206973206e6f7420656e6f75676800000000000000000000000000600082015250565b7f776974686472617720506f77657220627920756e7374616b696e670000000000600082015250565b7f536166654d6174683a206164646974696f6e206f766572666c6f770000000000600082015250565b7f416464726573733a20696e73756666696369656e742062616c616e636520666f60008201527f722063616c6c0000000000000000000000000000000000000000000000000000602082015250565b7f6465706f73697420506f776572206279207374616b696e670000000000000000600082015250565b7f536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f60008201527f7700000000000000000000000000000000000000000000000000000000000000602082015250565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b7f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000600082015250565b7f77697468647261773a206e6f7420676f6f640000000000000000000000000000600082015250565b7f5361666545524332303a204552433230206f7065726174696f6e20646964206e60008201527f6f74207375636365656400000000000000000000000000000000000000000000602082015250565b7f6d6967726174653a206261640000000000000000000000000000000000000000600082015250565b7f5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f60008201527f20746f206e6f6e2d7a65726f20616c6c6f77616e636500000000000000000000602082015250565b7f6d6967726174653a206e6f206d69677261746f72000000000000000000000000600082015250565b613ef3816139f7565b8114613efe57600080fd5b50565b613f0a81613a09565b8114613f1557600080fd5b50565b613f2181613a15565b8114613f2c57600080fd5b50565b613f3881613a27565b8114613f4357600080fd5b50565b613f4f81613a39565b8114613f5a57600080fd5b50565b613f6681613a6b565b8114613f7157600080fd5b5056fea2646970667358221220db217bfbe705683e7b534bbc98e376d0970ceae3cc096b62152a224709176d9b64736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1F0 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x5FFE6146 GT PUSH2 0x10F JUMPI DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0xA2 JUMPI DUP1 PUSH4 0xD209DB8C GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xD209DB8C EQ PUSH2 0x55A JUMPI DUP1 PUSH4 0xE2BBB158 EQ PUSH2 0x58A JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x5A6 JUMPI DUP1 PUSH4 0xF3239AB5 EQ PUSH2 0x5C2 JUMPI PUSH2 0x1F0 JUMP JUMPDEST DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x4BD JUMPI DUP1 PUSH4 0x8DBB1E3A EQ PUSH2 0x4DB JUMPI DUP1 PUSH4 0x93F1A40B EQ PUSH2 0x50B JUMPI DUP1 PUSH4 0xCB3CBA55 EQ PUSH2 0x53C JUMPI PUSH2 0x1F0 JUMP JUMPDEST DUP1 PUSH4 0x715018A6 GT PUSH2 0xDE JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x447 JUMPI DUP1 PUSH4 0x7CD07E47 EQ PUSH2 0x451 JUMPI DUP1 PUSH4 0x8AA28550 EQ PUSH2 0x46F JUMPI DUP1 PUSH4 0x8C51793B EQ PUSH2 0x48D JUMPI PUSH2 0x1F0 JUMP JUMPDEST DUP1 PUSH4 0x5FFE6146 EQ PUSH2 0x3D4 JUMPI DUP1 PUSH4 0x61C1B724 EQ PUSH2 0x3F0 JUMPI DUP1 PUSH4 0x630B5BA1 EQ PUSH2 0x421 JUMPI DUP1 PUSH4 0x64482F79 EQ PUSH2 0x42B JUMPI PUSH2 0x1F0 JUMP JUMPDEST DUP1 PUSH4 0x41441D3B GT PUSH2 0x187 JUMPI DUP1 PUSH4 0x4EA2813C GT PUSH2 0x156 JUMPI DUP1 PUSH4 0x4EA2813C EQ PUSH2 0x362 JUMPI DUP1 PUSH4 0x51EB05A6 EQ PUSH2 0x37E JUMPI DUP1 PUSH4 0x5312EA8E EQ PUSH2 0x39A JUMPI DUP1 PUSH4 0x5990C569 EQ PUSH2 0x3B6 JUMPI PUSH2 0x1F0 JUMP JUMPDEST DUP1 PUSH4 0x41441D3B EQ PUSH2 0x2F0 JUMPI DUP1 PUSH4 0x441A3E70 EQ PUSH2 0x30C JUMPI DUP1 PUSH4 0x454B0608 EQ PUSH2 0x328 JUMPI DUP1 PUSH4 0x48CD4CB1 EQ PUSH2 0x344 JUMPI PUSH2 0x1F0 JUMP JUMPDEST DUP1 PUSH4 0x1D5FBD87 GT PUSH2 0x1C3 JUMPI DUP1 PUSH4 0x1D5FBD87 EQ PUSH2 0x280 JUMPI DUP1 PUSH4 0x1EAAA045 EQ PUSH2 0x29C JUMPI DUP1 PUSH4 0x23CF3118 EQ PUSH2 0x2B8 JUMPI DUP1 PUSH4 0x3DF7AFF3 EQ PUSH2 0x2D4 JUMPI PUSH2 0x1F0 JUMP JUMPDEST DUP1 PUSH4 0x81E3EDA EQ PUSH2 0x1F5 JUMPI DUP1 PUSH4 0x1058D281 EQ PUSH2 0x213 JUMPI DUP1 PUSH4 0x1526FE27 EQ PUSH2 0x22F JUMPI DUP1 PUSH4 0x17CAF6F1 EQ PUSH2 0x262 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1FD PUSH2 0x5F2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x20A SWAP2 SWAP1 PUSH2 0x386C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x22D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x228 SWAP2 SWAP1 PUSH2 0x310C JUMP JUMPDEST PUSH2 0x5FF JUMP JUMPDEST STOP JUMPDEST PUSH2 0x249 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x244 SWAP2 SWAP1 PUSH2 0x310C JUMP JUMPDEST PUSH2 0x8BE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x259 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3601 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x26A PUSH2 0x91E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x277 SWAP2 SWAP1 PUSH2 0x386C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x29A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x295 SWAP2 SWAP1 PUSH2 0x31F9 JUMP JUMPDEST PUSH2 0x924 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2B6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2B1 SWAP2 SWAP1 PUSH2 0x31A6 JUMP JUMPDEST PUSH2 0xDB8 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2D2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2CD SWAP2 SWAP1 PUSH2 0x30DF JUMP JUMPDEST PUSH2 0xF45 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2EE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2E9 SWAP2 SWAP1 PUSH2 0x310C JUMP JUMPDEST PUSH2 0x1005 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x30A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x305 SWAP2 SWAP1 PUSH2 0x310C JUMP JUMPDEST PUSH2 0x108B JUMP JUMPDEST STOP JUMPDEST PUSH2 0x326 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x321 SWAP2 SWAP1 PUSH2 0x31F9 JUMP JUMPDEST PUSH2 0x1313 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x342 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x33D SWAP2 SWAP1 PUSH2 0x310C JUMP JUMPDEST PUSH2 0x160A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x34C PUSH2 0x198A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x359 SWAP2 SWAP1 PUSH2 0x386C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x37C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x377 SWAP2 SWAP1 PUSH2 0x309F JUMP JUMPDEST PUSH2 0x1990 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x398 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x393 SWAP2 SWAP1 PUSH2 0x310C JUMP JUMPDEST PUSH2 0x1AB9 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3B4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3AF SWAP2 SWAP1 PUSH2 0x310C JUMP JUMPDEST PUSH2 0x1C67 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3BE PUSH2 0x1DA0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3CB SWAP2 SWAP1 PUSH2 0x386C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3EE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3E9 SWAP2 SWAP1 PUSH2 0x310C JUMP JUMPDEST PUSH2 0x1DA6 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x40A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x405 SWAP2 SWAP1 PUSH2 0x310C JUMP JUMPDEST PUSH2 0x1E2C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x418 SWAP3 SWAP2 SWAP1 PUSH2 0x3646 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x429 PUSH2 0x1E80 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x445 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x440 SWAP2 SWAP1 PUSH2 0x3239 JUMP JUMPDEST PUSH2 0x1EB3 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x44F PUSH2 0x1FBF JUMP JUMPDEST STOP JUMPDEST PUSH2 0x459 PUSH2 0x2047 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x466 SWAP2 SWAP1 PUSH2 0x366F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x477 PUSH2 0x206D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x484 SWAP2 SWAP1 PUSH2 0x386C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4A7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4A2 SWAP2 SWAP1 PUSH2 0x3018 JUMP JUMPDEST PUSH2 0x2073 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4B4 SWAP2 SWAP1 PUSH2 0x386C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4C5 PUSH2 0x20BC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4D2 SWAP2 SWAP1 PUSH2 0x3542 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4F5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4F0 SWAP2 SWAP1 PUSH2 0x31F9 JUMP JUMPDEST PUSH2 0x20E5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x502 SWAP2 SWAP1 PUSH2 0x386C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x525 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x520 SWAP2 SWAP1 PUSH2 0x3166 JUMP JUMPDEST PUSH2 0x2116 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x533 SWAP3 SWAP2 SWAP1 PUSH2 0x3887 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x544 PUSH2 0x2147 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x551 SWAP2 SWAP1 PUSH2 0x35E6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x574 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x56F SWAP2 SWAP1 PUSH2 0x3018 JUMP JUMPDEST PUSH2 0x216D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x581 SWAP2 SWAP1 PUSH2 0x386C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x5A4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x59F SWAP2 SWAP1 PUSH2 0x31F9 JUMP JUMPDEST PUSH2 0x2185 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x5C0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5BB SWAP2 SWAP1 PUSH2 0x3018 JUMP JUMPDEST PUSH2 0x2445 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x5DC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5D7 SWAP2 SWAP1 PUSH2 0x3166 JUMP JUMPDEST PUSH2 0x253D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5E9 SWAP2 SWAP1 PUSH2 0x386C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH1 0x6 DUP1 SLOAD SWAP1 POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 DUP2 SLOAD DUP2 LT PUSH2 0x616 JUMPI PUSH2 0x615 PUSH2 0x3BA9 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x4 MUL ADD SWAP1 POP PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 DUP1 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP DUP3 DUP2 PUSH1 0x0 ADD SLOAD LT ISZERO PUSH2 0x6C1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6B8 SWAP1 PUSH2 0x37CC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x6CB PUSH1 0x0 PUSH2 0x1AB9 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x715 DUP3 PUSH1 0x1 ADD SLOAD PUSH2 0x707 PUSH5 0xE8D4A51000 PUSH2 0x6F9 DUP8 PUSH1 0x3 ADD SLOAD DUP8 PUSH1 0x0 ADD SLOAD PUSH2 0x2771 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x27EC SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x2836 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 GT ISZERO PUSH2 0x7B6 JUMPI PUSH2 0x772 DUP2 PUSH1 0xA PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x2880 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0xA PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP JUMPDEST PUSH1 0x0 DUP5 GT ISZERO PUSH2 0x82E JUMPI PUSH2 0x7D6 DUP5 DUP4 PUSH1 0x0 ADD SLOAD PUSH2 0x2836 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP3 PUSH1 0x0 ADD DUP2 SWAP1 SSTORE POP PUSH2 0x82D CALLER DUP6 DUP6 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x28DE SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST JUMPDEST PUSH2 0x860 PUSH5 0xE8D4A51000 PUSH2 0x852 DUP6 PUSH1 0x3 ADD SLOAD DUP6 PUSH1 0x0 ADD SLOAD PUSH2 0x2771 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x27EC SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP3 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xF279E6A1F5E320CCA91135676D9CB6E44CA8A08C0B88342BCDB1144F6511B568 DUP7 PUSH1 0x40 MLOAD PUSH2 0x8B0 SWAP2 SWAP1 PUSH2 0x386C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH1 0x6 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x8CE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x4 MUL ADD PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 DUP1 PUSH1 0x2 ADD SLOAD SWAP1 DUP1 PUSH1 0x3 ADD SLOAD SWAP1 POP DUP5 JUMP JUMPDEST PUSH1 0x8 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x6 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x93A JUMPI PUSH2 0x939 PUSH2 0x3BA9 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x4 MUL ADD SWAP1 POP PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP PUSH1 0x0 DUP3 PUSH1 0x3 ADD SLOAD SWAP1 POP PUSH1 0x0 DUP4 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA06 SWAP2 SWAP1 PUSH2 0x3542 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xA1E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xA32 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xA56 SWAP2 SWAP1 PUSH2 0x3139 JUMP JUMPDEST SWAP1 POP DUP4 PUSH1 0x2 ADD SLOAD NUMBER GT DUP1 ISZERO PUSH2 0xA6C JUMPI POP PUSH1 0x0 DUP2 EQ ISZERO JUMPDEST ISZERO PUSH2 0xB07 JUMPI PUSH1 0x0 PUSH2 0xA81 DUP6 PUSH1 0x2 ADD SLOAD NUMBER PUSH2 0x20E5 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xAC4 PUSH1 0x8 SLOAD PUSH2 0xAB6 DUP9 PUSH1 0x1 ADD SLOAD PUSH2 0xAA8 PUSH1 0x3 SLOAD DUP8 PUSH2 0x2771 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x2771 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x27EC SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0xB02 PUSH2 0xAF3 DUP5 PUSH2 0xAE5 PUSH5 0xE8D4A51000 DUP6 PUSH2 0x2771 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x27EC SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP6 PUSH2 0x2880 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP4 POP POP POP JUMPDEST PUSH1 0x0 PUSH2 0xB4D DUP5 PUSH1 0x1 ADD SLOAD PUSH2 0xB3F PUSH5 0xE8D4A51000 PUSH2 0xB31 DUP8 DUP10 PUSH1 0x0 ADD SLOAD PUSH2 0x2771 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x27EC SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x2836 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x1 DUP9 DUP2 SLOAD DUP2 LT PUSH2 0xB65 JUMPI PUSH2 0xB64 PUSH2 0x3BA9 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD SWAP1 POP PUSH1 0x0 PUSH2 0xBC9 PUSH1 0xA PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD DUP5 PUSH2 0x2880 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP DUP2 PUSH1 0x1 ADD SLOAD DUP2 GT ISZERO PUSH2 0xC00 JUMPI PUSH1 0x0 DUP9 EQ ISZERO PUSH2 0xBEB JUMPI PUSH2 0xBEA PUSH1 0x0 PUSH2 0x5FF JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP9 EQ PUSH2 0xBFF JUMPI PUSH2 0xBFE DUP9 PUSH1 0x0 PUSH2 0x1313 JUMP JUMPDEST JUMPDEST JUMPDEST PUSH1 0xA PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD DUP3 PUSH1 0x1 ADD SLOAD LT PUSH2 0xC85 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC7C SWAP1 PUSH2 0x36CC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xCDB DUP3 PUSH1 0x1 ADD SLOAD PUSH1 0xA PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x2836 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0xA PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x17E5883C CALLER PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD7B SWAP2 SWAP1 PUSH2 0x3542 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xD95 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xDA9 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0xDC0 PUSH2 0x2964 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xDDE PUSH2 0x20BC JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xE34 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE2B SWAP1 PUSH2 0x378C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 ISZERO PUSH2 0xE43 JUMPI PUSH2 0xE42 PUSH2 0x1E80 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH1 0x9 SLOAD NUMBER GT PUSH2 0xE56 JUMPI PUSH1 0x9 SLOAD PUSH2 0xE58 JUMP JUMPDEST NUMBER JUMPDEST SWAP1 POP PUSH2 0xE6F DUP5 PUSH1 0x8 SLOAD PUSH2 0x2880 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x8 DUP2 SWAP1 SSTORE POP PUSH1 0x6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP7 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE POP SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x4 MUL ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD SSTORE POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0xF4D PUSH2 0x2964 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xF6B PUSH2 0x20BC JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xFC1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFB8 SWAP1 PUSH2 0x378C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x5 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH2 0x100D PUSH2 0x2964 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x102B PUSH2 0x20BC JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1081 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1078 SWAP1 PUSH2 0x378C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x3 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 DUP2 SLOAD DUP2 LT PUSH2 0x10A2 JUMPI PUSH2 0x10A1 PUSH2 0x3BA9 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x4 MUL ADD SWAP1 POP PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 DUP1 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP PUSH2 0x1110 PUSH1 0x0 PUSH2 0x1AB9 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 ADD SLOAD GT ISZERO PUSH2 0x120A JUMPI PUSH1 0x0 PUSH2 0x1167 DUP3 PUSH1 0x1 ADD SLOAD PUSH2 0x1159 PUSH5 0xE8D4A51000 PUSH2 0x114B DUP8 PUSH1 0x3 ADD SLOAD DUP8 PUSH1 0x0 ADD SLOAD PUSH2 0x2771 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x27EC SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x2836 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 GT ISZERO PUSH2 0x1208 JUMPI PUSH2 0x11C4 DUP2 PUSH1 0xA PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x2880 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0xA PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP JUMPDEST POP JUMPDEST PUSH1 0x0 DUP4 GT ISZERO PUSH2 0x1284 JUMPI PUSH2 0x1264 CALLER ADDRESS DUP6 DUP6 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x296C SWAP1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x127B DUP4 DUP3 PUSH1 0x0 ADD SLOAD PUSH2 0x2880 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP2 PUSH1 0x0 ADD DUP2 SWAP1 SSTORE POP JUMPDEST PUSH2 0x12B6 PUSH5 0xE8D4A51000 PUSH2 0x12A8 DUP5 PUSH1 0x3 ADD SLOAD DUP5 PUSH1 0x0 ADD SLOAD PUSH2 0x2771 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x27EC SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP2 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x90890809C654F11D6E72A28FA60149770A0D11EC6C92319D6CEB2BB0A4EA1A15 DUP6 PUSH1 0x40 MLOAD PUSH2 0x1306 SWAP2 SWAP1 PUSH2 0x386C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 EQ ISZERO PUSH2 0x1357 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x134E SWAP1 PUSH2 0x36EC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x6 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x136D JUMPI PUSH2 0x136C PUSH2 0x3BA9 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x4 MUL ADD SWAP1 POP PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP DUP3 DUP2 PUSH1 0x0 ADD SLOAD LT ISZERO PUSH2 0x1418 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x140F SWAP1 PUSH2 0x37CC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1421 DUP5 PUSH2 0x1AB9 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x146B DUP3 PUSH1 0x1 ADD SLOAD PUSH2 0x145D PUSH5 0xE8D4A51000 PUSH2 0x144F DUP8 PUSH1 0x3 ADD SLOAD DUP8 PUSH1 0x0 ADD SLOAD PUSH2 0x2771 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x27EC SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x2836 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 GT ISZERO PUSH2 0x150C JUMPI PUSH2 0x14C8 DUP2 PUSH1 0xA PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x2880 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0xA PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP JUMPDEST PUSH2 0x1523 DUP5 DUP4 PUSH1 0x0 ADD SLOAD PUSH2 0x2836 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP3 PUSH1 0x0 ADD DUP2 SWAP1 SSTORE POP PUSH2 0x155D PUSH5 0xE8D4A51000 PUSH2 0x154F DUP6 PUSH1 0x3 ADD SLOAD DUP6 PUSH1 0x0 ADD SLOAD PUSH2 0x2771 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x27EC SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP3 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP PUSH2 0x15B4 CALLER DUP6 DUP6 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x28DE SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP5 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xF279E6A1F5E320CCA91135676D9CB6E44CA8A08C0B88342BCDB1144F6511B568 DUP7 PUSH1 0x40 MLOAD PUSH2 0x15FB SWAP2 SWAP1 PUSH2 0x386C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x169C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1693 SWAP1 PUSH2 0x384C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x6 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x16B2 JUMPI PUSH2 0x16B1 PUSH2 0x3BA9 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x4 MUL ADD SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH1 0x0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1726 SWAP2 SWAP1 PUSH2 0x3542 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x173E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1752 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1776 SWAP2 SWAP1 PUSH2 0x3139 JUMP JUMPDEST SWAP1 POP PUSH2 0x17C5 PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x29F5 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xCE5494BB DUP5 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1822 SWAP2 SWAP1 PUSH2 0x35E6 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x183C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1850 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1874 SWAP2 SWAP1 PUSH2 0x3072 JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x18AF SWAP2 SWAP1 PUSH2 0x3542 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x18C7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x18DB JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x18FF SWAP2 SWAP1 PUSH2 0x3139 JUMP JUMPDEST DUP3 EQ PUSH2 0x1940 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1937 SWAP1 PUSH2 0x380C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 DUP5 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x9 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x1998 PUSH2 0x2964 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x19B6 PUSH2 0x20BC JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1A0C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1A03 SWAP1 PUSH2 0x378C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE POP SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x6 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x1ACF JUMPI PUSH2 0x1ACE PUSH2 0x3BA9 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x4 MUL ADD SWAP1 POP DUP1 PUSH1 0x2 ADD SLOAD NUMBER GT PUSH2 0x1AF0 JUMPI POP PUSH2 0x1C64 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1B4F SWAP2 SWAP1 PUSH2 0x3542 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1B67 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1B7B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1B9F SWAP2 SWAP1 PUSH2 0x3139 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 GT PUSH2 0x1BB9 JUMPI NUMBER DUP3 PUSH1 0x2 ADD DUP2 SWAP1 SSTORE POP POP POP PUSH2 0x1C64 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1BC9 DUP4 PUSH1 0x2 ADD SLOAD NUMBER PUSH2 0x20E5 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1C0C PUSH1 0x8 SLOAD PUSH2 0x1BFE DUP7 PUSH1 0x1 ADD SLOAD PUSH2 0x1BF0 PUSH1 0x3 SLOAD DUP8 PUSH2 0x2771 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x2771 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x27EC SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0x1C4E PUSH2 0x1C3B DUP5 PUSH2 0x1C2D PUSH5 0xE8D4A51000 DUP6 PUSH2 0x2771 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x27EC SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP6 PUSH1 0x3 ADD SLOAD PUSH2 0x2880 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP5 PUSH1 0x3 ADD DUP2 SWAP1 SSTORE POP NUMBER DUP5 PUSH1 0x2 ADD DUP2 SWAP1 SSTORE POP POP POP POP POP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x6 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x1C7D JUMPI PUSH2 0x1C7C PUSH2 0x3BA9 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x4 MUL ADD SWAP1 POP PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP PUSH2 0x1D34 CALLER DUP3 PUSH1 0x0 ADD SLOAD DUP5 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x28DE SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP3 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xBB757047C2B5F3974FE26B7C10F732E7BCE710B0952A71082702781E62AE0595 DUP4 PUSH1 0x0 ADD SLOAD PUSH1 0x40 MLOAD PUSH2 0x1D7F SWAP2 SWAP1 PUSH2 0x386C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x0 DUP2 PUSH1 0x0 ADD DUP2 SWAP1 SSTORE POP PUSH1 0x0 DUP2 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x1DAE PUSH2 0x2964 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1DCC PUSH2 0x20BC JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1E22 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1E19 SWAP1 PUSH2 0x378C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x4 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x1E3C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 POP DUP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x6 DUP1 SLOAD SWAP1 POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1EAF JUMPI PUSH2 0x1E9E DUP2 PUSH2 0x1AB9 JUMP JUMPDEST DUP1 PUSH2 0x1EA8 SWAP1 PUSH2 0x3B02 JUMP JUMPDEST SWAP1 POP PUSH2 0x1E8D JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x1EBB PUSH2 0x2964 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1ED9 PUSH2 0x20BC JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1F2F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1F26 SWAP1 PUSH2 0x378C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 ISZERO PUSH2 0x1F3E JUMPI PUSH2 0x1F3D PUSH2 0x1E80 JUMP JUMPDEST JUMPDEST PUSH2 0x1F8A DUP3 PUSH2 0x1F7C PUSH1 0x6 DUP7 DUP2 SLOAD DUP2 LT PUSH2 0x1F59 JUMPI PUSH2 0x1F58 PUSH2 0x3BA9 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x4 MUL ADD PUSH1 0x1 ADD SLOAD PUSH1 0x8 SLOAD PUSH2 0x2836 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x2880 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x8 DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x6 DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x1FA5 JUMPI PUSH2 0x1FA4 PUSH2 0x3BA9 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x4 MUL ADD PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP POP POP POP JUMP JUMPDEST PUSH2 0x1FC7 PUSH2 0x2964 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1FE5 PUSH2 0x20BC JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x203B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2032 SWAP1 PUSH2 0x378C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x2045 PUSH1 0x0 PUSH2 0x2B53 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x210E PUSH1 0x4 SLOAD PUSH2 0x2100 DUP6 DUP6 PUSH2 0x2836 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x2771 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x7 PUSH1 0x20 MSTORE DUP2 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP2 POP POP DUP1 PUSH1 0x0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 POP DUP3 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0xA PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP3 EQ ISZERO PUSH2 0x21C9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x21C0 SWAP1 PUSH2 0x374C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x6 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x21DF JUMPI PUSH2 0x21DE PUSH2 0x3BA9 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x4 MUL ADD SWAP1 POP PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP PUSH2 0x224C DUP5 PUSH2 0x1AB9 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 ADD SLOAD GT ISZERO PUSH2 0x2346 JUMPI PUSH1 0x0 PUSH2 0x22A3 DUP3 PUSH1 0x1 ADD SLOAD PUSH2 0x2295 PUSH5 0xE8D4A51000 PUSH2 0x2287 DUP8 PUSH1 0x3 ADD SLOAD DUP8 PUSH1 0x0 ADD SLOAD PUSH2 0x2771 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x27EC SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x2836 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 GT ISZERO PUSH2 0x2344 JUMPI PUSH2 0x2300 DUP2 PUSH1 0xA PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x2880 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0xA PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP JUMPDEST POP JUMPDEST PUSH2 0x2397 CALLER ADDRESS DUP6 DUP6 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x296C SWAP1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x23AE DUP4 DUP3 PUSH1 0x0 ADD SLOAD PUSH2 0x2880 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP2 PUSH1 0x0 ADD DUP2 SWAP1 SSTORE POP PUSH2 0x23E8 PUSH5 0xE8D4A51000 PUSH2 0x23DA DUP5 PUSH1 0x3 ADD SLOAD DUP5 PUSH1 0x0 ADD SLOAD PUSH2 0x2771 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x27EC SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP2 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP DUP4 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x90890809C654F11D6E72A28FA60149770A0D11EC6C92319D6CEB2BB0A4EA1A15 DUP6 PUSH1 0x40 MLOAD PUSH2 0x2437 SWAP2 SWAP1 PUSH2 0x386C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH2 0x244D PUSH2 0x2964 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x246B PUSH2 0x20BC JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x24C1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x24B8 SWAP1 PUSH2 0x378C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x2531 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2528 SWAP1 PUSH2 0x36AC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x253A DUP2 PUSH2 0x2B53 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x6 DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x2554 JUMPI PUSH2 0x2553 PUSH2 0x3BA9 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x4 MUL ADD SWAP1 POP PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP PUSH1 0x0 DUP3 PUSH1 0x3 ADD SLOAD SWAP1 POP PUSH1 0x0 DUP4 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2620 SWAP2 SWAP1 PUSH2 0x3542 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2638 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x264C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2670 SWAP2 SWAP1 PUSH2 0x3139 JUMP JUMPDEST SWAP1 POP DUP4 PUSH1 0x2 ADD SLOAD NUMBER GT DUP1 ISZERO PUSH2 0x2686 JUMPI POP PUSH1 0x0 DUP2 EQ ISZERO JUMPDEST ISZERO PUSH2 0x2721 JUMPI PUSH1 0x0 PUSH2 0x269B DUP6 PUSH1 0x2 ADD SLOAD NUMBER PUSH2 0x20E5 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x26DE PUSH1 0x8 SLOAD PUSH2 0x26D0 DUP9 PUSH1 0x1 ADD SLOAD PUSH2 0x26C2 PUSH1 0x3 SLOAD DUP8 PUSH2 0x2771 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x2771 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x27EC SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0x271C PUSH2 0x270D DUP5 PUSH2 0x26FF PUSH5 0xE8D4A51000 DUP6 PUSH2 0x2771 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x27EC SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP6 PUSH2 0x2880 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP4 POP POP POP JUMPDEST PUSH2 0x2765 DUP4 PUSH1 0x1 ADD SLOAD PUSH2 0x2757 PUSH5 0xE8D4A51000 PUSH2 0x2749 DUP7 DUP9 PUSH1 0x0 ADD SLOAD PUSH2 0x2771 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x27EC SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x2836 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP5 POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 EQ ISZERO PUSH2 0x2784 JUMPI PUSH1 0x0 SWAP1 POP PUSH2 0x27E6 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP5 PUSH2 0x2792 SWAP2 SWAP1 PUSH2 0x3969 JUMP JUMPDEST SWAP1 POP DUP3 DUP5 DUP3 PUSH2 0x27A1 SWAP2 SWAP1 PUSH2 0x3938 JUMP JUMPDEST EQ PUSH2 0x27E1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x27D8 SWAP1 PUSH2 0x376C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x282E DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1A DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x536166654D6174683A206469766973696F6E206279207A65726F000000000000 DUP2 MSTORE POP PUSH2 0x2C17 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2878 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1E DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x536166654D6174683A207375627472616374696F6E206F766572666C6F770000 DUP2 MSTORE POP PUSH2 0x2C7A JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 DUP5 PUSH2 0x288F SWAP2 SWAP1 PUSH2 0x38E2 JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x28D4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x28CB SWAP1 PUSH2 0x370C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x295F DUP4 PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP5 DUP5 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x28FD SWAP3 SWAP2 SWAP1 PUSH2 0x35BD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x2CDE JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x29EF DUP5 PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP6 DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x298D SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3586 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x2CDE JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 EQ DUP1 PUSH2 0x2A8E JUMPI POP PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xDD62ED3E ADDRESS DUP6 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2A3C SWAP3 SWAP2 SWAP1 PUSH2 0x355D JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2A54 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2A68 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2A8C SWAP2 SWAP1 PUSH2 0x3139 JUMP JUMPDEST EQ JUMPDEST PUSH2 0x2ACD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2AC4 SWAP1 PUSH2 0x382C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x2B4E DUP4 PUSH4 0x95EA7B3 PUSH1 0xE0 SHL DUP5 DUP5 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x2AEC SWAP3 SWAP2 SWAP1 PUSH2 0x35BD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x2CDE JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 GT DUP3 SWAP1 PUSH2 0x2C5E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2C55 SWAP2 SWAP1 PUSH2 0x368A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x0 DUP4 DUP6 PUSH2 0x2C6D SWAP2 SWAP1 PUSH2 0x3938 JUMP JUMPDEST SWAP1 POP DUP1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP4 DUP4 GT ISZERO DUP3 SWAP1 PUSH2 0x2CC2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2CB9 SWAP2 SWAP1 PUSH2 0x368A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x0 DUP4 DUP6 PUSH2 0x2CD1 SWAP2 SWAP1 PUSH2 0x39C3 JUMP JUMPDEST SWAP1 POP DUP1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2D40 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564 DUP2 MSTORE POP DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x2DA5 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD GT ISZERO PUSH2 0x2DA0 JUMPI DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x2D60 SWAP2 SWAP1 PUSH2 0x3045 JUMP JUMPDEST PUSH2 0x2D9F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2D96 SWAP1 PUSH2 0x37EC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x2DB4 DUP5 DUP5 PUSH1 0x0 DUP6 PUSH2 0x2DBD JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 SELFBALANCE LT ISZERO PUSH2 0x2E02 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2DF9 SWAP1 PUSH2 0x372C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x2E0B DUP6 PUSH2 0x2ED1 JUMP JUMPDEST PUSH2 0x2E4A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2E41 SWAP1 PUSH2 0x37AC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 DUP8 PUSH1 0x40 MLOAD PUSH2 0x2E73 SWAP2 SWAP1 PUSH2 0x352B JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x2EB0 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x2EB5 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x2EC5 DUP3 DUP3 DUP7 PUSH2 0x2EF4 JUMP JUMPDEST SWAP3 POP POP POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0x2F04 JUMPI DUP3 SWAP1 POP PUSH2 0x2F54 JUMP JUMPDEST PUSH1 0x0 DUP4 MLOAD GT ISZERO PUSH2 0x2F17 JUMPI DUP3 MLOAD DUP1 DUP5 PUSH1 0x20 ADD REVERT JUMPDEST DUP2 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2F4B SWAP2 SWAP1 PUSH2 0x368A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2F6A DUP2 PUSH2 0x3EEA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2F7F DUP2 PUSH2 0x3F01 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x2F94 DUP2 PUSH2 0x3F01 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2FA9 DUP2 PUSH2 0x3F18 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x2FBE DUP2 PUSH2 0x3F18 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2FD3 DUP2 PUSH2 0x3F2F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2FE8 DUP2 PUSH2 0x3F46 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2FFD DUP2 PUSH2 0x3F5D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x3012 DUP2 PUSH2 0x3F5D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x302E JUMPI PUSH2 0x302D PUSH2 0x3BD8 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x303C DUP5 DUP3 DUP6 ADD PUSH2 0x2F5B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x305B JUMPI PUSH2 0x305A PUSH2 0x3BD8 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3069 DUP5 DUP3 DUP6 ADD PUSH2 0x2F85 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3088 JUMPI PUSH2 0x3087 PUSH2 0x3BD8 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3096 DUP5 DUP3 DUP6 ADD PUSH2 0x2FAF JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x30B6 JUMPI PUSH2 0x30B5 PUSH2 0x3BD8 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x30C4 DUP6 DUP3 DUP7 ADD PUSH2 0x2FC4 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x30D5 DUP6 DUP3 DUP7 ADD PUSH2 0x2FEE JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x30F5 JUMPI PUSH2 0x30F4 PUSH2 0x3BD8 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3103 DUP5 DUP3 DUP6 ADD PUSH2 0x2FD9 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3122 JUMPI PUSH2 0x3121 PUSH2 0x3BD8 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3130 DUP5 DUP3 DUP6 ADD PUSH2 0x2FEE JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x314F JUMPI PUSH2 0x314E PUSH2 0x3BD8 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x315D DUP5 DUP3 DUP6 ADD PUSH2 0x3003 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x317D JUMPI PUSH2 0x317C PUSH2 0x3BD8 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x318B DUP6 DUP3 DUP7 ADD PUSH2 0x2FEE JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x319C DUP6 DUP3 DUP7 ADD PUSH2 0x2F5B JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x31BF JUMPI PUSH2 0x31BE PUSH2 0x3BD8 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x31CD DUP7 DUP3 DUP8 ADD PUSH2 0x2FEE JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x31DE DUP7 DUP3 DUP8 ADD PUSH2 0x2F9A JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x31EF DUP7 DUP3 DUP8 ADD PUSH2 0x2F70 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x3210 JUMPI PUSH2 0x320F PUSH2 0x3BD8 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x321E DUP6 DUP3 DUP7 ADD PUSH2 0x2FEE JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x322F DUP6 DUP3 DUP7 ADD PUSH2 0x2FEE JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x3252 JUMPI PUSH2 0x3251 PUSH2 0x3BD8 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3260 DUP7 DUP3 DUP8 ADD PUSH2 0x2FEE JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x3271 DUP7 DUP3 DUP8 ADD PUSH2 0x2FEE JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x3282 DUP7 DUP3 DUP8 ADD PUSH2 0x2F70 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH2 0x3295 DUP2 PUSH2 0x39F7 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x32A6 DUP3 PUSH2 0x38B0 JUMP JUMPDEST PUSH2 0x32B0 DUP2 DUP6 PUSH2 0x38C6 JUMP JUMPDEST SWAP4 POP PUSH2 0x32C0 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x3ACF JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x32D5 DUP2 PUSH2 0x3A75 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x32E4 DUP2 PUSH2 0x3A87 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x32F3 DUP2 PUSH2 0x3A99 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3304 DUP3 PUSH2 0x38BB JUMP JUMPDEST PUSH2 0x330E DUP2 DUP6 PUSH2 0x38D1 JUMP JUMPDEST SWAP4 POP PUSH2 0x331E DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x3ACF JUMP JUMPDEST PUSH2 0x3327 DUP2 PUSH2 0x3BDD JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x333F PUSH1 0x26 DUP4 PUSH2 0x38D1 JUMP JUMPDEST SWAP2 POP PUSH2 0x334A DUP3 PUSH2 0x3BEE JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3362 PUSH1 0x13 DUP4 PUSH2 0x38D1 JUMP JUMPDEST SWAP2 POP PUSH2 0x336D DUP3 PUSH2 0x3C3D JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3385 PUSH1 0x1B DUP4 PUSH2 0x38D1 JUMP JUMPDEST SWAP2 POP PUSH2 0x3390 DUP3 PUSH2 0x3C66 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x33A8 PUSH1 0x1B DUP4 PUSH2 0x38D1 JUMP JUMPDEST SWAP2 POP PUSH2 0x33B3 DUP3 PUSH2 0x3C8F JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x33CB PUSH1 0x26 DUP4 PUSH2 0x38D1 JUMP JUMPDEST SWAP2 POP PUSH2 0x33D6 DUP3 PUSH2 0x3CB8 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x33EE PUSH1 0x18 DUP4 PUSH2 0x38D1 JUMP JUMPDEST SWAP2 POP PUSH2 0x33F9 DUP3 PUSH2 0x3D07 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3411 PUSH1 0x21 DUP4 PUSH2 0x38D1 JUMP JUMPDEST SWAP2 POP PUSH2 0x341C DUP3 PUSH2 0x3D30 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3434 PUSH1 0x20 DUP4 PUSH2 0x38D1 JUMP JUMPDEST SWAP2 POP PUSH2 0x343F DUP3 PUSH2 0x3D7F JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3457 PUSH1 0x1D DUP4 PUSH2 0x38D1 JUMP JUMPDEST SWAP2 POP PUSH2 0x3462 DUP3 PUSH2 0x3DA8 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x347A PUSH1 0x12 DUP4 PUSH2 0x38D1 JUMP JUMPDEST SWAP2 POP PUSH2 0x3485 DUP3 PUSH2 0x3DD1 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x349D PUSH1 0x2A DUP4 PUSH2 0x38D1 JUMP JUMPDEST SWAP2 POP PUSH2 0x34A8 DUP3 PUSH2 0x3DFA JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x34C0 PUSH1 0xC DUP4 PUSH2 0x38D1 JUMP JUMPDEST SWAP2 POP PUSH2 0x34CB DUP3 PUSH2 0x3E49 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x34E3 PUSH1 0x36 DUP4 PUSH2 0x38D1 JUMP JUMPDEST SWAP2 POP PUSH2 0x34EE DUP3 PUSH2 0x3E72 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3506 PUSH1 0x14 DUP4 PUSH2 0x38D1 JUMP JUMPDEST SWAP2 POP PUSH2 0x3511 DUP3 PUSH2 0x3EC1 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3525 DUP2 PUSH2 0x3A6B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3537 DUP3 DUP5 PUSH2 0x329B JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x3557 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x328C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x3572 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x328C JUMP JUMPDEST PUSH2 0x357F PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x328C JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x359B PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x328C JUMP JUMPDEST PUSH2 0x35A8 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x328C JUMP JUMPDEST PUSH2 0x35B5 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x351C JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x35D2 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x328C JUMP JUMPDEST PUSH2 0x35DF PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x351C JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x35FB PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x32CC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x3616 PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x32CC JUMP JUMPDEST PUSH2 0x3623 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x351C JUMP JUMPDEST PUSH2 0x3630 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x351C JUMP JUMPDEST PUSH2 0x363D PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x351C JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x365B PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x32DB JUMP JUMPDEST PUSH2 0x3668 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x351C JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x3684 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x32EA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x36A4 DUP2 DUP5 PUSH2 0x32F9 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x36C5 DUP2 PUSH2 0x3332 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x36E5 DUP2 PUSH2 0x3355 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3705 DUP2 PUSH2 0x3378 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3725 DUP2 PUSH2 0x339B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3745 DUP2 PUSH2 0x33BE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3765 DUP2 PUSH2 0x33E1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3785 DUP2 PUSH2 0x3404 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x37A5 DUP2 PUSH2 0x3427 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x37C5 DUP2 PUSH2 0x344A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x37E5 DUP2 PUSH2 0x346D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3805 DUP2 PUSH2 0x3490 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3825 DUP2 PUSH2 0x34B3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3845 DUP2 PUSH2 0x34D6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3865 DUP2 PUSH2 0x34F9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x3881 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x351C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x389C PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x351C JUMP JUMPDEST PUSH2 0x38A9 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x351C JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x38ED DUP3 PUSH2 0x3A6B JUMP JUMPDEST SWAP2 POP PUSH2 0x38F8 DUP4 PUSH2 0x3A6B JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x392D JUMPI PUSH2 0x392C PUSH2 0x3B4B JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3943 DUP3 PUSH2 0x3A6B JUMP JUMPDEST SWAP2 POP PUSH2 0x394E DUP4 PUSH2 0x3A6B JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x395E JUMPI PUSH2 0x395D PUSH2 0x3B7A JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3974 DUP3 PUSH2 0x3A6B JUMP JUMPDEST SWAP2 POP PUSH2 0x397F DUP4 PUSH2 0x3A6B JUMP JUMPDEST SWAP3 POP DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x39B8 JUMPI PUSH2 0x39B7 PUSH2 0x3B4B JUMP JUMPDEST JUMPDEST DUP3 DUP3 MUL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x39CE DUP3 PUSH2 0x3A6B JUMP JUMPDEST SWAP2 POP PUSH2 0x39D9 DUP4 PUSH2 0x3A6B JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0x39EC JUMPI PUSH2 0x39EB PUSH2 0x3B4B JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3A02 DUP3 PUSH2 0x3A4B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3A20 DUP3 PUSH2 0x39F7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3A32 DUP3 PUSH2 0x39F7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3A44 DUP3 PUSH2 0x39F7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3A80 DUP3 PUSH2 0x3AAB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3A92 DUP3 PUSH2 0x3AAB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3AA4 DUP3 PUSH2 0x3AAB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3AB6 DUP3 PUSH2 0x3ABD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3AC8 DUP3 PUSH2 0x3A4B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x3AED JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x3AD2 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x3AFC JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3B0D DUP3 PUSH2 0x3A6B JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 EQ ISZERO PUSH2 0x3B40 JUMPI PUSH2 0x3B3F PUSH2 0x3B4B JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x506F776572206973206E6F7420656E6F75676800000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x776974686472617720506F77657220627920756E7374616B696E670000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x416464726573733A20696E73756666696369656E742062616C616E636520666F PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x722063616C6C0000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x6465706F73697420506F776572206279207374616B696E670000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x536166654D6174683A206D756C7469706C69636174696F6E206F766572666C6F PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7700000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x77697468647261773A206E6F7420676F6F640000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x5361666545524332303A204552433230206F7065726174696F6E20646964206E PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6F74207375636365656400000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x6D6967726174653A206261640000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x5361666545524332303A20617070726F76652066726F6D206E6F6E2D7A65726F PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x20746F206E6F6E2D7A65726F20616C6C6F77616E636500000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x6D6967726174653A206E6F206D69677261746F72000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH2 0x3EF3 DUP2 PUSH2 0x39F7 JUMP JUMPDEST DUP2 EQ PUSH2 0x3EFE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x3F0A DUP2 PUSH2 0x3A09 JUMP JUMPDEST DUP2 EQ PUSH2 0x3F15 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x3F21 DUP2 PUSH2 0x3A15 JUMP JUMPDEST DUP2 EQ PUSH2 0x3F2C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x3F38 DUP2 PUSH2 0x3A27 JUMP JUMPDEST DUP2 EQ PUSH2 0x3F43 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x3F4F DUP2 PUSH2 0x3A39 JUMP JUMPDEST DUP2 EQ PUSH2 0x3F5A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x3F66 DUP2 PUSH2 0x3A6B JUMP JUMPDEST DUP2 EQ PUSH2 0x3F71 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xDB 0x21 PUSH28 0xFBE705683E7B534BBC98E376D0970CEAE3CC096B62152A224709176D SWAP12 PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "22111:12768:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;26867:95;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;33573:747;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;23943:26;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;24184:34;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;25460:1268;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;27131:560;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;28169:102;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;34767:109;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;32724:797;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;31884:787;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;28394:491;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;24276:25;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;25246:206;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;30276:690;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;34399:356;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;23657:28;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;26736:123;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;23533:26;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;30020:180;;;:::i;:::-;;27788:305;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;20756:103;;;:::i;:::-;;23880:29;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;23740:35;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;25120:118;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;20105:87;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;28961:144;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;24025:64;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;23593:17;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;24310:47;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;31036:796;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;21014:201;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;29170:767;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;26867:95;26912:7;26939:8;:15;;;;26932:22;;26867:95;:::o;33573:747::-;33630:21;33654:8;33663:1;33654:11;;;;;;;;:::i;:::-;;;;;;;;;;;;33630:35;;33676:21;33700:8;:11;33709:1;33700:11;;;;;;;;;;;:23;33712:10;33700:23;;;;;;;;;;;;;;;33676:47;;33757:7;33742:4;:11;;;:22;;33734:53;;;;;;;;;;;;:::i;:::-;;;;;;;;;33798:13;33809:1;33798:10;:13::i;:::-;33822:15;33840:69;33893:4;:15;;;33840:48;33883:4;33840:38;33856:4;:21;;;33840:4;:11;;;:15;;:38;;;;:::i;:::-;:42;;:48;;;;:::i;:::-;:52;;:69;;;;:::i;:::-;33822:87;;33933:1;33923:7;:11;33920:107;;;33978:37;34007:7;33978:12;:24;33991:10;33978:24;;;;;;;;;;;;;;;;:28;;:37;;;;:::i;:::-;33951:12;:24;33964:10;33951:24;;;;;;;;;;;;;;;:64;;;;33920:107;34050:1;34040:7;:11;34037:151;;;34082:24;34098:7;34082:4;:11;;;:15;;:24;;;;:::i;:::-;34068:4;:11;;:38;;;;34121:55;34155:10;34168:7;34121:4;:12;;;;;;;;;;;;:25;;;;:55;;;;;:::i;:::-;34037:151;34216:48;34259:4;34216:38;34232:4;:21;;;34216:4;:11;;;:15;;:38;;;;:::i;:::-;:42;;:48;;;;:::i;:::-;34198:4;:15;;:66;;;;34301:1;34289:10;34280:32;;;34304:7;34280:32;;;;;;:::i;:::-;;;;;;;;33619:701;;;33573:747;:::o;23943:26::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;24184:34::-;;;;:::o;25460:1268::-;25531:21;25555:8;25564:4;25555:14;;;;;;;;:::i;:::-;;;;;;;;;;;;25531:38;;25580:21;25604:8;:14;25613:4;25604:14;;;;;;;;;;;:26;25619:10;25604:26;;;;;;;;;;;;;;;25580:50;;25641:24;25668:4;:21;;;25641:48;;25700:16;25719:4;:12;;;;;;;;;;;;:22;;;25750:4;25719:37;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;25700:56;;25786:4;:20;;;25771:12;:35;:52;;;;;25822:1;25810:8;:13;;25771:52;25767:354;;;25840:18;25861:49;25875:4;:20;;;25897:12;25861:13;:49::i;:::-;25840:70;;25925:19;25947:71;26002:15;;25947:50;25981:4;:15;;;25947:29;25962:13;;25947:10;:14;;:29;;;;:::i;:::-;:33;;:50;;;;:::i;:::-;:54;;:71;;;;:::i;:::-;25925:93;;26052:57;26073:35;26099:8;26073:21;26089:4;26073:11;:15;;:21;;;;:::i;:::-;:25;;:35;;;;:::i;:::-;26052:16;:20;;:57;;;;:::i;:::-;26033:76;;25825:296;;25767:354;26131:15;26149:64;26197:4;:15;;;26149:43;26187:4;26149:33;26165:16;26149:4;:11;;;:15;;:33;;;;:::i;:::-;:37;;:43;;;;:::i;:::-;:47;;:64;;;;:::i;:::-;26131:82;;26224:20;26247:8;26256:5;26247:15;;;;;;;;:::i;:::-;;;;;;;;;;;;26224:38;;26273:13;26289:37;26301:12;:24;26314:10;26301:24;;;;;;;;;;;;;;;;26289:7;:11;;:37;;;;:::i;:::-;26273:53;;26348:3;:9;;;26340:5;:17;26337:188;;;26384:1;26376:4;:9;26373:63;;;26405:15;26418:1;26405:12;:15::i;:::-;26373:63;26461:1;26453:4;:9;26450:64;;26482:16;26491:4;26496:1;26482:8;:16::i;:::-;26450:64;26337:188;26555:12;:24;26568:10;26555:24;;;;;;;;;;;;;;;;26543:3;:9;;;:36;26535:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;26641:39;26670:3;:9;;;26641:12;:24;26654:10;26641:24;;;;;;;;;;;;;;;;:28;;:39;;;;:::i;:::-;26614:12;:24;26627:10;26614:24;;;;;;;;;;;;;;;:66;;;;26691:3;:7;;;;;;;;;;;;:17;;;26709:10;26691:29;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;25520:1208;;;;;;;25460:1268;;:::o;27131:560::-;20336:12;:10;:12::i;:::-;20325:23;;:7;:5;:7::i;:::-;:23;;;20317:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;27234:11:::1;27230:61;;;27262:17;:15;:17::i;:::-;27230:61;27301:23;27342:10;;27327:12;:25;:53;;27370:10;;27327:53;;;27355:12;27327:53;27301:79;;27409:32;27429:11;27409:15;;:19;;:32;;;;:::i;:::-;27391:15;:50;;;;27452:8;27480:192;;;;;;;;27517:8;27480:192;;;;;;27556:11;27480:192;;;;27603:15;27480:192;;;;27655:1;27480:192;;::::0;27452:231:::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;27219:472;27131:560:::0;;;:::o;28169:102::-;20336:12;:10;:12::i;:::-;20325:23;;:7;:5;:7::i;:::-;:23;;;20317:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;28254:9:::1;28243:8;;:20;;;;;;;;;;;;;;;;;;28169:102:::0;:::o;34767:109::-;20336:12;:10;:12::i;:::-;20325:23;;:7;:5;:7::i;:::-;:23;;;20317:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;34859:9:::1;34843:13;:25;;;;34767:109:::0;:::o;32724:797::-;32781:21;32805:8;32814:1;32805:11;;;;;;;;:::i;:::-;;;;;;;;;;;;32781:35;;32827:21;32851:8;:11;32860:1;32851:11;;;;;;;;;;;:32;32871:10;32851:32;;;;;;;;;;;;;;;32827:56;;32904:13;32915:1;32904:10;:13::i;:::-;32946:1;32932:4;:11;;;:15;32928:282;;;32964:15;32982:69;33035:4;:15;;;32982:48;33025:4;32982:38;32998:4;:21;;;32982:4;:11;;;:15;;:38;;;;:::i;:::-;:42;;:48;;;;:::i;:::-;:52;;:69;;;;:::i;:::-;32964:87;;33079:1;33069:7;:11;33066:133;;;33137:46;33175:7;33137:12;:33;33158:10;33137:33;;;;;;;;;;;;;;;;:37;;:46;;;;:::i;:::-;33101:12;:33;33122:10;33101:33;;;;;;;;;;;;;;;:82;;;;33066:133;32949:261;32928:282;33233:1;33223:7;:11;33220:170;;;33251:74;33289:10;33310:4;33317:7;33251:4;:12;;;;;;;;;;;;:29;;;;:74;;;;;;:::i;:::-;33354:24;33370:7;33354:4;:11;;;:15;;:24;;;;:::i;:::-;33340:4;:11;;:38;;;;33220:170;33418:48;33461:4;33418:38;33434:4;:21;;;33418:4;:11;;;:15;;:38;;;;:::i;:::-;:42;;:48;;;;:::i;:::-;33400:4;:15;;:66;;;;33502:1;33490:10;33482:31;;;33505:7;33482:31;;;;;;:::i;:::-;;;;;;;;32770:751;;32724:797;:::o;31884:787::-;31970:1;31962:4;:9;;31953:50;;;;;;;;;;;;:::i;:::-;;;;;;;;;32016:21;32040:8;32049:4;32040:14;;;;;;;;:::i;:::-;;;;;;;;;;;;32016:38;;32065:21;32089:8;:14;32098:4;32089:14;;;;;;;;;;;:26;32104:10;32089:26;;;;;;;;;;;;;;;32065:50;;32149:7;32134:4;:11;;;:22;;32126:53;;;;;;;;;;;;:::i;:::-;;;;;;;;;32190:16;32201:4;32190:10;:16::i;:::-;32217:15;32235:69;32288:4;:15;;;32235:48;32278:4;32235:38;32251:4;:21;;;32235:4;:11;;;:15;;:38;;;;:::i;:::-;:42;;:48;;;;:::i;:::-;:52;;:69;;;;:::i;:::-;32217:87;;32328:1;32318:7;:11;32315:106;;;32372:37;32401:7;32372:12;:24;32385:10;32372:24;;;;;;;;;;;;;;;;:28;;:37;;;;:::i;:::-;32345:12;:24;32358:10;32345:24;;;;;;;;;;;;;;;:64;;;;32315:106;32445:24;32461:7;32445:4;:11;;;:15;;:24;;;;:::i;:::-;32431:4;:11;;:38;;;;32498:48;32541:4;32498:38;32514:4;:21;;;32498:4;:11;;;:15;;:38;;;;:::i;:::-;:42;;:48;;;;:::i;:::-;32480:4;:15;;:66;;;;32557:55;32591:10;32604:7;32557:4;:12;;;;;;;;;;;;:25;;;;:55;;;;;:::i;:::-;32649:4;32637:10;32628:35;;;32655:7;32628:35;;;;;;:::i;:::-;;;;;;;;31940:731;;;31884:787;;:::o;28394:491::-;28480:1;28451:31;;28459:8;;;;;;;;;;;28451:31;;;;28443:64;;;;;;;;;;;;:::i;:::-;;;;;;;;;28518:21;28542:8;28551:4;28542:14;;;;;;;;:::i;:::-;;;;;;;;;;;;28518:38;;28567:14;28584:4;:12;;;;;;;;;;;;28567:29;;28607:11;28621:7;:17;;;28647:4;28621:32;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;28607:46;;28664:43;28692:8;;;;;;;;;;;28703:3;28664:7;:19;;;;:43;;;;;:::i;:::-;28718:17;28738:8;;;;;;;;;;;:16;;;28755:7;28738:25;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;28718:45;;28789:10;:20;;;28818:4;28789:35;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;28782:3;:42;28774:67;;;;;;;;;;;;:::i;:::-;;;;;;;;;28867:10;28852:4;:12;;;:25;;;;;;;;;;;;;;;;;;28432:453;;;;28394:491;:::o;24276:25::-;;;;:::o;25246:206::-;20336:12;:10;:12::i;:::-;20325:23;;:7;:5;:7::i;:::-;:23;;;20317:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;25320:8:::1;25348:85;;;;;;;;25381:4;25348:85;;;;;;25411:6;25348:85;;::::0;25320:124:::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;25246:206:::0;;:::o;30276:690::-;30328:21;30352:8;30361:4;30352:14;;;;;;;;:::i;:::-;;;;;;;;;;;;30328:38;;30397:4;:20;;;30381:12;:36;30377:75;;30434:7;;;30377:75;30462:16;30481:4;:12;;;;;;;;;;;;:22;;;30512:4;30481:37;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;30462:56;;30545:1;30533:8;:13;30529:102;;30586:12;30563:4;:20;;:35;;;;30613:7;;;;30529:102;30641:18;30662:49;30676:4;:20;;;30698:12;30662:13;:49::i;:::-;30641:70;;30722:19;30744:71;30799:15;;30744:50;30778:4;:15;;;30744:29;30759:13;;30744:10;:14;;:29;;;;:::i;:::-;:33;;:50;;;;:::i;:::-;:54;;:71;;;;:::i;:::-;30722:93;;30850:62;30876:35;30902:8;30876:21;30892:4;30876:11;:15;;:21;;;;:::i;:::-;:25;;:35;;;;:::i;:::-;30850:4;:21;;;:25;;:62;;;;:::i;:::-;30826:4;:21;;:86;;;;30946:12;30923:4;:20;;:35;;;;30317:649;;;;30276:690;;:::o;34399:356::-;34458:21;34482:8;34491:4;34482:14;;;;;;;;:::i;:::-;;;;;;;;;;;;34458:38;;34507:21;34531:8;:14;34540:4;34531:14;;;;;;;;;;;:26;34546:10;34531:26;;;;;;;;;;;;;;;34507:50;;34568:59;34602:10;34615:4;:11;;;34568:4;:12;;;;;;;;;;;;:25;;;;:59;;;;;:::i;:::-;34673:4;34661:10;34643:48;;;34679:4;:11;;;34643:48;;;;;;:::i;:::-;;;;;;;;34716:1;34702:4;:11;;:15;;;;34746:1;34728:4;:15;;:19;;;;34447:308;;34399:356;:::o;23657:28::-;;;;:::o;26736:123::-;20336:12;:10;:12::i;:::-;20325:23;;:7;:5;:7::i;:::-;:23;;;20317:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;26835:16:::1;26816;:35;;;;26736:123:::0;:::o;23533:26::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;30020:180::-;30065:14;30082:8;:15;;;;30065:32;;30113:11;30108:85;30136:6;30130:3;:12;30108:85;;;30166:15;30177:3;30166:10;:15::i;:::-;30144:5;;;;:::i;:::-;;;30108:85;;;;30054:146;30020:180::o;27788:305::-;20336:12;:10;:12::i;:::-;20325:23;;:7;:5;:7::i;:::-;:23;;;20317:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;27887:11:::1;27883:61;;;27915:17;:15;:17::i;:::-;27883:61;27972:63;28023:11;27972:46;27992:8;28001:4;27992:14;;;;;;;;:::i;:::-;;;;;;;;;;;;:25;;;27972:15;;:19;;:46;;;;:::i;:::-;:50;;:63;;;;:::i;:::-;27954:15;:81;;;;28074:11;28046:8;28055:4;28046:14;;;;;;;;:::i;:::-;;;;;;;;;;;;:25;;:39;;;;27788:305:::0;;;:::o;20756:103::-;20336:12;:10;:12::i;:::-;20325:23;;:7;:5;:7::i;:::-;:23;;;20317:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;20821:30:::1;20848:1;20821:18;:30::i;:::-;20756:103::o:0;23880:29::-;;;;;;;;;;;;;:::o;23740:35::-;;;;:::o;25120:118::-;25182:7;25209:12;:21;25222:7;25209:21;;;;;;;;;;;;;;;;25202:28;;25120:118;;;:::o;20105:87::-;20151:7;20178:6;;;;;;;;;;;20171:13;;20105:87;:::o;28961:144::-;29033:7;29061:36;29080:16;;29061:14;29069:5;29061:3;:7;;:14;;;;:::i;:::-;:18;;:36;;;;:::i;:::-;29054:43;;28961:144;;;;:::o;24025:64::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;23593:17::-;;;;;;;;;;;;;:::o;24310:47::-;;;;;;;;;;;;;;;;;:::o;31036:796::-;31121:1;31113:4;:9;;31104:47;;;;;;;;;;;;:::i;:::-;;;;;;;;;31164:21;31188:8;31197:4;31188:14;;;;;;;;:::i;:::-;;;;;;;;;;;;31164:38;;31213:21;31237:8;:14;31246:4;31237:14;;;;;;;;;;;:26;31252:10;31237:26;;;;;;;;;;;;;;;31213:50;;31274:16;31285:4;31274:10;:16::i;:::-;31319:1;31305:4;:11;;;:15;31301:263;;;31337:15;31355:69;31408:4;:15;;;31355:48;31398:4;31355:38;31371:4;:21;;;31355:4;:11;;;:15;;:38;;;;:::i;:::-;:42;;:48;;;;:::i;:::-;:52;;:69;;;;:::i;:::-;31337:87;;31452:1;31442:7;:11;31439:114;;;31500:37;31529:7;31500:12;:24;31513:10;31500:24;;;;;;;;;;;;;;;;:28;;:37;;;;:::i;:::-;31473:12;:24;31486:10;31473:24;;;;;;;;;;;;;;;:64;;;;31439:114;31322:242;31301:263;31574:74;31612:10;31633:4;31640:7;31574:4;:12;;;;;;;;;;;;:29;;;;:74;;;;;;:::i;:::-;31673:24;31689:7;31673:4;:11;;;:15;;:24;;;;:::i;:::-;31659:4;:11;;:38;;;;31726:48;31769:4;31726:38;31742:4;:21;;;31726:4;:11;;;:15;;:38;;;;:::i;:::-;:42;;:48;;;;:::i;:::-;31708:4;:15;;:66;;;;31810:4;31798:10;31790:34;;;31816:7;31790:34;;;;;;:::i;:::-;;;;;;;;31091:741;;31036:796;;:::o;21014:201::-;20336:12;:10;:12::i;:::-;20325:23;;:7;:5;:7::i;:::-;:23;;;20317:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;21123:1:::1;21103:22;;:8;:22;;;;21095:73;;;;;;;;;;;;:::i;:::-;;;;;;;;;21179:28;21198:8;21179:18;:28::i;:::-;21014:201:::0;:::o;29170:767::-;29244:7;29263:21;29287:8;29296:4;29287:14;;;;;;;;:::i;:::-;;;;;;;;;;;;29263:38;;29312:21;29336:8;:14;29345:4;29336:14;;;;;;;;;;;:21;29351:5;29336:21;;;;;;;;;;;;;;;29312:45;;29368:24;29395:4;:21;;;29368:48;;29427:16;29446:4;:12;;;;;;;;;;;;:22;;;29477:4;29446:37;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;29427:56;;29513:4;:20;;;29498:12;:35;:52;;;;;29549:1;29537:8;:13;;29498:52;29494:354;;;29567:18;29588:49;29602:4;:20;;;29624:12;29588:13;:49::i;:::-;29567:70;;29652:19;29674:71;29729:15;;29674:50;29708:4;:15;;;29674:29;29689:13;;29674:10;:14;;:29;;;;:::i;:::-;:33;;:50;;;;:::i;:::-;:54;;:71;;;;:::i;:::-;29652:93;;29779:57;29800:35;29826:8;29800:21;29816:4;29800:11;:15;;:21;;;;:::i;:::-;:25;;:35;;;;:::i;:::-;29779:16;:20;;:57;;;;:::i;:::-;29760:76;;29552:296;;29494:354;29865:64;29913:4;:15;;;29865:43;29903:4;29865:33;29881:16;29865:4;:11;;;:15;;:33;;;;:::i;:::-;:37;;:43;;;;:::i;:::-;:47;;:64;;;;:::i;:::-;29858:71;;;;;;29170:767;;;;:::o;1757:471::-;1815:7;2065:1;2060;:6;2056:47;;;2090:1;2083:8;;;;2056:47;2115:9;2131:1;2127;:5;;;;:::i;:::-;2115:17;;2160:1;2155;2151;:5;;;;:::i;:::-;:10;2143:56;;;;;;;;;;;;:::i;:::-;;;;;;;;;2219:1;2212:8;;;1757:471;;;;;:::o;2696:132::-;2754:7;2781:39;2785:1;2788;2781:39;;;;;;;;;;;;;;;;;:3;:39::i;:::-;2774:46;;2696:132;;;;:::o;841:136::-;899:7;926:43;930:1;933;926:43;;;;;;;;;;;;;;;;;:3;:43::i;:::-;919:50;;841:136;;;;:::o;385:181::-;443:7;463:9;479:1;475;:5;;;;:::i;:::-;463:17;;504:1;499;:6;;491:46;;;;;;;;;;;;:::i;:::-;;;;;;;;;557:1;550:8;;;385:181;;;;:::o;16150:211::-;16267:86;16287:5;16317:23;;;16342:2;16346:5;16294:58;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;16267:19;:86::i;:::-;16150:211;;;:::o;19479:98::-;19532:7;19559:10;19552:17;;19479:98;:::o;16369:248::-;16513:96;16533:5;16563:27;;;16592:4;16598:2;16602:5;16540:68;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;16513:19;:96::i;:::-;16369:248;;;;:::o;16886:616::-;17259:1;17250:5;:10;17249:62;;;;17309:1;17266:5;:15;;;17290:4;17297:7;17266:39;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:44;17249:62;17227:166;;;;;;;;;;;;:::i;:::-;;;;;;;;;17404:90;17424:5;17454:22;;;17478:7;17487:5;17431:62;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;17404:19;:90::i;:::-;16886:616;;;:::o;21375:191::-;21449:16;21468:6;;;;;;;;;;;21449:25;;21494:8;21485:6;;:17;;;;;;;;;;;;;;;;;;21549:8;21518:40;;21539:8;21518:40;;;;;;;;;;;;21438:128;21375:191;:::o;3358:345::-;3444:7;3543:1;3539;:5;3546:12;3531:28;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;3570:9;3586:1;3582;:5;;;;:::i;:::-;3570:17;;3694:1;3687:8;;;3358:345;;;;;:::o;1314:192::-;1400:7;1433:1;1428;:6;;1436:12;1420:29;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;1460:9;1476:1;1472;:5;;;;:::i;:::-;1460:17;;1497:1;1490:8;;;1314:192;;;;;:::o;18723:716::-;19147:23;19173:69;19201:4;19173:69;;;;;;;;;;;;;;;;;19181:5;19173:27;;;;:69;;;;;:::i;:::-;19147:95;;19277:1;19257:10;:17;:21;19253:179;;;19354:10;19343:30;;;;;;;;;;;;:::i;:::-;19335:85;;;;;;;;;;;;:::i;:::-;;;;;;;;;19253:179;18793:646;18723:716;;:::o;11566:229::-;11703:12;11735:52;11757:6;11765:4;11771:1;11774:12;11735:21;:52::i;:::-;11728:59;;11566:229;;;;;:::o;12686:510::-;12856:12;12914:5;12889:21;:30;;12881:81;;;;;;;;;;;;:::i;:::-;;;;;;;;;12981:18;12992:6;12981:10;:18::i;:::-;12973:60;;;;;;;;;;;;:::i;:::-;;;;;;;;;13047:12;13061:23;13088:6;:11;;13107:5;13114:4;13088:31;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13046:73;;;;13137:51;13154:7;13163:10;13175:12;13137:16;:51::i;:::-;13130:58;;;;12686:510;;;;;;:::o;8821:326::-;8881:4;9138:1;9116:7;:19;;;:23;9109:30;;8821:326;;;:::o;15372:712::-;15522:12;15551:7;15547:530;;;15582:10;15575:17;;;;15547:530;15716:1;15696:10;:17;:21;15692:374;;;15894:10;15888:17;15955:15;15942:10;15938:2;15934:19;15927:44;15692:374;16037:12;16030:20;;;;;;;;;;;:::i;:::-;;;;;;;;15372:712;;;;;;:::o;7:139:1:-;53:5;91:6;78:20;69:29;;107:33;134:5;107:33;:::i;:::-;7:139;;;;:::o;152:133::-;195:5;233:6;220:20;211:29;;249:30;273:5;249:30;:::i;:::-;152:133;;;;:::o;291:137::-;345:5;376:6;370:13;361:22;;392:30;416:5;392:30;:::i;:::-;291:137;;;;:::o;434:167::-;494:5;532:6;519:20;510:29;;548:47;589:5;548:47;:::i;:::-;434:167;;;;:::o;607:171::-;678:5;709:6;703:13;694:22;;725:47;766:5;725:47;:::i;:::-;607:171;;;;:::o;784:169::-;845:5;883:6;870:20;861:29;;899:48;941:5;899:48;:::i;:::-;784:169;;;;:::o;959:181::-;1026:5;1064:6;1051:20;1042:29;;1080:54;1128:5;1080:54;:::i;:::-;959:181;;;;:::o;1146:139::-;1192:5;1230:6;1217:20;1208:29;;1246:33;1273:5;1246:33;:::i;:::-;1146:139;;;;:::o;1291:143::-;1348:5;1379:6;1373:13;1364:22;;1395:33;1422:5;1395:33;:::i;:::-;1291:143;;;;:::o;1440:329::-;1499:6;1548:2;1536:9;1527:7;1523:23;1519:32;1516:119;;;1554:79;;:::i;:::-;1516:119;1674:1;1699:53;1744:7;1735:6;1724:9;1720:22;1699:53;:::i;:::-;1689:63;;1645:117;1440:329;;;;:::o;1775:345::-;1842:6;1891:2;1879:9;1870:7;1866:23;1862:32;1859:119;;;1897:79;;:::i;:::-;1859:119;2017:1;2042:61;2095:7;2086:6;2075:9;2071:22;2042:61;:::i;:::-;2032:71;;1988:125;1775:345;;;;:::o;2126:379::-;2210:6;2259:2;2247:9;2238:7;2234:23;2230:32;2227:119;;;2265:79;;:::i;:::-;2227:119;2385:1;2410:78;2480:7;2471:6;2460:9;2456:22;2410:78;:::i;:::-;2400:88;;2356:142;2126:379;;;;:::o;2511:504::-;2594:6;2602;2651:2;2639:9;2630:7;2626:23;2622:32;2619:119;;;2657:79;;:::i;:::-;2619:119;2777:1;2802:68;2862:7;2853:6;2842:9;2838:22;2802:68;:::i;:::-;2792:78;;2748:132;2919:2;2945:53;2990:7;2981:6;2970:9;2966:22;2945:53;:::i;:::-;2935:63;;2890:118;2511:504;;;;;:::o;3021:371::-;3101:6;3150:2;3138:9;3129:7;3125:23;3121:32;3118:119;;;3156:79;;:::i;:::-;3118:119;3276:1;3301:74;3367:7;3358:6;3347:9;3343:22;3301:74;:::i;:::-;3291:84;;3247:138;3021:371;;;;:::o;3398:329::-;3457:6;3506:2;3494:9;3485:7;3481:23;3477:32;3474:119;;;3512:79;;:::i;:::-;3474:119;3632:1;3657:53;3702:7;3693:6;3682:9;3678:22;3657:53;:::i;:::-;3647:63;;3603:117;3398:329;;;;:::o;3733:351::-;3803:6;3852:2;3840:9;3831:7;3827:23;3823:32;3820:119;;;3858:79;;:::i;:::-;3820:119;3978:1;4003:64;4059:7;4050:6;4039:9;4035:22;4003:64;:::i;:::-;3993:74;;3949:128;3733:351;;;;:::o;4090:474::-;4158:6;4166;4215:2;4203:9;4194:7;4190:23;4186:32;4183:119;;;4221:79;;:::i;:::-;4183:119;4341:1;4366:53;4411:7;4402:6;4391:9;4387:22;4366:53;:::i;:::-;4356:63;;4312:117;4468:2;4494:53;4539:7;4530:6;4519:9;4515:22;4494:53;:::i;:::-;4484:63;;4439:118;4090:474;;;;;:::o;4570:641::-;4658:6;4666;4674;4723:2;4711:9;4702:7;4698:23;4694:32;4691:119;;;4729:79;;:::i;:::-;4691:119;4849:1;4874:53;4919:7;4910:6;4899:9;4895:22;4874:53;:::i;:::-;4864:63;;4820:117;4976:2;5002:67;5061:7;5052:6;5041:9;5037:22;5002:67;:::i;:::-;4992:77;;4947:132;5118:2;5144:50;5186:7;5177:6;5166:9;5162:22;5144:50;:::i;:::-;5134:60;;5089:115;4570:641;;;;;:::o;5217:474::-;5285:6;5293;5342:2;5330:9;5321:7;5317:23;5313:32;5310:119;;;5348:79;;:::i;:::-;5310:119;5468:1;5493:53;5538:7;5529:6;5518:9;5514:22;5493:53;:::i;:::-;5483:63;;5439:117;5595:2;5621:53;5666:7;5657:6;5646:9;5642:22;5621:53;:::i;:::-;5611:63;;5566:118;5217:474;;;;;:::o;5697:613::-;5771:6;5779;5787;5836:2;5824:9;5815:7;5811:23;5807:32;5804:119;;;5842:79;;:::i;:::-;5804:119;5962:1;5987:53;6032:7;6023:6;6012:9;6008:22;5987:53;:::i;:::-;5977:63;;5933:117;6089:2;6115:53;6160:7;6151:6;6140:9;6136:22;6115:53;:::i;:::-;6105:63;;6060:118;6217:2;6243:50;6285:7;6276:6;6265:9;6261:22;6243:50;:::i;:::-;6233:60;;6188:115;5697:613;;;;;:::o;6316:118::-;6403:24;6421:5;6403:24;:::i;:::-;6398:3;6391:37;6316:118;;:::o;6440:373::-;6544:3;6572:38;6604:5;6572:38;:::i;:::-;6626:88;6707:6;6702:3;6626:88;:::i;:::-;6619:95;;6723:52;6768:6;6763:3;6756:4;6749:5;6745:16;6723:52;:::i;:::-;6800:6;6795:3;6791:16;6784:23;;6548:265;6440:373;;;;:::o;6819:159::-;6920:51;6965:5;6920:51;:::i;:::-;6915:3;6908:64;6819:159;;:::o;6984:161::-;7086:52;7132:5;7086:52;:::i;:::-;7081:3;7074:65;6984:161;;:::o;7151:173::-;7259:58;7311:5;7259:58;:::i;:::-;7254:3;7247:71;7151:173;;:::o;7330:364::-;7418:3;7446:39;7479:5;7446:39;:::i;:::-;7501:71;7565:6;7560:3;7501:71;:::i;:::-;7494:78;;7581:52;7626:6;7621:3;7614:4;7607:5;7603:16;7581:52;:::i;:::-;7658:29;7680:6;7658:29;:::i;:::-;7653:3;7649:39;7642:46;;7422:272;7330:364;;;;:::o;7700:366::-;7842:3;7863:67;7927:2;7922:3;7863:67;:::i;:::-;7856:74;;7939:93;8028:3;7939:93;:::i;:::-;8057:2;8052:3;8048:12;8041:19;;7700:366;;;:::o;8072:::-;8214:3;8235:67;8299:2;8294:3;8235:67;:::i;:::-;8228:74;;8311:93;8400:3;8311:93;:::i;:::-;8429:2;8424:3;8420:12;8413:19;;8072:366;;;:::o;8444:::-;8586:3;8607:67;8671:2;8666:3;8607:67;:::i;:::-;8600:74;;8683:93;8772:3;8683:93;:::i;:::-;8801:2;8796:3;8792:12;8785:19;;8444:366;;;:::o;8816:::-;8958:3;8979:67;9043:2;9038:3;8979:67;:::i;:::-;8972:74;;9055:93;9144:3;9055:93;:::i;:::-;9173:2;9168:3;9164:12;9157:19;;8816:366;;;:::o;9188:::-;9330:3;9351:67;9415:2;9410:3;9351:67;:::i;:::-;9344:74;;9427:93;9516:3;9427:93;:::i;:::-;9545:2;9540:3;9536:12;9529:19;;9188:366;;;:::o;9560:::-;9702:3;9723:67;9787:2;9782:3;9723:67;:::i;:::-;9716:74;;9799:93;9888:3;9799:93;:::i;:::-;9917:2;9912:3;9908:12;9901:19;;9560:366;;;:::o;9932:::-;10074:3;10095:67;10159:2;10154:3;10095:67;:::i;:::-;10088:74;;10171:93;10260:3;10171:93;:::i;:::-;10289:2;10284:3;10280:12;10273:19;;9932:366;;;:::o;10304:::-;10446:3;10467:67;10531:2;10526:3;10467:67;:::i;:::-;10460:74;;10543:93;10632:3;10543:93;:::i;:::-;10661:2;10656:3;10652:12;10645:19;;10304:366;;;:::o;10676:::-;10818:3;10839:67;10903:2;10898:3;10839:67;:::i;:::-;10832:74;;10915:93;11004:3;10915:93;:::i;:::-;11033:2;11028:3;11024:12;11017:19;;10676:366;;;:::o;11048:::-;11190:3;11211:67;11275:2;11270:3;11211:67;:::i;:::-;11204:74;;11287:93;11376:3;11287:93;:::i;:::-;11405:2;11400:3;11396:12;11389:19;;11048:366;;;:::o;11420:::-;11562:3;11583:67;11647:2;11642:3;11583:67;:::i;:::-;11576:74;;11659:93;11748:3;11659:93;:::i;:::-;11777:2;11772:3;11768:12;11761:19;;11420:366;;;:::o;11792:::-;11934:3;11955:67;12019:2;12014:3;11955:67;:::i;:::-;11948:74;;12031:93;12120:3;12031:93;:::i;:::-;12149:2;12144:3;12140:12;12133:19;;11792:366;;;:::o;12164:::-;12306:3;12327:67;12391:2;12386:3;12327:67;:::i;:::-;12320:74;;12403:93;12492:3;12403:93;:::i;:::-;12521:2;12516:3;12512:12;12505:19;;12164:366;;;:::o;12536:::-;12678:3;12699:67;12763:2;12758:3;12699:67;:::i;:::-;12692:74;;12775:93;12864:3;12775:93;:::i;:::-;12893:2;12888:3;12884:12;12877:19;;12536:366;;;:::o;12908:118::-;12995:24;13013:5;12995:24;:::i;:::-;12990:3;12983:37;12908:118;;:::o;13032:271::-;13162:3;13184:93;13273:3;13264:6;13184:93;:::i;:::-;13177:100;;13294:3;13287:10;;13032:271;;;;:::o;13309:222::-;13402:4;13440:2;13429:9;13425:18;13417:26;;13453:71;13521:1;13510:9;13506:17;13497:6;13453:71;:::i;:::-;13309:222;;;;:::o;13537:332::-;13658:4;13696:2;13685:9;13681:18;13673:26;;13709:71;13777:1;13766:9;13762:17;13753:6;13709:71;:::i;:::-;13790:72;13858:2;13847:9;13843:18;13834:6;13790:72;:::i;:::-;13537:332;;;;;:::o;13875:442::-;14024:4;14062:2;14051:9;14047:18;14039:26;;14075:71;14143:1;14132:9;14128:17;14119:6;14075:71;:::i;:::-;14156:72;14224:2;14213:9;14209:18;14200:6;14156:72;:::i;:::-;14238;14306:2;14295:9;14291:18;14282:6;14238:72;:::i;:::-;13875:442;;;;;;:::o;14323:332::-;14444:4;14482:2;14471:9;14467:18;14459:26;;14495:71;14563:1;14552:9;14548:17;14539:6;14495:71;:::i;:::-;14576:72;14644:2;14633:9;14629:18;14620:6;14576:72;:::i;:::-;14323:332;;;;;:::o;14661:250::-;14768:4;14806:2;14795:9;14791:18;14783:26;;14819:85;14901:1;14890:9;14886:17;14877:6;14819:85;:::i;:::-;14661:250;;;;:::o;14917:581::-;15108:4;15146:3;15135:9;15131:19;15123:27;;15160:85;15242:1;15231:9;15227:17;15218:6;15160:85;:::i;:::-;15255:72;15323:2;15312:9;15308:18;15299:6;15255:72;:::i;:::-;15337;15405:2;15394:9;15390:18;15381:6;15337:72;:::i;:::-;15419;15487:2;15476:9;15472:18;15463:6;15419:72;:::i;:::-;14917:581;;;;;;;:::o;15504:362::-;15640:4;15678:2;15667:9;15663:18;15655:26;;15691:86;15774:1;15763:9;15759:17;15750:6;15691:86;:::i;:::-;15787:72;15855:2;15844:9;15840:18;15831:6;15787:72;:::i;:::-;15504:362;;;;;:::o;15872:264::-;15986:4;16024:2;16013:9;16009:18;16001:26;;16037:92;16126:1;16115:9;16111:17;16102:6;16037:92;:::i;:::-;15872:264;;;;:::o;16142:313::-;16255:4;16293:2;16282:9;16278:18;16270:26;;16342:9;16336:4;16332:20;16328:1;16317:9;16313:17;16306:47;16370:78;16443:4;16434:6;16370:78;:::i;:::-;16362:86;;16142:313;;;;:::o;16461:419::-;16627:4;16665:2;16654:9;16650:18;16642:26;;16714:9;16708:4;16704:20;16700:1;16689:9;16685:17;16678:47;16742:131;16868:4;16742:131;:::i;:::-;16734:139;;16461:419;;;:::o;16886:::-;17052:4;17090:2;17079:9;17075:18;17067:26;;17139:9;17133:4;17129:20;17125:1;17114:9;17110:17;17103:47;17167:131;17293:4;17167:131;:::i;:::-;17159:139;;16886:419;;;:::o;17311:::-;17477:4;17515:2;17504:9;17500:18;17492:26;;17564:9;17558:4;17554:20;17550:1;17539:9;17535:17;17528:47;17592:131;17718:4;17592:131;:::i;:::-;17584:139;;17311:419;;;:::o;17736:::-;17902:4;17940:2;17929:9;17925:18;17917:26;;17989:9;17983:4;17979:20;17975:1;17964:9;17960:17;17953:47;18017:131;18143:4;18017:131;:::i;:::-;18009:139;;17736:419;;;:::o;18161:::-;18327:4;18365:2;18354:9;18350:18;18342:26;;18414:9;18408:4;18404:20;18400:1;18389:9;18385:17;18378:47;18442:131;18568:4;18442:131;:::i;:::-;18434:139;;18161:419;;;:::o;18586:::-;18752:4;18790:2;18779:9;18775:18;18767:26;;18839:9;18833:4;18829:20;18825:1;18814:9;18810:17;18803:47;18867:131;18993:4;18867:131;:::i;:::-;18859:139;;18586:419;;;:::o;19011:::-;19177:4;19215:2;19204:9;19200:18;19192:26;;19264:9;19258:4;19254:20;19250:1;19239:9;19235:17;19228:47;19292:131;19418:4;19292:131;:::i;:::-;19284:139;;19011:419;;;:::o;19436:::-;19602:4;19640:2;19629:9;19625:18;19617:26;;19689:9;19683:4;19679:20;19675:1;19664:9;19660:17;19653:47;19717:131;19843:4;19717:131;:::i;:::-;19709:139;;19436:419;;;:::o;19861:::-;20027:4;20065:2;20054:9;20050:18;20042:26;;20114:9;20108:4;20104:20;20100:1;20089:9;20085:17;20078:47;20142:131;20268:4;20142:131;:::i;:::-;20134:139;;19861:419;;;:::o;20286:::-;20452:4;20490:2;20479:9;20475:18;20467:26;;20539:9;20533:4;20529:20;20525:1;20514:9;20510:17;20503:47;20567:131;20693:4;20567:131;:::i;:::-;20559:139;;20286:419;;;:::o;20711:::-;20877:4;20915:2;20904:9;20900:18;20892:26;;20964:9;20958:4;20954:20;20950:1;20939:9;20935:17;20928:47;20992:131;21118:4;20992:131;:::i;:::-;20984:139;;20711:419;;;:::o;21136:::-;21302:4;21340:2;21329:9;21325:18;21317:26;;21389:9;21383:4;21379:20;21375:1;21364:9;21360:17;21353:47;21417:131;21543:4;21417:131;:::i;:::-;21409:139;;21136:419;;;:::o;21561:::-;21727:4;21765:2;21754:9;21750:18;21742:26;;21814:9;21808:4;21804:20;21800:1;21789:9;21785:17;21778:47;21842:131;21968:4;21842:131;:::i;:::-;21834:139;;21561:419;;;:::o;21986:::-;22152:4;22190:2;22179:9;22175:18;22167:26;;22239:9;22233:4;22229:20;22225:1;22214:9;22210:17;22203:47;22267:131;22393:4;22267:131;:::i;:::-;22259:139;;21986:419;;;:::o;22411:222::-;22504:4;22542:2;22531:9;22527:18;22519:26;;22555:71;22623:1;22612:9;22608:17;22599:6;22555:71;:::i;:::-;22411:222;;;;:::o;22639:332::-;22760:4;22798:2;22787:9;22783:18;22775:26;;22811:71;22879:1;22868:9;22864:17;22855:6;22811:71;:::i;:::-;22892:72;22960:2;22949:9;22945:18;22936:6;22892:72;:::i;:::-;22639:332;;;;;:::o;23058:98::-;23109:6;23143:5;23137:12;23127:22;;23058:98;;;:::o;23162:99::-;23214:6;23248:5;23242:12;23232:22;;23162:99;;;:::o;23267:147::-;23368:11;23405:3;23390:18;;23267:147;;;;:::o;23420:169::-;23504:11;23538:6;23533:3;23526:19;23578:4;23573:3;23569:14;23554:29;;23420:169;;;;:::o;23595:305::-;23635:3;23654:20;23672:1;23654:20;:::i;:::-;23649:25;;23688:20;23706:1;23688:20;:::i;:::-;23683:25;;23842:1;23774:66;23770:74;23767:1;23764:81;23761:107;;;23848:18;;:::i;:::-;23761:107;23892:1;23889;23885:9;23878:16;;23595:305;;;;:::o;23906:185::-;23946:1;23963:20;23981:1;23963:20;:::i;:::-;23958:25;;23997:20;24015:1;23997:20;:::i;:::-;23992:25;;24036:1;24026:35;;24041:18;;:::i;:::-;24026:35;24083:1;24080;24076:9;24071:14;;23906:185;;;;:::o;24097:348::-;24137:7;24160:20;24178:1;24160:20;:::i;:::-;24155:25;;24194:20;24212:1;24194:20;:::i;:::-;24189:25;;24382:1;24314:66;24310:74;24307:1;24304:81;24299:1;24292:9;24285:17;24281:105;24278:131;;;24389:18;;:::i;:::-;24278:131;24437:1;24434;24430:9;24419:20;;24097:348;;;;:::o;24451:191::-;24491:4;24511:20;24529:1;24511:20;:::i;:::-;24506:25;;24545:20;24563:1;24545:20;:::i;:::-;24540:25;;24584:1;24581;24578:8;24575:34;;;24589:18;;:::i;:::-;24575:34;24634:1;24631;24627:9;24619:17;;24451:191;;;;:::o;24648:96::-;24685:7;24714:24;24732:5;24714:24;:::i;:::-;24703:35;;24648:96;;;:::o;24750:90::-;24784:7;24827:5;24820:13;24813:21;24802:32;;24750:90;;;:::o;24846:110::-;24897:7;24926:24;24944:5;24926:24;:::i;:::-;24915:35;;24846:110;;;:::o;24962:111::-;25014:7;25043:24;25061:5;25043:24;:::i;:::-;25032:35;;24962:111;;;:::o;25079:117::-;25137:7;25166:24;25184:5;25166:24;:::i;:::-;25155:35;;25079:117;;;:::o;25202:126::-;25239:7;25279:42;25272:5;25268:54;25257:65;;25202:126;;;:::o;25334:77::-;25371:7;25400:5;25389:16;;25334:77;;;:::o;25417:140::-;25481:9;25514:37;25545:5;25514:37;:::i;:::-;25501:50;;25417:140;;;:::o;25563:141::-;25628:9;25661:37;25692:5;25661:37;:::i;:::-;25648:50;;25563:141;;;:::o;25710:147::-;25781:9;25814:37;25845:5;25814:37;:::i;:::-;25801:50;;25710:147;;;:::o;25863:126::-;25913:9;25946:37;25977:5;25946:37;:::i;:::-;25933:50;;25863:126;;;:::o;25995:113::-;26045:9;26078:24;26096:5;26078:24;:::i;:::-;26065:37;;25995:113;;;:::o;26114:307::-;26182:1;26192:113;26206:6;26203:1;26200:13;26192:113;;;26291:1;26286:3;26282:11;26276:18;26272:1;26267:3;26263:11;26256:39;26228:2;26225:1;26221:10;26216:15;;26192:113;;;26323:6;26320:1;26317:13;26314:101;;;26403:1;26394:6;26389:3;26385:16;26378:27;26314:101;26163:258;26114:307;;;:::o;26427:233::-;26466:3;26489:24;26507:5;26489:24;:::i;:::-;26480:33;;26535:66;26528:5;26525:77;26522:103;;;26605:18;;:::i;:::-;26522:103;26652:1;26645:5;26641:13;26634:20;;26427:233;;;:::o;26666:180::-;26714:77;26711:1;26704:88;26811:4;26808:1;26801:15;26835:4;26832:1;26825:15;26852:180;26900:77;26897:1;26890:88;26997:4;26994:1;26987:15;27021:4;27018:1;27011:15;27038:180;27086:77;27083:1;27076:88;27183:4;27180:1;27173:15;27207:4;27204:1;27197:15;27347:117;27456:1;27453;27446:12;27470:102;27511:6;27562:2;27558:7;27553:2;27546:5;27542:14;27538:28;27528:38;;27470:102;;;:::o;27578:225::-;27718:34;27714:1;27706:6;27702:14;27695:58;27787:8;27782:2;27774:6;27770:15;27763:33;27578:225;:::o;27809:169::-;27949:21;27945:1;27937:6;27933:14;27926:45;27809:169;:::o;27984:177::-;28124:29;28120:1;28112:6;28108:14;28101:53;27984:177;:::o;28167:::-;28307:29;28303:1;28295:6;28291:14;28284:53;28167:177;:::o;28350:225::-;28490:34;28486:1;28478:6;28474:14;28467:58;28559:8;28554:2;28546:6;28542:15;28535:33;28350:225;:::o;28581:174::-;28721:26;28717:1;28709:6;28705:14;28698:50;28581:174;:::o;28761:220::-;28901:34;28897:1;28889:6;28885:14;28878:58;28970:3;28965:2;28957:6;28953:15;28946:28;28761:220;:::o;28987:182::-;29127:34;29123:1;29115:6;29111:14;29104:58;28987:182;:::o;29175:179::-;29315:31;29311:1;29303:6;29299:14;29292:55;29175:179;:::o;29360:168::-;29500:20;29496:1;29488:6;29484:14;29477:44;29360:168;:::o;29534:229::-;29674:34;29670:1;29662:6;29658:14;29651:58;29743:12;29738:2;29730:6;29726:15;29719:37;29534:229;:::o;29769:162::-;29909:14;29905:1;29897:6;29893:14;29886:38;29769:162;:::o;29937:241::-;30077:34;30073:1;30065:6;30061:14;30054:58;30146:24;30141:2;30133:6;30129:15;30122:49;29937:241;:::o;30184:170::-;30324:22;30320:1;30312:6;30308:14;30301:46;30184:170;:::o;30360:122::-;30433:24;30451:5;30433:24;:::i;:::-;30426:5;30423:35;30413:63;;30472:1;30469;30462:12;30413:63;30360:122;:::o;30488:116::-;30558:21;30573:5;30558:21;:::i;:::-;30551:5;30548:32;30538:60;;30594:1;30591;30584:12;30538:60;30488:116;:::o;30610:150::-;30697:38;30729:5;30697:38;:::i;:::-;30690:5;30687:49;30677:77;;30750:1;30747;30740:12;30677:77;30610:150;:::o;30766:152::-;30854:39;30887:5;30854:39;:::i;:::-;30847:5;30844:50;30834:78;;30908:1;30905;30898:12;30834:78;30766:152;:::o;30924:164::-;31018:45;31057:5;31018:45;:::i;:::-;31011:5;31008:56;30998:84;;31078:1;31075;31068:12;30998:84;30924:164;:::o;31094:122::-;31167:24;31185:5;31167:24;:::i;:::-;31160:5;31157:35;31147:63;;31206:1;31203;31196:12;31147:63;31094:122;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "3259600",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"BONUS_MULTIPLIER()": "2518",
								"DDT()": "2711",
								"PowerPerBlock()": "2540",
								"add(uint256,address,bool)": "infinite",
								"addNFT(address,uint256)": "73759",
								"claimNFTReward(uint256,uint256)": "infinite",
								"deposit(uint256,uint256)": "infinite",
								"emergencyWithdraw(uint256)": "infinite",
								"enterStaking(uint256)": "infinite",
								"getMultiplier(uint256,uint256)": "infinite",
								"getPowerBalance(address)": "2952",
								"leaveStaking(uint256)": "infinite",
								"massUpdatePools()": "infinite",
								"migrate(uint256)": "infinite",
								"migrator()": "2667",
								"nftsInfo(uint256)": "infinite",
								"owner()": "2567",
								"pendingPower(uint256,address)": "infinite",
								"poolInfo(uint256)": "infinite",
								"poolLength()": "2492",
								"powerBalance(address)": "2858",
								"renounceOwnership()": "30419",
								"set(uint256,uint256,bool)": "infinite",
								"setMigrator(address)": "27095",
								"startBlock()": "2541",
								"totalAllocPoint()": "2542",
								"transferOwnership(address)": "30811",
								"updateMultiplier(uint256)": "24806",
								"updatePool(uint256)": "infinite",
								"updatePowerPerBlock(uint256)": "24872",
								"userInfo(uint256,address)": "infinite",
								"withdraw(uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 22111,
									"end": 34879,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 22111,
									"end": 34879,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 22111,
									"end": 34879,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 23774,
									"end": 23775,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 23740,
									"end": 23775,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 23740,
									"end": 23775,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 24217,
									"end": 24218,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 24184,
									"end": 24218,
									"name": "PUSH",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 24184,
									"end": 24218,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 24650,
									"end": 25112,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 24650,
									"end": 25112,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 24650,
									"end": 25112,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 24650,
									"end": 25112,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 24650,
									"end": 25112,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 24650,
									"end": 25112,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 24650,
									"end": 25112,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 24650,
									"end": 25112,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 24650,
									"end": 25112,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 24650,
									"end": 25112,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 24650,
									"end": 25112,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 24650,
									"end": 25112,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 24650,
									"end": 25112,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 24650,
									"end": 25112,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 24650,
									"end": 25112,
									"name": "CODESIZE",
									"source": 0
								},
								{
									"begin": 24650,
									"end": 25112,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 24650,
									"end": 25112,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 24650,
									"end": 25112,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 24650,
									"end": 25112,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 24650,
									"end": 25112,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 24650,
									"end": 25112,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 24650,
									"end": 25112,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 24650,
									"end": 25112,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 24650,
									"end": 25112,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 24650,
									"end": 25112,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 24650,
									"end": 25112,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 24650,
									"end": 25112,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 24650,
									"end": 25112,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 24650,
									"end": 25112,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 24650,
									"end": 25112,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 24650,
									"end": 25112,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 24650,
									"end": 25112,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 24650,
									"end": 25112,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 24650,
									"end": 25112,
									"name": "tag",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 24650,
									"end": 25112,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 19984,
									"end": 20016,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 20003,
									"end": 20015,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 20003,
									"end": 20013,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 20003,
									"end": 20013,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 20003,
									"end": 20013,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 20003,
									"end": 20015,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 20003,
									"end": 20015,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 20003,
									"end": 20015,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 20003,
									"end": 20015,
									"name": "tag",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 20003,
									"end": 20015,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 19984,
									"end": 20002,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 19984,
									"end": 20002,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 19984,
									"end": 20002,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 19984,
									"end": 20016,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 19984,
									"end": 20016,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 19984,
									"end": 20016,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 19984,
									"end": 20016,
									"name": "tag",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 19984,
									"end": 20016,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 24771,
									"end": 24775,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 24765,
									"end": 24768,
									"name": "PUSH",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 24765,
									"end": 24768,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 24765,
									"end": 24775,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 24765,
									"end": 24775,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 24765,
									"end": 24775,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 24765,
									"end": 24775,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 24765,
									"end": 24775,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 24765,
									"end": 24775,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 24765,
									"end": 24775,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 24765,
									"end": 24775,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 24765,
									"end": 24775,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 24765,
									"end": 24775,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 24765,
									"end": 24775,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 24765,
									"end": 24775,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 24765,
									"end": 24775,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 24765,
									"end": 24775,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 24765,
									"end": 24775,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 24765,
									"end": 24775,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 24765,
									"end": 24775,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 24765,
									"end": 24775,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 24802,
									"end": 24816,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 24786,
									"end": 24799,
									"name": "PUSH",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 24786,
									"end": 24816,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 24786,
									"end": 24816,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 24786,
									"end": 24816,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 24786,
									"end": 24816,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 24840,
									"end": 24851,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 24827,
									"end": 24837,
									"name": "PUSH",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 24827,
									"end": 24851,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 24827,
									"end": 24851,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 24827,
									"end": 24851,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 24827,
									"end": 24851,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 24897,
									"end": 24905,
									"name": "PUSH",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 24911,
									"end": 25066,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 24911,
									"end": 25066,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 24911,
									"end": 25066,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 24911,
									"end": 25066,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 24911,
									"end": 25066,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 24911,
									"end": 25066,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 24911,
									"end": 25066,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 24911,
									"end": 25066,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 24944,
									"end": 24947,
									"name": "PUSH",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 24944,
									"end": 24947,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 24944,
									"end": 24947,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 24944,
									"end": 24947,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 24944,
									"end": 24947,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 24944,
									"end": 24947,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 24944,
									"end": 24947,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 24944,
									"end": 24947,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 24944,
									"end": 24947,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 24944,
									"end": 24947,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 24944,
									"end": 24947,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 24911,
									"end": 25066,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 24911,
									"end": 25066,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 24911,
									"end": 25066,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 24911,
									"end": 25066,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 24911,
									"end": 25066,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 24911,
									"end": 25066,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 24974,
									"end": 24978,
									"name": "PUSH",
									"source": 0,
									"value": "3E8"
								},
								{
									"begin": 24911,
									"end": 25066,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 24911,
									"end": 25066,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 24911,
									"end": 25066,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 24911,
									"end": 25066,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 25010,
									"end": 25020,
									"name": "PUSH",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 25010,
									"end": 25020,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 24911,
									"end": 25066,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 24911,
									"end": 25066,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 24911,
									"end": 25066,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 24911,
									"end": 25066,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 25053,
									"end": 25054,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 24911,
									"end": 25066,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 24911,
									"end": 25066,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 24911,
									"end": 25066,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 24897,
									"end": 25067,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 24897,
									"end": 25067,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 24897,
									"end": 25067,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 24897,
									"end": 25067,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 24897,
									"end": 25067,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 24897,
									"end": 25067,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 24897,
									"end": 25067,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 24897,
									"end": 25067,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 24897,
									"end": 25067,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 24897,
									"end": 25067,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 24897,
									"end": 25067,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 24897,
									"end": 25067,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 24897,
									"end": 25067,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 24897,
									"end": 25067,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 24897,
									"end": 25067,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 24897,
									"end": 25067,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 24897,
									"end": 25067,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 24897,
									"end": 25067,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 24897,
									"end": 25067,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 24897,
									"end": 25067,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 24897,
									"end": 25067,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 24897,
									"end": 25067,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 24897,
									"end": 25067,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 24897,
									"end": 25067,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 24897,
									"end": 25067,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 24897,
									"end": 25067,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 24897,
									"end": 25067,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 24897,
									"end": 25067,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 24897,
									"end": 25067,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 24897,
									"end": 25067,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 24897,
									"end": 25067,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 24897,
									"end": 25067,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 24897,
									"end": 25067,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 24897,
									"end": 25067,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 24897,
									"end": 25067,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 24897,
									"end": 25067,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 24897,
									"end": 25067,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 24897,
									"end": 25067,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 24897,
									"end": 25067,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 24897,
									"end": 25067,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 24897,
									"end": 25067,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 24897,
									"end": 25067,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 24897,
									"end": 25067,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 24897,
									"end": 25067,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 24897,
									"end": 25067,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 24897,
									"end": 25067,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 24897,
									"end": 25067,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 24897,
									"end": 25067,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 24897,
									"end": 25067,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 24897,
									"end": 25067,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 24897,
									"end": 25067,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 24897,
									"end": 25067,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 24897,
									"end": 25067,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 24897,
									"end": 25067,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 24897,
									"end": 25067,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 24897,
									"end": 25067,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 24897,
									"end": 25067,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 24897,
									"end": 25067,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 24897,
									"end": 25067,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 24897,
									"end": 25067,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 24897,
									"end": 25067,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 24897,
									"end": 25067,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 24897,
									"end": 25067,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 24897,
									"end": 25067,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 24897,
									"end": 25067,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 24897,
									"end": 25067,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 24897,
									"end": 25067,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 24897,
									"end": 25067,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 24897,
									"end": 25067,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 24897,
									"end": 25067,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 24897,
									"end": 25067,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 24897,
									"end": 25067,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 24897,
									"end": 25067,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 24897,
									"end": 25067,
									"name": "PUSH",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 24897,
									"end": 25067,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 24897,
									"end": 25067,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 24897,
									"end": 25067,
									"name": "PUSH",
									"source": 0,
									"value": "60"
								},
								{
									"begin": 24897,
									"end": 25067,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 24897,
									"end": 25067,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 24897,
									"end": 25067,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 24897,
									"end": 25067,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 24897,
									"end": 25067,
									"name": "PUSH",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 24897,
									"end": 25067,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 24897,
									"end": 25067,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 24897,
									"end": 25067,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 24897,
									"end": 25067,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 25098,
									"end": 25102,
									"name": "PUSH",
									"source": 0,
									"value": "3E8"
								},
								{
									"begin": 25080,
									"end": 25095,
									"name": "PUSH",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 25080,
									"end": 25102,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 25080,
									"end": 25102,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 25080,
									"end": 25102,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 25080,
									"end": 25102,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 24650,
									"end": 25112,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 24650,
									"end": 25112,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 24650,
									"end": 25112,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 22111,
									"end": 34879,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 22111,
									"end": 34879,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 19479,
									"end": 19577,
									"name": "tag",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 19479,
									"end": 19577,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 19532,
									"end": 19539,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 19559,
									"end": 19569,
									"name": "CALLER",
									"source": 0
								},
								{
									"begin": 19552,
									"end": 19569,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 19552,
									"end": 19569,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 19479,
									"end": 19577,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 19479,
									"end": 19577,
									"name": "JUMP",
									"source": 0,
									"value": "[out]"
								},
								{
									"begin": 21375,
									"end": 21566,
									"name": "tag",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 21375,
									"end": 21566,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 21449,
									"end": 21465,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 21468,
									"end": 21474,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 21468,
									"end": 21474,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 21468,
									"end": 21474,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 21468,
									"end": 21474,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 21468,
									"end": 21474,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 21468,
									"end": 21474,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 21468,
									"end": 21474,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 21468,
									"end": 21474,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 21468,
									"end": 21474,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 21468,
									"end": 21474,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 21468,
									"end": 21474,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 21449,
									"end": 21474,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 21449,
									"end": 21474,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 21494,
									"end": 21502,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 21485,
									"end": 21491,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 21485,
									"end": 21491,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 21485,
									"end": 21502,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 21485,
									"end": 21502,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 21485,
									"end": 21502,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 21485,
									"end": 21502,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 21485,
									"end": 21502,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 21485,
									"end": 21502,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 21485,
									"end": 21502,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 21485,
									"end": 21502,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 21485,
									"end": 21502,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 21485,
									"end": 21502,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 21485,
									"end": 21502,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 21485,
									"end": 21502,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 21485,
									"end": 21502,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 21485,
									"end": 21502,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 21485,
									"end": 21502,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 21485,
									"end": 21502,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 21485,
									"end": 21502,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 21485,
									"end": 21502,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 21549,
									"end": 21557,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 21518,
									"end": 21558,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 21518,
									"end": 21558,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 21539,
									"end": 21547,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 21518,
									"end": 21558,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 21518,
									"end": 21558,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 21518,
									"end": 21558,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 21518,
									"end": 21558,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 21518,
									"end": 21558,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 21518,
									"end": 21558,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 21518,
									"end": 21558,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 21518,
									"end": 21558,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 21518,
									"end": 21558,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 21518,
									"end": 21558,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 21518,
									"end": 21558,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 21518,
									"end": 21558,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 21438,
									"end": 21566,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 21375,
									"end": 21566,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 21375,
									"end": 21566,
									"name": "JUMP",
									"source": 0,
									"value": "[out]"
								},
								{
									"begin": 7,
									"end": 178,
									"name": "tag",
									"source": 1,
									"value": "17"
								},
								{
									"begin": 7,
									"end": 178,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 78,
									"end": 83,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 109,
									"end": 115,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 103,
									"end": 116,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 94,
									"end": 116,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 94,
									"end": 116,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 125,
									"end": 172,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "19"
								},
								{
									"begin": 166,
									"end": 171,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 125,
									"end": 172,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 125,
									"end": 172,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 125,
									"end": 172,
									"name": "tag",
									"source": 1,
									"value": "19"
								},
								{
									"begin": 125,
									"end": 172,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 7,
									"end": 178,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 7,
									"end": 178,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 7,
									"end": 178,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 7,
									"end": 178,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 7,
									"end": 178,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 184,
									"end": 327,
									"name": "tag",
									"source": 1,
									"value": "21"
								},
								{
									"begin": 184,
									"end": 327,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 241,
									"end": 246,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 272,
									"end": 278,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 266,
									"end": 279,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 257,
									"end": 279,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 257,
									"end": 279,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 288,
									"end": 321,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "23"
								},
								{
									"begin": 315,
									"end": 320,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 288,
									"end": 321,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 288,
									"end": 321,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 288,
									"end": 321,
									"name": "tag",
									"source": 1,
									"value": "23"
								},
								{
									"begin": 288,
									"end": 321,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 184,
									"end": 327,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 184,
									"end": 327,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 184,
									"end": 327,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 184,
									"end": 327,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 184,
									"end": 327,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 333,
									"end": 1024,
									"name": "tag",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 333,
									"end": 1024,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 435,
									"end": 441,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 443,
									"end": 449,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 451,
									"end": 457,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 500,
									"end": 502,
									"name": "PUSH",
									"source": 1,
									"value": "60"
								},
								{
									"begin": 488,
									"end": 497,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 479,
									"end": 486,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 475,
									"end": 498,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 471,
									"end": 503,
									"name": "SLT",
									"source": 1
								},
								{
									"begin": 468,
									"end": 587,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 468,
									"end": 587,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "26"
								},
								{
									"begin": 468,
									"end": 587,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 506,
									"end": 585,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "27"
								},
								{
									"begin": 506,
									"end": 585,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "28"
								},
								{
									"begin": 506,
									"end": 585,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 506,
									"end": 585,
									"name": "tag",
									"source": 1,
									"value": "27"
								},
								{
									"begin": 506,
									"end": 585,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 468,
									"end": 587,
									"name": "tag",
									"source": 1,
									"value": "26"
								},
								{
									"begin": 468,
									"end": 587,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 626,
									"end": 627,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 651,
									"end": 729,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "29"
								},
								{
									"begin": 721,
									"end": 728,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 712,
									"end": 718,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 701,
									"end": 710,
									"name": "DUP8",
									"source": 1
								},
								{
									"begin": 697,
									"end": 719,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 651,
									"end": 729,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "17"
								},
								{
									"begin": 651,
									"end": 729,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 651,
									"end": 729,
									"name": "tag",
									"source": 1,
									"value": "29"
								},
								{
									"begin": 651,
									"end": 729,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 641,
									"end": 729,
									"name": "SWAP4",
									"source": 1
								},
								{
									"begin": 641,
									"end": 729,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 597,
									"end": 739,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 778,
									"end": 780,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 804,
									"end": 868,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "30"
								},
								{
									"begin": 860,
									"end": 867,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 851,
									"end": 857,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 840,
									"end": 849,
									"name": "DUP8",
									"source": 1
								},
								{
									"begin": 836,
									"end": 858,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 804,
									"end": 868,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "21"
								},
								{
									"begin": 804,
									"end": 868,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 804,
									"end": 868,
									"name": "tag",
									"source": 1,
									"value": "30"
								},
								{
									"begin": 804,
									"end": 868,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 794,
									"end": 868,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 794,
									"end": 868,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 749,
									"end": 878,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 917,
									"end": 919,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 943,
									"end": 1007,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "31"
								},
								{
									"begin": 999,
									"end": 1006,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 990,
									"end": 996,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 979,
									"end": 988,
									"name": "DUP8",
									"source": 1
								},
								{
									"begin": 975,
									"end": 997,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 943,
									"end": 1007,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "21"
								},
								{
									"begin": 943,
									"end": 1007,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 943,
									"end": 1007,
									"name": "tag",
									"source": 1,
									"value": "31"
								},
								{
									"begin": 943,
									"end": 1007,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 933,
									"end": 1007,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 933,
									"end": 1007,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 888,
									"end": 1017,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 333,
									"end": 1024,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 333,
									"end": 1024,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 333,
									"end": 1024,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 333,
									"end": 1024,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 333,
									"end": 1024,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 333,
									"end": 1024,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 1111,
									"end": 1207,
									"name": "tag",
									"source": 1,
									"value": "34"
								},
								{
									"begin": 1111,
									"end": 1207,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1148,
									"end": 1155,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1177,
									"end": 1201,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "36"
								},
								{
									"begin": 1195,
									"end": 1200,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1177,
									"end": 1201,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "37"
								},
								{
									"begin": 1177,
									"end": 1201,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 1177,
									"end": 1201,
									"name": "tag",
									"source": 1,
									"value": "36"
								},
								{
									"begin": 1177,
									"end": 1201,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1166,
									"end": 1201,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1166,
									"end": 1201,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1111,
									"end": 1207,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1111,
									"end": 1207,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1111,
									"end": 1207,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1111,
									"end": 1207,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 1213,
									"end": 1323,
									"name": "tag",
									"source": 1,
									"value": "38"
								},
								{
									"begin": 1213,
									"end": 1323,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1264,
									"end": 1271,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1293,
									"end": 1317,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1311,
									"end": 1316,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1293,
									"end": 1317,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "34"
								},
								{
									"begin": 1293,
									"end": 1317,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 1293,
									"end": 1317,
									"name": "tag",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1293,
									"end": 1317,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1282,
									"end": 1317,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1282,
									"end": 1317,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1213,
									"end": 1323,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1213,
									"end": 1323,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1213,
									"end": 1323,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1213,
									"end": 1323,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 1329,
									"end": 1455,
									"name": "tag",
									"source": 1,
									"value": "37"
								},
								{
									"begin": 1329,
									"end": 1455,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1366,
									"end": 1373,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1406,
									"end": 1448,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1399,
									"end": 1404,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1395,
									"end": 1449,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 1384,
									"end": 1449,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1384,
									"end": 1449,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1329,
									"end": 1455,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1329,
									"end": 1455,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1329,
									"end": 1455,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1329,
									"end": 1455,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 1461,
									"end": 1538,
									"name": "tag",
									"source": 1,
									"value": "42"
								},
								{
									"begin": 1461,
									"end": 1538,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1498,
									"end": 1505,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1527,
									"end": 1532,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1516,
									"end": 1532,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1516,
									"end": 1532,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1461,
									"end": 1538,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1461,
									"end": 1538,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1461,
									"end": 1538,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1461,
									"end": 1538,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 1667,
									"end": 1784,
									"name": "tag",
									"source": 1,
									"value": "28"
								},
								{
									"begin": 1667,
									"end": 1784,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1776,
									"end": 1777,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1773,
									"end": 1774,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1766,
									"end": 1778,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 1790,
									"end": 1940,
									"name": "tag",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1790,
									"end": 1940,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1877,
									"end": 1915,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "48"
								},
								{
									"begin": 1909,
									"end": 1914,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1877,
									"end": 1915,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "38"
								},
								{
									"begin": 1877,
									"end": 1915,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 1877,
									"end": 1915,
									"name": "tag",
									"source": 1,
									"value": "48"
								},
								{
									"begin": 1877,
									"end": 1915,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1870,
									"end": 1875,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1867,
									"end": 1916,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 1857,
									"end": 1934,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "49"
								},
								{
									"begin": 1857,
									"end": 1934,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1930,
									"end": 1931,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1927,
									"end": 1928,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1920,
									"end": 1932,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 1857,
									"end": 1934,
									"name": "tag",
									"source": 1,
									"value": "49"
								},
								{
									"begin": 1857,
									"end": 1934,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1790,
									"end": 1940,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1790,
									"end": 1940,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 1946,
									"end": 2068,
									"name": "tag",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 1946,
									"end": 2068,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2019,
									"end": 2043,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "51"
								},
								{
									"begin": 2037,
									"end": 2042,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2019,
									"end": 2043,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "42"
								},
								{
									"begin": 2019,
									"end": 2043,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 2019,
									"end": 2043,
									"name": "tag",
									"source": 1,
									"value": "51"
								},
								{
									"begin": 2019,
									"end": 2043,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2012,
									"end": 2017,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2009,
									"end": 2044,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 1999,
									"end": 2062,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "52"
								},
								{
									"begin": 1999,
									"end": 2062,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 2058,
									"end": 2059,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2055,
									"end": 2056,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 2048,
									"end": 2060,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 1999,
									"end": 2062,
									"name": "tag",
									"source": 1,
									"value": "52"
								},
								{
									"begin": 1999,
									"end": 2062,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1946,
									"end": 2068,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1946,
									"end": 2068,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 22111,
									"end": 34879,
									"name": "tag",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 22111,
									"end": 34879,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 22111,
									"end": 34879,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 22111,
									"end": 34879,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 22111,
									"end": 34879,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 22111,
									"end": 34879,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 22111,
									"end": 34879,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 22111,
									"end": 34879,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 22111,
									"end": 34879,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220db217bfbe705683e7b534bbc98e376d0970ceae3cc096b62152a224709176d9b64736f6c63430008070033",
									".code": [
										{
											"begin": 22111,
											"end": 34879,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 22111,
											"end": 34879,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 22111,
											"end": 34879,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 34879,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 34879,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 34879,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 34879,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 22111,
											"end": 34879,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 34879,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 22111,
											"end": 34879,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 34879,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 34879,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 22111,
											"end": 34879,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 34879,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 34879,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 22111,
											"end": 34879,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 34879,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 34879,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 22111,
											"end": 34879,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 34879,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 22111,
											"end": 34879,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 34879,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 22111,
											"end": 34879,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 34879,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 34879,
											"name": "PUSH",
											"source": 0,
											"value": "5FFE6146"
										},
										{
											"begin": 22111,
											"end": 34879,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 34879,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 22111,
											"end": 34879,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 34879,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 34879,
											"name": "PUSH",
											"source": 0,
											"value": "8DA5CB5B"
										},
										{
											"begin": 22111,
											"end": 34879,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 34879,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 22111,
											"end": 34879,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 34879,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 34879,
											"name": "PUSH",
											"source": 0,
											"value": "D209DB8C"
										},
										{
											"begin": 22111,
											"end": 34879,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 34879,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 22111,
											"end": 34879,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 34879,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 34879,
											"name": "PUSH",
											"source": 0,
											"value": "D209DB8C"
										},
										{
											"begin": 22111,
											"end": 34879,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 34879,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 22111,
											"end": 34879,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 34879,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 34879,
											"name": "PUSH",
											"source": 0,
											"value": "E2BBB158"
										},
										{
											"begin": 22111,
											"end": 34879,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 34879,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 22111,
											"end": 34879,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 34879,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 34879,
											"name": "PUSH",
											"source": 0,
											"value": "F2FDE38B"
										},
										{
											"begin": 22111,
											"end": 34879,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 34879,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 22111,
											"end": 34879,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 34879,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 34879,
											"name": "PUSH",
											"source": 0,
											"value": "F3239AB5"
										},
										{
											"begin": 22111,
											"end": 34879,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 34879,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 22111,
											"end": 34879,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 34879,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 22111,
											"end": 34879,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 34879,
											"name": "tag",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 22111,
											"end": 34879,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 34879,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 34879,
											"name": "PUSH",
											"source": 0,
											"value": "8DA5CB5B"
										},
										{
											"begin": 22111,
											"end": 34879,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 34879,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 22111,
											"end": 34879,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 34879,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 34879,
											"name": "PUSH",
											"source": 0,
											"value": "8DBB1E3A"
										},
										{
											"begin": 22111,
											"end": 34879,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 34879,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 22111,
											"end": 34879,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 34879,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 34879,
											"name": "PUSH",
											"source": 0,
											"value": "93F1A40B"
										},
										{
											"begin": 22111,
											"end": 34879,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 34879,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 22111,
											"end": 34879,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 34879,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 34879,
											"name": "PUSH",
											"source": 0,
											"value": "CB3CBA55"
										},
										{
											"begin": 22111,
											"end": 34879,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 34879,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 22111,
											"end": 34879,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 34879,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 22111,
											"end": 34879,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 34879,
											"name": "tag",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 22111,
											"end": 34879,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 34879,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 34879,
											"name": "PUSH",
											"source": 0,
											"value": "715018A6"
										},
										{
											"begin": 22111,
											"end": 34879,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 34879,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 22111,
											"end": 34879,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 34879,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 34879,
											"name": "PUSH",
											"source": 0,
											"value": "715018A6"
										},
										{
											"begin": 22111,
											"end": 34879,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 34879,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 22111,
											"end": 34879,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 34879,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 34879,
											"name": "PUSH",
											"source": 0,
											"value": "7CD07E47"
										},
										{
											"begin": 22111,
											"end": 34879,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 34879,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 22111,
											"end": 34879,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 34879,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 34879,
											"name": "PUSH",
											"source": 0,
											"value": "8AA28550"
										},
										{
											"begin": 22111,
											"end": 34879,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 34879,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 22111,
											"end": 34879,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 34879,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 34879,
											"name": "PUSH",
											"source": 0,
											"value": "8C51793B"
										},
										{
											"begin": 22111,
											"end": 34879,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 34879,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 22111,
											"end": 34879,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 34879,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 22111,
											"end": 34879,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 34879,
											"name": "tag",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 22111,
											"end": 34879,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 34879,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 34879,
											"name": "PUSH",
											"source": 0,
											"value": "5FFE6146"
										},
										{
											"begin": 22111,
											"end": 34879,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 34879,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 22111,
											"end": 34879,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 34879,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 34879,
											"name": "PUSH",
											"source": 0,
											"value": "61C1B724"
										},
										{
											"begin": 22111,
											"end": 34879,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 34879,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 22111,
											"end": 34879,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 34879,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 34879,
											"name": "PUSH",
											"source": 0,
											"value": "630B5BA1"
										},
										{
											"begin": 22111,
											"end": 34879,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 34879,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 22111,
											"end": 34879,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 34879,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 34879,
											"name": "PUSH",
											"source": 0,
											"value": "64482F79"
										},
										{
											"begin": 22111,
											"end": 34879,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 34879,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 22111,
											"end": 34879,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 34879,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 22111,
											"end": 34879,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 34879,
											"name": "tag",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 22111,
											"end": 34879,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 34879,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 34879,
											"name": "PUSH",
											"source": 0,
											"value": "41441D3B"
										},
										{
											"begin": 22111,
											"end": 34879,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 34879,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 22111,
											"end": 34879,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 34879,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 34879,
											"name": "PUSH",
											"source": 0,
											"value": "4EA2813C"
										},
										{
											"begin": 22111,
											"end": 34879,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 34879,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 22111,
											"end": 34879,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 34879,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 34879,
											"name": "PUSH",
											"source": 0,
											"value": "4EA2813C"
										},
										{
											"begin": 22111,
											"end": 34879,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 34879,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 22111,
											"end": 34879,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 34879,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 34879,
											"name": "PUSH",
											"source": 0,
											"value": "51EB05A6"
										},
										{
											"begin": 22111,
											"end": 34879,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 34879,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 22111,
											"end": 34879,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 34879,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 34879,
											"name": "PUSH",
											"source": 0,
											"value": "5312EA8E"
										},
										{
											"begin": 22111,
											"end": 34879,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 34879,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 22111,
											"end": 34879,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 34879,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 34879,
											"name": "PUSH",
											"source": 0,
											"value": "5990C569"
										},
										{
											"begin": 22111,
											"end": 34879,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 34879,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 22111,
											"end": 34879,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 34879,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 22111,
											"end": 34879,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 34879,
											"name": "tag",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 22111,
											"end": 34879,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 34879,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 34879,
											"name": "PUSH",
											"source": 0,
											"value": "41441D3B"
										},
										{
											"begin": 22111,
											"end": 34879,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 34879,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 22111,
											"end": 34879,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 34879,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 34879,
											"name": "PUSH",
											"source": 0,
											"value": "441A3E70"
										},
										{
											"begin": 22111,
											"end": 34879,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 34879,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 22111,
											"end": 34879,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 34879,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 34879,
											"name": "PUSH",
											"source": 0,
											"value": "454B0608"
										},
										{
											"begin": 22111,
											"end": 34879,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 34879,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 22111,
											"end": 34879,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 34879,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 34879,
											"name": "PUSH",
											"source": 0,
											"value": "48CD4CB1"
										},
										{
											"begin": 22111,
											"end": 34879,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 34879,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 22111,
											"end": 34879,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 34879,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 22111,
											"end": 34879,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 34879,
											"name": "tag",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 22111,
											"end": 34879,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 34879,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 34879,
											"name": "PUSH",
											"source": 0,
											"value": "1D5FBD87"
										},
										{
											"begin": 22111,
											"end": 34879,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 34879,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 22111,
											"end": 34879,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 34879,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 34879,
											"name": "PUSH",
											"source": 0,
											"value": "1D5FBD87"
										},
										{
											"begin": 22111,
											"end": 34879,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 34879,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 22111,
											"end": 34879,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 34879,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 34879,
											"name": "PUSH",
											"source": 0,
											"value": "1EAAA045"
										},
										{
											"begin": 22111,
											"end": 34879,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 34879,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 22111,
											"end": 34879,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 34879,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 34879,
											"name": "PUSH",
											"source": 0,
											"value": "23CF3118"
										},
										{
											"begin": 22111,
											"end": 34879,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 34879,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 22111,
											"end": 34879,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 34879,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 34879,
											"name": "PUSH",
											"source": 0,
											"value": "3DF7AFF3"
										},
										{
											"begin": 22111,
											"end": 34879,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 34879,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 22111,
											"end": 34879,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 34879,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 22111,
											"end": 34879,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 34879,
											"name": "tag",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 22111,
											"end": 34879,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 34879,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 34879,
											"name": "PUSH",
											"source": 0,
											"value": "81E3EDA"
										},
										{
											"begin": 22111,
											"end": 34879,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 34879,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 22111,
											"end": 34879,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 34879,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 34879,
											"name": "PUSH",
											"source": 0,
											"value": "1058D281"
										},
										{
											"begin": 22111,
											"end": 34879,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 34879,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 22111,
											"end": 34879,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 34879,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 34879,
											"name": "PUSH",
											"source": 0,
											"value": "1526FE27"
										},
										{
											"begin": 22111,
											"end": 34879,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 34879,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 22111,
											"end": 34879,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 34879,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 34879,
											"name": "PUSH",
											"source": 0,
											"value": "17CAF6F1"
										},
										{
											"begin": 22111,
											"end": 34879,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 34879,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 22111,
											"end": 34879,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 34879,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 22111,
											"end": 34879,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 34879,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 22111,
											"end": 34879,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 34879,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 26867,
											"end": 26962,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 26867,
											"end": 26962,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26867,
											"end": 26962,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 26867,
											"end": 26962,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 26867,
											"end": 26962,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 26867,
											"end": 26962,
											"name": "tag",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 26867,
											"end": 26962,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26867,
											"end": 26962,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 26867,
											"end": 26962,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 26867,
											"end": 26962,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 26867,
											"end": 26962,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 26867,
											"end": 26962,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26867,
											"end": 26962,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 26867,
											"end": 26962,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 26867,
											"end": 26962,
											"name": "tag",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 26867,
											"end": 26962,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26867,
											"end": 26962,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 26867,
											"end": 26962,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 26867,
											"end": 26962,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26867,
											"end": 26962,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 26867,
											"end": 26962,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 26867,
											"end": 26962,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26867,
											"end": 26962,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 33573,
											"end": 34320,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 33573,
											"end": 34320,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33573,
											"end": 34320,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 33573,
											"end": 34320,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 33573,
											"end": 34320,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 33573,
											"end": 34320,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 33573,
											"end": 34320,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 33573,
											"end": 34320,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 33573,
											"end": 34320,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 33573,
											"end": 34320,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33573,
											"end": 34320,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 33573,
											"end": 34320,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 33573,
											"end": 34320,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33573,
											"end": 34320,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 33573,
											"end": 34320,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 33573,
											"end": 34320,
											"name": "tag",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 33573,
											"end": 34320,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33573,
											"end": 34320,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 33573,
											"end": 34320,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 33573,
											"end": 34320,
											"name": "tag",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 33573,
											"end": 34320,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33573,
											"end": 34320,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 23943,
											"end": 23969,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 23943,
											"end": 23969,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23943,
											"end": 23969,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 23943,
											"end": 23969,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 23943,
											"end": 23969,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23943,
											"end": 23969,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 23943,
											"end": 23969,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 23943,
											"end": 23969,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23943,
											"end": 23969,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 23943,
											"end": 23969,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23943,
											"end": 23969,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 23943,
											"end": 23969,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 23943,
											"end": 23969,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23943,
											"end": 23969,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 23943,
											"end": 23969,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 23943,
											"end": 23969,
											"name": "tag",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 23943,
											"end": 23969,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23943,
											"end": 23969,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 23943,
											"end": 23969,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 23943,
											"end": 23969,
											"name": "tag",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 23943,
											"end": 23969,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23943,
											"end": 23969,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 23943,
											"end": 23969,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 23943,
											"end": 23969,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 23943,
											"end": 23969,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 23943,
											"end": 23969,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 23943,
											"end": 23969,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 23943,
											"end": 23969,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 23943,
											"end": 23969,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23943,
											"end": 23969,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 23943,
											"end": 23969,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 23943,
											"end": 23969,
											"name": "tag",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 23943,
											"end": 23969,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23943,
											"end": 23969,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 23943,
											"end": 23969,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 23943,
											"end": 23969,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23943,
											"end": 23969,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 23943,
											"end": 23969,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 23943,
											"end": 23969,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23943,
											"end": 23969,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 24184,
											"end": 24218,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 24184,
											"end": 24218,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24184,
											"end": 24218,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 24184,
											"end": 24218,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 24184,
											"end": 24218,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 24184,
											"end": 24218,
											"name": "tag",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 24184,
											"end": 24218,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24184,
											"end": 24218,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 24184,
											"end": 24218,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 24184,
											"end": 24218,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 24184,
											"end": 24218,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 24184,
											"end": 24218,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24184,
											"end": 24218,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 24184,
											"end": 24218,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 24184,
											"end": 24218,
											"name": "tag",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 24184,
											"end": 24218,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24184,
											"end": 24218,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 24184,
											"end": 24218,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 24184,
											"end": 24218,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24184,
											"end": 24218,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 24184,
											"end": 24218,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 24184,
											"end": 24218,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24184,
											"end": 24218,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 25460,
											"end": 26728,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 25460,
											"end": 26728,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25460,
											"end": 26728,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 25460,
											"end": 26728,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 25460,
											"end": 26728,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25460,
											"end": 26728,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 25460,
											"end": 26728,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 25460,
											"end": 26728,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25460,
											"end": 26728,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 25460,
											"end": 26728,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25460,
											"end": 26728,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 25460,
											"end": 26728,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 25460,
											"end": 26728,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25460,
											"end": 26728,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 25460,
											"end": 26728,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 25460,
											"end": 26728,
											"name": "tag",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 25460,
											"end": 26728,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25460,
											"end": 26728,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 25460,
											"end": 26728,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 25460,
											"end": 26728,
											"name": "tag",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 25460,
											"end": 26728,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25460,
											"end": 26728,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 27131,
											"end": 27691,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 27131,
											"end": 27691,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27131,
											"end": 27691,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 27131,
											"end": 27691,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 27131,
											"end": 27691,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27131,
											"end": 27691,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 27131,
											"end": 27691,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 27131,
											"end": 27691,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27131,
											"end": 27691,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 27131,
											"end": 27691,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27131,
											"end": 27691,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 27131,
											"end": 27691,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 27131,
											"end": 27691,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27131,
											"end": 27691,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 27131,
											"end": 27691,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 27131,
											"end": 27691,
											"name": "tag",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 27131,
											"end": 27691,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27131,
											"end": 27691,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 27131,
											"end": 27691,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 27131,
											"end": 27691,
											"name": "tag",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 27131,
											"end": 27691,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27131,
											"end": 27691,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 28169,
											"end": 28271,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 28169,
											"end": 28271,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28169,
											"end": 28271,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 28169,
											"end": 28271,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 28169,
											"end": 28271,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28169,
											"end": 28271,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 28169,
											"end": 28271,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 28169,
											"end": 28271,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28169,
											"end": 28271,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 28169,
											"end": 28271,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28169,
											"end": 28271,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 28169,
											"end": 28271,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 28169,
											"end": 28271,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28169,
											"end": 28271,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 28169,
											"end": 28271,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 28169,
											"end": 28271,
											"name": "tag",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 28169,
											"end": 28271,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28169,
											"end": 28271,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 28169,
											"end": 28271,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 28169,
											"end": 28271,
											"name": "tag",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 28169,
											"end": 28271,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28169,
											"end": 28271,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 34767,
											"end": 34876,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 34767,
											"end": 34876,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34767,
											"end": 34876,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 34767,
											"end": 34876,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 34767,
											"end": 34876,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 34767,
											"end": 34876,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 34767,
											"end": 34876,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 34767,
											"end": 34876,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34767,
											"end": 34876,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 34767,
											"end": 34876,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34767,
											"end": 34876,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 34767,
											"end": 34876,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 34767,
											"end": 34876,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34767,
											"end": 34876,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 34767,
											"end": 34876,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 34767,
											"end": 34876,
											"name": "tag",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 34767,
											"end": 34876,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34767,
											"end": 34876,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 34767,
											"end": 34876,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 34767,
											"end": 34876,
											"name": "tag",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 34767,
											"end": 34876,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34767,
											"end": 34876,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 32724,
											"end": 33521,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 32724,
											"end": 33521,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32724,
											"end": 33521,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 32724,
											"end": 33521,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 32724,
											"end": 33521,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 32724,
											"end": 33521,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 32724,
											"end": 33521,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 32724,
											"end": 33521,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32724,
											"end": 33521,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 32724,
											"end": 33521,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32724,
											"end": 33521,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 32724,
											"end": 33521,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 32724,
											"end": 33521,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32724,
											"end": 33521,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 32724,
											"end": 33521,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 32724,
											"end": 33521,
											"name": "tag",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 32724,
											"end": 33521,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32724,
											"end": 33521,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 32724,
											"end": 33521,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 32724,
											"end": 33521,
											"name": "tag",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 32724,
											"end": 33521,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32724,
											"end": 33521,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 31884,
											"end": 32671,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 31884,
											"end": 32671,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31884,
											"end": 32671,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 31884,
											"end": 32671,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 31884,
											"end": 32671,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 31884,
											"end": 32671,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 31884,
											"end": 32671,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 31884,
											"end": 32671,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31884,
											"end": 32671,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 31884,
											"end": 32671,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31884,
											"end": 32671,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 31884,
											"end": 32671,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 31884,
											"end": 32671,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31884,
											"end": 32671,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 31884,
											"end": 32671,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 31884,
											"end": 32671,
											"name": "tag",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 31884,
											"end": 32671,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31884,
											"end": 32671,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 31884,
											"end": 32671,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 31884,
											"end": 32671,
											"name": "tag",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 31884,
											"end": 32671,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31884,
											"end": 32671,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 28394,
											"end": 28885,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 28394,
											"end": 28885,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28394,
											"end": 28885,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 28394,
											"end": 28885,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 28394,
											"end": 28885,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28394,
											"end": 28885,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 28394,
											"end": 28885,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 28394,
											"end": 28885,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28394,
											"end": 28885,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 28394,
											"end": 28885,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28394,
											"end": 28885,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 28394,
											"end": 28885,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 28394,
											"end": 28885,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28394,
											"end": 28885,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 28394,
											"end": 28885,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 28394,
											"end": 28885,
											"name": "tag",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 28394,
											"end": 28885,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28394,
											"end": 28885,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 28394,
											"end": 28885,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 28394,
											"end": 28885,
											"name": "tag",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 28394,
											"end": 28885,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28394,
											"end": 28885,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 24276,
											"end": 24301,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 24276,
											"end": 24301,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24276,
											"end": 24301,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 24276,
											"end": 24301,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 24276,
											"end": 24301,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 24276,
											"end": 24301,
											"name": "tag",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 24276,
											"end": 24301,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24276,
											"end": 24301,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 24276,
											"end": 24301,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 24276,
											"end": 24301,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 24276,
											"end": 24301,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 24276,
											"end": 24301,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24276,
											"end": 24301,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 24276,
											"end": 24301,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 24276,
											"end": 24301,
											"name": "tag",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 24276,
											"end": 24301,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24276,
											"end": 24301,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 24276,
											"end": 24301,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 24276,
											"end": 24301,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24276,
											"end": 24301,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 24276,
											"end": 24301,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 24276,
											"end": 24301,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24276,
											"end": 24301,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 25246,
											"end": 25452,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 25246,
											"end": 25452,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25246,
											"end": 25452,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 25246,
											"end": 25452,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 25246,
											"end": 25452,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25246,
											"end": 25452,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 25246,
											"end": 25452,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 25246,
											"end": 25452,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25246,
											"end": 25452,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 25246,
											"end": 25452,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25246,
											"end": 25452,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 25246,
											"end": 25452,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 25246,
											"end": 25452,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25246,
											"end": 25452,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 25246,
											"end": 25452,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 25246,
											"end": 25452,
											"name": "tag",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 25246,
											"end": 25452,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25246,
											"end": 25452,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 25246,
											"end": 25452,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 25246,
											"end": 25452,
											"name": "tag",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 25246,
											"end": 25452,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25246,
											"end": 25452,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 30276,
											"end": 30966,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 30276,
											"end": 30966,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30276,
											"end": 30966,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 30276,
											"end": 30966,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 30276,
											"end": 30966,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 30276,
											"end": 30966,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 30276,
											"end": 30966,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 30276,
											"end": 30966,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30276,
											"end": 30966,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 30276,
											"end": 30966,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30276,
											"end": 30966,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 30276,
											"end": 30966,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 30276,
											"end": 30966,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30276,
											"end": 30966,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 30276,
											"end": 30966,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 30276,
											"end": 30966,
											"name": "tag",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 30276,
											"end": 30966,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30276,
											"end": 30966,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 30276,
											"end": 30966,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 30276,
											"end": 30966,
											"name": "tag",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 30276,
											"end": 30966,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30276,
											"end": 30966,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 34399,
											"end": 34755,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 34399,
											"end": 34755,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34399,
											"end": 34755,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 34399,
											"end": 34755,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 34399,
											"end": 34755,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 34399,
											"end": 34755,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 34399,
											"end": 34755,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 34399,
											"end": 34755,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34399,
											"end": 34755,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 34399,
											"end": 34755,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34399,
											"end": 34755,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 34399,
											"end": 34755,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 34399,
											"end": 34755,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34399,
											"end": 34755,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 34399,
											"end": 34755,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 34399,
											"end": 34755,
											"name": "tag",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 34399,
											"end": 34755,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34399,
											"end": 34755,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 34399,
											"end": 34755,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 34399,
											"end": 34755,
											"name": "tag",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 34399,
											"end": 34755,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34399,
											"end": 34755,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 23657,
											"end": 23685,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 23657,
											"end": 23685,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23657,
											"end": 23685,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 23657,
											"end": 23685,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 23657,
											"end": 23685,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 23657,
											"end": 23685,
											"name": "tag",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 23657,
											"end": 23685,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23657,
											"end": 23685,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 23657,
											"end": 23685,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 23657,
											"end": 23685,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 23657,
											"end": 23685,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 23657,
											"end": 23685,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23657,
											"end": 23685,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 23657,
											"end": 23685,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 23657,
											"end": 23685,
											"name": "tag",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 23657,
											"end": 23685,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23657,
											"end": 23685,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 23657,
											"end": 23685,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 23657,
											"end": 23685,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23657,
											"end": 23685,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 23657,
											"end": 23685,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 23657,
											"end": 23685,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23657,
											"end": 23685,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 26736,
											"end": 26859,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 26736,
											"end": 26859,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26736,
											"end": 26859,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 26736,
											"end": 26859,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 26736,
											"end": 26859,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26736,
											"end": 26859,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 26736,
											"end": 26859,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 26736,
											"end": 26859,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26736,
											"end": 26859,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 26736,
											"end": 26859,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26736,
											"end": 26859,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 26736,
											"end": 26859,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 26736,
											"end": 26859,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26736,
											"end": 26859,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 26736,
											"end": 26859,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 26736,
											"end": 26859,
											"name": "tag",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 26736,
											"end": 26859,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26736,
											"end": 26859,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 26736,
											"end": 26859,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 26736,
											"end": 26859,
											"name": "tag",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 26736,
											"end": 26859,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26736,
											"end": 26859,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 23533,
											"end": 23559,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 23533,
											"end": 23559,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23533,
											"end": 23559,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 23533,
											"end": 23559,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 23533,
											"end": 23559,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23533,
											"end": 23559,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 23533,
											"end": 23559,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 23533,
											"end": 23559,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23533,
											"end": 23559,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 23533,
											"end": 23559,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23533,
											"end": 23559,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 23533,
											"end": 23559,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 23533,
											"end": 23559,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23533,
											"end": 23559,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 23533,
											"end": 23559,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 23533,
											"end": 23559,
											"name": "tag",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 23533,
											"end": 23559,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23533,
											"end": 23559,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 23533,
											"end": 23559,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 23533,
											"end": 23559,
											"name": "tag",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 23533,
											"end": 23559,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23533,
											"end": 23559,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 23533,
											"end": 23559,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 23533,
											"end": 23559,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 23533,
											"end": 23559,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 23533,
											"end": 23559,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 23533,
											"end": 23559,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23533,
											"end": 23559,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 23533,
											"end": 23559,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 23533,
											"end": 23559,
											"name": "tag",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 23533,
											"end": 23559,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23533,
											"end": 23559,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 23533,
											"end": 23559,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 23533,
											"end": 23559,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23533,
											"end": 23559,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 23533,
											"end": 23559,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 23533,
											"end": 23559,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23533,
											"end": 23559,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 30020,
											"end": 30200,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 30020,
											"end": 30200,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30020,
											"end": 30200,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 30020,
											"end": 30200,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 30020,
											"end": 30200,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 30020,
											"end": 30200,
											"name": "tag",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 30020,
											"end": 30200,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30020,
											"end": 30200,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 27788,
											"end": 28093,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 27788,
											"end": 28093,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27788,
											"end": 28093,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 27788,
											"end": 28093,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 27788,
											"end": 28093,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27788,
											"end": 28093,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 27788,
											"end": 28093,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 27788,
											"end": 28093,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27788,
											"end": 28093,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 27788,
											"end": 28093,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27788,
											"end": 28093,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 27788,
											"end": 28093,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 27788,
											"end": 28093,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27788,
											"end": 28093,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 27788,
											"end": 28093,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 27788,
											"end": 28093,
											"name": "tag",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 27788,
											"end": 28093,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27788,
											"end": 28093,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 27788,
											"end": 28093,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 27788,
											"end": 28093,
											"name": "tag",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 27788,
											"end": 28093,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27788,
											"end": 28093,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 20756,
											"end": 20859,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 20756,
											"end": 20859,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20756,
											"end": 20859,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 20756,
											"end": 20859,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 20756,
											"end": 20859,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 20756,
											"end": 20859,
											"name": "tag",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 20756,
											"end": 20859,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20756,
											"end": 20859,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 23880,
											"end": 23909,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 23880,
											"end": 23909,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23880,
											"end": 23909,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 23880,
											"end": 23909,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 23880,
											"end": 23909,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 23880,
											"end": 23909,
											"name": "tag",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 23880,
											"end": 23909,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23880,
											"end": 23909,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 23880,
											"end": 23909,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 23880,
											"end": 23909,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 23880,
											"end": 23909,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 23880,
											"end": 23909,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23880,
											"end": 23909,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 23880,
											"end": 23909,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 23880,
											"end": 23909,
											"name": "tag",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 23880,
											"end": 23909,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23880,
											"end": 23909,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 23880,
											"end": 23909,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 23880,
											"end": 23909,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23880,
											"end": 23909,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 23880,
											"end": 23909,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 23880,
											"end": 23909,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23880,
											"end": 23909,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 23740,
											"end": 23775,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 23740,
											"end": 23775,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23740,
											"end": 23775,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 23740,
											"end": 23775,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 23740,
											"end": 23775,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 23740,
											"end": 23775,
											"name": "tag",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 23740,
											"end": 23775,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23740,
											"end": 23775,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 23740,
											"end": 23775,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 23740,
											"end": 23775,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 23740,
											"end": 23775,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 23740,
											"end": 23775,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23740,
											"end": 23775,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 23740,
											"end": 23775,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 23740,
											"end": 23775,
											"name": "tag",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 23740,
											"end": 23775,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23740,
											"end": 23775,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 23740,
											"end": 23775,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 23740,
											"end": 23775,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23740,
											"end": 23775,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 23740,
											"end": 23775,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 23740,
											"end": 23775,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23740,
											"end": 23775,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 25120,
											"end": 25238,
											"name": "tag",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 25120,
											"end": 25238,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25120,
											"end": 25238,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 25120,
											"end": 25238,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 25120,
											"end": 25238,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25120,
											"end": 25238,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 25120,
											"end": 25238,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 25120,
											"end": 25238,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25120,
											"end": 25238,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 25120,
											"end": 25238,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25120,
											"end": 25238,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 25120,
											"end": 25238,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 25120,
											"end": 25238,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25120,
											"end": 25238,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 25120,
											"end": 25238,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 25120,
											"end": 25238,
											"name": "tag",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 25120,
											"end": 25238,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25120,
											"end": 25238,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 25120,
											"end": 25238,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 25120,
											"end": 25238,
											"name": "tag",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 25120,
											"end": 25238,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25120,
											"end": 25238,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 25120,
											"end": 25238,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 25120,
											"end": 25238,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 25120,
											"end": 25238,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 25120,
											"end": 25238,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25120,
											"end": 25238,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 25120,
											"end": 25238,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 25120,
											"end": 25238,
											"name": "tag",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 25120,
											"end": 25238,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25120,
											"end": 25238,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 25120,
											"end": 25238,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 25120,
											"end": 25238,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25120,
											"end": 25238,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 25120,
											"end": 25238,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 25120,
											"end": 25238,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25120,
											"end": 25238,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 20105,
											"end": 20192,
											"name": "tag",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 20105,
											"end": 20192,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20105,
											"end": 20192,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 20105,
											"end": 20192,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 20105,
											"end": 20192,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 20105,
											"end": 20192,
											"name": "tag",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 20105,
											"end": 20192,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20105,
											"end": 20192,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 20105,
											"end": 20192,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 20105,
											"end": 20192,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 20105,
											"end": 20192,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 20105,
											"end": 20192,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20105,
											"end": 20192,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 20105,
											"end": 20192,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 20105,
											"end": 20192,
											"name": "tag",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 20105,
											"end": 20192,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20105,
											"end": 20192,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 20105,
											"end": 20192,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 20105,
											"end": 20192,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20105,
											"end": 20192,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 20105,
											"end": 20192,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 20105,
											"end": 20192,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20105,
											"end": 20192,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 28961,
											"end": 29105,
											"name": "tag",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 28961,
											"end": 29105,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28961,
											"end": 29105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 28961,
											"end": 29105,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 28961,
											"end": 29105,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28961,
											"end": 29105,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 28961,
											"end": 29105,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 28961,
											"end": 29105,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28961,
											"end": 29105,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 28961,
											"end": 29105,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28961,
											"end": 29105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 28961,
											"end": 29105,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 28961,
											"end": 29105,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28961,
											"end": 29105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 28961,
											"end": 29105,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 28961,
											"end": 29105,
											"name": "tag",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 28961,
											"end": 29105,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28961,
											"end": 29105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 28961,
											"end": 29105,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 28961,
											"end": 29105,
											"name": "tag",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 28961,
											"end": 29105,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28961,
											"end": 29105,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 28961,
											"end": 29105,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 28961,
											"end": 29105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 28961,
											"end": 29105,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 28961,
											"end": 29105,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28961,
											"end": 29105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 28961,
											"end": 29105,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 28961,
											"end": 29105,
											"name": "tag",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 28961,
											"end": 29105,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28961,
											"end": 29105,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 28961,
											"end": 29105,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 28961,
											"end": 29105,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28961,
											"end": 29105,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 28961,
											"end": 29105,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 28961,
											"end": 29105,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28961,
											"end": 29105,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 24025,
											"end": 24089,
											"name": "tag",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 24025,
											"end": 24089,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24025,
											"end": 24089,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 24025,
											"end": 24089,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 24025,
											"end": 24089,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24025,
											"end": 24089,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 24025,
											"end": 24089,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 24025,
											"end": 24089,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24025,
											"end": 24089,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 24025,
											"end": 24089,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24025,
											"end": 24089,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 24025,
											"end": 24089,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 24025,
											"end": 24089,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24025,
											"end": 24089,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 24025,
											"end": 24089,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 24025,
											"end": 24089,
											"name": "tag",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 24025,
											"end": 24089,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24025,
											"end": 24089,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 24025,
											"end": 24089,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 24025,
											"end": 24089,
											"name": "tag",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 24025,
											"end": 24089,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24025,
											"end": 24089,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 24025,
											"end": 24089,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 24025,
											"end": 24089,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 24025,
											"end": 24089,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 24025,
											"end": 24089,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 24025,
											"end": 24089,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24025,
											"end": 24089,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 24025,
											"end": 24089,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 24025,
											"end": 24089,
											"name": "tag",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 24025,
											"end": 24089,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24025,
											"end": 24089,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 24025,
											"end": 24089,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 24025,
											"end": 24089,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24025,
											"end": 24089,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 24025,
											"end": 24089,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 24025,
											"end": 24089,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24025,
											"end": 24089,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 23593,
											"end": 23610,
											"name": "tag",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 23593,
											"end": 23610,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23593,
											"end": 23610,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 23593,
											"end": 23610,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 23593,
											"end": 23610,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 23593,
											"end": 23610,
											"name": "tag",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 23593,
											"end": 23610,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23593,
											"end": 23610,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 23593,
											"end": 23610,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 23593,
											"end": 23610,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 23593,
											"end": 23610,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 23593,
											"end": 23610,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23593,
											"end": 23610,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 23593,
											"end": 23610,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 23593,
											"end": 23610,
											"name": "tag",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 23593,
											"end": 23610,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23593,
											"end": 23610,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 23593,
											"end": 23610,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 23593,
											"end": 23610,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23593,
											"end": 23610,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 23593,
											"end": 23610,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 23593,
											"end": 23610,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23593,
											"end": 23610,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 24310,
											"end": 24357,
											"name": "tag",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 24310,
											"end": 24357,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24310,
											"end": 24357,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 24310,
											"end": 24357,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 24310,
											"end": 24357,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24310,
											"end": 24357,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 24310,
											"end": 24357,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 24310,
											"end": 24357,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24310,
											"end": 24357,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 24310,
											"end": 24357,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24310,
											"end": 24357,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 24310,
											"end": 24357,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 24310,
											"end": 24357,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24310,
											"end": 24357,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 24310,
											"end": 24357,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 24310,
											"end": 24357,
											"name": "tag",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 24310,
											"end": 24357,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24310,
											"end": 24357,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 24310,
											"end": 24357,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 24310,
											"end": 24357,
											"name": "tag",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 24310,
											"end": 24357,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24310,
											"end": 24357,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 24310,
											"end": 24357,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 24310,
											"end": 24357,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 24310,
											"end": 24357,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 24310,
											"end": 24357,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24310,
											"end": 24357,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 24310,
											"end": 24357,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 24310,
											"end": 24357,
											"name": "tag",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 24310,
											"end": 24357,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24310,
											"end": 24357,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 24310,
											"end": 24357,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 24310,
											"end": 24357,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24310,
											"end": 24357,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 24310,
											"end": 24357,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 24310,
											"end": 24357,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24310,
											"end": 24357,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 31036,
											"end": 31832,
											"name": "tag",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 31036,
											"end": 31832,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31036,
											"end": 31832,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "148"
										},
										{
											"begin": 31036,
											"end": 31832,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 31036,
											"end": 31832,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 31036,
											"end": 31832,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 31036,
											"end": 31832,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 31036,
											"end": 31832,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31036,
											"end": 31832,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 31036,
											"end": 31832,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31036,
											"end": 31832,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 31036,
											"end": 31832,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 31036,
											"end": 31832,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31036,
											"end": 31832,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 31036,
											"end": 31832,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 31036,
											"end": 31832,
											"name": "tag",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 31036,
											"end": 31832,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31036,
											"end": 31832,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 31036,
											"end": 31832,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 31036,
											"end": 31832,
											"name": "tag",
											"source": 0,
											"value": "148"
										},
										{
											"begin": 31036,
											"end": 31832,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31036,
											"end": 31832,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 21014,
											"end": 21215,
											"name": "tag",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 21014,
											"end": 21215,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21014,
											"end": 21215,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 21014,
											"end": 21215,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 21014,
											"end": 21215,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21014,
											"end": 21215,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 21014,
											"end": 21215,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 21014,
											"end": 21215,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21014,
											"end": 21215,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 21014,
											"end": 21215,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21014,
											"end": 21215,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "152"
										},
										{
											"begin": 21014,
											"end": 21215,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 21014,
											"end": 21215,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21014,
											"end": 21215,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 21014,
											"end": 21215,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 21014,
											"end": 21215,
											"name": "tag",
											"source": 0,
											"value": "152"
										},
										{
											"begin": 21014,
											"end": 21215,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21014,
											"end": 21215,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "153"
										},
										{
											"begin": 21014,
											"end": 21215,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 21014,
											"end": 21215,
											"name": "tag",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 21014,
											"end": 21215,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21014,
											"end": 21215,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 29170,
											"end": 29937,
											"name": "tag",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 29170,
											"end": 29937,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29170,
											"end": 29937,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 29170,
											"end": 29937,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 29170,
											"end": 29937,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29170,
											"end": 29937,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 29170,
											"end": 29937,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 29170,
											"end": 29937,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29170,
											"end": 29937,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 29170,
											"end": 29937,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29170,
											"end": 29937,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 29170,
											"end": 29937,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 29170,
											"end": 29937,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29170,
											"end": 29937,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 29170,
											"end": 29937,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 29170,
											"end": 29937,
											"name": "tag",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 29170,
											"end": 29937,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29170,
											"end": 29937,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "156"
										},
										{
											"begin": 29170,
											"end": 29937,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 29170,
											"end": 29937,
											"name": "tag",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 29170,
											"end": 29937,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29170,
											"end": 29937,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 29170,
											"end": 29937,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 29170,
											"end": 29937,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 29170,
											"end": 29937,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 29170,
											"end": 29937,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29170,
											"end": 29937,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 29170,
											"end": 29937,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 29170,
											"end": 29937,
											"name": "tag",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 29170,
											"end": 29937,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29170,
											"end": 29937,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 29170,
											"end": 29937,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 29170,
											"end": 29937,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29170,
											"end": 29937,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 29170,
											"end": 29937,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 29170,
											"end": 29937,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29170,
											"end": 29937,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 26867,
											"end": 26962,
											"name": "tag",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 26867,
											"end": 26962,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26912,
											"end": 26919,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 26939,
											"end": 26947,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 26939,
											"end": 26954,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26939,
											"end": 26954,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 26939,
											"end": 26954,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26939,
											"end": 26954,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 26932,
											"end": 26954,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26932,
											"end": 26954,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 26867,
											"end": 26962,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26867,
											"end": 26962,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 33573,
											"end": 34320,
											"name": "tag",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 33573,
											"end": 34320,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33630,
											"end": 33651,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 33654,
											"end": 33662,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 33663,
											"end": 33664,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 33654,
											"end": 33665,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 33654,
											"end": 33665,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 33654,
											"end": 33665,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 33654,
											"end": 33665,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 33654,
											"end": 33665,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 33654,
											"end": 33665,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 33654,
											"end": 33665,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 33654,
											"end": 33665,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "162"
										},
										{
											"begin": 33654,
											"end": 33665,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 33654,
											"end": 33665,
											"name": "tag",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 33654,
											"end": 33665,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33654,
											"end": 33665,
											"name": "tag",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 33654,
											"end": 33665,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33654,
											"end": 33665,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33654,
											"end": 33665,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 33654,
											"end": 33665,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 33654,
											"end": 33665,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 33654,
											"end": 33665,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 33654,
											"end": 33665,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 33654,
											"end": 33665,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33654,
											"end": 33665,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 33654,
											"end": 33665,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 33654,
											"end": 33665,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 33630,
											"end": 33665,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33630,
											"end": 33665,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 33676,
											"end": 33697,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 33700,
											"end": 33708,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 33700,
											"end": 33711,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 33709,
											"end": 33710,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 33700,
											"end": 33711,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 33700,
											"end": 33711,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 33700,
											"end": 33711,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 33700,
											"end": 33711,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 33700,
											"end": 33711,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33700,
											"end": 33711,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 33700,
											"end": 33711,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 33700,
											"end": 33711,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 33700,
											"end": 33711,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 33700,
											"end": 33711,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 33700,
											"end": 33711,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 33700,
											"end": 33723,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 33712,
											"end": 33722,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 33700,
											"end": 33723,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 33700,
											"end": 33723,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 33700,
											"end": 33723,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 33700,
											"end": 33723,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 33700,
											"end": 33723,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 33700,
											"end": 33723,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 33700,
											"end": 33723,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 33700,
											"end": 33723,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 33700,
											"end": 33723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33700,
											"end": 33723,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 33700,
											"end": 33723,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 33700,
											"end": 33723,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 33700,
											"end": 33723,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 33700,
											"end": 33723,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 33700,
											"end": 33723,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 33676,
											"end": 33723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33676,
											"end": 33723,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 33757,
											"end": 33764,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 33742,
											"end": 33746,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 33742,
											"end": 33753,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 33742,
											"end": 33753,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 33742,
											"end": 33753,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 33742,
											"end": 33764,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 33742,
											"end": 33764,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 33734,
											"end": 33787,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "164"
										},
										{
											"begin": 33734,
											"end": 33787,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 33734,
											"end": 33787,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 33734,
											"end": 33787,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 33734,
											"end": 33787,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 33734,
											"end": 33787,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 33734,
											"end": 33787,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 33734,
											"end": 33787,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 33734,
											"end": 33787,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 33734,
											"end": 33787,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "165"
										},
										{
											"begin": 33734,
											"end": 33787,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33734,
											"end": 33787,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "166"
										},
										{
											"begin": 33734,
											"end": 33787,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 33734,
											"end": 33787,
											"name": "tag",
											"source": 0,
											"value": "165"
										},
										{
											"begin": 33734,
											"end": 33787,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33734,
											"end": 33787,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 33734,
											"end": 33787,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 33734,
											"end": 33787,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 33734,
											"end": 33787,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 33734,
											"end": 33787,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 33734,
											"end": 33787,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33734,
											"end": 33787,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 33734,
											"end": 33787,
											"name": "tag",
											"source": 0,
											"value": "164"
										},
										{
											"begin": 33734,
											"end": 33787,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33798,
											"end": 33811,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "167"
										},
										{
											"begin": 33809,
											"end": 33810,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 33798,
											"end": 33808,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 33798,
											"end": 33811,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 33798,
											"end": 33811,
											"name": "tag",
											"source": 0,
											"value": "167"
										},
										{
											"begin": 33798,
											"end": 33811,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33822,
											"end": 33837,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 33840,
											"end": 33909,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 33893,
											"end": 33897,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 33893,
											"end": 33908,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 33893,
											"end": 33908,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 33893,
											"end": 33908,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 33840,
											"end": 33888,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "169"
										},
										{
											"begin": 33883,
											"end": 33887,
											"name": "PUSH",
											"source": 0,
											"value": "E8D4A51000"
										},
										{
											"begin": 33840,
											"end": 33878,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "170"
										},
										{
											"begin": 33856,
											"end": 33860,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 33856,
											"end": 33877,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 33856,
											"end": 33877,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 33856,
											"end": 33877,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 33840,
											"end": 33844,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 33840,
											"end": 33851,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 33840,
											"end": 33851,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 33840,
											"end": 33851,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 33840,
											"end": 33855,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "171"
										},
										{
											"begin": 33840,
											"end": 33855,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33840,
											"end": 33878,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 33840,
											"end": 33878,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33840,
											"end": 33878,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 33840,
											"end": 33878,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 33840,
											"end": 33878,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 33840,
											"end": 33878,
											"name": "tag",
											"source": 0,
											"value": "170"
										},
										{
											"begin": 33840,
											"end": 33878,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33840,
											"end": 33882,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "172"
										},
										{
											"begin": 33840,
											"end": 33882,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33840,
											"end": 33888,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 33840,
											"end": 33888,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33840,
											"end": 33888,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 33840,
											"end": 33888,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 33840,
											"end": 33888,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 33840,
											"end": 33888,
											"name": "tag",
											"source": 0,
											"value": "169"
										},
										{
											"begin": 33840,
											"end": 33888,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33840,
											"end": 33892,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "173"
										},
										{
											"begin": 33840,
											"end": 33892,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33840,
											"end": 33909,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 33840,
											"end": 33909,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33840,
											"end": 33909,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 33840,
											"end": 33909,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 33840,
											"end": 33909,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 33840,
											"end": 33909,
											"name": "tag",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 33840,
											"end": 33909,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33822,
											"end": 33909,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33822,
											"end": 33909,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 33933,
											"end": 33934,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 33923,
											"end": 33930,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 33923,
											"end": 33934,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 33920,
											"end": 34027,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 33920,
											"end": 34027,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "174"
										},
										{
											"begin": 33920,
											"end": 34027,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 33978,
											"end": 34015,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "175"
										},
										{
											"begin": 34007,
											"end": 34014,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 33978,
											"end": 33990,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 33978,
											"end": 34002,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 33991,
											"end": 34001,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 33978,
											"end": 34002,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 33978,
											"end": 34002,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 33978,
											"end": 34002,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 33978,
											"end": 34002,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 33978,
											"end": 34002,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 33978,
											"end": 34002,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 33978,
											"end": 34002,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 33978,
											"end": 34002,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 33978,
											"end": 34002,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33978,
											"end": 34002,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 33978,
											"end": 34002,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 33978,
											"end": 34002,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 33978,
											"end": 34002,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 33978,
											"end": 34002,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 33978,
											"end": 34002,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 33978,
											"end": 34002,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 33978,
											"end": 34006,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 33978,
											"end": 34006,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33978,
											"end": 34015,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 33978,
											"end": 34015,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33978,
											"end": 34015,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 33978,
											"end": 34015,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 33978,
											"end": 34015,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 33978,
											"end": 34015,
											"name": "tag",
											"source": 0,
											"value": "175"
										},
										{
											"begin": 33978,
											"end": 34015,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33951,
											"end": 33963,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 33951,
											"end": 33975,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 33964,
											"end": 33974,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 33951,
											"end": 33975,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 33951,
											"end": 33975,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 33951,
											"end": 33975,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 33951,
											"end": 33975,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 33951,
											"end": 33975,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 33951,
											"end": 33975,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 33951,
											"end": 33975,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 33951,
											"end": 33975,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 33951,
											"end": 33975,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33951,
											"end": 33975,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 33951,
											"end": 33975,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 33951,
											"end": 33975,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 33951,
											"end": 33975,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 33951,
											"end": 33975,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 33951,
											"end": 33975,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 33951,
											"end": 34015,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 33951,
											"end": 34015,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33951,
											"end": 34015,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 33951,
											"end": 34015,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 33920,
											"end": 34027,
											"name": "tag",
											"source": 0,
											"value": "174"
										},
										{
											"begin": 33920,
											"end": 34027,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34050,
											"end": 34051,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 34040,
											"end": 34047,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 34040,
											"end": 34051,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 34037,
											"end": 34188,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 34037,
											"end": 34188,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "177"
										},
										{
											"begin": 34037,
											"end": 34188,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 34082,
											"end": 34106,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 34098,
											"end": 34105,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 34082,
											"end": 34086,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 34082,
											"end": 34093,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 34082,
											"end": 34093,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 34082,
											"end": 34093,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 34082,
											"end": 34097,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "173"
										},
										{
											"begin": 34082,
											"end": 34097,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34082,
											"end": 34106,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 34082,
											"end": 34106,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34082,
											"end": 34106,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 34082,
											"end": 34106,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 34082,
											"end": 34106,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 34082,
											"end": 34106,
											"name": "tag",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 34082,
											"end": 34106,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34068,
											"end": 34072,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 34068,
											"end": 34079,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 34068,
											"end": 34079,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 34068,
											"end": 34106,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34068,
											"end": 34106,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34068,
											"end": 34106,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 34068,
											"end": 34106,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 34121,
											"end": 34176,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "179"
										},
										{
											"begin": 34155,
											"end": 34165,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 34168,
											"end": 34175,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 34121,
											"end": 34125,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 34121,
											"end": 34133,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 34121,
											"end": 34133,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 34121,
											"end": 34133,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 34121,
											"end": 34133,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34121,
											"end": 34133,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 34121,
											"end": 34133,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34121,
											"end": 34133,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 34121,
											"end": 34133,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 34121,
											"end": 34133,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34121,
											"end": 34133,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 34121,
											"end": 34133,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 34121,
											"end": 34133,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 34121,
											"end": 34146,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 34121,
											"end": 34146,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 34121,
											"end": 34146,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "180"
										},
										{
											"begin": 34121,
											"end": 34146,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34121,
											"end": 34176,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 34121,
											"end": 34176,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 34121,
											"end": 34176,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34121,
											"end": 34176,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 34121,
											"end": 34176,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 34121,
											"end": 34176,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 34121,
											"end": 34176,
											"name": "tag",
											"source": 0,
											"value": "179"
										},
										{
											"begin": 34121,
											"end": 34176,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34037,
											"end": 34188,
											"name": "tag",
											"source": 0,
											"value": "177"
										},
										{
											"begin": 34037,
											"end": 34188,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34216,
											"end": 34264,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "181"
										},
										{
											"begin": 34259,
											"end": 34263,
											"name": "PUSH",
											"source": 0,
											"value": "E8D4A51000"
										},
										{
											"begin": 34216,
											"end": 34254,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "182"
										},
										{
											"begin": 34232,
											"end": 34236,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 34232,
											"end": 34253,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 34232,
											"end": 34253,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 34232,
											"end": 34253,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 34216,
											"end": 34220,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 34216,
											"end": 34227,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 34216,
											"end": 34227,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 34216,
											"end": 34227,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 34216,
											"end": 34231,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "171"
										},
										{
											"begin": 34216,
											"end": 34231,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34216,
											"end": 34254,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 34216,
											"end": 34254,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34216,
											"end": 34254,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 34216,
											"end": 34254,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 34216,
											"end": 34254,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 34216,
											"end": 34254,
											"name": "tag",
											"source": 0,
											"value": "182"
										},
										{
											"begin": 34216,
											"end": 34254,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34216,
											"end": 34258,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "172"
										},
										{
											"begin": 34216,
											"end": 34258,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34216,
											"end": 34264,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 34216,
											"end": 34264,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34216,
											"end": 34264,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 34216,
											"end": 34264,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 34216,
											"end": 34264,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 34216,
											"end": 34264,
											"name": "tag",
											"source": 0,
											"value": "181"
										},
										{
											"begin": 34216,
											"end": 34264,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34198,
											"end": 34202,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 34198,
											"end": 34213,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 34198,
											"end": 34213,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 34198,
											"end": 34264,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34198,
											"end": 34264,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34198,
											"end": 34264,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 34198,
											"end": 34264,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 34301,
											"end": 34302,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 34289,
											"end": 34299,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 34280,
											"end": 34312,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 34280,
											"end": 34312,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 34280,
											"end": 34312,
											"name": "PUSH",
											"source": 0,
											"value": "F279E6A1F5E320CCA91135676D9CB6E44CA8A08C0B88342BCDB1144F6511B568"
										},
										{
											"begin": 34304,
											"end": 34311,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 34280,
											"end": 34312,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 34280,
											"end": 34312,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 34280,
											"end": 34312,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "183"
										},
										{
											"begin": 34280,
											"end": 34312,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 34280,
											"end": 34312,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34280,
											"end": 34312,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 34280,
											"end": 34312,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 34280,
											"end": 34312,
											"name": "tag",
											"source": 0,
											"value": "183"
										},
										{
											"begin": 34280,
											"end": 34312,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34280,
											"end": 34312,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 34280,
											"end": 34312,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 34280,
											"end": 34312,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 34280,
											"end": 34312,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 34280,
											"end": 34312,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 34280,
											"end": 34312,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34280,
											"end": 34312,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 33619,
											"end": 34320,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 33619,
											"end": 34320,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 33619,
											"end": 34320,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 33573,
											"end": 34320,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 33573,
											"end": 34320,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 23943,
											"end": 23969,
											"name": "tag",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 23943,
											"end": 23969,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23943,
											"end": 23969,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 23943,
											"end": 23969,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23943,
											"end": 23969,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23943,
											"end": 23969,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 23943,
											"end": 23969,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23943,
											"end": 23969,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 23943,
											"end": 23969,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "184"
										},
										{
											"begin": 23943,
											"end": 23969,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 23943,
											"end": 23969,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 23943,
											"end": 23969,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23943,
											"end": 23969,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 23943,
											"end": 23969,
											"name": "tag",
											"source": 0,
											"value": "184"
										},
										{
											"begin": 23943,
											"end": 23969,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23943,
											"end": 23969,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23943,
											"end": 23969,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 23943,
											"end": 23969,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 23943,
											"end": 23969,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 23943,
											"end": 23969,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 23943,
											"end": 23969,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 23943,
											"end": 23969,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23943,
											"end": 23969,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 23943,
											"end": 23969,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 23943,
											"end": 23969,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 23943,
											"end": 23969,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 23943,
											"end": 23969,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 23943,
											"end": 23969,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 23943,
											"end": 23969,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23943,
											"end": 23969,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 23943,
											"end": 23969,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23943,
											"end": 23969,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 23943,
											"end": 23969,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 23943,
											"end": 23969,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 23943,
											"end": 23969,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23943,
											"end": 23969,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 23943,
											"end": 23969,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23943,
											"end": 23969,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 23943,
											"end": 23969,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 23943,
											"end": 23969,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23943,
											"end": 23969,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 23943,
											"end": 23969,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 23943,
											"end": 23969,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 23943,
											"end": 23969,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23943,
											"end": 23969,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23943,
											"end": 23969,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 23943,
											"end": 23969,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 23943,
											"end": 23969,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 23943,
											"end": 23969,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23943,
											"end": 23969,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23943,
											"end": 23969,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 23943,
											"end": 23969,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 23943,
											"end": 23969,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 23943,
											"end": 23969,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23943,
											"end": 23969,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23943,
											"end": 23969,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 23943,
											"end": 23969,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 23943,
											"end": 23969,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 23943,
											"end": 23969,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23943,
											"end": 23969,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 23943,
											"end": 23969,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 23943,
											"end": 23969,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 24184,
											"end": 24218,
											"name": "tag",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 24184,
											"end": 24218,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24184,
											"end": 24218,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 24184,
											"end": 24218,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 24184,
											"end": 24218,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24184,
											"end": 24218,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 25460,
											"end": 26728,
											"name": "tag",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 25460,
											"end": 26728,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25531,
											"end": 25552,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 25555,
											"end": 25563,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 25564,
											"end": 25568,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 25555,
											"end": 25569,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25555,
											"end": 25569,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 25555,
											"end": 25569,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25555,
											"end": 25569,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 25555,
											"end": 25569,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "187"
										},
										{
											"begin": 25555,
											"end": 25569,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 25555,
											"end": 25569,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "188"
										},
										{
											"begin": 25555,
											"end": 25569,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "162"
										},
										{
											"begin": 25555,
											"end": 25569,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 25555,
											"end": 25569,
											"name": "tag",
											"source": 0,
											"value": "188"
										},
										{
											"begin": 25555,
											"end": 25569,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25555,
											"end": 25569,
											"name": "tag",
											"source": 0,
											"value": "187"
										},
										{
											"begin": 25555,
											"end": 25569,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25555,
											"end": 25569,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25555,
											"end": 25569,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 25555,
											"end": 25569,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 25555,
											"end": 25569,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 25555,
											"end": 25569,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 25555,
											"end": 25569,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 25555,
											"end": 25569,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25555,
											"end": 25569,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 25555,
											"end": 25569,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 25555,
											"end": 25569,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 25531,
											"end": 25569,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25531,
											"end": 25569,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25580,
											"end": 25601,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 25604,
											"end": 25612,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 25604,
											"end": 25618,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 25613,
											"end": 25617,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 25604,
											"end": 25618,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25604,
											"end": 25618,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 25604,
											"end": 25618,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 25604,
											"end": 25618,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 25604,
											"end": 25618,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25604,
											"end": 25618,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25604,
											"end": 25618,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 25604,
											"end": 25618,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 25604,
											"end": 25618,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 25604,
											"end": 25618,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 25604,
											"end": 25618,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 25604,
											"end": 25630,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 25619,
											"end": 25629,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 25604,
											"end": 25630,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 25604,
											"end": 25630,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 25604,
											"end": 25630,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 25604,
											"end": 25630,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 25604,
											"end": 25630,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25604,
											"end": 25630,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 25604,
											"end": 25630,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 25604,
											"end": 25630,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 25604,
											"end": 25630,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25604,
											"end": 25630,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25604,
											"end": 25630,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 25604,
											"end": 25630,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 25604,
											"end": 25630,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 25604,
											"end": 25630,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 25604,
											"end": 25630,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 25580,
											"end": 25630,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25580,
											"end": 25630,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25641,
											"end": 25665,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 25668,
											"end": 25672,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 25668,
											"end": 25689,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 25668,
											"end": 25689,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 25668,
											"end": 25689,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 25641,
											"end": 25689,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25641,
											"end": 25689,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25700,
											"end": 25716,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 25719,
											"end": 25723,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 25719,
											"end": 25731,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 25719,
											"end": 25731,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 25719,
											"end": 25731,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 25719,
											"end": 25731,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25719,
											"end": 25731,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 25719,
											"end": 25731,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25719,
											"end": 25731,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 25719,
											"end": 25731,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 25719,
											"end": 25731,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25719,
											"end": 25731,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 25719,
											"end": 25731,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 25719,
											"end": 25731,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 25719,
											"end": 25741,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 25719,
											"end": 25741,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 25719,
											"end": 25741,
											"name": "PUSH",
											"source": 0,
											"value": "70A08231"
										},
										{
											"begin": 25750,
											"end": 25754,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 25719,
											"end": 25756,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 25719,
											"end": 25756,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 25719,
											"end": 25756,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 25719,
											"end": 25756,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 25719,
											"end": 25756,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 25719,
											"end": 25756,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 25719,
											"end": 25756,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 25719,
											"end": 25756,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25719,
											"end": 25756,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 25719,
											"end": 25756,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 25719,
											"end": 25756,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 25719,
											"end": 25756,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "190"
										},
										{
											"begin": 25719,
											"end": 25756,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 25719,
											"end": 25756,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25719,
											"end": 25756,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 25719,
											"end": 25756,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 25719,
											"end": 25756,
											"name": "tag",
											"source": 0,
											"value": "190"
										},
										{
											"begin": 25719,
											"end": 25756,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25719,
											"end": 25756,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 25719,
											"end": 25756,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 25719,
											"end": 25756,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 25719,
											"end": 25756,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25719,
											"end": 25756,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 25719,
											"end": 25756,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 25719,
											"end": 25756,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25719,
											"end": 25756,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 25719,
											"end": 25756,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25719,
											"end": 25756,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 25719,
											"end": 25756,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 25719,
											"end": 25756,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25719,
											"end": 25756,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 25719,
											"end": 25756,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "191"
										},
										{
											"begin": 25719,
											"end": 25756,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 25719,
											"end": 25756,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 25719,
											"end": 25756,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25719,
											"end": 25756,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 25719,
											"end": 25756,
											"name": "tag",
											"source": 0,
											"value": "191"
										},
										{
											"begin": 25719,
											"end": 25756,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25719,
											"end": 25756,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25719,
											"end": 25756,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 25719,
											"end": 25756,
											"name": "STATICCALL",
											"source": 0
										},
										{
											"begin": 25719,
											"end": 25756,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 25719,
											"end": 25756,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25719,
											"end": 25756,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 25719,
											"end": 25756,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "193"
										},
										{
											"begin": 25719,
											"end": 25756,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 25719,
											"end": 25756,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 25719,
											"end": 25756,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 25719,
											"end": 25756,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25719,
											"end": 25756,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 25719,
											"end": 25756,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 25719,
											"end": 25756,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 25719,
											"end": 25756,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 25719,
											"end": 25756,
											"name": "tag",
											"source": 0,
											"value": "193"
										},
										{
											"begin": 25719,
											"end": 25756,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25719,
											"end": 25756,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25719,
											"end": 25756,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25719,
											"end": 25756,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25719,
											"end": 25756,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25719,
											"end": 25756,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 25719,
											"end": 25756,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 25719,
											"end": 25756,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 25719,
											"end": 25756,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 25719,
											"end": 25756,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 25719,
											"end": 25756,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 25719,
											"end": 25756,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 25719,
											"end": 25756,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 25719,
											"end": 25756,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 25719,
											"end": 25756,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 25719,
											"end": 25756,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 25719,
											"end": 25756,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25719,
											"end": 25756,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 25719,
											"end": 25756,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 25719,
											"end": 25756,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25719,
											"end": 25756,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25719,
											"end": 25756,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 25719,
											"end": 25756,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25719,
											"end": 25756,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "194"
										},
										{
											"begin": 25719,
											"end": 25756,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 25719,
											"end": 25756,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25719,
											"end": 25756,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "195"
										},
										{
											"begin": 25719,
											"end": 25756,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 25719,
											"end": 25756,
											"name": "tag",
											"source": 0,
											"value": "194"
										},
										{
											"begin": 25719,
											"end": 25756,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25700,
											"end": 25756,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25700,
											"end": 25756,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25786,
											"end": 25790,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 25786,
											"end": 25806,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 25786,
											"end": 25806,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 25786,
											"end": 25806,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 25771,
											"end": 25783,
											"name": "NUMBER",
											"source": 0
										},
										{
											"begin": 25771,
											"end": 25806,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 25771,
											"end": 25823,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25771,
											"end": 25823,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 25771,
											"end": 25823,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "196"
										},
										{
											"begin": 25771,
											"end": 25823,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 25771,
											"end": 25823,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25822,
											"end": 25823,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 25810,
											"end": 25818,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25810,
											"end": 25823,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 25810,
											"end": 25823,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 25771,
											"end": 25823,
											"name": "tag",
											"source": 0,
											"value": "196"
										},
										{
											"begin": 25771,
											"end": 25823,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25767,
											"end": 26121,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 25767,
											"end": 26121,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "197"
										},
										{
											"begin": 25767,
											"end": 26121,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 25840,
											"end": 25858,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 25861,
											"end": 25910,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "198"
										},
										{
											"begin": 25875,
											"end": 25879,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 25875,
											"end": 25895,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 25875,
											"end": 25895,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 25875,
											"end": 25895,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 25897,
											"end": 25909,
											"name": "NUMBER",
											"source": 0
										},
										{
											"begin": 25861,
											"end": 25874,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 25861,
											"end": 25910,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 25861,
											"end": 25910,
											"name": "tag",
											"source": 0,
											"value": "198"
										},
										{
											"begin": 25861,
											"end": 25910,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25840,
											"end": 25910,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25840,
											"end": 25910,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25925,
											"end": 25944,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 25947,
											"end": 26018,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "199"
										},
										{
											"begin": 26002,
											"end": 26017,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 26002,
											"end": 26017,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 25947,
											"end": 25997,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "200"
										},
										{
											"begin": 25981,
											"end": 25985,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 25981,
											"end": 25996,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 25981,
											"end": 25996,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 25981,
											"end": 25996,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 25947,
											"end": 25976,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "201"
										},
										{
											"begin": 25962,
											"end": 25975,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 25962,
											"end": 25975,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 25947,
											"end": 25957,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 25947,
											"end": 25961,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "171"
										},
										{
											"begin": 25947,
											"end": 25961,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25947,
											"end": 25976,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 25947,
											"end": 25976,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25947,
											"end": 25976,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 25947,
											"end": 25976,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 25947,
											"end": 25976,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 25947,
											"end": 25976,
											"name": "tag",
											"source": 0,
											"value": "201"
										},
										{
											"begin": 25947,
											"end": 25976,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25947,
											"end": 25980,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "171"
										},
										{
											"begin": 25947,
											"end": 25980,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25947,
											"end": 25997,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 25947,
											"end": 25997,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25947,
											"end": 25997,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 25947,
											"end": 25997,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 25947,
											"end": 25997,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 25947,
											"end": 25997,
											"name": "tag",
											"source": 0,
											"value": "200"
										},
										{
											"begin": 25947,
											"end": 25997,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25947,
											"end": 26001,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "172"
										},
										{
											"begin": 25947,
											"end": 26001,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25947,
											"end": 26018,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 25947,
											"end": 26018,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25947,
											"end": 26018,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 25947,
											"end": 26018,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 25947,
											"end": 26018,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 25947,
											"end": 26018,
											"name": "tag",
											"source": 0,
											"value": "199"
										},
										{
											"begin": 25947,
											"end": 26018,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25925,
											"end": 26018,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25925,
											"end": 26018,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 26052,
											"end": 26109,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "202"
										},
										{
											"begin": 26073,
											"end": 26108,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "203"
										},
										{
											"begin": 26099,
											"end": 26107,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 26073,
											"end": 26094,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "204"
										},
										{
											"begin": 26089,
											"end": 26093,
											"name": "PUSH",
											"source": 0,
											"value": "E8D4A51000"
										},
										{
											"begin": 26073,
											"end": 26084,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 26073,
											"end": 26088,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "171"
										},
										{
											"begin": 26073,
											"end": 26088,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26073,
											"end": 26094,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 26073,
											"end": 26094,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26073,
											"end": 26094,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 26073,
											"end": 26094,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 26073,
											"end": 26094,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 26073,
											"end": 26094,
											"name": "tag",
											"source": 0,
											"value": "204"
										},
										{
											"begin": 26073,
											"end": 26094,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26073,
											"end": 26098,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "172"
										},
										{
											"begin": 26073,
											"end": 26098,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26073,
											"end": 26108,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 26073,
											"end": 26108,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26073,
											"end": 26108,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 26073,
											"end": 26108,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 26073,
											"end": 26108,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 26073,
											"end": 26108,
											"name": "tag",
											"source": 0,
											"value": "203"
										},
										{
											"begin": 26073,
											"end": 26108,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26052,
											"end": 26068,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 26052,
											"end": 26072,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 26052,
											"end": 26072,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26052,
											"end": 26109,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 26052,
											"end": 26109,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26052,
											"end": 26109,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 26052,
											"end": 26109,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 26052,
											"end": 26109,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 26052,
											"end": 26109,
											"name": "tag",
											"source": 0,
											"value": "202"
										},
										{
											"begin": 26052,
											"end": 26109,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26033,
											"end": 26109,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 26033,
											"end": 26109,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25825,
											"end": 26121,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25825,
											"end": 26121,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25767,
											"end": 26121,
											"name": "tag",
											"source": 0,
											"value": "197"
										},
										{
											"begin": 25767,
											"end": 26121,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26131,
											"end": 26146,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 26149,
											"end": 26213,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "205"
										},
										{
											"begin": 26197,
											"end": 26201,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 26197,
											"end": 26212,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 26197,
											"end": 26212,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 26197,
											"end": 26212,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 26149,
											"end": 26192,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "206"
										},
										{
											"begin": 26187,
											"end": 26191,
											"name": "PUSH",
											"source": 0,
											"value": "E8D4A51000"
										},
										{
											"begin": 26149,
											"end": 26182,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "207"
										},
										{
											"begin": 26165,
											"end": 26181,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 26149,
											"end": 26153,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 26149,
											"end": 26160,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 26149,
											"end": 26160,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 26149,
											"end": 26160,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 26149,
											"end": 26164,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "171"
										},
										{
											"begin": 26149,
											"end": 26164,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26149,
											"end": 26182,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 26149,
											"end": 26182,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26149,
											"end": 26182,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 26149,
											"end": 26182,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 26149,
											"end": 26182,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 26149,
											"end": 26182,
											"name": "tag",
											"source": 0,
											"value": "207"
										},
										{
											"begin": 26149,
											"end": 26182,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26149,
											"end": 26186,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "172"
										},
										{
											"begin": 26149,
											"end": 26186,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26149,
											"end": 26192,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 26149,
											"end": 26192,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26149,
											"end": 26192,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 26149,
											"end": 26192,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 26149,
											"end": 26192,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 26149,
											"end": 26192,
											"name": "tag",
											"source": 0,
											"value": "206"
										},
										{
											"begin": 26149,
											"end": 26192,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26149,
											"end": 26196,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "173"
										},
										{
											"begin": 26149,
											"end": 26196,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26149,
											"end": 26213,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 26149,
											"end": 26213,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26149,
											"end": 26213,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 26149,
											"end": 26213,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 26149,
											"end": 26213,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 26149,
											"end": 26213,
											"name": "tag",
											"source": 0,
											"value": "205"
										},
										{
											"begin": 26149,
											"end": 26213,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26131,
											"end": 26213,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26131,
											"end": 26213,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 26224,
											"end": 26244,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 26247,
											"end": 26255,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 26256,
											"end": 26261,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 26247,
											"end": 26262,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26247,
											"end": 26262,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 26247,
											"end": 26262,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26247,
											"end": 26262,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 26247,
											"end": 26262,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "208"
										},
										{
											"begin": 26247,
											"end": 26262,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 26247,
											"end": 26262,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "209"
										},
										{
											"begin": 26247,
											"end": 26262,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "162"
										},
										{
											"begin": 26247,
											"end": 26262,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 26247,
											"end": 26262,
											"name": "tag",
											"source": 0,
											"value": "209"
										},
										{
											"begin": 26247,
											"end": 26262,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26247,
											"end": 26262,
											"name": "tag",
											"source": 0,
											"value": "208"
										},
										{
											"begin": 26247,
											"end": 26262,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26247,
											"end": 26262,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26247,
											"end": 26262,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 26247,
											"end": 26262,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 26247,
											"end": 26262,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 26247,
											"end": 26262,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 26247,
											"end": 26262,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 26247,
											"end": 26262,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26247,
											"end": 26262,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 26247,
											"end": 26262,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 26247,
											"end": 26262,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 26224,
											"end": 26262,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26224,
											"end": 26262,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 26273,
											"end": 26286,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 26289,
											"end": 26326,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "211"
										},
										{
											"begin": 26301,
											"end": 26313,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 26301,
											"end": 26325,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 26314,
											"end": 26324,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 26301,
											"end": 26325,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 26301,
											"end": 26325,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 26301,
											"end": 26325,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 26301,
											"end": 26325,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 26301,
											"end": 26325,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26301,
											"end": 26325,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 26301,
											"end": 26325,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 26301,
											"end": 26325,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 26301,
											"end": 26325,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26301,
											"end": 26325,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26301,
											"end": 26325,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 26301,
											"end": 26325,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 26301,
											"end": 26325,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 26301,
											"end": 26325,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 26301,
											"end": 26325,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 26301,
											"end": 26325,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 26289,
											"end": 26296,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 26289,
											"end": 26300,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 26289,
											"end": 26300,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26289,
											"end": 26326,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 26289,
											"end": 26326,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26289,
											"end": 26326,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 26289,
											"end": 26326,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 26289,
											"end": 26326,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 26289,
											"end": 26326,
											"name": "tag",
											"source": 0,
											"value": "211"
										},
										{
											"begin": 26289,
											"end": 26326,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26273,
											"end": 26326,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26273,
											"end": 26326,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 26348,
											"end": 26351,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26348,
											"end": 26357,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 26348,
											"end": 26357,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 26348,
											"end": 26357,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 26340,
											"end": 26345,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26340,
											"end": 26357,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 26337,
											"end": 26525,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 26337,
											"end": 26525,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "212"
										},
										{
											"begin": 26337,
											"end": 26525,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 26384,
											"end": 26385,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 26376,
											"end": 26380,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 26376,
											"end": 26385,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 26373,
											"end": 26436,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 26373,
											"end": 26436,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "213"
										},
										{
											"begin": 26373,
											"end": 26436,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 26405,
											"end": 26420,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "214"
										},
										{
											"begin": 26418,
											"end": 26419,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 26405,
											"end": 26417,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 26405,
											"end": 26420,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 26405,
											"end": 26420,
											"name": "tag",
											"source": 0,
											"value": "214"
										},
										{
											"begin": 26405,
											"end": 26420,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26373,
											"end": 26436,
											"name": "tag",
											"source": 0,
											"value": "213"
										},
										{
											"begin": 26373,
											"end": 26436,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26461,
											"end": 26462,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 26453,
											"end": 26457,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 26453,
											"end": 26462,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 26450,
											"end": 26514,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "215"
										},
										{
											"begin": 26450,
											"end": 26514,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 26482,
											"end": 26498,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "216"
										},
										{
											"begin": 26491,
											"end": 26495,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 26496,
											"end": 26497,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 26482,
											"end": 26490,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 26482,
											"end": 26498,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 26482,
											"end": 26498,
											"name": "tag",
											"source": 0,
											"value": "216"
										},
										{
											"begin": 26482,
											"end": 26498,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26450,
											"end": 26514,
											"name": "tag",
											"source": 0,
											"value": "215"
										},
										{
											"begin": 26450,
											"end": 26514,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26337,
											"end": 26525,
											"name": "tag",
											"source": 0,
											"value": "212"
										},
										{
											"begin": 26337,
											"end": 26525,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26555,
											"end": 26567,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 26555,
											"end": 26579,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 26568,
											"end": 26578,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 26555,
											"end": 26579,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 26555,
											"end": 26579,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 26555,
											"end": 26579,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 26555,
											"end": 26579,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 26555,
											"end": 26579,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26555,
											"end": 26579,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 26555,
											"end": 26579,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 26555,
											"end": 26579,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 26555,
											"end": 26579,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26555,
											"end": 26579,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26555,
											"end": 26579,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 26555,
											"end": 26579,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 26555,
											"end": 26579,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 26555,
											"end": 26579,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 26555,
											"end": 26579,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 26555,
											"end": 26579,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 26543,
											"end": 26546,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 26543,
											"end": 26552,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 26543,
											"end": 26552,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 26543,
											"end": 26552,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 26543,
											"end": 26579,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 26535,
											"end": 26603,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "217"
										},
										{
											"begin": 26535,
											"end": 26603,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 26535,
											"end": 26603,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 26535,
											"end": 26603,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 26535,
											"end": 26603,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 26535,
											"end": 26603,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26535,
											"end": 26603,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 26535,
											"end": 26603,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 26535,
											"end": 26603,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 26535,
											"end": 26603,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "218"
										},
										{
											"begin": 26535,
											"end": 26603,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26535,
											"end": 26603,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "219"
										},
										{
											"begin": 26535,
											"end": 26603,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 26535,
											"end": 26603,
											"name": "tag",
											"source": 0,
											"value": "218"
										},
										{
											"begin": 26535,
											"end": 26603,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26535,
											"end": 26603,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 26535,
											"end": 26603,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 26535,
											"end": 26603,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26535,
											"end": 26603,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 26535,
											"end": 26603,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 26535,
											"end": 26603,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26535,
											"end": 26603,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 26535,
											"end": 26603,
											"name": "tag",
											"source": 0,
											"value": "217"
										},
										{
											"begin": 26535,
											"end": 26603,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26641,
											"end": 26680,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "220"
										},
										{
											"begin": 26670,
											"end": 26673,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 26670,
											"end": 26679,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 26670,
											"end": 26679,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 26670,
											"end": 26679,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 26641,
											"end": 26653,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 26641,
											"end": 26665,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 26654,
											"end": 26664,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 26641,
											"end": 26665,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 26641,
											"end": 26665,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 26641,
											"end": 26665,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 26641,
											"end": 26665,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 26641,
											"end": 26665,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26641,
											"end": 26665,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 26641,
											"end": 26665,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 26641,
											"end": 26665,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 26641,
											"end": 26665,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26641,
											"end": 26665,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26641,
											"end": 26665,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 26641,
											"end": 26665,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 26641,
											"end": 26665,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 26641,
											"end": 26665,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 26641,
											"end": 26665,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 26641,
											"end": 26665,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 26641,
											"end": 26669,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "173"
										},
										{
											"begin": 26641,
											"end": 26669,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26641,
											"end": 26680,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 26641,
											"end": 26680,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26641,
											"end": 26680,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 26641,
											"end": 26680,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 26641,
											"end": 26680,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 26641,
											"end": 26680,
											"name": "tag",
											"source": 0,
											"value": "220"
										},
										{
											"begin": 26641,
											"end": 26680,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26614,
											"end": 26626,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 26614,
											"end": 26638,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 26627,
											"end": 26637,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 26614,
											"end": 26638,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 26614,
											"end": 26638,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 26614,
											"end": 26638,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 26614,
											"end": 26638,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 26614,
											"end": 26638,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26614,
											"end": 26638,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 26614,
											"end": 26638,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 26614,
											"end": 26638,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 26614,
											"end": 26638,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26614,
											"end": 26638,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26614,
											"end": 26638,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 26614,
											"end": 26638,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 26614,
											"end": 26638,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 26614,
											"end": 26638,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 26614,
											"end": 26638,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 26614,
											"end": 26680,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26614,
											"end": 26680,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26614,
											"end": 26680,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 26614,
											"end": 26680,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 26691,
											"end": 26694,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26691,
											"end": 26698,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 26691,
											"end": 26698,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 26691,
											"end": 26698,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 26691,
											"end": 26698,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26691,
											"end": 26698,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 26691,
											"end": 26698,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26691,
											"end": 26698,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 26691,
											"end": 26698,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 26691,
											"end": 26698,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26691,
											"end": 26698,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 26691,
											"end": 26698,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 26691,
											"end": 26698,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 26691,
											"end": 26708,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 26691,
											"end": 26708,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 26691,
											"end": 26708,
											"name": "PUSH",
											"source": 0,
											"value": "17E5883C"
										},
										{
											"begin": 26709,
											"end": 26719,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 26691,
											"end": 26720,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 26691,
											"end": 26720,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 26691,
											"end": 26720,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 26691,
											"end": 26720,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 26691,
											"end": 26720,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 26691,
											"end": 26720,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 26691,
											"end": 26720,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 26691,
											"end": 26720,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26691,
											"end": 26720,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 26691,
											"end": 26720,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 26691,
											"end": 26720,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 26691,
											"end": 26720,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "221"
										},
										{
											"begin": 26691,
											"end": 26720,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 26691,
											"end": 26720,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26691,
											"end": 26720,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 26691,
											"end": 26720,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 26691,
											"end": 26720,
											"name": "tag",
											"source": 0,
											"value": "221"
										},
										{
											"begin": 26691,
											"end": 26720,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26691,
											"end": 26720,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 26691,
											"end": 26720,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 26691,
											"end": 26720,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 26691,
											"end": 26720,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26691,
											"end": 26720,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 26691,
											"end": 26720,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 26691,
											"end": 26720,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26691,
											"end": 26720,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 26691,
											"end": 26720,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 26691,
											"end": 26720,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26691,
											"end": 26720,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 26691,
											"end": 26720,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 26691,
											"end": 26720,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26691,
											"end": 26720,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 26691,
											"end": 26720,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "222"
										},
										{
											"begin": 26691,
											"end": 26720,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 26691,
											"end": 26720,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 26691,
											"end": 26720,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26691,
											"end": 26720,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 26691,
											"end": 26720,
											"name": "tag",
											"source": 0,
											"value": "222"
										},
										{
											"begin": 26691,
											"end": 26720,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26691,
											"end": 26720,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 26691,
											"end": 26720,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 26691,
											"end": 26720,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 26691,
											"end": 26720,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 26691,
											"end": 26720,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26691,
											"end": 26720,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 26691,
											"end": 26720,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "224"
										},
										{
											"begin": 26691,
											"end": 26720,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 26691,
											"end": 26720,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 26691,
											"end": 26720,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 26691,
											"end": 26720,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26691,
											"end": 26720,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 26691,
											"end": 26720,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 26691,
											"end": 26720,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 26691,
											"end": 26720,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 26691,
											"end": 26720,
											"name": "tag",
											"source": 0,
											"value": "224"
										},
										{
											"begin": 26691,
											"end": 26720,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26691,
											"end": 26720,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 26691,
											"end": 26720,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 26691,
											"end": 26720,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 26691,
											"end": 26720,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25520,
											"end": 26728,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25520,
											"end": 26728,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25520,
											"end": 26728,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25520,
											"end": 26728,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25520,
											"end": 26728,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25520,
											"end": 26728,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25520,
											"end": 26728,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25460,
											"end": 26728,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25460,
											"end": 26728,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25460,
											"end": 26728,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 27131,
											"end": 27691,
											"name": "tag",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 27131,
											"end": 27691,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20336,
											"end": 20348,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "226"
										},
										{
											"begin": 20336,
											"end": 20346,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "227"
										},
										{
											"begin": 20336,
											"end": 20348,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 20336,
											"end": 20348,
											"name": "tag",
											"source": 0,
											"value": "226"
										},
										{
											"begin": 20336,
											"end": 20348,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20325,
											"end": 20348,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 20325,
											"end": 20348,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20325,
											"end": 20332,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "228"
										},
										{
											"begin": 20325,
											"end": 20330,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 20325,
											"end": 20332,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 20325,
											"end": 20332,
											"name": "tag",
											"source": 0,
											"value": "228"
										},
										{
											"begin": 20325,
											"end": 20332,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20325,
											"end": 20348,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 20325,
											"end": 20348,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20325,
											"end": 20348,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "229"
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "230"
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "231"
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "tag",
											"source": 0,
											"value": "230"
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "tag",
											"source": 0,
											"value": "229"
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27234,
											"end": 27245,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27230,
											"end": 27291,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 27230,
											"end": 27291,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "233"
										},
										{
											"begin": 27230,
											"end": 27291,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 27262,
											"end": 27279,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "234"
										},
										{
											"begin": 27262,
											"end": 27277,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 27262,
											"end": 27279,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 27262,
											"end": 27279,
											"name": "tag",
											"source": 0,
											"value": "234"
										},
										{
											"begin": 27262,
											"end": 27279,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27230,
											"end": 27291,
											"name": "tag",
											"source": 0,
											"value": "233"
										},
										{
											"begin": 27230,
											"end": 27291,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27301,
											"end": 27324,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 27342,
											"end": 27352,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 27342,
											"end": 27352,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 27327,
											"end": 27339,
											"name": "NUMBER",
											"source": 0
										},
										{
											"begin": 27327,
											"end": 27352,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 27327,
											"end": 27380,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "235"
										},
										{
											"begin": 27327,
											"end": 27380,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 27370,
											"end": 27380,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 27370,
											"end": 27380,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 27327,
											"end": 27380,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "236"
										},
										{
											"begin": 27327,
											"end": 27380,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 27327,
											"end": 27380,
											"name": "tag",
											"source": 0,
											"value": "235"
										},
										{
											"begin": 27327,
											"end": 27380,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27355,
											"end": 27367,
											"name": "NUMBER",
											"source": 0
										},
										{
											"begin": 27327,
											"end": 27380,
											"name": "tag",
											"source": 0,
											"value": "236"
										},
										{
											"begin": 27327,
											"end": 27380,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27301,
											"end": 27380,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27301,
											"end": 27380,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 27409,
											"end": 27441,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "237"
										},
										{
											"begin": 27429,
											"end": 27440,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 27409,
											"end": 27424,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 27409,
											"end": 27424,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 27409,
											"end": 27428,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 27409,
											"end": 27428,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27409,
											"end": 27441,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 27409,
											"end": 27441,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27409,
											"end": 27441,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 27409,
											"end": 27441,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 27409,
											"end": 27441,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 27409,
											"end": 27441,
											"name": "tag",
											"source": 0,
											"value": "237"
										},
										{
											"begin": 27409,
											"end": 27441,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27391,
											"end": 27406,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 27391,
											"end": 27441,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27391,
											"end": 27441,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27391,
											"end": 27441,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 27391,
											"end": 27441,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 27452,
											"end": 27460,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 27480,
											"end": 27672,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 27480,
											"end": 27672,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 27480,
											"end": 27672,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27480,
											"end": 27672,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 27480,
											"end": 27672,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 27480,
											"end": 27672,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 27480,
											"end": 27672,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 27480,
											"end": 27672,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27517,
											"end": 27525,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 27480,
											"end": 27672,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 27480,
											"end": 27672,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 27480,
											"end": 27672,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27480,
											"end": 27672,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 27480,
											"end": 27672,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 27480,
											"end": 27672,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 27556,
											"end": 27567,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 27480,
											"end": 27672,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27480,
											"end": 27672,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 27480,
											"end": 27672,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 27480,
											"end": 27672,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 27603,
											"end": 27618,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 27480,
											"end": 27672,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27480,
											"end": 27672,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 27480,
											"end": 27672,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 27480,
											"end": 27672,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 27655,
											"end": 27656,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 27480,
											"end": 27672,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27480,
											"end": 27672,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 27480,
											"end": 27672,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 27452,
											"end": 27683,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27452,
											"end": 27683,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27452,
											"end": 27683,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 27452,
											"end": 27683,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27452,
											"end": 27683,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 27452,
											"end": 27683,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 27452,
											"end": 27683,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27452,
											"end": 27683,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 27452,
											"end": 27683,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 27452,
											"end": 27683,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27452,
											"end": 27683,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 27452,
											"end": 27683,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 27452,
											"end": 27683,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 27452,
											"end": 27683,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 27452,
											"end": 27683,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27452,
											"end": 27683,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 27452,
											"end": 27683,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27452,
											"end": 27683,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 27452,
											"end": 27683,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 27452,
											"end": 27683,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 27452,
											"end": 27683,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 27452,
											"end": 27683,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 27452,
											"end": 27683,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27452,
											"end": 27683,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 27452,
											"end": 27683,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 27452,
											"end": 27683,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 27452,
											"end": 27683,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 27452,
											"end": 27683,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27452,
											"end": 27683,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 27452,
											"end": 27683,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27452,
											"end": 27683,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 27452,
											"end": 27683,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27452,
											"end": 27683,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 27452,
											"end": 27683,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 27452,
											"end": 27683,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 27452,
											"end": 27683,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 27452,
											"end": 27683,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 27452,
											"end": 27683,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 27452,
											"end": 27683,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27452,
											"end": 27683,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 27452,
											"end": 27683,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 27452,
											"end": 27683,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 27452,
											"end": 27683,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 27452,
											"end": 27683,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 27452,
											"end": 27683,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27452,
											"end": 27683,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 27452,
											"end": 27683,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27452,
											"end": 27683,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 27452,
											"end": 27683,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 27452,
											"end": 27683,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 27452,
											"end": 27683,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 27452,
											"end": 27683,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27452,
											"end": 27683,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 27452,
											"end": 27683,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 27452,
											"end": 27683,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 27452,
											"end": 27683,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 27452,
											"end": 27683,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 27452,
											"end": 27683,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27452,
											"end": 27683,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 27452,
											"end": 27683,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 27452,
											"end": 27683,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 27452,
											"end": 27683,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 27452,
											"end": 27683,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 27452,
											"end": 27683,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 27452,
											"end": 27683,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27452,
											"end": 27683,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 27452,
											"end": 27683,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 27452,
											"end": 27683,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 27452,
											"end": 27683,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 27452,
											"end": 27683,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 27452,
											"end": 27683,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 27452,
											"end": 27683,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 27452,
											"end": 27683,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27452,
											"end": 27683,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 27452,
											"end": 27683,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 27452,
											"end": 27683,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 27452,
											"end": 27683,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 27452,
											"end": 27683,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 27452,
											"end": 27683,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 27452,
											"end": 27683,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 27452,
											"end": 27683,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27452,
											"end": 27683,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 27452,
											"end": 27683,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 27452,
											"end": 27683,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 27452,
											"end": 27683,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 27452,
											"end": 27683,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 27219,
											"end": 27691,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 27131,
											"end": 27691,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 27131,
											"end": 27691,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 27131,
											"end": 27691,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 27131,
											"end": 27691,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 28169,
											"end": 28271,
											"name": "tag",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 28169,
											"end": 28271,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20336,
											"end": 20348,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "240"
										},
										{
											"begin": 20336,
											"end": 20346,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "227"
										},
										{
											"begin": 20336,
											"end": 20348,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 20336,
											"end": 20348,
											"name": "tag",
											"source": 0,
											"value": "240"
										},
										{
											"begin": 20336,
											"end": 20348,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20325,
											"end": 20348,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 20325,
											"end": 20348,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20325,
											"end": 20332,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "241"
										},
										{
											"begin": 20325,
											"end": 20330,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 20325,
											"end": 20332,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 20325,
											"end": 20332,
											"name": "tag",
											"source": 0,
											"value": "241"
										},
										{
											"begin": 20325,
											"end": 20332,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20325,
											"end": 20348,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 20325,
											"end": 20348,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20325,
											"end": 20348,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "242"
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "243"
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "231"
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "tag",
											"source": 0,
											"value": "243"
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "tag",
											"source": 0,
											"value": "242"
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28254,
											"end": 28263,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28243,
											"end": 28251,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 28243,
											"end": 28251,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 28243,
											"end": 28263,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 28243,
											"end": 28263,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 28243,
											"end": 28263,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28243,
											"end": 28263,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 28243,
											"end": 28263,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28243,
											"end": 28263,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 28243,
											"end": 28263,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 28243,
											"end": 28263,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 28243,
											"end": 28263,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 28243,
											"end": 28263,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28243,
											"end": 28263,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 28243,
											"end": 28263,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 28243,
											"end": 28263,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 28243,
											"end": 28263,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 28243,
											"end": 28263,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 28243,
											"end": 28263,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28243,
											"end": 28263,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 28243,
											"end": 28263,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 28169,
											"end": 28271,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 28169,
											"end": 28271,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 34767,
											"end": 34876,
											"name": "tag",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 34767,
											"end": 34876,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20336,
											"end": 20348,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "246"
										},
										{
											"begin": 20336,
											"end": 20346,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "227"
										},
										{
											"begin": 20336,
											"end": 20348,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 20336,
											"end": 20348,
											"name": "tag",
											"source": 0,
											"value": "246"
										},
										{
											"begin": 20336,
											"end": 20348,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20325,
											"end": 20348,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 20325,
											"end": 20348,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20325,
											"end": 20332,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "247"
										},
										{
											"begin": 20325,
											"end": 20330,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 20325,
											"end": 20332,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 20325,
											"end": 20332,
											"name": "tag",
											"source": 0,
											"value": "247"
										},
										{
											"begin": 20325,
											"end": 20332,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20325,
											"end": 20348,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 20325,
											"end": 20348,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20325,
											"end": 20348,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "248"
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "249"
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "231"
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "tag",
											"source": 0,
											"value": "249"
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "tag",
											"source": 0,
											"value": "248"
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34859,
											"end": 34868,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 34843,
											"end": 34856,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 34843,
											"end": 34868,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34843,
											"end": 34868,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34843,
											"end": 34868,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 34843,
											"end": 34868,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 34767,
											"end": 34876,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 34767,
											"end": 34876,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 32724,
											"end": 33521,
											"name": "tag",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 32724,
											"end": 33521,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32781,
											"end": 32802,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 32805,
											"end": 32813,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 32814,
											"end": 32815,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 32805,
											"end": 32816,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32805,
											"end": 32816,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 32805,
											"end": 32816,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32805,
											"end": 32816,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 32805,
											"end": 32816,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "252"
										},
										{
											"begin": 32805,
											"end": 32816,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 32805,
											"end": 32816,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "253"
										},
										{
											"begin": 32805,
											"end": 32816,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "162"
										},
										{
											"begin": 32805,
											"end": 32816,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 32805,
											"end": 32816,
											"name": "tag",
											"source": 0,
											"value": "253"
										},
										{
											"begin": 32805,
											"end": 32816,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32805,
											"end": 32816,
											"name": "tag",
											"source": 0,
											"value": "252"
										},
										{
											"begin": 32805,
											"end": 32816,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32805,
											"end": 32816,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32805,
											"end": 32816,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 32805,
											"end": 32816,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 32805,
											"end": 32816,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 32805,
											"end": 32816,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 32805,
											"end": 32816,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 32805,
											"end": 32816,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32805,
											"end": 32816,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 32805,
											"end": 32816,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 32805,
											"end": 32816,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 32781,
											"end": 32816,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32781,
											"end": 32816,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 32827,
											"end": 32848,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 32851,
											"end": 32859,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 32851,
											"end": 32862,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 32860,
											"end": 32861,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 32851,
											"end": 32862,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32851,
											"end": 32862,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 32851,
											"end": 32862,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 32851,
											"end": 32862,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 32851,
											"end": 32862,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32851,
											"end": 32862,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32851,
											"end": 32862,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 32851,
											"end": 32862,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 32851,
											"end": 32862,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 32851,
											"end": 32862,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 32851,
											"end": 32862,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 32851,
											"end": 32883,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 32871,
											"end": 32881,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 32851,
											"end": 32883,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 32851,
											"end": 32883,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 32851,
											"end": 32883,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 32851,
											"end": 32883,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 32851,
											"end": 32883,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32851,
											"end": 32883,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 32851,
											"end": 32883,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 32851,
											"end": 32883,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 32851,
											"end": 32883,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32851,
											"end": 32883,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32851,
											"end": 32883,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 32851,
											"end": 32883,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 32851,
											"end": 32883,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 32851,
											"end": 32883,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 32851,
											"end": 32883,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 32827,
											"end": 32883,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32827,
											"end": 32883,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 32904,
											"end": 32917,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "255"
										},
										{
											"begin": 32915,
											"end": 32916,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 32904,
											"end": 32914,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 32904,
											"end": 32917,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 32904,
											"end": 32917,
											"name": "tag",
											"source": 0,
											"value": "255"
										},
										{
											"begin": 32904,
											"end": 32917,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32946,
											"end": 32947,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 32932,
											"end": 32936,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32932,
											"end": 32943,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 32932,
											"end": 32943,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 32932,
											"end": 32943,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 32932,
											"end": 32947,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 32928,
											"end": 33210,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 32928,
											"end": 33210,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "256"
										},
										{
											"begin": 32928,
											"end": 33210,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 32964,
											"end": 32979,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 32982,
											"end": 33051,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "257"
										},
										{
											"begin": 33035,
											"end": 33039,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 33035,
											"end": 33050,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 33035,
											"end": 33050,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 33035,
											"end": 33050,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 32982,
											"end": 33030,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "258"
										},
										{
											"begin": 33025,
											"end": 33029,
											"name": "PUSH",
											"source": 0,
											"value": "E8D4A51000"
										},
										{
											"begin": 32982,
											"end": 33020,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "259"
										},
										{
											"begin": 32998,
											"end": 33002,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 32998,
											"end": 33019,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 32998,
											"end": 33019,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 32998,
											"end": 33019,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 32982,
											"end": 32986,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 32982,
											"end": 32993,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 32982,
											"end": 32993,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 32982,
											"end": 32993,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 32982,
											"end": 32997,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "171"
										},
										{
											"begin": 32982,
											"end": 32997,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32982,
											"end": 33020,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 32982,
											"end": 33020,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32982,
											"end": 33020,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 32982,
											"end": 33020,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 32982,
											"end": 33020,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 32982,
											"end": 33020,
											"name": "tag",
											"source": 0,
											"value": "259"
										},
										{
											"begin": 32982,
											"end": 33020,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32982,
											"end": 33024,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "172"
										},
										{
											"begin": 32982,
											"end": 33024,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32982,
											"end": 33030,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 32982,
											"end": 33030,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32982,
											"end": 33030,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 32982,
											"end": 33030,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 32982,
											"end": 33030,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 32982,
											"end": 33030,
											"name": "tag",
											"source": 0,
											"value": "258"
										},
										{
											"begin": 32982,
											"end": 33030,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32982,
											"end": 33034,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "173"
										},
										{
											"begin": 32982,
											"end": 33034,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32982,
											"end": 33051,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 32982,
											"end": 33051,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32982,
											"end": 33051,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 32982,
											"end": 33051,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 32982,
											"end": 33051,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 32982,
											"end": 33051,
											"name": "tag",
											"source": 0,
											"value": "257"
										},
										{
											"begin": 32982,
											"end": 33051,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32964,
											"end": 33051,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32964,
											"end": 33051,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 33079,
											"end": 33080,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 33069,
											"end": 33076,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 33069,
											"end": 33080,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 33066,
											"end": 33199,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 33066,
											"end": 33199,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "260"
										},
										{
											"begin": 33066,
											"end": 33199,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 33137,
											"end": 33183,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "261"
										},
										{
											"begin": 33175,
											"end": 33182,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 33137,
											"end": 33149,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 33137,
											"end": 33170,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 33158,
											"end": 33168,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 33137,
											"end": 33170,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 33137,
											"end": 33170,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 33137,
											"end": 33170,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 33137,
											"end": 33170,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 33137,
											"end": 33170,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 33137,
											"end": 33170,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 33137,
											"end": 33170,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 33137,
											"end": 33170,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 33137,
											"end": 33170,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33137,
											"end": 33170,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 33137,
											"end": 33170,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 33137,
											"end": 33170,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 33137,
											"end": 33170,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 33137,
											"end": 33170,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 33137,
											"end": 33170,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 33137,
											"end": 33170,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 33137,
											"end": 33174,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 33137,
											"end": 33174,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33137,
											"end": 33183,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 33137,
											"end": 33183,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33137,
											"end": 33183,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 33137,
											"end": 33183,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 33137,
											"end": 33183,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 33137,
											"end": 33183,
											"name": "tag",
											"source": 0,
											"value": "261"
										},
										{
											"begin": 33137,
											"end": 33183,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33101,
											"end": 33113,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 33101,
											"end": 33134,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 33122,
											"end": 33132,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 33101,
											"end": 33134,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 33101,
											"end": 33134,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 33101,
											"end": 33134,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 33101,
											"end": 33134,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 33101,
											"end": 33134,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 33101,
											"end": 33134,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 33101,
											"end": 33134,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 33101,
											"end": 33134,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 33101,
											"end": 33134,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33101,
											"end": 33134,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 33101,
											"end": 33134,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 33101,
											"end": 33134,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 33101,
											"end": 33134,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 33101,
											"end": 33134,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 33101,
											"end": 33134,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 33101,
											"end": 33183,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 33101,
											"end": 33183,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33101,
											"end": 33183,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 33101,
											"end": 33183,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 33066,
											"end": 33199,
											"name": "tag",
											"source": 0,
											"value": "260"
										},
										{
											"begin": 33066,
											"end": 33199,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32949,
											"end": 33210,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 32928,
											"end": 33210,
											"name": "tag",
											"source": 0,
											"value": "256"
										},
										{
											"begin": 32928,
											"end": 33210,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33233,
											"end": 33234,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 33223,
											"end": 33230,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 33223,
											"end": 33234,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 33220,
											"end": 33390,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 33220,
											"end": 33390,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "262"
										},
										{
											"begin": 33220,
											"end": 33390,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 33251,
											"end": 33325,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "263"
										},
										{
											"begin": 33289,
											"end": 33299,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 33310,
											"end": 33314,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 33317,
											"end": 33324,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 33251,
											"end": 33255,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 33251,
											"end": 33263,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 33251,
											"end": 33263,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 33251,
											"end": 33263,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 33251,
											"end": 33263,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33251,
											"end": 33263,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 33251,
											"end": 33263,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33251,
											"end": 33263,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 33251,
											"end": 33263,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 33251,
											"end": 33263,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33251,
											"end": 33263,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 33251,
											"end": 33263,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 33251,
											"end": 33263,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 33251,
											"end": 33280,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 33251,
											"end": 33280,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 33251,
											"end": 33280,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "264"
										},
										{
											"begin": 33251,
											"end": 33280,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33251,
											"end": 33325,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 33251,
											"end": 33325,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 33251,
											"end": 33325,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 33251,
											"end": 33325,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33251,
											"end": 33325,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 33251,
											"end": 33325,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 33251,
											"end": 33325,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 33251,
											"end": 33325,
											"name": "tag",
											"source": 0,
											"value": "263"
										},
										{
											"begin": 33251,
											"end": 33325,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33354,
											"end": 33378,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "265"
										},
										{
											"begin": 33370,
											"end": 33377,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 33354,
											"end": 33358,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 33354,
											"end": 33365,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 33354,
											"end": 33365,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 33354,
											"end": 33365,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 33354,
											"end": 33369,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 33354,
											"end": 33369,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33354,
											"end": 33378,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 33354,
											"end": 33378,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33354,
											"end": 33378,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 33354,
											"end": 33378,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 33354,
											"end": 33378,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 33354,
											"end": 33378,
											"name": "tag",
											"source": 0,
											"value": "265"
										},
										{
											"begin": 33354,
											"end": 33378,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33340,
											"end": 33344,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 33340,
											"end": 33351,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 33340,
											"end": 33351,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 33340,
											"end": 33378,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 33340,
											"end": 33378,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33340,
											"end": 33378,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 33340,
											"end": 33378,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 33220,
											"end": 33390,
											"name": "tag",
											"source": 0,
											"value": "262"
										},
										{
											"begin": 33220,
											"end": 33390,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33418,
											"end": 33466,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "266"
										},
										{
											"begin": 33461,
											"end": 33465,
											"name": "PUSH",
											"source": 0,
											"value": "E8D4A51000"
										},
										{
											"begin": 33418,
											"end": 33456,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "267"
										},
										{
											"begin": 33434,
											"end": 33438,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 33434,
											"end": 33455,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 33434,
											"end": 33455,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 33434,
											"end": 33455,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 33418,
											"end": 33422,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 33418,
											"end": 33429,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 33418,
											"end": 33429,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 33418,
											"end": 33429,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 33418,
											"end": 33433,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "171"
										},
										{
											"begin": 33418,
											"end": 33433,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33418,
											"end": 33456,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 33418,
											"end": 33456,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33418,
											"end": 33456,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 33418,
											"end": 33456,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 33418,
											"end": 33456,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 33418,
											"end": 33456,
											"name": "tag",
											"source": 0,
											"value": "267"
										},
										{
											"begin": 33418,
											"end": 33456,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33418,
											"end": 33460,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "172"
										},
										{
											"begin": 33418,
											"end": 33460,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33418,
											"end": 33466,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 33418,
											"end": 33466,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33418,
											"end": 33466,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 33418,
											"end": 33466,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 33418,
											"end": 33466,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 33418,
											"end": 33466,
											"name": "tag",
											"source": 0,
											"value": "266"
										},
										{
											"begin": 33418,
											"end": 33466,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33400,
											"end": 33404,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 33400,
											"end": 33415,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 33400,
											"end": 33415,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 33400,
											"end": 33466,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 33400,
											"end": 33466,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33400,
											"end": 33466,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 33400,
											"end": 33466,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 33502,
											"end": 33503,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 33490,
											"end": 33500,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 33482,
											"end": 33513,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 33482,
											"end": 33513,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 33482,
											"end": 33513,
											"name": "PUSH",
											"source": 0,
											"value": "90890809C654F11D6E72A28FA60149770A0D11EC6C92319D6CEB2BB0A4EA1A15"
										},
										{
											"begin": 33505,
											"end": 33512,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 33482,
											"end": 33513,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 33482,
											"end": 33513,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 33482,
											"end": 33513,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "268"
										},
										{
											"begin": 33482,
											"end": 33513,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 33482,
											"end": 33513,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33482,
											"end": 33513,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 33482,
											"end": 33513,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 33482,
											"end": 33513,
											"name": "tag",
											"source": 0,
											"value": "268"
										},
										{
											"begin": 33482,
											"end": 33513,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33482,
											"end": 33513,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 33482,
											"end": 33513,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 33482,
											"end": 33513,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 33482,
											"end": 33513,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 33482,
											"end": 33513,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 33482,
											"end": 33513,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33482,
											"end": 33513,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 32770,
											"end": 33521,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 32770,
											"end": 33521,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 32724,
											"end": 33521,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 32724,
											"end": 33521,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 31884,
											"end": 32671,
											"name": "tag",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 31884,
											"end": 32671,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31970,
											"end": 31971,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 31962,
											"end": 31966,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 31962,
											"end": 31971,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 31962,
											"end": 31971,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 31953,
											"end": 32003,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "270"
										},
										{
											"begin": 31953,
											"end": 32003,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 31953,
											"end": 32003,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 31953,
											"end": 32003,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 31953,
											"end": 32003,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 31953,
											"end": 32003,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31953,
											"end": 32003,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 31953,
											"end": 32003,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 31953,
											"end": 32003,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 31953,
											"end": 32003,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "271"
										},
										{
											"begin": 31953,
											"end": 32003,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31953,
											"end": 32003,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "272"
										},
										{
											"begin": 31953,
											"end": 32003,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 31953,
											"end": 32003,
											"name": "tag",
											"source": 0,
											"value": "271"
										},
										{
											"begin": 31953,
											"end": 32003,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31953,
											"end": 32003,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 31953,
											"end": 32003,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 31953,
											"end": 32003,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 31953,
											"end": 32003,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 31953,
											"end": 32003,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 31953,
											"end": 32003,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31953,
											"end": 32003,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 31953,
											"end": 32003,
											"name": "tag",
											"source": 0,
											"value": "270"
										},
										{
											"begin": 31953,
											"end": 32003,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32016,
											"end": 32037,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 32040,
											"end": 32048,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 32049,
											"end": 32053,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 32040,
											"end": 32054,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32040,
											"end": 32054,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 32040,
											"end": 32054,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32040,
											"end": 32054,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 32040,
											"end": 32054,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "273"
										},
										{
											"begin": 32040,
											"end": 32054,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 32040,
											"end": 32054,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "274"
										},
										{
											"begin": 32040,
											"end": 32054,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "162"
										},
										{
											"begin": 32040,
											"end": 32054,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 32040,
											"end": 32054,
											"name": "tag",
											"source": 0,
											"value": "274"
										},
										{
											"begin": 32040,
											"end": 32054,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32040,
											"end": 32054,
											"name": "tag",
											"source": 0,
											"value": "273"
										},
										{
											"begin": 32040,
											"end": 32054,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32040,
											"end": 32054,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32040,
											"end": 32054,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 32040,
											"end": 32054,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 32040,
											"end": 32054,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 32040,
											"end": 32054,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 32040,
											"end": 32054,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 32040,
											"end": 32054,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32040,
											"end": 32054,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 32040,
											"end": 32054,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 32040,
											"end": 32054,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 32016,
											"end": 32054,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32016,
											"end": 32054,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 32065,
											"end": 32086,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 32089,
											"end": 32097,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 32089,
											"end": 32103,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 32098,
											"end": 32102,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 32089,
											"end": 32103,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32089,
											"end": 32103,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 32089,
											"end": 32103,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 32089,
											"end": 32103,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 32089,
											"end": 32103,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32089,
											"end": 32103,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32089,
											"end": 32103,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 32089,
											"end": 32103,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 32089,
											"end": 32103,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 32089,
											"end": 32103,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 32089,
											"end": 32103,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 32089,
											"end": 32115,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 32104,
											"end": 32114,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 32089,
											"end": 32115,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 32089,
											"end": 32115,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 32089,
											"end": 32115,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 32089,
											"end": 32115,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 32089,
											"end": 32115,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32089,
											"end": 32115,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 32089,
											"end": 32115,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 32089,
											"end": 32115,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 32089,
											"end": 32115,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32089,
											"end": 32115,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32089,
											"end": 32115,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 32089,
											"end": 32115,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 32089,
											"end": 32115,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 32089,
											"end": 32115,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 32089,
											"end": 32115,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 32065,
											"end": 32115,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32065,
											"end": 32115,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 32149,
											"end": 32156,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 32134,
											"end": 32138,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32134,
											"end": 32145,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 32134,
											"end": 32145,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 32134,
											"end": 32145,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 32134,
											"end": 32156,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 32134,
											"end": 32156,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 32126,
											"end": 32179,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "276"
										},
										{
											"begin": 32126,
											"end": 32179,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 32126,
											"end": 32179,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 32126,
											"end": 32179,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 32126,
											"end": 32179,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 32126,
											"end": 32179,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32126,
											"end": 32179,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 32126,
											"end": 32179,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 32126,
											"end": 32179,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 32126,
											"end": 32179,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "277"
										},
										{
											"begin": 32126,
											"end": 32179,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32126,
											"end": 32179,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "166"
										},
										{
											"begin": 32126,
											"end": 32179,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 32126,
											"end": 32179,
											"name": "tag",
											"source": 0,
											"value": "277"
										},
										{
											"begin": 32126,
											"end": 32179,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32126,
											"end": 32179,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 32126,
											"end": 32179,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 32126,
											"end": 32179,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 32126,
											"end": 32179,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 32126,
											"end": 32179,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 32126,
											"end": 32179,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32126,
											"end": 32179,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 32126,
											"end": 32179,
											"name": "tag",
											"source": 0,
											"value": "276"
										},
										{
											"begin": 32126,
											"end": 32179,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32190,
											"end": 32206,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "278"
										},
										{
											"begin": 32201,
											"end": 32205,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 32190,
											"end": 32200,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 32190,
											"end": 32206,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 32190,
											"end": 32206,
											"name": "tag",
											"source": 0,
											"value": "278"
										},
										{
											"begin": 32190,
											"end": 32206,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32217,
											"end": 32232,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 32235,
											"end": 32304,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "279"
										},
										{
											"begin": 32288,
											"end": 32292,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 32288,
											"end": 32303,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 32288,
											"end": 32303,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 32288,
											"end": 32303,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 32235,
											"end": 32283,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "280"
										},
										{
											"begin": 32278,
											"end": 32282,
											"name": "PUSH",
											"source": 0,
											"value": "E8D4A51000"
										},
										{
											"begin": 32235,
											"end": 32273,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "281"
										},
										{
											"begin": 32251,
											"end": 32255,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 32251,
											"end": 32272,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 32251,
											"end": 32272,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 32251,
											"end": 32272,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 32235,
											"end": 32239,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 32235,
											"end": 32246,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 32235,
											"end": 32246,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 32235,
											"end": 32246,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 32235,
											"end": 32250,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "171"
										},
										{
											"begin": 32235,
											"end": 32250,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32235,
											"end": 32273,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 32235,
											"end": 32273,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32235,
											"end": 32273,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 32235,
											"end": 32273,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 32235,
											"end": 32273,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 32235,
											"end": 32273,
											"name": "tag",
											"source": 0,
											"value": "281"
										},
										{
											"begin": 32235,
											"end": 32273,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32235,
											"end": 32277,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "172"
										},
										{
											"begin": 32235,
											"end": 32277,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32235,
											"end": 32283,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 32235,
											"end": 32283,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32235,
											"end": 32283,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 32235,
											"end": 32283,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 32235,
											"end": 32283,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 32235,
											"end": 32283,
											"name": "tag",
											"source": 0,
											"value": "280"
										},
										{
											"begin": 32235,
											"end": 32283,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32235,
											"end": 32287,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "173"
										},
										{
											"begin": 32235,
											"end": 32287,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32235,
											"end": 32304,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 32235,
											"end": 32304,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32235,
											"end": 32304,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 32235,
											"end": 32304,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 32235,
											"end": 32304,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 32235,
											"end": 32304,
											"name": "tag",
											"source": 0,
											"value": "279"
										},
										{
											"begin": 32235,
											"end": 32304,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32217,
											"end": 32304,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32217,
											"end": 32304,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 32328,
											"end": 32329,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 32318,
											"end": 32325,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32318,
											"end": 32329,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 32315,
											"end": 32421,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 32315,
											"end": 32421,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "282"
										},
										{
											"begin": 32315,
											"end": 32421,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 32372,
											"end": 32409,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "283"
										},
										{
											"begin": 32401,
											"end": 32408,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32372,
											"end": 32384,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 32372,
											"end": 32396,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 32385,
											"end": 32395,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 32372,
											"end": 32396,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 32372,
											"end": 32396,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 32372,
											"end": 32396,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 32372,
											"end": 32396,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 32372,
											"end": 32396,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32372,
											"end": 32396,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 32372,
											"end": 32396,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 32372,
											"end": 32396,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 32372,
											"end": 32396,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32372,
											"end": 32396,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32372,
											"end": 32396,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 32372,
											"end": 32396,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 32372,
											"end": 32396,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 32372,
											"end": 32396,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 32372,
											"end": 32396,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 32372,
											"end": 32396,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 32372,
											"end": 32400,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 32372,
											"end": 32400,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32372,
											"end": 32409,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 32372,
											"end": 32409,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32372,
											"end": 32409,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 32372,
											"end": 32409,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 32372,
											"end": 32409,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 32372,
											"end": 32409,
											"name": "tag",
											"source": 0,
											"value": "283"
										},
										{
											"begin": 32372,
											"end": 32409,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32345,
											"end": 32357,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 32345,
											"end": 32369,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 32358,
											"end": 32368,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 32345,
											"end": 32369,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 32345,
											"end": 32369,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 32345,
											"end": 32369,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 32345,
											"end": 32369,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 32345,
											"end": 32369,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32345,
											"end": 32369,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 32345,
											"end": 32369,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 32345,
											"end": 32369,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 32345,
											"end": 32369,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32345,
											"end": 32369,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32345,
											"end": 32369,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 32345,
											"end": 32369,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 32345,
											"end": 32369,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 32345,
											"end": 32369,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 32345,
											"end": 32369,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 32345,
											"end": 32409,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32345,
											"end": 32409,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32345,
											"end": 32409,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 32345,
											"end": 32409,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 32315,
											"end": 32421,
											"name": "tag",
											"source": 0,
											"value": "282"
										},
										{
											"begin": 32315,
											"end": 32421,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32445,
											"end": 32469,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "284"
										},
										{
											"begin": 32461,
											"end": 32468,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 32445,
											"end": 32449,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 32445,
											"end": 32456,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 32445,
											"end": 32456,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 32445,
											"end": 32456,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 32445,
											"end": 32460,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "173"
										},
										{
											"begin": 32445,
											"end": 32460,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32445,
											"end": 32469,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 32445,
											"end": 32469,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32445,
											"end": 32469,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 32445,
											"end": 32469,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 32445,
											"end": 32469,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 32445,
											"end": 32469,
											"name": "tag",
											"source": 0,
											"value": "284"
										},
										{
											"begin": 32445,
											"end": 32469,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32431,
											"end": 32435,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 32431,
											"end": 32442,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 32431,
											"end": 32442,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 32431,
											"end": 32469,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32431,
											"end": 32469,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32431,
											"end": 32469,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 32431,
											"end": 32469,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 32498,
											"end": 32546,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "285"
										},
										{
											"begin": 32541,
											"end": 32545,
											"name": "PUSH",
											"source": 0,
											"value": "E8D4A51000"
										},
										{
											"begin": 32498,
											"end": 32536,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "286"
										},
										{
											"begin": 32514,
											"end": 32518,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 32514,
											"end": 32535,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 32514,
											"end": 32535,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 32514,
											"end": 32535,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 32498,
											"end": 32502,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 32498,
											"end": 32509,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 32498,
											"end": 32509,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 32498,
											"end": 32509,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 32498,
											"end": 32513,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "171"
										},
										{
											"begin": 32498,
											"end": 32513,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32498,
											"end": 32536,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 32498,
											"end": 32536,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32498,
											"end": 32536,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 32498,
											"end": 32536,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 32498,
											"end": 32536,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 32498,
											"end": 32536,
											"name": "tag",
											"source": 0,
											"value": "286"
										},
										{
											"begin": 32498,
											"end": 32536,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32498,
											"end": 32540,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "172"
										},
										{
											"begin": 32498,
											"end": 32540,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32498,
											"end": 32546,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 32498,
											"end": 32546,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32498,
											"end": 32546,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 32498,
											"end": 32546,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 32498,
											"end": 32546,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 32498,
											"end": 32546,
											"name": "tag",
											"source": 0,
											"value": "285"
										},
										{
											"begin": 32498,
											"end": 32546,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32480,
											"end": 32484,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 32480,
											"end": 32495,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 32480,
											"end": 32495,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 32480,
											"end": 32546,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32480,
											"end": 32546,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32480,
											"end": 32546,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 32480,
											"end": 32546,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 32557,
											"end": 32612,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "287"
										},
										{
											"begin": 32591,
											"end": 32601,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 32604,
											"end": 32611,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 32557,
											"end": 32561,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 32557,
											"end": 32569,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 32557,
											"end": 32569,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 32557,
											"end": 32569,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 32557,
											"end": 32569,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32557,
											"end": 32569,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 32557,
											"end": 32569,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32557,
											"end": 32569,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 32557,
											"end": 32569,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 32557,
											"end": 32569,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32557,
											"end": 32569,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 32557,
											"end": 32569,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 32557,
											"end": 32569,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 32557,
											"end": 32582,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 32557,
											"end": 32582,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 32557,
											"end": 32582,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "180"
										},
										{
											"begin": 32557,
											"end": 32582,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32557,
											"end": 32612,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 32557,
											"end": 32612,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 32557,
											"end": 32612,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32557,
											"end": 32612,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 32557,
											"end": 32612,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 32557,
											"end": 32612,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 32557,
											"end": 32612,
											"name": "tag",
											"source": 0,
											"value": "287"
										},
										{
											"begin": 32557,
											"end": 32612,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32649,
											"end": 32653,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 32637,
											"end": 32647,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 32628,
											"end": 32663,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 32628,
											"end": 32663,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 32628,
											"end": 32663,
											"name": "PUSH",
											"source": 0,
											"value": "F279E6A1F5E320CCA91135676D9CB6E44CA8A08C0B88342BCDB1144F6511B568"
										},
										{
											"begin": 32655,
											"end": 32662,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 32628,
											"end": 32663,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 32628,
											"end": 32663,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 32628,
											"end": 32663,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "288"
										},
										{
											"begin": 32628,
											"end": 32663,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 32628,
											"end": 32663,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32628,
											"end": 32663,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 32628,
											"end": 32663,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 32628,
											"end": 32663,
											"name": "tag",
											"source": 0,
											"value": "288"
										},
										{
											"begin": 32628,
											"end": 32663,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32628,
											"end": 32663,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 32628,
											"end": 32663,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 32628,
											"end": 32663,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 32628,
											"end": 32663,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 32628,
											"end": 32663,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 32628,
											"end": 32663,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32628,
											"end": 32663,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 31940,
											"end": 32671,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 31940,
											"end": 32671,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 31940,
											"end": 32671,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 31884,
											"end": 32671,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 31884,
											"end": 32671,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 31884,
											"end": 32671,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 28394,
											"end": 28885,
											"name": "tag",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 28394,
											"end": 28885,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28480,
											"end": 28481,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 28451,
											"end": 28482,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 28451,
											"end": 28482,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 28459,
											"end": 28467,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 28459,
											"end": 28467,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 28459,
											"end": 28467,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28459,
											"end": 28467,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 28459,
											"end": 28467,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28459,
											"end": 28467,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 28459,
											"end": 28467,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 28459,
											"end": 28467,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28459,
											"end": 28467,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 28459,
											"end": 28467,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 28459,
											"end": 28467,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 28451,
											"end": 28482,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 28451,
											"end": 28482,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 28451,
											"end": 28482,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 28451,
											"end": 28482,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 28443,
											"end": 28507,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "290"
										},
										{
											"begin": 28443,
											"end": 28507,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28443,
											"end": 28507,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 28443,
											"end": 28507,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 28443,
											"end": 28507,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 28443,
											"end": 28507,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28443,
											"end": 28507,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 28443,
											"end": 28507,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 28443,
											"end": 28507,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 28443,
											"end": 28507,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "291"
										},
										{
											"begin": 28443,
											"end": 28507,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28443,
											"end": 28507,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "292"
										},
										{
											"begin": 28443,
											"end": 28507,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 28443,
											"end": 28507,
											"name": "tag",
											"source": 0,
											"value": "291"
										},
										{
											"begin": 28443,
											"end": 28507,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28443,
											"end": 28507,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 28443,
											"end": 28507,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 28443,
											"end": 28507,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28443,
											"end": 28507,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 28443,
											"end": 28507,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 28443,
											"end": 28507,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28443,
											"end": 28507,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 28443,
											"end": 28507,
											"name": "tag",
											"source": 0,
											"value": "290"
										},
										{
											"begin": 28443,
											"end": 28507,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28518,
											"end": 28539,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 28542,
											"end": 28550,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 28551,
											"end": 28555,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 28542,
											"end": 28556,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28542,
											"end": 28556,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 28542,
											"end": 28556,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28542,
											"end": 28556,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 28542,
											"end": 28556,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "293"
										},
										{
											"begin": 28542,
											"end": 28556,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28542,
											"end": 28556,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "294"
										},
										{
											"begin": 28542,
											"end": 28556,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "162"
										},
										{
											"begin": 28542,
											"end": 28556,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 28542,
											"end": 28556,
											"name": "tag",
											"source": 0,
											"value": "294"
										},
										{
											"begin": 28542,
											"end": 28556,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28542,
											"end": 28556,
											"name": "tag",
											"source": 0,
											"value": "293"
										},
										{
											"begin": 28542,
											"end": 28556,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28542,
											"end": 28556,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28542,
											"end": 28556,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 28542,
											"end": 28556,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 28542,
											"end": 28556,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 28542,
											"end": 28556,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 28542,
											"end": 28556,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 28542,
											"end": 28556,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28542,
											"end": 28556,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 28542,
											"end": 28556,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 28542,
											"end": 28556,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 28518,
											"end": 28556,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28518,
											"end": 28556,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 28567,
											"end": 28581,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 28584,
											"end": 28588,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28584,
											"end": 28596,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 28584,
											"end": 28596,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 28584,
											"end": 28596,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 28584,
											"end": 28596,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28584,
											"end": 28596,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 28584,
											"end": 28596,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28584,
											"end": 28596,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 28584,
											"end": 28596,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 28584,
											"end": 28596,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28584,
											"end": 28596,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 28584,
											"end": 28596,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 28584,
											"end": 28596,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 28567,
											"end": 28596,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28567,
											"end": 28596,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 28607,
											"end": 28618,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 28621,
											"end": 28628,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28621,
											"end": 28638,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 28621,
											"end": 28638,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 28621,
											"end": 28638,
											"name": "PUSH",
											"source": 0,
											"value": "70A08231"
										},
										{
											"begin": 28647,
											"end": 28651,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 28621,
											"end": 28653,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 28621,
											"end": 28653,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 28621,
											"end": 28653,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 28621,
											"end": 28653,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 28621,
											"end": 28653,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 28621,
											"end": 28653,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 28621,
											"end": 28653,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 28621,
											"end": 28653,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28621,
											"end": 28653,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 28621,
											"end": 28653,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 28621,
											"end": 28653,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 28621,
											"end": 28653,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "296"
										},
										{
											"begin": 28621,
											"end": 28653,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 28621,
											"end": 28653,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28621,
											"end": 28653,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 28621,
											"end": 28653,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 28621,
											"end": 28653,
											"name": "tag",
											"source": 0,
											"value": "296"
										},
										{
											"begin": 28621,
											"end": 28653,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28621,
											"end": 28653,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 28621,
											"end": 28653,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 28621,
											"end": 28653,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 28621,
											"end": 28653,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28621,
											"end": 28653,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 28621,
											"end": 28653,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 28621,
											"end": 28653,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28621,
											"end": 28653,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 28621,
											"end": 28653,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28621,
											"end": 28653,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 28621,
											"end": 28653,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 28621,
											"end": 28653,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28621,
											"end": 28653,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 28621,
											"end": 28653,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "297"
										},
										{
											"begin": 28621,
											"end": 28653,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28621,
											"end": 28653,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 28621,
											"end": 28653,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28621,
											"end": 28653,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 28621,
											"end": 28653,
											"name": "tag",
											"source": 0,
											"value": "297"
										},
										{
											"begin": 28621,
											"end": 28653,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28621,
											"end": 28653,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 28621,
											"end": 28653,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 28621,
											"end": 28653,
											"name": "STATICCALL",
											"source": 0
										},
										{
											"begin": 28621,
											"end": 28653,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 28621,
											"end": 28653,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28621,
											"end": 28653,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 28621,
											"end": 28653,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "299"
										},
										{
											"begin": 28621,
											"end": 28653,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28621,
											"end": 28653,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 28621,
											"end": 28653,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 28621,
											"end": 28653,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28621,
											"end": 28653,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 28621,
											"end": 28653,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 28621,
											"end": 28653,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 28621,
											"end": 28653,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 28621,
											"end": 28653,
											"name": "tag",
											"source": 0,
											"value": "299"
										},
										{
											"begin": 28621,
											"end": 28653,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28621,
											"end": 28653,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 28621,
											"end": 28653,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 28621,
											"end": 28653,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 28621,
											"end": 28653,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 28621,
											"end": 28653,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 28621,
											"end": 28653,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 28621,
											"end": 28653,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 28621,
											"end": 28653,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 28621,
											"end": 28653,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 28621,
											"end": 28653,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 28621,
											"end": 28653,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 28621,
											"end": 28653,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 28621,
											"end": 28653,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 28621,
											"end": 28653,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 28621,
											"end": 28653,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 28621,
											"end": 28653,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28621,
											"end": 28653,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 28621,
											"end": 28653,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 28621,
											"end": 28653,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 28621,
											"end": 28653,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28621,
											"end": 28653,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 28621,
											"end": 28653,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28621,
											"end": 28653,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "300"
										},
										{
											"begin": 28621,
											"end": 28653,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 28621,
											"end": 28653,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28621,
											"end": 28653,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "195"
										},
										{
											"begin": 28621,
											"end": 28653,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 28621,
											"end": 28653,
											"name": "tag",
											"source": 0,
											"value": "300"
										},
										{
											"begin": 28621,
											"end": 28653,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28607,
											"end": 28653,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28607,
											"end": 28653,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 28664,
											"end": 28707,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "301"
										},
										{
											"begin": 28692,
											"end": 28700,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 28692,
											"end": 28700,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 28692,
											"end": 28700,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28692,
											"end": 28700,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 28692,
											"end": 28700,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28692,
											"end": 28700,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 28692,
											"end": 28700,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 28692,
											"end": 28700,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28692,
											"end": 28700,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 28692,
											"end": 28700,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 28692,
											"end": 28700,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 28703,
											"end": 28706,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 28664,
											"end": 28671,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 28664,
											"end": 28683,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 28664,
											"end": 28683,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 28664,
											"end": 28683,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "302"
										},
										{
											"begin": 28664,
											"end": 28683,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28664,
											"end": 28707,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 28664,
											"end": 28707,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 28664,
											"end": 28707,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28664,
											"end": 28707,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 28664,
											"end": 28707,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 28664,
											"end": 28707,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 28664,
											"end": 28707,
											"name": "tag",
											"source": 0,
											"value": "301"
										},
										{
											"begin": 28664,
											"end": 28707,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28718,
											"end": 28735,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 28738,
											"end": 28746,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 28738,
											"end": 28746,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 28738,
											"end": 28746,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28738,
											"end": 28746,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 28738,
											"end": 28746,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28738,
											"end": 28746,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 28738,
											"end": 28746,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 28738,
											"end": 28746,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28738,
											"end": 28746,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 28738,
											"end": 28746,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 28738,
											"end": 28746,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 28738,
											"end": 28754,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 28738,
											"end": 28754,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 28738,
											"end": 28754,
											"name": "PUSH",
											"source": 0,
											"value": "CE5494BB"
										},
										{
											"begin": 28755,
											"end": 28762,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 28738,
											"end": 28763,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 28738,
											"end": 28763,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 28738,
											"end": 28763,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 28738,
											"end": 28763,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 28738,
											"end": 28763,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 28738,
											"end": 28763,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 28738,
											"end": 28763,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 28738,
											"end": 28763,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28738,
											"end": 28763,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 28738,
											"end": 28763,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 28738,
											"end": 28763,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 28738,
											"end": 28763,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "303"
										},
										{
											"begin": 28738,
											"end": 28763,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 28738,
											"end": 28763,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28738,
											"end": 28763,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 28738,
											"end": 28763,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 28738,
											"end": 28763,
											"name": "tag",
											"source": 0,
											"value": "303"
										},
										{
											"begin": 28738,
											"end": 28763,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28738,
											"end": 28763,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 28738,
											"end": 28763,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 28738,
											"end": 28763,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 28738,
											"end": 28763,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28738,
											"end": 28763,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 28738,
											"end": 28763,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 28738,
											"end": 28763,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28738,
											"end": 28763,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 28738,
											"end": 28763,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 28738,
											"end": 28763,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28738,
											"end": 28763,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 28738,
											"end": 28763,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 28738,
											"end": 28763,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28738,
											"end": 28763,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 28738,
											"end": 28763,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "304"
										},
										{
											"begin": 28738,
											"end": 28763,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28738,
											"end": 28763,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 28738,
											"end": 28763,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28738,
											"end": 28763,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 28738,
											"end": 28763,
											"name": "tag",
											"source": 0,
											"value": "304"
										},
										{
											"begin": 28738,
											"end": 28763,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28738,
											"end": 28763,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 28738,
											"end": 28763,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 28738,
											"end": 28763,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 28738,
											"end": 28763,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 28738,
											"end": 28763,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28738,
											"end": 28763,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 28738,
											"end": 28763,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "306"
										},
										{
											"begin": 28738,
											"end": 28763,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28738,
											"end": 28763,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 28738,
											"end": 28763,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 28738,
											"end": 28763,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28738,
											"end": 28763,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 28738,
											"end": 28763,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 28738,
											"end": 28763,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 28738,
											"end": 28763,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 28738,
											"end": 28763,
											"name": "tag",
											"source": 0,
											"value": "306"
										},
										{
											"begin": 28738,
											"end": 28763,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28738,
											"end": 28763,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 28738,
											"end": 28763,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 28738,
											"end": 28763,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 28738,
											"end": 28763,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 28738,
											"end": 28763,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 28738,
											"end": 28763,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 28738,
											"end": 28763,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 28738,
											"end": 28763,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 28738,
											"end": 28763,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 28738,
											"end": 28763,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 28738,
											"end": 28763,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 28738,
											"end": 28763,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 28738,
											"end": 28763,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 28738,
											"end": 28763,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 28738,
											"end": 28763,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 28738,
											"end": 28763,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28738,
											"end": 28763,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 28738,
											"end": 28763,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 28738,
											"end": 28763,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 28738,
											"end": 28763,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28738,
											"end": 28763,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 28738,
											"end": 28763,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28738,
											"end": 28763,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "307"
										},
										{
											"begin": 28738,
											"end": 28763,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 28738,
											"end": 28763,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28738,
											"end": 28763,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "308"
										},
										{
											"begin": 28738,
											"end": 28763,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 28738,
											"end": 28763,
											"name": "tag",
											"source": 0,
											"value": "307"
										},
										{
											"begin": 28738,
											"end": 28763,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28718,
											"end": 28763,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28718,
											"end": 28763,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 28789,
											"end": 28799,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28789,
											"end": 28809,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 28789,
											"end": 28809,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 28789,
											"end": 28809,
											"name": "PUSH",
											"source": 0,
											"value": "70A08231"
										},
										{
											"begin": 28818,
											"end": 28822,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 28789,
											"end": 28824,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 28789,
											"end": 28824,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 28789,
											"end": 28824,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 28789,
											"end": 28824,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 28789,
											"end": 28824,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 28789,
											"end": 28824,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 28789,
											"end": 28824,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 28789,
											"end": 28824,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28789,
											"end": 28824,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 28789,
											"end": 28824,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 28789,
											"end": 28824,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 28789,
											"end": 28824,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "309"
										},
										{
											"begin": 28789,
											"end": 28824,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 28789,
											"end": 28824,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28789,
											"end": 28824,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 28789,
											"end": 28824,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 28789,
											"end": 28824,
											"name": "tag",
											"source": 0,
											"value": "309"
										},
										{
											"begin": 28789,
											"end": 28824,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28789,
											"end": 28824,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 28789,
											"end": 28824,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 28789,
											"end": 28824,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 28789,
											"end": 28824,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28789,
											"end": 28824,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 28789,
											"end": 28824,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 28789,
											"end": 28824,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28789,
											"end": 28824,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 28789,
											"end": 28824,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28789,
											"end": 28824,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 28789,
											"end": 28824,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 28789,
											"end": 28824,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28789,
											"end": 28824,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 28789,
											"end": 28824,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "310"
										},
										{
											"begin": 28789,
											"end": 28824,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28789,
											"end": 28824,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 28789,
											"end": 28824,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28789,
											"end": 28824,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 28789,
											"end": 28824,
											"name": "tag",
											"source": 0,
											"value": "310"
										},
										{
											"begin": 28789,
											"end": 28824,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28789,
											"end": 28824,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 28789,
											"end": 28824,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 28789,
											"end": 28824,
											"name": "STATICCALL",
											"source": 0
										},
										{
											"begin": 28789,
											"end": 28824,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 28789,
											"end": 28824,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28789,
											"end": 28824,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 28789,
											"end": 28824,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "312"
										},
										{
											"begin": 28789,
											"end": 28824,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28789,
											"end": 28824,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 28789,
											"end": 28824,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 28789,
											"end": 28824,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28789,
											"end": 28824,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 28789,
											"end": 28824,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 28789,
											"end": 28824,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 28789,
											"end": 28824,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 28789,
											"end": 28824,
											"name": "tag",
											"source": 0,
											"value": "312"
										},
										{
											"begin": 28789,
											"end": 28824,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28789,
											"end": 28824,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 28789,
											"end": 28824,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 28789,
											"end": 28824,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 28789,
											"end": 28824,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 28789,
											"end": 28824,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 28789,
											"end": 28824,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 28789,
											"end": 28824,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 28789,
											"end": 28824,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 28789,
											"end": 28824,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 28789,
											"end": 28824,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 28789,
											"end": 28824,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 28789,
											"end": 28824,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 28789,
											"end": 28824,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 28789,
											"end": 28824,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 28789,
											"end": 28824,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 28789,
											"end": 28824,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28789,
											"end": 28824,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 28789,
											"end": 28824,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 28789,
											"end": 28824,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 28789,
											"end": 28824,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28789,
											"end": 28824,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 28789,
											"end": 28824,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28789,
											"end": 28824,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "313"
										},
										{
											"begin": 28789,
											"end": 28824,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 28789,
											"end": 28824,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28789,
											"end": 28824,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "195"
										},
										{
											"begin": 28789,
											"end": 28824,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 28789,
											"end": 28824,
											"name": "tag",
											"source": 0,
											"value": "313"
										},
										{
											"begin": 28789,
											"end": 28824,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28782,
											"end": 28785,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 28782,
											"end": 28824,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 28774,
											"end": 28841,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "314"
										},
										{
											"begin": 28774,
											"end": 28841,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28774,
											"end": 28841,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 28774,
											"end": 28841,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 28774,
											"end": 28841,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 28774,
											"end": 28841,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28774,
											"end": 28841,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 28774,
											"end": 28841,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 28774,
											"end": 28841,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 28774,
											"end": 28841,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "315"
										},
										{
											"begin": 28774,
											"end": 28841,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28774,
											"end": 28841,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "316"
										},
										{
											"begin": 28774,
											"end": 28841,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 28774,
											"end": 28841,
											"name": "tag",
											"source": 0,
											"value": "315"
										},
										{
											"begin": 28774,
											"end": 28841,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28774,
											"end": 28841,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 28774,
											"end": 28841,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 28774,
											"end": 28841,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28774,
											"end": 28841,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 28774,
											"end": 28841,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 28774,
											"end": 28841,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28774,
											"end": 28841,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 28774,
											"end": 28841,
											"name": "tag",
											"source": 0,
											"value": "314"
										},
										{
											"begin": 28774,
											"end": 28841,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28867,
											"end": 28877,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28852,
											"end": 28856,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 28852,
											"end": 28864,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 28852,
											"end": 28864,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 28852,
											"end": 28864,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 28852,
											"end": 28877,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 28852,
											"end": 28877,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 28852,
											"end": 28877,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28852,
											"end": 28877,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 28852,
											"end": 28877,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28852,
											"end": 28877,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 28852,
											"end": 28877,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 28852,
											"end": 28877,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 28852,
											"end": 28877,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 28852,
											"end": 28877,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28852,
											"end": 28877,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 28852,
											"end": 28877,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 28852,
											"end": 28877,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 28852,
											"end": 28877,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 28852,
											"end": 28877,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 28852,
											"end": 28877,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28852,
											"end": 28877,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 28852,
											"end": 28877,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 28432,
											"end": 28885,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 28432,
											"end": 28885,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 28432,
											"end": 28885,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 28432,
											"end": 28885,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 28394,
											"end": 28885,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 28394,
											"end": 28885,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 24276,
											"end": 24301,
											"name": "tag",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 24276,
											"end": 24301,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24276,
											"end": 24301,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 24276,
											"end": 24301,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 24276,
											"end": 24301,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24276,
											"end": 24301,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 25246,
											"end": 25452,
											"name": "tag",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 25246,
											"end": 25452,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20336,
											"end": 20348,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "318"
										},
										{
											"begin": 20336,
											"end": 20346,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "227"
										},
										{
											"begin": 20336,
											"end": 20348,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 20336,
											"end": 20348,
											"name": "tag",
											"source": 0,
											"value": "318"
										},
										{
											"begin": 20336,
											"end": 20348,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20325,
											"end": 20348,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 20325,
											"end": 20348,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20325,
											"end": 20332,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "319"
										},
										{
											"begin": 20325,
											"end": 20330,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 20325,
											"end": 20332,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 20325,
											"end": 20332,
											"name": "tag",
											"source": 0,
											"value": "319"
										},
										{
											"begin": 20325,
											"end": 20332,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20325,
											"end": 20348,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 20325,
											"end": 20348,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20325,
											"end": 20348,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "320"
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "321"
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "231"
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "tag",
											"source": 0,
											"value": "321"
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "tag",
											"source": 0,
											"value": "320"
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25320,
											"end": 25328,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 25348,
											"end": 25433,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 25348,
											"end": 25433,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 25348,
											"end": 25433,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25348,
											"end": 25433,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 25348,
											"end": 25433,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 25348,
											"end": 25433,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 25348,
											"end": 25433,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 25348,
											"end": 25433,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25381,
											"end": 25385,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 25348,
											"end": 25433,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 25348,
											"end": 25433,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 25348,
											"end": 25433,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25348,
											"end": 25433,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 25348,
											"end": 25433,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 25348,
											"end": 25433,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 25411,
											"end": 25417,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 25348,
											"end": 25433,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25348,
											"end": 25433,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 25348,
											"end": 25433,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25320,
											"end": 25444,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25320,
											"end": 25444,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25320,
											"end": 25444,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 25320,
											"end": 25444,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25320,
											"end": 25444,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 25320,
											"end": 25444,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 25320,
											"end": 25444,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25320,
											"end": 25444,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 25320,
											"end": 25444,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 25320,
											"end": 25444,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25320,
											"end": 25444,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 25320,
											"end": 25444,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25320,
											"end": 25444,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25320,
											"end": 25444,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 25320,
											"end": 25444,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25320,
											"end": 25444,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 25320,
											"end": 25444,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25320,
											"end": 25444,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 25320,
											"end": 25444,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 25320,
											"end": 25444,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 25320,
											"end": 25444,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 25320,
											"end": 25444,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 25320,
											"end": 25444,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25320,
											"end": 25444,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 25320,
											"end": 25444,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 25320,
											"end": 25444,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 25320,
											"end": 25444,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 25320,
											"end": 25444,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25320,
											"end": 25444,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 25320,
											"end": 25444,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25320,
											"end": 25444,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 25320,
											"end": 25444,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25320,
											"end": 25444,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 25320,
											"end": 25444,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25320,
											"end": 25444,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 25320,
											"end": 25444,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 25320,
											"end": 25444,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 25320,
											"end": 25444,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 25320,
											"end": 25444,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25320,
											"end": 25444,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 25320,
											"end": 25444,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 25320,
											"end": 25444,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 25320,
											"end": 25444,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 25320,
											"end": 25444,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 25320,
											"end": 25444,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25320,
											"end": 25444,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 25320,
											"end": 25444,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25320,
											"end": 25444,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 25320,
											"end": 25444,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 25320,
											"end": 25444,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 25320,
											"end": 25444,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 25320,
											"end": 25444,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25320,
											"end": 25444,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 25320,
											"end": 25444,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 25320,
											"end": 25444,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 25320,
											"end": 25444,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 25320,
											"end": 25444,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 25320,
											"end": 25444,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25320,
											"end": 25444,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 25320,
											"end": 25444,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25320,
											"end": 25444,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 25320,
											"end": 25444,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 25320,
											"end": 25444,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 25320,
											"end": 25444,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 25320,
											"end": 25444,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25320,
											"end": 25444,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 25320,
											"end": 25444,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 25320,
											"end": 25444,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 25320,
											"end": 25444,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25320,
											"end": 25444,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25246,
											"end": 25452,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25246,
											"end": 25452,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25246,
											"end": 25452,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 30276,
											"end": 30966,
											"name": "tag",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 30276,
											"end": 30966,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30328,
											"end": 30349,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 30352,
											"end": 30360,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 30361,
											"end": 30365,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 30352,
											"end": 30366,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30352,
											"end": 30366,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 30352,
											"end": 30366,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30352,
											"end": 30366,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 30352,
											"end": 30366,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "325"
										},
										{
											"begin": 30352,
											"end": 30366,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 30352,
											"end": 30366,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "326"
										},
										{
											"begin": 30352,
											"end": 30366,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "162"
										},
										{
											"begin": 30352,
											"end": 30366,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 30352,
											"end": 30366,
											"name": "tag",
											"source": 0,
											"value": "326"
										},
										{
											"begin": 30352,
											"end": 30366,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30352,
											"end": 30366,
											"name": "tag",
											"source": 0,
											"value": "325"
										},
										{
											"begin": 30352,
											"end": 30366,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30352,
											"end": 30366,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30352,
											"end": 30366,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 30352,
											"end": 30366,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 30352,
											"end": 30366,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 30352,
											"end": 30366,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 30352,
											"end": 30366,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 30352,
											"end": 30366,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30352,
											"end": 30366,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 30352,
											"end": 30366,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 30352,
											"end": 30366,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 30328,
											"end": 30366,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30328,
											"end": 30366,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 30397,
											"end": 30401,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 30397,
											"end": 30417,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 30397,
											"end": 30417,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 30397,
											"end": 30417,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 30381,
											"end": 30393,
											"name": "NUMBER",
											"source": 0
										},
										{
											"begin": 30381,
											"end": 30417,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 30377,
											"end": 30452,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "328"
										},
										{
											"begin": 30377,
											"end": 30452,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 30434,
											"end": 30441,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 30434,
											"end": 30441,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "324"
										},
										{
											"begin": 30434,
											"end": 30441,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 30377,
											"end": 30452,
											"name": "tag",
											"source": 0,
											"value": "328"
										},
										{
											"begin": 30377,
											"end": 30452,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30462,
											"end": 30478,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 30481,
											"end": 30485,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30481,
											"end": 30493,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 30481,
											"end": 30493,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 30481,
											"end": 30493,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 30481,
											"end": 30493,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30481,
											"end": 30493,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 30481,
											"end": 30493,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30481,
											"end": 30493,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 30481,
											"end": 30493,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 30481,
											"end": 30493,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30481,
											"end": 30493,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 30481,
											"end": 30493,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 30481,
											"end": 30493,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 30481,
											"end": 30503,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 30481,
											"end": 30503,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 30481,
											"end": 30503,
											"name": "PUSH",
											"source": 0,
											"value": "70A08231"
										},
										{
											"begin": 30512,
											"end": 30516,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 30481,
											"end": 30518,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 30481,
											"end": 30518,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 30481,
											"end": 30518,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 30481,
											"end": 30518,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 30481,
											"end": 30518,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 30481,
											"end": 30518,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 30481,
											"end": 30518,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 30481,
											"end": 30518,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30481,
											"end": 30518,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 30481,
											"end": 30518,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 30481,
											"end": 30518,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 30481,
											"end": 30518,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "329"
										},
										{
											"begin": 30481,
											"end": 30518,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 30481,
											"end": 30518,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30481,
											"end": 30518,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 30481,
											"end": 30518,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 30481,
											"end": 30518,
											"name": "tag",
											"source": 0,
											"value": "329"
										},
										{
											"begin": 30481,
											"end": 30518,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30481,
											"end": 30518,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 30481,
											"end": 30518,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 30481,
											"end": 30518,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 30481,
											"end": 30518,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 30481,
											"end": 30518,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 30481,
											"end": 30518,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 30481,
											"end": 30518,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30481,
											"end": 30518,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 30481,
											"end": 30518,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 30481,
											"end": 30518,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 30481,
											"end": 30518,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 30481,
											"end": 30518,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 30481,
											"end": 30518,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 30481,
											"end": 30518,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "330"
										},
										{
											"begin": 30481,
											"end": 30518,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 30481,
											"end": 30518,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 30481,
											"end": 30518,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 30481,
											"end": 30518,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 30481,
											"end": 30518,
											"name": "tag",
											"source": 0,
											"value": "330"
										},
										{
											"begin": 30481,
											"end": 30518,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30481,
											"end": 30518,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 30481,
											"end": 30518,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 30481,
											"end": 30518,
											"name": "STATICCALL",
											"source": 0
										},
										{
											"begin": 30481,
											"end": 30518,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 30481,
											"end": 30518,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 30481,
											"end": 30518,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 30481,
											"end": 30518,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "332"
										},
										{
											"begin": 30481,
											"end": 30518,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 30481,
											"end": 30518,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 30481,
											"end": 30518,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 30481,
											"end": 30518,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 30481,
											"end": 30518,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 30481,
											"end": 30518,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 30481,
											"end": 30518,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 30481,
											"end": 30518,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 30481,
											"end": 30518,
											"name": "tag",
											"source": 0,
											"value": "332"
										},
										{
											"begin": 30481,
											"end": 30518,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30481,
											"end": 30518,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 30481,
											"end": 30518,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 30481,
											"end": 30518,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 30481,
											"end": 30518,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 30481,
											"end": 30518,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 30481,
											"end": 30518,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 30481,
											"end": 30518,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 30481,
											"end": 30518,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 30481,
											"end": 30518,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 30481,
											"end": 30518,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 30481,
											"end": 30518,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 30481,
											"end": 30518,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 30481,
											"end": 30518,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 30481,
											"end": 30518,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 30481,
											"end": 30518,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 30481,
											"end": 30518,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 30481,
											"end": 30518,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 30481,
											"end": 30518,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 30481,
											"end": 30518,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 30481,
											"end": 30518,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30481,
											"end": 30518,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 30481,
											"end": 30518,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30481,
											"end": 30518,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "333"
										},
										{
											"begin": 30481,
											"end": 30518,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 30481,
											"end": 30518,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30481,
											"end": 30518,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "195"
										},
										{
											"begin": 30481,
											"end": 30518,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 30481,
											"end": 30518,
											"name": "tag",
											"source": 0,
											"value": "333"
										},
										{
											"begin": 30481,
											"end": 30518,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30462,
											"end": 30518,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30462,
											"end": 30518,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 30545,
											"end": 30546,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 30533,
											"end": 30541,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30533,
											"end": 30546,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 30529,
											"end": 30631,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "334"
										},
										{
											"begin": 30529,
											"end": 30631,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 30586,
											"end": 30598,
											"name": "NUMBER",
											"source": 0
										},
										{
											"begin": 30563,
											"end": 30567,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 30563,
											"end": 30583,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 30563,
											"end": 30583,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 30563,
											"end": 30598,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30563,
											"end": 30598,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30563,
											"end": 30598,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 30563,
											"end": 30598,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 30613,
											"end": 30620,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 30613,
											"end": 30620,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 30613,
											"end": 30620,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "324"
										},
										{
											"begin": 30613,
											"end": 30620,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 30529,
											"end": 30631,
											"name": "tag",
											"source": 0,
											"value": "334"
										},
										{
											"begin": 30529,
											"end": 30631,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30641,
											"end": 30659,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 30662,
											"end": 30711,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "335"
										},
										{
											"begin": 30676,
											"end": 30680,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 30676,
											"end": 30696,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 30676,
											"end": 30696,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 30676,
											"end": 30696,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 30698,
											"end": 30710,
											"name": "NUMBER",
											"source": 0
										},
										{
											"begin": 30662,
											"end": 30675,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 30662,
											"end": 30711,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 30662,
											"end": 30711,
											"name": "tag",
											"source": 0,
											"value": "335"
										},
										{
											"begin": 30662,
											"end": 30711,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30641,
											"end": 30711,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30641,
											"end": 30711,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 30722,
											"end": 30741,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 30744,
											"end": 30815,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "336"
										},
										{
											"begin": 30799,
											"end": 30814,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 30799,
											"end": 30814,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 30744,
											"end": 30794,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "337"
										},
										{
											"begin": 30778,
											"end": 30782,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 30778,
											"end": 30793,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 30778,
											"end": 30793,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 30778,
											"end": 30793,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 30744,
											"end": 30773,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "338"
										},
										{
											"begin": 30759,
											"end": 30772,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 30759,
											"end": 30772,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 30744,
											"end": 30754,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 30744,
											"end": 30758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "171"
										},
										{
											"begin": 30744,
											"end": 30758,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30744,
											"end": 30773,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 30744,
											"end": 30773,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30744,
											"end": 30773,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 30744,
											"end": 30773,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 30744,
											"end": 30773,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 30744,
											"end": 30773,
											"name": "tag",
											"source": 0,
											"value": "338"
										},
										{
											"begin": 30744,
											"end": 30773,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30744,
											"end": 30777,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "171"
										},
										{
											"begin": 30744,
											"end": 30777,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30744,
											"end": 30794,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 30744,
											"end": 30794,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30744,
											"end": 30794,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 30744,
											"end": 30794,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 30744,
											"end": 30794,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 30744,
											"end": 30794,
											"name": "tag",
											"source": 0,
											"value": "337"
										},
										{
											"begin": 30744,
											"end": 30794,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30744,
											"end": 30798,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "172"
										},
										{
											"begin": 30744,
											"end": 30798,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30744,
											"end": 30815,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 30744,
											"end": 30815,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30744,
											"end": 30815,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 30744,
											"end": 30815,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 30744,
											"end": 30815,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 30744,
											"end": 30815,
											"name": "tag",
											"source": 0,
											"value": "336"
										},
										{
											"begin": 30744,
											"end": 30815,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30722,
											"end": 30815,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30722,
											"end": 30815,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 30850,
											"end": 30912,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "339"
										},
										{
											"begin": 30876,
											"end": 30911,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "340"
										},
										{
											"begin": 30902,
											"end": 30910,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 30876,
											"end": 30897,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "341"
										},
										{
											"begin": 30892,
											"end": 30896,
											"name": "PUSH",
											"source": 0,
											"value": "E8D4A51000"
										},
										{
											"begin": 30876,
											"end": 30887,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 30876,
											"end": 30891,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "171"
										},
										{
											"begin": 30876,
											"end": 30891,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30876,
											"end": 30897,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 30876,
											"end": 30897,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30876,
											"end": 30897,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 30876,
											"end": 30897,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 30876,
											"end": 30897,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 30876,
											"end": 30897,
											"name": "tag",
											"source": 0,
											"value": "341"
										},
										{
											"begin": 30876,
											"end": 30897,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30876,
											"end": 30901,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "172"
										},
										{
											"begin": 30876,
											"end": 30901,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30876,
											"end": 30911,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 30876,
											"end": 30911,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30876,
											"end": 30911,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 30876,
											"end": 30911,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 30876,
											"end": 30911,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 30876,
											"end": 30911,
											"name": "tag",
											"source": 0,
											"value": "340"
										},
										{
											"begin": 30876,
											"end": 30911,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30850,
											"end": 30854,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 30850,
											"end": 30871,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 30850,
											"end": 30871,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 30850,
											"end": 30871,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 30850,
											"end": 30875,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 30850,
											"end": 30875,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30850,
											"end": 30912,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 30850,
											"end": 30912,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30850,
											"end": 30912,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 30850,
											"end": 30912,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 30850,
											"end": 30912,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 30850,
											"end": 30912,
											"name": "tag",
											"source": 0,
											"value": "339"
										},
										{
											"begin": 30850,
											"end": 30912,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30826,
											"end": 30830,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 30826,
											"end": 30847,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 30826,
											"end": 30847,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 30826,
											"end": 30912,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30826,
											"end": 30912,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30826,
											"end": 30912,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 30826,
											"end": 30912,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 30946,
											"end": 30958,
											"name": "NUMBER",
											"source": 0
										},
										{
											"begin": 30923,
											"end": 30927,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 30923,
											"end": 30943,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 30923,
											"end": 30943,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 30923,
											"end": 30958,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30923,
											"end": 30958,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30923,
											"end": 30958,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 30923,
											"end": 30958,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 30317,
											"end": 30966,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 30317,
											"end": 30966,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 30317,
											"end": 30966,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 30317,
											"end": 30966,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 30276,
											"end": 30966,
											"name": "tag",
											"source": 0,
											"value": "324"
										},
										{
											"begin": 30276,
											"end": 30966,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30276,
											"end": 30966,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 30276,
											"end": 30966,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 34399,
											"end": 34755,
											"name": "tag",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 34399,
											"end": 34755,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34458,
											"end": 34479,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 34482,
											"end": 34490,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 34491,
											"end": 34495,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 34482,
											"end": 34496,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34482,
											"end": 34496,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 34482,
											"end": 34496,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34482,
											"end": 34496,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 34482,
											"end": 34496,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "343"
										},
										{
											"begin": 34482,
											"end": 34496,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 34482,
											"end": 34496,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "344"
										},
										{
											"begin": 34482,
											"end": 34496,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "162"
										},
										{
											"begin": 34482,
											"end": 34496,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 34482,
											"end": 34496,
											"name": "tag",
											"source": 0,
											"value": "344"
										},
										{
											"begin": 34482,
											"end": 34496,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34482,
											"end": 34496,
											"name": "tag",
											"source": 0,
											"value": "343"
										},
										{
											"begin": 34482,
											"end": 34496,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34482,
											"end": 34496,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34482,
											"end": 34496,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 34482,
											"end": 34496,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 34482,
											"end": 34496,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 34482,
											"end": 34496,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 34482,
											"end": 34496,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 34482,
											"end": 34496,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34482,
											"end": 34496,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 34482,
											"end": 34496,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 34482,
											"end": 34496,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 34458,
											"end": 34496,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34458,
											"end": 34496,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 34507,
											"end": 34528,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 34531,
											"end": 34539,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 34531,
											"end": 34545,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 34540,
											"end": 34544,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 34531,
											"end": 34545,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34531,
											"end": 34545,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 34531,
											"end": 34545,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 34531,
											"end": 34545,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 34531,
											"end": 34545,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34531,
											"end": 34545,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34531,
											"end": 34545,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 34531,
											"end": 34545,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 34531,
											"end": 34545,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 34531,
											"end": 34545,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 34531,
											"end": 34545,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 34531,
											"end": 34557,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 34546,
											"end": 34556,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 34531,
											"end": 34557,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 34531,
											"end": 34557,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 34531,
											"end": 34557,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 34531,
											"end": 34557,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 34531,
											"end": 34557,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34531,
											"end": 34557,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 34531,
											"end": 34557,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 34531,
											"end": 34557,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 34531,
											"end": 34557,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34531,
											"end": 34557,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34531,
											"end": 34557,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 34531,
											"end": 34557,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 34531,
											"end": 34557,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 34531,
											"end": 34557,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 34531,
											"end": 34557,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 34507,
											"end": 34557,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34507,
											"end": 34557,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 34568,
											"end": 34627,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "346"
										},
										{
											"begin": 34602,
											"end": 34612,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 34615,
											"end": 34619,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 34615,
											"end": 34626,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 34615,
											"end": 34626,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 34615,
											"end": 34626,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 34568,
											"end": 34572,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 34568,
											"end": 34580,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 34568,
											"end": 34580,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 34568,
											"end": 34580,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 34568,
											"end": 34580,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34568,
											"end": 34580,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 34568,
											"end": 34580,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34568,
											"end": 34580,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 34568,
											"end": 34580,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 34568,
											"end": 34580,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34568,
											"end": 34580,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 34568,
											"end": 34580,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 34568,
											"end": 34580,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 34568,
											"end": 34593,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 34568,
											"end": 34593,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 34568,
											"end": 34593,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "180"
										},
										{
											"begin": 34568,
											"end": 34593,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34568,
											"end": 34627,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 34568,
											"end": 34627,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 34568,
											"end": 34627,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34568,
											"end": 34627,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 34568,
											"end": 34627,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 34568,
											"end": 34627,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 34568,
											"end": 34627,
											"name": "tag",
											"source": 0,
											"value": "346"
										},
										{
											"begin": 34568,
											"end": 34627,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34673,
											"end": 34677,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 34661,
											"end": 34671,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 34643,
											"end": 34691,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 34643,
											"end": 34691,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 34643,
											"end": 34691,
											"name": "PUSH",
											"source": 0,
											"value": "BB757047C2B5F3974FE26B7C10F732E7BCE710B0952A71082702781E62AE0595"
										},
										{
											"begin": 34679,
											"end": 34683,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 34679,
											"end": 34690,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 34679,
											"end": 34690,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 34679,
											"end": 34690,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 34643,
											"end": 34691,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 34643,
											"end": 34691,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 34643,
											"end": 34691,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "347"
										},
										{
											"begin": 34643,
											"end": 34691,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 34643,
											"end": 34691,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34643,
											"end": 34691,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 34643,
											"end": 34691,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 34643,
											"end": 34691,
											"name": "tag",
											"source": 0,
											"value": "347"
										},
										{
											"begin": 34643,
											"end": 34691,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34643,
											"end": 34691,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 34643,
											"end": 34691,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 34643,
											"end": 34691,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 34643,
											"end": 34691,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 34643,
											"end": 34691,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 34643,
											"end": 34691,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34643,
											"end": 34691,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 34716,
											"end": 34717,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 34702,
											"end": 34706,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34702,
											"end": 34713,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 34702,
											"end": 34713,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 34702,
											"end": 34717,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34702,
											"end": 34717,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34702,
											"end": 34717,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 34702,
											"end": 34717,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 34746,
											"end": 34747,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 34728,
											"end": 34732,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34728,
											"end": 34743,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 34728,
											"end": 34743,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 34728,
											"end": 34747,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34728,
											"end": 34747,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34728,
											"end": 34747,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 34728,
											"end": 34747,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 34447,
											"end": 34755,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 34447,
											"end": 34755,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 34399,
											"end": 34755,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 34399,
											"end": 34755,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 23657,
											"end": 23685,
											"name": "tag",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 23657,
											"end": 23685,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23657,
											"end": 23685,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 23657,
											"end": 23685,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 23657,
											"end": 23685,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23657,
											"end": 23685,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 26736,
											"end": 26859,
											"name": "tag",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 26736,
											"end": 26859,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20336,
											"end": 20348,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "349"
										},
										{
											"begin": 20336,
											"end": 20346,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "227"
										},
										{
											"begin": 20336,
											"end": 20348,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 20336,
											"end": 20348,
											"name": "tag",
											"source": 0,
											"value": "349"
										},
										{
											"begin": 20336,
											"end": 20348,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20325,
											"end": 20348,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 20325,
											"end": 20348,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20325,
											"end": 20332,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "350"
										},
										{
											"begin": 20325,
											"end": 20330,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 20325,
											"end": 20332,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 20325,
											"end": 20332,
											"name": "tag",
											"source": 0,
											"value": "350"
										},
										{
											"begin": 20325,
											"end": 20332,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20325,
											"end": 20348,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 20325,
											"end": 20348,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20325,
											"end": 20348,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "351"
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "352"
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "231"
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "tag",
											"source": 0,
											"value": "352"
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "tag",
											"source": 0,
											"value": "351"
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26835,
											"end": 26851,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26816,
											"end": 26832,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 26816,
											"end": 26851,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26816,
											"end": 26851,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26816,
											"end": 26851,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 26816,
											"end": 26851,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 26736,
											"end": 26859,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 26736,
											"end": 26859,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 23533,
											"end": 23559,
											"name": "tag",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 23533,
											"end": 23559,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23533,
											"end": 23559,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 23533,
											"end": 23559,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23533,
											"end": 23559,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23533,
											"end": 23559,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 23533,
											"end": 23559,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23533,
											"end": 23559,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 23533,
											"end": 23559,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "354"
										},
										{
											"begin": 23533,
											"end": 23559,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 23533,
											"end": 23559,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 23533,
											"end": 23559,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23533,
											"end": 23559,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 23533,
											"end": 23559,
											"name": "tag",
											"source": 0,
											"value": "354"
										},
										{
											"begin": 23533,
											"end": 23559,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23533,
											"end": 23559,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23533,
											"end": 23559,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 23533,
											"end": 23559,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 23533,
											"end": 23559,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 23533,
											"end": 23559,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 23533,
											"end": 23559,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 23533,
											"end": 23559,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23533,
											"end": 23559,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 23533,
											"end": 23559,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 23533,
											"end": 23559,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 23533,
											"end": 23559,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 23533,
											"end": 23559,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 23533,
											"end": 23559,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 23533,
											"end": 23559,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23533,
											"end": 23559,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 23533,
											"end": 23559,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23533,
											"end": 23559,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 23533,
											"end": 23559,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 23533,
											"end": 23559,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 23533,
											"end": 23559,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23533,
											"end": 23559,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 23533,
											"end": 23559,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23533,
											"end": 23559,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 23533,
											"end": 23559,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 23533,
											"end": 23559,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23533,
											"end": 23559,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 23533,
											"end": 23559,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 23533,
											"end": 23559,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 23533,
											"end": 23559,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23533,
											"end": 23559,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23533,
											"end": 23559,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 23533,
											"end": 23559,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 23533,
											"end": 23559,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 23533,
											"end": 23559,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23533,
											"end": 23559,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 23533,
											"end": 23559,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 23533,
											"end": 23559,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 30020,
											"end": 30200,
											"name": "tag",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 30020,
											"end": 30200,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30065,
											"end": 30079,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 30082,
											"end": 30090,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 30082,
											"end": 30097,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 30082,
											"end": 30097,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 30082,
											"end": 30097,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30082,
											"end": 30097,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 30065,
											"end": 30097,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30065,
											"end": 30097,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 30113,
											"end": 30124,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 30108,
											"end": 30193,
											"name": "tag",
											"source": 0,
											"value": "357"
										},
										{
											"begin": 30108,
											"end": 30193,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30136,
											"end": 30142,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30130,
											"end": 30133,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30130,
											"end": 30142,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 30108,
											"end": 30193,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 30108,
											"end": 30193,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "358"
										},
										{
											"begin": 30108,
											"end": 30193,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 30166,
											"end": 30181,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "360"
										},
										{
											"begin": 30177,
											"end": 30180,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30166,
											"end": 30176,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 30166,
											"end": 30181,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 30166,
											"end": 30181,
											"name": "tag",
											"source": 0,
											"value": "360"
										},
										{
											"begin": 30166,
											"end": 30181,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30144,
											"end": 30149,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 30144,
											"end": 30149,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "361"
										},
										{
											"begin": 30144,
											"end": 30149,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30144,
											"end": 30149,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "362"
										},
										{
											"begin": 30144,
											"end": 30149,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 30144,
											"end": 30149,
											"name": "tag",
											"source": 0,
											"value": "361"
										},
										{
											"begin": 30144,
											"end": 30149,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30144,
											"end": 30149,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30144,
											"end": 30149,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 30108,
											"end": 30193,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "357"
										},
										{
											"begin": 30108,
											"end": 30193,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 30108,
											"end": 30193,
											"name": "tag",
											"source": 0,
											"value": "358"
										},
										{
											"begin": 30108,
											"end": 30193,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30108,
											"end": 30193,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 30054,
											"end": 30200,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 30020,
											"end": 30200,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 27788,
											"end": 28093,
											"name": "tag",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 27788,
											"end": 28093,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20336,
											"end": 20348,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "364"
										},
										{
											"begin": 20336,
											"end": 20346,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "227"
										},
										{
											"begin": 20336,
											"end": 20348,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 20336,
											"end": 20348,
											"name": "tag",
											"source": 0,
											"value": "364"
										},
										{
											"begin": 20336,
											"end": 20348,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20325,
											"end": 20348,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 20325,
											"end": 20348,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20325,
											"end": 20332,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "365"
										},
										{
											"begin": 20325,
											"end": 20330,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 20325,
											"end": 20332,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 20325,
											"end": 20332,
											"name": "tag",
											"source": 0,
											"value": "365"
										},
										{
											"begin": 20325,
											"end": 20332,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20325,
											"end": 20348,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 20325,
											"end": 20348,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20325,
											"end": 20348,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "366"
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "367"
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "231"
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "tag",
											"source": 0,
											"value": "367"
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "tag",
											"source": 0,
											"value": "366"
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27887,
											"end": 27898,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27883,
											"end": 27944,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 27883,
											"end": 27944,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "369"
										},
										{
											"begin": 27883,
											"end": 27944,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 27915,
											"end": 27932,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "370"
										},
										{
											"begin": 27915,
											"end": 27930,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 27915,
											"end": 27932,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 27915,
											"end": 27932,
											"name": "tag",
											"source": 0,
											"value": "370"
										},
										{
											"begin": 27915,
											"end": 27932,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27883,
											"end": 27944,
											"name": "tag",
											"source": 0,
											"value": "369"
										},
										{
											"begin": 27883,
											"end": 27944,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27972,
											"end": 28035,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "371"
										},
										{
											"begin": 28023,
											"end": 28034,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 27972,
											"end": 28018,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "372"
										},
										{
											"begin": 27992,
											"end": 28000,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 28001,
											"end": 28005,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 27992,
											"end": 28006,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27992,
											"end": 28006,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 27992,
											"end": 28006,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27992,
											"end": 28006,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 27992,
											"end": 28006,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "373"
										},
										{
											"begin": 27992,
											"end": 28006,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 27992,
											"end": 28006,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "374"
										},
										{
											"begin": 27992,
											"end": 28006,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "162"
										},
										{
											"begin": 27992,
											"end": 28006,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 27992,
											"end": 28006,
											"name": "tag",
											"source": 0,
											"value": "374"
										},
										{
											"begin": 27992,
											"end": 28006,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27992,
											"end": 28006,
											"name": "tag",
											"source": 0,
											"value": "373"
										},
										{
											"begin": 27992,
											"end": 28006,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27992,
											"end": 28006,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27992,
											"end": 28006,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 27992,
											"end": 28006,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 27992,
											"end": 28006,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 27992,
											"end": 28006,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 27992,
											"end": 28006,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 27992,
											"end": 28006,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27992,
											"end": 28006,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 27992,
											"end": 28006,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 27992,
											"end": 28006,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 27992,
											"end": 28017,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 27992,
											"end": 28017,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 27992,
											"end": 28017,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 27972,
											"end": 27987,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 27972,
											"end": 27987,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 27972,
											"end": 27991,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "173"
										},
										{
											"begin": 27972,
											"end": 27991,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27972,
											"end": 28018,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 27972,
											"end": 28018,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27972,
											"end": 28018,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 27972,
											"end": 28018,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 27972,
											"end": 28018,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 27972,
											"end": 28018,
											"name": "tag",
											"source": 0,
											"value": "372"
										},
										{
											"begin": 27972,
											"end": 28018,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27972,
											"end": 28022,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 27972,
											"end": 28022,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27972,
											"end": 28035,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 27972,
											"end": 28035,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27972,
											"end": 28035,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 27972,
											"end": 28035,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 27972,
											"end": 28035,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 27972,
											"end": 28035,
											"name": "tag",
											"source": 0,
											"value": "371"
										},
										{
											"begin": 27972,
											"end": 28035,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27954,
											"end": 27969,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 27954,
											"end": 28035,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27954,
											"end": 28035,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27954,
											"end": 28035,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 27954,
											"end": 28035,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 28074,
											"end": 28085,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28046,
											"end": 28054,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 28055,
											"end": 28059,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 28046,
											"end": 28060,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28046,
											"end": 28060,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 28046,
											"end": 28060,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28046,
											"end": 28060,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 28046,
											"end": 28060,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "376"
										},
										{
											"begin": 28046,
											"end": 28060,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28046,
											"end": 28060,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "377"
										},
										{
											"begin": 28046,
											"end": 28060,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "162"
										},
										{
											"begin": 28046,
											"end": 28060,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 28046,
											"end": 28060,
											"name": "tag",
											"source": 0,
											"value": "377"
										},
										{
											"begin": 28046,
											"end": 28060,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28046,
											"end": 28060,
											"name": "tag",
											"source": 0,
											"value": "376"
										},
										{
											"begin": 28046,
											"end": 28060,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28046,
											"end": 28060,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28046,
											"end": 28060,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 28046,
											"end": 28060,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 28046,
											"end": 28060,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 28046,
											"end": 28060,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 28046,
											"end": 28060,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 28046,
											"end": 28060,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28046,
											"end": 28060,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 28046,
											"end": 28060,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 28046,
											"end": 28060,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 28046,
											"end": 28071,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 28046,
											"end": 28071,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 28046,
											"end": 28085,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28046,
											"end": 28085,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28046,
											"end": 28085,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 28046,
											"end": 28085,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 27788,
											"end": 28093,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 27788,
											"end": 28093,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 27788,
											"end": 28093,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 27788,
											"end": 28093,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 20756,
											"end": 20859,
											"name": "tag",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 20756,
											"end": 20859,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20336,
											"end": 20348,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "380"
										},
										{
											"begin": 20336,
											"end": 20346,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "227"
										},
										{
											"begin": 20336,
											"end": 20348,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 20336,
											"end": 20348,
											"name": "tag",
											"source": 0,
											"value": "380"
										},
										{
											"begin": 20336,
											"end": 20348,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20325,
											"end": 20348,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 20325,
											"end": 20348,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20325,
											"end": 20332,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "381"
										},
										{
											"begin": 20325,
											"end": 20330,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 20325,
											"end": 20332,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 20325,
											"end": 20332,
											"name": "tag",
											"source": 0,
											"value": "381"
										},
										{
											"begin": 20325,
											"end": 20332,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20325,
											"end": 20348,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 20325,
											"end": 20348,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20325,
											"end": 20348,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "382"
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "383"
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "231"
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "tag",
											"source": 0,
											"value": "383"
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "tag",
											"source": 0,
											"value": "382"
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20821,
											"end": 20851,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "385"
										},
										{
											"begin": 20848,
											"end": 20849,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 20821,
											"end": 20839,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "386"
										},
										{
											"begin": 20821,
											"end": 20851,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 20821,
											"end": 20851,
											"name": "tag",
											"source": 0,
											"value": "385"
										},
										{
											"begin": 20821,
											"end": 20851,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20756,
											"end": 20859,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 23880,
											"end": 23909,
											"name": "tag",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 23880,
											"end": 23909,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23880,
											"end": 23909,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 23880,
											"end": 23909,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 23880,
											"end": 23909,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23880,
											"end": 23909,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 23880,
											"end": 23909,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23880,
											"end": 23909,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 23880,
											"end": 23909,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 23880,
											"end": 23909,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23880,
											"end": 23909,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 23880,
											"end": 23909,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 23880,
											"end": 23909,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 23880,
											"end": 23909,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23880,
											"end": 23909,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 23740,
											"end": 23775,
											"name": "tag",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 23740,
											"end": 23775,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23740,
											"end": 23775,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 23740,
											"end": 23775,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 23740,
											"end": 23775,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23740,
											"end": 23775,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 25120,
											"end": 25238,
											"name": "tag",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 25120,
											"end": 25238,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25182,
											"end": 25189,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 25209,
											"end": 25221,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 25209,
											"end": 25230,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 25222,
											"end": 25229,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 25209,
											"end": 25230,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 25209,
											"end": 25230,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 25209,
											"end": 25230,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 25209,
											"end": 25230,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 25209,
											"end": 25230,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25209,
											"end": 25230,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 25209,
											"end": 25230,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 25209,
											"end": 25230,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 25209,
											"end": 25230,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25209,
											"end": 25230,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25209,
											"end": 25230,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 25209,
											"end": 25230,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 25209,
											"end": 25230,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 25209,
											"end": 25230,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 25209,
											"end": 25230,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 25209,
											"end": 25230,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 25202,
											"end": 25230,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25202,
											"end": 25230,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25120,
											"end": 25238,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 25120,
											"end": 25238,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25120,
											"end": 25238,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25120,
											"end": 25238,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 20105,
											"end": 20192,
											"name": "tag",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 20105,
											"end": 20192,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20151,
											"end": 20158,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 20178,
											"end": 20184,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20178,
											"end": 20184,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 20178,
											"end": 20184,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20178,
											"end": 20184,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 20178,
											"end": 20184,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20178,
											"end": 20184,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 20178,
											"end": 20184,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 20178,
											"end": 20184,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20178,
											"end": 20184,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 20178,
											"end": 20184,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 20178,
											"end": 20184,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20171,
											"end": 20184,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20171,
											"end": 20184,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20105,
											"end": 20192,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20105,
											"end": 20192,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 28961,
											"end": 29105,
											"name": "tag",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 28961,
											"end": 29105,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29033,
											"end": 29040,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 29061,
											"end": 29097,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "390"
										},
										{
											"begin": 29080,
											"end": 29096,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 29080,
											"end": 29096,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 29061,
											"end": 29075,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "391"
										},
										{
											"begin": 29069,
											"end": 29074,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 29061,
											"end": 29064,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 29061,
											"end": 29068,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "173"
										},
										{
											"begin": 29061,
											"end": 29068,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29061,
											"end": 29075,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 29061,
											"end": 29075,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29061,
											"end": 29075,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 29061,
											"end": 29075,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 29061,
											"end": 29075,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 29061,
											"end": 29075,
											"name": "tag",
											"source": 0,
											"value": "391"
										},
										{
											"begin": 29061,
											"end": 29075,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29061,
											"end": 29079,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "171"
										},
										{
											"begin": 29061,
											"end": 29079,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29061,
											"end": 29097,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 29061,
											"end": 29097,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29061,
											"end": 29097,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 29061,
											"end": 29097,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 29061,
											"end": 29097,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 29061,
											"end": 29097,
											"name": "tag",
											"source": 0,
											"value": "390"
										},
										{
											"begin": 29061,
											"end": 29097,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29054,
											"end": 29097,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29054,
											"end": 29097,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 28961,
											"end": 29105,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 28961,
											"end": 29105,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 28961,
											"end": 29105,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 28961,
											"end": 29105,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 28961,
											"end": 29105,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 24025,
											"end": 24089,
											"name": "tag",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 24025,
											"end": 24089,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24025,
											"end": 24089,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 24025,
											"end": 24089,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 24025,
											"end": 24089,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 24025,
											"end": 24089,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24025,
											"end": 24089,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 24025,
											"end": 24089,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 24025,
											"end": 24089,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 24025,
											"end": 24089,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 24025,
											"end": 24089,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 24025,
											"end": 24089,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 24025,
											"end": 24089,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 24025,
											"end": 24089,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24025,
											"end": 24089,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 24025,
											"end": 24089,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 24025,
											"end": 24089,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 24025,
											"end": 24089,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 24025,
											"end": 24089,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 24025,
											"end": 24089,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 24025,
											"end": 24089,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 24025,
											"end": 24089,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 24025,
											"end": 24089,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 24025,
											"end": 24089,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 24025,
											"end": 24089,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 24025,
											"end": 24089,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24025,
											"end": 24089,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 24025,
											"end": 24089,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 24025,
											"end": 24089,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 24025,
											"end": 24089,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24025,
											"end": 24089,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24025,
											"end": 24089,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 24025,
											"end": 24089,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 24025,
											"end": 24089,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 24025,
											"end": 24089,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24025,
											"end": 24089,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 24025,
											"end": 24089,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 24025,
											"end": 24089,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 23593,
											"end": 23610,
											"name": "tag",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 23593,
											"end": 23610,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23593,
											"end": 23610,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 23593,
											"end": 23610,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 23593,
											"end": 23610,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23593,
											"end": 23610,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 23593,
											"end": 23610,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23593,
											"end": 23610,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 23593,
											"end": 23610,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 23593,
											"end": 23610,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23593,
											"end": 23610,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 23593,
											"end": 23610,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 23593,
											"end": 23610,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 23593,
											"end": 23610,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23593,
											"end": 23610,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 24310,
											"end": 24357,
											"name": "tag",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 24310,
											"end": 24357,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24310,
											"end": 24357,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 24310,
											"end": 24357,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 24310,
											"end": 24357,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 24310,
											"end": 24357,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24310,
											"end": 24357,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 24310,
											"end": 24357,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 24310,
											"end": 24357,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 24310,
											"end": 24357,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 24310,
											"end": 24357,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 24310,
											"end": 24357,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 24310,
											"end": 24357,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 24310,
											"end": 24357,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 24310,
											"end": 24357,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24310,
											"end": 24357,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 24310,
											"end": 24357,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 24310,
											"end": 24357,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24310,
											"end": 24357,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 31036,
											"end": 31832,
											"name": "tag",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 31036,
											"end": 31832,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31121,
											"end": 31122,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 31113,
											"end": 31117,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 31113,
											"end": 31122,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 31113,
											"end": 31122,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 31104,
											"end": 31151,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "393"
										},
										{
											"begin": 31104,
											"end": 31151,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 31104,
											"end": 31151,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 31104,
											"end": 31151,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 31104,
											"end": 31151,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 31104,
											"end": 31151,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31104,
											"end": 31151,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 31104,
											"end": 31151,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 31104,
											"end": 31151,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 31104,
											"end": 31151,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "394"
										},
										{
											"begin": 31104,
											"end": 31151,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31104,
											"end": 31151,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "395"
										},
										{
											"begin": 31104,
											"end": 31151,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 31104,
											"end": 31151,
											"name": "tag",
											"source": 0,
											"value": "394"
										},
										{
											"begin": 31104,
											"end": 31151,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31104,
											"end": 31151,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 31104,
											"end": 31151,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 31104,
											"end": 31151,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 31104,
											"end": 31151,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 31104,
											"end": 31151,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 31104,
											"end": 31151,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31104,
											"end": 31151,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 31104,
											"end": 31151,
											"name": "tag",
											"source": 0,
											"value": "393"
										},
										{
											"begin": 31104,
											"end": 31151,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31164,
											"end": 31185,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 31188,
											"end": 31196,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 31197,
											"end": 31201,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 31188,
											"end": 31202,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31188,
											"end": 31202,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 31188,
											"end": 31202,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31188,
											"end": 31202,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 31188,
											"end": 31202,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "396"
										},
										{
											"begin": 31188,
											"end": 31202,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 31188,
											"end": 31202,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "397"
										},
										{
											"begin": 31188,
											"end": 31202,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "162"
										},
										{
											"begin": 31188,
											"end": 31202,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 31188,
											"end": 31202,
											"name": "tag",
											"source": 0,
											"value": "397"
										},
										{
											"begin": 31188,
											"end": 31202,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31188,
											"end": 31202,
											"name": "tag",
											"source": 0,
											"value": "396"
										},
										{
											"begin": 31188,
											"end": 31202,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31188,
											"end": 31202,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31188,
											"end": 31202,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 31188,
											"end": 31202,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 31188,
											"end": 31202,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 31188,
											"end": 31202,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 31188,
											"end": 31202,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 31188,
											"end": 31202,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31188,
											"end": 31202,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 31188,
											"end": 31202,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 31188,
											"end": 31202,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 31164,
											"end": 31202,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31164,
											"end": 31202,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 31213,
											"end": 31234,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 31237,
											"end": 31245,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 31237,
											"end": 31251,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 31246,
											"end": 31250,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 31237,
											"end": 31251,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31237,
											"end": 31251,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 31237,
											"end": 31251,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 31237,
											"end": 31251,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 31237,
											"end": 31251,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31237,
											"end": 31251,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31237,
											"end": 31251,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 31237,
											"end": 31251,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 31237,
											"end": 31251,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 31237,
											"end": 31251,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 31237,
											"end": 31251,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 31237,
											"end": 31263,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 31252,
											"end": 31262,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 31237,
											"end": 31263,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 31237,
											"end": 31263,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 31237,
											"end": 31263,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 31237,
											"end": 31263,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 31237,
											"end": 31263,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31237,
											"end": 31263,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 31237,
											"end": 31263,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 31237,
											"end": 31263,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 31237,
											"end": 31263,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31237,
											"end": 31263,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31237,
											"end": 31263,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 31237,
											"end": 31263,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 31237,
											"end": 31263,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 31237,
											"end": 31263,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 31237,
											"end": 31263,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 31213,
											"end": 31263,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31213,
											"end": 31263,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 31274,
											"end": 31290,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "399"
										},
										{
											"begin": 31285,
											"end": 31289,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 31274,
											"end": 31284,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 31274,
											"end": 31290,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 31274,
											"end": 31290,
											"name": "tag",
											"source": 0,
											"value": "399"
										},
										{
											"begin": 31274,
											"end": 31290,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31319,
											"end": 31320,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 31305,
											"end": 31309,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31305,
											"end": 31316,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 31305,
											"end": 31316,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 31305,
											"end": 31316,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 31305,
											"end": 31320,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 31301,
											"end": 31564,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 31301,
											"end": 31564,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "400"
										},
										{
											"begin": 31301,
											"end": 31564,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 31337,
											"end": 31352,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 31355,
											"end": 31424,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "401"
										},
										{
											"begin": 31408,
											"end": 31412,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 31408,
											"end": 31423,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 31408,
											"end": 31423,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 31408,
											"end": 31423,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 31355,
											"end": 31403,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "402"
										},
										{
											"begin": 31398,
											"end": 31402,
											"name": "PUSH",
											"source": 0,
											"value": "E8D4A51000"
										},
										{
											"begin": 31355,
											"end": 31393,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "403"
										},
										{
											"begin": 31371,
											"end": 31375,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 31371,
											"end": 31392,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 31371,
											"end": 31392,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 31371,
											"end": 31392,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 31355,
											"end": 31359,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 31355,
											"end": 31366,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 31355,
											"end": 31366,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 31355,
											"end": 31366,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 31355,
											"end": 31370,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "171"
										},
										{
											"begin": 31355,
											"end": 31370,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31355,
											"end": 31393,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 31355,
											"end": 31393,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31355,
											"end": 31393,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 31355,
											"end": 31393,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 31355,
											"end": 31393,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 31355,
											"end": 31393,
											"name": "tag",
											"source": 0,
											"value": "403"
										},
										{
											"begin": 31355,
											"end": 31393,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31355,
											"end": 31397,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "172"
										},
										{
											"begin": 31355,
											"end": 31397,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31355,
											"end": 31403,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 31355,
											"end": 31403,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31355,
											"end": 31403,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 31355,
											"end": 31403,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 31355,
											"end": 31403,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 31355,
											"end": 31403,
											"name": "tag",
											"source": 0,
											"value": "402"
										},
										{
											"begin": 31355,
											"end": 31403,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31355,
											"end": 31407,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "173"
										},
										{
											"begin": 31355,
											"end": 31407,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31355,
											"end": 31424,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 31355,
											"end": 31424,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31355,
											"end": 31424,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 31355,
											"end": 31424,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 31355,
											"end": 31424,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 31355,
											"end": 31424,
											"name": "tag",
											"source": 0,
											"value": "401"
										},
										{
											"begin": 31355,
											"end": 31424,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31337,
											"end": 31424,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31337,
											"end": 31424,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 31452,
											"end": 31453,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 31442,
											"end": 31449,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31442,
											"end": 31453,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 31439,
											"end": 31553,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 31439,
											"end": 31553,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "404"
										},
										{
											"begin": 31439,
											"end": 31553,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 31500,
											"end": 31537,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "405"
										},
										{
											"begin": 31529,
											"end": 31536,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31500,
											"end": 31512,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 31500,
											"end": 31524,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 31513,
											"end": 31523,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 31500,
											"end": 31524,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 31500,
											"end": 31524,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 31500,
											"end": 31524,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 31500,
											"end": 31524,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 31500,
											"end": 31524,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31500,
											"end": 31524,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 31500,
											"end": 31524,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 31500,
											"end": 31524,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 31500,
											"end": 31524,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31500,
											"end": 31524,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31500,
											"end": 31524,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 31500,
											"end": 31524,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 31500,
											"end": 31524,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 31500,
											"end": 31524,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 31500,
											"end": 31524,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 31500,
											"end": 31524,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 31500,
											"end": 31528,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 31500,
											"end": 31528,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31500,
											"end": 31537,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 31500,
											"end": 31537,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31500,
											"end": 31537,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 31500,
											"end": 31537,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 31500,
											"end": 31537,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 31500,
											"end": 31537,
											"name": "tag",
											"source": 0,
											"value": "405"
										},
										{
											"begin": 31500,
											"end": 31537,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31473,
											"end": 31485,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 31473,
											"end": 31497,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 31486,
											"end": 31496,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 31473,
											"end": 31497,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 31473,
											"end": 31497,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 31473,
											"end": 31497,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 31473,
											"end": 31497,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 31473,
											"end": 31497,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31473,
											"end": 31497,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 31473,
											"end": 31497,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 31473,
											"end": 31497,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 31473,
											"end": 31497,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31473,
											"end": 31497,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31473,
											"end": 31497,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 31473,
											"end": 31497,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 31473,
											"end": 31497,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 31473,
											"end": 31497,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 31473,
											"end": 31497,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 31473,
											"end": 31537,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31473,
											"end": 31537,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31473,
											"end": 31537,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 31473,
											"end": 31537,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 31439,
											"end": 31553,
											"name": "tag",
											"source": 0,
											"value": "404"
										},
										{
											"begin": 31439,
											"end": 31553,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31322,
											"end": 31564,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 31301,
											"end": 31564,
											"name": "tag",
											"source": 0,
											"value": "400"
										},
										{
											"begin": 31301,
											"end": 31564,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31574,
											"end": 31648,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "406"
										},
										{
											"begin": 31612,
											"end": 31622,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 31633,
											"end": 31637,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 31640,
											"end": 31647,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 31574,
											"end": 31578,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 31574,
											"end": 31586,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 31574,
											"end": 31586,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 31574,
											"end": 31586,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 31574,
											"end": 31586,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31574,
											"end": 31586,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 31574,
											"end": 31586,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31574,
											"end": 31586,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 31574,
											"end": 31586,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 31574,
											"end": 31586,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31574,
											"end": 31586,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 31574,
											"end": 31586,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 31574,
											"end": 31586,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 31574,
											"end": 31603,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 31574,
											"end": 31603,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 31574,
											"end": 31603,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "264"
										},
										{
											"begin": 31574,
											"end": 31603,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31574,
											"end": 31648,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 31574,
											"end": 31648,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 31574,
											"end": 31648,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 31574,
											"end": 31648,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31574,
											"end": 31648,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 31574,
											"end": 31648,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 31574,
											"end": 31648,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 31574,
											"end": 31648,
											"name": "tag",
											"source": 0,
											"value": "406"
										},
										{
											"begin": 31574,
											"end": 31648,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31673,
											"end": 31697,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "407"
										},
										{
											"begin": 31689,
											"end": 31696,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 31673,
											"end": 31677,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 31673,
											"end": 31684,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 31673,
											"end": 31684,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 31673,
											"end": 31684,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 31673,
											"end": 31688,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 31673,
											"end": 31688,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31673,
											"end": 31697,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 31673,
											"end": 31697,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31673,
											"end": 31697,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 31673,
											"end": 31697,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 31673,
											"end": 31697,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 31673,
											"end": 31697,
											"name": "tag",
											"source": 0,
											"value": "407"
										},
										{
											"begin": 31673,
											"end": 31697,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31659,
											"end": 31663,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31659,
											"end": 31670,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 31659,
											"end": 31670,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 31659,
											"end": 31697,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31659,
											"end": 31697,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31659,
											"end": 31697,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 31659,
											"end": 31697,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 31726,
											"end": 31774,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "408"
										},
										{
											"begin": 31769,
											"end": 31773,
											"name": "PUSH",
											"source": 0,
											"value": "E8D4A51000"
										},
										{
											"begin": 31726,
											"end": 31764,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "409"
										},
										{
											"begin": 31742,
											"end": 31746,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 31742,
											"end": 31763,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 31742,
											"end": 31763,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 31742,
											"end": 31763,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 31726,
											"end": 31730,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 31726,
											"end": 31737,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 31726,
											"end": 31737,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 31726,
											"end": 31737,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 31726,
											"end": 31741,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "171"
										},
										{
											"begin": 31726,
											"end": 31741,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31726,
											"end": 31764,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 31726,
											"end": 31764,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31726,
											"end": 31764,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 31726,
											"end": 31764,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 31726,
											"end": 31764,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 31726,
											"end": 31764,
											"name": "tag",
											"source": 0,
											"value": "409"
										},
										{
											"begin": 31726,
											"end": 31764,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31726,
											"end": 31768,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "172"
										},
										{
											"begin": 31726,
											"end": 31768,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31726,
											"end": 31774,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 31726,
											"end": 31774,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31726,
											"end": 31774,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 31726,
											"end": 31774,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 31726,
											"end": 31774,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 31726,
											"end": 31774,
											"name": "tag",
											"source": 0,
											"value": "408"
										},
										{
											"begin": 31726,
											"end": 31774,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31708,
											"end": 31712,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31708,
											"end": 31723,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 31708,
											"end": 31723,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 31708,
											"end": 31774,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31708,
											"end": 31774,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31708,
											"end": 31774,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 31708,
											"end": 31774,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 31810,
											"end": 31814,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 31798,
											"end": 31808,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 31790,
											"end": 31824,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 31790,
											"end": 31824,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 31790,
											"end": 31824,
											"name": "PUSH",
											"source": 0,
											"value": "90890809C654F11D6E72A28FA60149770A0D11EC6C92319D6CEB2BB0A4EA1A15"
										},
										{
											"begin": 31816,
											"end": 31823,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 31790,
											"end": 31824,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 31790,
											"end": 31824,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 31790,
											"end": 31824,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "410"
										},
										{
											"begin": 31790,
											"end": 31824,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 31790,
											"end": 31824,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31790,
											"end": 31824,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 31790,
											"end": 31824,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 31790,
											"end": 31824,
											"name": "tag",
											"source": 0,
											"value": "410"
										},
										{
											"begin": 31790,
											"end": 31824,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31790,
											"end": 31824,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 31790,
											"end": 31824,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 31790,
											"end": 31824,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 31790,
											"end": 31824,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 31790,
											"end": 31824,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 31790,
											"end": 31824,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31790,
											"end": 31824,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 31091,
											"end": 31832,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 31091,
											"end": 31832,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 31036,
											"end": 31832,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 31036,
											"end": 31832,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 31036,
											"end": 31832,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 21014,
											"end": 21215,
											"name": "tag",
											"source": 0,
											"value": "153"
										},
										{
											"begin": 21014,
											"end": 21215,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20336,
											"end": 20348,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "412"
										},
										{
											"begin": 20336,
											"end": 20346,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "227"
										},
										{
											"begin": 20336,
											"end": 20348,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 20336,
											"end": 20348,
											"name": "tag",
											"source": 0,
											"value": "412"
										},
										{
											"begin": 20336,
											"end": 20348,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20325,
											"end": 20348,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 20325,
											"end": 20348,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20325,
											"end": 20332,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "413"
										},
										{
											"begin": 20325,
											"end": 20330,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 20325,
											"end": 20332,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 20325,
											"end": 20332,
											"name": "tag",
											"source": 0,
											"value": "413"
										},
										{
											"begin": 20325,
											"end": 20332,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20325,
											"end": 20348,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 20325,
											"end": 20348,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20325,
											"end": 20348,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "414"
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "415"
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "231"
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "tag",
											"source": 0,
											"value": "415"
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "tag",
											"source": 0,
											"value": "414"
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21123,
											"end": 21124,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 21103,
											"end": 21125,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 21103,
											"end": 21125,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 21103,
											"end": 21111,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21103,
											"end": 21125,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 21103,
											"end": 21125,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 21103,
											"end": 21125,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 21103,
											"end": 21125,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 21095,
											"end": 21168,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "417"
										},
										{
											"begin": 21095,
											"end": 21168,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 21095,
											"end": 21168,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 21095,
											"end": 21168,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 21095,
											"end": 21168,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 21095,
											"end": 21168,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21095,
											"end": 21168,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 21095,
											"end": 21168,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 21095,
											"end": 21168,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 21095,
											"end": 21168,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "418"
										},
										{
											"begin": 21095,
											"end": 21168,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21095,
											"end": 21168,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "419"
										},
										{
											"begin": 21095,
											"end": 21168,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 21095,
											"end": 21168,
											"name": "tag",
											"source": 0,
											"value": "418"
										},
										{
											"begin": 21095,
											"end": 21168,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21095,
											"end": 21168,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 21095,
											"end": 21168,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 21095,
											"end": 21168,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21095,
											"end": 21168,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 21095,
											"end": 21168,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 21095,
											"end": 21168,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21095,
											"end": 21168,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 21095,
											"end": 21168,
											"name": "tag",
											"source": 0,
											"value": "417"
										},
										{
											"begin": 21095,
											"end": 21168,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21179,
											"end": 21207,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "420"
										},
										{
											"begin": 21198,
											"end": 21206,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21179,
											"end": 21197,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "386"
										},
										{
											"begin": 21179,
											"end": 21207,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 21179,
											"end": 21207,
											"name": "tag",
											"source": 0,
											"value": "420"
										},
										{
											"begin": 21179,
											"end": 21207,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21014,
											"end": 21215,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21014,
											"end": 21215,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 29170,
											"end": 29937,
											"name": "tag",
											"source": 0,
											"value": "156"
										},
										{
											"begin": 29170,
											"end": 29937,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29244,
											"end": 29251,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 29263,
											"end": 29284,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29287,
											"end": 29295,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 29296,
											"end": 29300,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 29287,
											"end": 29301,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29287,
											"end": 29301,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 29287,
											"end": 29301,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29287,
											"end": 29301,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 29287,
											"end": 29301,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "422"
										},
										{
											"begin": 29287,
											"end": 29301,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 29287,
											"end": 29301,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "423"
										},
										{
											"begin": 29287,
											"end": 29301,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "162"
										},
										{
											"begin": 29287,
											"end": 29301,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 29287,
											"end": 29301,
											"name": "tag",
											"source": 0,
											"value": "423"
										},
										{
											"begin": 29287,
											"end": 29301,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29287,
											"end": 29301,
											"name": "tag",
											"source": 0,
											"value": "422"
										},
										{
											"begin": 29287,
											"end": 29301,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29287,
											"end": 29301,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29287,
											"end": 29301,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 29287,
											"end": 29301,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 29287,
											"end": 29301,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 29287,
											"end": 29301,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 29287,
											"end": 29301,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 29287,
											"end": 29301,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29287,
											"end": 29301,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 29287,
											"end": 29301,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 29287,
											"end": 29301,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 29263,
											"end": 29301,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29263,
											"end": 29301,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 29312,
											"end": 29333,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 29336,
											"end": 29344,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 29336,
											"end": 29350,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 29345,
											"end": 29349,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 29336,
											"end": 29350,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29336,
											"end": 29350,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 29336,
											"end": 29350,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 29336,
											"end": 29350,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 29336,
											"end": 29350,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29336,
											"end": 29350,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29336,
											"end": 29350,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 29336,
											"end": 29350,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 29336,
											"end": 29350,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 29336,
											"end": 29350,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 29336,
											"end": 29350,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 29336,
											"end": 29357,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 29351,
											"end": 29356,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 29336,
											"end": 29357,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 29336,
											"end": 29357,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 29336,
											"end": 29357,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 29336,
											"end": 29357,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 29336,
											"end": 29357,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29336,
											"end": 29357,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 29336,
											"end": 29357,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 29336,
											"end": 29357,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 29336,
											"end": 29357,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29336,
											"end": 29357,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29336,
											"end": 29357,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 29336,
											"end": 29357,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 29336,
											"end": 29357,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 29336,
											"end": 29357,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 29336,
											"end": 29357,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 29312,
											"end": 29357,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29312,
											"end": 29357,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 29368,
											"end": 29392,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 29395,
											"end": 29399,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 29395,
											"end": 29416,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 29395,
											"end": 29416,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 29395,
											"end": 29416,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 29368,
											"end": 29416,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29368,
											"end": 29416,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 29427,
											"end": 29443,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 29446,
											"end": 29450,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 29446,
											"end": 29458,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 29446,
											"end": 29458,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 29446,
											"end": 29458,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 29446,
											"end": 29458,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29446,
											"end": 29458,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 29446,
											"end": 29458,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29446,
											"end": 29458,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 29446,
											"end": 29458,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 29446,
											"end": 29458,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29446,
											"end": 29458,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 29446,
											"end": 29458,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 29446,
											"end": 29458,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 29446,
											"end": 29468,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 29446,
											"end": 29468,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 29446,
											"end": 29468,
											"name": "PUSH",
											"source": 0,
											"value": "70A08231"
										},
										{
											"begin": 29477,
											"end": 29481,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 29446,
											"end": 29483,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 29446,
											"end": 29483,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 29446,
											"end": 29483,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 29446,
											"end": 29483,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 29446,
											"end": 29483,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 29446,
											"end": 29483,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 29446,
											"end": 29483,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 29446,
											"end": 29483,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29446,
											"end": 29483,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 29446,
											"end": 29483,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 29446,
											"end": 29483,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 29446,
											"end": 29483,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "425"
										},
										{
											"begin": 29446,
											"end": 29483,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 29446,
											"end": 29483,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29446,
											"end": 29483,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 29446,
											"end": 29483,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 29446,
											"end": 29483,
											"name": "tag",
											"source": 0,
											"value": "425"
										},
										{
											"begin": 29446,
											"end": 29483,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29446,
											"end": 29483,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 29446,
											"end": 29483,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 29446,
											"end": 29483,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 29446,
											"end": 29483,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29446,
											"end": 29483,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 29446,
											"end": 29483,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 29446,
											"end": 29483,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29446,
											"end": 29483,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 29446,
											"end": 29483,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29446,
											"end": 29483,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 29446,
											"end": 29483,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 29446,
											"end": 29483,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29446,
											"end": 29483,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 29446,
											"end": 29483,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "426"
										},
										{
											"begin": 29446,
											"end": 29483,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 29446,
											"end": 29483,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 29446,
											"end": 29483,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29446,
											"end": 29483,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 29446,
											"end": 29483,
											"name": "tag",
											"source": 0,
											"value": "426"
										},
										{
											"begin": 29446,
											"end": 29483,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29446,
											"end": 29483,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 29446,
											"end": 29483,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 29446,
											"end": 29483,
											"name": "STATICCALL",
											"source": 0
										},
										{
											"begin": 29446,
											"end": 29483,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 29446,
											"end": 29483,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29446,
											"end": 29483,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 29446,
											"end": 29483,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "428"
										},
										{
											"begin": 29446,
											"end": 29483,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 29446,
											"end": 29483,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 29446,
											"end": 29483,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 29446,
											"end": 29483,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29446,
											"end": 29483,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 29446,
											"end": 29483,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 29446,
											"end": 29483,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 29446,
											"end": 29483,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 29446,
											"end": 29483,
											"name": "tag",
											"source": 0,
											"value": "428"
										},
										{
											"begin": 29446,
											"end": 29483,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29446,
											"end": 29483,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 29446,
											"end": 29483,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 29446,
											"end": 29483,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 29446,
											"end": 29483,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 29446,
											"end": 29483,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 29446,
											"end": 29483,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 29446,
											"end": 29483,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 29446,
											"end": 29483,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 29446,
											"end": 29483,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 29446,
											"end": 29483,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 29446,
											"end": 29483,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 29446,
											"end": 29483,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 29446,
											"end": 29483,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 29446,
											"end": 29483,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 29446,
											"end": 29483,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 29446,
											"end": 29483,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29446,
											"end": 29483,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 29446,
											"end": 29483,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 29446,
											"end": 29483,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 29446,
											"end": 29483,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29446,
											"end": 29483,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 29446,
											"end": 29483,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29446,
											"end": 29483,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "429"
										},
										{
											"begin": 29446,
											"end": 29483,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 29446,
											"end": 29483,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29446,
											"end": 29483,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "195"
										},
										{
											"begin": 29446,
											"end": 29483,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 29446,
											"end": 29483,
											"name": "tag",
											"source": 0,
											"value": "429"
										},
										{
											"begin": 29446,
											"end": 29483,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29427,
											"end": 29483,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29427,
											"end": 29483,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 29513,
											"end": 29517,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 29513,
											"end": 29533,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 29513,
											"end": 29533,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 29513,
											"end": 29533,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 29498,
											"end": 29510,
											"name": "NUMBER",
											"source": 0
										},
										{
											"begin": 29498,
											"end": 29533,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 29498,
											"end": 29550,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29498,
											"end": 29550,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 29498,
											"end": 29550,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "430"
										},
										{
											"begin": 29498,
											"end": 29550,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 29498,
											"end": 29550,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 29549,
											"end": 29550,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 29537,
											"end": 29545,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29537,
											"end": 29550,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 29537,
											"end": 29550,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 29498,
											"end": 29550,
											"name": "tag",
											"source": 0,
											"value": "430"
										},
										{
											"begin": 29498,
											"end": 29550,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29494,
											"end": 29848,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 29494,
											"end": 29848,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "431"
										},
										{
											"begin": 29494,
											"end": 29848,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 29567,
											"end": 29585,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 29588,
											"end": 29637,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "432"
										},
										{
											"begin": 29602,
											"end": 29606,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 29602,
											"end": 29622,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 29602,
											"end": 29622,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 29602,
											"end": 29622,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 29624,
											"end": 29636,
											"name": "NUMBER",
											"source": 0
										},
										{
											"begin": 29588,
											"end": 29601,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 29588,
											"end": 29637,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 29588,
											"end": 29637,
											"name": "tag",
											"source": 0,
											"value": "432"
										},
										{
											"begin": 29588,
											"end": 29637,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29567,
											"end": 29637,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29567,
											"end": 29637,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 29652,
											"end": 29671,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 29674,
											"end": 29745,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "433"
										},
										{
											"begin": 29729,
											"end": 29744,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 29729,
											"end": 29744,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 29674,
											"end": 29724,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "434"
										},
										{
											"begin": 29708,
											"end": 29712,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 29708,
											"end": 29723,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 29708,
											"end": 29723,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 29708,
											"end": 29723,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 29674,
											"end": 29703,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "435"
										},
										{
											"begin": 29689,
											"end": 29702,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 29689,
											"end": 29702,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 29674,
											"end": 29684,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 29674,
											"end": 29688,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "171"
										},
										{
											"begin": 29674,
											"end": 29688,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29674,
											"end": 29703,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 29674,
											"end": 29703,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29674,
											"end": 29703,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 29674,
											"end": 29703,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 29674,
											"end": 29703,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 29674,
											"end": 29703,
											"name": "tag",
											"source": 0,
											"value": "435"
										},
										{
											"begin": 29674,
											"end": 29703,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29674,
											"end": 29707,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "171"
										},
										{
											"begin": 29674,
											"end": 29707,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29674,
											"end": 29724,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 29674,
											"end": 29724,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29674,
											"end": 29724,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 29674,
											"end": 29724,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 29674,
											"end": 29724,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 29674,
											"end": 29724,
											"name": "tag",
											"source": 0,
											"value": "434"
										},
										{
											"begin": 29674,
											"end": 29724,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29674,
											"end": 29728,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "172"
										},
										{
											"begin": 29674,
											"end": 29728,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29674,
											"end": 29745,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 29674,
											"end": 29745,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29674,
											"end": 29745,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 29674,
											"end": 29745,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 29674,
											"end": 29745,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 29674,
											"end": 29745,
											"name": "tag",
											"source": 0,
											"value": "433"
										},
										{
											"begin": 29674,
											"end": 29745,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29652,
											"end": 29745,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29652,
											"end": 29745,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 29779,
											"end": 29836,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "436"
										},
										{
											"begin": 29800,
											"end": 29835,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "437"
										},
										{
											"begin": 29826,
											"end": 29834,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 29800,
											"end": 29821,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "438"
										},
										{
											"begin": 29816,
											"end": 29820,
											"name": "PUSH",
											"source": 0,
											"value": "E8D4A51000"
										},
										{
											"begin": 29800,
											"end": 29811,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 29800,
											"end": 29815,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "171"
										},
										{
											"begin": 29800,
											"end": 29815,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29800,
											"end": 29821,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 29800,
											"end": 29821,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29800,
											"end": 29821,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 29800,
											"end": 29821,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 29800,
											"end": 29821,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 29800,
											"end": 29821,
											"name": "tag",
											"source": 0,
											"value": "438"
										},
										{
											"begin": 29800,
											"end": 29821,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29800,
											"end": 29825,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "172"
										},
										{
											"begin": 29800,
											"end": 29825,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29800,
											"end": 29835,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 29800,
											"end": 29835,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29800,
											"end": 29835,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 29800,
											"end": 29835,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 29800,
											"end": 29835,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 29800,
											"end": 29835,
											"name": "tag",
											"source": 0,
											"value": "437"
										},
										{
											"begin": 29800,
											"end": 29835,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29779,
											"end": 29795,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 29779,
											"end": 29799,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 29779,
											"end": 29799,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29779,
											"end": 29836,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 29779,
											"end": 29836,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29779,
											"end": 29836,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 29779,
											"end": 29836,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 29779,
											"end": 29836,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 29779,
											"end": 29836,
											"name": "tag",
											"source": 0,
											"value": "436"
										},
										{
											"begin": 29779,
											"end": 29836,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29760,
											"end": 29836,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 29760,
											"end": 29836,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 29552,
											"end": 29848,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 29552,
											"end": 29848,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 29494,
											"end": 29848,
											"name": "tag",
											"source": 0,
											"value": "431"
										},
										{
											"begin": 29494,
											"end": 29848,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29865,
											"end": 29929,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "439"
										},
										{
											"begin": 29913,
											"end": 29917,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 29913,
											"end": 29928,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 29913,
											"end": 29928,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 29913,
											"end": 29928,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 29865,
											"end": 29908,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "440"
										},
										{
											"begin": 29903,
											"end": 29907,
											"name": "PUSH",
											"source": 0,
											"value": "E8D4A51000"
										},
										{
											"begin": 29865,
											"end": 29898,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "441"
										},
										{
											"begin": 29881,
											"end": 29897,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 29865,
											"end": 29869,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 29865,
											"end": 29876,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 29865,
											"end": 29876,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 29865,
											"end": 29876,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 29865,
											"end": 29880,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "171"
										},
										{
											"begin": 29865,
											"end": 29880,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29865,
											"end": 29898,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 29865,
											"end": 29898,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29865,
											"end": 29898,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 29865,
											"end": 29898,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 29865,
											"end": 29898,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 29865,
											"end": 29898,
											"name": "tag",
											"source": 0,
											"value": "441"
										},
										{
											"begin": 29865,
											"end": 29898,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29865,
											"end": 29902,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "172"
										},
										{
											"begin": 29865,
											"end": 29902,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29865,
											"end": 29908,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 29865,
											"end": 29908,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29865,
											"end": 29908,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 29865,
											"end": 29908,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 29865,
											"end": 29908,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 29865,
											"end": 29908,
											"name": "tag",
											"source": 0,
											"value": "440"
										},
										{
											"begin": 29865,
											"end": 29908,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29865,
											"end": 29912,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "173"
										},
										{
											"begin": 29865,
											"end": 29912,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29865,
											"end": 29929,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 29865,
											"end": 29929,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29865,
											"end": 29929,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 29865,
											"end": 29929,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 29865,
											"end": 29929,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 29865,
											"end": 29929,
											"name": "tag",
											"source": 0,
											"value": "439"
										},
										{
											"begin": 29865,
											"end": 29929,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29858,
											"end": 29929,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 29858,
											"end": 29929,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 29858,
											"end": 29929,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 29858,
											"end": 29929,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 29858,
											"end": 29929,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 29858,
											"end": 29929,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 29170,
											"end": 29937,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 29170,
											"end": 29937,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 29170,
											"end": 29937,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 29170,
											"end": 29937,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 29170,
											"end": 29937,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 1757,
											"end": 2228,
											"name": "tag",
											"source": 0,
											"value": "171"
										},
										{
											"begin": 1757,
											"end": 2228,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1815,
											"end": 1822,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2065,
											"end": 2066,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2060,
											"end": 2061,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2060,
											"end": 2066,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2056,
											"end": 2103,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2056,
											"end": 2103,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "443"
										},
										{
											"begin": 2056,
											"end": 2103,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2090,
											"end": 2091,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2083,
											"end": 2091,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2083,
											"end": 2091,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2083,
											"end": 2091,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "442"
										},
										{
											"begin": 2083,
											"end": 2091,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2056,
											"end": 2103,
											"name": "tag",
											"source": 0,
											"value": "443"
										},
										{
											"begin": 2056,
											"end": 2103,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2115,
											"end": 2124,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2131,
											"end": 2132,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2127,
											"end": 2128,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 2127,
											"end": 2132,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "444"
										},
										{
											"begin": 2127,
											"end": 2132,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2127,
											"end": 2132,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2127,
											"end": 2132,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "445"
										},
										{
											"begin": 2127,
											"end": 2132,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2127,
											"end": 2132,
											"name": "tag",
											"source": 0,
											"value": "444"
										},
										{
											"begin": 2127,
											"end": 2132,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2115,
											"end": 2132,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2115,
											"end": 2132,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2160,
											"end": 2161,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2155,
											"end": 2156,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 2151,
											"end": 2152,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2151,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "446"
										},
										{
											"begin": 2151,
											"end": 2156,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2151,
											"end": 2156,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2151,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "447"
										},
										{
											"begin": 2151,
											"end": 2156,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2151,
											"end": 2156,
											"name": "tag",
											"source": 0,
											"value": "446"
										},
										{
											"begin": 2151,
											"end": 2156,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2151,
											"end": 2161,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2143,
											"end": 2199,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "448"
										},
										{
											"begin": 2143,
											"end": 2199,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2143,
											"end": 2199,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2143,
											"end": 2199,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2143,
											"end": 2199,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2143,
											"end": 2199,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2143,
											"end": 2199,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2143,
											"end": 2199,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2143,
											"end": 2199,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2143,
											"end": 2199,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "449"
										},
										{
											"begin": 2143,
											"end": 2199,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2143,
											"end": 2199,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "450"
										},
										{
											"begin": 2143,
											"end": 2199,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2143,
											"end": 2199,
											"name": "tag",
											"source": 0,
											"value": "449"
										},
										{
											"begin": 2143,
											"end": 2199,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2143,
											"end": 2199,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2143,
											"end": 2199,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2143,
											"end": 2199,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2143,
											"end": 2199,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2143,
											"end": 2199,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2143,
											"end": 2199,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2143,
											"end": 2199,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2143,
											"end": 2199,
											"name": "tag",
											"source": 0,
											"value": "448"
										},
										{
											"begin": 2143,
											"end": 2199,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2219,
											"end": 2220,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2212,
											"end": 2220,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2212,
											"end": 2220,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2212,
											"end": 2220,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1757,
											"end": 2228,
											"name": "tag",
											"source": 0,
											"value": "442"
										},
										{
											"begin": 1757,
											"end": 2228,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1757,
											"end": 2228,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 1757,
											"end": 2228,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1757,
											"end": 2228,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1757,
											"end": 2228,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1757,
											"end": 2228,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 2696,
											"end": 2828,
											"name": "tag",
											"source": 0,
											"value": "172"
										},
										{
											"begin": 2696,
											"end": 2828,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2754,
											"end": 2761,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2781,
											"end": 2820,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "452"
										},
										{
											"begin": 2785,
											"end": 2786,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2788,
											"end": 2789,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2781,
											"end": 2820,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2781,
											"end": 2820,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2781,
											"end": 2820,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2781,
											"end": 2820,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2781,
											"end": 2820,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2781,
											"end": 2820,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2781,
											"end": 2820,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2781,
											"end": 2820,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2781,
											"end": 2820,
											"name": "PUSH",
											"source": 0,
											"value": "1A"
										},
										{
											"begin": 2781,
											"end": 2820,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2781,
											"end": 2820,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2781,
											"end": 2820,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2781,
											"end": 2820,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2781,
											"end": 2820,
											"name": "PUSH",
											"source": 0,
											"value": "536166654D6174683A206469766973696F6E206279207A65726F000000000000"
										},
										{
											"begin": 2781,
											"end": 2820,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2781,
											"end": 2820,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2781,
											"end": 2820,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2781,
											"end": 2784,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "453"
										},
										{
											"begin": 2781,
											"end": 2820,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2781,
											"end": 2820,
											"name": "tag",
											"source": 0,
											"value": "452"
										},
										{
											"begin": 2781,
											"end": 2820,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2774,
											"end": 2820,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2774,
											"end": 2820,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2696,
											"end": 2828,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2696,
											"end": 2828,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2696,
											"end": 2828,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2696,
											"end": 2828,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2696,
											"end": 2828,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 841,
											"end": 977,
											"name": "tag",
											"source": 0,
											"value": "173"
										},
										{
											"begin": 841,
											"end": 977,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 899,
											"end": 906,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 926,
											"end": 969,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "455"
										},
										{
											"begin": 930,
											"end": 931,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 933,
											"end": 934,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 926,
											"end": 969,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 926,
											"end": 969,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 926,
											"end": 969,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 926,
											"end": 969,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 926,
											"end": 969,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 926,
											"end": 969,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 926,
											"end": 969,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 926,
											"end": 969,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 926,
											"end": 969,
											"name": "PUSH",
											"source": 0,
											"value": "1E"
										},
										{
											"begin": 926,
											"end": 969,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 926,
											"end": 969,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 926,
											"end": 969,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 926,
											"end": 969,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 926,
											"end": 969,
											"name": "PUSH",
											"source": 0,
											"value": "536166654D6174683A207375627472616374696F6E206F766572666C6F770000"
										},
										{
											"begin": 926,
											"end": 969,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 926,
											"end": 969,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 926,
											"end": 969,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 926,
											"end": 929,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "456"
										},
										{
											"begin": 926,
											"end": 969,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 926,
											"end": 969,
											"name": "tag",
											"source": 0,
											"value": "455"
										},
										{
											"begin": 926,
											"end": 969,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 919,
											"end": 969,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 919,
											"end": 969,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 841,
											"end": 977,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 841,
											"end": 977,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 841,
											"end": 977,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 841,
											"end": 977,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 841,
											"end": 977,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 385,
											"end": 566,
											"name": "tag",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 385,
											"end": 566,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 443,
											"end": 450,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 463,
											"end": 472,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 479,
											"end": 480,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 475,
											"end": 476,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 475,
											"end": 480,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "458"
										},
										{
											"begin": 475,
											"end": 480,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 475,
											"end": 480,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 475,
											"end": 480,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "459"
										},
										{
											"begin": 475,
											"end": 480,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 475,
											"end": 480,
											"name": "tag",
											"source": 0,
											"value": "458"
										},
										{
											"begin": 475,
											"end": 480,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 463,
											"end": 480,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 463,
											"end": 480,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 504,
											"end": 505,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 499,
											"end": 500,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 499,
											"end": 505,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 499,
											"end": 505,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 491,
											"end": 537,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "460"
										},
										{
											"begin": 491,
											"end": 537,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 491,
											"end": 537,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 491,
											"end": 537,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 491,
											"end": 537,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 491,
											"end": 537,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 491,
											"end": 537,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 491,
											"end": 537,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 491,
											"end": 537,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 491,
											"end": 537,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "461"
										},
										{
											"begin": 491,
											"end": 537,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 491,
											"end": 537,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "462"
										},
										{
											"begin": 491,
											"end": 537,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 491,
											"end": 537,
											"name": "tag",
											"source": 0,
											"value": "461"
										},
										{
											"begin": 491,
											"end": 537,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 491,
											"end": 537,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 491,
											"end": 537,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 491,
											"end": 537,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 491,
											"end": 537,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 491,
											"end": 537,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 491,
											"end": 537,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 491,
											"end": 537,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 491,
											"end": 537,
											"name": "tag",
											"source": 0,
											"value": "460"
										},
										{
											"begin": 491,
											"end": 537,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 557,
											"end": 558,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 550,
											"end": 558,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 550,
											"end": 558,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 550,
											"end": 558,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 385,
											"end": 566,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 385,
											"end": 566,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 385,
											"end": 566,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 385,
											"end": 566,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 385,
											"end": 566,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 16150,
											"end": 16361,
											"name": "tag",
											"source": 0,
											"value": "180"
										},
										{
											"begin": 16150,
											"end": 16361,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16267,
											"end": 16353,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "464"
										},
										{
											"begin": 16287,
											"end": 16292,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 16317,
											"end": 16340,
											"name": "PUSH",
											"source": 0,
											"value": "A9059CBB"
										},
										{
											"begin": 16317,
											"end": 16340,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 16317,
											"end": 16340,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 16342,
											"end": 16344,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 16346,
											"end": 16351,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 16294,
											"end": 16352,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16294,
											"end": 16352,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 16294,
											"end": 16352,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 16294,
											"end": 16352,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16294,
											"end": 16352,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "465"
										},
										{
											"begin": 16294,
											"end": 16352,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 16294,
											"end": 16352,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 16294,
											"end": 16352,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16294,
											"end": 16352,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "466"
										},
										{
											"begin": 16294,
											"end": 16352,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 16294,
											"end": 16352,
											"name": "tag",
											"source": 0,
											"value": "465"
										},
										{
											"begin": 16294,
											"end": 16352,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16294,
											"end": 16352,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16294,
											"end": 16352,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 16294,
											"end": 16352,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 16294,
											"end": 16352,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16294,
											"end": 16352,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 16294,
											"end": 16352,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 16294,
											"end": 16352,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 16294,
											"end": 16352,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16294,
											"end": 16352,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16294,
											"end": 16352,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16294,
											"end": 16352,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16294,
											"end": 16352,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16294,
											"end": 16352,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16294,
											"end": 16352,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16294,
											"end": 16352,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 16294,
											"end": 16352,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 16294,
											"end": 16352,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 16294,
											"end": 16352,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 16294,
											"end": 16352,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16294,
											"end": 16352,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16294,
											"end": 16352,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 16294,
											"end": 16352,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16294,
											"end": 16352,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 16294,
											"end": 16352,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16294,
											"end": 16352,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 16294,
											"end": 16352,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 16294,
											"end": 16352,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 16294,
											"end": 16352,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 16294,
											"end": 16352,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16294,
											"end": 16352,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16294,
											"end": 16352,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16294,
											"end": 16352,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16294,
											"end": 16352,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16267,
											"end": 16286,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "467"
										},
										{
											"begin": 16267,
											"end": 16353,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 16267,
											"end": 16353,
											"name": "tag",
											"source": 0,
											"value": "464"
										},
										{
											"begin": 16267,
											"end": 16353,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16150,
											"end": 16361,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16150,
											"end": 16361,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16150,
											"end": 16361,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16150,
											"end": 16361,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 19479,
											"end": 19577,
											"name": "tag",
											"source": 0,
											"value": "227"
										},
										{
											"begin": 19479,
											"end": 19577,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19532,
											"end": 19539,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 19559,
											"end": 19569,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 19552,
											"end": 19569,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19552,
											"end": 19569,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 19479,
											"end": 19577,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19479,
											"end": 19577,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 16369,
											"end": 16617,
											"name": "tag",
											"source": 0,
											"value": "264"
										},
										{
											"begin": 16369,
											"end": 16617,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16513,
											"end": 16609,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "470"
										},
										{
											"begin": 16533,
											"end": 16538,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 16563,
											"end": 16590,
											"name": "PUSH",
											"source": 0,
											"value": "23B872DD"
										},
										{
											"begin": 16563,
											"end": 16590,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 16563,
											"end": 16590,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 16592,
											"end": 16596,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 16598,
											"end": 16600,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 16602,
											"end": 16607,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 16540,
											"end": 16608,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16540,
											"end": 16608,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 16540,
											"end": 16608,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 16540,
											"end": 16608,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16540,
											"end": 16608,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "471"
										},
										{
											"begin": 16540,
											"end": 16608,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 16540,
											"end": 16608,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 16540,
											"end": 16608,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 16540,
											"end": 16608,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16540,
											"end": 16608,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "472"
										},
										{
											"begin": 16540,
											"end": 16608,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 16540,
											"end": 16608,
											"name": "tag",
											"source": 0,
											"value": "471"
										},
										{
											"begin": 16540,
											"end": 16608,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16540,
											"end": 16608,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16540,
											"end": 16608,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 16540,
											"end": 16608,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 16540,
											"end": 16608,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16540,
											"end": 16608,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 16540,
											"end": 16608,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 16540,
											"end": 16608,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 16540,
											"end": 16608,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16540,
											"end": 16608,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16540,
											"end": 16608,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16540,
											"end": 16608,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16540,
											"end": 16608,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16540,
											"end": 16608,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16540,
											"end": 16608,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16540,
											"end": 16608,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 16540,
											"end": 16608,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 16540,
											"end": 16608,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 16540,
											"end": 16608,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 16540,
											"end": 16608,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16540,
											"end": 16608,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16540,
											"end": 16608,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 16540,
											"end": 16608,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16540,
											"end": 16608,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 16540,
											"end": 16608,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16540,
											"end": 16608,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 16540,
											"end": 16608,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 16540,
											"end": 16608,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 16540,
											"end": 16608,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 16540,
											"end": 16608,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16540,
											"end": 16608,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16540,
											"end": 16608,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16540,
											"end": 16608,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16540,
											"end": 16608,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16513,
											"end": 16532,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "467"
										},
										{
											"begin": 16513,
											"end": 16609,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 16513,
											"end": 16609,
											"name": "tag",
											"source": 0,
											"value": "470"
										},
										{
											"begin": 16513,
											"end": 16609,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16369,
											"end": 16617,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16369,
											"end": 16617,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16369,
											"end": 16617,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16369,
											"end": 16617,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16369,
											"end": 16617,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 16886,
											"end": 17502,
											"name": "tag",
											"source": 0,
											"value": "302"
										},
										{
											"begin": 16886,
											"end": 17502,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17259,
											"end": 17260,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17250,
											"end": 17255,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17250,
											"end": 17260,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 17249,
											"end": 17311,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17249,
											"end": 17311,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "474"
										},
										{
											"begin": 17249,
											"end": 17311,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 17249,
											"end": 17311,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17309,
											"end": 17310,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17266,
											"end": 17271,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 17266,
											"end": 17281,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17266,
											"end": 17281,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 17266,
											"end": 17281,
											"name": "PUSH",
											"source": 0,
											"value": "DD62ED3E"
										},
										{
											"begin": 17290,
											"end": 17294,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 17297,
											"end": 17304,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 17266,
											"end": 17305,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 17266,
											"end": 17305,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 17266,
											"end": 17305,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 17266,
											"end": 17305,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 17266,
											"end": 17305,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 17266,
											"end": 17305,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 17266,
											"end": 17305,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 17266,
											"end": 17305,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17266,
											"end": 17305,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17266,
											"end": 17305,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 17266,
											"end": 17305,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17266,
											"end": 17305,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "475"
										},
										{
											"begin": 17266,
											"end": 17305,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 17266,
											"end": 17305,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 17266,
											"end": 17305,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17266,
											"end": 17305,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "476"
										},
										{
											"begin": 17266,
											"end": 17305,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 17266,
											"end": 17305,
											"name": "tag",
											"source": 0,
											"value": "475"
										},
										{
											"begin": 17266,
											"end": 17305,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17266,
											"end": 17305,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 17266,
											"end": 17305,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 17266,
											"end": 17305,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 17266,
											"end": 17305,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17266,
											"end": 17305,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 17266,
											"end": 17305,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 17266,
											"end": 17305,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17266,
											"end": 17305,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 17266,
											"end": 17305,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17266,
											"end": 17305,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 17266,
											"end": 17305,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 17266,
											"end": 17305,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17266,
											"end": 17305,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 17266,
											"end": 17305,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "477"
										},
										{
											"begin": 17266,
											"end": 17305,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 17266,
											"end": 17305,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17266,
											"end": 17305,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17266,
											"end": 17305,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 17266,
											"end": 17305,
											"name": "tag",
											"source": 0,
											"value": "477"
										},
										{
											"begin": 17266,
											"end": 17305,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17266,
											"end": 17305,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17266,
											"end": 17305,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 17266,
											"end": 17305,
											"name": "STATICCALL",
											"source": 0
										},
										{
											"begin": 17266,
											"end": 17305,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 17266,
											"end": 17305,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17266,
											"end": 17305,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 17266,
											"end": 17305,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "479"
										},
										{
											"begin": 17266,
											"end": 17305,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 17266,
											"end": 17305,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 17266,
											"end": 17305,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17266,
											"end": 17305,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17266,
											"end": 17305,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 17266,
											"end": 17305,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 17266,
											"end": 17305,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17266,
											"end": 17305,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 17266,
											"end": 17305,
											"name": "tag",
											"source": 0,
											"value": "479"
										},
										{
											"begin": 17266,
											"end": 17305,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17266,
											"end": 17305,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17266,
											"end": 17305,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17266,
											"end": 17305,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17266,
											"end": 17305,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17266,
											"end": 17305,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 17266,
											"end": 17305,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 17266,
											"end": 17305,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 17266,
											"end": 17305,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 17266,
											"end": 17305,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 17266,
											"end": 17305,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 17266,
											"end": 17305,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 17266,
											"end": 17305,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17266,
											"end": 17305,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 17266,
											"end": 17305,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 17266,
											"end": 17305,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17266,
											"end": 17305,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17266,
											"end": 17305,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 17266,
											"end": 17305,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17266,
											"end": 17305,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17266,
											"end": 17305,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17266,
											"end": 17305,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17266,
											"end": 17305,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17266,
											"end": 17305,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "480"
										},
										{
											"begin": 17266,
											"end": 17305,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 17266,
											"end": 17305,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17266,
											"end": 17305,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "195"
										},
										{
											"begin": 17266,
											"end": 17305,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 17266,
											"end": 17305,
											"name": "tag",
											"source": 0,
											"value": "480"
										},
										{
											"begin": 17266,
											"end": 17305,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17266,
											"end": 17310,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 17249,
											"end": 17311,
											"name": "tag",
											"source": 0,
											"value": "474"
										},
										{
											"begin": 17249,
											"end": 17311,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17227,
											"end": 17393,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "481"
										},
										{
											"begin": 17227,
											"end": 17393,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 17227,
											"end": 17393,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 17227,
											"end": 17393,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 17227,
											"end": 17393,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 17227,
											"end": 17393,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17227,
											"end": 17393,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17227,
											"end": 17393,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 17227,
											"end": 17393,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17227,
											"end": 17393,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "482"
										},
										{
											"begin": 17227,
											"end": 17393,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17227,
											"end": 17393,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "483"
										},
										{
											"begin": 17227,
											"end": 17393,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 17227,
											"end": 17393,
											"name": "tag",
											"source": 0,
											"value": "482"
										},
										{
											"begin": 17227,
											"end": 17393,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17227,
											"end": 17393,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 17227,
											"end": 17393,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 17227,
											"end": 17393,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17227,
											"end": 17393,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 17227,
											"end": 17393,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 17227,
											"end": 17393,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17227,
											"end": 17393,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 17227,
											"end": 17393,
											"name": "tag",
											"source": 0,
											"value": "481"
										},
										{
											"begin": 17227,
											"end": 17393,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17404,
											"end": 17494,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "484"
										},
										{
											"begin": 17424,
											"end": 17429,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 17454,
											"end": 17476,
											"name": "PUSH",
											"source": 0,
											"value": "95EA7B3"
										},
										{
											"begin": 17454,
											"end": 17476,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 17454,
											"end": 17476,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 17478,
											"end": 17485,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 17487,
											"end": 17492,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 17431,
											"end": 17493,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 17431,
											"end": 17493,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 17431,
											"end": 17493,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 17431,
											"end": 17493,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17431,
											"end": 17493,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "485"
										},
										{
											"begin": 17431,
											"end": 17493,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 17431,
											"end": 17493,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 17431,
											"end": 17493,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17431,
											"end": 17493,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "466"
										},
										{
											"begin": 17431,
											"end": 17493,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 17431,
											"end": 17493,
											"name": "tag",
											"source": 0,
											"value": "485"
										},
										{
											"begin": 17431,
											"end": 17493,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17431,
											"end": 17493,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 17431,
											"end": 17493,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 17431,
											"end": 17493,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 17431,
											"end": 17493,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17431,
											"end": 17493,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 17431,
											"end": 17493,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 17431,
											"end": 17493,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 17431,
											"end": 17493,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17431,
											"end": 17493,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17431,
											"end": 17493,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17431,
											"end": 17493,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 17431,
											"end": 17493,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17431,
											"end": 17493,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17431,
											"end": 17493,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17431,
											"end": 17493,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 17431,
											"end": 17493,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 17431,
											"end": 17493,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 17431,
											"end": 17493,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 17431,
											"end": 17493,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17431,
											"end": 17493,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17431,
											"end": 17493,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 17431,
											"end": 17493,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17431,
											"end": 17493,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 17431,
											"end": 17493,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17431,
											"end": 17493,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 17431,
											"end": 17493,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 17431,
											"end": 17493,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 17431,
											"end": 17493,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 17431,
											"end": 17493,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17431,
											"end": 17493,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17431,
											"end": 17493,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17431,
											"end": 17493,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17431,
											"end": 17493,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17404,
											"end": 17423,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "467"
										},
										{
											"begin": 17404,
											"end": 17494,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 17404,
											"end": 17494,
											"name": "tag",
											"source": 0,
											"value": "484"
										},
										{
											"begin": 17404,
											"end": 17494,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16886,
											"end": 17502,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16886,
											"end": 17502,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16886,
											"end": 17502,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16886,
											"end": 17502,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 21375,
											"end": 21566,
											"name": "tag",
											"source": 0,
											"value": "386"
										},
										{
											"begin": 21375,
											"end": 21566,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21449,
											"end": 21465,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 21468,
											"end": 21474,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21468,
											"end": 21474,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 21468,
											"end": 21474,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21468,
											"end": 21474,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 21468,
											"end": 21474,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21468,
											"end": 21474,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 21468,
											"end": 21474,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 21468,
											"end": 21474,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21468,
											"end": 21474,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 21468,
											"end": 21474,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 21468,
											"end": 21474,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 21449,
											"end": 21474,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21449,
											"end": 21474,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21494,
											"end": 21502,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21485,
											"end": 21491,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 21485,
											"end": 21491,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21485,
											"end": 21502,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 21485,
											"end": 21502,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 21485,
											"end": 21502,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21485,
											"end": 21502,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 21485,
											"end": 21502,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21485,
											"end": 21502,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 21485,
											"end": 21502,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 21485,
											"end": 21502,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 21485,
											"end": 21502,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 21485,
											"end": 21502,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21485,
											"end": 21502,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 21485,
											"end": 21502,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 21485,
											"end": 21502,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 21485,
											"end": 21502,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 21485,
											"end": 21502,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 21485,
											"end": 21502,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21485,
											"end": 21502,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 21485,
											"end": 21502,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21549,
											"end": 21557,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21518,
											"end": 21558,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 21518,
											"end": 21558,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 21539,
											"end": 21547,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21518,
											"end": 21558,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 21518,
											"end": 21558,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 21518,
											"end": 21558,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 21518,
											"end": 21558,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 21518,
											"end": 21558,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 21518,
											"end": 21558,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 21518,
											"end": 21558,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 21518,
											"end": 21558,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21518,
											"end": 21558,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 21518,
											"end": 21558,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 21518,
											"end": 21558,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21518,
											"end": 21558,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 21438,
											"end": 21566,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21375,
											"end": 21566,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21375,
											"end": 21566,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 3358,
											"end": 3703,
											"name": "tag",
											"source": 0,
											"value": "453"
										},
										{
											"begin": 3358,
											"end": 3703,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3444,
											"end": 3451,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3543,
											"end": 3544,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3539,
											"end": 3540,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3539,
											"end": 3544,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 3546,
											"end": 3558,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3531,
											"end": 3559,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3531,
											"end": 3559,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "488"
										},
										{
											"begin": 3531,
											"end": 3559,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3531,
											"end": 3559,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3531,
											"end": 3559,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3531,
											"end": 3559,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3531,
											"end": 3559,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3531,
											"end": 3559,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3531,
											"end": 3559,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3531,
											"end": 3559,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3531,
											"end": 3559,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "489"
										},
										{
											"begin": 3531,
											"end": 3559,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3531,
											"end": 3559,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3531,
											"end": 3559,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "490"
										},
										{
											"begin": 3531,
											"end": 3559,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3531,
											"end": 3559,
											"name": "tag",
											"source": 0,
											"value": "489"
										},
										{
											"begin": 3531,
											"end": 3559,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3531,
											"end": 3559,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3531,
											"end": 3559,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3531,
											"end": 3559,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3531,
											"end": 3559,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3531,
											"end": 3559,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3531,
											"end": 3559,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3531,
											"end": 3559,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3531,
											"end": 3559,
											"name": "tag",
											"source": 0,
											"value": "488"
										},
										{
											"begin": 3531,
											"end": 3559,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3531,
											"end": 3559,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3570,
											"end": 3579,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3586,
											"end": 3587,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3582,
											"end": 3583,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 3582,
											"end": 3587,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "491"
										},
										{
											"begin": 3582,
											"end": 3587,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3582,
											"end": 3587,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3582,
											"end": 3587,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "447"
										},
										{
											"begin": 3582,
											"end": 3587,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3582,
											"end": 3587,
											"name": "tag",
											"source": 0,
											"value": "491"
										},
										{
											"begin": 3582,
											"end": 3587,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3570,
											"end": 3587,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3570,
											"end": 3587,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3694,
											"end": 3695,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3687,
											"end": 3695,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3687,
											"end": 3695,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3687,
											"end": 3695,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3358,
											"end": 3703,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 3358,
											"end": 3703,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3358,
											"end": 3703,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3358,
											"end": 3703,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3358,
											"end": 3703,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3358,
											"end": 3703,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 1314,
											"end": 1506,
											"name": "tag",
											"source": 0,
											"value": "456"
										},
										{
											"begin": 1314,
											"end": 1506,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1400,
											"end": 1407,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1433,
											"end": 1434,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1428,
											"end": 1429,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1428,
											"end": 1434,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 1428,
											"end": 1434,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1436,
											"end": 1448,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1420,
											"end": 1449,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1420,
											"end": 1449,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "493"
										},
										{
											"begin": 1420,
											"end": 1449,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1420,
											"end": 1449,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1420,
											"end": 1449,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1420,
											"end": 1449,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1420,
											"end": 1449,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1420,
											"end": 1449,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1420,
											"end": 1449,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1420,
											"end": 1449,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1420,
											"end": 1449,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "494"
										},
										{
											"begin": 1420,
											"end": 1449,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1420,
											"end": 1449,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1420,
											"end": 1449,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "490"
										},
										{
											"begin": 1420,
											"end": 1449,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1420,
											"end": 1449,
											"name": "tag",
											"source": 0,
											"value": "494"
										},
										{
											"begin": 1420,
											"end": 1449,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1420,
											"end": 1449,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1420,
											"end": 1449,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1420,
											"end": 1449,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1420,
											"end": 1449,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1420,
											"end": 1449,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1420,
											"end": 1449,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1420,
											"end": 1449,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1420,
											"end": 1449,
											"name": "tag",
											"source": 0,
											"value": "493"
										},
										{
											"begin": 1420,
											"end": 1449,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1420,
											"end": 1449,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1460,
											"end": 1469,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1476,
											"end": 1477,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1472,
											"end": 1473,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 1472,
											"end": 1477,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "495"
										},
										{
											"begin": 1472,
											"end": 1477,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1472,
											"end": 1477,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1472,
											"end": 1477,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "496"
										},
										{
											"begin": 1472,
											"end": 1477,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1472,
											"end": 1477,
											"name": "tag",
											"source": 0,
											"value": "495"
										},
										{
											"begin": 1472,
											"end": 1477,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1460,
											"end": 1477,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1460,
											"end": 1477,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1497,
											"end": 1498,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1490,
											"end": 1498,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1490,
											"end": 1498,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1490,
											"end": 1498,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1314,
											"end": 1506,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 1314,
											"end": 1506,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 1314,
											"end": 1506,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1314,
											"end": 1506,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1314,
											"end": 1506,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1314,
											"end": 1506,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 18723,
											"end": 19439,
											"name": "tag",
											"source": 0,
											"value": "467"
										},
										{
											"begin": 18723,
											"end": 19439,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19147,
											"end": 19170,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 19173,
											"end": 19242,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "498"
										},
										{
											"begin": 19201,
											"end": 19205,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 19173,
											"end": 19242,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 19173,
											"end": 19242,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 19173,
											"end": 19242,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19173,
											"end": 19242,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 19173,
											"end": 19242,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 19173,
											"end": 19242,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 19173,
											"end": 19242,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 19173,
											"end": 19242,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19173,
											"end": 19242,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 19173,
											"end": 19242,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19173,
											"end": 19242,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 19173,
											"end": 19242,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 19173,
											"end": 19242,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 19173,
											"end": 19242,
											"name": "PUSH",
											"source": 0,
											"value": "5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564"
										},
										{
											"begin": 19173,
											"end": 19242,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19173,
											"end": 19242,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 19173,
											"end": 19242,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 19181,
											"end": 19186,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 19173,
											"end": 19200,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 19173,
											"end": 19200,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 19173,
											"end": 19200,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "499"
										},
										{
											"begin": 19173,
											"end": 19200,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19173,
											"end": 19242,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 19173,
											"end": 19242,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 19173,
											"end": 19242,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19173,
											"end": 19242,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 19173,
											"end": 19242,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 19173,
											"end": 19242,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 19173,
											"end": 19242,
											"name": "tag",
											"source": 0,
											"value": "498"
										},
										{
											"begin": 19173,
											"end": 19242,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19147,
											"end": 19242,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19147,
											"end": 19242,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 19277,
											"end": 19278,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 19257,
											"end": 19267,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19257,
											"end": 19274,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 19257,
											"end": 19278,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 19253,
											"end": 19432,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 19253,
											"end": 19432,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "500"
										},
										{
											"begin": 19253,
											"end": 19432,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 19354,
											"end": 19364,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19343,
											"end": 19373,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19343,
											"end": 19373,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 19343,
											"end": 19373,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 19343,
											"end": 19373,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19343,
											"end": 19373,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 19343,
											"end": 19373,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19343,
											"end": 19373,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 19343,
											"end": 19373,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19343,
											"end": 19373,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "501"
										},
										{
											"begin": 19343,
											"end": 19373,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 19343,
											"end": 19373,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19343,
											"end": 19373,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "502"
										},
										{
											"begin": 19343,
											"end": 19373,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 19343,
											"end": 19373,
											"name": "tag",
											"source": 0,
											"value": "501"
										},
										{
											"begin": 19343,
											"end": 19373,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19335,
											"end": 19420,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "503"
										},
										{
											"begin": 19335,
											"end": 19420,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 19335,
											"end": 19420,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 19335,
											"end": 19420,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 19335,
											"end": 19420,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 19335,
											"end": 19420,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19335,
											"end": 19420,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 19335,
											"end": 19420,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 19335,
											"end": 19420,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 19335,
											"end": 19420,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "504"
										},
										{
											"begin": 19335,
											"end": 19420,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19335,
											"end": 19420,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "505"
										},
										{
											"begin": 19335,
											"end": 19420,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 19335,
											"end": 19420,
											"name": "tag",
											"source": 0,
											"value": "504"
										},
										{
											"begin": 19335,
											"end": 19420,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19335,
											"end": 19420,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 19335,
											"end": 19420,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 19335,
											"end": 19420,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19335,
											"end": 19420,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 19335,
											"end": 19420,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 19335,
											"end": 19420,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19335,
											"end": 19420,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 19335,
											"end": 19420,
											"name": "tag",
											"source": 0,
											"value": "503"
										},
										{
											"begin": 19335,
											"end": 19420,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19253,
											"end": 19432,
											"name": "tag",
											"source": 0,
											"value": "500"
										},
										{
											"begin": 19253,
											"end": 19432,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18793,
											"end": 19439,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 18723,
											"end": 19439,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 18723,
											"end": 19439,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 18723,
											"end": 19439,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 11566,
											"end": 11795,
											"name": "tag",
											"source": 0,
											"value": "499"
										},
										{
											"begin": 11566,
											"end": 11795,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11703,
											"end": 11715,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 11735,
											"end": 11787,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "507"
										},
										{
											"begin": 11757,
											"end": 11763,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 11765,
											"end": 11769,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 11771,
											"end": 11772,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11774,
											"end": 11786,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 11735,
											"end": 11756,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "508"
										},
										{
											"begin": 11735,
											"end": 11787,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 11735,
											"end": 11787,
											"name": "tag",
											"source": 0,
											"value": "507"
										},
										{
											"begin": 11735,
											"end": 11787,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11728,
											"end": 11787,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11728,
											"end": 11787,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11566,
											"end": 11795,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 11566,
											"end": 11795,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 11566,
											"end": 11795,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11566,
											"end": 11795,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11566,
											"end": 11795,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11566,
											"end": 11795,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 12686,
											"end": 13196,
											"name": "tag",
											"source": 0,
											"value": "508"
										},
										{
											"begin": 12686,
											"end": 13196,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12856,
											"end": 12868,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 12914,
											"end": 12919,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 12889,
											"end": 12910,
											"name": "SELFBALANCE",
											"source": 0
										},
										{
											"begin": 12889,
											"end": 12919,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 12889,
											"end": 12919,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 12881,
											"end": 12962,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "510"
										},
										{
											"begin": 12881,
											"end": 12962,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 12881,
											"end": 12962,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12881,
											"end": 12962,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 12881,
											"end": 12962,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 12881,
											"end": 12962,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12881,
											"end": 12962,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12881,
											"end": 12962,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 12881,
											"end": 12962,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12881,
											"end": 12962,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "511"
										},
										{
											"begin": 12881,
											"end": 12962,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12881,
											"end": 12962,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "512"
										},
										{
											"begin": 12881,
											"end": 12962,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 12881,
											"end": 12962,
											"name": "tag",
											"source": 0,
											"value": "511"
										},
										{
											"begin": 12881,
											"end": 12962,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12881,
											"end": 12962,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12881,
											"end": 12962,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 12881,
											"end": 12962,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12881,
											"end": 12962,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12881,
											"end": 12962,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 12881,
											"end": 12962,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12881,
											"end": 12962,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 12881,
											"end": 12962,
											"name": "tag",
											"source": 0,
											"value": "510"
										},
										{
											"begin": 12881,
											"end": 12962,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12981,
											"end": 12999,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "513"
										},
										{
											"begin": 12992,
											"end": 12998,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 12981,
											"end": 12991,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "514"
										},
										{
											"begin": 12981,
											"end": 12999,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 12981,
											"end": 12999,
											"name": "tag",
											"source": 0,
											"value": "513"
										},
										{
											"begin": 12981,
											"end": 12999,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12973,
											"end": 13033,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "515"
										},
										{
											"begin": 12973,
											"end": 13033,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 12973,
											"end": 13033,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12973,
											"end": 13033,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 12973,
											"end": 13033,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 12973,
											"end": 13033,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12973,
											"end": 13033,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12973,
											"end": 13033,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 12973,
											"end": 13033,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12973,
											"end": 13033,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "516"
										},
										{
											"begin": 12973,
											"end": 13033,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12973,
											"end": 13033,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "517"
										},
										{
											"begin": 12973,
											"end": 13033,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 12973,
											"end": 13033,
											"name": "tag",
											"source": 0,
											"value": "516"
										},
										{
											"begin": 12973,
											"end": 13033,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12973,
											"end": 13033,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12973,
											"end": 13033,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 12973,
											"end": 13033,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12973,
											"end": 13033,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12973,
											"end": 13033,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 12973,
											"end": 13033,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12973,
											"end": 13033,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 12973,
											"end": 13033,
											"name": "tag",
											"source": 0,
											"value": "515"
										},
										{
											"begin": 12973,
											"end": 13033,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13047,
											"end": 13059,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13061,
											"end": 13084,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13088,
											"end": 13094,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 13088,
											"end": 13099,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13088,
											"end": 13099,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 13107,
											"end": 13112,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 13114,
											"end": 13118,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 13088,
											"end": 13119,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13088,
											"end": 13119,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 13088,
											"end": 13119,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "518"
										},
										{
											"begin": 13088,
											"end": 13119,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13088,
											"end": 13119,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13088,
											"end": 13119,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "519"
										},
										{
											"begin": 13088,
											"end": 13119,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 13088,
											"end": 13119,
											"name": "tag",
											"source": 0,
											"value": "518"
										},
										{
											"begin": 13088,
											"end": 13119,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13088,
											"end": 13119,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13088,
											"end": 13119,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13088,
											"end": 13119,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 13088,
											"end": 13119,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13088,
											"end": 13119,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 13088,
											"end": 13119,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 13088,
											"end": 13119,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13088,
											"end": 13119,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 13088,
											"end": 13119,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 13088,
											"end": 13119,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 13088,
											"end": 13119,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 13088,
											"end": 13119,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 13088,
											"end": 13119,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13088,
											"end": 13119,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13088,
											"end": 13119,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13088,
											"end": 13119,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 13088,
											"end": 13119,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13088,
											"end": 13119,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13088,
											"end": 13119,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13088,
											"end": 13119,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 13088,
											"end": 13119,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "522"
										},
										{
											"begin": 13088,
											"end": 13119,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 13088,
											"end": 13119,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13088,
											"end": 13119,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 13088,
											"end": 13119,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13088,
											"end": 13119,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13088,
											"end": 13119,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 13088,
											"end": 13119,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 13088,
											"end": 13119,
											"name": "PUSH",
											"source": 0,
											"value": "3F"
										},
										{
											"begin": 13088,
											"end": 13119,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 13088,
											"end": 13119,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13088,
											"end": 13119,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 13088,
											"end": 13119,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 13088,
											"end": 13119,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13088,
											"end": 13119,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13088,
											"end": 13119,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13088,
											"end": 13119,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 13088,
											"end": 13119,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 13088,
											"end": 13119,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13088,
											"end": 13119,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 13088,
											"end": 13119,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13088,
											"end": 13119,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13088,
											"end": 13119,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 13088,
											"end": 13119,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13088,
											"end": 13119,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 13088,
											"end": 13119,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "521"
										},
										{
											"begin": 13088,
											"end": 13119,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13088,
											"end": 13119,
											"name": "tag",
											"source": 0,
											"value": "522"
										},
										{
											"begin": 13088,
											"end": 13119,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13088,
											"end": 13119,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 13088,
											"end": 13119,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13088,
											"end": 13119,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13088,
											"end": 13119,
											"name": "tag",
											"source": 0,
											"value": "521"
										},
										{
											"begin": 13088,
											"end": 13119,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13088,
											"end": 13119,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13046,
											"end": 13119,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13046,
											"end": 13119,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13046,
											"end": 13119,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13046,
											"end": 13119,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13137,
											"end": 13188,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "523"
										},
										{
											"begin": 13154,
											"end": 13161,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 13163,
											"end": 13173,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 13175,
											"end": 13187,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 13137,
											"end": 13153,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "524"
										},
										{
											"begin": 13137,
											"end": 13188,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 13137,
											"end": 13188,
											"name": "tag",
											"source": 0,
											"value": "523"
										},
										{
											"begin": 13137,
											"end": 13188,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13130,
											"end": 13188,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 13130,
											"end": 13188,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13130,
											"end": 13188,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13130,
											"end": 13188,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12686,
											"end": 13196,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 12686,
											"end": 13196,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 12686,
											"end": 13196,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12686,
											"end": 13196,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12686,
											"end": 13196,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12686,
											"end": 13196,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12686,
											"end": 13196,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 8821,
											"end": 9147,
											"name": "tag",
											"source": 0,
											"value": "514"
										},
										{
											"begin": 8821,
											"end": 9147,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8881,
											"end": 8885,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9138,
											"end": 9139,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9116,
											"end": 9123,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 9116,
											"end": 9135,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9116,
											"end": 9135,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9116,
											"end": 9135,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 9116,
											"end": 9139,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 9109,
											"end": 9139,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9109,
											"end": 9139,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8821,
											"end": 9147,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8821,
											"end": 9147,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8821,
											"end": 9147,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8821,
											"end": 9147,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 15372,
											"end": 16084,
											"name": "tag",
											"source": 0,
											"value": "524"
										},
										{
											"begin": 15372,
											"end": 16084,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15522,
											"end": 15534,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 15551,
											"end": 15558,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 15547,
											"end": 16077,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 15547,
											"end": 16077,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "527"
										},
										{
											"begin": 15547,
											"end": 16077,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 15582,
											"end": 15592,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 15575,
											"end": 15592,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15575,
											"end": 15592,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15575,
											"end": 15592,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "526"
										},
										{
											"begin": 15575,
											"end": 15592,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 15547,
											"end": 16077,
											"name": "tag",
											"source": 0,
											"value": "527"
										},
										{
											"begin": 15547,
											"end": 16077,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15716,
											"end": 15717,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 15696,
											"end": 15706,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 15696,
											"end": 15713,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 15696,
											"end": 15717,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 15692,
											"end": 16066,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 15692,
											"end": 16066,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "529"
										},
										{
											"begin": 15692,
											"end": 16066,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 15894,
											"end": 15904,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 15888,
											"end": 15905,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 15955,
											"end": 15970,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15942,
											"end": 15952,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 15938,
											"end": 15940,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 15934,
											"end": 15953,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15927,
											"end": 15971,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 15692,
											"end": 16066,
											"name": "tag",
											"source": 0,
											"value": "529"
										},
										{
											"begin": 15692,
											"end": 16066,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16037,
											"end": 16049,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16030,
											"end": 16050,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16030,
											"end": 16050,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 16030,
											"end": 16050,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 16030,
											"end": 16050,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16030,
											"end": 16050,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16030,
											"end": 16050,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 16030,
											"end": 16050,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16030,
											"end": 16050,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "531"
										},
										{
											"begin": 16030,
											"end": 16050,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 16030,
											"end": 16050,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16030,
											"end": 16050,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "490"
										},
										{
											"begin": 16030,
											"end": 16050,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 16030,
											"end": 16050,
											"name": "tag",
											"source": 0,
											"value": "531"
										},
										{
											"begin": 16030,
											"end": 16050,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16030,
											"end": 16050,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16030,
											"end": 16050,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 16030,
											"end": 16050,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16030,
											"end": 16050,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 16030,
											"end": 16050,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 16030,
											"end": 16050,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16030,
											"end": 16050,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 15372,
											"end": 16084,
											"name": "tag",
											"source": 0,
											"value": "526"
										},
										{
											"begin": 15372,
											"end": 16084,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15372,
											"end": 16084,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 15372,
											"end": 16084,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 15372,
											"end": 16084,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15372,
											"end": 16084,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15372,
											"end": 16084,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15372,
											"end": 16084,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 7,
											"end": 146,
											"name": "tag",
											"source": 1,
											"value": "533"
										},
										{
											"begin": 7,
											"end": 146,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 53,
											"end": 58,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 91,
											"end": 97,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 78,
											"end": 98,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 69,
											"end": 98,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 69,
											"end": 98,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 107,
											"end": 140,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "535"
										},
										{
											"begin": 134,
											"end": 139,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 107,
											"end": 140,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "536"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "tag",
											"source": 1,
											"value": "535"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7,
											"end": 146,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 7,
											"end": 146,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7,
											"end": 146,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 146,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 146,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 152,
											"end": 285,
											"name": "tag",
											"source": 1,
											"value": "537"
										},
										{
											"begin": 152,
											"end": 285,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 195,
											"end": 200,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 233,
											"end": 239,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 220,
											"end": 240,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 211,
											"end": 240,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 211,
											"end": 240,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 249,
											"end": 279,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "539"
										},
										{
											"begin": 273,
											"end": 278,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 249,
											"end": 279,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "540"
										},
										{
											"begin": 249,
											"end": 279,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 249,
											"end": 279,
											"name": "tag",
											"source": 1,
											"value": "539"
										},
										{
											"begin": 249,
											"end": 279,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 152,
											"end": 285,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 152,
											"end": 285,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 152,
											"end": 285,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 152,
											"end": 285,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 152,
											"end": 285,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 291,
											"end": 428,
											"name": "tag",
											"source": 1,
											"value": "541"
										},
										{
											"begin": 291,
											"end": 428,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 345,
											"end": 350,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 376,
											"end": 382,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 370,
											"end": 383,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 361,
											"end": 383,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 361,
											"end": 383,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 392,
											"end": 422,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "543"
										},
										{
											"begin": 416,
											"end": 421,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 392,
											"end": 422,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "540"
										},
										{
											"begin": 392,
											"end": 422,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 392,
											"end": 422,
											"name": "tag",
											"source": 1,
											"value": "543"
										},
										{
											"begin": 392,
											"end": 422,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 291,
											"end": 428,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 291,
											"end": 428,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 291,
											"end": 428,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 291,
											"end": 428,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 291,
											"end": 428,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 434,
											"end": 601,
											"name": "tag",
											"source": 1,
											"value": "544"
										},
										{
											"begin": 434,
											"end": 601,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 494,
											"end": 499,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 532,
											"end": 538,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 519,
											"end": 539,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 510,
											"end": 539,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 510,
											"end": 539,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 548,
											"end": 595,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "546"
										},
										{
											"begin": 589,
											"end": 594,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 548,
											"end": 595,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "547"
										},
										{
											"begin": 548,
											"end": 595,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 548,
											"end": 595,
											"name": "tag",
											"source": 1,
											"value": "546"
										},
										{
											"begin": 548,
											"end": 595,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 434,
											"end": 601,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 434,
											"end": 601,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 434,
											"end": 601,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 434,
											"end": 601,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 434,
											"end": 601,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 607,
											"end": 778,
											"name": "tag",
											"source": 1,
											"value": "548"
										},
										{
											"begin": 607,
											"end": 778,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 678,
											"end": 683,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 709,
											"end": 715,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 703,
											"end": 716,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 694,
											"end": 716,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 694,
											"end": 716,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 725,
											"end": 772,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "550"
										},
										{
											"begin": 766,
											"end": 771,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 725,
											"end": 772,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "547"
										},
										{
											"begin": 725,
											"end": 772,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 725,
											"end": 772,
											"name": "tag",
											"source": 1,
											"value": "550"
										},
										{
											"begin": 725,
											"end": 772,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 607,
											"end": 778,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 607,
											"end": 778,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 607,
											"end": 778,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 607,
											"end": 778,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 607,
											"end": 778,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 784,
											"end": 953,
											"name": "tag",
											"source": 1,
											"value": "551"
										},
										{
											"begin": 784,
											"end": 953,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 845,
											"end": 850,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 883,
											"end": 889,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 870,
											"end": 890,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 861,
											"end": 890,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 861,
											"end": 890,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 899,
											"end": 947,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "553"
										},
										{
											"begin": 941,
											"end": 946,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 899,
											"end": 947,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "554"
										},
										{
											"begin": 899,
											"end": 947,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 899,
											"end": 947,
											"name": "tag",
											"source": 1,
											"value": "553"
										},
										{
											"begin": 899,
											"end": 947,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 784,
											"end": 953,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 784,
											"end": 953,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 784,
											"end": 953,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 784,
											"end": 953,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 784,
											"end": 953,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 959,
											"end": 1140,
											"name": "tag",
											"source": 1,
											"value": "555"
										},
										{
											"begin": 959,
											"end": 1140,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1026,
											"end": 1031,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1064,
											"end": 1070,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1051,
											"end": 1071,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 1042,
											"end": 1071,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1042,
											"end": 1071,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1080,
											"end": 1134,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "557"
										},
										{
											"begin": 1128,
											"end": 1133,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1080,
											"end": 1134,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "558"
										},
										{
											"begin": 1080,
											"end": 1134,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1080,
											"end": 1134,
											"name": "tag",
											"source": 1,
											"value": "557"
										},
										{
											"begin": 1080,
											"end": 1134,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 959,
											"end": 1140,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 959,
											"end": 1140,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 959,
											"end": 1140,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 959,
											"end": 1140,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 959,
											"end": 1140,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1146,
											"end": 1285,
											"name": "tag",
											"source": 1,
											"value": "559"
										},
										{
											"begin": 1146,
											"end": 1285,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1192,
											"end": 1197,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1230,
											"end": 1236,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1217,
											"end": 1237,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 1208,
											"end": 1237,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1208,
											"end": 1237,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1246,
											"end": 1279,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "561"
										},
										{
											"begin": 1273,
											"end": 1278,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1246,
											"end": 1279,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "562"
										},
										{
											"begin": 1246,
											"end": 1279,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1246,
											"end": 1279,
											"name": "tag",
											"source": 1,
											"value": "561"
										},
										{
											"begin": 1246,
											"end": 1279,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1146,
											"end": 1285,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1146,
											"end": 1285,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1146,
											"end": 1285,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1146,
											"end": 1285,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1146,
											"end": 1285,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1291,
											"end": 1434,
											"name": "tag",
											"source": 1,
											"value": "563"
										},
										{
											"begin": 1291,
											"end": 1434,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1348,
											"end": 1353,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1379,
											"end": 1385,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1373,
											"end": 1386,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1364,
											"end": 1386,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1364,
											"end": 1386,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1395,
											"end": 1428,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "565"
										},
										{
											"begin": 1422,
											"end": 1427,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1395,
											"end": 1428,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "562"
										},
										{
											"begin": 1395,
											"end": 1428,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1395,
											"end": 1428,
											"name": "tag",
											"source": 1,
											"value": "565"
										},
										{
											"begin": 1395,
											"end": 1428,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1291,
											"end": 1434,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1291,
											"end": 1434,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1291,
											"end": 1434,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1291,
											"end": 1434,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1291,
											"end": 1434,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1440,
											"end": 1769,
											"name": "tag",
											"source": 1,
											"value": "123"
										},
										{
											"begin": 1440,
											"end": 1769,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1499,
											"end": 1505,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1548,
											"end": 1550,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1536,
											"end": 1545,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1527,
											"end": 1534,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1523,
											"end": 1546,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1519,
											"end": 1551,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 1516,
											"end": 1635,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1516,
											"end": 1635,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "567"
										},
										{
											"begin": 1516,
											"end": 1635,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1554,
											"end": 1633,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "568"
										},
										{
											"begin": 1554,
											"end": 1633,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "569"
										},
										{
											"begin": 1554,
											"end": 1633,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1554,
											"end": 1633,
											"name": "tag",
											"source": 1,
											"value": "568"
										},
										{
											"begin": 1554,
											"end": 1633,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1516,
											"end": 1635,
											"name": "tag",
											"source": 1,
											"value": "567"
										},
										{
											"begin": 1516,
											"end": 1635,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1674,
											"end": 1675,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1699,
											"end": 1752,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "570"
										},
										{
											"begin": 1744,
											"end": 1751,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1735,
											"end": 1741,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1724,
											"end": 1733,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1720,
											"end": 1742,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1699,
											"end": 1752,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "533"
										},
										{
											"begin": 1699,
											"end": 1752,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1699,
											"end": 1752,
											"name": "tag",
											"source": 1,
											"value": "570"
										},
										{
											"begin": 1699,
											"end": 1752,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1689,
											"end": 1752,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1689,
											"end": 1752,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1645,
											"end": 1762,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1440,
											"end": 1769,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1440,
											"end": 1769,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1440,
											"end": 1769,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1440,
											"end": 1769,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1440,
											"end": 1769,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1775,
											"end": 2120,
											"name": "tag",
											"source": 1,
											"value": "502"
										},
										{
											"begin": 1775,
											"end": 2120,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1842,
											"end": 1848,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1891,
											"end": 1893,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1879,
											"end": 1888,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1870,
											"end": 1877,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1866,
											"end": 1889,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1862,
											"end": 1894,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 1859,
											"end": 1978,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1859,
											"end": 1978,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "572"
										},
										{
											"begin": 1859,
											"end": 1978,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1897,
											"end": 1976,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "573"
										},
										{
											"begin": 1897,
											"end": 1976,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "569"
										},
										{
											"begin": 1897,
											"end": 1976,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1897,
											"end": 1976,
											"name": "tag",
											"source": 1,
											"value": "573"
										},
										{
											"begin": 1897,
											"end": 1976,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1859,
											"end": 1978,
											"name": "tag",
											"source": 1,
											"value": "572"
										},
										{
											"begin": 1859,
											"end": 1978,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2017,
											"end": 2018,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2042,
											"end": 2103,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "574"
										},
										{
											"begin": 2095,
											"end": 2102,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2086,
											"end": 2092,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2075,
											"end": 2084,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 2071,
											"end": 2093,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2042,
											"end": 2103,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "541"
										},
										{
											"begin": 2042,
											"end": 2103,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2042,
											"end": 2103,
											"name": "tag",
											"source": 1,
											"value": "574"
										},
										{
											"begin": 2042,
											"end": 2103,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2032,
											"end": 2103,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2032,
											"end": 2103,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1988,
											"end": 2113,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1775,
											"end": 2120,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1775,
											"end": 2120,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1775,
											"end": 2120,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1775,
											"end": 2120,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1775,
											"end": 2120,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 2126,
											"end": 2505,
											"name": "tag",
											"source": 1,
											"value": "308"
										},
										{
											"begin": 2126,
											"end": 2505,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2210,
											"end": 2216,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2259,
											"end": 2261,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2247,
											"end": 2256,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2238,
											"end": 2245,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2234,
											"end": 2257,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2230,
											"end": 2262,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 2227,
											"end": 2346,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2227,
											"end": 2346,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "576"
										},
										{
											"begin": 2227,
											"end": 2346,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2265,
											"end": 2344,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "577"
										},
										{
											"begin": 2265,
											"end": 2344,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "569"
										},
										{
											"begin": 2265,
											"end": 2344,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2265,
											"end": 2344,
											"name": "tag",
											"source": 1,
											"value": "577"
										},
										{
											"begin": 2265,
											"end": 2344,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2227,
											"end": 2346,
											"name": "tag",
											"source": 1,
											"value": "576"
										},
										{
											"begin": 2227,
											"end": 2346,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2385,
											"end": 2386,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2410,
											"end": 2488,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "578"
										},
										{
											"begin": 2480,
											"end": 2487,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2471,
											"end": 2477,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2460,
											"end": 2469,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 2456,
											"end": 2478,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2410,
											"end": 2488,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "548"
										},
										{
											"begin": 2410,
											"end": 2488,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2410,
											"end": 2488,
											"name": "tag",
											"source": 1,
											"value": "578"
										},
										{
											"begin": 2410,
											"end": 2488,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2400,
											"end": 2488,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2400,
											"end": 2488,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2356,
											"end": 2498,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2126,
											"end": 2505,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2126,
											"end": 2505,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2126,
											"end": 2505,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2126,
											"end": 2505,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2126,
											"end": 2505,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 2511,
											"end": 3015,
											"name": "tag",
											"source": 1,
											"value": "87"
										},
										{
											"begin": 2511,
											"end": 3015,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2594,
											"end": 2600,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2602,
											"end": 2608,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2651,
											"end": 2653,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2639,
											"end": 2648,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2630,
											"end": 2637,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 2626,
											"end": 2649,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2622,
											"end": 2654,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 2619,
											"end": 2738,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2619,
											"end": 2738,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "580"
										},
										{
											"begin": 2619,
											"end": 2738,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2657,
											"end": 2736,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "581"
										},
										{
											"begin": 2657,
											"end": 2736,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "569"
										},
										{
											"begin": 2657,
											"end": 2736,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2657,
											"end": 2736,
											"name": "tag",
											"source": 1,
											"value": "581"
										},
										{
											"begin": 2657,
											"end": 2736,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2619,
											"end": 2738,
											"name": "tag",
											"source": 1,
											"value": "580"
										},
										{
											"begin": 2619,
											"end": 2738,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2777,
											"end": 2778,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2802,
											"end": 2870,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "582"
										},
										{
											"begin": 2862,
											"end": 2869,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 2853,
											"end": 2859,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2842,
											"end": 2851,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 2838,
											"end": 2860,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2802,
											"end": 2870,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "551"
										},
										{
											"begin": 2802,
											"end": 2870,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2802,
											"end": 2870,
											"name": "tag",
											"source": 1,
											"value": "582"
										},
										{
											"begin": 2802,
											"end": 2870,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2792,
											"end": 2870,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2792,
											"end": 2870,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2748,
											"end": 2880,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2919,
											"end": 2921,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2945,
											"end": 2998,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "583"
										},
										{
											"begin": 2990,
											"end": 2997,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 2981,
											"end": 2987,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2970,
											"end": 2979,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 2966,
											"end": 2988,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2945,
											"end": 2998,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "559"
										},
										{
											"begin": 2945,
											"end": 2998,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2945,
											"end": 2998,
											"name": "tag",
											"source": 1,
											"value": "583"
										},
										{
											"begin": 2945,
											"end": 2998,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2935,
											"end": 2998,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2935,
											"end": 2998,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2890,
											"end": 3008,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2511,
											"end": 3015,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2511,
											"end": 3015,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2511,
											"end": 3015,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2511,
											"end": 3015,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2511,
											"end": 3015,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2511,
											"end": 3015,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 3021,
											"end": 3392,
											"name": "tag",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 3021,
											"end": 3392,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3101,
											"end": 3107,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3150,
											"end": 3152,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3138,
											"end": 3147,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3129,
											"end": 3136,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3125,
											"end": 3148,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3121,
											"end": 3153,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 3118,
											"end": 3237,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3118,
											"end": 3237,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "585"
										},
										{
											"begin": 3118,
											"end": 3237,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3156,
											"end": 3235,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "586"
										},
										{
											"begin": 3156,
											"end": 3235,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "569"
										},
										{
											"begin": 3156,
											"end": 3235,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3156,
											"end": 3235,
											"name": "tag",
											"source": 1,
											"value": "586"
										},
										{
											"begin": 3156,
											"end": 3235,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3118,
											"end": 3237,
											"name": "tag",
											"source": 1,
											"value": "585"
										},
										{
											"begin": 3118,
											"end": 3237,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3276,
											"end": 3277,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3301,
											"end": 3375,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "587"
										},
										{
											"begin": 3367,
											"end": 3374,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3358,
											"end": 3364,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3347,
											"end": 3356,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 3343,
											"end": 3365,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3301,
											"end": 3375,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "555"
										},
										{
											"begin": 3301,
											"end": 3375,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3301,
											"end": 3375,
											"name": "tag",
											"source": 1,
											"value": "587"
										},
										{
											"begin": 3301,
											"end": 3375,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3291,
											"end": 3375,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3291,
											"end": 3375,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3247,
											"end": 3385,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3021,
											"end": 3392,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3021,
											"end": 3392,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3021,
											"end": 3392,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3021,
											"end": 3392,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3021,
											"end": 3392,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 3398,
											"end": 3727,
											"name": "tag",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 3398,
											"end": 3727,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3457,
											"end": 3463,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3506,
											"end": 3508,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3494,
											"end": 3503,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3485,
											"end": 3492,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3481,
											"end": 3504,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3477,
											"end": 3509,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 3474,
											"end": 3593,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3474,
											"end": 3593,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "589"
										},
										{
											"begin": 3474,
											"end": 3593,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3512,
											"end": 3591,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "590"
										},
										{
											"begin": 3512,
											"end": 3591,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "569"
										},
										{
											"begin": 3512,
											"end": 3591,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3512,
											"end": 3591,
											"name": "tag",
											"source": 1,
											"value": "590"
										},
										{
											"begin": 3512,
											"end": 3591,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3474,
											"end": 3593,
											"name": "tag",
											"source": 1,
											"value": "589"
										},
										{
											"begin": 3474,
											"end": 3593,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3632,
											"end": 3633,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3657,
											"end": 3710,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "591"
										},
										{
											"begin": 3702,
											"end": 3709,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3693,
											"end": 3699,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3682,
											"end": 3691,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 3678,
											"end": 3700,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3657,
											"end": 3710,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "559"
										},
										{
											"begin": 3657,
											"end": 3710,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3657,
											"end": 3710,
											"name": "tag",
											"source": 1,
											"value": "591"
										},
										{
											"begin": 3657,
											"end": 3710,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3647,
											"end": 3710,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3647,
											"end": 3710,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3603,
											"end": 3720,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3398,
											"end": 3727,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3398,
											"end": 3727,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3398,
											"end": 3727,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3398,
											"end": 3727,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3398,
											"end": 3727,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 3733,
											"end": 4084,
											"name": "tag",
											"source": 1,
											"value": "195"
										},
										{
											"begin": 3733,
											"end": 4084,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3803,
											"end": 3809,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3852,
											"end": 3854,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3840,
											"end": 3849,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3831,
											"end": 3838,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3827,
											"end": 3850,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3823,
											"end": 3855,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 3820,
											"end": 3939,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3820,
											"end": 3939,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "593"
										},
										{
											"begin": 3820,
											"end": 3939,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3858,
											"end": 3937,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "594"
										},
										{
											"begin": 3858,
											"end": 3937,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "569"
										},
										{
											"begin": 3858,
											"end": 3937,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3858,
											"end": 3937,
											"name": "tag",
											"source": 1,
											"value": "594"
										},
										{
											"begin": 3858,
											"end": 3937,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3820,
											"end": 3939,
											"name": "tag",
											"source": 1,
											"value": "593"
										},
										{
											"begin": 3820,
											"end": 3939,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3978,
											"end": 3979,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4003,
											"end": 4067,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "595"
										},
										{
											"begin": 4059,
											"end": 4066,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 4050,
											"end": 4056,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4039,
											"end": 4048,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4035,
											"end": 4057,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4003,
											"end": 4067,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "563"
										},
										{
											"begin": 4003,
											"end": 4067,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4003,
											"end": 4067,
											"name": "tag",
											"source": 1,
											"value": "595"
										},
										{
											"begin": 4003,
											"end": 4067,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3993,
											"end": 4067,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3993,
											"end": 4067,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3949,
											"end": 4077,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3733,
											"end": 4084,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3733,
											"end": 4084,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3733,
											"end": 4084,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3733,
											"end": 4084,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3733,
											"end": 4084,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 4090,
											"end": 4564,
											"name": "tag",
											"source": 1,
											"value": "136"
										},
										{
											"begin": 4090,
											"end": 4564,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4158,
											"end": 4164,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4166,
											"end": 4172,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4215,
											"end": 4217,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4203,
											"end": 4212,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4194,
											"end": 4201,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4190,
											"end": 4213,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4186,
											"end": 4218,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 4183,
											"end": 4302,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4183,
											"end": 4302,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "597"
										},
										{
											"begin": 4183,
											"end": 4302,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4221,
											"end": 4300,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "598"
										},
										{
											"begin": 4221,
											"end": 4300,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "569"
										},
										{
											"begin": 4221,
											"end": 4300,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4221,
											"end": 4300,
											"name": "tag",
											"source": 1,
											"value": "598"
										},
										{
											"begin": 4221,
											"end": 4300,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4183,
											"end": 4302,
											"name": "tag",
											"source": 1,
											"value": "597"
										},
										{
											"begin": 4183,
											"end": 4302,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4341,
											"end": 4342,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4366,
											"end": 4419,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "599"
										},
										{
											"begin": 4411,
											"end": 4418,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4402,
											"end": 4408,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4391,
											"end": 4400,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 4387,
											"end": 4409,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4366,
											"end": 4419,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "559"
										},
										{
											"begin": 4366,
											"end": 4419,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4366,
											"end": 4419,
											"name": "tag",
											"source": 1,
											"value": "599"
										},
										{
											"begin": 4366,
											"end": 4419,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4356,
											"end": 4419,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4356,
											"end": 4419,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4312,
											"end": 4429,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4468,
											"end": 4470,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4494,
											"end": 4547,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "600"
										},
										{
											"begin": 4539,
											"end": 4546,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4530,
											"end": 4536,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4519,
											"end": 4528,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 4515,
											"end": 4537,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4494,
											"end": 4547,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "533"
										},
										{
											"begin": 4494,
											"end": 4547,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4494,
											"end": 4547,
											"name": "tag",
											"source": 1,
											"value": "600"
										},
										{
											"begin": 4494,
											"end": 4547,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4484,
											"end": 4547,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4484,
											"end": 4547,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4439,
											"end": 4557,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4090,
											"end": 4564,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4090,
											"end": 4564,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4090,
											"end": 4564,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4090,
											"end": 4564,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4090,
											"end": 4564,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4090,
											"end": 4564,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 4570,
											"end": 5211,
											"name": "tag",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 4570,
											"end": 5211,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4658,
											"end": 4664,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4666,
											"end": 4672,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4674,
											"end": 4680,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4723,
											"end": 4725,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 4711,
											"end": 4720,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 4702,
											"end": 4709,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 4698,
											"end": 4721,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4694,
											"end": 4726,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 4691,
											"end": 4810,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4691,
											"end": 4810,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "602"
										},
										{
											"begin": 4691,
											"end": 4810,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4729,
											"end": 4808,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "603"
										},
										{
											"begin": 4729,
											"end": 4808,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "569"
										},
										{
											"begin": 4729,
											"end": 4808,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4729,
											"end": 4808,
											"name": "tag",
											"source": 1,
											"value": "603"
										},
										{
											"begin": 4729,
											"end": 4808,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4691,
											"end": 4810,
											"name": "tag",
											"source": 1,
											"value": "602"
										},
										{
											"begin": 4691,
											"end": 4810,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4849,
											"end": 4850,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4874,
											"end": 4927,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "604"
										},
										{
											"begin": 4919,
											"end": 4926,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 4910,
											"end": 4916,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4899,
											"end": 4908,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 4895,
											"end": 4917,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4874,
											"end": 4927,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "559"
										},
										{
											"begin": 4874,
											"end": 4927,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4874,
											"end": 4927,
											"name": "tag",
											"source": 1,
											"value": "604"
										},
										{
											"begin": 4874,
											"end": 4927,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4864,
											"end": 4927,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 4864,
											"end": 4927,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4820,
											"end": 4937,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4976,
											"end": 4978,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5002,
											"end": 5069,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "605"
										},
										{
											"begin": 5061,
											"end": 5068,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 5052,
											"end": 5058,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5041,
											"end": 5050,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 5037,
											"end": 5059,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5002,
											"end": 5069,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "544"
										},
										{
											"begin": 5002,
											"end": 5069,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5002,
											"end": 5069,
											"name": "tag",
											"source": 1,
											"value": "605"
										},
										{
											"begin": 5002,
											"end": 5069,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4992,
											"end": 5069,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4992,
											"end": 5069,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4947,
											"end": 5079,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5118,
											"end": 5120,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5144,
											"end": 5194,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "606"
										},
										{
											"begin": 5186,
											"end": 5193,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 5177,
											"end": 5183,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5166,
											"end": 5175,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 5162,
											"end": 5184,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5144,
											"end": 5194,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "537"
										},
										{
											"begin": 5144,
											"end": 5194,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5144,
											"end": 5194,
											"name": "tag",
											"source": 1,
											"value": "606"
										},
										{
											"begin": 5144,
											"end": 5194,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5134,
											"end": 5194,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5134,
											"end": 5194,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5089,
											"end": 5204,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4570,
											"end": 5211,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4570,
											"end": 5211,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4570,
											"end": 5211,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4570,
											"end": 5211,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4570,
											"end": 5211,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4570,
											"end": 5211,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 5217,
											"end": 5691,
											"name": "tag",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 5217,
											"end": 5691,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5285,
											"end": 5291,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5293,
											"end": 5299,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5342,
											"end": 5344,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5330,
											"end": 5339,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5321,
											"end": 5328,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5317,
											"end": 5340,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5313,
											"end": 5345,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 5310,
											"end": 5429,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5310,
											"end": 5429,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "608"
										},
										{
											"begin": 5310,
											"end": 5429,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5348,
											"end": 5427,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "609"
										},
										{
											"begin": 5348,
											"end": 5427,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "569"
										},
										{
											"begin": 5348,
											"end": 5427,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5348,
											"end": 5427,
											"name": "tag",
											"source": 1,
											"value": "609"
										},
										{
											"begin": 5348,
											"end": 5427,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5310,
											"end": 5429,
											"name": "tag",
											"source": 1,
											"value": "608"
										},
										{
											"begin": 5310,
											"end": 5429,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5468,
											"end": 5469,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5493,
											"end": 5546,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "610"
										},
										{
											"begin": 5538,
											"end": 5545,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5529,
											"end": 5535,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5518,
											"end": 5527,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 5514,
											"end": 5536,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5493,
											"end": 5546,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "559"
										},
										{
											"begin": 5493,
											"end": 5546,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5493,
											"end": 5546,
											"name": "tag",
											"source": 1,
											"value": "610"
										},
										{
											"begin": 5493,
											"end": 5546,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5483,
											"end": 5546,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 5483,
											"end": 5546,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5439,
											"end": 5556,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5595,
											"end": 5597,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5621,
											"end": 5674,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "611"
										},
										{
											"begin": 5666,
											"end": 5673,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5657,
											"end": 5663,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5646,
											"end": 5655,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 5642,
											"end": 5664,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5621,
											"end": 5674,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "559"
										},
										{
											"begin": 5621,
											"end": 5674,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5621,
											"end": 5674,
											"name": "tag",
											"source": 1,
											"value": "611"
										},
										{
											"begin": 5621,
											"end": 5674,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5611,
											"end": 5674,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5611,
											"end": 5674,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5566,
											"end": 5684,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5217,
											"end": 5691,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 5217,
											"end": 5691,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5217,
											"end": 5691,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 5217,
											"end": 5691,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5217,
											"end": 5691,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5217,
											"end": 5691,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 5697,
											"end": 6310,
											"name": "tag",
											"source": 1,
											"value": "110"
										},
										{
											"begin": 5697,
											"end": 6310,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5771,
											"end": 5777,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5779,
											"end": 5785,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5787,
											"end": 5793,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5836,
											"end": 5838,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 5824,
											"end": 5833,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5815,
											"end": 5822,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 5811,
											"end": 5834,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5807,
											"end": 5839,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 5804,
											"end": 5923,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5804,
											"end": 5923,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "613"
										},
										{
											"begin": 5804,
											"end": 5923,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5842,
											"end": 5921,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "614"
										},
										{
											"begin": 5842,
											"end": 5921,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "569"
										},
										{
											"begin": 5842,
											"end": 5921,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5842,
											"end": 5921,
											"name": "tag",
											"source": 1,
											"value": "614"
										},
										{
											"begin": 5842,
											"end": 5921,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5804,
											"end": 5923,
											"name": "tag",
											"source": 1,
											"value": "613"
										},
										{
											"begin": 5804,
											"end": 5923,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5962,
											"end": 5963,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5987,
											"end": 6040,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "615"
										},
										{
											"begin": 6032,
											"end": 6039,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 6023,
											"end": 6029,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6012,
											"end": 6021,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 6008,
											"end": 6030,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5987,
											"end": 6040,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "559"
										},
										{
											"begin": 5987,
											"end": 6040,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5987,
											"end": 6040,
											"name": "tag",
											"source": 1,
											"value": "615"
										},
										{
											"begin": 5987,
											"end": 6040,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5977,
											"end": 6040,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 5977,
											"end": 6040,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5933,
											"end": 6050,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6089,
											"end": 6091,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6115,
											"end": 6168,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "616"
										},
										{
											"begin": 6160,
											"end": 6167,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 6151,
											"end": 6157,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6140,
											"end": 6149,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 6136,
											"end": 6158,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6115,
											"end": 6168,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "559"
										},
										{
											"begin": 6115,
											"end": 6168,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 6115,
											"end": 6168,
											"name": "tag",
											"source": 1,
											"value": "616"
										},
										{
											"begin": 6115,
											"end": 6168,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6105,
											"end": 6168,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 6105,
											"end": 6168,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6060,
											"end": 6178,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6217,
											"end": 6219,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6243,
											"end": 6293,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "617"
										},
										{
											"begin": 6285,
											"end": 6292,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 6276,
											"end": 6282,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6265,
											"end": 6274,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 6261,
											"end": 6283,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6243,
											"end": 6293,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "537"
										},
										{
											"begin": 6243,
											"end": 6293,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 6243,
											"end": 6293,
											"name": "tag",
											"source": 1,
											"value": "617"
										},
										{
											"begin": 6243,
											"end": 6293,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6233,
											"end": 6293,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6233,
											"end": 6293,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6188,
											"end": 6303,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5697,
											"end": 6310,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 5697,
											"end": 6310,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5697,
											"end": 6310,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 5697,
											"end": 6310,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5697,
											"end": 6310,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 5697,
											"end": 6310,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 6316,
											"end": 6434,
											"name": "tag",
											"source": 1,
											"value": "618"
										},
										{
											"begin": 6316,
											"end": 6434,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6403,
											"end": 6427,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "620"
										},
										{
											"begin": 6421,
											"end": 6426,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6403,
											"end": 6427,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "621"
										},
										{
											"begin": 6403,
											"end": 6427,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 6403,
											"end": 6427,
											"name": "tag",
											"source": 1,
											"value": "620"
										},
										{
											"begin": 6403,
											"end": 6427,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6398,
											"end": 6401,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6391,
											"end": 6428,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6316,
											"end": 6434,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6316,
											"end": 6434,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6316,
											"end": 6434,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 6440,
											"end": 6813,
											"name": "tag",
											"source": 1,
											"value": "622"
										},
										{
											"begin": 6440,
											"end": 6813,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6544,
											"end": 6547,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6572,
											"end": 6610,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "624"
										},
										{
											"begin": 6604,
											"end": 6609,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6572,
											"end": 6610,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "625"
										},
										{
											"begin": 6572,
											"end": 6610,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 6572,
											"end": 6610,
											"name": "tag",
											"source": 1,
											"value": "624"
										},
										{
											"begin": 6572,
											"end": 6610,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6626,
											"end": 6714,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "626"
										},
										{
											"begin": 6707,
											"end": 6713,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6702,
											"end": 6705,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 6626,
											"end": 6714,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "627"
										},
										{
											"begin": 6626,
											"end": 6714,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 6626,
											"end": 6714,
											"name": "tag",
											"source": 1,
											"value": "626"
										},
										{
											"begin": 6626,
											"end": 6714,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6619,
											"end": 6714,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 6619,
											"end": 6714,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6723,
											"end": 6775,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "628"
										},
										{
											"begin": 6768,
											"end": 6774,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6763,
											"end": 6766,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 6756,
											"end": 6760,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6749,
											"end": 6754,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 6745,
											"end": 6761,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6723,
											"end": 6775,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "629"
										},
										{
											"begin": 6723,
											"end": 6775,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 6723,
											"end": 6775,
											"name": "tag",
											"source": 1,
											"value": "628"
										},
										{
											"begin": 6723,
											"end": 6775,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6800,
											"end": 6806,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6795,
											"end": 6798,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 6791,
											"end": 6807,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6784,
											"end": 6807,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6784,
											"end": 6807,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6548,
											"end": 6813,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6440,
											"end": 6813,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 6440,
											"end": 6813,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6440,
											"end": 6813,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6440,
											"end": 6813,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6440,
											"end": 6813,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 6819,
											"end": 6978,
											"name": "tag",
											"source": 1,
											"value": "630"
										},
										{
											"begin": 6819,
											"end": 6978,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6920,
											"end": 6971,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "632"
										},
										{
											"begin": 6965,
											"end": 6970,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6920,
											"end": 6971,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "633"
										},
										{
											"begin": 6920,
											"end": 6971,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 6920,
											"end": 6971,
											"name": "tag",
											"source": 1,
											"value": "632"
										},
										{
											"begin": 6920,
											"end": 6971,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6915,
											"end": 6918,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6908,
											"end": 6972,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6819,
											"end": 6978,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6819,
											"end": 6978,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6819,
											"end": 6978,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 6984,
											"end": 7145,
											"name": "tag",
											"source": 1,
											"value": "634"
										},
										{
											"begin": 6984,
											"end": 7145,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7086,
											"end": 7138,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "636"
										},
										{
											"begin": 7132,
											"end": 7137,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7086,
											"end": 7138,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "637"
										},
										{
											"begin": 7086,
											"end": 7138,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 7086,
											"end": 7138,
											"name": "tag",
											"source": 1,
											"value": "636"
										},
										{
											"begin": 7086,
											"end": 7138,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7081,
											"end": 7084,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7074,
											"end": 7139,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6984,
											"end": 7145,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6984,
											"end": 7145,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6984,
											"end": 7145,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 7151,
											"end": 7324,
											"name": "tag",
											"source": 1,
											"value": "638"
										},
										{
											"begin": 7151,
											"end": 7324,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7259,
											"end": 7317,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "640"
										},
										{
											"begin": 7311,
											"end": 7316,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7259,
											"end": 7317,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "641"
										},
										{
											"begin": 7259,
											"end": 7317,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 7259,
											"end": 7317,
											"name": "tag",
											"source": 1,
											"value": "640"
										},
										{
											"begin": 7259,
											"end": 7317,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7254,
											"end": 7257,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7247,
											"end": 7318,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7151,
											"end": 7324,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7151,
											"end": 7324,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7151,
											"end": 7324,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 7330,
											"end": 7694,
											"name": "tag",
											"source": 1,
											"value": "642"
										},
										{
											"begin": 7330,
											"end": 7694,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7418,
											"end": 7421,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7446,
											"end": 7485,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "644"
										},
										{
											"begin": 7479,
											"end": 7484,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7446,
											"end": 7485,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "645"
										},
										{
											"begin": 7446,
											"end": 7485,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 7446,
											"end": 7485,
											"name": "tag",
											"source": 1,
											"value": "644"
										},
										{
											"begin": 7446,
											"end": 7485,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7501,
											"end": 7572,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "646"
										},
										{
											"begin": 7565,
											"end": 7571,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7560,
											"end": 7563,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 7501,
											"end": 7572,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "647"
										},
										{
											"begin": 7501,
											"end": 7572,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 7501,
											"end": 7572,
											"name": "tag",
											"source": 1,
											"value": "646"
										},
										{
											"begin": 7501,
											"end": 7572,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7494,
											"end": 7572,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 7494,
											"end": 7572,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7581,
											"end": 7633,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "648"
										},
										{
											"begin": 7626,
											"end": 7632,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7621,
											"end": 7624,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 7614,
											"end": 7618,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7607,
											"end": 7612,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 7603,
											"end": 7619,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7581,
											"end": 7633,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "629"
										},
										{
											"begin": 7581,
											"end": 7633,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 7581,
											"end": 7633,
											"name": "tag",
											"source": 1,
											"value": "648"
										},
										{
											"begin": 7581,
											"end": 7633,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7658,
											"end": 7687,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "649"
										},
										{
											"begin": 7680,
											"end": 7686,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7658,
											"end": 7687,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "650"
										},
										{
											"begin": 7658,
											"end": 7687,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 7658,
											"end": 7687,
											"name": "tag",
											"source": 1,
											"value": "649"
										},
										{
											"begin": 7658,
											"end": 7687,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7653,
											"end": 7656,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 7649,
											"end": 7688,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7642,
											"end": 7688,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7642,
											"end": 7688,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7422,
											"end": 7694,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7330,
											"end": 7694,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 7330,
											"end": 7694,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7330,
											"end": 7694,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7330,
											"end": 7694,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7330,
											"end": 7694,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 7700,
											"end": 8066,
											"name": "tag",
											"source": 1,
											"value": "651"
										},
										{
											"begin": 7700,
											"end": 8066,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7842,
											"end": 7845,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7863,
											"end": 7930,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "653"
										},
										{
											"begin": 7927,
											"end": 7929,
											"name": "PUSH",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 7922,
											"end": 7925,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7863,
											"end": 7930,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "647"
										},
										{
											"begin": 7863,
											"end": 7930,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 7863,
											"end": 7930,
											"name": "tag",
											"source": 1,
											"value": "653"
										},
										{
											"begin": 7863,
											"end": 7930,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7856,
											"end": 7930,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7856,
											"end": 7930,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7939,
											"end": 8032,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "654"
										},
										{
											"begin": 8028,
											"end": 8031,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7939,
											"end": 8032,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "655"
										},
										{
											"begin": 7939,
											"end": 8032,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 7939,
											"end": 8032,
											"name": "tag",
											"source": 1,
											"value": "654"
										},
										{
											"begin": 7939,
											"end": 8032,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8057,
											"end": 8059,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 8052,
											"end": 8055,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8048,
											"end": 8060,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8041,
											"end": 8060,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8041,
											"end": 8060,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7700,
											"end": 8066,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7700,
											"end": 8066,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7700,
											"end": 8066,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7700,
											"end": 8066,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 8072,
											"end": 8438,
											"name": "tag",
											"source": 1,
											"value": "656"
										},
										{
											"begin": 8072,
											"end": 8438,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8214,
											"end": 8217,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8235,
											"end": 8302,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "658"
										},
										{
											"begin": 8299,
											"end": 8301,
											"name": "PUSH",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 8294,
											"end": 8297,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 8235,
											"end": 8302,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "647"
										},
										{
											"begin": 8235,
											"end": 8302,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 8235,
											"end": 8302,
											"name": "tag",
											"source": 1,
											"value": "658"
										},
										{
											"begin": 8235,
											"end": 8302,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8228,
											"end": 8302,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8228,
											"end": 8302,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8311,
											"end": 8404,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "659"
										},
										{
											"begin": 8400,
											"end": 8403,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8311,
											"end": 8404,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "660"
										},
										{
											"begin": 8311,
											"end": 8404,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 8311,
											"end": 8404,
											"name": "tag",
											"source": 1,
											"value": "659"
										},
										{
											"begin": 8311,
											"end": 8404,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8429,
											"end": 8431,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 8424,
											"end": 8427,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8420,
											"end": 8432,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8413,
											"end": 8432,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8413,
											"end": 8432,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8072,
											"end": 8438,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8072,
											"end": 8438,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8072,
											"end": 8438,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8072,
											"end": 8438,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 8444,
											"end": 8810,
											"name": "tag",
											"source": 1,
											"value": "661"
										},
										{
											"begin": 8444,
											"end": 8810,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8586,
											"end": 8589,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8607,
											"end": 8674,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "663"
										},
										{
											"begin": 8671,
											"end": 8673,
											"name": "PUSH",
											"source": 1,
											"value": "1B"
										},
										{
											"begin": 8666,
											"end": 8669,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 8607,
											"end": 8674,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "647"
										},
										{
											"begin": 8607,
											"end": 8674,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 8607,
											"end": 8674,
											"name": "tag",
											"source": 1,
											"value": "663"
										},
										{
											"begin": 8607,
											"end": 8674,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8600,
											"end": 8674,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8600,
											"end": 8674,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8683,
											"end": 8776,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "664"
										},
										{
											"begin": 8772,
											"end": 8775,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8683,
											"end": 8776,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "665"
										},
										{
											"begin": 8683,
											"end": 8776,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 8683,
											"end": 8776,
											"name": "tag",
											"source": 1,
											"value": "664"
										},
										{
											"begin": 8683,
											"end": 8776,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8801,
											"end": 8803,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 8796,
											"end": 8799,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8792,
											"end": 8804,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8785,
											"end": 8804,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8785,
											"end": 8804,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8444,
											"end": 8810,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8444,
											"end": 8810,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8444,
											"end": 8810,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8444,
											"end": 8810,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 8816,
											"end": 9182,
											"name": "tag",
											"source": 1,
											"value": "666"
										},
										{
											"begin": 8816,
											"end": 9182,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8958,
											"end": 8961,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8979,
											"end": 9046,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "668"
										},
										{
											"begin": 9043,
											"end": 9045,
											"name": "PUSH",
											"source": 1,
											"value": "1B"
										},
										{
											"begin": 9038,
											"end": 9041,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 8979,
											"end": 9046,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "647"
										},
										{
											"begin": 8979,
											"end": 9046,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 8979,
											"end": 9046,
											"name": "tag",
											"source": 1,
											"value": "668"
										},
										{
											"begin": 8979,
											"end": 9046,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8972,
											"end": 9046,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8972,
											"end": 9046,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9055,
											"end": 9148,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "669"
										},
										{
											"begin": 9144,
											"end": 9147,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9055,
											"end": 9148,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "670"
										},
										{
											"begin": 9055,
											"end": 9148,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 9055,
											"end": 9148,
											"name": "tag",
											"source": 1,
											"value": "669"
										},
										{
											"begin": 9055,
											"end": 9148,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9173,
											"end": 9175,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 9168,
											"end": 9171,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9164,
											"end": 9176,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9157,
											"end": 9176,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9157,
											"end": 9176,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8816,
											"end": 9182,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8816,
											"end": 9182,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8816,
											"end": 9182,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8816,
											"end": 9182,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 9188,
											"end": 9554,
											"name": "tag",
											"source": 1,
											"value": "671"
										},
										{
											"begin": 9188,
											"end": 9554,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9330,
											"end": 9333,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9351,
											"end": 9418,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "673"
										},
										{
											"begin": 9415,
											"end": 9417,
											"name": "PUSH",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 9410,
											"end": 9413,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 9351,
											"end": 9418,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "647"
										},
										{
											"begin": 9351,
											"end": 9418,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 9351,
											"end": 9418,
											"name": "tag",
											"source": 1,
											"value": "673"
										},
										{
											"begin": 9351,
											"end": 9418,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9344,
											"end": 9418,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9344,
											"end": 9418,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9427,
											"end": 9520,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "674"
										},
										{
											"begin": 9516,
											"end": 9519,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9427,
											"end": 9520,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "675"
										},
										{
											"begin": 9427,
											"end": 9520,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 9427,
											"end": 9520,
											"name": "tag",
											"source": 1,
											"value": "674"
										},
										{
											"begin": 9427,
											"end": 9520,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9545,
											"end": 9547,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 9540,
											"end": 9543,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9536,
											"end": 9548,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9529,
											"end": 9548,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9529,
											"end": 9548,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9188,
											"end": 9554,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9188,
											"end": 9554,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9188,
											"end": 9554,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9188,
											"end": 9554,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 9560,
											"end": 9926,
											"name": "tag",
											"source": 1,
											"value": "676"
										},
										{
											"begin": 9560,
											"end": 9926,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9702,
											"end": 9705,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9723,
											"end": 9790,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "678"
										},
										{
											"begin": 9787,
											"end": 9789,
											"name": "PUSH",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 9782,
											"end": 9785,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 9723,
											"end": 9790,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "647"
										},
										{
											"begin": 9723,
											"end": 9790,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 9723,
											"end": 9790,
											"name": "tag",
											"source": 1,
											"value": "678"
										},
										{
											"begin": 9723,
											"end": 9790,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9716,
											"end": 9790,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9716,
											"end": 9790,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9799,
											"end": 9892,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "679"
										},
										{
											"begin": 9888,
											"end": 9891,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9799,
											"end": 9892,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "680"
										},
										{
											"begin": 9799,
											"end": 9892,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 9799,
											"end": 9892,
											"name": "tag",
											"source": 1,
											"value": "679"
										},
										{
											"begin": 9799,
											"end": 9892,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9917,
											"end": 9919,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 9912,
											"end": 9915,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9908,
											"end": 9920,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9901,
											"end": 9920,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9901,
											"end": 9920,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9560,
											"end": 9926,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9560,
											"end": 9926,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9560,
											"end": 9926,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9560,
											"end": 9926,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 9932,
											"end": 10298,
											"name": "tag",
											"source": 1,
											"value": "681"
										},
										{
											"begin": 9932,
											"end": 10298,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10074,
											"end": 10077,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10095,
											"end": 10162,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "683"
										},
										{
											"begin": 10159,
											"end": 10161,
											"name": "PUSH",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 10154,
											"end": 10157,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 10095,
											"end": 10162,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "647"
										},
										{
											"begin": 10095,
											"end": 10162,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 10095,
											"end": 10162,
											"name": "tag",
											"source": 1,
											"value": "683"
										},
										{
											"begin": 10095,
											"end": 10162,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10088,
											"end": 10162,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10088,
											"end": 10162,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10171,
											"end": 10264,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "684"
										},
										{
											"begin": 10260,
											"end": 10263,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10171,
											"end": 10264,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "685"
										},
										{
											"begin": 10171,
											"end": 10264,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 10171,
											"end": 10264,
											"name": "tag",
											"source": 1,
											"value": "684"
										},
										{
											"begin": 10171,
											"end": 10264,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10289,
											"end": 10291,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10284,
											"end": 10287,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10280,
											"end": 10292,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10273,
											"end": 10292,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10273,
											"end": 10292,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9932,
											"end": 10298,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9932,
											"end": 10298,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9932,
											"end": 10298,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9932,
											"end": 10298,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 10304,
											"end": 10670,
											"name": "tag",
											"source": 1,
											"value": "686"
										},
										{
											"begin": 10304,
											"end": 10670,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10446,
											"end": 10449,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10467,
											"end": 10534,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "688"
										},
										{
											"begin": 10531,
											"end": 10533,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 10526,
											"end": 10529,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 10467,
											"end": 10534,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "647"
										},
										{
											"begin": 10467,
											"end": 10534,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 10467,
											"end": 10534,
											"name": "tag",
											"source": 1,
											"value": "688"
										},
										{
											"begin": 10467,
											"end": 10534,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10460,
											"end": 10534,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10460,
											"end": 10534,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10543,
											"end": 10636,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "689"
										},
										{
											"begin": 10632,
											"end": 10635,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10543,
											"end": 10636,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "690"
										},
										{
											"begin": 10543,
											"end": 10636,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 10543,
											"end": 10636,
											"name": "tag",
											"source": 1,
											"value": "689"
										},
										{
											"begin": 10543,
											"end": 10636,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10661,
											"end": 10663,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 10656,
											"end": 10659,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10652,
											"end": 10664,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10645,
											"end": 10664,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10645,
											"end": 10664,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10304,
											"end": 10670,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10304,
											"end": 10670,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10304,
											"end": 10670,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10304,
											"end": 10670,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 10676,
											"end": 11042,
											"name": "tag",
											"source": 1,
											"value": "691"
										},
										{
											"begin": 10676,
											"end": 11042,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10818,
											"end": 10821,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10839,
											"end": 10906,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "693"
										},
										{
											"begin": 10903,
											"end": 10905,
											"name": "PUSH",
											"source": 1,
											"value": "1D"
										},
										{
											"begin": 10898,
											"end": 10901,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 10839,
											"end": 10906,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "647"
										},
										{
											"begin": 10839,
											"end": 10906,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 10839,
											"end": 10906,
											"name": "tag",
											"source": 1,
											"value": "693"
										},
										{
											"begin": 10839,
											"end": 10906,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10832,
											"end": 10906,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10832,
											"end": 10906,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10915,
											"end": 11008,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "694"
										},
										{
											"begin": 11004,
											"end": 11007,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10915,
											"end": 11008,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "695"
										},
										{
											"begin": 10915,
											"end": 11008,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 10915,
											"end": 11008,
											"name": "tag",
											"source": 1,
											"value": "694"
										},
										{
											"begin": 10915,
											"end": 11008,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11033,
											"end": 11035,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 11028,
											"end": 11031,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11024,
											"end": 11036,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11017,
											"end": 11036,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11017,
											"end": 11036,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10676,
											"end": 11042,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10676,
											"end": 11042,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10676,
											"end": 11042,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10676,
											"end": 11042,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 11048,
											"end": 11414,
											"name": "tag",
											"source": 1,
											"value": "696"
										},
										{
											"begin": 11048,
											"end": 11414,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11190,
											"end": 11193,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11211,
											"end": 11278,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "698"
										},
										{
											"begin": 11275,
											"end": 11277,
											"name": "PUSH",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 11270,
											"end": 11273,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 11211,
											"end": 11278,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "647"
										},
										{
											"begin": 11211,
											"end": 11278,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 11211,
											"end": 11278,
											"name": "tag",
											"source": 1,
											"value": "698"
										},
										{
											"begin": 11211,
											"end": 11278,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11204,
											"end": 11278,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 11204,
											"end": 11278,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11287,
											"end": 11380,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "699"
										},
										{
											"begin": 11376,
											"end": 11379,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11287,
											"end": 11380,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "700"
										},
										{
											"begin": 11287,
											"end": 11380,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 11287,
											"end": 11380,
											"name": "tag",
											"source": 1,
											"value": "699"
										},
										{
											"begin": 11287,
											"end": 11380,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11405,
											"end": 11407,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 11400,
											"end": 11403,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11396,
											"end": 11408,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11389,
											"end": 11408,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11389,
											"end": 11408,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11048,
											"end": 11414,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 11048,
											"end": 11414,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11048,
											"end": 11414,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11048,
											"end": 11414,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 11420,
											"end": 11786,
											"name": "tag",
											"source": 1,
											"value": "701"
										},
										{
											"begin": 11420,
											"end": 11786,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11562,
											"end": 11565,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11583,
											"end": 11650,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "703"
										},
										{
											"begin": 11647,
											"end": 11649,
											"name": "PUSH",
											"source": 1,
											"value": "2A"
										},
										{
											"begin": 11642,
											"end": 11645,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 11583,
											"end": 11650,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "647"
										},
										{
											"begin": 11583,
											"end": 11650,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 11583,
											"end": 11650,
											"name": "tag",
											"source": 1,
											"value": "703"
										},
										{
											"begin": 11583,
											"end": 11650,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11576,
											"end": 11650,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 11576,
											"end": 11650,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11659,
											"end": 11752,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "704"
										},
										{
											"begin": 11748,
											"end": 11751,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11659,
											"end": 11752,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "705"
										},
										{
											"begin": 11659,
											"end": 11752,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 11659,
											"end": 11752,
											"name": "tag",
											"source": 1,
											"value": "704"
										},
										{
											"begin": 11659,
											"end": 11752,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11777,
											"end": 11779,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 11772,
											"end": 11775,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11768,
											"end": 11780,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11761,
											"end": 11780,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11761,
											"end": 11780,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11420,
											"end": 11786,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 11420,
											"end": 11786,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11420,
											"end": 11786,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11420,
											"end": 11786,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 11792,
											"end": 12158,
											"name": "tag",
											"source": 1,
											"value": "706"
										},
										{
											"begin": 11792,
											"end": 12158,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11934,
											"end": 11937,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11955,
											"end": 12022,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "708"
										},
										{
											"begin": 12019,
											"end": 12021,
											"name": "PUSH",
											"source": 1,
											"value": "C"
										},
										{
											"begin": 12014,
											"end": 12017,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 11955,
											"end": 12022,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "647"
										},
										{
											"begin": 11955,
											"end": 12022,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 11955,
											"end": 12022,
											"name": "tag",
											"source": 1,
											"value": "708"
										},
										{
											"begin": 11955,
											"end": 12022,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11948,
											"end": 12022,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 11948,
											"end": 12022,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12031,
											"end": 12124,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "709"
										},
										{
											"begin": 12120,
											"end": 12123,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12031,
											"end": 12124,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "710"
										},
										{
											"begin": 12031,
											"end": 12124,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 12031,
											"end": 12124,
											"name": "tag",
											"source": 1,
											"value": "709"
										},
										{
											"begin": 12031,
											"end": 12124,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12149,
											"end": 12151,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 12144,
											"end": 12147,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12140,
											"end": 12152,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12133,
											"end": 12152,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12133,
											"end": 12152,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11792,
											"end": 12158,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 11792,
											"end": 12158,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11792,
											"end": 12158,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11792,
											"end": 12158,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 12164,
											"end": 12530,
											"name": "tag",
											"source": 1,
											"value": "711"
										},
										{
											"begin": 12164,
											"end": 12530,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12306,
											"end": 12309,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 12327,
											"end": 12394,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "713"
										},
										{
											"begin": 12391,
											"end": 12393,
											"name": "PUSH",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 12386,
											"end": 12389,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 12327,
											"end": 12394,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "647"
										},
										{
											"begin": 12327,
											"end": 12394,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 12327,
											"end": 12394,
											"name": "tag",
											"source": 1,
											"value": "713"
										},
										{
											"begin": 12327,
											"end": 12394,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12320,
											"end": 12394,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 12320,
											"end": 12394,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12403,
											"end": 12496,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "714"
										},
										{
											"begin": 12492,
											"end": 12495,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12403,
											"end": 12496,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "715"
										},
										{
											"begin": 12403,
											"end": 12496,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 12403,
											"end": 12496,
											"name": "tag",
											"source": 1,
											"value": "714"
										},
										{
											"begin": 12403,
											"end": 12496,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12521,
											"end": 12523,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 12516,
											"end": 12519,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12512,
											"end": 12524,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12505,
											"end": 12524,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12505,
											"end": 12524,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12164,
											"end": 12530,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 12164,
											"end": 12530,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12164,
											"end": 12530,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12164,
											"end": 12530,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 12536,
											"end": 12902,
											"name": "tag",
											"source": 1,
											"value": "716"
										},
										{
											"begin": 12536,
											"end": 12902,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12678,
											"end": 12681,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 12699,
											"end": 12766,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "718"
										},
										{
											"begin": 12763,
											"end": 12765,
											"name": "PUSH",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 12758,
											"end": 12761,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 12699,
											"end": 12766,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "647"
										},
										{
											"begin": 12699,
											"end": 12766,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 12699,
											"end": 12766,
											"name": "tag",
											"source": 1,
											"value": "718"
										},
										{
											"begin": 12699,
											"end": 12766,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12692,
											"end": 12766,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 12692,
											"end": 12766,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12775,
											"end": 12868,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "719"
										},
										{
											"begin": 12864,
											"end": 12867,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12775,
											"end": 12868,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "720"
										},
										{
											"begin": 12775,
											"end": 12868,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 12775,
											"end": 12868,
											"name": "tag",
											"source": 1,
											"value": "719"
										},
										{
											"begin": 12775,
											"end": 12868,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12893,
											"end": 12895,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 12888,
											"end": 12891,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12884,
											"end": 12896,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12877,
											"end": 12896,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12877,
											"end": 12896,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12536,
											"end": 12902,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 12536,
											"end": 12902,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12536,
											"end": 12902,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12536,
											"end": 12902,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 12908,
											"end": 13026,
											"name": "tag",
											"source": 1,
											"value": "721"
										},
										{
											"begin": 12908,
											"end": 13026,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12995,
											"end": 13019,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "723"
										},
										{
											"begin": 13013,
											"end": 13018,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 12995,
											"end": 13019,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "724"
										},
										{
											"begin": 12995,
											"end": 13019,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 12995,
											"end": 13019,
											"name": "tag",
											"source": 1,
											"value": "723"
										},
										{
											"begin": 12995,
											"end": 13019,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12990,
											"end": 12993,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12983,
											"end": 13020,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12908,
											"end": 13026,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12908,
											"end": 13026,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12908,
											"end": 13026,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 13032,
											"end": 13303,
											"name": "tag",
											"source": 1,
											"value": "519"
										},
										{
											"begin": 13032,
											"end": 13303,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13162,
											"end": 13165,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 13184,
											"end": 13277,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "726"
										},
										{
											"begin": 13273,
											"end": 13276,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 13264,
											"end": 13270,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 13184,
											"end": 13277,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "622"
										},
										{
											"begin": 13184,
											"end": 13277,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 13184,
											"end": 13277,
											"name": "tag",
											"source": 1,
											"value": "726"
										},
										{
											"begin": 13184,
											"end": 13277,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13177,
											"end": 13277,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 13177,
											"end": 13277,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13294,
											"end": 13297,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13287,
											"end": 13297,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13287,
											"end": 13297,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13032,
											"end": 13303,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 13032,
											"end": 13303,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 13032,
											"end": 13303,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13032,
											"end": 13303,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13032,
											"end": 13303,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 13309,
											"end": 13531,
											"name": "tag",
											"source": 1,
											"value": "129"
										},
										{
											"begin": 13309,
											"end": 13531,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13402,
											"end": 13406,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 13440,
											"end": 13442,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 13429,
											"end": 13438,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 13425,
											"end": 13443,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13417,
											"end": 13443,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13417,
											"end": 13443,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13453,
											"end": 13524,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "728"
										},
										{
											"begin": 13521,
											"end": 13522,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 13510,
											"end": 13519,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 13506,
											"end": 13523,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13497,
											"end": 13503,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 13453,
											"end": 13524,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "618"
										},
										{
											"begin": 13453,
											"end": 13524,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 13453,
											"end": 13524,
											"name": "tag",
											"source": 1,
											"value": "728"
										},
										{
											"begin": 13453,
											"end": 13524,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13309,
											"end": 13531,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 13309,
											"end": 13531,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 13309,
											"end": 13531,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13309,
											"end": 13531,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13309,
											"end": 13531,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 13537,
											"end": 13869,
											"name": "tag",
											"source": 1,
											"value": "476"
										},
										{
											"begin": 13537,
											"end": 13869,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13658,
											"end": 13662,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 13696,
											"end": 13698,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 13685,
											"end": 13694,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 13681,
											"end": 13699,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13673,
											"end": 13699,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13673,
											"end": 13699,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13709,
											"end": 13780,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "730"
										},
										{
											"begin": 13777,
											"end": 13778,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 13766,
											"end": 13775,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 13762,
											"end": 13779,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13753,
											"end": 13759,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 13709,
											"end": 13780,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "618"
										},
										{
											"begin": 13709,
											"end": 13780,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 13709,
											"end": 13780,
											"name": "tag",
											"source": 1,
											"value": "730"
										},
										{
											"begin": 13709,
											"end": 13780,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13790,
											"end": 13862,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "731"
										},
										{
											"begin": 13858,
											"end": 13860,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 13847,
											"end": 13856,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 13843,
											"end": 13861,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13834,
											"end": 13840,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 13790,
											"end": 13862,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "618"
										},
										{
											"begin": 13790,
											"end": 13862,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 13790,
											"end": 13862,
											"name": "tag",
											"source": 1,
											"value": "731"
										},
										{
											"begin": 13790,
											"end": 13862,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13537,
											"end": 13869,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 13537,
											"end": 13869,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 13537,
											"end": 13869,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13537,
											"end": 13869,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13537,
											"end": 13869,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13537,
											"end": 13869,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 13875,
											"end": 14317,
											"name": "tag",
											"source": 1,
											"value": "472"
										},
										{
											"begin": 13875,
											"end": 14317,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14024,
											"end": 14028,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 14062,
											"end": 14064,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 14051,
											"end": 14060,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 14047,
											"end": 14065,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14039,
											"end": 14065,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14039,
											"end": 14065,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14075,
											"end": 14146,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "733"
										},
										{
											"begin": 14143,
											"end": 14144,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 14132,
											"end": 14141,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 14128,
											"end": 14145,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14119,
											"end": 14125,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 14075,
											"end": 14146,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "618"
										},
										{
											"begin": 14075,
											"end": 14146,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 14075,
											"end": 14146,
											"name": "tag",
											"source": 1,
											"value": "733"
										},
										{
											"begin": 14075,
											"end": 14146,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14156,
											"end": 14228,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "734"
										},
										{
											"begin": 14224,
											"end": 14226,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 14213,
											"end": 14222,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 14209,
											"end": 14227,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14200,
											"end": 14206,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 14156,
											"end": 14228,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "618"
										},
										{
											"begin": 14156,
											"end": 14228,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 14156,
											"end": 14228,
											"name": "tag",
											"source": 1,
											"value": "734"
										},
										{
											"begin": 14156,
											"end": 14228,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14238,
											"end": 14310,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "735"
										},
										{
											"begin": 14306,
											"end": 14308,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 14295,
											"end": 14304,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 14291,
											"end": 14309,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14282,
											"end": 14288,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 14238,
											"end": 14310,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "721"
										},
										{
											"begin": 14238,
											"end": 14310,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 14238,
											"end": 14310,
											"name": "tag",
											"source": 1,
											"value": "735"
										},
										{
											"begin": 14238,
											"end": 14310,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13875,
											"end": 14317,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 13875,
											"end": 14317,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 13875,
											"end": 14317,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13875,
											"end": 14317,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13875,
											"end": 14317,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13875,
											"end": 14317,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13875,
											"end": 14317,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 14323,
											"end": 14655,
											"name": "tag",
											"source": 1,
											"value": "466"
										},
										{
											"begin": 14323,
											"end": 14655,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14444,
											"end": 14448,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 14482,
											"end": 14484,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 14471,
											"end": 14480,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 14467,
											"end": 14485,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14459,
											"end": 14485,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14459,
											"end": 14485,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14495,
											"end": 14566,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "737"
										},
										{
											"begin": 14563,
											"end": 14564,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 14552,
											"end": 14561,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 14548,
											"end": 14565,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14539,
											"end": 14545,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 14495,
											"end": 14566,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "618"
										},
										{
											"begin": 14495,
											"end": 14566,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 14495,
											"end": 14566,
											"name": "tag",
											"source": 1,
											"value": "737"
										},
										{
											"begin": 14495,
											"end": 14566,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14576,
											"end": 14648,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "738"
										},
										{
											"begin": 14644,
											"end": 14646,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 14633,
											"end": 14642,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 14629,
											"end": 14647,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14620,
											"end": 14626,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 14576,
											"end": 14648,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "721"
										},
										{
											"begin": 14576,
											"end": 14648,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 14576,
											"end": 14648,
											"name": "tag",
											"source": 1,
											"value": "738"
										},
										{
											"begin": 14576,
											"end": 14648,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14323,
											"end": 14655,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 14323,
											"end": 14655,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 14323,
											"end": 14655,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14323,
											"end": 14655,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14323,
											"end": 14655,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14323,
											"end": 14655,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 14661,
											"end": 14911,
											"name": "tag",
											"source": 1,
											"value": "143"
										},
										{
											"begin": 14661,
											"end": 14911,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14768,
											"end": 14772,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 14806,
											"end": 14808,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 14795,
											"end": 14804,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 14791,
											"end": 14809,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14783,
											"end": 14809,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14783,
											"end": 14809,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14819,
											"end": 14904,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "740"
										},
										{
											"begin": 14901,
											"end": 14902,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 14890,
											"end": 14899,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 14886,
											"end": 14903,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14877,
											"end": 14883,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 14819,
											"end": 14904,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "630"
										},
										{
											"begin": 14819,
											"end": 14904,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 14819,
											"end": 14904,
											"name": "tag",
											"source": 1,
											"value": "740"
										},
										{
											"begin": 14819,
											"end": 14904,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14661,
											"end": 14911,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 14661,
											"end": 14911,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 14661,
											"end": 14911,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14661,
											"end": 14911,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14661,
											"end": 14911,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 14917,
											"end": 15498,
											"name": "tag",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 14917,
											"end": 15498,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15108,
											"end": 15112,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 15146,
											"end": 15149,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 15135,
											"end": 15144,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 15131,
											"end": 15150,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15123,
											"end": 15150,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 15123,
											"end": 15150,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15160,
											"end": 15245,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "742"
										},
										{
											"begin": 15242,
											"end": 15243,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 15231,
											"end": 15240,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 15227,
											"end": 15244,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15218,
											"end": 15224,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 15160,
											"end": 15245,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "630"
										},
										{
											"begin": 15160,
											"end": 15245,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 15160,
											"end": 15245,
											"name": "tag",
											"source": 1,
											"value": "742"
										},
										{
											"begin": 15160,
											"end": 15245,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15255,
											"end": 15327,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "743"
										},
										{
											"begin": 15323,
											"end": 15325,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 15312,
											"end": 15321,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 15308,
											"end": 15326,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15299,
											"end": 15305,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 15255,
											"end": 15327,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "721"
										},
										{
											"begin": 15255,
											"end": 15327,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 15255,
											"end": 15327,
											"name": "tag",
											"source": 1,
											"value": "743"
										},
										{
											"begin": 15255,
											"end": 15327,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15337,
											"end": 15409,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "744"
										},
										{
											"begin": 15405,
											"end": 15407,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 15394,
											"end": 15403,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 15390,
											"end": 15408,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15381,
											"end": 15387,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 15337,
											"end": 15409,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "721"
										},
										{
											"begin": 15337,
											"end": 15409,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 15337,
											"end": 15409,
											"name": "tag",
											"source": 1,
											"value": "744"
										},
										{
											"begin": 15337,
											"end": 15409,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15419,
											"end": 15491,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "745"
										},
										{
											"begin": 15487,
											"end": 15489,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 15476,
											"end": 15485,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 15472,
											"end": 15490,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15463,
											"end": 15469,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 15419,
											"end": 15491,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "721"
										},
										{
											"begin": 15419,
											"end": 15491,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 15419,
											"end": 15491,
											"name": "tag",
											"source": 1,
											"value": "745"
										},
										{
											"begin": 15419,
											"end": 15491,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14917,
											"end": 15498,
											"name": "SWAP6",
											"source": 1
										},
										{
											"begin": 14917,
											"end": 15498,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 14917,
											"end": 15498,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14917,
											"end": 15498,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14917,
											"end": 15498,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14917,
											"end": 15498,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14917,
											"end": 15498,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14917,
											"end": 15498,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 15504,
											"end": 15866,
											"name": "tag",
											"source": 1,
											"value": "105"
										},
										{
											"begin": 15504,
											"end": 15866,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15640,
											"end": 15644,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 15678,
											"end": 15680,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 15667,
											"end": 15676,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 15663,
											"end": 15681,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15655,
											"end": 15681,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 15655,
											"end": 15681,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15691,
											"end": 15777,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "747"
										},
										{
											"begin": 15774,
											"end": 15775,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 15763,
											"end": 15772,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 15759,
											"end": 15776,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15750,
											"end": 15756,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 15691,
											"end": 15777,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "634"
										},
										{
											"begin": 15691,
											"end": 15777,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 15691,
											"end": 15777,
											"name": "tag",
											"source": 1,
											"value": "747"
										},
										{
											"begin": 15691,
											"end": 15777,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15787,
											"end": 15859,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "748"
										},
										{
											"begin": 15855,
											"end": 15857,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 15844,
											"end": 15853,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 15840,
											"end": 15858,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15831,
											"end": 15837,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 15787,
											"end": 15859,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "721"
										},
										{
											"begin": 15787,
											"end": 15859,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 15787,
											"end": 15859,
											"name": "tag",
											"source": 1,
											"value": "748"
										},
										{
											"begin": 15787,
											"end": 15859,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15504,
											"end": 15866,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 15504,
											"end": 15866,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 15504,
											"end": 15866,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15504,
											"end": 15866,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15504,
											"end": 15866,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15504,
											"end": 15866,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 15872,
											"end": 16136,
											"name": "tag",
											"source": 1,
											"value": "117"
										},
										{
											"begin": 15872,
											"end": 16136,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15986,
											"end": 15990,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 16024,
											"end": 16026,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 16013,
											"end": 16022,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 16009,
											"end": 16027,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16001,
											"end": 16027,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 16001,
											"end": 16027,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16037,
											"end": 16129,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "750"
										},
										{
											"begin": 16126,
											"end": 16127,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 16115,
											"end": 16124,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 16111,
											"end": 16128,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16102,
											"end": 16108,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 16037,
											"end": 16129,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "638"
										},
										{
											"begin": 16037,
											"end": 16129,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 16037,
											"end": 16129,
											"name": "tag",
											"source": 1,
											"value": "750"
										},
										{
											"begin": 16037,
											"end": 16129,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15872,
											"end": 16136,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 15872,
											"end": 16136,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 15872,
											"end": 16136,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15872,
											"end": 16136,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15872,
											"end": 16136,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 16142,
											"end": 16455,
											"name": "tag",
											"source": 1,
											"value": "490"
										},
										{
											"begin": 16142,
											"end": 16455,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 16255,
											"end": 16259,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 16293,
											"end": 16295,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 16282,
											"end": 16291,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 16278,
											"end": 16296,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16270,
											"end": 16296,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 16270,
											"end": 16296,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16342,
											"end": 16351,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 16336,
											"end": 16340,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 16332,
											"end": 16352,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 16328,
											"end": 16329,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 16317,
											"end": 16326,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 16313,
											"end": 16330,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16306,
											"end": 16353,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 16370,
											"end": 16448,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "752"
										},
										{
											"begin": 16443,
											"end": 16447,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 16434,
											"end": 16440,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 16370,
											"end": 16448,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "642"
										},
										{
											"begin": 16370,
											"end": 16448,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 16370,
											"end": 16448,
											"name": "tag",
											"source": 1,
											"value": "752"
										},
										{
											"begin": 16370,
											"end": 16448,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 16362,
											"end": 16448,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 16362,
											"end": 16448,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16142,
											"end": 16455,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 16142,
											"end": 16455,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 16142,
											"end": 16455,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16142,
											"end": 16455,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16142,
											"end": 16455,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 16461,
											"end": 16880,
											"name": "tag",
											"source": 1,
											"value": "419"
										},
										{
											"begin": 16461,
											"end": 16880,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 16627,
											"end": 16631,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 16665,
											"end": 16667,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 16654,
											"end": 16663,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 16650,
											"end": 16668,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16642,
											"end": 16668,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 16642,
											"end": 16668,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16714,
											"end": 16723,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 16708,
											"end": 16712,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 16704,
											"end": 16724,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 16700,
											"end": 16701,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 16689,
											"end": 16698,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 16685,
											"end": 16702,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16678,
											"end": 16725,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 16742,
											"end": 16873,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "754"
										},
										{
											"begin": 16868,
											"end": 16872,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 16742,
											"end": 16873,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "651"
										},
										{
											"begin": 16742,
											"end": 16873,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 16742,
											"end": 16873,
											"name": "tag",
											"source": 1,
											"value": "754"
										},
										{
											"begin": 16742,
											"end": 16873,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 16734,
											"end": 16873,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 16734,
											"end": 16873,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16461,
											"end": 16880,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 16461,
											"end": 16880,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 16461,
											"end": 16880,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16461,
											"end": 16880,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 16886,
											"end": 17305,
											"name": "tag",
											"source": 1,
											"value": "219"
										},
										{
											"begin": 16886,
											"end": 17305,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 17052,
											"end": 17056,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 17090,
											"end": 17092,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 17079,
											"end": 17088,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 17075,
											"end": 17093,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 17067,
											"end": 17093,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 17067,
											"end": 17093,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 17139,
											"end": 17148,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 17133,
											"end": 17137,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 17129,
											"end": 17149,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 17125,
											"end": 17126,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 17114,
											"end": 17123,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 17110,
											"end": 17127,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 17103,
											"end": 17150,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 17167,
											"end": 17298,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "756"
										},
										{
											"begin": 17293,
											"end": 17297,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 17167,
											"end": 17298,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "656"
										},
										{
											"begin": 17167,
											"end": 17298,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 17167,
											"end": 17298,
											"name": "tag",
											"source": 1,
											"value": "756"
										},
										{
											"begin": 17167,
											"end": 17298,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 17159,
											"end": 17298,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 17159,
											"end": 17298,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16886,
											"end": 17305,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 16886,
											"end": 17305,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 16886,
											"end": 17305,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16886,
											"end": 17305,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 17311,
											"end": 17730,
											"name": "tag",
											"source": 1,
											"value": "272"
										},
										{
											"begin": 17311,
											"end": 17730,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 17477,
											"end": 17481,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 17515,
											"end": 17517,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 17504,
											"end": 17513,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 17500,
											"end": 17518,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 17492,
											"end": 17518,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 17492,
											"end": 17518,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 17564,
											"end": 17573,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 17558,
											"end": 17562,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 17554,
											"end": 17574,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 17550,
											"end": 17551,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 17539,
											"end": 17548,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 17535,
											"end": 17552,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 17528,
											"end": 17575,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 17592,
											"end": 17723,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "758"
										},
										{
											"begin": 17718,
											"end": 17722,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 17592,
											"end": 17723,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "661"
										},
										{
											"begin": 17592,
											"end": 17723,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 17592,
											"end": 17723,
											"name": "tag",
											"source": 1,
											"value": "758"
										},
										{
											"begin": 17592,
											"end": 17723,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 17584,
											"end": 17723,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 17584,
											"end": 17723,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 17311,
											"end": 17730,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 17311,
											"end": 17730,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 17311,
											"end": 17730,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 17311,
											"end": 17730,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 17736,
											"end": 18155,
											"name": "tag",
											"source": 1,
											"value": "462"
										},
										{
											"begin": 17736,
											"end": 18155,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 17902,
											"end": 17906,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 17940,
											"end": 17942,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 17929,
											"end": 17938,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 17925,
											"end": 17943,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 17917,
											"end": 17943,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 17917,
											"end": 17943,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 17989,
											"end": 17998,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 17983,
											"end": 17987,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 17979,
											"end": 17999,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 17975,
											"end": 17976,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 17964,
											"end": 17973,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 17960,
											"end": 17977,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 17953,
											"end": 18000,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 18017,
											"end": 18148,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "760"
										},
										{
											"begin": 18143,
											"end": 18147,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 18017,
											"end": 18148,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "666"
										},
										{
											"begin": 18017,
											"end": 18148,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 18017,
											"end": 18148,
											"name": "tag",
											"source": 1,
											"value": "760"
										},
										{
											"begin": 18017,
											"end": 18148,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 18009,
											"end": 18148,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 18009,
											"end": 18148,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 17736,
											"end": 18155,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 17736,
											"end": 18155,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 17736,
											"end": 18155,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 17736,
											"end": 18155,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 18161,
											"end": 18580,
											"name": "tag",
											"source": 1,
											"value": "512"
										},
										{
											"begin": 18161,
											"end": 18580,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 18327,
											"end": 18331,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 18365,
											"end": 18367,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 18354,
											"end": 18363,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 18350,
											"end": 18368,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 18342,
											"end": 18368,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 18342,
											"end": 18368,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 18414,
											"end": 18423,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 18408,
											"end": 18412,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 18404,
											"end": 18424,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 18400,
											"end": 18401,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 18389,
											"end": 18398,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 18385,
											"end": 18402,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 18378,
											"end": 18425,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 18442,
											"end": 18573,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "762"
										},
										{
											"begin": 18568,
											"end": 18572,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 18442,
											"end": 18573,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "671"
										},
										{
											"begin": 18442,
											"end": 18573,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 18442,
											"end": 18573,
											"name": "tag",
											"source": 1,
											"value": "762"
										},
										{
											"begin": 18442,
											"end": 18573,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 18434,
											"end": 18573,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 18434,
											"end": 18573,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 18161,
											"end": 18580,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 18161,
											"end": 18580,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 18161,
											"end": 18580,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 18161,
											"end": 18580,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 18586,
											"end": 19005,
											"name": "tag",
											"source": 1,
											"value": "395"
										},
										{
											"begin": 18586,
											"end": 19005,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 18752,
											"end": 18756,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 18790,
											"end": 18792,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 18779,
											"end": 18788,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 18775,
											"end": 18793,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 18767,
											"end": 18793,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 18767,
											"end": 18793,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 18839,
											"end": 18848,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 18833,
											"end": 18837,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 18829,
											"end": 18849,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 18825,
											"end": 18826,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 18814,
											"end": 18823,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 18810,
											"end": 18827,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 18803,
											"end": 18850,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 18867,
											"end": 18998,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "764"
										},
										{
											"begin": 18993,
											"end": 18997,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 18867,
											"end": 18998,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "676"
										},
										{
											"begin": 18867,
											"end": 18998,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 18867,
											"end": 18998,
											"name": "tag",
											"source": 1,
											"value": "764"
										},
										{
											"begin": 18867,
											"end": 18998,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 18859,
											"end": 18998,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 18859,
											"end": 18998,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 18586,
											"end": 19005,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 18586,
											"end": 19005,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 18586,
											"end": 19005,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 18586,
											"end": 19005,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 19011,
											"end": 19430,
											"name": "tag",
											"source": 1,
											"value": "450"
										},
										{
											"begin": 19011,
											"end": 19430,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 19177,
											"end": 19181,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 19215,
											"end": 19217,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 19204,
											"end": 19213,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 19200,
											"end": 19218,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 19192,
											"end": 19218,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 19192,
											"end": 19218,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 19264,
											"end": 19273,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 19258,
											"end": 19262,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 19254,
											"end": 19274,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 19250,
											"end": 19251,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 19239,
											"end": 19248,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 19235,
											"end": 19252,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 19228,
											"end": 19275,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 19292,
											"end": 19423,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "766"
										},
										{
											"begin": 19418,
											"end": 19422,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 19292,
											"end": 19423,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "681"
										},
										{
											"begin": 19292,
											"end": 19423,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 19292,
											"end": 19423,
											"name": "tag",
											"source": 1,
											"value": "766"
										},
										{
											"begin": 19292,
											"end": 19423,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 19284,
											"end": 19423,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 19284,
											"end": 19423,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 19011,
											"end": 19430,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 19011,
											"end": 19430,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 19011,
											"end": 19430,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 19011,
											"end": 19430,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 19436,
											"end": 19855,
											"name": "tag",
											"source": 1,
											"value": "231"
										},
										{
											"begin": 19436,
											"end": 19855,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 19602,
											"end": 19606,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 19640,
											"end": 19642,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 19629,
											"end": 19638,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 19625,
											"end": 19643,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 19617,
											"end": 19643,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 19617,
											"end": 19643,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 19689,
											"end": 19698,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 19683,
											"end": 19687,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 19679,
											"end": 19699,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 19675,
											"end": 19676,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 19664,
											"end": 19673,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 19660,
											"end": 19677,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 19653,
											"end": 19700,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 19717,
											"end": 19848,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "768"
										},
										{
											"begin": 19843,
											"end": 19847,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 19717,
											"end": 19848,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "686"
										},
										{
											"begin": 19717,
											"end": 19848,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 19717,
											"end": 19848,
											"name": "tag",
											"source": 1,
											"value": "768"
										},
										{
											"begin": 19717,
											"end": 19848,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 19709,
											"end": 19848,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 19709,
											"end": 19848,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 19436,
											"end": 19855,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 19436,
											"end": 19855,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 19436,
											"end": 19855,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 19436,
											"end": 19855,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 19861,
											"end": 20280,
											"name": "tag",
											"source": 1,
											"value": "517"
										},
										{
											"begin": 19861,
											"end": 20280,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 20027,
											"end": 20031,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 20065,
											"end": 20067,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 20054,
											"end": 20063,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 20050,
											"end": 20068,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 20042,
											"end": 20068,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 20042,
											"end": 20068,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 20114,
											"end": 20123,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 20108,
											"end": 20112,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 20104,
											"end": 20124,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 20100,
											"end": 20101,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 20089,
											"end": 20098,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 20085,
											"end": 20102,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 20078,
											"end": 20125,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 20142,
											"end": 20273,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "770"
										},
										{
											"begin": 20268,
											"end": 20272,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 20142,
											"end": 20273,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "691"
										},
										{
											"begin": 20142,
											"end": 20273,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 20142,
											"end": 20273,
											"name": "tag",
											"source": 1,
											"value": "770"
										},
										{
											"begin": 20142,
											"end": 20273,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 20134,
											"end": 20273,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 20134,
											"end": 20273,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 19861,
											"end": 20280,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 19861,
											"end": 20280,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 19861,
											"end": 20280,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 19861,
											"end": 20280,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 20286,
											"end": 20705,
											"name": "tag",
											"source": 1,
											"value": "166"
										},
										{
											"begin": 20286,
											"end": 20705,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 20452,
											"end": 20456,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 20490,
											"end": 20492,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 20479,
											"end": 20488,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 20475,
											"end": 20493,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 20467,
											"end": 20493,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 20467,
											"end": 20493,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 20539,
											"end": 20548,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 20533,
											"end": 20537,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 20529,
											"end": 20549,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 20525,
											"end": 20526,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 20514,
											"end": 20523,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 20510,
											"end": 20527,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 20503,
											"end": 20550,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 20567,
											"end": 20698,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "772"
										},
										{
											"begin": 20693,
											"end": 20697,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 20567,
											"end": 20698,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "696"
										},
										{
											"begin": 20567,
											"end": 20698,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 20567,
											"end": 20698,
											"name": "tag",
											"source": 1,
											"value": "772"
										},
										{
											"begin": 20567,
											"end": 20698,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 20559,
											"end": 20698,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 20559,
											"end": 20698,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 20286,
											"end": 20705,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 20286,
											"end": 20705,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 20286,
											"end": 20705,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 20286,
											"end": 20705,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 20711,
											"end": 21130,
											"name": "tag",
											"source": 1,
											"value": "505"
										},
										{
											"begin": 20711,
											"end": 21130,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 20877,
											"end": 20881,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 20915,
											"end": 20917,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 20904,
											"end": 20913,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 20900,
											"end": 20918,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 20892,
											"end": 20918,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 20892,
											"end": 20918,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 20964,
											"end": 20973,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 20958,
											"end": 20962,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 20954,
											"end": 20974,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 20950,
											"end": 20951,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 20939,
											"end": 20948,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 20935,
											"end": 20952,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 20928,
											"end": 20975,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 20992,
											"end": 21123,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "774"
										},
										{
											"begin": 21118,
											"end": 21122,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 20992,
											"end": 21123,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "701"
										},
										{
											"begin": 20992,
											"end": 21123,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 20992,
											"end": 21123,
											"name": "tag",
											"source": 1,
											"value": "774"
										},
										{
											"begin": 20992,
											"end": 21123,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 20984,
											"end": 21123,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 20984,
											"end": 21123,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 20711,
											"end": 21130,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 20711,
											"end": 21130,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 20711,
											"end": 21130,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 20711,
											"end": 21130,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 21136,
											"end": 21555,
											"name": "tag",
											"source": 1,
											"value": "316"
										},
										{
											"begin": 21136,
											"end": 21555,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 21302,
											"end": 21306,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 21340,
											"end": 21342,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 21329,
											"end": 21338,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 21325,
											"end": 21343,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 21317,
											"end": 21343,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 21317,
											"end": 21343,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 21389,
											"end": 21398,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 21383,
											"end": 21387,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 21379,
											"end": 21399,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 21375,
											"end": 21376,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 21364,
											"end": 21373,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 21360,
											"end": 21377,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 21353,
											"end": 21400,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 21417,
											"end": 21548,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "776"
										},
										{
											"begin": 21543,
											"end": 21547,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 21417,
											"end": 21548,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "706"
										},
										{
											"begin": 21417,
											"end": 21548,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 21417,
											"end": 21548,
											"name": "tag",
											"source": 1,
											"value": "776"
										},
										{
											"begin": 21417,
											"end": 21548,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 21409,
											"end": 21548,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 21409,
											"end": 21548,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 21136,
											"end": 21555,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 21136,
											"end": 21555,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 21136,
											"end": 21555,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 21136,
											"end": 21555,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 21561,
											"end": 21980,
											"name": "tag",
											"source": 1,
											"value": "483"
										},
										{
											"begin": 21561,
											"end": 21980,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 21727,
											"end": 21731,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 21765,
											"end": 21767,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 21754,
											"end": 21763,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 21750,
											"end": 21768,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 21742,
											"end": 21768,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 21742,
											"end": 21768,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 21814,
											"end": 21823,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 21808,
											"end": 21812,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 21804,
											"end": 21824,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 21800,
											"end": 21801,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 21789,
											"end": 21798,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 21785,
											"end": 21802,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 21778,
											"end": 21825,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 21842,
											"end": 21973,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "778"
										},
										{
											"begin": 21968,
											"end": 21972,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 21842,
											"end": 21973,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "711"
										},
										{
											"begin": 21842,
											"end": 21973,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 21842,
											"end": 21973,
											"name": "tag",
											"source": 1,
											"value": "778"
										},
										{
											"begin": 21842,
											"end": 21973,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 21834,
											"end": 21973,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 21834,
											"end": 21973,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 21561,
											"end": 21980,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 21561,
											"end": 21980,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 21561,
											"end": 21980,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 21561,
											"end": 21980,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 21986,
											"end": 22405,
											"name": "tag",
											"source": 1,
											"value": "292"
										},
										{
											"begin": 21986,
											"end": 22405,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 22152,
											"end": 22156,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 22190,
											"end": 22192,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 22179,
											"end": 22188,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 22175,
											"end": 22193,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 22167,
											"end": 22193,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 22167,
											"end": 22193,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 22239,
											"end": 22248,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 22233,
											"end": 22237,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 22229,
											"end": 22249,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 22225,
											"end": 22226,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 22214,
											"end": 22223,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 22210,
											"end": 22227,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 22203,
											"end": 22250,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 22267,
											"end": 22398,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "780"
										},
										{
											"begin": 22393,
											"end": 22397,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 22267,
											"end": 22398,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "716"
										},
										{
											"begin": 22267,
											"end": 22398,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 22267,
											"end": 22398,
											"name": "tag",
											"source": 1,
											"value": "780"
										},
										{
											"begin": 22267,
											"end": 22398,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 22259,
											"end": 22398,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 22259,
											"end": 22398,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 21986,
											"end": 22405,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 21986,
											"end": 22405,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 21986,
											"end": 22405,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 21986,
											"end": 22405,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 22411,
											"end": 22633,
											"name": "tag",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 22411,
											"end": 22633,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 22504,
											"end": 22508,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 22542,
											"end": 22544,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 22531,
											"end": 22540,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 22527,
											"end": 22545,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 22519,
											"end": 22545,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 22519,
											"end": 22545,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 22555,
											"end": 22626,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "782"
										},
										{
											"begin": 22623,
											"end": 22624,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 22612,
											"end": 22621,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 22608,
											"end": 22625,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 22599,
											"end": 22605,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 22555,
											"end": 22626,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "721"
										},
										{
											"begin": 22555,
											"end": 22626,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 22555,
											"end": 22626,
											"name": "tag",
											"source": 1,
											"value": "782"
										},
										{
											"begin": 22555,
											"end": 22626,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 22411,
											"end": 22633,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 22411,
											"end": 22633,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 22411,
											"end": 22633,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 22411,
											"end": 22633,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 22411,
											"end": 22633,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 22639,
											"end": 22971,
											"name": "tag",
											"source": 1,
											"value": "139"
										},
										{
											"begin": 22639,
											"end": 22971,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 22760,
											"end": 22764,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 22798,
											"end": 22800,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 22787,
											"end": 22796,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 22783,
											"end": 22801,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 22775,
											"end": 22801,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 22775,
											"end": 22801,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 22811,
											"end": 22882,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "784"
										},
										{
											"begin": 22879,
											"end": 22880,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 22868,
											"end": 22877,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 22864,
											"end": 22881,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 22855,
											"end": 22861,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 22811,
											"end": 22882,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "721"
										},
										{
											"begin": 22811,
											"end": 22882,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 22811,
											"end": 22882,
											"name": "tag",
											"source": 1,
											"value": "784"
										},
										{
											"begin": 22811,
											"end": 22882,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 22892,
											"end": 22964,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "785"
										},
										{
											"begin": 22960,
											"end": 22962,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 22949,
											"end": 22958,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 22945,
											"end": 22963,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 22936,
											"end": 22942,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 22892,
											"end": 22964,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "721"
										},
										{
											"begin": 22892,
											"end": 22964,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 22892,
											"end": 22964,
											"name": "tag",
											"source": 1,
											"value": "785"
										},
										{
											"begin": 22892,
											"end": 22964,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 22639,
											"end": 22971,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 22639,
											"end": 22971,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 22639,
											"end": 22971,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 22639,
											"end": 22971,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 22639,
											"end": 22971,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 22639,
											"end": 22971,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 23058,
											"end": 23156,
											"name": "tag",
											"source": 1,
											"value": "625"
										},
										{
											"begin": 23058,
											"end": 23156,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 23109,
											"end": 23115,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 23143,
											"end": 23148,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 23137,
											"end": 23149,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 23127,
											"end": 23149,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 23127,
											"end": 23149,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 23058,
											"end": 23156,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 23058,
											"end": 23156,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 23058,
											"end": 23156,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 23058,
											"end": 23156,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 23162,
											"end": 23261,
											"name": "tag",
											"source": 1,
											"value": "645"
										},
										{
											"begin": 23162,
											"end": 23261,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 23214,
											"end": 23220,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 23248,
											"end": 23253,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 23242,
											"end": 23254,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 23232,
											"end": 23254,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 23232,
											"end": 23254,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 23162,
											"end": 23261,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 23162,
											"end": 23261,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 23162,
											"end": 23261,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 23162,
											"end": 23261,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 23267,
											"end": 23414,
											"name": "tag",
											"source": 1,
											"value": "627"
										},
										{
											"begin": 23267,
											"end": 23414,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 23368,
											"end": 23379,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 23405,
											"end": 23408,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 23390,
											"end": 23408,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 23390,
											"end": 23408,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 23267,
											"end": 23414,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 23267,
											"end": 23414,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 23267,
											"end": 23414,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 23267,
											"end": 23414,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 23267,
											"end": 23414,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 23420,
											"end": 23589,
											"name": "tag",
											"source": 1,
											"value": "647"
										},
										{
											"begin": 23420,
											"end": 23589,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 23504,
											"end": 23515,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 23538,
											"end": 23544,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 23533,
											"end": 23536,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 23526,
											"end": 23545,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 23578,
											"end": 23582,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 23573,
											"end": 23576,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 23569,
											"end": 23583,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 23554,
											"end": 23583,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 23554,
											"end": 23583,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 23420,
											"end": 23589,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 23420,
											"end": 23589,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 23420,
											"end": 23589,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 23420,
											"end": 23589,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 23420,
											"end": 23589,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 23595,
											"end": 23900,
											"name": "tag",
											"source": 1,
											"value": "459"
										},
										{
											"begin": 23595,
											"end": 23900,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 23635,
											"end": 23638,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 23654,
											"end": 23674,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "793"
										},
										{
											"begin": 23672,
											"end": 23673,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 23654,
											"end": 23674,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "724"
										},
										{
											"begin": 23654,
											"end": 23674,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 23654,
											"end": 23674,
											"name": "tag",
											"source": 1,
											"value": "793"
										},
										{
											"begin": 23654,
											"end": 23674,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 23649,
											"end": 23674,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 23649,
											"end": 23674,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 23688,
											"end": 23708,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "794"
										},
										{
											"begin": 23706,
											"end": 23707,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 23688,
											"end": 23708,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "724"
										},
										{
											"begin": 23688,
											"end": 23708,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 23688,
											"end": 23708,
											"name": "tag",
											"source": 1,
											"value": "794"
										},
										{
											"begin": 23688,
											"end": 23708,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 23683,
											"end": 23708,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 23683,
											"end": 23708,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 23842,
											"end": 23843,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 23774,
											"end": 23840,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 23770,
											"end": 23844,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 23767,
											"end": 23768,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 23764,
											"end": 23845,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 23761,
											"end": 23868,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 23761,
											"end": 23868,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "795"
										},
										{
											"begin": 23761,
											"end": 23868,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 23848,
											"end": 23866,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "796"
										},
										{
											"begin": 23848,
											"end": 23866,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "797"
										},
										{
											"begin": 23848,
											"end": 23866,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 23848,
											"end": 23866,
											"name": "tag",
											"source": 1,
											"value": "796"
										},
										{
											"begin": 23848,
											"end": 23866,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 23761,
											"end": 23868,
											"name": "tag",
											"source": 1,
											"value": "795"
										},
										{
											"begin": 23761,
											"end": 23868,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 23892,
											"end": 23893,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 23889,
											"end": 23890,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 23885,
											"end": 23894,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 23878,
											"end": 23894,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 23878,
											"end": 23894,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 23595,
											"end": 23900,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 23595,
											"end": 23900,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 23595,
											"end": 23900,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 23595,
											"end": 23900,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 23595,
											"end": 23900,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 23906,
											"end": 24091,
											"name": "tag",
											"source": 1,
											"value": "447"
										},
										{
											"begin": 23906,
											"end": 24091,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 23946,
											"end": 23947,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 23963,
											"end": 23983,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "799"
										},
										{
											"begin": 23981,
											"end": 23982,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 23963,
											"end": 23983,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "724"
										},
										{
											"begin": 23963,
											"end": 23983,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 23963,
											"end": 23983,
											"name": "tag",
											"source": 1,
											"value": "799"
										},
										{
											"begin": 23963,
											"end": 23983,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 23958,
											"end": 23983,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 23958,
											"end": 23983,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 23997,
											"end": 24017,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "800"
										},
										{
											"begin": 24015,
											"end": 24016,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 23997,
											"end": 24017,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "724"
										},
										{
											"begin": 23997,
											"end": 24017,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 23997,
											"end": 24017,
											"name": "tag",
											"source": 1,
											"value": "800"
										},
										{
											"begin": 23997,
											"end": 24017,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 23992,
											"end": 24017,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 23992,
											"end": 24017,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 24036,
											"end": 24037,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 24026,
											"end": 24061,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "801"
										},
										{
											"begin": 24026,
											"end": 24061,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 24041,
											"end": 24059,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "802"
										},
										{
											"begin": 24041,
											"end": 24059,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "803"
										},
										{
											"begin": 24041,
											"end": 24059,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 24041,
											"end": 24059,
											"name": "tag",
											"source": 1,
											"value": "802"
										},
										{
											"begin": 24041,
											"end": 24059,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 24026,
											"end": 24061,
											"name": "tag",
											"source": 1,
											"value": "801"
										},
										{
											"begin": 24026,
											"end": 24061,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 24083,
											"end": 24084,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 24080,
											"end": 24081,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 24076,
											"end": 24085,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 24071,
											"end": 24085,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 24071,
											"end": 24085,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 23906,
											"end": 24091,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 23906,
											"end": 24091,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 23906,
											"end": 24091,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 23906,
											"end": 24091,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 23906,
											"end": 24091,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 24097,
											"end": 24445,
											"name": "tag",
											"source": 1,
											"value": "445"
										},
										{
											"begin": 24097,
											"end": 24445,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 24137,
											"end": 24144,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 24160,
											"end": 24180,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "805"
										},
										{
											"begin": 24178,
											"end": 24179,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 24160,
											"end": 24180,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "724"
										},
										{
											"begin": 24160,
											"end": 24180,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 24160,
											"end": 24180,
											"name": "tag",
											"source": 1,
											"value": "805"
										},
										{
											"begin": 24160,
											"end": 24180,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 24155,
											"end": 24180,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 24155,
											"end": 24180,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 24194,
											"end": 24214,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "806"
										},
										{
											"begin": 24212,
											"end": 24213,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 24194,
											"end": 24214,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "724"
										},
										{
											"begin": 24194,
											"end": 24214,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 24194,
											"end": 24214,
											"name": "tag",
											"source": 1,
											"value": "806"
										},
										{
											"begin": 24194,
											"end": 24214,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 24189,
											"end": 24214,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 24189,
											"end": 24214,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 24382,
											"end": 24383,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 24314,
											"end": 24380,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 24310,
											"end": 24384,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 24307,
											"end": 24308,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 24304,
											"end": 24385,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 24299,
											"end": 24300,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 24292,
											"end": 24301,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 24285,
											"end": 24302,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 24281,
											"end": 24386,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 24278,
											"end": 24409,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 24278,
											"end": 24409,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "807"
										},
										{
											"begin": 24278,
											"end": 24409,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 24389,
											"end": 24407,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "808"
										},
										{
											"begin": 24389,
											"end": 24407,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "797"
										},
										{
											"begin": 24389,
											"end": 24407,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 24389,
											"end": 24407,
											"name": "tag",
											"source": 1,
											"value": "808"
										},
										{
											"begin": 24389,
											"end": 24407,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 24278,
											"end": 24409,
											"name": "tag",
											"source": 1,
											"value": "807"
										},
										{
											"begin": 24278,
											"end": 24409,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 24437,
											"end": 24438,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 24434,
											"end": 24435,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 24430,
											"end": 24439,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 24419,
											"end": 24439,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 24419,
											"end": 24439,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 24097,
											"end": 24445,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 24097,
											"end": 24445,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 24097,
											"end": 24445,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 24097,
											"end": 24445,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 24097,
											"end": 24445,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 24451,
											"end": 24642,
											"name": "tag",
											"source": 1,
											"value": "496"
										},
										{
											"begin": 24451,
											"end": 24642,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 24491,
											"end": 24495,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 24511,
											"end": 24531,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "810"
										},
										{
											"begin": 24529,
											"end": 24530,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 24511,
											"end": 24531,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "724"
										},
										{
											"begin": 24511,
											"end": 24531,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 24511,
											"end": 24531,
											"name": "tag",
											"source": 1,
											"value": "810"
										},
										{
											"begin": 24511,
											"end": 24531,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 24506,
											"end": 24531,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 24506,
											"end": 24531,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 24545,
											"end": 24565,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "811"
										},
										{
											"begin": 24563,
											"end": 24564,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 24545,
											"end": 24565,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "724"
										},
										{
											"begin": 24545,
											"end": 24565,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 24545,
											"end": 24565,
											"name": "tag",
											"source": 1,
											"value": "811"
										},
										{
											"begin": 24545,
											"end": 24565,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 24540,
											"end": 24565,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 24540,
											"end": 24565,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 24584,
											"end": 24585,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 24581,
											"end": 24582,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 24578,
											"end": 24586,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 24575,
											"end": 24609,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 24575,
											"end": 24609,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "812"
										},
										{
											"begin": 24575,
											"end": 24609,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 24589,
											"end": 24607,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "813"
										},
										{
											"begin": 24589,
											"end": 24607,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "797"
										},
										{
											"begin": 24589,
											"end": 24607,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 24589,
											"end": 24607,
											"name": "tag",
											"source": 1,
											"value": "813"
										},
										{
											"begin": 24589,
											"end": 24607,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 24575,
											"end": 24609,
											"name": "tag",
											"source": 1,
											"value": "812"
										},
										{
											"begin": 24575,
											"end": 24609,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 24634,
											"end": 24635,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 24631,
											"end": 24632,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 24627,
											"end": 24636,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 24619,
											"end": 24636,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 24619,
											"end": 24636,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 24451,
											"end": 24642,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 24451,
											"end": 24642,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 24451,
											"end": 24642,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 24451,
											"end": 24642,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 24451,
											"end": 24642,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 24648,
											"end": 24744,
											"name": "tag",
											"source": 1,
											"value": "621"
										},
										{
											"begin": 24648,
											"end": 24744,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 24685,
											"end": 24692,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 24714,
											"end": 24738,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "815"
										},
										{
											"begin": 24732,
											"end": 24737,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 24714,
											"end": 24738,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "816"
										},
										{
											"begin": 24714,
											"end": 24738,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 24714,
											"end": 24738,
											"name": "tag",
											"source": 1,
											"value": "815"
										},
										{
											"begin": 24714,
											"end": 24738,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 24703,
											"end": 24738,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 24703,
											"end": 24738,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 24648,
											"end": 24744,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 24648,
											"end": 24744,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 24648,
											"end": 24744,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 24648,
											"end": 24744,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 24750,
											"end": 24840,
											"name": "tag",
											"source": 1,
											"value": "817"
										},
										{
											"begin": 24750,
											"end": 24840,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 24784,
											"end": 24791,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 24827,
											"end": 24832,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 24820,
											"end": 24833,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 24813,
											"end": 24834,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 24802,
											"end": 24834,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 24802,
											"end": 24834,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 24750,
											"end": 24840,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 24750,
											"end": 24840,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 24750,
											"end": 24840,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 24750,
											"end": 24840,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 24846,
											"end": 24956,
											"name": "tag",
											"source": 1,
											"value": "819"
										},
										{
											"begin": 24846,
											"end": 24956,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 24897,
											"end": 24904,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 24926,
											"end": 24950,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "821"
										},
										{
											"begin": 24944,
											"end": 24949,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 24926,
											"end": 24950,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "621"
										},
										{
											"begin": 24926,
											"end": 24950,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 24926,
											"end": 24950,
											"name": "tag",
											"source": 1,
											"value": "821"
										},
										{
											"begin": 24926,
											"end": 24950,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 24915,
											"end": 24950,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 24915,
											"end": 24950,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 24846,
											"end": 24956,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 24846,
											"end": 24956,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 24846,
											"end": 24956,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 24846,
											"end": 24956,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 24962,
											"end": 25073,
											"name": "tag",
											"source": 1,
											"value": "822"
										},
										{
											"begin": 24962,
											"end": 25073,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 25014,
											"end": 25021,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 25043,
											"end": 25067,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "824"
										},
										{
											"begin": 25061,
											"end": 25066,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 25043,
											"end": 25067,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "621"
										},
										{
											"begin": 25043,
											"end": 25067,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 25043,
											"end": 25067,
											"name": "tag",
											"source": 1,
											"value": "824"
										},
										{
											"begin": 25043,
											"end": 25067,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 25032,
											"end": 25067,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 25032,
											"end": 25067,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 24962,
											"end": 25073,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 24962,
											"end": 25073,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 24962,
											"end": 25073,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 24962,
											"end": 25073,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 25079,
											"end": 25196,
											"name": "tag",
											"source": 1,
											"value": "825"
										},
										{
											"begin": 25079,
											"end": 25196,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 25137,
											"end": 25144,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 25166,
											"end": 25190,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "827"
										},
										{
											"begin": 25184,
											"end": 25189,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 25166,
											"end": 25190,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "621"
										},
										{
											"begin": 25166,
											"end": 25190,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 25166,
											"end": 25190,
											"name": "tag",
											"source": 1,
											"value": "827"
										},
										{
											"begin": 25166,
											"end": 25190,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 25155,
											"end": 25190,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 25155,
											"end": 25190,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 25079,
											"end": 25196,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 25079,
											"end": 25196,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 25079,
											"end": 25196,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 25079,
											"end": 25196,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 25202,
											"end": 25328,
											"name": "tag",
											"source": 1,
											"value": "816"
										},
										{
											"begin": 25202,
											"end": 25328,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 25239,
											"end": 25246,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 25279,
											"end": 25321,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 25272,
											"end": 25277,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 25268,
											"end": 25322,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 25257,
											"end": 25322,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 25257,
											"end": 25322,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 25202,
											"end": 25328,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 25202,
											"end": 25328,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 25202,
											"end": 25328,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 25202,
											"end": 25328,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 25334,
											"end": 25411,
											"name": "tag",
											"source": 1,
											"value": "724"
										},
										{
											"begin": 25334,
											"end": 25411,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 25371,
											"end": 25378,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 25400,
											"end": 25405,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 25389,
											"end": 25405,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 25389,
											"end": 25405,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 25334,
											"end": 25411,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 25334,
											"end": 25411,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 25334,
											"end": 25411,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 25334,
											"end": 25411,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 25417,
											"end": 25557,
											"name": "tag",
											"source": 1,
											"value": "633"
										},
										{
											"begin": 25417,
											"end": 25557,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 25481,
											"end": 25490,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 25514,
											"end": 25551,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "831"
										},
										{
											"begin": 25545,
											"end": 25550,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 25514,
											"end": 25551,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "832"
										},
										{
											"begin": 25514,
											"end": 25551,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 25514,
											"end": 25551,
											"name": "tag",
											"source": 1,
											"value": "831"
										},
										{
											"begin": 25514,
											"end": 25551,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 25501,
											"end": 25551,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 25501,
											"end": 25551,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 25417,
											"end": 25557,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 25417,
											"end": 25557,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 25417,
											"end": 25557,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 25417,
											"end": 25557,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 25563,
											"end": 25704,
											"name": "tag",
											"source": 1,
											"value": "637"
										},
										{
											"begin": 25563,
											"end": 25704,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 25628,
											"end": 25637,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 25661,
											"end": 25698,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "834"
										},
										{
											"begin": 25692,
											"end": 25697,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 25661,
											"end": 25698,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "832"
										},
										{
											"begin": 25661,
											"end": 25698,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 25661,
											"end": 25698,
											"name": "tag",
											"source": 1,
											"value": "834"
										},
										{
											"begin": 25661,
											"end": 25698,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 25648,
											"end": 25698,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 25648,
											"end": 25698,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 25563,
											"end": 25704,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 25563,
											"end": 25704,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 25563,
											"end": 25704,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 25563,
											"end": 25704,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 25710,
											"end": 25857,
											"name": "tag",
											"source": 1,
											"value": "641"
										},
										{
											"begin": 25710,
											"end": 25857,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 25781,
											"end": 25790,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 25814,
											"end": 25851,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "836"
										},
										{
											"begin": 25845,
											"end": 25850,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 25814,
											"end": 25851,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "832"
										},
										{
											"begin": 25814,
											"end": 25851,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 25814,
											"end": 25851,
											"name": "tag",
											"source": 1,
											"value": "836"
										},
										{
											"begin": 25814,
											"end": 25851,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 25801,
											"end": 25851,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 25801,
											"end": 25851,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 25710,
											"end": 25857,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 25710,
											"end": 25857,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 25710,
											"end": 25857,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 25710,
											"end": 25857,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 25863,
											"end": 25989,
											"name": "tag",
											"source": 1,
											"value": "832"
										},
										{
											"begin": 25863,
											"end": 25989,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 25913,
											"end": 25922,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 25946,
											"end": 25983,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "838"
										},
										{
											"begin": 25977,
											"end": 25982,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 25946,
											"end": 25983,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "839"
										},
										{
											"begin": 25946,
											"end": 25983,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 25946,
											"end": 25983,
											"name": "tag",
											"source": 1,
											"value": "838"
										},
										{
											"begin": 25946,
											"end": 25983,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 25933,
											"end": 25983,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 25933,
											"end": 25983,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 25863,
											"end": 25989,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 25863,
											"end": 25989,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 25863,
											"end": 25989,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 25863,
											"end": 25989,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 25995,
											"end": 26108,
											"name": "tag",
											"source": 1,
											"value": "839"
										},
										{
											"begin": 25995,
											"end": 26108,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 26045,
											"end": 26054,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 26078,
											"end": 26102,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "841"
										},
										{
											"begin": 26096,
											"end": 26101,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 26078,
											"end": 26102,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "816"
										},
										{
											"begin": 26078,
											"end": 26102,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 26078,
											"end": 26102,
											"name": "tag",
											"source": 1,
											"value": "841"
										},
										{
											"begin": 26078,
											"end": 26102,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 26065,
											"end": 26102,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 26065,
											"end": 26102,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 25995,
											"end": 26108,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 25995,
											"end": 26108,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 25995,
											"end": 26108,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 25995,
											"end": 26108,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 26114,
											"end": 26421,
											"name": "tag",
											"source": 1,
											"value": "629"
										},
										{
											"begin": 26114,
											"end": 26421,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 26182,
											"end": 26183,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 26192,
											"end": 26305,
											"name": "tag",
											"source": 1,
											"value": "843"
										},
										{
											"begin": 26192,
											"end": 26305,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 26206,
											"end": 26212,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 26203,
											"end": 26204,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 26200,
											"end": 26213,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 26192,
											"end": 26305,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 26192,
											"end": 26305,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "845"
										},
										{
											"begin": 26192,
											"end": 26305,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 26291,
											"end": 26292,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 26286,
											"end": 26289,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 26282,
											"end": 26293,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 26276,
											"end": 26294,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 26272,
											"end": 26273,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 26267,
											"end": 26270,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 26263,
											"end": 26274,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 26256,
											"end": 26295,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 26228,
											"end": 26230,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 26225,
											"end": 26226,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 26221,
											"end": 26231,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 26216,
											"end": 26231,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 26216,
											"end": 26231,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 26192,
											"end": 26305,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "843"
										},
										{
											"begin": 26192,
											"end": 26305,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 26192,
											"end": 26305,
											"name": "tag",
											"source": 1,
											"value": "845"
										},
										{
											"begin": 26192,
											"end": 26305,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 26323,
											"end": 26329,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 26320,
											"end": 26321,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 26317,
											"end": 26330,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 26314,
											"end": 26415,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 26314,
											"end": 26415,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "846"
										},
										{
											"begin": 26314,
											"end": 26415,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 26403,
											"end": 26404,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 26394,
											"end": 26400,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 26389,
											"end": 26392,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 26385,
											"end": 26401,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 26378,
											"end": 26405,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 26314,
											"end": 26415,
											"name": "tag",
											"source": 1,
											"value": "846"
										},
										{
											"begin": 26314,
											"end": 26415,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 26163,
											"end": 26421,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 26114,
											"end": 26421,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 26114,
											"end": 26421,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 26114,
											"end": 26421,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 26114,
											"end": 26421,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 26427,
											"end": 26660,
											"name": "tag",
											"source": 1,
											"value": "362"
										},
										{
											"begin": 26427,
											"end": 26660,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 26466,
											"end": 26469,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 26489,
											"end": 26513,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "848"
										},
										{
											"begin": 26507,
											"end": 26512,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 26489,
											"end": 26513,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "724"
										},
										{
											"begin": 26489,
											"end": 26513,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 26489,
											"end": 26513,
											"name": "tag",
											"source": 1,
											"value": "848"
										},
										{
											"begin": 26489,
											"end": 26513,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 26480,
											"end": 26513,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 26480,
											"end": 26513,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 26535,
											"end": 26601,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 26528,
											"end": 26533,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 26525,
											"end": 26602,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 26522,
											"end": 26625,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 26522,
											"end": 26625,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "849"
										},
										{
											"begin": 26522,
											"end": 26625,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 26605,
											"end": 26623,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "850"
										},
										{
											"begin": 26605,
											"end": 26623,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "797"
										},
										{
											"begin": 26605,
											"end": 26623,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 26605,
											"end": 26623,
											"name": "tag",
											"source": 1,
											"value": "850"
										},
										{
											"begin": 26605,
											"end": 26623,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 26522,
											"end": 26625,
											"name": "tag",
											"source": 1,
											"value": "849"
										},
										{
											"begin": 26522,
											"end": 26625,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 26652,
											"end": 26653,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 26645,
											"end": 26650,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 26641,
											"end": 26654,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 26634,
											"end": 26654,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 26634,
											"end": 26654,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 26427,
											"end": 26660,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 26427,
											"end": 26660,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 26427,
											"end": 26660,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 26427,
											"end": 26660,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 26666,
											"end": 26846,
											"name": "tag",
											"source": 1,
											"value": "797"
										},
										{
											"begin": 26666,
											"end": 26846,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 26714,
											"end": 26791,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 26711,
											"end": 26712,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 26704,
											"end": 26792,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 26811,
											"end": 26815,
											"name": "PUSH",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 26808,
											"end": 26809,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 26801,
											"end": 26816,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 26835,
											"end": 26839,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 26832,
											"end": 26833,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 26825,
											"end": 26840,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 26852,
											"end": 27032,
											"name": "tag",
											"source": 1,
											"value": "803"
										},
										{
											"begin": 26852,
											"end": 27032,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 26900,
											"end": 26977,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 26897,
											"end": 26898,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 26890,
											"end": 26978,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 26997,
											"end": 27001,
											"name": "PUSH",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 26994,
											"end": 26995,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 26987,
											"end": 27002,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 27021,
											"end": 27025,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 27018,
											"end": 27019,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 27011,
											"end": 27026,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 27038,
											"end": 27218,
											"name": "tag",
											"source": 1,
											"value": "162"
										},
										{
											"begin": 27038,
											"end": 27218,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 27086,
											"end": 27163,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 27083,
											"end": 27084,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 27076,
											"end": 27164,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 27183,
											"end": 27187,
											"name": "PUSH",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 27180,
											"end": 27181,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 27173,
											"end": 27188,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 27207,
											"end": 27211,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 27204,
											"end": 27205,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 27197,
											"end": 27212,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 27347,
											"end": 27464,
											"name": "tag",
											"source": 1,
											"value": "569"
										},
										{
											"begin": 27347,
											"end": 27464,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 27456,
											"end": 27457,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 27453,
											"end": 27454,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 27446,
											"end": 27458,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 27470,
											"end": 27572,
											"name": "tag",
											"source": 1,
											"value": "650"
										},
										{
											"begin": 27470,
											"end": 27572,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 27511,
											"end": 27517,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 27562,
											"end": 27564,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 27558,
											"end": 27565,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 27553,
											"end": 27555,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 27546,
											"end": 27551,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 27542,
											"end": 27556,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 27538,
											"end": 27566,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 27528,
											"end": 27566,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 27528,
											"end": 27566,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 27470,
											"end": 27572,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 27470,
											"end": 27572,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 27470,
											"end": 27572,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 27470,
											"end": 27572,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 27578,
											"end": 27803,
											"name": "tag",
											"source": 1,
											"value": "655"
										},
										{
											"begin": 27578,
											"end": 27803,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 27718,
											"end": 27752,
											"name": "PUSH",
											"source": 1,
											"value": "4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
										},
										{
											"begin": 27714,
											"end": 27715,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 27706,
											"end": 27712,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 27702,
											"end": 27716,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 27695,
											"end": 27753,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 27787,
											"end": 27795,
											"name": "PUSH",
											"source": 1,
											"value": "6464726573730000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 27782,
											"end": 27784,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 27774,
											"end": 27780,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 27770,
											"end": 27785,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 27763,
											"end": 27796,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 27578,
											"end": 27803,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 27578,
											"end": 27803,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 27809,
											"end": 27978,
											"name": "tag",
											"source": 1,
											"value": "660"
										},
										{
											"begin": 27809,
											"end": 27978,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 27949,
											"end": 27970,
											"name": "PUSH",
											"source": 1,
											"value": "506F776572206973206E6F7420656E6F75676800000000000000000000000000"
										},
										{
											"begin": 27945,
											"end": 27946,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 27937,
											"end": 27943,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 27933,
											"end": 27947,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 27926,
											"end": 27971,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 27809,
											"end": 27978,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 27809,
											"end": 27978,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 27984,
											"end": 28161,
											"name": "tag",
											"source": 1,
											"value": "665"
										},
										{
											"begin": 27984,
											"end": 28161,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 28124,
											"end": 28153,
											"name": "PUSH",
											"source": 1,
											"value": "776974686472617720506F77657220627920756E7374616B696E670000000000"
										},
										{
											"begin": 28120,
											"end": 28121,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 28112,
											"end": 28118,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 28108,
											"end": 28122,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 28101,
											"end": 28154,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 27984,
											"end": 28161,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 27984,
											"end": 28161,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 28167,
											"end": 28344,
											"name": "tag",
											"source": 1,
											"value": "670"
										},
										{
											"begin": 28167,
											"end": 28344,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 28307,
											"end": 28336,
											"name": "PUSH",
											"source": 1,
											"value": "536166654D6174683A206164646974696F6E206F766572666C6F770000000000"
										},
										{
											"begin": 28303,
											"end": 28304,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 28295,
											"end": 28301,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 28291,
											"end": 28305,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 28284,
											"end": 28337,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 28167,
											"end": 28344,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 28167,
											"end": 28344,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 28350,
											"end": 28575,
											"name": "tag",
											"source": 1,
											"value": "675"
										},
										{
											"begin": 28350,
											"end": 28575,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 28490,
											"end": 28524,
											"name": "PUSH",
											"source": 1,
											"value": "416464726573733A20696E73756666696369656E742062616C616E636520666F"
										},
										{
											"begin": 28486,
											"end": 28487,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 28478,
											"end": 28484,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 28474,
											"end": 28488,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 28467,
											"end": 28525,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 28559,
											"end": 28567,
											"name": "PUSH",
											"source": 1,
											"value": "722063616C6C0000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 28554,
											"end": 28556,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 28546,
											"end": 28552,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 28542,
											"end": 28557,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 28535,
											"end": 28568,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 28350,
											"end": 28575,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 28350,
											"end": 28575,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 28581,
											"end": 28755,
											"name": "tag",
											"source": 1,
											"value": "680"
										},
										{
											"begin": 28581,
											"end": 28755,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 28721,
											"end": 28747,
											"name": "PUSH",
											"source": 1,
											"value": "6465706F73697420506F776572206279207374616B696E670000000000000000"
										},
										{
											"begin": 28717,
											"end": 28718,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 28709,
											"end": 28715,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 28705,
											"end": 28719,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 28698,
											"end": 28748,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 28581,
											"end": 28755,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 28581,
											"end": 28755,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 28761,
											"end": 28981,
											"name": "tag",
											"source": 1,
											"value": "685"
										},
										{
											"begin": 28761,
											"end": 28981,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 28901,
											"end": 28935,
											"name": "PUSH",
											"source": 1,
											"value": "536166654D6174683A206D756C7469706C69636174696F6E206F766572666C6F"
										},
										{
											"begin": 28897,
											"end": 28898,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 28889,
											"end": 28895,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 28885,
											"end": 28899,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 28878,
											"end": 28936,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 28970,
											"end": 28973,
											"name": "PUSH",
											"source": 1,
											"value": "7700000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 28965,
											"end": 28967,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 28957,
											"end": 28963,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 28953,
											"end": 28968,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 28946,
											"end": 28974,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 28761,
											"end": 28981,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 28761,
											"end": 28981,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 28987,
											"end": 29169,
											"name": "tag",
											"source": 1,
											"value": "690"
										},
										{
											"begin": 28987,
											"end": 29169,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 29127,
											"end": 29161,
											"name": "PUSH",
											"source": 1,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 29123,
											"end": 29124,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 29115,
											"end": 29121,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 29111,
											"end": 29125,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 29104,
											"end": 29162,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 28987,
											"end": 29169,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 28987,
											"end": 29169,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 29175,
											"end": 29354,
											"name": "tag",
											"source": 1,
											"value": "695"
										},
										{
											"begin": 29175,
											"end": 29354,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 29315,
											"end": 29346,
											"name": "PUSH",
											"source": 1,
											"value": "416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000"
										},
										{
											"begin": 29311,
											"end": 29312,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 29303,
											"end": 29309,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 29299,
											"end": 29313,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 29292,
											"end": 29347,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 29175,
											"end": 29354,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 29175,
											"end": 29354,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 29360,
											"end": 29528,
											"name": "tag",
											"source": 1,
											"value": "700"
										},
										{
											"begin": 29360,
											"end": 29528,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 29500,
											"end": 29520,
											"name": "PUSH",
											"source": 1,
											"value": "77697468647261773A206E6F7420676F6F640000000000000000000000000000"
										},
										{
											"begin": 29496,
											"end": 29497,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 29488,
											"end": 29494,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 29484,
											"end": 29498,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 29477,
											"end": 29521,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 29360,
											"end": 29528,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 29360,
											"end": 29528,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 29534,
											"end": 29763,
											"name": "tag",
											"source": 1,
											"value": "705"
										},
										{
											"begin": 29534,
											"end": 29763,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 29674,
											"end": 29708,
											"name": "PUSH",
											"source": 1,
											"value": "5361666545524332303A204552433230206F7065726174696F6E20646964206E"
										},
										{
											"begin": 29670,
											"end": 29671,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 29662,
											"end": 29668,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 29658,
											"end": 29672,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 29651,
											"end": 29709,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 29743,
											"end": 29755,
											"name": "PUSH",
											"source": 1,
											"value": "6F74207375636365656400000000000000000000000000000000000000000000"
										},
										{
											"begin": 29738,
											"end": 29740,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 29730,
											"end": 29736,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 29726,
											"end": 29741,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 29719,
											"end": 29756,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 29534,
											"end": 29763,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 29534,
											"end": 29763,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 29769,
											"end": 29931,
											"name": "tag",
											"source": 1,
											"value": "710"
										},
										{
											"begin": 29769,
											"end": 29931,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 29909,
											"end": 29923,
											"name": "PUSH",
											"source": 1,
											"value": "6D6967726174653A206261640000000000000000000000000000000000000000"
										},
										{
											"begin": 29905,
											"end": 29906,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 29897,
											"end": 29903,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 29893,
											"end": 29907,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 29886,
											"end": 29924,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 29769,
											"end": 29931,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 29769,
											"end": 29931,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 29937,
											"end": 30178,
											"name": "tag",
											"source": 1,
											"value": "715"
										},
										{
											"begin": 29937,
											"end": 30178,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 30077,
											"end": 30111,
											"name": "PUSH",
											"source": 1,
											"value": "5361666545524332303A20617070726F76652066726F6D206E6F6E2D7A65726F"
										},
										{
											"begin": 30073,
											"end": 30074,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 30065,
											"end": 30071,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 30061,
											"end": 30075,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 30054,
											"end": 30112,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 30146,
											"end": 30170,
											"name": "PUSH",
											"source": 1,
											"value": "20746F206E6F6E2D7A65726F20616C6C6F77616E636500000000000000000000"
										},
										{
											"begin": 30141,
											"end": 30143,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 30133,
											"end": 30139,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 30129,
											"end": 30144,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 30122,
											"end": 30171,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 29937,
											"end": 30178,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 29937,
											"end": 30178,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 30184,
											"end": 30354,
											"name": "tag",
											"source": 1,
											"value": "720"
										},
										{
											"begin": 30184,
											"end": 30354,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 30324,
											"end": 30346,
											"name": "PUSH",
											"source": 1,
											"value": "6D6967726174653A206E6F206D69677261746F72000000000000000000000000"
										},
										{
											"begin": 30320,
											"end": 30321,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 30312,
											"end": 30318,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 30308,
											"end": 30322,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 30301,
											"end": 30347,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 30184,
											"end": 30354,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 30184,
											"end": 30354,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 30360,
											"end": 30482,
											"name": "tag",
											"source": 1,
											"value": "536"
										},
										{
											"begin": 30360,
											"end": 30482,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 30433,
											"end": 30457,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "873"
										},
										{
											"begin": 30451,
											"end": 30456,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 30433,
											"end": 30457,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "621"
										},
										{
											"begin": 30433,
											"end": 30457,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 30433,
											"end": 30457,
											"name": "tag",
											"source": 1,
											"value": "873"
										},
										{
											"begin": 30433,
											"end": 30457,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 30426,
											"end": 30431,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 30423,
											"end": 30458,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 30413,
											"end": 30476,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "874"
										},
										{
											"begin": 30413,
											"end": 30476,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 30472,
											"end": 30473,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 30469,
											"end": 30470,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 30462,
											"end": 30474,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 30413,
											"end": 30476,
											"name": "tag",
											"source": 1,
											"value": "874"
										},
										{
											"begin": 30413,
											"end": 30476,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 30360,
											"end": 30482,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 30360,
											"end": 30482,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 30488,
											"end": 30604,
											"name": "tag",
											"source": 1,
											"value": "540"
										},
										{
											"begin": 30488,
											"end": 30604,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 30558,
											"end": 30579,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "876"
										},
										{
											"begin": 30573,
											"end": 30578,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 30558,
											"end": 30579,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "817"
										},
										{
											"begin": 30558,
											"end": 30579,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 30558,
											"end": 30579,
											"name": "tag",
											"source": 1,
											"value": "876"
										},
										{
											"begin": 30558,
											"end": 30579,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 30551,
											"end": 30556,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 30548,
											"end": 30580,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 30538,
											"end": 30598,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "877"
										},
										{
											"begin": 30538,
											"end": 30598,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 30594,
											"end": 30595,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 30591,
											"end": 30592,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 30584,
											"end": 30596,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 30538,
											"end": 30598,
											"name": "tag",
											"source": 1,
											"value": "877"
										},
										{
											"begin": 30538,
											"end": 30598,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 30488,
											"end": 30604,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 30488,
											"end": 30604,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 30610,
											"end": 30760,
											"name": "tag",
											"source": 1,
											"value": "547"
										},
										{
											"begin": 30610,
											"end": 30760,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 30697,
											"end": 30735,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "879"
										},
										{
											"begin": 30729,
											"end": 30734,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 30697,
											"end": 30735,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "819"
										},
										{
											"begin": 30697,
											"end": 30735,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 30697,
											"end": 30735,
											"name": "tag",
											"source": 1,
											"value": "879"
										},
										{
											"begin": 30697,
											"end": 30735,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 30690,
											"end": 30695,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 30687,
											"end": 30736,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 30677,
											"end": 30754,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "880"
										},
										{
											"begin": 30677,
											"end": 30754,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 30750,
											"end": 30751,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 30747,
											"end": 30748,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 30740,
											"end": 30752,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 30677,
											"end": 30754,
											"name": "tag",
											"source": 1,
											"value": "880"
										},
										{
											"begin": 30677,
											"end": 30754,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 30610,
											"end": 30760,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 30610,
											"end": 30760,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 30766,
											"end": 30918,
											"name": "tag",
											"source": 1,
											"value": "554"
										},
										{
											"begin": 30766,
											"end": 30918,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 30854,
											"end": 30893,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "882"
										},
										{
											"begin": 30887,
											"end": 30892,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 30854,
											"end": 30893,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "822"
										},
										{
											"begin": 30854,
											"end": 30893,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 30854,
											"end": 30893,
											"name": "tag",
											"source": 1,
											"value": "882"
										},
										{
											"begin": 30854,
											"end": 30893,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 30847,
											"end": 30852,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 30844,
											"end": 30894,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 30834,
											"end": 30912,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "883"
										},
										{
											"begin": 30834,
											"end": 30912,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 30908,
											"end": 30909,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 30905,
											"end": 30906,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 30898,
											"end": 30910,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 30834,
											"end": 30912,
											"name": "tag",
											"source": 1,
											"value": "883"
										},
										{
											"begin": 30834,
											"end": 30912,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 30766,
											"end": 30918,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 30766,
											"end": 30918,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 30924,
											"end": 31088,
											"name": "tag",
											"source": 1,
											"value": "558"
										},
										{
											"begin": 30924,
											"end": 31088,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 31018,
											"end": 31063,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "885"
										},
										{
											"begin": 31057,
											"end": 31062,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 31018,
											"end": 31063,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "825"
										},
										{
											"begin": 31018,
											"end": 31063,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 31018,
											"end": 31063,
											"name": "tag",
											"source": 1,
											"value": "885"
										},
										{
											"begin": 31018,
											"end": 31063,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 31011,
											"end": 31016,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 31008,
											"end": 31064,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 30998,
											"end": 31082,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "886"
										},
										{
											"begin": 30998,
											"end": 31082,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 31078,
											"end": 31079,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 31075,
											"end": 31076,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 31068,
											"end": 31080,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 30998,
											"end": 31082,
											"name": "tag",
											"source": 1,
											"value": "886"
										},
										{
											"begin": 30998,
											"end": 31082,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 30924,
											"end": 31088,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 30924,
											"end": 31088,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 31094,
											"end": 31216,
											"name": "tag",
											"source": 1,
											"value": "562"
										},
										{
											"begin": 31094,
											"end": 31216,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 31167,
											"end": 31191,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "888"
										},
										{
											"begin": 31185,
											"end": 31190,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 31167,
											"end": 31191,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "724"
										},
										{
											"begin": 31167,
											"end": 31191,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 31167,
											"end": 31191,
											"name": "tag",
											"source": 1,
											"value": "888"
										},
										{
											"begin": 31167,
											"end": 31191,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 31160,
											"end": 31165,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 31157,
											"end": 31192,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 31147,
											"end": 31210,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "889"
										},
										{
											"begin": 31147,
											"end": 31210,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 31206,
											"end": 31207,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 31203,
											"end": 31204,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 31196,
											"end": 31208,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 31147,
											"end": 31210,
											"name": "tag",
											"source": 1,
											"value": "889"
										},
										{
											"begin": 31147,
											"end": 31210,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 31094,
											"end": 31216,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 31094,
											"end": 31216,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"BONUS_MULTIPLIER()": "8aa28550",
							"DDT()": "cb3cba55",
							"PowerPerBlock()": "5990c569",
							"add(uint256,address,bool)": "1eaaa045",
							"addNFT(address,uint256)": "4ea2813c",
							"claimNFTReward(uint256,uint256)": "1d5fbd87",
							"deposit(uint256,uint256)": "e2bbb158",
							"emergencyWithdraw(uint256)": "5312ea8e",
							"enterStaking(uint256)": "41441d3b",
							"getMultiplier(uint256,uint256)": "8dbb1e3a",
							"getPowerBalance(address)": "8c51793b",
							"leaveStaking(uint256)": "1058d281",
							"massUpdatePools()": "630b5ba1",
							"migrate(uint256)": "454b0608",
							"migrator()": "7cd07e47",
							"nftsInfo(uint256)": "61c1b724",
							"owner()": "8da5cb5b",
							"pendingPower(uint256,address)": "f3239ab5",
							"poolInfo(uint256)": "1526fe27",
							"poolLength()": "081e3eda",
							"powerBalance(address)": "d209db8c",
							"renounceOwnership()": "715018a6",
							"set(uint256,uint256,bool)": "64482f79",
							"setMigrator(address)": "23cf3118",
							"startBlock()": "48cd4cb1",
							"totalAllocPoint()": "17caf6f1",
							"transferOwnership(address)": "f2fde38b",
							"updateMultiplier(uint256)": "5ffe6146",
							"updatePool(uint256)": "51eb05a6",
							"updatePowerPerBlock(uint256)": "3df7aff3",
							"userInfo(uint256,address)": "93f1a40b",
							"withdraw(uint256,uint256)": "441a3e70"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"_DDT\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_PowerPerBlock\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_startBlock\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"pid\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Deposit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"pid\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"EmergencyWithdraw\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"pid\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Withdraw\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"BONUS_MULTIPLIER\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"DDT\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PowerPerBlock\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_allocPoint\",\"type\":\"uint256\"},{\"internalType\":\"contract IERC20\",\"name\":\"_lpToken\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_withUpdate\",\"type\":\"bool\"}],\"name\":\"add\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC721\",\"name\":\"_NFT\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_power\",\"type\":\"uint256\"}],\"name\":\"addNFT\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"level\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"}],\"name\":\"claimNFTReward\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"}],\"name\":\"emergencyWithdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"enterStaking\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_from\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_to\",\"type\":\"uint256\"}],\"name\":\"getMultiplier\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"getPowerBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"leaveStaking\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"massUpdatePools\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"}],\"name\":\"migrate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"migrator\",\"outputs\":[{\"internalType\":\"contract IMigratorChef\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"nftsInfo\",\"outputs\":[{\"internalType\":\"contract IERC721\",\"name\":\"NFT\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"power\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"pendingPower\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"poolInfo\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"lpToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allocPoint\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastRewardBlock\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"accPowerPerShare\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"poolLength\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"powerBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_allocPoint\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"_withUpdate\",\"type\":\"bool\"}],\"name\":\"set\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IMigratorChef\",\"name\":\"_migrator\",\"type\":\"address\"}],\"name\":\"setMigrator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"startBlock\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalAllocPoint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"multiplierNumber\",\"type\":\"uint256\"}],\"name\":\"updateMultiplier\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"}],\"name\":\"updatePool\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newAmount\",\"type\":\"uint256\"}],\"name\":\"updatePowerPerBlock\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"userInfo\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rewardDebt\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/NFTMasterChef.sol\":\"NFTMasterChef\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/NFTMasterChef.sol\":{\"keccak256\":\"0xaa3f6650bd0d18c974fb49ff47bb742f7e50cb438781764b06a12790d25fd86c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://18152ee0a5fb58d362f6d5ced4ff3dfecf2f8362e3b7eec88b7d44cde630fec6\",\"dweb:/ipfs/QmdtHL4hcWQnvJtfNCiU4Ehbq1P6Wik9QNYCnbMd5nWHkM\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 820,
								"contract": "contracts/NFTMasterChef.sol:NFTMasterChef",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 967,
								"contract": "contracts/NFTMasterChef.sol:NFTMasterChef",
								"label": "nftsInfo",
								"offset": 0,
								"slot": "1",
								"type": "t_array(t_struct(NFTsInfo)963_storage)dyn_storage"
							},
							{
								"astId": 970,
								"contract": "contracts/NFTMasterChef.sol:NFTMasterChef",
								"label": "DDT",
								"offset": 0,
								"slot": "2",
								"type": "t_contract(IERC20)286"
							},
							{
								"astId": 972,
								"contract": "contracts/NFTMasterChef.sol:NFTMasterChef",
								"label": "PowerPerBlock",
								"offset": 0,
								"slot": "3",
								"type": "t_uint256"
							},
							{
								"astId": 975,
								"contract": "contracts/NFTMasterChef.sol:NFTMasterChef",
								"label": "BONUS_MULTIPLIER",
								"offset": 0,
								"slot": "4",
								"type": "t_uint256"
							},
							{
								"astId": 978,
								"contract": "contracts/NFTMasterChef.sol:NFTMasterChef",
								"label": "migrator",
								"offset": 0,
								"slot": "5",
								"type": "t_contract(IMigratorChef)927"
							},
							{
								"astId": 982,
								"contract": "contracts/NFTMasterChef.sol:NFTMasterChef",
								"label": "poolInfo",
								"offset": 0,
								"slot": "6",
								"type": "t_array(t_struct(PoolInfo)957_storage)dyn_storage"
							},
							{
								"astId": 989,
								"contract": "contracts/NFTMasterChef.sol:NFTMasterChef",
								"label": "userInfo",
								"offset": 0,
								"slot": "7",
								"type": "t_mapping(t_uint256,t_mapping(t_address,t_struct(UserInfo)947_storage))"
							},
							{
								"astId": 992,
								"contract": "contracts/NFTMasterChef.sol:NFTMasterChef",
								"label": "totalAllocPoint",
								"offset": 0,
								"slot": "8",
								"type": "t_uint256"
							},
							{
								"astId": 994,
								"contract": "contracts/NFTMasterChef.sol:NFTMasterChef",
								"label": "startBlock",
								"offset": 0,
								"slot": "9",
								"type": "t_uint256"
							},
							{
								"astId": 998,
								"contract": "contracts/NFTMasterChef.sol:NFTMasterChef",
								"label": "powerBalance",
								"offset": 0,
								"slot": "10",
								"type": "t_mapping(t_address,t_uint256)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_array(t_struct(NFTsInfo)963_storage)dyn_storage": {
								"base": "t_struct(NFTsInfo)963_storage",
								"encoding": "dynamic_array",
								"label": "struct NFTMasterChef.NFTsInfo[]",
								"numberOfBytes": "32"
							},
							"t_array(t_struct(PoolInfo)957_storage)dyn_storage": {
								"base": "t_struct(PoolInfo)957_storage",
								"encoding": "dynamic_array",
								"label": "struct NFTMasterChef.PoolInfo[]",
								"numberOfBytes": "32"
							},
							"t_contract(IERC20)286": {
								"encoding": "inplace",
								"label": "contract IERC20",
								"numberOfBytes": "20"
							},
							"t_contract(IERC721)933": {
								"encoding": "inplace",
								"label": "contract IERC721",
								"numberOfBytes": "20"
							},
							"t_contract(IMigratorChef)927": {
								"encoding": "inplace",
								"label": "contract IMigratorChef",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_struct(UserInfo)947_storage)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => struct NFTMasterChef.UserInfo)",
								"numberOfBytes": "32",
								"value": "t_struct(UserInfo)947_storage"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_uint256,t_mapping(t_address,t_struct(UserInfo)947_storage))": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => mapping(address => struct NFTMasterChef.UserInfo))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_struct(UserInfo)947_storage)"
							},
							"t_struct(NFTsInfo)963_storage": {
								"encoding": "inplace",
								"label": "struct NFTMasterChef.NFTsInfo",
								"members": [
									{
										"astId": 960,
										"contract": "contracts/NFTMasterChef.sol:NFTMasterChef",
										"label": "NFT",
										"offset": 0,
										"slot": "0",
										"type": "t_contract(IERC721)933"
									},
									{
										"astId": 962,
										"contract": "contracts/NFTMasterChef.sol:NFTMasterChef",
										"label": "power",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "64"
							},
							"t_struct(PoolInfo)957_storage": {
								"encoding": "inplace",
								"label": "struct NFTMasterChef.PoolInfo",
								"members": [
									{
										"astId": 950,
										"contract": "contracts/NFTMasterChef.sol:NFTMasterChef",
										"label": "lpToken",
										"offset": 0,
										"slot": "0",
										"type": "t_contract(IERC20)286"
									},
									{
										"astId": 952,
										"contract": "contracts/NFTMasterChef.sol:NFTMasterChef",
										"label": "allocPoint",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									},
									{
										"astId": 954,
										"contract": "contracts/NFTMasterChef.sol:NFTMasterChef",
										"label": "lastRewardBlock",
										"offset": 0,
										"slot": "2",
										"type": "t_uint256"
									},
									{
										"astId": 956,
										"contract": "contracts/NFTMasterChef.sol:NFTMasterChef",
										"label": "accPowerPerShare",
										"offset": 0,
										"slot": "3",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "128"
							},
							"t_struct(UserInfo)947_storage": {
								"encoding": "inplace",
								"label": "struct NFTMasterChef.UserInfo",
								"members": [
									{
										"astId": 944,
										"contract": "contracts/NFTMasterChef.sol:NFTMasterChef",
										"label": "amount",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									},
									{
										"astId": 946,
										"contract": "contracts/NFTMasterChef.sol:NFTMasterChef",
										"label": "rewardDebt",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "64"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"Ownable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/NFTMasterChef.sol\":\"Ownable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/NFTMasterChef.sol\":{\"keccak256\":\"0xaa3f6650bd0d18c974fb49ff47bb742f7e50cb438781764b06a12790d25fd86c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://18152ee0a5fb58d362f6d5ced4ff3dfecf2f8362e3b7eec88b7d44cde630fec6\",\"dweb:/ipfs/QmdtHL4hcWQnvJtfNCiU4Ehbq1P6Wik9QNYCnbMd5nWHkM\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 820,
								"contract": "contracts/NFTMasterChef.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"SafeERC20": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/NFTMasterChef.sol\":16091:19442  library SafeERC20 {\r... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/NFTMasterChef.sol\":16091:19442  library SafeERC20 {\r... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212208a6df180b8dcc3322593c66d196a75e606b93818a8faef0b2622a7c1b2770b8064736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212208a6df180b8dcc3322593c66d196a75e606b93818a8faef0b2622a7c1b2770b8064736f6c63430008070033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP11 PUSH14 0xF180B8DCC3322593C66D196A75E6 MOD 0xB9 CODESIZE XOR 0xA8 STATICCALL 0xEF SIGNEXTEND 0x26 0x22 0xA7 0xC1 0xB2 PUSH24 0xB8064736F6C634300080700330000000000000000000000 ",
							"sourceMap": "16091:3351:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212208a6df180b8dcc3322593c66d196a75e606b93818a8faef0b2622a7c1b2770b8064736f6c63430008070033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP11 PUSH14 0xF180B8DCC3322593C66D196A75E6 MOD 0xB9 CODESIZE XOR 0xA8 STATICCALL 0xEF SIGNEXTEND 0x26 0x22 0xA7 0xC1 0xB2 PUSH24 0xB8064736F6C634300080700330000000000000000000000 ",
							"sourceMap": "16091:3351:0:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"_callOptionalReturn(contract IERC20,bytes memory)": "infinite",
								"safeApprove(contract IERC20,address,uint256)": "infinite",
								"safeDecreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeIncreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeTransfer(contract IERC20,address,uint256)": "infinite",
								"safeTransferFrom(contract IERC20,address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 16091,
									"end": 19442,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 16091,
									"end": 19442,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 16091,
									"end": 19442,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 16091,
									"end": 19442,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 16091,
									"end": 19442,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 16091,
									"end": 19442,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 16091,
									"end": 19442,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 16091,
									"end": 19442,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 16091,
									"end": 19442,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 16091,
									"end": 19442,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 16091,
									"end": 19442,
									"name": "BYTE",
									"source": 0
								},
								{
									"begin": 16091,
									"end": 19442,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 16091,
									"end": 19442,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 16091,
									"end": 19442,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 16091,
									"end": 19442,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 16091,
									"end": 19442,
									"name": "PUSH",
									"source": 0,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 16091,
									"end": 19442,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 16091,
									"end": 19442,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 16091,
									"end": 19442,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 16091,
									"end": 19442,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 16091,
									"end": 19442,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 16091,
									"end": 19442,
									"name": "PUSH",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 16091,
									"end": 19442,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 16091,
									"end": 19442,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 16091,
									"end": 19442,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 16091,
									"end": 19442,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 16091,
									"end": 19442,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 16091,
									"end": 19442,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 16091,
									"end": 19442,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 16091,
									"end": 19442,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 16091,
									"end": 19442,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 16091,
									"end": 19442,
									"name": "MSTORE8",
									"source": 0
								},
								{
									"begin": 16091,
									"end": 19442,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 16091,
									"end": 19442,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 16091,
									"end": 19442,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212208a6df180b8dcc3322593c66d196a75e606b93818a8faef0b2622a7c1b2770b8064736f6c63430008070033",
									".code": [
										{
											"begin": 16091,
											"end": 19442,
											"name": "PUSHDEPLOYADDRESS",
											"source": 0
										},
										{
											"begin": 16091,
											"end": 19442,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 16091,
											"end": 19442,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 16091,
											"end": 19442,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 16091,
											"end": 19442,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16091,
											"end": 19442,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16091,
											"end": 19442,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 16091,
											"end": 19442,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16091,
											"end": 19442,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/NFTMasterChef.sol\":\"SafeERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/NFTMasterChef.sol\":{\"keccak256\":\"0xaa3f6650bd0d18c974fb49ff47bb742f7e50cb438781764b06a12790d25fd86c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://18152ee0a5fb58d362f6d5ced4ff3dfecf2f8362e3b7eec88b7d44cde630fec6\",\"dweb:/ipfs/QmdtHL4hcWQnvJtfNCiU4Ehbq1P6Wik9QNYCnbMd5nWHkM\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"SafeMath": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/NFTMasterChef.sol\":130:4978  library SafeMath {\r... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/NFTMasterChef.sol\":130:4978  library SafeMath {\r... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212202dd2a6b8917f7c2406c894dacd23f1d6b60bb647492f77fde7afbae3c53f391a64736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212202dd2a6b8917f7c2406c894dacd23f1d6b60bb647492f77fde7afbae3c53f391a64736f6c63430008070033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2D 0xD2 0xA6 0xB8 SWAP2 PUSH32 0x7C2406C894DACD23F1D6B60BB647492F77FDE7AFBAE3C53F391A64736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "130:4848:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212202dd2a6b8917f7c2406c894dacd23f1d6b60bb647492f77fde7afbae3c53f391a64736f6c63430008070033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2D 0xD2 0xA6 0xB8 SWAP2 PUSH32 0x7C2406C894DACD23F1D6B60BB647492F77FDE7AFBAE3C53F391A64736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "130:4848:0:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"add(uint256,uint256)": "infinite",
								"div(uint256,uint256)": "infinite",
								"div(uint256,uint256,string memory)": "infinite",
								"mod(uint256,uint256)": "infinite",
								"mod(uint256,uint256,string memory)": "infinite",
								"mul(uint256,uint256)": "infinite",
								"sub(uint256,uint256)": "infinite",
								"sub(uint256,uint256,string memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 130,
									"end": 4978,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 130,
									"end": 4978,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 130,
									"end": 4978,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 130,
									"end": 4978,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 130,
									"end": 4978,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 130,
									"end": 4978,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 130,
									"end": 4978,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 130,
									"end": 4978,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 130,
									"end": 4978,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 130,
									"end": 4978,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 130,
									"end": 4978,
									"name": "BYTE",
									"source": 0
								},
								{
									"begin": 130,
									"end": 4978,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 130,
									"end": 4978,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 130,
									"end": 4978,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 130,
									"end": 4978,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 130,
									"end": 4978,
									"name": "PUSH",
									"source": 0,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 130,
									"end": 4978,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 130,
									"end": 4978,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 130,
									"end": 4978,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 130,
									"end": 4978,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 130,
									"end": 4978,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 130,
									"end": 4978,
									"name": "PUSH",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 130,
									"end": 4978,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 130,
									"end": 4978,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 130,
									"end": 4978,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 130,
									"end": 4978,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 130,
									"end": 4978,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 130,
									"end": 4978,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 130,
									"end": 4978,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 130,
									"end": 4978,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 130,
									"end": 4978,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 130,
									"end": 4978,
									"name": "MSTORE8",
									"source": 0
								},
								{
									"begin": 130,
									"end": 4978,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 130,
									"end": 4978,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 130,
									"end": 4978,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212202dd2a6b8917f7c2406c894dacd23f1d6b60bb647492f77fde7afbae3c53f391a64736f6c63430008070033",
									".code": [
										{
											"begin": 130,
											"end": 4978,
											"name": "PUSHDEPLOYADDRESS",
											"source": 0
										},
										{
											"begin": 130,
											"end": 4978,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 130,
											"end": 4978,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 130,
											"end": 4978,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 130,
											"end": 4978,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 130,
											"end": 4978,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 130,
											"end": 4978,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 130,
											"end": 4978,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 130,
											"end": 4978,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/NFTMasterChef.sol\":\"SafeMath\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/NFTMasterChef.sol\":{\"keccak256\":\"0xaa3f6650bd0d18c974fb49ff47bb742f7e50cb438781764b06a12790d25fd86c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://18152ee0a5fb58d362f6d5ced4ff3dfecf2f8362e3b7eec88b7d44cde630fec6\",\"dweb:/ipfs/QmdtHL4hcWQnvJtfNCiU4Ehbq1P6Wik9QNYCnbMd5nWHkM\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"contracts/NFTMasterChef.sol": {
				"ast": {
					"absolutePath": "contracts/NFTMasterChef.sol",
					"exportedSymbols": {
						"Address": [
							578
						],
						"Context": [
							816
						],
						"IERC20": [
							286
						],
						"IERC721": [
							933
						],
						"IMigratorChef": [
							927
						],
						"NFTMasterChef": [
							2269
						],
						"Ownable": [
							917
						],
						"SafeERC20": [
							797
						],
						"SafeMath": [
							194
						]
					},
					"id": 2270,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "103:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"fullyImplemented": true,
							"id": 194,
							"linearizedBaseContracts": [
								194
							],
							"name": "SafeMath",
							"nameLocation": "138:8:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 26,
										"nodeType": "Block",
										"src": "452:114:0",
										"statements": [
											{
												"assignments": [
													12
												],
												"declarations": [
													{
														"constant": false,
														"id": 12,
														"mutability": "mutable",
														"name": "c",
														"nameLocation": "471:1:0",
														"nodeType": "VariableDeclaration",
														"scope": 26,
														"src": "463:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 11,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "463:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 16,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 15,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 13,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4,
														"src": "475:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 14,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 6,
														"src": "479:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "475:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "463:17:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 20,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 18,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 12,
																"src": "499:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 19,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4,
																"src": "504:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "499:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "536166654d6174683a206164646974696f6e206f766572666c6f77",
															"id": 21,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "507:29:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a",
																"typeString": "literal_string \"SafeMath: addition overflow\""
															},
															"value": "SafeMath: addition overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a",
																"typeString": "literal_string \"SafeMath: addition overflow\""
															}
														],
														"id": 17,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "491:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 22,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "491:46:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 23,
												"nodeType": "ExpressionStatement",
												"src": "491:46:0"
											},
											{
												"expression": {
													"id": 24,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 12,
													"src": "557:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 10,
												"id": 25,
												"nodeType": "Return",
												"src": "550:8:0"
											}
										]
									},
									"documentation": {
										"id": 2,
										"nodeType": "StructuredDocumentation",
										"src": "154:225:0",
										"text": " @dev Returns the addition of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `+` operator.\n Requirements:\n - Addition cannot overflow."
									},
									"id": 27,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nameLocation": "394:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 7,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "406:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 27,
												"src": "398:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "398:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 6,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "417:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 27,
												"src": "409:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 5,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "409:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "397:22:0"
									},
									"returnParameters": {
										"id": 10,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 9,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 27,
												"src": "443:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 8,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "443:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "442:9:0"
									},
									"scope": 194,
									"src": "385:181:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 43,
										"nodeType": "Block",
										"src": "908:69:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 38,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 30,
															"src": "930:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 39,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 32,
															"src": "933:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "536166654d6174683a207375627472616374696f6e206f766572666c6f77",
															"id": 40,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "936:32:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_50b058e9b5320e58880d88223c9801cd9eecdcf90323d5c2318bc1b6b916e862",
																"typeString": "literal_string \"SafeMath: subtraction overflow\""
															},
															"value": "SafeMath: subtraction overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_50b058e9b5320e58880d88223c9801cd9eecdcf90323d5c2318bc1b6b916e862",
																"typeString": "literal_string \"SafeMath: subtraction overflow\""
															}
														],
														"id": 37,
														"name": "sub",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															44,
															72
														],
														"referencedDeclaration": 72,
														"src": "926:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
														}
													},
													"id": 41,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "926:43:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 36,
												"id": 42,
												"nodeType": "Return",
												"src": "919:50:0"
											}
										]
									},
									"documentation": {
										"id": 28,
										"nodeType": "StructuredDocumentation",
										"src": "574:261:0",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting on\n overflow (when the result is negative).\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 44,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "850:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 33,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 30,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "862:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "854:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 29,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "854:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 32,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "873:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "865:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 31,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "865:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "853:22:0"
									},
									"returnParameters": {
										"id": 36,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 35,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "899:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 34,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "899:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "898:9:0"
									},
									"scope": 194,
									"src": "841:136:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 71,
										"nodeType": "Block",
										"src": "1409:97:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 59,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 57,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 49,
																"src": "1428:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 58,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 47,
																"src": "1433:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1428:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 60,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 51,
															"src": "1436:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 56,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1420:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 61,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1420:29:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 62,
												"nodeType": "ExpressionStatement",
												"src": "1420:29:0"
											},
											{
												"assignments": [
													64
												],
												"declarations": [
													{
														"constant": false,
														"id": 64,
														"mutability": "mutable",
														"name": "c",
														"nameLocation": "1468:1:0",
														"nodeType": "VariableDeclaration",
														"scope": 71,
														"src": "1460:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 63,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1460:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 68,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 67,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 65,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 47,
														"src": "1472:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 66,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 49,
														"src": "1476:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1472:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1460:17:0"
											},
											{
												"expression": {
													"id": 69,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 64,
													"src": "1497:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 55,
												"id": 70,
												"nodeType": "Return",
												"src": "1490:8:0"
											}
										]
									},
									"documentation": {
										"id": 45,
										"nodeType": "StructuredDocumentation",
										"src": "985:323:0",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n overflow (when the result is negative).\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow.\n _Available since v2.4.0._"
									},
									"id": 72,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "1323:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 52,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 47,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1335:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 72,
												"src": "1327:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 46,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1327:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 49,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1346:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 72,
												"src": "1338:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 48,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1338:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 51,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "1363:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 72,
												"src": "1349:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 50,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1349:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1326:50:0"
									},
									"returnParameters": {
										"id": 55,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 54,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 72,
												"src": "1400:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 53,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1400:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1399:9:0"
									},
									"scope": 194,
									"src": "1314:192:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 106,
										"nodeType": "Block",
										"src": "1824:404:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 84,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 82,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 75,
														"src": "2060:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 83,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2065:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2060:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 88,
												"nodeType": "IfStatement",
												"src": "2056:47:0",
												"trueBody": {
													"id": 87,
													"nodeType": "Block",
													"src": "2068:35:0",
													"statements": [
														{
															"expression": {
																"hexValue": "30",
																"id": 85,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2090:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 81,
															"id": 86,
															"nodeType": "Return",
															"src": "2083:8:0"
														}
													]
												}
											},
											{
												"assignments": [
													90
												],
												"declarations": [
													{
														"constant": false,
														"id": 90,
														"mutability": "mutable",
														"name": "c",
														"nameLocation": "2123:1:0",
														"nodeType": "VariableDeclaration",
														"scope": 106,
														"src": "2115:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 89,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2115:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 94,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 93,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 91,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 75,
														"src": "2127:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"id": 92,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 77,
														"src": "2131:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2127:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2115:17:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 100,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 98,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 96,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 90,
																	"src": "2151:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 97,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 75,
																	"src": "2155:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2151:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 99,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 77,
																"src": "2160:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2151:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77",
															"id": 101,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2163:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3",
																"typeString": "literal_string \"SafeMath: multiplication overflow\""
															},
															"value": "SafeMath: multiplication overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3",
																"typeString": "literal_string \"SafeMath: multiplication overflow\""
															}
														],
														"id": 95,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2143:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 102,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2143:56:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 103,
												"nodeType": "ExpressionStatement",
												"src": "2143:56:0"
											},
											{
												"expression": {
													"id": 104,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 90,
													"src": "2219:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 81,
												"id": 105,
												"nodeType": "Return",
												"src": "2212:8:0"
											}
										]
									},
									"documentation": {
										"id": 73,
										"nodeType": "StructuredDocumentation",
										"src": "1514:237:0",
										"text": " @dev Returns the multiplication of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `*` operator.\n Requirements:\n - Multiplication cannot overflow."
									},
									"id": 107,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mul",
									"nameLocation": "1766:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 78,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 75,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1778:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 107,
												"src": "1770:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 74,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1770:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 77,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1789:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 107,
												"src": "1781:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 76,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1781:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1769:22:0"
									},
									"returnParameters": {
										"id": 81,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 80,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 107,
												"src": "1815:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 79,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1815:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1814:9:0"
									},
									"scope": 194,
									"src": "1757:471:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 123,
										"nodeType": "Block",
										"src": "2763:65:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 118,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 110,
															"src": "2785:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 119,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 112,
															"src": "2788:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "536166654d6174683a206469766973696f6e206279207a65726f",
															"id": 120,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2791:28:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5b7cc70dda4dc2143e5adb63bd5d1f349504f461dbdfd9bc76fac1f8ca6d019f",
																"typeString": "literal_string \"SafeMath: division by zero\""
															},
															"value": "SafeMath: division by zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_5b7cc70dda4dc2143e5adb63bd5d1f349504f461dbdfd9bc76fac1f8ca6d019f",
																"typeString": "literal_string \"SafeMath: division by zero\""
															}
														],
														"id": 117,
														"name": "div",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															124,
															152
														],
														"referencedDeclaration": 152,
														"src": "2781:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
														}
													},
													"id": 121,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2781:39:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 116,
												"id": 122,
												"nodeType": "Return",
												"src": "2774:46:0"
											}
										]
									},
									"documentation": {
										"id": 108,
										"nodeType": "StructuredDocumentation",
										"src": "2236:454:0",
										"text": " @dev Returns the integer division of two unsigned integers. Reverts on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 124,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "2705:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 113,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 110,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2717:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 124,
												"src": "2709:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 109,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2709:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 112,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2728:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 124,
												"src": "2720:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 111,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2720:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2708:22:0"
									},
									"returnParameters": {
										"id": 116,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 115,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 124,
												"src": "2754:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 114,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2754:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2753:9:0"
									},
									"scope": 194,
									"src": "2696:132:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 151,
										"nodeType": "Block",
										"src": "3453:250:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 139,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 137,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 129,
																"src": "3539:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 138,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3543:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "3539:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 140,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 131,
															"src": "3546:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 136,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3531:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 141,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3531:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 142,
												"nodeType": "ExpressionStatement",
												"src": "3531:28:0"
											},
											{
												"assignments": [
													144
												],
												"declarations": [
													{
														"constant": false,
														"id": 144,
														"mutability": "mutable",
														"name": "c",
														"nameLocation": "3578:1:0",
														"nodeType": "VariableDeclaration",
														"scope": 151,
														"src": "3570:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 143,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3570:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 148,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 147,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 145,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 127,
														"src": "3582:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 146,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 129,
														"src": "3586:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3582:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3570:17:0"
											},
											{
												"expression": {
													"id": 149,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 144,
													"src": "3694:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 135,
												"id": 150,
												"nodeType": "Return",
												"src": "3687:8:0"
											}
										]
									},
									"documentation": {
										"id": 125,
										"nodeType": "StructuredDocumentation",
										"src": "2836:516:0",
										"text": " @dev Returns the integer division of two unsigned integers. Reverts with custom message on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero.\n _Available since v2.4.0._"
									},
									"id": 152,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "3367:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 132,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 127,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3379:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 152,
												"src": "3371:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 126,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3371:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 129,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3390:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 152,
												"src": "3382:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 128,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3382:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 131,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "3407:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 152,
												"src": "3393:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 130,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3393:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3370:50:0"
									},
									"returnParameters": {
										"id": 135,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 134,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 152,
												"src": "3444:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 133,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3444:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3443:9:0"
									},
									"scope": 194,
									"src": "3358:345:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 168,
										"nodeType": "Block",
										"src": "4227:63:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 163,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 155,
															"src": "4249:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 164,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 157,
															"src": "4252:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "536166654d6174683a206d6f64756c6f206279207a65726f",
															"id": 165,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4255:26:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_726e51f7b81fce0a68f5f214f445e275313b20b1633f08ce954ee39abf8d7832",
																"typeString": "literal_string \"SafeMath: modulo by zero\""
															},
															"value": "SafeMath: modulo by zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_726e51f7b81fce0a68f5f214f445e275313b20b1633f08ce954ee39abf8d7832",
																"typeString": "literal_string \"SafeMath: modulo by zero\""
															}
														],
														"id": 162,
														"name": "mod",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															169,
															193
														],
														"referencedDeclaration": 193,
														"src": "4245:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
														}
													},
													"id": 166,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4245:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 161,
												"id": 167,
												"nodeType": "Return",
												"src": "4238:44:0"
											}
										]
									},
									"documentation": {
										"id": 153,
										"nodeType": "StructuredDocumentation",
										"src": "3711:443:0",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n Reverts when dividing by zero.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 169,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "4169:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 158,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 155,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "4181:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 169,
												"src": "4173:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 154,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4173:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 157,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "4192:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 169,
												"src": "4184:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 156,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4184:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4172:22:0"
									},
									"returnParameters": {
										"id": 161,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 160,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 169,
												"src": "4218:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 159,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4218:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4217:9:0"
									},
									"scope": 194,
									"src": "4160:130:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 192,
										"nodeType": "Block",
										"src": "4904:71:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 184,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 182,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 174,
																"src": "4923:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"hexValue": "30",
																"id": 183,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4928:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "4923:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 185,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 176,
															"src": "4931:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 181,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4915:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 186,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4915:29:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 187,
												"nodeType": "ExpressionStatement",
												"src": "4915:29:0"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 190,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 188,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 172,
														"src": "4962:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"id": 189,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 174,
														"src": "4966:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4962:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 180,
												"id": 191,
												"nodeType": "Return",
												"src": "4955:12:0"
											}
										]
									},
									"documentation": {
										"id": 170,
										"nodeType": "StructuredDocumentation",
										"src": "4298:505:0",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n Reverts with custom message when dividing by zero.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero.\n _Available since v2.4.0._"
									},
									"id": 193,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "4818:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 177,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 172,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "4830:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 193,
												"src": "4822:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 171,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4822:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 174,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "4841:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 193,
												"src": "4833:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 173,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4833:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 176,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "4858:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 193,
												"src": "4844:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 175,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "4844:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4821:50:0"
									},
									"returnParameters": {
										"id": 180,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 179,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 193,
												"src": "4895:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 178,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4895:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4894:9:0"
									},
									"scope": 194,
									"src": "4809:166:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2270,
							"src": "130:4848:0",
							"usedErrors": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 286,
							"linearizedBaseContracts": [
								286
							],
							"name": "IERC20",
							"nameLocation": "4992:6:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 195,
										"nodeType": "StructuredDocumentation",
										"src": "5006:68:0",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 200,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "5089:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 196,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5100:2:0"
									},
									"returnParameters": {
										"id": 199,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 198,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 200,
												"src": "5126:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 197,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5126:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5125:9:0"
									},
									"scope": 286,
									"src": "5080:55:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 201,
										"nodeType": "StructuredDocumentation",
										"src": "5143:74:0",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 208,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "5232:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 204,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 203,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "5250:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 208,
												"src": "5242:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 202,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5242:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5241:17:0"
									},
									"returnParameters": {
										"id": 207,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 206,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 208,
												"src": "5282:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 205,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5282:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5281:9:0"
									},
									"scope": 286,
									"src": "5223:68:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 209,
										"nodeType": "StructuredDocumentation",
										"src": "5299:215:0",
										"text": " @dev Moves `amount` tokens from the caller's account to `recipient`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 218,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "5529:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 214,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 211,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "5546:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 218,
												"src": "5538:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 210,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5538:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 213,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "5565:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 218,
												"src": "5557:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 212,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5557:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5537:35:0"
									},
									"returnParameters": {
										"id": 217,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 216,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 218,
												"src": "5591:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 215,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5591:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5590:6:0"
									},
									"scope": 286,
									"src": "5520:77:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 219,
										"nodeType": "StructuredDocumentation",
										"src": "5605:270:0",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 228,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "5890:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 224,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 221,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "5908:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 228,
												"src": "5900:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 220,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5900:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 223,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "5923:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 228,
												"src": "5915:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 222,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5915:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5899:32:0"
									},
									"returnParameters": {
										"id": 227,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 226,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 228,
												"src": "5955:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 225,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5955:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5954:9:0"
									},
									"scope": 286,
									"src": "5881:83:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 229,
										"nodeType": "StructuredDocumentation",
										"src": "5972:655:0",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 238,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "6642:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 234,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 231,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "6658:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 238,
												"src": "6650:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 230,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6650:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 233,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "6675:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 238,
												"src": "6667:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 232,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6667:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6649:33:0"
									},
									"returnParameters": {
										"id": 237,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 236,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 238,
												"src": "6701:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 235,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6701:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6700:6:0"
									},
									"scope": 286,
									"src": "6633:74:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "40c10f19",
									"id": 247,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "mint",
									"nameLocation": "6724:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 243,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 240,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "6737:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 247,
												"src": "6729:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 239,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6729:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 242,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "6754:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 247,
												"src": "6746:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 241,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6746:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6728:33:0"
									},
									"returnParameters": {
										"id": 246,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 245,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 247,
												"src": "6780:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 244,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6780:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6779:6:0"
									},
									"scope": 286,
									"src": "6715:71:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 248,
										"nodeType": "StructuredDocumentation",
										"src": "6794:304:0",
										"text": " @dev Moves `amount` tokens from `sender` to `recipient` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 259,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "7113:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 255,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 250,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "7144:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 259,
												"src": "7136:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 249,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7136:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 252,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "7169:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 259,
												"src": "7161:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 251,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7161:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 254,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "7197:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 259,
												"src": "7189:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 253,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7189:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7125:85:0"
									},
									"returnParameters": {
										"id": 258,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 257,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 259,
												"src": "7229:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 256,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7229:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7228:6:0"
									},
									"scope": 286,
									"src": "7104:131:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 260,
										"nodeType": "StructuredDocumentation",
										"src": "7243:163:0",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"id": 268,
									"name": "Transfer",
									"nameLocation": "7418:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 267,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 262,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "7443:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 268,
												"src": "7427:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 261,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7427:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 264,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "7465:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 268,
												"src": "7449:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 263,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7449:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 266,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "7477:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 268,
												"src": "7469:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 265,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7469:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7426:57:0"
									},
									"src": "7412:72:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 269,
										"nodeType": "StructuredDocumentation",
										"src": "7492:151:0",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"id": 277,
									"name": "Approval",
									"nameLocation": "7655:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 276,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 271,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "7680:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 277,
												"src": "7664:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 270,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7664:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 273,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "7703:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 277,
												"src": "7687:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 272,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7687:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 275,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "7720:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 277,
												"src": "7712:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 274,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7712:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7663:63:0"
									},
									"src": "7649:78:0"
								},
								{
									"anonymous": false,
									"id": 285,
									"name": "Mint",
									"nameLocation": "7741:4:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 284,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 279,
												"indexed": true,
												"mutability": "mutable",
												"name": "minter",
												"nameLocation": "7762:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 285,
												"src": "7746:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 278,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7746:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 281,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "7786:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 285,
												"src": "7770:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 280,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7770:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 283,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "7798:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 285,
												"src": "7790:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 282,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7790:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7745:60:0"
									},
									"src": "7735:71:0"
								}
							],
							"scope": 2270,
							"src": "4982:2827:0",
							"usedErrors": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"fullyImplemented": true,
							"id": 578,
							"linearizedBaseContracts": [
								578
							],
							"name": "Address",
							"nameLocation": "7821:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 300,
										"nodeType": "Block",
										"src": "8887:260:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 298,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 294,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 289,
																"src": "9116:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 295,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "9116:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 296,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "9116:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 297,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "9138:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "9116:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 293,
												"id": 299,
												"nodeType": "Return",
												"src": "9109:30:0"
											}
										]
									},
									"documentation": {
										"id": 287,
										"nodeType": "StructuredDocumentation",
										"src": "7836:979:0",
										"text": " @dev Returns true if `account` is a contract.\n [IMPORTANT]\n ====\n It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract.\n Among others, `isContract` will return false for the following\n types of addresses:\n  - an externally-owned account\n  - a contract in construction\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n ====\n [IMPORTANT]\n ====\n You shouldn't rely on `isContract` to protect against flash loan attacks!\n Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n constructor.\n ===="
									},
									"id": 301,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isContract",
									"nameLocation": "8830:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 290,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 289,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "8849:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 301,
												"src": "8841:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 288,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8841:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8840:17:0"
									},
									"returnParameters": {
										"id": 293,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 292,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 301,
												"src": "8881:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 291,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "8881:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8880:6:0"
									},
									"scope": 578,
									"src": "8821:326:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 334,
										"nodeType": "Block",
										"src": "10153:246:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 316,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 312,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "10180:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$578",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$578",
																				"typeString": "library Address"
																			}
																		],
																		"id": 311,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "10172:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 310,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "10172:7:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 313,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "10172:13:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 314,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "10172:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 315,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 306,
																"src": "10197:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10172:31:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e6365",
															"id": 317,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10205:31:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															},
															"value": "Address: insufficient balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															}
														],
														"id": 309,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "10164:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 318,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10164:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 319,
												"nodeType": "ExpressionStatement",
												"src": "10164:73:0"
											},
											{
												"assignments": [
													321,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 321,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "10256:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 334,
														"src": "10251:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 320,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "10251:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 328,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 326,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10299:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"id": 322,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 304,
																"src": "10269:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 323,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "10269:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 325,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 324,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 306,
																"src": "10291:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "10269:29:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 327,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10269:33:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10250:52:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 330,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 321,
															"src": "10321:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564",
															"id": 331,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10330:60:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															},
															"value": "Address: unable to send value, recipient may have reverted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															}
														],
														"id": 329,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "10313:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 332,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10313:78:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 333,
												"nodeType": "ExpressionStatement",
												"src": "10313:78:0"
											}
										]
									},
									"documentation": {
										"id": 302,
										"nodeType": "StructuredDocumentation",
										"src": "9155:921:0",
										"text": " @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."
									},
									"id": 335,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendValue",
									"nameLocation": "10091:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 307,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 304,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "10117:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 335,
												"src": "10101:25:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 303,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10101:15:0",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 306,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "10136:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 335,
												"src": "10128:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 305,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10128:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10100:43:0"
									},
									"returnParameters": {
										"id": 308,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10153:0:0"
									},
									"scope": 578,
									"src": "10082:317:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 351,
										"nodeType": "Block",
										"src": "11250:86:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 346,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 338,
															"src": "11281:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 347,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 340,
															"src": "11289:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 348,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11295:32:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															},
															"value": "Address: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															}
														],
														"id": 345,
														"name": "functionCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															352,
															372
														],
														"referencedDeclaration": 372,
														"src": "11268:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 349,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11268:60:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 344,
												"id": 350,
												"nodeType": "Return",
												"src": "11261:67:0"
											}
										]
									},
									"documentation": {
										"id": 336,
										"nodeType": "StructuredDocumentation",
										"src": "10407:748:0",
										"text": " @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason, it is bubbled up by this\n function (like regular Solidity function calls).\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert.\n _Available since v3.1._"
									},
									"id": 352,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "11170:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 341,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 338,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "11191:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 352,
												"src": "11183:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 337,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11183:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 340,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "11212:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 352,
												"src": "11199:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 339,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "11199:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11182:35:0"
									},
									"returnParameters": {
										"id": 344,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 343,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 352,
												"src": "11236:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 342,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "11236:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11235:14:0"
									},
									"scope": 578,
									"src": "11161:175:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 371,
										"nodeType": "Block",
										"src": "11717:78:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 365,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 355,
															"src": "11757:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 366,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 357,
															"src": "11765:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 367,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11771:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"id": 368,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 359,
															"src": "11774:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 364,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															392,
															442
														],
														"referencedDeclaration": 442,
														"src": "11735:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 369,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11735:52:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 363,
												"id": 370,
												"nodeType": "Return",
												"src": "11728:59:0"
											}
										]
									},
									"documentation": {
										"id": 353,
										"nodeType": "StructuredDocumentation",
										"src": "11344:216:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 372,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "11575:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 360,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 355,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "11606:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 372,
												"src": "11598:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 354,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11598:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 357,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "11636:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 372,
												"src": "11623:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 356,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "11623:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 359,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "11665:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 372,
												"src": "11651:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 358,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "11651:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11587:97:0"
									},
									"returnParameters": {
										"id": 363,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 362,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 372,
												"src": "11703:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 361,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "11703:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11702:14:0"
									},
									"scope": 578,
									"src": "11566:229:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 391,
										"nodeType": "Block",
										"src": "12317:113:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 385,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 375,
															"src": "12357:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 386,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 377,
															"src": "12365:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 387,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 379,
															"src": "12371:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564",
															"id": 388,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "12378:43:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															},
															"value": "Address: low-level call with value failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															}
														],
														"id": 384,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															392,
															442
														],
														"referencedDeclaration": 442,
														"src": "12335:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 389,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12335:87:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 383,
												"id": 390,
												"nodeType": "Return",
												"src": "12328:94:0"
											}
										]
									},
									"documentation": {
										"id": 373,
										"nodeType": "StructuredDocumentation",
										"src": "11803:361:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`.\n _Available since v3.1._"
									},
									"id": 392,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "12179:21:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 380,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 375,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "12219:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 392,
												"src": "12211:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 374,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12211:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 377,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "12249:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 392,
												"src": "12236:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 376,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "12236:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 379,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "12272:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 392,
												"src": "12264:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 378,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12264:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12200:84:0"
									},
									"returnParameters": {
										"id": 383,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 382,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 392,
												"src": "12303:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 381,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "12303:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12302:14:0"
									},
									"scope": 578,
									"src": "12170:260:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 441,
										"nodeType": "Block",
										"src": "12870:326:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 413,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 409,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "12897:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$578",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$578",
																				"typeString": "library Address"
																			}
																		],
																		"id": 408,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "12889:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 407,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "12889:7:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 410,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "12889:13:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 411,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "12889:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 412,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 399,
																"src": "12914:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "12889:30:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c",
															"id": 414,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "12921:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															},
															"value": "Address: insufficient balance for call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															}
														],
														"id": 406,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "12881:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 415,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12881:81:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 416,
												"nodeType": "ExpressionStatement",
												"src": "12881:81:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 419,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 395,
																	"src": "12992:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 418,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 301,
																"src": "12981:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 420,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "12981:18:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 421,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "13001:31:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																"typeString": "literal_string \"Address: call to non-contract\""
															},
															"value": "Address: call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																"typeString": "literal_string \"Address: call to non-contract\""
															}
														],
														"id": 417,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "12973:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 422,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12973:60:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 423,
												"nodeType": "ExpressionStatement",
												"src": "12973:60:0"
											},
											{
												"assignments": [
													425,
													427
												],
												"declarations": [
													{
														"constant": false,
														"id": 425,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "13052:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 441,
														"src": "13047:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 424,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "13047:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 427,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "13074:10:0",
														"nodeType": "VariableDeclaration",
														"scope": 441,
														"src": "13061:23:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 426,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "13061:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 434,
												"initialValue": {
													"arguments": [
														{
															"id": 432,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 397,
															"src": "13114:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 428,
																"name": "target",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 395,
																"src": "13088:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 429,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "13088:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 431,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 430,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 399,
																"src": "13107:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "13088:25:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 433,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13088:31:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "13046:73:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 436,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 425,
															"src": "13154:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 437,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 427,
															"src": "13163:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 438,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 401,
															"src": "13175:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 435,
														"name": "verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 577,
														"src": "13137:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 439,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13137:51:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 405,
												"id": 440,
												"nodeType": "Return",
												"src": "13130:58:0"
											}
										]
									},
									"documentation": {
										"id": 393,
										"nodeType": "StructuredDocumentation",
										"src": "12438:242:0",
										"text": " @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n with `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 442,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "12695:21:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 402,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 395,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "12735:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 442,
												"src": "12727:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 394,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12727:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 397,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "12765:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 442,
												"src": "12752:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 396,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "12752:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 399,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "12788:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 442,
												"src": "12780:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 398,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12780:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 401,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "12818:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 442,
												"src": "12804:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 400,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "12804:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12716:121:0"
									},
									"returnParameters": {
										"id": 405,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 404,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 442,
												"src": "12856:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 403,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "12856:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12855:14:0"
									},
									"scope": 578,
									"src": "12686:510:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 458,
										"nodeType": "Block",
										"src": "13481:99:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 453,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 445,
															"src": "13518:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 454,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 447,
															"src": "13526:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c207374617469632063616c6c206661696c6564",
															"id": 455,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "13532:39:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															},
															"value": "Address: low-level static call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															}
														],
														"id": 452,
														"name": "functionStaticCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															459,
															494
														],
														"referencedDeclaration": 494,
														"src": "13499:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 456,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13499:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 451,
												"id": 457,
												"nodeType": "Return",
												"src": "13492:80:0"
											}
										]
									},
									"documentation": {
										"id": 443,
										"nodeType": "StructuredDocumentation",
										"src": "13204:171:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 459,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "13390:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 448,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 445,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "13417:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 459,
												"src": "13409:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 444,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13409:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 447,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "13438:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 459,
												"src": "13425:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 446,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "13425:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13408:35:0"
									},
									"returnParameters": {
										"id": 451,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 450,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 459,
												"src": "13467:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 449,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "13467:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13466:14:0"
									},
									"scope": 578,
									"src": "13381:199:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 493,
										"nodeType": "Block",
										"src": "13934:233:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 473,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 462,
																	"src": "13964:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 472,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 301,
																"src": "13953:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 474,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "13953:18:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a207374617469632063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 475,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "13973:38:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c79cc78e4f16ce3933a42b84c73868f93bb4a59c031a0acf576679de98c608a9",
																"typeString": "literal_string \"Address: static call to non-contract\""
															},
															"value": "Address: static call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c79cc78e4f16ce3933a42b84c73868f93bb4a59c031a0acf576679de98c608a9",
																"typeString": "literal_string \"Address: static call to non-contract\""
															}
														],
														"id": 471,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "13945:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 476,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13945:67:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 477,
												"nodeType": "ExpressionStatement",
												"src": "13945:67:0"
											},
											{
												"assignments": [
													479,
													481
												],
												"declarations": [
													{
														"constant": false,
														"id": 479,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "14031:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 493,
														"src": "14026:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 478,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "14026:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 481,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "14053:10:0",
														"nodeType": "VariableDeclaration",
														"scope": 493,
														"src": "14040:23:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 480,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "14040:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 486,
												"initialValue": {
													"arguments": [
														{
															"id": 484,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 464,
															"src": "14085:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 482,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 462,
															"src": "14067:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 483,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "staticcall",
														"nodeType": "MemberAccess",
														"src": "14067:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) view returns (bool,bytes memory)"
														}
													},
													"id": 485,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14067:23:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "14025:65:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 488,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 479,
															"src": "14125:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 489,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 481,
															"src": "14134:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 490,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 466,
															"src": "14146:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 487,
														"name": "verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 577,
														"src": "14108:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 491,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14108:51:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 470,
												"id": 492,
												"nodeType": "Return",
												"src": "14101:58:0"
											}
										]
									},
									"documentation": {
										"id": 460,
										"nodeType": "StructuredDocumentation",
										"src": "13588:178:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 494,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "13781:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 467,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 462,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "13818:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 494,
												"src": "13810:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 461,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13810:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 464,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "13848:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 494,
												"src": "13835:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 463,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "13835:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 466,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "13877:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 494,
												"src": "13863:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 465,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "13863:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13799:97:0"
									},
									"returnParameters": {
										"id": 470,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 469,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 494,
												"src": "13920:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 468,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "13920:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13919:14:0"
									},
									"scope": 578,
									"src": "13772:395:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 510,
										"nodeType": "Block",
										"src": "14451:103:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 505,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 497,
															"src": "14490:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 506,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 499,
															"src": "14498:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564",
															"id": 507,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "14504:41:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															},
															"value": "Address: low-level delegate call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															}
														],
														"id": 504,
														"name": "functionDelegateCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															511,
															546
														],
														"referencedDeclaration": 546,
														"src": "14469:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 508,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14469:77:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 503,
												"id": 509,
												"nodeType": "Return",
												"src": "14462:84:0"
											}
										]
									},
									"documentation": {
										"id": 495,
										"nodeType": "StructuredDocumentation",
										"src": "14175:173:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 511,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "14363:20:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 500,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 497,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "14392:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 511,
												"src": "14384:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 496,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14384:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 499,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "14413:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 511,
												"src": "14400:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 498,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "14400:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14383:35:0"
									},
									"returnParameters": {
										"id": 503,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 502,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 511,
												"src": "14437:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 501,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "14437:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14436:14:0"
									},
									"scope": 578,
									"src": "14354:200:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 545,
										"nodeType": "Block",
										"src": "14907:237:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 525,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 514,
																	"src": "14937:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 524,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 301,
																"src": "14926:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 526,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "14926:18:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 527,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "14946:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520",
																"typeString": "literal_string \"Address: delegate call to non-contract\""
															},
															"value": "Address: delegate call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520",
																"typeString": "literal_string \"Address: delegate call to non-contract\""
															}
														],
														"id": 523,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "14918:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 528,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14918:69:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 529,
												"nodeType": "ExpressionStatement",
												"src": "14918:69:0"
											},
											{
												"assignments": [
													531,
													533
												],
												"declarations": [
													{
														"constant": false,
														"id": 531,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "15006:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 545,
														"src": "15001:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 530,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "15001:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 533,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "15028:10:0",
														"nodeType": "VariableDeclaration",
														"scope": 545,
														"src": "15015:23:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 532,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "15015:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 538,
												"initialValue": {
													"arguments": [
														{
															"id": 536,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 516,
															"src": "15062:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 534,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 514,
															"src": "15042:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 535,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "delegatecall",
														"nodeType": "MemberAccess",
														"src": "15042:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) returns (bool,bytes memory)"
														}
													},
													"id": 537,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15042:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "15000:67:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 540,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 531,
															"src": "15102:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 541,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 533,
															"src": "15111:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 542,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 518,
															"src": "15123:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 539,
														"name": "verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 577,
														"src": "15085:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 543,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15085:51:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 522,
												"id": 544,
												"nodeType": "Return",
												"src": "15078:58:0"
											}
										]
									},
									"documentation": {
										"id": 512,
										"nodeType": "StructuredDocumentation",
										"src": "14562:180:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 546,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "14757:20:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 519,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 514,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "14796:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 546,
												"src": "14788:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 513,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14788:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 516,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "14826:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 546,
												"src": "14813:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 515,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "14813:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 518,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "14855:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 546,
												"src": "14841:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 517,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "14841:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14777:97:0"
									},
									"returnParameters": {
										"id": 522,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 521,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 546,
												"src": "14893:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 520,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "14893:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14892:14:0"
									},
									"scope": 578,
									"src": "14748:396:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 576,
										"nodeType": "Block",
										"src": "15536:548:0",
										"statements": [
											{
												"condition": {
													"id": 558,
													"name": "success",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 549,
													"src": "15551:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 574,
													"nodeType": "Block",
													"src": "15610:467:0",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 565,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 562,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 551,
																		"src": "15696:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 563,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "15696:17:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 564,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "15716:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "15696:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 572,
																"nodeType": "Block",
																"src": "16011:55:0",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 569,
																					"name": "errorMessage",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 553,
																					"src": "16037:12:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				],
																				"id": 568,
																				"name": "revert",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					4294967277,
																					4294967277
																				],
																				"referencedDeclaration": 4294967277,
																				"src": "16030:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																					"typeString": "function (string memory) pure"
																				}
																			},
																			"id": 570,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "16030:20:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 571,
																		"nodeType": "ExpressionStatement",
																		"src": "16030:20:0"
																	}
																]
															},
															"id": 573,
															"nodeType": "IfStatement",
															"src": "15692:374:0",
															"trueBody": {
																"id": 567,
																"nodeType": "Block",
																"src": "15719:286:0",
																"statements": [
																	{
																		"AST": {
																			"nodeType": "YulBlock",
																			"src": "15842:148:0",
																			"statements": [
																				{
																					"nodeType": "YulVariableDeclaration",
																					"src": "15865:40:0",
																					"value": {
																						"arguments": [
																							{
																								"name": "returndata",
																								"nodeType": "YulIdentifier",
																								"src": "15894:10:0"
																							}
																						],
																						"functionName": {
																							"name": "mload",
																							"nodeType": "YulIdentifier",
																							"src": "15888:5:0"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "15888:17:0"
																					},
																					"variables": [
																						{
																							"name": "returndata_size",
																							"nodeType": "YulTypedName",
																							"src": "15869:15:0",
																							"type": ""
																						}
																					]
																				},
																				{
																					"expression": {
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "15938:2:0",
																										"type": "",
																										"value": "32"
																									},
																									{
																										"name": "returndata",
																										"nodeType": "YulIdentifier",
																										"src": "15942:10:0"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "15934:3:0"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "15934:19:0"
																							},
																							{
																								"name": "returndata_size",
																								"nodeType": "YulIdentifier",
																								"src": "15955:15:0"
																							}
																						],
																						"functionName": {
																							"name": "revert",
																							"nodeType": "YulIdentifier",
																							"src": "15927:6:0"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "15927:44:0"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "15927:44:0"
																				}
																			]
																		},
																		"evmVersion": "london",
																		"externalReferences": [
																			{
																				"declaration": 551,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "15894:10:0",
																				"valueSize": 1
																			},
																			{
																				"declaration": 551,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "15942:10:0",
																				"valueSize": 1
																			}
																		],
																		"id": 566,
																		"nodeType": "InlineAssembly",
																		"src": "15833:157:0"
																	}
																]
															}
														}
													]
												},
												"id": 575,
												"nodeType": "IfStatement",
												"src": "15547:530:0",
												"trueBody": {
													"id": 561,
													"nodeType": "Block",
													"src": "15560:44:0",
													"statements": [
														{
															"expression": {
																"id": 559,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 551,
																"src": "15582:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 557,
															"id": 560,
															"nodeType": "Return",
															"src": "15575:17:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 547,
										"nodeType": "StructuredDocumentation",
										"src": "15152:214:0",
										"text": " @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\n revert reason using the provided one.\n _Available since v4.3._"
									},
									"id": 577,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResult",
									"nameLocation": "15381:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 554,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 549,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "15413:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 577,
												"src": "15408:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 548,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "15408:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 551,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "15444:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 577,
												"src": "15431:23:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 550,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "15431:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 553,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "15479:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 577,
												"src": "15465:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 552,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "15465:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15397:101:0"
									},
									"returnParameters": {
										"id": 557,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 556,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 577,
												"src": "15522:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 555,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "15522:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15521:14:0"
									},
									"scope": 578,
									"src": "15372:712:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2270,
							"src": "7813:8274:0",
							"usedErrors": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"fullyImplemented": true,
							"id": 797,
							"linearizedBaseContracts": [
								797
							],
							"name": "SafeERC20",
							"nameLocation": "16099:9:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 581,
									"libraryName": {
										"id": 579,
										"name": "Address",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 578,
										"src": "16122:7:0"
									},
									"nodeType": "UsingForDirective",
									"src": "16116:26:0",
									"typeName": {
										"id": 580,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "16134:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									}
								},
								{
									"body": {
										"id": 603,
										"nodeType": "Block",
										"src": "16256:105:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 592,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 584,
															"src": "16287:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$286",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 595,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 584,
																			"src": "16317:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$286",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 596,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "transfer",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 218,
																		"src": "16317:14:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 597,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "16317:23:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 598,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 586,
																	"src": "16342:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 599,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 588,
																	"src": "16346:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 593,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "16294:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 594,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "16294:22:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 600,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "16294:58:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$286",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 591,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 796,
														"src": "16267:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$286_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 601,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16267:86:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 602,
												"nodeType": "ExpressionStatement",
												"src": "16267:86:0"
											}
										]
									},
									"id": 604,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransfer",
									"nameLocation": "16159:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 589,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 584,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "16189:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 604,
												"src": "16182:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$286",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 583,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 582,
														"name": "IERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 286,
														"src": "16182:6:0"
													},
													"referencedDeclaration": 286,
													"src": "16182:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$286",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 586,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "16213:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 604,
												"src": "16205:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 585,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16205:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 588,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "16234:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 604,
												"src": "16226:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 587,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16226:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16171:75:0"
									},
									"returnParameters": {
										"id": 590,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "16256:0:0"
									},
									"scope": 797,
									"src": "16150:211:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 629,
										"nodeType": "Block",
										"src": "16502:115:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 617,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 607,
															"src": "16533:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$286",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 620,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 607,
																			"src": "16563:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$286",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 621,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "transferFrom",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 259,
																		"src": "16563:18:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,address,uint256) external returns (bool)"
																		}
																	},
																	"id": 622,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "16563:27:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 623,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 609,
																	"src": "16592:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 624,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 611,
																	"src": "16598:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 625,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 613,
																	"src": "16602:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 618,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "16540:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 619,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "16540:22:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 626,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "16540:68:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$286",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 616,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 796,
														"src": "16513:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$286_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 627,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16513:96:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 628,
												"nodeType": "ExpressionStatement",
												"src": "16513:96:0"
											}
										]
									},
									"id": 630,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "16378:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 614,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 607,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "16412:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 630,
												"src": "16405:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$286",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 606,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 605,
														"name": "IERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 286,
														"src": "16405:6:0"
													},
													"referencedDeclaration": 286,
													"src": "16405:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$286",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 609,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "16436:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 630,
												"src": "16428:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 608,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16428:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 611,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "16459:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 630,
												"src": "16451:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 610,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16451:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 613,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "16480:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 630,
												"src": "16472:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 612,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16472:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16394:98:0"
									},
									"returnParameters": {
										"id": 615,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "16502:0:0"
									},
									"scope": 797,
									"src": "16369:248:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 673,
										"nodeType": "Block",
										"src": "16996:506:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 657,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 644,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 642,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 638,
																			"src": "17250:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 643,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "17259:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "17250:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 645,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "17249:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 655,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"id": 650,
																							"name": "this",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 4294967268,
																							"src": "17290:4:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_contract$_SafeERC20_$797",
																								"typeString": "library SafeERC20"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_contract$_SafeERC20_$797",
																								"typeString": "library SafeERC20"
																							}
																						],
																						"id": 649,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "17282:7:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_address_$",
																							"typeString": "type(address)"
																						},
																						"typeName": {
																							"id": 648,
																							"name": "address",
																							"nodeType": "ElementaryTypeName",
																							"src": "17282:7:0",
																							"typeDescriptions": {}
																						}
																					},
																					"id": 651,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "17282:13:0",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 652,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 636,
																					"src": "17297:7:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"expression": {
																					"id": 646,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 634,
																					"src": "17266:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC20_$286",
																						"typeString": "contract IERC20"
																					}
																				},
																				"id": 647,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "allowance",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 228,
																				"src": "17266:15:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																					"typeString": "function (address,address) view external returns (uint256)"
																				}
																			},
																			"id": 653,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "17266:39:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 654,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "17309:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "17266:44:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 656,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "17265:46:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "17249:62:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f20746f206e6f6e2d7a65726f20616c6c6f77616e6365",
															"id": 658,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "17326:56:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25",
																"typeString": "literal_string \"SafeERC20: approve from non-zero to non-zero allowance\""
															},
															"value": "SafeERC20: approve from non-zero to non-zero allowance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25",
																"typeString": "literal_string \"SafeERC20: approve from non-zero to non-zero allowance\""
															}
														],
														"id": 641,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "17227:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 659,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17227:166:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 660,
												"nodeType": "ExpressionStatement",
												"src": "17227:166:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 662,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 634,
															"src": "17424:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$286",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 665,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 634,
																			"src": "17454:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$286",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 666,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "approve",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 238,
																		"src": "17454:13:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 667,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "17454:22:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 668,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 636,
																	"src": "17478:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 669,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 638,
																	"src": "17487:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 663,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "17431:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 664,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "17431:22:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 670,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "17431:62:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$286",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 661,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 796,
														"src": "17404:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$286_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 671,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17404:90:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 672,
												"nodeType": "ExpressionStatement",
												"src": "17404:90:0"
											}
										]
									},
									"documentation": {
										"id": 631,
										"nodeType": "StructuredDocumentation",
										"src": "16625:255:0",
										"text": " @dev Deprecated. This function has issues similar to the ones found in\n {IERC20-approve}, and its usage is discouraged.\n Whenever possible, use {safeIncreaseAllowance} and\n {safeDecreaseAllowance} instead."
									},
									"id": 674,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeApprove",
									"nameLocation": "16895:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 639,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 634,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "16924:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 674,
												"src": "16917:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$286",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 633,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 632,
														"name": "IERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 286,
														"src": "16917:6:0"
													},
													"referencedDeclaration": 286,
													"src": "16917:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$286",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 636,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "16948:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 674,
												"src": "16940:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 635,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16940:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 638,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "16974:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 674,
												"src": "16966:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 637,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16966:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16906:80:0"
									},
									"returnParameters": {
										"id": 640,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "16996:0:0"
									},
									"scope": 797,
									"src": "16886:616:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 709,
										"nodeType": "Block",
										"src": "17630:197:0",
										"statements": [
											{
												"assignments": [
													685
												],
												"declarations": [
													{
														"constant": false,
														"id": 685,
														"mutability": "mutable",
														"name": "newAllowance",
														"nameLocation": "17649:12:0",
														"nodeType": "VariableDeclaration",
														"scope": 709,
														"src": "17641:20:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 684,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "17641:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 696,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 695,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 690,
																		"name": "this",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967268,
																		"src": "17688:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_SafeERC20_$797",
																			"typeString": "library SafeERC20"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_SafeERC20_$797",
																			"typeString": "library SafeERC20"
																		}
																	],
																	"id": 689,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "17680:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 688,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "17680:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 691,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "17680:13:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 692,
																"name": "spender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 679,
																"src": "17695:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"expression": {
																"id": 686,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 677,
																"src": "17664:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$286",
																	"typeString": "contract IERC20"
																}
															},
															"id": 687,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "allowance",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 228,
															"src": "17664:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																"typeString": "function (address,address) view external returns (uint256)"
															}
														},
														"id": 693,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "17664:39:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 694,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 681,
														"src": "17706:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "17664:47:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "17641:70:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 698,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 677,
															"src": "17742:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$286",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 701,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 677,
																			"src": "17772:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$286",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 702,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "approve",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 238,
																		"src": "17772:13:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 703,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "17772:22:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 704,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 679,
																	"src": "17796:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 705,
																	"name": "newAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 685,
																	"src": "17805:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 699,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "17749:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 700,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "17749:22:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 706,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "17749:69:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$286",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 697,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 796,
														"src": "17722:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$286_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 707,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17722:97:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 708,
												"nodeType": "ExpressionStatement",
												"src": "17722:97:0"
											}
										]
									},
									"id": 710,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeIncreaseAllowance",
									"nameLocation": "17519:21:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 682,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 677,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "17558:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 710,
												"src": "17551:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$286",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 676,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 675,
														"name": "IERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 286,
														"src": "17551:6:0"
													},
													"referencedDeclaration": 286,
													"src": "17551:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$286",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 679,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "17582:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 710,
												"src": "17574:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 678,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "17574:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 681,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "17608:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 710,
												"src": "17600:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 680,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "17600:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17540:80:0"
									},
									"returnParameters": {
										"id": 683,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "17630:0:0"
									},
									"scope": 797,
									"src": "17510:317:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 757,
										"nodeType": "Block",
										"src": "17955:377:0",
										"statements": [
											{
												"id": 756,
												"nodeType": "UncheckedBlock",
												"src": "17966:359:0",
												"statements": [
													{
														"assignments": [
															721
														],
														"declarations": [
															{
																"constant": false,
																"id": 721,
																"mutability": "mutable",
																"name": "oldAllowance",
																"nameLocation": "17999:12:0",
																"nodeType": "VariableDeclaration",
																"scope": 756,
																"src": "17991:20:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 720,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "17991:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 730,
														"initialValue": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 726,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "18038:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_SafeERC20_$797",
																				"typeString": "library SafeERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_SafeERC20_$797",
																				"typeString": "library SafeERC20"
																			}
																		],
																		"id": 725,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "18030:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 724,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "18030:7:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 727,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "18030:13:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 728,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 715,
																	"src": "18045:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 722,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 713,
																	"src": "18014:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$286",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 723,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "allowance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 228,
																"src": "18014:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address,address) view external returns (uint256)"
																}
															},
															"id": 729,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "18014:39:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "17991:62:0"
													},
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 734,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 732,
																		"name": "oldAllowance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 721,
																		"src": "18076:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">=",
																	"rightExpression": {
																		"id": 733,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 717,
																		"src": "18092:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "18076:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"hexValue": "5361666545524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f",
																	"id": 735,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "18099:43:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_2c3af60974a758b7e72e108c9bf0943ecc9e4f2e8af4695da5f52fbf57a63d3a",
																		"typeString": "literal_string \"SafeERC20: decreased allowance below zero\""
																	},
																	"value": "SafeERC20: decreased allowance below zero"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_stringliteral_2c3af60974a758b7e72e108c9bf0943ecc9e4f2e8af4695da5f52fbf57a63d3a",
																		"typeString": "literal_string \"SafeERC20: decreased allowance below zero\""
																	}
																],
																"id": 731,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "18068:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 736,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "18068:75:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 737,
														"nodeType": "ExpressionStatement",
														"src": "18068:75:0"
													},
													{
														"assignments": [
															739
														],
														"declarations": [
															{
																"constant": false,
																"id": 739,
																"mutability": "mutable",
																"name": "newAllowance",
																"nameLocation": "18166:12:0",
																"nodeType": "VariableDeclaration",
																"scope": 756,
																"src": "18158:20:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 738,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "18158:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 743,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 742,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 740,
																"name": "oldAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 721,
																"src": "18181:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"id": 741,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 717,
																"src": "18196:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "18181:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "18158:43:0"
													},
													{
														"expression": {
															"arguments": [
																{
																	"id": 745,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 713,
																	"src": "18236:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$286",
																		"typeString": "contract IERC20"
																	}
																},
																{
																	"arguments": [
																		{
																			"expression": {
																				"expression": {
																					"id": 748,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 713,
																					"src": "18266:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC20_$286",
																						"typeString": "contract IERC20"
																					}
																				},
																				"id": 749,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "approve",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 238,
																				"src": "18266:13:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																					"typeString": "function (address,uint256) external returns (bool)"
																				}
																			},
																			"id": 750,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "selector",
																			"nodeType": "MemberAccess",
																			"src": "18266:22:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes4",
																				"typeString": "bytes4"
																			}
																		},
																		{
																			"id": 751,
																			"name": "spender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 715,
																			"src": "18290:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 752,
																			"name": "newAllowance",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 739,
																			"src": "18299:12:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bytes4",
																				"typeString": "bytes4"
																			},
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"id": 746,
																			"name": "abi",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967295,
																			"src": "18243:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_abi",
																				"typeString": "abi"
																			}
																		},
																		"id": 747,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberName": "encodeWithSelector",
																		"nodeType": "MemberAccess",
																		"src": "18243:22:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																			"typeString": "function (bytes4) pure returns (bytes memory)"
																		}
																	},
																	"id": 753,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "18243:69:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$286",
																		"typeString": "contract IERC20"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"id": 744,
																"name": "_callOptionalReturn",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 796,
																"src": "18216:19:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$286_$_t_bytes_memory_ptr_$returns$__$",
																	"typeString": "function (contract IERC20,bytes memory)"
																}
															},
															"id": 754,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "18216:97:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 755,
														"nodeType": "ExpressionStatement",
														"src": "18216:97:0"
													}
												]
											}
										]
									},
									"id": 758,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeDecreaseAllowance",
									"nameLocation": "17844:21:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 718,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 713,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "17883:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 758,
												"src": "17876:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$286",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 712,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 711,
														"name": "IERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 286,
														"src": "17876:6:0"
													},
													"referencedDeclaration": 286,
													"src": "17876:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$286",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 715,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "17907:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 758,
												"src": "17899:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 714,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "17899:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 717,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "17933:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 758,
												"src": "17925:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 716,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "17925:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17865:80:0"
									},
									"returnParameters": {
										"id": 719,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "17955:0:0"
									},
									"scope": 797,
									"src": "17835:497:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 795,
										"nodeType": "Block",
										"src": "18793:646:0",
										"statements": [
											{
												"assignments": [
													768
												],
												"declarations": [
													{
														"constant": false,
														"id": 768,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "19160:10:0",
														"nodeType": "VariableDeclaration",
														"scope": 795,
														"src": "19147:23:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 767,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "19147:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 777,
												"initialValue": {
													"arguments": [
														{
															"id": 774,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 764,
															"src": "19201:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 775,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "19207:34:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_47fb62c2c272651d2f0f342bac006756b8ba07f21cc5cb87e0fbb9d50c0c585b",
																"typeString": "literal_string \"SafeERC20: low-level call failed\""
															},
															"value": "SafeERC20: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_47fb62c2c272651d2f0f342bac006756b8ba07f21cc5cb87e0fbb9d50c0c585b",
																"typeString": "literal_string \"SafeERC20: low-level call failed\""
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 771,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 762,
																	"src": "19181:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$286",
																		"typeString": "contract IERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$286",
																		"typeString": "contract IERC20"
																	}
																],
																"id": 770,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "19173:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 769,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "19173:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 772,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "19173:14:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 773,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "functionCall",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 372,
														"src": "19173:27:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$bound_to$_t_address_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 776,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "19173:69:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "19147:95:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 781,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 778,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 768,
															"src": "19257:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 779,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "19257:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 780,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "19277:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "19257:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 794,
												"nodeType": "IfStatement",
												"src": "19253:179:0",
												"trueBody": {
													"id": 793,
													"nodeType": "Block",
													"src": "19280:152:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 785,
																				"name": "returndata",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 768,
																				"src": "19354:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			},
																			{
																				"components": [
																					{
																						"id": 787,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "19367:4:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_bool_$",
																							"typeString": "type(bool)"
																						},
																						"typeName": {
																							"id": 786,
																							"name": "bool",
																							"nodeType": "ElementaryTypeName",
																							"src": "19367:4:0",
																							"typeDescriptions": {}
																						}
																					}
																				],
																				"id": 788,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "19366:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_bool_$",
																					"typeString": "type(bool)"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				},
																				{
																					"typeIdentifier": "t_type$_t_bool_$",
																					"typeString": "type(bool)"
																				}
																			],
																			"expression": {
																				"id": 783,
																				"name": "abi",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967295,
																				"src": "19343:3:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_abi",
																					"typeString": "abi"
																				}
																			},
																			"id": 784,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberName": "decode",
																			"nodeType": "MemberAccess",
																			"src": "19343:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 789,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "19343:30:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "5361666545524332303a204552433230206f7065726174696f6e20646964206e6f742073756363656564",
																		"id": 790,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "19375:44:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd",
																			"typeString": "literal_string \"SafeERC20: ERC20 operation did not succeed\""
																		},
																		"value": "SafeERC20: ERC20 operation did not succeed"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd",
																			"typeString": "literal_string \"SafeERC20: ERC20 operation did not succeed\""
																		}
																	],
																	"id": 782,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "19335:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 791,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "19335:85:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 792,
															"nodeType": "ExpressionStatement",
															"src": "19335:85:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 759,
										"nodeType": "StructuredDocumentation",
										"src": "18340:377:0",
										"text": " @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants)."
									},
									"id": 796,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_callOptionalReturn",
									"nameLocation": "18732:19:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 765,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 762,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "18759:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 796,
												"src": "18752:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$286",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 761,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 760,
														"name": "IERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 286,
														"src": "18752:6:0"
													},
													"referencedDeclaration": 286,
													"src": "18752:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$286",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 764,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "18779:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 796,
												"src": "18766:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 763,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "18766:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18751:33:0"
									},
									"returnParameters": {
										"id": 766,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "18793:0:0"
									},
									"scope": 797,
									"src": "18723:716:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 2270,
							"src": "16091:3351:0",
							"usedErrors": []
						},
						{
							"abstract": true,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 816,
							"linearizedBaseContracts": [
								816
							],
							"name": "Context",
							"nameLocation": "19464:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 805,
										"nodeType": "Block",
										"src": "19541:36:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 802,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "19559:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 803,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "19559:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 801,
												"id": 804,
												"nodeType": "Return",
												"src": "19552:17:0"
											}
										]
									},
									"id": 806,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "19488:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 798,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "19498:2:0"
									},
									"returnParameters": {
										"id": 801,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 800,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 806,
												"src": "19532:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 799,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "19532:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "19531:9:0"
									},
									"scope": 816,
									"src": "19479:98:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 814,
										"nodeType": "Block",
										"src": "19652:34:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 811,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "19670:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 812,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "19670:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 810,
												"id": 813,
												"nodeType": "Return",
												"src": "19663:15:0"
											}
										]
									},
									"id": 815,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "19594:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 807,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "19602:2:0"
									},
									"returnParameters": {
										"id": 810,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 809,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 815,
												"src": "19636:14:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 808,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "19636:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "19635:16:0"
									},
									"scope": 816,
									"src": "19585:101:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 2270,
							"src": "19446:243:0",
							"usedErrors": []
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 817,
										"name": "Context",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 816,
										"src": "19722:7:0"
									},
									"id": 818,
									"nodeType": "InheritanceSpecifier",
									"src": "19722:7:0"
								}
							],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 917,
							"linearizedBaseContracts": [
								917,
								816
							],
							"name": "Ownable",
							"nameLocation": "19711:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 820,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "19753:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 917,
									"src": "19737:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 819,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "19737:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"id": 826,
									"name": "OwnershipTransferred",
									"nameLocation": "19774:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 825,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 822,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "19811:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 826,
												"src": "19795:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 821,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "19795:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 824,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "19842:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 826,
												"src": "19826:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 823,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "19826:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "19794:57:0"
									},
									"src": "19768:84:0"
								},
								{
									"body": {
										"id": 835,
										"nodeType": "Block",
										"src": "19973:51:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 831,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 806,
																"src": "20003:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 832,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "20003:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 830,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 916,
														"src": "19984:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 833,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "19984:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 834,
												"nodeType": "ExpressionStatement",
												"src": "19984:32:0"
											}
										]
									},
									"documentation": {
										"id": 827,
										"nodeType": "StructuredDocumentation",
										"src": "19860:93:0",
										"text": " @dev Initializes the contract setting the deployer as the initial owner."
									},
									"id": 836,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 828,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "19970:2:0"
									},
									"returnParameters": {
										"id": 829,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "19973:0:0"
									},
									"scope": 917,
									"src": "19959:65:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 844,
										"nodeType": "Block",
										"src": "20160:32:0",
										"statements": [
											{
												"expression": {
													"id": 842,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 820,
													"src": "20178:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 841,
												"id": 843,
												"nodeType": "Return",
												"src": "20171:13:0"
											}
										]
									},
									"documentation": {
										"id": 837,
										"nodeType": "StructuredDocumentation",
										"src": "20032:67:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 845,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "20114:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 838,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "20119:2:0"
									},
									"returnParameters": {
										"id": 841,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 840,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 845,
												"src": "20151:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 839,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "20151:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "20150:9:0"
									},
									"scope": 917,
									"src": "20105:87:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 858,
										"nodeType": "Block",
										"src": "20306:99:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 853,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 849,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 845,
																	"src": "20325:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 850,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "20325:7:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 851,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 806,
																	"src": "20336:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 852,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "20336:12:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "20325:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
															"id": 854,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "20350:34:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															},
															"value": "Ownable: caller is not the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															}
														],
														"id": 848,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "20317:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 855,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "20317:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 856,
												"nodeType": "ExpressionStatement",
												"src": "20317:68:0"
											},
											{
												"id": 857,
												"nodeType": "PlaceholderStatement",
												"src": "20396:1:0"
											}
										]
									},
									"documentation": {
										"id": 846,
										"nodeType": "StructuredDocumentation",
										"src": "20200:79:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 859,
									"name": "onlyOwner",
									"nameLocation": "20294:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 847,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "20303:2:0"
									},
									"src": "20285:120:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 872,
										"nodeType": "Block",
										"src": "20810:49:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 868,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "20848:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 867,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "20840:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 866,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "20840:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 869,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "20840:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 865,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 916,
														"src": "20821:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 870,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "20821:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 871,
												"nodeType": "ExpressionStatement",
												"src": "20821:30:0"
											}
										]
									},
									"documentation": {
										"id": 860,
										"nodeType": "StructuredDocumentation",
										"src": "20413:337:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions anymore. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby removing any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 873,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 863,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 862,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 859,
												"src": "20800:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "20800:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "20765:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 861,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "20782:2:0"
									},
									"returnParameters": {
										"id": 864,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "20810:0:0"
									},
									"scope": 917,
									"src": "20756:103:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 895,
										"nodeType": "Block",
										"src": "21084:131:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 887,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 882,
																"name": "newOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 876,
																"src": "21103:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 885,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "21123:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 884,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "21115:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 883,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "21115:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 886,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "21115:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "21103:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
															"id": 888,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "21127:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															},
															"value": "Ownable: new owner is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															}
														],
														"id": 881,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "21095:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 889,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "21095:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 890,
												"nodeType": "ExpressionStatement",
												"src": "21095:73:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 892,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 876,
															"src": "21198:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 891,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 916,
														"src": "21179:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 893,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "21179:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 894,
												"nodeType": "ExpressionStatement",
												"src": "21179:28:0"
											}
										]
									},
									"documentation": {
										"id": 874,
										"nodeType": "StructuredDocumentation",
										"src": "20867:141:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 896,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 879,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 878,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 859,
												"src": "21074:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "21074:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "21023:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 877,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 876,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "21049:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 896,
												"src": "21041:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 875,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "21041:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "21040:18:0"
									},
									"returnParameters": {
										"id": 880,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "21084:0:0"
									},
									"scope": 917,
									"src": "21014:201:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 915,
										"nodeType": "Block",
										"src": "21438:128:0",
										"statements": [
											{
												"assignments": [
													903
												],
												"declarations": [
													{
														"constant": false,
														"id": 903,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "21457:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 915,
														"src": "21449:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 902,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "21449:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 905,
												"initialValue": {
													"id": 904,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 820,
													"src": "21468:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "21449:25:0"
											},
											{
												"expression": {
													"id": 908,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 906,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 820,
														"src": "21485:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 907,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 899,
														"src": "21494:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "21485:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 909,
												"nodeType": "ExpressionStatement",
												"src": "21485:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 911,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 903,
															"src": "21539:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 912,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 899,
															"src": "21549:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 910,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 826,
														"src": "21518:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 913,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "21518:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 914,
												"nodeType": "EmitStatement",
												"src": "21513:45:0"
											}
										]
									},
									"documentation": {
										"id": 897,
										"nodeType": "StructuredDocumentation",
										"src": "21223:146:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 916,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "21384:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 900,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 899,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "21411:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 916,
												"src": "21403:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 898,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "21403:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "21402:18:0"
									},
									"returnParameters": {
										"id": 901,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "21438:0:0"
									},
									"scope": 917,
									"src": "21375:191:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 2270,
							"src": "19693:1876:0",
							"usedErrors": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 927,
							"linearizedBaseContracts": [
								927
							],
							"name": "IMigratorChef",
							"nameLocation": "21583:13:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "ce5494bb",
									"id": 926,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "migrate",
									"nameLocation": "21613:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 921,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 920,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "21628:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 926,
												"src": "21621:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$286",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 919,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 918,
														"name": "IERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 286,
														"src": "21621:6:0"
													},
													"referencedDeclaration": 286,
													"src": "21621:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$286",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "21620:14:0"
									},
									"returnParameters": {
										"id": 925,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 924,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 926,
												"src": "21653:6:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$286",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 923,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 922,
														"name": "IERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 286,
														"src": "21653:6:0"
													},
													"referencedDeclaration": 286,
													"src": "21653:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$286",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "21652:8:0"
									},
									"scope": 927,
									"src": "21604:57:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2270,
							"src": "21573:91:0",
							"usedErrors": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 933,
							"linearizedBaseContracts": [
								933
							],
							"name": "IERC721",
							"nameLocation": "21678:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "17e5883c",
									"id": 932,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "createNFT",
									"nameLocation": "21702:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 930,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 929,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "21720:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 932,
												"src": "21712:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 928,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "21712:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "21711:12:0"
									},
									"returnParameters": {
										"id": 931,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "21732:0:0"
									},
									"scope": 933,
									"src": "21693:40:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2270,
							"src": "21668:68:0",
							"usedErrors": []
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 934,
										"name": "Ownable",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 917,
										"src": "22137:7:0"
									},
									"id": 935,
									"nodeType": "InheritanceSpecifier",
									"src": "22137:7:0"
								}
							],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 2269,
							"linearizedBaseContracts": [
								2269,
								917,
								816
							],
							"name": "NFTMasterChef",
							"nameLocation": "22120:13:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 938,
									"libraryName": {
										"id": 936,
										"name": "SafeMath",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 194,
										"src": "22158:8:0"
									},
									"nodeType": "UsingForDirective",
									"src": "22152:27:0",
									"typeName": {
										"id": 937,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "22171:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"id": 942,
									"libraryName": {
										"id": 939,
										"name": "SafeERC20",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 797,
										"src": "22191:9:0"
									},
									"nodeType": "UsingForDirective",
									"src": "22185:27:0",
									"typeName": {
										"id": 941,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 940,
											"name": "IERC20",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 286,
											"src": "22205:6:0"
										},
										"referencedDeclaration": 286,
										"src": "22205:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$286",
											"typeString": "contract IERC20"
										}
									}
								},
								{
									"canonicalName": "NFTMasterChef.UserInfo",
									"id": 947,
									"members": [
										{
											"constant": false,
											"id": 944,
											"mutability": "mutable",
											"name": "amount",
											"nameLocation": "22280:6:0",
											"nodeType": "VariableDeclaration",
											"scope": 947,
											"src": "22272:14:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 943,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "22272:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 946,
											"mutability": "mutable",
											"name": "rewardDebt",
											"nameLocation": "22350:10:0",
											"nodeType": "VariableDeclaration",
											"scope": 947,
											"src": "22342:18:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 945,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "22342:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "UserInfo",
									"nameLocation": "22252:8:0",
									"nodeType": "StructDefinition",
									"scope": 2269,
									"src": "22245:794:0",
									"visibility": "public"
								},
								{
									"canonicalName": "NFTMasterChef.PoolInfo",
									"id": 957,
									"members": [
										{
											"constant": false,
											"id": 950,
											"mutability": "mutable",
											"name": "lpToken",
											"nameLocation": "23106:7:0",
											"nodeType": "VariableDeclaration",
											"scope": 957,
											"src": "23099:14:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_contract$_IERC20_$286",
												"typeString": "contract IERC20"
											},
											"typeName": {
												"id": 949,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 948,
													"name": "IERC20",
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 286,
													"src": "23099:6:0"
												},
												"referencedDeclaration": 286,
												"src": "23099:6:0",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$286",
													"typeString": "contract IERC20"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 952,
											"mutability": "mutable",
											"name": "allocPoint",
											"nameLocation": "23165:10:0",
											"nodeType": "VariableDeclaration",
											"scope": 957,
											"src": "23157:18:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 951,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "23157:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 954,
											"mutability": "mutable",
											"name": "lastRewardBlock",
											"nameLocation": "23279:15:0",
											"nodeType": "VariableDeclaration",
											"scope": 957,
											"src": "23271:23:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 953,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "23271:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 956,
											"mutability": "mutable",
											"name": "accPowerPerShare",
											"nameLocation": "23367:16:0",
											"nodeType": "VariableDeclaration",
											"scope": 957,
											"src": "23359:24:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 955,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "23359:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "PoolInfo",
									"nameLocation": "23079:8:0",
									"nodeType": "StructDefinition",
									"scope": 2269,
									"src": "23072:375:0",
									"visibility": "public"
								},
								{
									"canonicalName": "NFTMasterChef.NFTsInfo",
									"id": 963,
									"members": [
										{
											"constant": false,
											"id": 960,
											"mutability": "mutable",
											"name": "NFT",
											"nameLocation": "23490:3:0",
											"nodeType": "VariableDeclaration",
											"scope": 963,
											"src": "23482:11:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_contract$_IERC721_$933",
												"typeString": "contract IERC721"
											},
											"typeName": {
												"id": 959,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 958,
													"name": "IERC721",
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 933,
													"src": "23482:7:0"
												},
												"referencedDeclaration": 933,
												"src": "23482:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC721_$933",
													"typeString": "contract IERC721"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 962,
											"mutability": "mutable",
											"name": "power",
											"nameLocation": "23512:5:0",
											"nodeType": "VariableDeclaration",
											"scope": 963,
											"src": "23504:13:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 961,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "23504:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "NFTsInfo",
									"nameLocation": "23462:8:0",
									"nodeType": "StructDefinition",
									"scope": 2269,
									"src": "23455:70:0",
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "61c1b724",
									"id": 967,
									"mutability": "mutable",
									"name": "nftsInfo",
									"nameLocation": "23551:8:0",
									"nodeType": "VariableDeclaration",
									"scope": 2269,
									"src": "23533:26:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_struct$_NFTsInfo_$963_storage_$dyn_storage",
										"typeString": "struct NFTMasterChef.NFTsInfo[]"
									},
									"typeName": {
										"baseType": {
											"id": 965,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 964,
												"name": "NFTsInfo",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 963,
												"src": "23533:8:0"
											},
											"referencedDeclaration": 963,
											"src": "23533:8:0",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_NFTsInfo_$963_storage_ptr",
												"typeString": "struct NFTMasterChef.NFTsInfo"
											}
										},
										"id": 966,
										"nodeType": "ArrayTypeName",
										"src": "23533:10:0",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_struct$_NFTsInfo_$963_storage_$dyn_storage_ptr",
											"typeString": "struct NFTMasterChef.NFTsInfo[]"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "cb3cba55",
									"id": 970,
									"mutability": "mutable",
									"name": "DDT",
									"nameLocation": "23607:3:0",
									"nodeType": "VariableDeclaration",
									"scope": 2269,
									"src": "23593:17:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC20_$286",
										"typeString": "contract IERC20"
									},
									"typeName": {
										"id": 969,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 968,
											"name": "IERC20",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 286,
											"src": "23593:6:0"
										},
										"referencedDeclaration": 286,
										"src": "23593:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$286",
											"typeString": "contract IERC20"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "5990c569",
									"id": 972,
									"mutability": "mutable",
									"name": "PowerPerBlock",
									"nameLocation": "23672:13:0",
									"nodeType": "VariableDeclaration",
									"scope": 2269,
									"src": "23657:28:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 971,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "23657:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "8aa28550",
									"id": 975,
									"mutability": "mutable",
									"name": "BONUS_MULTIPLIER",
									"nameLocation": "23755:16:0",
									"nodeType": "VariableDeclaration",
									"scope": 2269,
									"src": "23740:35:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 973,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "23740:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31",
										"id": 974,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "23774:1:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1_by_1",
											"typeString": "int_const 1"
										},
										"value": "1"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "7cd07e47",
									"id": 978,
									"mutability": "mutable",
									"name": "migrator",
									"nameLocation": "23901:8:0",
									"nodeType": "VariableDeclaration",
									"scope": 2269,
									"src": "23880:29:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IMigratorChef_$927",
										"typeString": "contract IMigratorChef"
									},
									"typeName": {
										"id": 977,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 976,
											"name": "IMigratorChef",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 927,
											"src": "23880:13:0"
										},
										"referencedDeclaration": 927,
										"src": "23880:13:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IMigratorChef_$927",
											"typeString": "contract IMigratorChef"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "1526fe27",
									"id": 982,
									"mutability": "mutable",
									"name": "poolInfo",
									"nameLocation": "23961:8:0",
									"nodeType": "VariableDeclaration",
									"scope": 2269,
									"src": "23943:26:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_struct$_PoolInfo_$957_storage_$dyn_storage",
										"typeString": "struct NFTMasterChef.PoolInfo[]"
									},
									"typeName": {
										"baseType": {
											"id": 980,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 979,
												"name": "PoolInfo",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 957,
												"src": "23943:8:0"
											},
											"referencedDeclaration": 957,
											"src": "23943:8:0",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_PoolInfo_$957_storage_ptr",
												"typeString": "struct NFTMasterChef.PoolInfo"
											}
										},
										"id": 981,
										"nodeType": "ArrayTypeName",
										"src": "23943:10:0",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_struct$_PoolInfo_$957_storage_$dyn_storage_ptr",
											"typeString": "struct NFTMasterChef.PoolInfo[]"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "93f1a40b",
									"id": 989,
									"mutability": "mutable",
									"name": "userInfo",
									"nameLocation": "24081:8:0",
									"nodeType": "VariableDeclaration",
									"scope": 2269,
									"src": "24025:64:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_struct$_UserInfo_$947_storage_$_$",
										"typeString": "mapping(uint256 => mapping(address => struct NFTMasterChef.UserInfo))"
									},
									"typeName": {
										"id": 988,
										"keyType": {
											"id": 983,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "24033:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "24025:48:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_struct$_UserInfo_$947_storage_$_$",
											"typeString": "mapping(uint256 => mapping(address => struct NFTMasterChef.UserInfo))"
										},
										"valueType": {
											"id": 987,
											"keyType": {
												"id": 984,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "24052:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "24044:28:0",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserInfo_$947_storage_$",
												"typeString": "mapping(address => struct NFTMasterChef.UserInfo)"
											},
											"valueType": {
												"id": 986,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 985,
													"name": "UserInfo",
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 947,
													"src": "24063:8:0"
												},
												"referencedDeclaration": 947,
												"src": "24063:8:0",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_UserInfo_$947_storage_ptr",
													"typeString": "struct NFTMasterChef.UserInfo"
												}
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "17caf6f1",
									"id": 992,
									"mutability": "mutable",
									"name": "totalAllocPoint",
									"nameLocation": "24199:15:0",
									"nodeType": "VariableDeclaration",
									"scope": 2269,
									"src": "24184:34:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 990,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "24184:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "30",
										"id": 991,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "24217:1:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_0_by_1",
											"typeString": "int_const 0"
										},
										"value": "0"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "48cd4cb1",
									"id": 994,
									"mutability": "mutable",
									"name": "startBlock",
									"nameLocation": "24291:10:0",
									"nodeType": "VariableDeclaration",
									"scope": 2269,
									"src": "24276:25:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 993,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "24276:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "d209db8c",
									"id": 998,
									"mutability": "mutable",
									"name": "powerBalance",
									"nameLocation": "24345:12:0",
									"nodeType": "VariableDeclaration",
									"scope": 2269,
									"src": "24310:47:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 997,
										"keyType": {
											"id": 995,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "24318:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "24310:27:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 996,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "24329:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"anonymous": false,
									"id": 1006,
									"name": "Deposit",
									"nameLocation": "24372:7:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1005,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1000,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "24396:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1006,
												"src": "24380:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 999,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "24380:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1002,
												"indexed": true,
												"mutability": "mutable",
												"name": "pid",
												"nameLocation": "24418:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 1006,
												"src": "24402:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1001,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "24402:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1004,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "24431:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1006,
												"src": "24423:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1003,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "24423:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "24379:59:0"
									},
									"src": "24366:73:0"
								},
								{
									"anonymous": false,
									"id": 1014,
									"name": "Withdraw",
									"nameLocation": "24451:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1013,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1008,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "24476:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1014,
												"src": "24460:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1007,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "24460:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1010,
												"indexed": true,
												"mutability": "mutable",
												"name": "pid",
												"nameLocation": "24498:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 1014,
												"src": "24482:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1009,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "24482:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1012,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "24511:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1014,
												"src": "24503:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1011,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "24503:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "24459:59:0"
									},
									"src": "24445:74:0"
								},
								{
									"anonymous": false,
									"id": 1022,
									"name": "EmergencyWithdraw",
									"nameLocation": "24531:17:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1021,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1016,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "24575:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1022,
												"src": "24559:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1015,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "24559:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1018,
												"indexed": true,
												"mutability": "mutable",
												"name": "pid",
												"nameLocation": "24606:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 1022,
												"src": "24590:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1017,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "24590:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1020,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "24628:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1022,
												"src": "24620:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1019,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "24620:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "24548:93:0"
									},
									"src": "24525:117:0"
								},
								{
									"body": {
										"id": 1059,
										"nodeType": "Block",
										"src": "24754:358:0",
										"statements": [
											{
												"expression": {
													"id": 1034,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1032,
														"name": "DDT",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 970,
														"src": "24765:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$286",
															"typeString": "contract IERC20"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1033,
														"name": "_DDT",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1025,
														"src": "24771:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$286",
															"typeString": "contract IERC20"
														}
													},
													"src": "24765:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$286",
														"typeString": "contract IERC20"
													}
												},
												"id": 1035,
												"nodeType": "ExpressionStatement",
												"src": "24765:10:0"
											},
											{
												"expression": {
													"id": 1038,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1036,
														"name": "PowerPerBlock",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 972,
														"src": "24786:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1037,
														"name": "_PowerPerBlock",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1027,
														"src": "24802:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "24786:30:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1039,
												"nodeType": "ExpressionStatement",
												"src": "24786:30:0"
											},
											{
												"expression": {
													"id": 1042,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1040,
														"name": "startBlock",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 994,
														"src": "24827:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1041,
														"name": "_startBlock",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1029,
														"src": "24840:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "24827:24:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1043,
												"nodeType": "ExpressionStatement",
												"src": "24827:24:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1048,
																	"name": "DDT",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 970,
																	"src": "24944:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$286",
																		"typeString": "contract IERC20"
																	}
																},
																{
																	"hexValue": "31303030",
																	"id": 1049,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "24974:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1000_by_1",
																		"typeString": "int_const 1000"
																	},
																	"value": "1000"
																},
																{
																	"id": 1050,
																	"name": "startBlock",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 994,
																	"src": "25010:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"hexValue": "30",
																	"id": 1051,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "25053:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$286",
																		"typeString": "contract IERC20"
																	},
																	{
																		"typeIdentifier": "t_rational_1000_by_1",
																		"typeString": "int_const 1000"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1047,
																"name": "PoolInfo",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 957,
																"src": "24911:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_struct$_PoolInfo_$957_storage_ptr_$",
																	"typeString": "type(struct NFTMasterChef.PoolInfo storage pointer)"
																}
															},
															"id": 1052,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "structConstructorCall",
															"lValueRequested": false,
															"names": [
																"lpToken",
																"allocPoint",
																"lastRewardBlock",
																"accPowerPerShare"
															],
															"nodeType": "FunctionCall",
															"src": "24911:155:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PoolInfo_$957_memory_ptr",
																"typeString": "struct NFTMasterChef.PoolInfo memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_PoolInfo_$957_memory_ptr",
																"typeString": "struct NFTMasterChef.PoolInfo memory"
															}
														],
														"expression": {
															"id": 1044,
															"name": "poolInfo",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 982,
															"src": "24897:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_PoolInfo_$957_storage_$dyn_storage",
																"typeString": "struct NFTMasterChef.PoolInfo storage ref[] storage ref"
															}
														},
														"id": 1046,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "push",
														"nodeType": "MemberAccess",
														"src": "24897:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_struct$_PoolInfo_$957_storage_$dyn_storage_ptr_$_t_struct$_PoolInfo_$957_storage_$returns$__$bound_to$_t_array$_t_struct$_PoolInfo_$957_storage_$dyn_storage_ptr_$",
															"typeString": "function (struct NFTMasterChef.PoolInfo storage ref[] storage pointer,struct NFTMasterChef.PoolInfo storage ref)"
														}
													},
													"id": 1053,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "24897:170:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1054,
												"nodeType": "ExpressionStatement",
												"src": "24897:170:0"
											},
											{
												"expression": {
													"id": 1057,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1055,
														"name": "totalAllocPoint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 992,
														"src": "25080:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "31303030",
														"id": 1056,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "25098:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1000_by_1",
															"typeString": "int_const 1000"
														},
														"value": "1000"
													},
													"src": "25080:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1058,
												"nodeType": "ExpressionStatement",
												"src": "25080:22:0"
											}
										]
									},
									"id": 1060,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1030,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1025,
												"mutability": "mutable",
												"name": "_DDT",
												"nameLocation": "24679:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1060,
												"src": "24672:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$286",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 1024,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1023,
														"name": "IERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 286,
														"src": "24672:6:0"
													},
													"referencedDeclaration": 286,
													"src": "24672:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$286",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1027,
												"mutability": "mutable",
												"name": "_PowerPerBlock",
												"nameLocation": "24702:14:0",
												"nodeType": "VariableDeclaration",
												"scope": 1060,
												"src": "24694:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1026,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "24694:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1029,
												"mutability": "mutable",
												"name": "_startBlock",
												"nameLocation": "24735:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 1060,
												"src": "24727:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1028,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "24727:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "24661:92:0"
									},
									"returnParameters": {
										"id": 1031,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "24754:0:0"
									},
									"scope": 2269,
									"src": "24650:462:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1071,
										"nodeType": "Block",
										"src": "25191:47:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 1067,
														"name": "powerBalance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 998,
														"src": "25209:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 1069,
													"indexExpression": {
														"id": 1068,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1062,
														"src": "25222:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "25209:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1066,
												"id": 1070,
												"nodeType": "Return",
												"src": "25202:28:0"
											}
										]
									},
									"functionSelector": "8c51793b",
									"id": 1072,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getPowerBalance",
									"nameLocation": "25129:15:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1063,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1062,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "25153:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1072,
												"src": "25145:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1061,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "25145:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "25144:17:0"
									},
									"returnParameters": {
										"id": 1066,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1065,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1072,
												"src": "25182:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1064,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "25182:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "25181:9:0"
									},
									"scope": 2269,
									"src": "25120:118:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1091,
										"nodeType": "Block",
										"src": "25309:143:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1086,
																	"name": "_NFT",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1075,
																	"src": "25381:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC721_$933",
																		"typeString": "contract IERC721"
																	}
																},
																{
																	"id": 1087,
																	"name": "_power",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1077,
																	"src": "25411:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC721_$933",
																		"typeString": "contract IERC721"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1085,
																"name": "NFTsInfo",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 963,
																"src": "25348:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_struct$_NFTsInfo_$963_storage_ptr_$",
																	"typeString": "type(struct NFTMasterChef.NFTsInfo storage pointer)"
																}
															},
															"id": 1088,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "structConstructorCall",
															"lValueRequested": false,
															"names": [
																"NFT",
																"power"
															],
															"nodeType": "FunctionCall",
															"src": "25348:85:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_NFTsInfo_$963_memory_ptr",
																"typeString": "struct NFTMasterChef.NFTsInfo memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_NFTsInfo_$963_memory_ptr",
																"typeString": "struct NFTMasterChef.NFTsInfo memory"
															}
														],
														"expression": {
															"id": 1082,
															"name": "nftsInfo",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 967,
															"src": "25320:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_NFTsInfo_$963_storage_$dyn_storage",
																"typeString": "struct NFTMasterChef.NFTsInfo storage ref[] storage ref"
															}
														},
														"id": 1084,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "push",
														"nodeType": "MemberAccess",
														"src": "25320:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_struct$_NFTsInfo_$963_storage_$dyn_storage_ptr_$_t_struct$_NFTsInfo_$963_storage_$returns$__$bound_to$_t_array$_t_struct$_NFTsInfo_$963_storage_$dyn_storage_ptr_$",
															"typeString": "function (struct NFTMasterChef.NFTsInfo storage ref[] storage pointer,struct NFTMasterChef.NFTsInfo storage ref)"
														}
													},
													"id": 1089,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "25320:124:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1090,
												"nodeType": "ExpressionStatement",
												"src": "25320:124:0"
											}
										]
									},
									"functionSelector": "4ea2813c",
									"id": 1092,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1080,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1079,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 859,
												"src": "25299:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "25299:9:0"
										}
									],
									"name": "addNFT",
									"nameLocation": "25255:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1078,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1075,
												"mutability": "mutable",
												"name": "_NFT",
												"nameLocation": "25270:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1092,
												"src": "25262:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC721_$933",
													"typeString": "contract IERC721"
												},
												"typeName": {
													"id": 1074,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1073,
														"name": "IERC721",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 933,
														"src": "25262:7:0"
													},
													"referencedDeclaration": 933,
													"src": "25262:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC721_$933",
														"typeString": "contract IERC721"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1077,
												"mutability": "mutable",
												"name": "_power",
												"nameLocation": "25284:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1092,
												"src": "25276:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1076,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "25276:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "25261:30:0"
									},
									"returnParameters": {
										"id": 1081,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "25309:0:0"
									},
									"scope": 2269,
									"src": "25246:206:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1270,
										"nodeType": "Block",
										"src": "25520:1208:0",
										"statements": [
											{
												"assignments": [
													1101
												],
												"declarations": [
													{
														"constant": false,
														"id": 1101,
														"mutability": "mutable",
														"name": "pool",
														"nameLocation": "25548:4:0",
														"nodeType": "VariableDeclaration",
														"scope": 1270,
														"src": "25531:21:0",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_PoolInfo_$957_storage_ptr",
															"typeString": "struct NFTMasterChef.PoolInfo"
														},
														"typeName": {
															"id": 1100,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1099,
																"name": "PoolInfo",
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 957,
																"src": "25531:8:0"
															},
															"referencedDeclaration": 957,
															"src": "25531:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PoolInfo_$957_storage_ptr",
																"typeString": "struct NFTMasterChef.PoolInfo"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1105,
												"initialValue": {
													"baseExpression": {
														"id": 1102,
														"name": "poolInfo",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 982,
														"src": "25555:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_PoolInfo_$957_storage_$dyn_storage",
															"typeString": "struct NFTMasterChef.PoolInfo storage ref[] storage ref"
														}
													},
													"id": 1104,
													"indexExpression": {
														"id": 1103,
														"name": "_pid",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1096,
														"src": "25564:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "25555:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_PoolInfo_$957_storage",
														"typeString": "struct NFTMasterChef.PoolInfo storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "25531:38:0"
											},
											{
												"assignments": [
													1108
												],
												"declarations": [
													{
														"constant": false,
														"id": 1108,
														"mutability": "mutable",
														"name": "user",
														"nameLocation": "25597:4:0",
														"nodeType": "VariableDeclaration",
														"scope": 1270,
														"src": "25580:21:0",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_UserInfo_$947_storage_ptr",
															"typeString": "struct NFTMasterChef.UserInfo"
														},
														"typeName": {
															"id": 1107,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1106,
																"name": "UserInfo",
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 947,
																"src": "25580:8:0"
															},
															"referencedDeclaration": 947,
															"src": "25580:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$947_storage_ptr",
																"typeString": "struct NFTMasterChef.UserInfo"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1115,
												"initialValue": {
													"baseExpression": {
														"baseExpression": {
															"id": 1109,
															"name": "userInfo",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 989,
															"src": "25604:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_struct$_UserInfo_$947_storage_$_$",
																"typeString": "mapping(uint256 => mapping(address => struct NFTMasterChef.UserInfo storage ref))"
															}
														},
														"id": 1111,
														"indexExpression": {
															"id": 1110,
															"name": "_pid",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1096,
															"src": "25613:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "25604:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserInfo_$947_storage_$",
															"typeString": "mapping(address => struct NFTMasterChef.UserInfo storage ref)"
														}
													},
													"id": 1114,
													"indexExpression": {
														"expression": {
															"id": 1112,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "25619:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 1113,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "25619:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "25604:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UserInfo_$947_storage",
														"typeString": "struct NFTMasterChef.UserInfo storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "25580:50:0"
											},
											{
												"assignments": [
													1117
												],
												"declarations": [
													{
														"constant": false,
														"id": 1117,
														"mutability": "mutable",
														"name": "accPowerPerShare",
														"nameLocation": "25649:16:0",
														"nodeType": "VariableDeclaration",
														"scope": 1270,
														"src": "25641:24:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1116,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "25641:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1120,
												"initialValue": {
													"expression": {
														"id": 1118,
														"name": "pool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1101,
														"src": "25668:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_PoolInfo_$957_storage_ptr",
															"typeString": "struct NFTMasterChef.PoolInfo storage pointer"
														}
													},
													"id": 1119,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "accPowerPerShare",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 956,
													"src": "25668:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "25641:48:0"
											},
											{
												"assignments": [
													1122
												],
												"declarations": [
													{
														"constant": false,
														"id": 1122,
														"mutability": "mutable",
														"name": "lpSupply",
														"nameLocation": "25708:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 1270,
														"src": "25700:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1121,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "25700:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1131,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1128,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "25750:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_NFTMasterChef_$2269",
																		"typeString": "contract NFTMasterChef"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_NFTMasterChef_$2269",
																		"typeString": "contract NFTMasterChef"
																	}
																],
																"id": 1127,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "25742:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1126,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "25742:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 1129,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "25742:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"expression": {
																"id": 1123,
																"name": "pool",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1101,
																"src": "25719:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_PoolInfo_$957_storage_ptr",
																	"typeString": "struct NFTMasterChef.PoolInfo storage pointer"
																}
															},
															"id": 1124,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "lpToken",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 950,
															"src": "25719:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$286",
																"typeString": "contract IERC20"
															}
														},
														"id": 1125,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "balanceOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 208,
														"src": "25719:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 1130,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "25719:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "25700:56:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1140,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1136,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 1132,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "25771:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 1133,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "number",
															"nodeType": "MemberAccess",
															"src": "25771:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"expression": {
																"id": 1134,
																"name": "pool",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1101,
																"src": "25786:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_PoolInfo_$957_storage_ptr",
																	"typeString": "struct NFTMasterChef.PoolInfo storage pointer"
																}
															},
															"id": 1135,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "lastRewardBlock",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 954,
															"src": "25786:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "25771:35:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1139,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1137,
															"name": "lpSupply",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1122,
															"src": "25810:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"hexValue": "30",
															"id": 1138,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "25822:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "25810:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "25771:52:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1178,
												"nodeType": "IfStatement",
												"src": "25767:354:0",
												"trueBody": {
													"id": 1177,
													"nodeType": "Block",
													"src": "25825:296:0",
													"statements": [
														{
															"assignments": [
																1142
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1142,
																	"mutability": "mutable",
																	"name": "multiplier",
																	"nameLocation": "25848:10:0",
																	"nodeType": "VariableDeclaration",
																	"scope": 1177,
																	"src": "25840:18:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1141,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "25840:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1149,
															"initialValue": {
																"arguments": [
																	{
																		"expression": {
																			"id": 1144,
																			"name": "pool",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1101,
																			"src": "25875:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_PoolInfo_$957_storage_ptr",
																				"typeString": "struct NFTMasterChef.PoolInfo storage pointer"
																			}
																		},
																		"id": 1145,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "lastRewardBlock",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 954,
																		"src": "25875:20:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"expression": {
																			"id": 1146,
																			"name": "block",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967292,
																			"src": "25897:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_block",
																				"typeString": "block"
																			}
																		},
																		"id": 1147,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "number",
																		"nodeType": "MemberAccess",
																		"src": "25897:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1143,
																	"name": "getMultiplier",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1488,
																	"src": "25861:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																		"typeString": "function (uint256,uint256) view returns (uint256)"
																	}
																},
																"id": 1148,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "25861:49:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "25840:70:0"
														},
														{
															"assignments": [
																1151
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1151,
																	"mutability": "mutable",
																	"name": "PowerReward",
																	"nameLocation": "25933:11:0",
																	"nodeType": "VariableDeclaration",
																	"scope": 1177,
																	"src": "25925:19:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1150,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "25925:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1163,
															"initialValue": {
																"arguments": [
																	{
																		"id": 1161,
																		"name": "totalAllocPoint",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 992,
																		"src": "26002:15:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"expression": {
																					"id": 1157,
																					"name": "pool",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1101,
																					"src": "25981:4:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_PoolInfo_$957_storage_ptr",
																						"typeString": "struct NFTMasterChef.PoolInfo storage pointer"
																					}
																				},
																				"id": 1158,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "allocPoint",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 952,
																				"src": "25981:15:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"expression": {
																				"arguments": [
																					{
																						"id": 1154,
																						"name": "PowerPerBlock",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 972,
																						"src": "25962:13:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					],
																					"expression": {
																						"id": 1152,
																						"name": "multiplier",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1142,
																						"src": "25947:10:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"id": 1153,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "mul",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 107,
																					"src": "25947:14:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																						"typeString": "function (uint256,uint256) pure returns (uint256)"
																					}
																				},
																				"id": 1155,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "25947:29:0",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"id": 1156,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "mul",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 107,
																			"src": "25947:33:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																				"typeString": "function (uint256,uint256) pure returns (uint256)"
																			}
																		},
																		"id": 1159,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "25947:50:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1160,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "div",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 124,
																	"src": "25947:54:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 1162,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "25947:71:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "25925:93:0"
														},
														{
															"expression": {
																"id": 1175,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1164,
																	"name": "accPowerPerShare",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1117,
																	"src": "26033:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 1172,
																					"name": "lpSupply",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1122,
																					"src": "26099:8:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"arguments": [
																						{
																							"hexValue": "31653132",
																							"id": 1169,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "26089:4:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_1000000000000_by_1",
																								"typeString": "int_const 1000000000000"
																							},
																							"value": "1e12"
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_rational_1000000000000_by_1",
																								"typeString": "int_const 1000000000000"
																							}
																						],
																						"expression": {
																							"id": 1167,
																							"name": "PowerReward",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1151,
																							"src": "26073:11:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"id": 1168,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberName": "mul",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 107,
																						"src": "26073:15:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																							"typeString": "function (uint256,uint256) pure returns (uint256)"
																						}
																					},
																					"id": 1170,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "26073:21:0",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 1171,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "div",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 124,
																				"src": "26073:25:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																					"typeString": "function (uint256,uint256) pure returns (uint256)"
																				}
																			},
																			"id": 1173,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "26073:35:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"id": 1165,
																			"name": "accPowerPerShare",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1117,
																			"src": "26052:16:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1166,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "add",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 27,
																		"src": "26052:20:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 1174,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "26052:57:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "26033:76:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1176,
															"nodeType": "ExpressionStatement",
															"src": "26033:76:0"
														}
													]
												}
											},
											{
												"assignments": [
													1180
												],
												"declarations": [
													{
														"constant": false,
														"id": 1180,
														"mutability": "mutable",
														"name": "pending",
														"nameLocation": "26139:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 1270,
														"src": "26131:15:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1179,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "26131:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1193,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 1190,
																"name": "user",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1108,
																"src": "26197:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_UserInfo_$947_storage_ptr",
																	"typeString": "struct NFTMasterChef.UserInfo storage pointer"
																}
															},
															"id": 1191,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "rewardDebt",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 946,
															"src": "26197:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"hexValue": "31653132",
																	"id": 1187,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "26187:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1000000000000_by_1",
																		"typeString": "int_const 1000000000000"
																	},
																	"value": "1e12"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_1000000000000_by_1",
																		"typeString": "int_const 1000000000000"
																	}
																],
																"expression": {
																	"arguments": [
																		{
																			"id": 1184,
																			"name": "accPowerPerShare",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1117,
																			"src": "26165:16:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"expression": {
																				"id": 1181,
																				"name": "user",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1108,
																				"src": "26149:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_UserInfo_$947_storage_ptr",
																					"typeString": "struct NFTMasterChef.UserInfo storage pointer"
																				}
																			},
																			"id": 1182,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "amount",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 944,
																			"src": "26149:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1183,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "mul",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 107,
																		"src": "26149:15:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 1185,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "26149:33:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1186,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "div",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 124,
																"src": "26149:37:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 1188,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "26149:43:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1189,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sub",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 44,
														"src": "26149:47:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1192,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "26149:64:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "26131:82:0"
											},
											{
												"assignments": [
													1196
												],
												"declarations": [
													{
														"constant": false,
														"id": 1196,
														"mutability": "mutable",
														"name": "nft",
														"nameLocation": "26241:3:0",
														"nodeType": "VariableDeclaration",
														"scope": 1270,
														"src": "26224:20:0",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_NFTsInfo_$963_storage_ptr",
															"typeString": "struct NFTMasterChef.NFTsInfo"
														},
														"typeName": {
															"id": 1195,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1194,
																"name": "NFTsInfo",
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 963,
																"src": "26224:8:0"
															},
															"referencedDeclaration": 963,
															"src": "26224:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_NFTsInfo_$963_storage_ptr",
																"typeString": "struct NFTMasterChef.NFTsInfo"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1200,
												"initialValue": {
													"baseExpression": {
														"id": 1197,
														"name": "nftsInfo",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 967,
														"src": "26247:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_NFTsInfo_$963_storage_$dyn_storage",
															"typeString": "struct NFTMasterChef.NFTsInfo storage ref[] storage ref"
														}
													},
													"id": 1199,
													"indexExpression": {
														"id": 1198,
														"name": "level",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1094,
														"src": "26256:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "26247:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_NFTsInfo_$963_storage",
														"typeString": "struct NFTMasterChef.NFTsInfo storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "26224:38:0"
											},
											{
												"assignments": [
													1202
												],
												"declarations": [
													{
														"constant": false,
														"id": 1202,
														"mutability": "mutable",
														"name": "total",
														"nameLocation": "26281:5:0",
														"nodeType": "VariableDeclaration",
														"scope": 1270,
														"src": "26273:13:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1201,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "26273:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1210,
												"initialValue": {
													"arguments": [
														{
															"baseExpression": {
																"id": 1205,
																"name": "powerBalance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 998,
																"src": "26301:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																	"typeString": "mapping(address => uint256)"
																}
															},
															"id": 1208,
															"indexExpression": {
																"expression": {
																	"id": 1206,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "26314:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1207,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "26314:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "26301:24:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1203,
															"name": "pending",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1180,
															"src": "26289:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1204,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "add",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 27,
														"src": "26289:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1209,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "26289:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "26273:53:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1214,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1211,
														"name": "total",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1202,
														"src": "26340:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"id": 1212,
															"name": "nft",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1196,
															"src": "26348:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_NFTsInfo_$963_storage_ptr",
																"typeString": "struct NFTMasterChef.NFTsInfo storage pointer"
															}
														},
														"id": 1213,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "power",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 962,
														"src": "26348:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "26340:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1235,
												"nodeType": "IfStatement",
												"src": "26337:188:0",
												"trueBody": {
													"id": 1234,
													"nodeType": "Block",
													"src": "26358:167:0",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1217,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1215,
																	"name": "_pid",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1096,
																	"src": "26376:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 1216,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "26384:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "26376:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1223,
															"nodeType": "IfStatement",
															"src": "26373:63:0",
															"trueBody": {
																"id": 1222,
																"nodeType": "Block",
																"src": "26386:50:0",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"hexValue": "30",
																					"id": 1219,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "26418:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					},
																					"value": "0"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					}
																				],
																				"id": 1218,
																				"name": "leaveStaking",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2199,
																				"src": "26405:12:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
																					"typeString": "function (uint256)"
																				}
																			},
																			"id": 1220,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "26405:15:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1221,
																		"nodeType": "ExpressionStatement",
																		"src": "26405:15:0"
																	}
																]
															}
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1226,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1224,
																	"name": "_pid",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1096,
																	"src": "26453:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 1225,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "26461:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "26453:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1233,
															"nodeType": "IfStatement",
															"src": "26450:64:0",
															"trueBody": {
																"id": 1232,
																"nodeType": "Block",
																"src": "26463:51:0",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 1228,
																					"name": "_pid",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1096,
																					"src": "26491:4:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"hexValue": "30",
																					"id": 1229,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "26496:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					},
																					"value": "0"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					}
																				],
																				"id": 1227,
																				"name": "withdraw",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1952,
																				"src": "26482:8:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
																					"typeString": "function (uint256,uint256)"
																				}
																			},
																			"id": 1230,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "26482:16:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1231,
																		"nodeType": "ExpressionStatement",
																		"src": "26482:16:0"
																	}
																]
															}
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1243,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1237,
																	"name": "nft",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1196,
																	"src": "26543:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_NFTsInfo_$963_storage_ptr",
																		"typeString": "struct NFTMasterChef.NFTsInfo storage pointer"
																	}
																},
																"id": 1238,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "power",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 962,
																"src": "26543:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"baseExpression": {
																	"id": 1239,
																	"name": "powerBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 998,
																	"src": "26555:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 1242,
																"indexExpression": {
																	"expression": {
																		"id": 1240,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "26568:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 1241,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "26568:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "26555:24:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "26543:36:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "506f776572206973206e6f7420656e6f756768",
															"id": 1244,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "26581:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_2802e724701dc68a9a3726c72d44a6e6756fa09a3efd95f836f437d22954c406",
																"typeString": "literal_string \"Power is not enough\""
															},
															"value": "Power is not enough"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_2802e724701dc68a9a3726c72d44a6e6756fa09a3efd95f836f437d22954c406",
																"typeString": "literal_string \"Power is not enough\""
															}
														],
														"id": 1236,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "26535:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1245,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "26535:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1246,
												"nodeType": "ExpressionStatement",
												"src": "26535:68:0"
											},
											{
												"expression": {
													"id": 1259,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1247,
															"name": "powerBalance",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 998,
															"src": "26614:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1250,
														"indexExpression": {
															"expression": {
																"id": 1248,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "26627:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1249,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "26627:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "26614:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"expression": {
																	"id": 1256,
																	"name": "nft",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1196,
																	"src": "26670:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_NFTsInfo_$963_storage_ptr",
																		"typeString": "struct NFTMasterChef.NFTsInfo storage pointer"
																	}
																},
																"id": 1257,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "power",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 962,
																"src": "26670:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"baseExpression": {
																	"id": 1251,
																	"name": "powerBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 998,
																	"src": "26641:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 1254,
																"indexExpression": {
																	"expression": {
																		"id": 1252,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "26654:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 1253,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "26654:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "26641:24:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1255,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 44,
															"src": "26641:28:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1258,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "26641:39:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "26614:66:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1260,
												"nodeType": "ExpressionStatement",
												"src": "26614:66:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1266,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "26709:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1267,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "26709:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"expression": {
																"id": 1261,
																"name": "nft",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1196,
																"src": "26691:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_NFTsInfo_$963_storage_ptr",
																	"typeString": "struct NFTMasterChef.NFTsInfo storage pointer"
																}
															},
															"id": 1264,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "NFT",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 960,
															"src": "26691:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC721_$933",
																"typeString": "contract IERC721"
															}
														},
														"id": 1265,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "createNFT",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 932,
														"src": "26691:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address) external"
														}
													},
													"id": 1268,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "26691:29:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1269,
												"nodeType": "ExpressionStatement",
												"src": "26691:29:0"
											}
										]
									},
									"functionSelector": "1d5fbd87",
									"id": 1271,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "claimNFTReward",
									"nameLocation": "25469:14:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1097,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1094,
												"mutability": "mutable",
												"name": "level",
												"nameLocation": "25492:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1271,
												"src": "25484:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1093,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "25484:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1096,
												"mutability": "mutable",
												"name": "_pid",
												"nameLocation": "25507:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1271,
												"src": "25499:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1095,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "25499:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "25483:29:0"
									},
									"returnParameters": {
										"id": 1098,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "25520:0:0"
									},
									"scope": 2269,
									"src": "25460:1268:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1282,
										"nodeType": "Block",
										"src": "26805:54:0",
										"statements": [
											{
												"expression": {
													"id": 1280,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1278,
														"name": "BONUS_MULTIPLIER",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 975,
														"src": "26816:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1279,
														"name": "multiplierNumber",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1273,
														"src": "26835:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "26816:35:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1281,
												"nodeType": "ExpressionStatement",
												"src": "26816:35:0"
											}
										]
									},
									"functionSelector": "5ffe6146",
									"id": 1283,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1276,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1275,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 859,
												"src": "26795:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "26795:9:0"
										}
									],
									"name": "updateMultiplier",
									"nameLocation": "26745:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1274,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1273,
												"mutability": "mutable",
												"name": "multiplierNumber",
												"nameLocation": "26770:16:0",
												"nodeType": "VariableDeclaration",
												"scope": 1283,
												"src": "26762:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1272,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "26762:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "26761:26:0"
									},
									"returnParameters": {
										"id": 1277,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "26805:0:0"
									},
									"scope": 2269,
									"src": "26736:123:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1291,
										"nodeType": "Block",
										"src": "26921:41:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1288,
														"name": "poolInfo",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 982,
														"src": "26939:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_PoolInfo_$957_storage_$dyn_storage",
															"typeString": "struct NFTMasterChef.PoolInfo storage ref[] storage ref"
														}
													},
													"id": 1289,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "length",
													"nodeType": "MemberAccess",
													"src": "26939:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1287,
												"id": 1290,
												"nodeType": "Return",
												"src": "26932:22:0"
											}
										]
									},
									"functionSelector": "081e3eda",
									"id": 1292,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "poolLength",
									"nameLocation": "26876:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1284,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "26886:2:0"
									},
									"returnParameters": {
										"id": 1287,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1286,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1292,
												"src": "26912:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1285,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "26912:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "26911:9:0"
									},
									"scope": 2269,
									"src": "26867:95:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1339,
										"nodeType": "Block",
										"src": "27219:472:0",
										"statements": [
											{
												"condition": {
													"id": 1304,
													"name": "_withUpdate",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1299,
													"src": "27234:11:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1309,
												"nodeType": "IfStatement",
												"src": "27230:61:0",
												"trueBody": {
													"id": 1308,
													"nodeType": "Block",
													"src": "27247:44:0",
													"statements": [
														{
															"expression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1305,
																	"name": "massUpdatePools",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1615,
																	"src": "27262:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
																		"typeString": "function ()"
																	}
																},
																"id": 1306,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "27262:17:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1307,
															"nodeType": "ExpressionStatement",
															"src": "27262:17:0"
														}
													]
												}
											},
											{
												"assignments": [
													1311
												],
												"declarations": [
													{
														"constant": false,
														"id": 1311,
														"mutability": "mutable",
														"name": "lastRewardBlock",
														"nameLocation": "27309:15:0",
														"nodeType": "VariableDeclaration",
														"scope": 1339,
														"src": "27301:23:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1310,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "27301:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1320,
												"initialValue": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1315,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 1312,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "27327:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 1313,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "number",
															"nodeType": "MemberAccess",
															"src": "27327:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"id": 1314,
															"name": "startBlock",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 994,
															"src": "27342:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "27327:25:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 1318,
														"name": "startBlock",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 994,
														"src": "27370:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1319,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "27327:53:0",
													"trueExpression": {
														"expression": {
															"id": 1316,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "27355:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 1317,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "number",
														"nodeType": "MemberAccess",
														"src": "27355:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "27301:79:0"
											},
											{
												"expression": {
													"id": 1326,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1321,
														"name": "totalAllocPoint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 992,
														"src": "27391:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1324,
																"name": "_allocPoint",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1294,
																"src": "27429:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"id": 1322,
																"name": "totalAllocPoint",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 992,
																"src": "27409:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1323,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 27,
															"src": "27409:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1325,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "27409:32:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "27391:50:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1327,
												"nodeType": "ExpressionStatement",
												"src": "27391:50:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1332,
																	"name": "_lpToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1297,
																	"src": "27517:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$286",
																		"typeString": "contract IERC20"
																	}
																},
																{
																	"id": 1333,
																	"name": "_allocPoint",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1294,
																	"src": "27556:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 1334,
																	"name": "lastRewardBlock",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1311,
																	"src": "27603:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"hexValue": "30",
																	"id": 1335,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "27655:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$286",
																		"typeString": "contract IERC20"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1331,
																"name": "PoolInfo",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 957,
																"src": "27480:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_struct$_PoolInfo_$957_storage_ptr_$",
																	"typeString": "type(struct NFTMasterChef.PoolInfo storage pointer)"
																}
															},
															"id": 1336,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "structConstructorCall",
															"lValueRequested": false,
															"names": [
																"lpToken",
																"allocPoint",
																"lastRewardBlock",
																"accPowerPerShare"
															],
															"nodeType": "FunctionCall",
															"src": "27480:192:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PoolInfo_$957_memory_ptr",
																"typeString": "struct NFTMasterChef.PoolInfo memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_PoolInfo_$957_memory_ptr",
																"typeString": "struct NFTMasterChef.PoolInfo memory"
															}
														],
														"expression": {
															"id": 1328,
															"name": "poolInfo",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 982,
															"src": "27452:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_PoolInfo_$957_storage_$dyn_storage",
																"typeString": "struct NFTMasterChef.PoolInfo storage ref[] storage ref"
															}
														},
														"id": 1330,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "push",
														"nodeType": "MemberAccess",
														"src": "27452:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_struct$_PoolInfo_$957_storage_$dyn_storage_ptr_$_t_struct$_PoolInfo_$957_storage_$returns$__$bound_to$_t_array$_t_struct$_PoolInfo_$957_storage_$dyn_storage_ptr_$",
															"typeString": "function (struct NFTMasterChef.PoolInfo storage ref[] storage pointer,struct NFTMasterChef.PoolInfo storage ref)"
														}
													},
													"id": 1337,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "27452:231:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1338,
												"nodeType": "ExpressionStatement",
												"src": "27452:231:0"
											}
										]
									},
									"functionSelector": "1eaaa045",
									"id": 1340,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1302,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1301,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 859,
												"src": "27209:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "27209:9:0"
										}
									],
									"name": "add",
									"nameLocation": "27140:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1300,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1294,
												"mutability": "mutable",
												"name": "_allocPoint",
												"nameLocation": "27153:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 1340,
												"src": "27145:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1293,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "27145:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1297,
												"mutability": "mutable",
												"name": "_lpToken",
												"nameLocation": "27173:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1340,
												"src": "27166:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$286",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 1296,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1295,
														"name": "IERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 286,
														"src": "27166:6:0"
													},
													"referencedDeclaration": 286,
													"src": "27166:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$286",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1299,
												"mutability": "mutable",
												"name": "_withUpdate",
												"nameLocation": "27188:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 1340,
												"src": "27183:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1298,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "27183:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "27143:58:0"
									},
									"returnParameters": {
										"id": 1303,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "27219:0:0"
									},
									"scope": 2269,
									"src": "27131:560:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1377,
										"nodeType": "Block",
										"src": "27872:221:0",
										"statements": [
											{
												"condition": {
													"id": 1351,
													"name": "_withUpdate",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1346,
													"src": "27887:11:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1356,
												"nodeType": "IfStatement",
												"src": "27883:61:0",
												"trueBody": {
													"id": 1355,
													"nodeType": "Block",
													"src": "27900:44:0",
													"statements": [
														{
															"expression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1352,
																	"name": "massUpdatePools",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1615,
																	"src": "27915:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
																		"typeString": "function ()"
																	}
																},
																"id": 1353,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "27915:17:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1354,
															"nodeType": "ExpressionStatement",
															"src": "27915:17:0"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1368,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1357,
														"name": "totalAllocPoint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 992,
														"src": "27954:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1366,
																"name": "_allocPoint",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1344,
																"src": "28023:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"expression": {
																			"baseExpression": {
																				"id": 1360,
																				"name": "poolInfo",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 982,
																				"src": "27992:8:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_struct$_PoolInfo_$957_storage_$dyn_storage",
																					"typeString": "struct NFTMasterChef.PoolInfo storage ref[] storage ref"
																				}
																			},
																			"id": 1362,
																			"indexExpression": {
																				"id": 1361,
																				"name": "_pid",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1342,
																				"src": "28001:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "27992:14:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_PoolInfo_$957_storage",
																				"typeString": "struct NFTMasterChef.PoolInfo storage ref"
																			}
																		},
																		"id": 1363,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "allocPoint",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 952,
																		"src": "27992:25:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 1358,
																		"name": "totalAllocPoint",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 992,
																		"src": "27972:15:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1359,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sub",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 44,
																	"src": "27972:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 1364,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "27972:46:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1365,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 27,
															"src": "27972:50:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1367,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "27972:63:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "27954:81:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1369,
												"nodeType": "ExpressionStatement",
												"src": "27954:81:0"
											},
											{
												"expression": {
													"id": 1375,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 1370,
																"name": "poolInfo",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 982,
																"src": "28046:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_struct$_PoolInfo_$957_storage_$dyn_storage",
																	"typeString": "struct NFTMasterChef.PoolInfo storage ref[] storage ref"
																}
															},
															"id": 1372,
															"indexExpression": {
																"id": 1371,
																"name": "_pid",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1342,
																"src": "28055:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "28046:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PoolInfo_$957_storage",
																"typeString": "struct NFTMasterChef.PoolInfo storage ref"
															}
														},
														"id": 1373,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "allocPoint",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 952,
														"src": "28046:25:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1374,
														"name": "_allocPoint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1344,
														"src": "28074:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "28046:39:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1376,
												"nodeType": "ExpressionStatement",
												"src": "28046:39:0"
											}
										]
									},
									"functionSelector": "64482f79",
									"id": 1378,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1349,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1348,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 859,
												"src": "27862:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "27862:9:0"
										}
									],
									"name": "set",
									"nameLocation": "27797:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1347,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1342,
												"mutability": "mutable",
												"name": "_pid",
												"nameLocation": "27810:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1378,
												"src": "27802:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1341,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "27802:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1344,
												"mutability": "mutable",
												"name": "_allocPoint",
												"nameLocation": "27824:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 1378,
												"src": "27816:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1343,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "27816:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1346,
												"mutability": "mutable",
												"name": "_withUpdate",
												"nameLocation": "27842:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 1378,
												"src": "27837:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1345,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "27837:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "27800:54:0"
									},
									"returnParameters": {
										"id": 1350,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "27872:0:0"
									},
									"scope": 2269,
									"src": "27788:305:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1390,
										"nodeType": "Block",
										"src": "28232:39:0",
										"statements": [
											{
												"expression": {
													"id": 1388,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1386,
														"name": "migrator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 978,
														"src": "28243:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IMigratorChef_$927",
															"typeString": "contract IMigratorChef"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1387,
														"name": "_migrator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1381,
														"src": "28254:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IMigratorChef_$927",
															"typeString": "contract IMigratorChef"
														}
													},
													"src": "28243:20:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IMigratorChef_$927",
														"typeString": "contract IMigratorChef"
													}
												},
												"id": 1389,
												"nodeType": "ExpressionStatement",
												"src": "28243:20:0"
											}
										]
									},
									"functionSelector": "23cf3118",
									"id": 1391,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1384,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1383,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 859,
												"src": "28222:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "28222:9:0"
										}
									],
									"name": "setMigrator",
									"nameLocation": "28178:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1382,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1381,
												"mutability": "mutable",
												"name": "_migrator",
												"nameLocation": "28204:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 1391,
												"src": "28190:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IMigratorChef_$927",
													"typeString": "contract IMigratorChef"
												},
												"typeName": {
													"id": 1380,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1379,
														"name": "IMigratorChef",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 927,
														"src": "28190:13:0"
													},
													"referencedDeclaration": 927,
													"src": "28190:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IMigratorChef_$927",
														"typeString": "contract IMigratorChef"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "28189:25:0"
									},
									"returnParameters": {
										"id": 1385,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "28232:0:0"
									},
									"scope": 2269,
									"src": "28169:102:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1469,
										"nodeType": "Block",
										"src": "28432:453:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1405,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 1399,
																		"name": "migrator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 978,
																		"src": "28459:8:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IMigratorChef_$927",
																			"typeString": "contract IMigratorChef"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IMigratorChef_$927",
																			"typeString": "contract IMigratorChef"
																		}
																	],
																	"id": 1398,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "28451:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1397,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "28451:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 1400,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "28451:17:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1403,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "28480:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1402,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "28472:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1401,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "28472:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 1404,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "28472:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "28451:31:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "6d6967726174653a206e6f206d69677261746f72",
															"id": 1406,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "28484:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f2b78d14701a493fa40394b414840abc22dde75251115d332366fec4d94c3445",
																"typeString": "literal_string \"migrate: no migrator\""
															},
															"value": "migrate: no migrator"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_f2b78d14701a493fa40394b414840abc22dde75251115d332366fec4d94c3445",
																"typeString": "literal_string \"migrate: no migrator\""
															}
														],
														"id": 1396,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "28443:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1407,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "28443:64:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1408,
												"nodeType": "ExpressionStatement",
												"src": "28443:64:0"
											},
											{
												"assignments": [
													1411
												],
												"declarations": [
													{
														"constant": false,
														"id": 1411,
														"mutability": "mutable",
														"name": "pool",
														"nameLocation": "28535:4:0",
														"nodeType": "VariableDeclaration",
														"scope": 1469,
														"src": "28518:21:0",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_PoolInfo_$957_storage_ptr",
															"typeString": "struct NFTMasterChef.PoolInfo"
														},
														"typeName": {
															"id": 1410,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1409,
																"name": "PoolInfo",
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 957,
																"src": "28518:8:0"
															},
															"referencedDeclaration": 957,
															"src": "28518:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PoolInfo_$957_storage_ptr",
																"typeString": "struct NFTMasterChef.PoolInfo"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1415,
												"initialValue": {
													"baseExpression": {
														"id": 1412,
														"name": "poolInfo",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 982,
														"src": "28542:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_PoolInfo_$957_storage_$dyn_storage",
															"typeString": "struct NFTMasterChef.PoolInfo storage ref[] storage ref"
														}
													},
													"id": 1414,
													"indexExpression": {
														"id": 1413,
														"name": "_pid",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1393,
														"src": "28551:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "28542:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_PoolInfo_$957_storage",
														"typeString": "struct NFTMasterChef.PoolInfo storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "28518:38:0"
											},
											{
												"assignments": [
													1418
												],
												"declarations": [
													{
														"constant": false,
														"id": 1418,
														"mutability": "mutable",
														"name": "lpToken",
														"nameLocation": "28574:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 1469,
														"src": "28567:14:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$286",
															"typeString": "contract IERC20"
														},
														"typeName": {
															"id": 1417,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1416,
																"name": "IERC20",
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 286,
																"src": "28567:6:0"
															},
															"referencedDeclaration": 286,
															"src": "28567:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$286",
																"typeString": "contract IERC20"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1421,
												"initialValue": {
													"expression": {
														"id": 1419,
														"name": "pool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1411,
														"src": "28584:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_PoolInfo_$957_storage_ptr",
															"typeString": "struct NFTMasterChef.PoolInfo storage pointer"
														}
													},
													"id": 1420,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "lpToken",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 950,
													"src": "28584:12:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$286",
														"typeString": "contract IERC20"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "28567:29:0"
											},
											{
												"assignments": [
													1423
												],
												"declarations": [
													{
														"constant": false,
														"id": 1423,
														"mutability": "mutable",
														"name": "bal",
														"nameLocation": "28615:3:0",
														"nodeType": "VariableDeclaration",
														"scope": 1469,
														"src": "28607:11:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1422,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "28607:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1431,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1428,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "28647:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_NFTMasterChef_$2269",
																		"typeString": "contract NFTMasterChef"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_NFTMasterChef_$2269",
																		"typeString": "contract NFTMasterChef"
																	}
																],
																"id": 1427,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "28639:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1426,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "28639:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 1429,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "28639:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 1424,
															"name": "lpToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1418,
															"src": "28621:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$286",
																"typeString": "contract IERC20"
															}
														},
														"id": 1425,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "balanceOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 208,
														"src": "28621:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 1430,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "28621:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "28607:46:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1437,
																	"name": "migrator",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 978,
																	"src": "28692:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IMigratorChef_$927",
																		"typeString": "contract IMigratorChef"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IMigratorChef_$927",
																		"typeString": "contract IMigratorChef"
																	}
																],
																"id": 1436,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "28684:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1435,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "28684:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 1438,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "28684:17:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1439,
															"name": "bal",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1423,
															"src": "28703:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1432,
															"name": "lpToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1418,
															"src": "28664:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$286",
																"typeString": "contract IERC20"
															}
														},
														"id": 1434,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "safeApprove",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 674,
														"src": "28664:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$286_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$286_$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 1440,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "28664:43:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1441,
												"nodeType": "ExpressionStatement",
												"src": "28664:43:0"
											},
											{
												"assignments": [
													1444
												],
												"declarations": [
													{
														"constant": false,
														"id": 1444,
														"mutability": "mutable",
														"name": "newLpToken",
														"nameLocation": "28725:10:0",
														"nodeType": "VariableDeclaration",
														"scope": 1469,
														"src": "28718:17:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$286",
															"typeString": "contract IERC20"
														},
														"typeName": {
															"id": 1443,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1442,
																"name": "IERC20",
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 286,
																"src": "28718:6:0"
															},
															"referencedDeclaration": 286,
															"src": "28718:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$286",
																"typeString": "contract IERC20"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1449,
												"initialValue": {
													"arguments": [
														{
															"id": 1447,
															"name": "lpToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1418,
															"src": "28755:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$286",
																"typeString": "contract IERC20"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$286",
																"typeString": "contract IERC20"
															}
														],
														"expression": {
															"id": 1445,
															"name": "migrator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 978,
															"src": "28738:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IMigratorChef_$927",
																"typeString": "contract IMigratorChef"
															}
														},
														"id": 1446,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "migrate",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 926,
														"src": "28738:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_contract$_IERC20_$286_$returns$_t_contract$_IERC20_$286_$",
															"typeString": "function (contract IERC20) external returns (contract IERC20)"
														}
													},
													"id": 1448,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "28738:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$286",
														"typeString": "contract IERC20"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "28718:45:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1459,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1451,
																"name": "bal",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1423,
																"src": "28782:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 1456,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967268,
																				"src": "28818:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_NFTMasterChef_$2269",
																					"typeString": "contract NFTMasterChef"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_NFTMasterChef_$2269",
																					"typeString": "contract NFTMasterChef"
																				}
																			],
																			"id": 1455,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "28810:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1454,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "28810:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1457,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "28810:13:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"expression": {
																		"id": 1452,
																		"name": "newLpToken",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1444,
																		"src": "28789:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$286",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 1453,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "balanceOf",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 208,
																	"src": "28789:20:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address) view external returns (uint256)"
																	}
																},
																"id": 1458,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "28789:35:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "28782:42:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "6d6967726174653a20626164",
															"id": 1460,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "28826:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ed1ac0ecd515e3d8f412b4c0ca319587a2238640d669089c98335a92c60abee8",
																"typeString": "literal_string \"migrate: bad\""
															},
															"value": "migrate: bad"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ed1ac0ecd515e3d8f412b4c0ca319587a2238640d669089c98335a92c60abee8",
																"typeString": "literal_string \"migrate: bad\""
															}
														],
														"id": 1450,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "28774:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1461,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "28774:67:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1462,
												"nodeType": "ExpressionStatement",
												"src": "28774:67:0"
											},
											{
												"expression": {
													"id": 1467,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1463,
															"name": "pool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1411,
															"src": "28852:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PoolInfo_$957_storage_ptr",
																"typeString": "struct NFTMasterChef.PoolInfo storage pointer"
															}
														},
														"id": 1465,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "lpToken",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 950,
														"src": "28852:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$286",
															"typeString": "contract IERC20"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1466,
														"name": "newLpToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1444,
														"src": "28867:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$286",
															"typeString": "contract IERC20"
														}
													},
													"src": "28852:25:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$286",
														"typeString": "contract IERC20"
													}
												},
												"id": 1468,
												"nodeType": "ExpressionStatement",
												"src": "28852:25:0"
											}
										]
									},
									"functionSelector": "454b0608",
									"id": 1470,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "migrate",
									"nameLocation": "28403:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1394,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1393,
												"mutability": "mutable",
												"name": "_pid",
												"nameLocation": "28419:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1470,
												"src": "28411:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1392,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "28411:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "28410:14:0"
									},
									"returnParameters": {
										"id": 1395,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "28432:0:0"
									},
									"scope": 2269,
									"src": "28394:491:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1487,
										"nodeType": "Block",
										"src": "29042:63:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1484,
															"name": "BONUS_MULTIPLIER",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 975,
															"src": "29080:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 1481,
																	"name": "_from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1472,
																	"src": "29069:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 1479,
																	"name": "_to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1474,
																	"src": "29061:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1480,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sub",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 44,
																"src": "29061:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 1482,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "29061:14:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1483,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "mul",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 107,
														"src": "29061:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1485,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "29061:36:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1478,
												"id": 1486,
												"nodeType": "Return",
												"src": "29054:43:0"
											}
										]
									},
									"functionSelector": "8dbb1e3a",
									"id": 1488,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getMultiplier",
									"nameLocation": "28970:13:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1475,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1472,
												"mutability": "mutable",
												"name": "_from",
												"nameLocation": "28992:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1488,
												"src": "28984:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1471,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "28984:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1474,
												"mutability": "mutable",
												"name": "_to",
												"nameLocation": "29007:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 1488,
												"src": "28999:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1473,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "28999:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "28983:28:0"
									},
									"returnParameters": {
										"id": 1478,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1477,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1488,
												"src": "29033:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1476,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "29033:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "29032:9:0"
									},
									"scope": 2269,
									"src": "28961:144:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1589,
										"nodeType": "Block",
										"src": "29252:685:0",
										"statements": [
											{
												"assignments": [
													1499
												],
												"declarations": [
													{
														"constant": false,
														"id": 1499,
														"mutability": "mutable",
														"name": "pool",
														"nameLocation": "29280:4:0",
														"nodeType": "VariableDeclaration",
														"scope": 1589,
														"src": "29263:21:0",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_PoolInfo_$957_storage_ptr",
															"typeString": "struct NFTMasterChef.PoolInfo"
														},
														"typeName": {
															"id": 1498,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1497,
																"name": "PoolInfo",
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 957,
																"src": "29263:8:0"
															},
															"referencedDeclaration": 957,
															"src": "29263:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PoolInfo_$957_storage_ptr",
																"typeString": "struct NFTMasterChef.PoolInfo"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1503,
												"initialValue": {
													"baseExpression": {
														"id": 1500,
														"name": "poolInfo",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 982,
														"src": "29287:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_PoolInfo_$957_storage_$dyn_storage",
															"typeString": "struct NFTMasterChef.PoolInfo storage ref[] storage ref"
														}
													},
													"id": 1502,
													"indexExpression": {
														"id": 1501,
														"name": "_pid",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1490,
														"src": "29296:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "29287:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_PoolInfo_$957_storage",
														"typeString": "struct NFTMasterChef.PoolInfo storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "29263:38:0"
											},
											{
												"assignments": [
													1506
												],
												"declarations": [
													{
														"constant": false,
														"id": 1506,
														"mutability": "mutable",
														"name": "user",
														"nameLocation": "29329:4:0",
														"nodeType": "VariableDeclaration",
														"scope": 1589,
														"src": "29312:21:0",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_UserInfo_$947_storage_ptr",
															"typeString": "struct NFTMasterChef.UserInfo"
														},
														"typeName": {
															"id": 1505,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1504,
																"name": "UserInfo",
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 947,
																"src": "29312:8:0"
															},
															"referencedDeclaration": 947,
															"src": "29312:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$947_storage_ptr",
																"typeString": "struct NFTMasterChef.UserInfo"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1512,
												"initialValue": {
													"baseExpression": {
														"baseExpression": {
															"id": 1507,
															"name": "userInfo",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 989,
															"src": "29336:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_struct$_UserInfo_$947_storage_$_$",
																"typeString": "mapping(uint256 => mapping(address => struct NFTMasterChef.UserInfo storage ref))"
															}
														},
														"id": 1509,
														"indexExpression": {
															"id": 1508,
															"name": "_pid",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1490,
															"src": "29345:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "29336:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserInfo_$947_storage_$",
															"typeString": "mapping(address => struct NFTMasterChef.UserInfo storage ref)"
														}
													},
													"id": 1511,
													"indexExpression": {
														"id": 1510,
														"name": "_user",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1492,
														"src": "29351:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "29336:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UserInfo_$947_storage",
														"typeString": "struct NFTMasterChef.UserInfo storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "29312:45:0"
											},
											{
												"assignments": [
													1514
												],
												"declarations": [
													{
														"constant": false,
														"id": 1514,
														"mutability": "mutable",
														"name": "accPowerPerShare",
														"nameLocation": "29376:16:0",
														"nodeType": "VariableDeclaration",
														"scope": 1589,
														"src": "29368:24:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1513,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "29368:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1517,
												"initialValue": {
													"expression": {
														"id": 1515,
														"name": "pool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1499,
														"src": "29395:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_PoolInfo_$957_storage_ptr",
															"typeString": "struct NFTMasterChef.PoolInfo storage pointer"
														}
													},
													"id": 1516,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "accPowerPerShare",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 956,
													"src": "29395:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "29368:48:0"
											},
											{
												"assignments": [
													1519
												],
												"declarations": [
													{
														"constant": false,
														"id": 1519,
														"mutability": "mutable",
														"name": "lpSupply",
														"nameLocation": "29435:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 1589,
														"src": "29427:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1518,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "29427:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1528,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1525,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "29477:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_NFTMasterChef_$2269",
																		"typeString": "contract NFTMasterChef"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_NFTMasterChef_$2269",
																		"typeString": "contract NFTMasterChef"
																	}
																],
																"id": 1524,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "29469:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1523,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "29469:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 1526,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "29469:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"expression": {
																"id": 1520,
																"name": "pool",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1499,
																"src": "29446:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_PoolInfo_$957_storage_ptr",
																	"typeString": "struct NFTMasterChef.PoolInfo storage pointer"
																}
															},
															"id": 1521,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "lpToken",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 950,
															"src": "29446:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$286",
																"typeString": "contract IERC20"
															}
														},
														"id": 1522,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "balanceOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 208,
														"src": "29446:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 1527,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "29446:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "29427:56:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1537,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1533,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 1529,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "29498:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 1530,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "number",
															"nodeType": "MemberAccess",
															"src": "29498:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"expression": {
																"id": 1531,
																"name": "pool",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1499,
																"src": "29513:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_PoolInfo_$957_storage_ptr",
																	"typeString": "struct NFTMasterChef.PoolInfo storage pointer"
																}
															},
															"id": 1532,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "lastRewardBlock",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 954,
															"src": "29513:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "29498:35:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1536,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1534,
															"name": "lpSupply",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1519,
															"src": "29537:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"hexValue": "30",
															"id": 1535,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "29549:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "29537:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "29498:52:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1575,
												"nodeType": "IfStatement",
												"src": "29494:354:0",
												"trueBody": {
													"id": 1574,
													"nodeType": "Block",
													"src": "29552:296:0",
													"statements": [
														{
															"assignments": [
																1539
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1539,
																	"mutability": "mutable",
																	"name": "multiplier",
																	"nameLocation": "29575:10:0",
																	"nodeType": "VariableDeclaration",
																	"scope": 1574,
																	"src": "29567:18:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1538,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "29567:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1546,
															"initialValue": {
																"arguments": [
																	{
																		"expression": {
																			"id": 1541,
																			"name": "pool",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1499,
																			"src": "29602:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_PoolInfo_$957_storage_ptr",
																				"typeString": "struct NFTMasterChef.PoolInfo storage pointer"
																			}
																		},
																		"id": 1542,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "lastRewardBlock",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 954,
																		"src": "29602:20:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"expression": {
																			"id": 1543,
																			"name": "block",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967292,
																			"src": "29624:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_block",
																				"typeString": "block"
																			}
																		},
																		"id": 1544,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "number",
																		"nodeType": "MemberAccess",
																		"src": "29624:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1540,
																	"name": "getMultiplier",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1488,
																	"src": "29588:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																		"typeString": "function (uint256,uint256) view returns (uint256)"
																	}
																},
																"id": 1545,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "29588:49:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "29567:70:0"
														},
														{
															"assignments": [
																1548
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1548,
																	"mutability": "mutable",
																	"name": "PowerReward",
																	"nameLocation": "29660:11:0",
																	"nodeType": "VariableDeclaration",
																	"scope": 1574,
																	"src": "29652:19:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1547,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "29652:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1560,
															"initialValue": {
																"arguments": [
																	{
																		"id": 1558,
																		"name": "totalAllocPoint",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 992,
																		"src": "29729:15:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"expression": {
																					"id": 1554,
																					"name": "pool",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1499,
																					"src": "29708:4:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_PoolInfo_$957_storage_ptr",
																						"typeString": "struct NFTMasterChef.PoolInfo storage pointer"
																					}
																				},
																				"id": 1555,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "allocPoint",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 952,
																				"src": "29708:15:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"expression": {
																				"arguments": [
																					{
																						"id": 1551,
																						"name": "PowerPerBlock",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 972,
																						"src": "29689:13:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					],
																					"expression": {
																						"id": 1549,
																						"name": "multiplier",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1539,
																						"src": "29674:10:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"id": 1550,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "mul",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 107,
																					"src": "29674:14:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																						"typeString": "function (uint256,uint256) pure returns (uint256)"
																					}
																				},
																				"id": 1552,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "29674:29:0",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"id": 1553,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "mul",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 107,
																			"src": "29674:33:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																				"typeString": "function (uint256,uint256) pure returns (uint256)"
																			}
																		},
																		"id": 1556,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "29674:50:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1557,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "div",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 124,
																	"src": "29674:54:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 1559,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "29674:71:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "29652:93:0"
														},
														{
															"expression": {
																"id": 1572,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1561,
																	"name": "accPowerPerShare",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1514,
																	"src": "29760:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 1569,
																					"name": "lpSupply",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1519,
																					"src": "29826:8:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"arguments": [
																						{
																							"hexValue": "31653132",
																							"id": 1566,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "29816:4:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_1000000000000_by_1",
																								"typeString": "int_const 1000000000000"
																							},
																							"value": "1e12"
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_rational_1000000000000_by_1",
																								"typeString": "int_const 1000000000000"
																							}
																						],
																						"expression": {
																							"id": 1564,
																							"name": "PowerReward",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1548,
																							"src": "29800:11:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"id": 1565,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberName": "mul",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 107,
																						"src": "29800:15:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																							"typeString": "function (uint256,uint256) pure returns (uint256)"
																						}
																					},
																					"id": 1567,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "29800:21:0",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 1568,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "div",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 124,
																				"src": "29800:25:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																					"typeString": "function (uint256,uint256) pure returns (uint256)"
																				}
																			},
																			"id": 1570,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "29800:35:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"id": 1562,
																			"name": "accPowerPerShare",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1514,
																			"src": "29779:16:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1563,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "add",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 27,
																		"src": "29779:20:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 1571,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "29779:57:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "29760:76:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1573,
															"nodeType": "ExpressionStatement",
															"src": "29760:76:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1585,
																"name": "user",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1506,
																"src": "29913:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_UserInfo_$947_storage_ptr",
																	"typeString": "struct NFTMasterChef.UserInfo storage pointer"
																}
															},
															"id": 1586,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "rewardDebt",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 946,
															"src": "29913:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"hexValue": "31653132",
																	"id": 1582,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "29903:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1000000000000_by_1",
																		"typeString": "int_const 1000000000000"
																	},
																	"value": "1e12"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_1000000000000_by_1",
																		"typeString": "int_const 1000000000000"
																	}
																],
																"expression": {
																	"arguments": [
																		{
																			"id": 1579,
																			"name": "accPowerPerShare",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1514,
																			"src": "29881:16:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"expression": {
																				"id": 1576,
																				"name": "user",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1506,
																				"src": "29865:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_UserInfo_$947_storage_ptr",
																					"typeString": "struct NFTMasterChef.UserInfo storage pointer"
																				}
																			},
																			"id": 1577,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "amount",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 944,
																			"src": "29865:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1578,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "mul",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 107,
																		"src": "29865:15:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 1580,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "29865:33:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1581,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "div",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 124,
																"src": "29865:37:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 1583,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "29865:43:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1584,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sub",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 44,
														"src": "29865:47:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1587,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "29865:64:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1496,
												"id": 1588,
												"nodeType": "Return",
												"src": "29858:71:0"
											}
										]
									},
									"functionSelector": "f3239ab5",
									"id": 1590,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "pendingPower",
									"nameLocation": "29179:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1493,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1490,
												"mutability": "mutable",
												"name": "_pid",
												"nameLocation": "29200:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1590,
												"src": "29192:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1489,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "29192:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1492,
												"mutability": "mutable",
												"name": "_user",
												"nameLocation": "29214:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1590,
												"src": "29206:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1491,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "29206:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "29191:29:0"
									},
									"returnParameters": {
										"id": 1496,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1495,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1590,
												"src": "29244:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1494,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "29244:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "29243:9:0"
									},
									"scope": 2269,
									"src": "29170:767:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1614,
										"nodeType": "Block",
										"src": "30054:146:0",
										"statements": [
											{
												"assignments": [
													1594
												],
												"declarations": [
													{
														"constant": false,
														"id": 1594,
														"mutability": "mutable",
														"name": "length",
														"nameLocation": "30073:6:0",
														"nodeType": "VariableDeclaration",
														"scope": 1614,
														"src": "30065:14:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1593,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "30065:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1597,
												"initialValue": {
													"expression": {
														"id": 1595,
														"name": "poolInfo",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 982,
														"src": "30082:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_PoolInfo_$957_storage_$dyn_storage",
															"typeString": "struct NFTMasterChef.PoolInfo storage ref[] storage ref"
														}
													},
													"id": 1596,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "length",
													"nodeType": "MemberAccess",
													"src": "30082:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "30065:32:0"
											},
											{
												"body": {
													"id": 1612,
													"nodeType": "Block",
													"src": "30151:42:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1609,
																		"name": "pid",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1599,
																		"src": "30177:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1608,
																	"name": "updatePool",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1706,
																	"src": "30166:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
																		"typeString": "function (uint256)"
																	}
																},
																"id": 1610,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "30166:15:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1611,
															"nodeType": "ExpressionStatement",
															"src": "30166:15:0"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1604,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1602,
														"name": "pid",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1599,
														"src": "30130:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 1603,
														"name": "length",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1594,
														"src": "30136:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "30130:12:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1613,
												"initializationExpression": {
													"assignments": [
														1599
													],
													"declarations": [
														{
															"constant": false,
															"id": 1599,
															"mutability": "mutable",
															"name": "pid",
															"nameLocation": "30121:3:0",
															"nodeType": "VariableDeclaration",
															"scope": 1613,
															"src": "30113:11:0",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1598,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "30113:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 1601,
													"initialValue": {
														"hexValue": "30",
														"id": 1600,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "30127:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "30113:15:0"
												},
												"loopExpression": {
													"expression": {
														"id": 1606,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": true,
														"src": "30144:5:0",
														"subExpression": {
															"id": 1605,
															"name": "pid",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1599,
															"src": "30146:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1607,
													"nodeType": "ExpressionStatement",
													"src": "30144:5:0"
												},
												"nodeType": "ForStatement",
												"src": "30108:85:0"
											}
										]
									},
									"functionSelector": "630b5ba1",
									"id": 1615,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "massUpdatePools",
									"nameLocation": "30029:15:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1591,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "30044:2:0"
									},
									"returnParameters": {
										"id": 1592,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "30054:0:0"
									},
									"scope": 2269,
									"src": "30020:180:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1705,
										"nodeType": "Block",
										"src": "30317:649:0",
										"statements": [
											{
												"assignments": [
													1622
												],
												"declarations": [
													{
														"constant": false,
														"id": 1622,
														"mutability": "mutable",
														"name": "pool",
														"nameLocation": "30345:4:0",
														"nodeType": "VariableDeclaration",
														"scope": 1705,
														"src": "30328:21:0",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_PoolInfo_$957_storage_ptr",
															"typeString": "struct NFTMasterChef.PoolInfo"
														},
														"typeName": {
															"id": 1621,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1620,
																"name": "PoolInfo",
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 957,
																"src": "30328:8:0"
															},
															"referencedDeclaration": 957,
															"src": "30328:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PoolInfo_$957_storage_ptr",
																"typeString": "struct NFTMasterChef.PoolInfo"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1626,
												"initialValue": {
													"baseExpression": {
														"id": 1623,
														"name": "poolInfo",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 982,
														"src": "30352:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_PoolInfo_$957_storage_$dyn_storage",
															"typeString": "struct NFTMasterChef.PoolInfo storage ref[] storage ref"
														}
													},
													"id": 1625,
													"indexExpression": {
														"id": 1624,
														"name": "_pid",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1617,
														"src": "30361:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "30352:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_PoolInfo_$957_storage",
														"typeString": "struct NFTMasterChef.PoolInfo storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "30328:38:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1631,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1627,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "30381:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 1628,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "number",
														"nodeType": "MemberAccess",
														"src": "30381:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<=",
													"rightExpression": {
														"expression": {
															"id": 1629,
															"name": "pool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1622,
															"src": "30397:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PoolInfo_$957_storage_ptr",
																"typeString": "struct NFTMasterChef.PoolInfo storage pointer"
															}
														},
														"id": 1630,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "lastRewardBlock",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 954,
														"src": "30397:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "30381:36:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1634,
												"nodeType": "IfStatement",
												"src": "30377:75:0",
												"trueBody": {
													"id": 1633,
													"nodeType": "Block",
													"src": "30419:33:0",
													"statements": [
														{
															"functionReturnParameters": 1619,
															"id": 1632,
															"nodeType": "Return",
															"src": "30434:7:0"
														}
													]
												}
											},
											{
												"assignments": [
													1636
												],
												"declarations": [
													{
														"constant": false,
														"id": 1636,
														"mutability": "mutable",
														"name": "lpSupply",
														"nameLocation": "30470:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 1705,
														"src": "30462:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1635,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "30462:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1645,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1642,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "30512:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_NFTMasterChef_$2269",
																		"typeString": "contract NFTMasterChef"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_NFTMasterChef_$2269",
																		"typeString": "contract NFTMasterChef"
																	}
																],
																"id": 1641,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "30504:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1640,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "30504:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 1643,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "30504:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"expression": {
																"id": 1637,
																"name": "pool",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1622,
																"src": "30481:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_PoolInfo_$957_storage_ptr",
																	"typeString": "struct NFTMasterChef.PoolInfo storage pointer"
																}
															},
															"id": 1638,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "lpToken",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 950,
															"src": "30481:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$286",
																"typeString": "contract IERC20"
															}
														},
														"id": 1639,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "balanceOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 208,
														"src": "30481:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 1644,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "30481:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "30462:56:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1648,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1646,
														"name": "lpSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1636,
														"src": "30533:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<=",
													"rightExpression": {
														"hexValue": "30",
														"id": 1647,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "30545:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "30533:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1658,
												"nodeType": "IfStatement",
												"src": "30529:102:0",
												"trueBody": {
													"id": 1657,
													"nodeType": "Block",
													"src": "30548:83:0",
													"statements": [
														{
															"expression": {
																"id": 1654,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 1649,
																		"name": "pool",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1622,
																		"src": "30563:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_PoolInfo_$957_storage_ptr",
																			"typeString": "struct NFTMasterChef.PoolInfo storage pointer"
																		}
																	},
																	"id": 1651,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberName": "lastRewardBlock",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 954,
																	"src": "30563:20:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"expression": {
																		"id": 1652,
																		"name": "block",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967292,
																		"src": "30586:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_block",
																			"typeString": "block"
																		}
																	},
																	"id": 1653,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "number",
																	"nodeType": "MemberAccess",
																	"src": "30586:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "30563:35:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1655,
															"nodeType": "ExpressionStatement",
															"src": "30563:35:0"
														},
														{
															"functionReturnParameters": 1619,
															"id": 1656,
															"nodeType": "Return",
															"src": "30613:7:0"
														}
													]
												}
											},
											{
												"assignments": [
													1660
												],
												"declarations": [
													{
														"constant": false,
														"id": 1660,
														"mutability": "mutable",
														"name": "multiplier",
														"nameLocation": "30649:10:0",
														"nodeType": "VariableDeclaration",
														"scope": 1705,
														"src": "30641:18:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1659,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "30641:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1667,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 1662,
																"name": "pool",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1622,
																"src": "30676:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_PoolInfo_$957_storage_ptr",
																	"typeString": "struct NFTMasterChef.PoolInfo storage pointer"
																}
															},
															"id": 1663,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "lastRewardBlock",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 954,
															"src": "30676:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 1664,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "30698:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 1665,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "number",
															"nodeType": "MemberAccess",
															"src": "30698:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1661,
														"name": "getMultiplier",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1488,
														"src": "30662:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256) view returns (uint256)"
														}
													},
													"id": 1666,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "30662:49:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "30641:70:0"
											},
											{
												"assignments": [
													1669
												],
												"declarations": [
													{
														"constant": false,
														"id": 1669,
														"mutability": "mutable",
														"name": "PowerReward",
														"nameLocation": "30730:11:0",
														"nodeType": "VariableDeclaration",
														"scope": 1705,
														"src": "30722:19:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1668,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "30722:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1681,
												"initialValue": {
													"arguments": [
														{
															"id": 1679,
															"name": "totalAllocPoint",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 992,
															"src": "30799:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"expression": {
																		"id": 1675,
																		"name": "pool",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1622,
																		"src": "30778:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_PoolInfo_$957_storage_ptr",
																			"typeString": "struct NFTMasterChef.PoolInfo storage pointer"
																		}
																	},
																	"id": 1676,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "allocPoint",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 952,
																	"src": "30778:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"arguments": [
																		{
																			"id": 1672,
																			"name": "PowerPerBlock",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 972,
																			"src": "30759:13:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"id": 1670,
																			"name": "multiplier",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1660,
																			"src": "30744:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1671,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "mul",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 107,
																		"src": "30744:14:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 1673,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "30744:29:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1674,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "mul",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 107,
																"src": "30744:33:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 1677,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "30744:50:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1678,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "div",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 124,
														"src": "30744:54:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1680,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "30744:71:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "30722:93:0"
											},
											{
												"expression": {
													"id": 1696,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1682,
															"name": "pool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1622,
															"src": "30826:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PoolInfo_$957_storage_ptr",
																"typeString": "struct NFTMasterChef.PoolInfo storage pointer"
															}
														},
														"id": 1684,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "accPowerPerShare",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 956,
														"src": "30826:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 1693,
																		"name": "lpSupply",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1636,
																		"src": "30902:8:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"hexValue": "31653132",
																				"id": 1690,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "30892:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1000000000000_by_1",
																					"typeString": "int_const 1000000000000"
																				},
																				"value": "1e12"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_1000000000000_by_1",
																					"typeString": "int_const 1000000000000"
																				}
																			],
																			"expression": {
																				"id": 1688,
																				"name": "PowerReward",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1669,
																				"src": "30876:11:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"id": 1689,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "mul",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 107,
																			"src": "30876:15:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																				"typeString": "function (uint256,uint256) pure returns (uint256)"
																			}
																		},
																		"id": 1691,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "30876:21:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1692,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "div",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 124,
																	"src": "30876:25:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 1694,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "30876:35:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"expression": {
																	"id": 1685,
																	"name": "pool",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1622,
																	"src": "30850:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_PoolInfo_$957_storage_ptr",
																		"typeString": "struct NFTMasterChef.PoolInfo storage pointer"
																	}
																},
																"id": 1686,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "accPowerPerShare",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 956,
																"src": "30850:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1687,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 27,
															"src": "30850:25:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1695,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "30850:62:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "30826:86:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1697,
												"nodeType": "ExpressionStatement",
												"src": "30826:86:0"
											},
											{
												"expression": {
													"id": 1703,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1698,
															"name": "pool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1622,
															"src": "30923:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PoolInfo_$957_storage_ptr",
																"typeString": "struct NFTMasterChef.PoolInfo storage pointer"
															}
														},
														"id": 1700,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "lastRewardBlock",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 954,
														"src": "30923:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 1701,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "30946:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 1702,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "number",
														"nodeType": "MemberAccess",
														"src": "30946:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "30923:35:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1704,
												"nodeType": "ExpressionStatement",
												"src": "30923:35:0"
											}
										]
									},
									"functionSelector": "51eb05a6",
									"id": 1706,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "updatePool",
									"nameLocation": "30285:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1618,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1617,
												"mutability": "mutable",
												"name": "_pid",
												"nameLocation": "30304:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1706,
												"src": "30296:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1616,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "30296:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "30295:14:0"
									},
									"returnParameters": {
										"id": 1619,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "30317:0:0"
									},
									"scope": 2269,
									"src": "30276:690:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1829,
										"nodeType": "Block",
										"src": "31091:741:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1716,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1714,
																"name": "_pid",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1708,
																"src": "31113:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"hexValue": "30",
																"id": 1715,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "31121:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "31113:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "6465706f73697420506f776572206279207374616b696e67",
															"id": 1717,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "31124:26:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_8997113db37475c3d966d2b1151c847dca6ccea70a4d4a2b46d60e92c3a8e108",
																"typeString": "literal_string \"deposit Power by staking\""
															},
															"value": "deposit Power by staking"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_8997113db37475c3d966d2b1151c847dca6ccea70a4d4a2b46d60e92c3a8e108",
																"typeString": "literal_string \"deposit Power by staking\""
															}
														],
														"id": 1713,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "31104:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1718,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "31104:47:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1719,
												"nodeType": "ExpressionStatement",
												"src": "31104:47:0"
											},
											{
												"assignments": [
													1722
												],
												"declarations": [
													{
														"constant": false,
														"id": 1722,
														"mutability": "mutable",
														"name": "pool",
														"nameLocation": "31181:4:0",
														"nodeType": "VariableDeclaration",
														"scope": 1829,
														"src": "31164:21:0",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_PoolInfo_$957_storage_ptr",
															"typeString": "struct NFTMasterChef.PoolInfo"
														},
														"typeName": {
															"id": 1721,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1720,
																"name": "PoolInfo",
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 957,
																"src": "31164:8:0"
															},
															"referencedDeclaration": 957,
															"src": "31164:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PoolInfo_$957_storage_ptr",
																"typeString": "struct NFTMasterChef.PoolInfo"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1726,
												"initialValue": {
													"baseExpression": {
														"id": 1723,
														"name": "poolInfo",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 982,
														"src": "31188:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_PoolInfo_$957_storage_$dyn_storage",
															"typeString": "struct NFTMasterChef.PoolInfo storage ref[] storage ref"
														}
													},
													"id": 1725,
													"indexExpression": {
														"id": 1724,
														"name": "_pid",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1708,
														"src": "31197:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "31188:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_PoolInfo_$957_storage",
														"typeString": "struct NFTMasterChef.PoolInfo storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "31164:38:0"
											},
											{
												"assignments": [
													1729
												],
												"declarations": [
													{
														"constant": false,
														"id": 1729,
														"mutability": "mutable",
														"name": "user",
														"nameLocation": "31230:4:0",
														"nodeType": "VariableDeclaration",
														"scope": 1829,
														"src": "31213:21:0",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_UserInfo_$947_storage_ptr",
															"typeString": "struct NFTMasterChef.UserInfo"
														},
														"typeName": {
															"id": 1728,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1727,
																"name": "UserInfo",
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 947,
																"src": "31213:8:0"
															},
															"referencedDeclaration": 947,
															"src": "31213:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$947_storage_ptr",
																"typeString": "struct NFTMasterChef.UserInfo"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1736,
												"initialValue": {
													"baseExpression": {
														"baseExpression": {
															"id": 1730,
															"name": "userInfo",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 989,
															"src": "31237:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_struct$_UserInfo_$947_storage_$_$",
																"typeString": "mapping(uint256 => mapping(address => struct NFTMasterChef.UserInfo storage ref))"
															}
														},
														"id": 1732,
														"indexExpression": {
															"id": 1731,
															"name": "_pid",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1708,
															"src": "31246:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "31237:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserInfo_$947_storage_$",
															"typeString": "mapping(address => struct NFTMasterChef.UserInfo storage ref)"
														}
													},
													"id": 1735,
													"indexExpression": {
														"expression": {
															"id": 1733,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "31252:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 1734,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "31252:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "31237:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UserInfo_$947_storage",
														"typeString": "struct NFTMasterChef.UserInfo storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "31213:50:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1738,
															"name": "_pid",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1708,
															"src": "31285:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1737,
														"name": "updatePool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1706,
														"src": "31274:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 1739,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "31274:16:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1740,
												"nodeType": "ExpressionStatement",
												"src": "31274:16:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1744,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1741,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1729,
															"src": "31305:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$947_storage_ptr",
																"typeString": "struct NFTMasterChef.UserInfo storage pointer"
															}
														},
														"id": 1742,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "amount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 944,
														"src": "31305:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1743,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "31319:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "31305:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1780,
												"nodeType": "IfStatement",
												"src": "31301:263:0",
												"trueBody": {
													"id": 1779,
													"nodeType": "Block",
													"src": "31322:242:0",
													"statements": [
														{
															"assignments": [
																1746
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1746,
																	"mutability": "mutable",
																	"name": "pending",
																	"nameLocation": "31345:7:0",
																	"nodeType": "VariableDeclaration",
																	"scope": 1779,
																	"src": "31337:15:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1745,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "31337:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1760,
															"initialValue": {
																"arguments": [
																	{
																		"expression": {
																			"id": 1757,
																			"name": "user",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1729,
																			"src": "31408:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_UserInfo_$947_storage_ptr",
																				"typeString": "struct NFTMasterChef.UserInfo storage pointer"
																			}
																		},
																		"id": 1758,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "rewardDebt",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 946,
																		"src": "31408:15:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"hexValue": "31653132",
																				"id": 1754,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "31398:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1000000000000_by_1",
																					"typeString": "int_const 1000000000000"
																				},
																				"value": "1e12"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_1000000000000_by_1",
																					"typeString": "int_const 1000000000000"
																				}
																			],
																			"expression": {
																				"arguments": [
																					{
																						"expression": {
																							"id": 1750,
																							"name": "pool",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1722,
																							"src": "31371:4:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_struct$_PoolInfo_$957_storage_ptr",
																								"typeString": "struct NFTMasterChef.PoolInfo storage pointer"
																							}
																						},
																						"id": 1751,
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberName": "accPowerPerShare",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 956,
																						"src": "31371:21:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					],
																					"expression": {
																						"expression": {
																							"id": 1747,
																							"name": "user",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1729,
																							"src": "31355:4:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_struct$_UserInfo_$947_storage_ptr",
																								"typeString": "struct NFTMasterChef.UserInfo storage pointer"
																							}
																						},
																						"id": 1748,
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberName": "amount",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 944,
																						"src": "31355:11:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"id": 1749,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "mul",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 107,
																					"src": "31355:15:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																						"typeString": "function (uint256,uint256) pure returns (uint256)"
																					}
																				},
																				"id": 1752,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "31355:38:0",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"id": 1753,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "div",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 124,
																			"src": "31355:42:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																				"typeString": "function (uint256,uint256) pure returns (uint256)"
																			}
																		},
																		"id": 1755,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "31355:48:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1756,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sub",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 44,
																	"src": "31355:52:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 1759,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "31355:69:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "31337:87:0"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1763,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1761,
																	"name": "pending",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1746,
																	"src": "31442:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 1762,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "31452:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "31442:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1778,
															"nodeType": "IfStatement",
															"src": "31439:114:0",
															"trueBody": {
																"id": 1777,
																"nodeType": "Block",
																"src": "31454:99:0",
																"statements": [
																	{
																		"expression": {
																			"id": 1775,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"baseExpression": {
																					"id": 1764,
																					"name": "powerBalance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 998,
																					"src": "31473:12:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																						"typeString": "mapping(address => uint256)"
																					}
																				},
																				"id": 1767,
																				"indexExpression": {
																					"expression": {
																						"id": 1765,
																						"name": "msg",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 4294967281,
																						"src": "31486:3:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_magic_message",
																							"typeString": "msg"
																						}
																					},
																					"id": 1766,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "sender",
																					"nodeType": "MemberAccess",
																					"src": "31486:10:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": true,
																				"nodeType": "IndexAccess",
																				"src": "31473:24:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"arguments": [
																					{
																						"id": 1773,
																						"name": "pending",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1746,
																						"src": "31529:7:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					],
																					"expression": {
																						"baseExpression": {
																							"id": 1768,
																							"name": "powerBalance",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 998,
																							"src": "31500:12:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																								"typeString": "mapping(address => uint256)"
																							}
																						},
																						"id": 1771,
																						"indexExpression": {
																							"expression": {
																								"id": 1769,
																								"name": "msg",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 4294967281,
																								"src": "31513:3:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_magic_message",
																									"typeString": "msg"
																								}
																							},
																							"id": 1770,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberName": "sender",
																							"nodeType": "MemberAccess",
																							"src": "31513:10:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						},
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "IndexAccess",
																						"src": "31500:24:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"id": 1772,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "add",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 27,
																					"src": "31500:28:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																						"typeString": "function (uint256,uint256) pure returns (uint256)"
																					}
																				},
																				"id": 1774,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "31500:37:0",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "31473:64:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1776,
																		"nodeType": "ExpressionStatement",
																		"src": "31473:64:0"
																	}
																]
															}
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"expression": {
																		"id": 1788,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "31612:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 1789,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "31612:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1787,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "31604:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1786,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "31604:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 1790,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "31604:19:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 1793,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "31633:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_NFTMasterChef_$2269",
																		"typeString": "contract NFTMasterChef"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_NFTMasterChef_$2269",
																		"typeString": "contract NFTMasterChef"
																	}
																],
																"id": 1792,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "31625:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1791,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "31625:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 1794,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "31625:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1795,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1710,
															"src": "31640:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"expression": {
																"id": 1781,
																"name": "pool",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1722,
																"src": "31574:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_PoolInfo_$957_storage_ptr",
																	"typeString": "struct NFTMasterChef.PoolInfo storage pointer"
																}
															},
															"id": 1784,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "lpToken",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 950,
															"src": "31574:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$286",
																"typeString": "contract IERC20"
															}
														},
														"id": 1785,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "safeTransferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 630,
														"src": "31574:29:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$286_$_t_address_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$286_$",
															"typeString": "function (contract IERC20,address,address,uint256)"
														}
													},
													"id": 1796,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "31574:74:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1797,
												"nodeType": "ExpressionStatement",
												"src": "31574:74:0"
											},
											{
												"expression": {
													"id": 1806,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1798,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1729,
															"src": "31659:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$947_storage_ptr",
																"typeString": "struct NFTMasterChef.UserInfo storage pointer"
															}
														},
														"id": 1800,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "amount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 944,
														"src": "31659:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1804,
																"name": "_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1710,
																"src": "31689:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"expression": {
																	"id": 1801,
																	"name": "user",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1729,
																	"src": "31673:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_UserInfo_$947_storage_ptr",
																		"typeString": "struct NFTMasterChef.UserInfo storage pointer"
																	}
																},
																"id": 1802,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "amount",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 944,
																"src": "31673:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1803,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 27,
															"src": "31673:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1805,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "31673:24:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "31659:38:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1807,
												"nodeType": "ExpressionStatement",
												"src": "31659:38:0"
											},
											{
												"expression": {
													"id": 1820,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1808,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1729,
															"src": "31708:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$947_storage_ptr",
																"typeString": "struct NFTMasterChef.UserInfo storage pointer"
															}
														},
														"id": 1810,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "rewardDebt",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 946,
														"src": "31708:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"hexValue": "31653132",
																"id": 1818,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "31769:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1000000000000_by_1",
																	"typeString": "int_const 1000000000000"
																},
																"value": "1e12"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_1000000000000_by_1",
																	"typeString": "int_const 1000000000000"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 1814,
																			"name": "pool",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1722,
																			"src": "31742:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_PoolInfo_$957_storage_ptr",
																				"typeString": "struct NFTMasterChef.PoolInfo storage pointer"
																			}
																		},
																		"id": 1815,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "accPowerPerShare",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 956,
																		"src": "31742:21:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"expression": {
																			"id": 1811,
																			"name": "user",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1729,
																			"src": "31726:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_UserInfo_$947_storage_ptr",
																				"typeString": "struct NFTMasterChef.UserInfo storage pointer"
																			}
																		},
																		"id": 1812,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "amount",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 944,
																		"src": "31726:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1813,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "mul",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 107,
																	"src": "31726:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 1816,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "31726:38:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1817,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "div",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 124,
															"src": "31726:42:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1819,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "31726:48:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "31708:66:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1821,
												"nodeType": "ExpressionStatement",
												"src": "31708:66:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1823,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "31798:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1824,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "31798:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1825,
															"name": "_pid",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1708,
															"src": "31810:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1826,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1710,
															"src": "31816:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1822,
														"name": "Deposit",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1006,
														"src": "31790:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,uint256)"
														}
													},
													"id": 1827,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "31790:34:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1828,
												"nodeType": "EmitStatement",
												"src": "31785:39:0"
											}
										]
									},
									"functionSelector": "e2bbb158",
									"id": 1830,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "deposit",
									"nameLocation": "31045:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1711,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1708,
												"mutability": "mutable",
												"name": "_pid",
												"nameLocation": "31061:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1830,
												"src": "31053:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1707,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "31053:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1710,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "31075:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1830,
												"src": "31067:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1709,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "31067:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "31052:31:0"
									},
									"returnParameters": {
										"id": 1712,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "31091:0:0"
									},
									"scope": 2269,
									"src": "31036:796:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1951,
										"nodeType": "Block",
										"src": "31940:731:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1840,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1838,
																"name": "_pid",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1832,
																"src": "31962:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"hexValue": "30",
																"id": 1839,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "31970:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "31962:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "776974686472617720506f77657220627920756e7374616b696e67",
															"id": 1841,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "31973:29:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_2af9ac489fdfd3845a7a7fd4a89fb65b5b2a06bf8679b70fd9b405dd9a5bbd5f",
																"typeString": "literal_string \"withdraw Power by unstaking\""
															},
															"value": "withdraw Power by unstaking"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_2af9ac489fdfd3845a7a7fd4a89fb65b5b2a06bf8679b70fd9b405dd9a5bbd5f",
																"typeString": "literal_string \"withdraw Power by unstaking\""
															}
														],
														"id": 1837,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "31953:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1842,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "31953:50:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1843,
												"nodeType": "ExpressionStatement",
												"src": "31953:50:0"
											},
											{
												"assignments": [
													1846
												],
												"declarations": [
													{
														"constant": false,
														"id": 1846,
														"mutability": "mutable",
														"name": "pool",
														"nameLocation": "32033:4:0",
														"nodeType": "VariableDeclaration",
														"scope": 1951,
														"src": "32016:21:0",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_PoolInfo_$957_storage_ptr",
															"typeString": "struct NFTMasterChef.PoolInfo"
														},
														"typeName": {
															"id": 1845,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1844,
																"name": "PoolInfo",
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 957,
																"src": "32016:8:0"
															},
															"referencedDeclaration": 957,
															"src": "32016:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PoolInfo_$957_storage_ptr",
																"typeString": "struct NFTMasterChef.PoolInfo"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1850,
												"initialValue": {
													"baseExpression": {
														"id": 1847,
														"name": "poolInfo",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 982,
														"src": "32040:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_PoolInfo_$957_storage_$dyn_storage",
															"typeString": "struct NFTMasterChef.PoolInfo storage ref[] storage ref"
														}
													},
													"id": 1849,
													"indexExpression": {
														"id": 1848,
														"name": "_pid",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1832,
														"src": "32049:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "32040:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_PoolInfo_$957_storage",
														"typeString": "struct NFTMasterChef.PoolInfo storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "32016:38:0"
											},
											{
												"assignments": [
													1853
												],
												"declarations": [
													{
														"constant": false,
														"id": 1853,
														"mutability": "mutable",
														"name": "user",
														"nameLocation": "32082:4:0",
														"nodeType": "VariableDeclaration",
														"scope": 1951,
														"src": "32065:21:0",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_UserInfo_$947_storage_ptr",
															"typeString": "struct NFTMasterChef.UserInfo"
														},
														"typeName": {
															"id": 1852,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1851,
																"name": "UserInfo",
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 947,
																"src": "32065:8:0"
															},
															"referencedDeclaration": 947,
															"src": "32065:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$947_storage_ptr",
																"typeString": "struct NFTMasterChef.UserInfo"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1860,
												"initialValue": {
													"baseExpression": {
														"baseExpression": {
															"id": 1854,
															"name": "userInfo",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 989,
															"src": "32089:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_struct$_UserInfo_$947_storage_$_$",
																"typeString": "mapping(uint256 => mapping(address => struct NFTMasterChef.UserInfo storage ref))"
															}
														},
														"id": 1856,
														"indexExpression": {
															"id": 1855,
															"name": "_pid",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1832,
															"src": "32098:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "32089:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserInfo_$947_storage_$",
															"typeString": "mapping(address => struct NFTMasterChef.UserInfo storage ref)"
														}
													},
													"id": 1859,
													"indexExpression": {
														"expression": {
															"id": 1857,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "32104:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 1858,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "32104:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "32089:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UserInfo_$947_storage",
														"typeString": "struct NFTMasterChef.UserInfo storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "32065:50:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1865,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1862,
																	"name": "user",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1853,
																	"src": "32134:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_UserInfo_$947_storage_ptr",
																		"typeString": "struct NFTMasterChef.UserInfo storage pointer"
																	}
																},
																"id": 1863,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "amount",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 944,
																"src": "32134:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1864,
																"name": "_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1834,
																"src": "32149:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "32134:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "77697468647261773a206e6f7420676f6f64",
															"id": 1866,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "32158:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d09049ba12a4b0d32c8152176161276998fb1529c6184e3c4227161fe99644df",
																"typeString": "literal_string \"withdraw: not good\""
															},
															"value": "withdraw: not good"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_d09049ba12a4b0d32c8152176161276998fb1529c6184e3c4227161fe99644df",
																"typeString": "literal_string \"withdraw: not good\""
															}
														],
														"id": 1861,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "32126:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1867,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "32126:53:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1868,
												"nodeType": "ExpressionStatement",
												"src": "32126:53:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1870,
															"name": "_pid",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1832,
															"src": "32201:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1869,
														"name": "updatePool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1706,
														"src": "32190:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 1871,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "32190:16:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1872,
												"nodeType": "ExpressionStatement",
												"src": "32190:16:0"
											},
											{
												"assignments": [
													1874
												],
												"declarations": [
													{
														"constant": false,
														"id": 1874,
														"mutability": "mutable",
														"name": "pending",
														"nameLocation": "32225:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 1951,
														"src": "32217:15:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1873,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "32217:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1888,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 1885,
																"name": "user",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1853,
																"src": "32288:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_UserInfo_$947_storage_ptr",
																	"typeString": "struct NFTMasterChef.UserInfo storage pointer"
																}
															},
															"id": 1886,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "rewardDebt",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 946,
															"src": "32288:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"hexValue": "31653132",
																	"id": 1882,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "32278:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1000000000000_by_1",
																		"typeString": "int_const 1000000000000"
																	},
																	"value": "1e12"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_1000000000000_by_1",
																		"typeString": "int_const 1000000000000"
																	}
																],
																"expression": {
																	"arguments": [
																		{
																			"expression": {
																				"id": 1878,
																				"name": "pool",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1846,
																				"src": "32251:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_PoolInfo_$957_storage_ptr",
																					"typeString": "struct NFTMasterChef.PoolInfo storage pointer"
																				}
																			},
																			"id": 1879,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "accPowerPerShare",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 956,
																			"src": "32251:21:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"expression": {
																				"id": 1875,
																				"name": "user",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1853,
																				"src": "32235:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_UserInfo_$947_storage_ptr",
																					"typeString": "struct NFTMasterChef.UserInfo storage pointer"
																				}
																			},
																			"id": 1876,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "amount",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 944,
																			"src": "32235:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1877,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "mul",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 107,
																		"src": "32235:15:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 1880,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "32235:38:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1881,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "div",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 124,
																"src": "32235:42:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 1883,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "32235:48:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1884,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sub",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 44,
														"src": "32235:52:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1887,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "32235:69:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "32217:87:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1891,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1889,
														"name": "pending",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1874,
														"src": "32318:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1890,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "32328:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "32318:11:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1906,
												"nodeType": "IfStatement",
												"src": "32315:106:0",
												"trueBody": {
													"id": 1905,
													"nodeType": "Block",
													"src": "32330:91:0",
													"statements": [
														{
															"expression": {
																"id": 1903,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 1892,
																		"name": "powerBalance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 998,
																		"src": "32345:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 1895,
																	"indexExpression": {
																		"expression": {
																			"id": 1893,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "32358:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1894,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "32358:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "32345:24:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"id": 1901,
																			"name": "pending",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1874,
																			"src": "32401:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"baseExpression": {
																				"id": 1896,
																				"name": "powerBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 998,
																				"src": "32372:12:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 1899,
																			"indexExpression": {
																				"expression": {
																					"id": 1897,
																					"name": "msg",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967281,
																					"src": "32385:3:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_message",
																						"typeString": "msg"
																					}
																				},
																				"id": 1898,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "sender",
																				"nodeType": "MemberAccess",
																				"src": "32385:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "32372:24:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1900,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "add",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 27,
																		"src": "32372:28:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 1902,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "32372:37:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "32345:64:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1904,
															"nodeType": "ExpressionStatement",
															"src": "32345:64:0"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1915,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1907,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1853,
															"src": "32431:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$947_storage_ptr",
																"typeString": "struct NFTMasterChef.UserInfo storage pointer"
															}
														},
														"id": 1909,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "amount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 944,
														"src": "32431:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1913,
																"name": "_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1834,
																"src": "32461:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"expression": {
																	"id": 1910,
																	"name": "user",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1853,
																	"src": "32445:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_UserInfo_$947_storage_ptr",
																		"typeString": "struct NFTMasterChef.UserInfo storage pointer"
																	}
																},
																"id": 1911,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "amount",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 944,
																"src": "32445:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1912,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 44,
															"src": "32445:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1914,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "32445:24:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "32431:38:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1916,
												"nodeType": "ExpressionStatement",
												"src": "32431:38:0"
											},
											{
												"expression": {
													"id": 1929,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1917,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1853,
															"src": "32480:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$947_storage_ptr",
																"typeString": "struct NFTMasterChef.UserInfo storage pointer"
															}
														},
														"id": 1919,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "rewardDebt",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 946,
														"src": "32480:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"hexValue": "31653132",
																"id": 1927,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "32541:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1000000000000_by_1",
																	"typeString": "int_const 1000000000000"
																},
																"value": "1e12"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_1000000000000_by_1",
																	"typeString": "int_const 1000000000000"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 1923,
																			"name": "pool",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1846,
																			"src": "32514:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_PoolInfo_$957_storage_ptr",
																				"typeString": "struct NFTMasterChef.PoolInfo storage pointer"
																			}
																		},
																		"id": 1924,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "accPowerPerShare",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 956,
																		"src": "32514:21:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"expression": {
																			"id": 1920,
																			"name": "user",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1853,
																			"src": "32498:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_UserInfo_$947_storage_ptr",
																				"typeString": "struct NFTMasterChef.UserInfo storage pointer"
																			}
																		},
																		"id": 1921,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "amount",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 944,
																		"src": "32498:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1922,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "mul",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 107,
																	"src": "32498:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 1925,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "32498:38:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1926,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "div",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 124,
															"src": "32498:42:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1928,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "32498:48:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "32480:66:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1930,
												"nodeType": "ExpressionStatement",
												"src": "32480:66:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"expression": {
																		"id": 1938,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "32591:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 1939,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "32591:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1937,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "32583:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1936,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "32583:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 1940,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "32583:19:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1941,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1834,
															"src": "32604:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"expression": {
																"id": 1931,
																"name": "pool",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1846,
																"src": "32557:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_PoolInfo_$957_storage_ptr",
																	"typeString": "struct NFTMasterChef.PoolInfo storage pointer"
																}
															},
															"id": 1934,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "lpToken",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 950,
															"src": "32557:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$286",
																"typeString": "contract IERC20"
															}
														},
														"id": 1935,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "safeTransfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 604,
														"src": "32557:25:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$286_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$286_$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 1942,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "32557:55:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1943,
												"nodeType": "ExpressionStatement",
												"src": "32557:55:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1945,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "32637:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1946,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "32637:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1947,
															"name": "_pid",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1832,
															"src": "32649:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1948,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1834,
															"src": "32655:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1944,
														"name": "Withdraw",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1014,
														"src": "32628:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,uint256)"
														}
													},
													"id": 1949,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "32628:35:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1950,
												"nodeType": "EmitStatement",
												"src": "32623:40:0"
											}
										]
									},
									"functionSelector": "441a3e70",
									"id": 1952,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "withdraw",
									"nameLocation": "31893:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1835,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1832,
												"mutability": "mutable",
												"name": "_pid",
												"nameLocation": "31910:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1952,
												"src": "31902:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1831,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "31902:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1834,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "31924:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1952,
												"src": "31916:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1833,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "31916:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "31901:31:0"
									},
									"returnParameters": {
										"id": 1836,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "31940:0:0"
									},
									"scope": 2269,
									"src": "31884:787:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2080,
										"nodeType": "Block",
										"src": "32770:751:0",
										"statements": [
											{
												"assignments": [
													1959
												],
												"declarations": [
													{
														"constant": false,
														"id": 1959,
														"mutability": "mutable",
														"name": "pool",
														"nameLocation": "32798:4:0",
														"nodeType": "VariableDeclaration",
														"scope": 2080,
														"src": "32781:21:0",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_PoolInfo_$957_storage_ptr",
															"typeString": "struct NFTMasterChef.PoolInfo"
														},
														"typeName": {
															"id": 1958,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1957,
																"name": "PoolInfo",
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 957,
																"src": "32781:8:0"
															},
															"referencedDeclaration": 957,
															"src": "32781:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PoolInfo_$957_storage_ptr",
																"typeString": "struct NFTMasterChef.PoolInfo"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1963,
												"initialValue": {
													"baseExpression": {
														"id": 1960,
														"name": "poolInfo",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 982,
														"src": "32805:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_PoolInfo_$957_storage_$dyn_storage",
															"typeString": "struct NFTMasterChef.PoolInfo storage ref[] storage ref"
														}
													},
													"id": 1962,
													"indexExpression": {
														"hexValue": "30",
														"id": 1961,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "32814:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "32805:11:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_PoolInfo_$957_storage",
														"typeString": "struct NFTMasterChef.PoolInfo storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "32781:35:0"
											},
											{
												"assignments": [
													1966
												],
												"declarations": [
													{
														"constant": false,
														"id": 1966,
														"mutability": "mutable",
														"name": "user",
														"nameLocation": "32844:4:0",
														"nodeType": "VariableDeclaration",
														"scope": 2080,
														"src": "32827:21:0",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_UserInfo_$947_storage_ptr",
															"typeString": "struct NFTMasterChef.UserInfo"
														},
														"typeName": {
															"id": 1965,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1964,
																"name": "UserInfo",
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 947,
																"src": "32827:8:0"
															},
															"referencedDeclaration": 947,
															"src": "32827:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$947_storage_ptr",
																"typeString": "struct NFTMasterChef.UserInfo"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1976,
												"initialValue": {
													"baseExpression": {
														"baseExpression": {
															"id": 1967,
															"name": "userInfo",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 989,
															"src": "32851:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_struct$_UserInfo_$947_storage_$_$",
																"typeString": "mapping(uint256 => mapping(address => struct NFTMasterChef.UserInfo storage ref))"
															}
														},
														"id": 1969,
														"indexExpression": {
															"hexValue": "30",
															"id": 1968,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "32860:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "32851:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserInfo_$947_storage_$",
															"typeString": "mapping(address => struct NFTMasterChef.UserInfo storage ref)"
														}
													},
													"id": 1975,
													"indexExpression": {
														"arguments": [
															{
																"expression": {
																	"id": 1972,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "32871:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1973,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "32871:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 1971,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "32863:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1970,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "32863:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 1974,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "32863:19:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "32851:32:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UserInfo_$947_storage",
														"typeString": "struct NFTMasterChef.UserInfo storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "32827:56:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"hexValue": "30",
															"id": 1978,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "32915:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															}
														],
														"id": 1977,
														"name": "updatePool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1706,
														"src": "32904:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 1979,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "32904:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1980,
												"nodeType": "ExpressionStatement",
												"src": "32904:13:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1984,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1981,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1966,
															"src": "32932:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$947_storage_ptr",
																"typeString": "struct NFTMasterChef.UserInfo storage pointer"
															}
														},
														"id": 1982,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "amount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 944,
														"src": "32932:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1983,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "32946:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "32932:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2026,
												"nodeType": "IfStatement",
												"src": "32928:282:0",
												"trueBody": {
													"id": 2025,
													"nodeType": "Block",
													"src": "32949:261:0",
													"statements": [
														{
															"assignments": [
																1986
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1986,
																	"mutability": "mutable",
																	"name": "pending",
																	"nameLocation": "32972:7:0",
																	"nodeType": "VariableDeclaration",
																	"scope": 2025,
																	"src": "32964:15:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1985,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "32964:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 2000,
															"initialValue": {
																"arguments": [
																	{
																		"expression": {
																			"id": 1997,
																			"name": "user",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1966,
																			"src": "33035:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_UserInfo_$947_storage_ptr",
																				"typeString": "struct NFTMasterChef.UserInfo storage pointer"
																			}
																		},
																		"id": 1998,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "rewardDebt",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 946,
																		"src": "33035:15:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"hexValue": "31653132",
																				"id": 1994,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "33025:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1000000000000_by_1",
																					"typeString": "int_const 1000000000000"
																				},
																				"value": "1e12"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_1000000000000_by_1",
																					"typeString": "int_const 1000000000000"
																				}
																			],
																			"expression": {
																				"arguments": [
																					{
																						"expression": {
																							"id": 1990,
																							"name": "pool",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1959,
																							"src": "32998:4:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_struct$_PoolInfo_$957_storage_ptr",
																								"typeString": "struct NFTMasterChef.PoolInfo storage pointer"
																							}
																						},
																						"id": 1991,
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberName": "accPowerPerShare",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 956,
																						"src": "32998:21:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					],
																					"expression": {
																						"expression": {
																							"id": 1987,
																							"name": "user",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1966,
																							"src": "32982:4:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_struct$_UserInfo_$947_storage_ptr",
																								"typeString": "struct NFTMasterChef.UserInfo storage pointer"
																							}
																						},
																						"id": 1988,
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberName": "amount",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 944,
																						"src": "32982:11:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"id": 1989,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "mul",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 107,
																					"src": "32982:15:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																						"typeString": "function (uint256,uint256) pure returns (uint256)"
																					}
																				},
																				"id": 1992,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "32982:38:0",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"id": 1993,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "div",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 124,
																			"src": "32982:42:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																				"typeString": "function (uint256,uint256) pure returns (uint256)"
																			}
																		},
																		"id": 1995,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "32982:48:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1996,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sub",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 44,
																	"src": "32982:52:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 1999,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "32982:69:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "32964:87:0"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2003,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2001,
																	"name": "pending",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1986,
																	"src": "33069:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 2002,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "33079:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "33069:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 2024,
															"nodeType": "IfStatement",
															"src": "33066:133:0",
															"trueBody": {
																"id": 2023,
																"nodeType": "Block",
																"src": "33082:117:0",
																"statements": [
																	{
																		"expression": {
																			"id": 2021,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"baseExpression": {
																					"id": 2004,
																					"name": "powerBalance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 998,
																					"src": "33101:12:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																						"typeString": "mapping(address => uint256)"
																					}
																				},
																				"id": 2010,
																				"indexExpression": {
																					"arguments": [
																						{
																							"expression": {
																								"id": 2007,
																								"name": "msg",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 4294967281,
																								"src": "33122:3:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_magic_message",
																									"typeString": "msg"
																								}
																							},
																							"id": 2008,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberName": "sender",
																							"nodeType": "MemberAccess",
																							"src": "33122:10:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						],
																						"id": 2006,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "33114:7:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_address_$",
																							"typeString": "type(address)"
																						},
																						"typeName": {
																							"id": 2005,
																							"name": "address",
																							"nodeType": "ElementaryTypeName",
																							"src": "33114:7:0",
																							"typeDescriptions": {}
																						}
																					},
																					"id": 2009,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "33114:19:0",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": true,
																				"nodeType": "IndexAccess",
																				"src": "33101:33:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"arguments": [
																					{
																						"id": 2019,
																						"name": "pending",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1986,
																						"src": "33175:7:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					],
																					"expression": {
																						"baseExpression": {
																							"id": 2011,
																							"name": "powerBalance",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 998,
																							"src": "33137:12:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																								"typeString": "mapping(address => uint256)"
																							}
																						},
																						"id": 2017,
																						"indexExpression": {
																							"arguments": [
																								{
																									"expression": {
																										"id": 2014,
																										"name": "msg",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 4294967281,
																										"src": "33158:3:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_magic_message",
																											"typeString": "msg"
																										}
																									},
																									"id": 2015,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": false,
																									"lValueRequested": false,
																									"memberName": "sender",
																									"nodeType": "MemberAccess",
																									"src": "33158:10:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_address",
																										"typeString": "address"
																									}
																								}
																							],
																							"expression": {
																								"argumentTypes": [
																									{
																										"typeIdentifier": "t_address",
																										"typeString": "address"
																									}
																								],
																								"id": 2013,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"lValueRequested": false,
																								"nodeType": "ElementaryTypeNameExpression",
																								"src": "33150:7:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_type$_t_address_$",
																									"typeString": "type(address)"
																								},
																								"typeName": {
																									"id": 2012,
																									"name": "address",
																									"nodeType": "ElementaryTypeName",
																									"src": "33150:7:0",
																									"typeDescriptions": {}
																								}
																							},
																							"id": 2016,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"kind": "typeConversion",
																							"lValueRequested": false,
																							"names": [],
																							"nodeType": "FunctionCall",
																							"src": "33150:19:0",
																							"tryCall": false,
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						},
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "IndexAccess",
																						"src": "33137:33:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"id": 2018,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "add",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 27,
																					"src": "33137:37:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																						"typeString": "function (uint256,uint256) pure returns (uint256)"
																					}
																				},
																				"id": 2020,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "33137:46:0",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "33101:82:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 2022,
																		"nodeType": "ExpressionStatement",
																		"src": "33101:82:0"
																	}
																]
															}
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2029,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2027,
														"name": "_amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1954,
														"src": "33223:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 2028,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "33233:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "33223:11:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2058,
												"nodeType": "IfStatement",
												"src": "33220:170:0",
												"trueBody": {
													"id": 2057,
													"nodeType": "Block",
													"src": "33236:154:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"expression": {
																					"id": 2037,
																					"name": "msg",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967281,
																					"src": "33289:3:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_message",
																						"typeString": "msg"
																					}
																				},
																				"id": 2038,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "sender",
																				"nodeType": "MemberAccess",
																				"src": "33289:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 2036,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "33281:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 2035,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "33281:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 2039,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "33281:19:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"id": 2042,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967268,
																				"src": "33310:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_NFTMasterChef_$2269",
																					"typeString": "contract NFTMasterChef"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_NFTMasterChef_$2269",
																					"typeString": "contract NFTMasterChef"
																				}
																			],
																			"id": 2041,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "33302:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 2040,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "33302:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 2043,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "33302:13:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 2044,
																		"name": "_amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1954,
																		"src": "33317:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"expression": {
																			"id": 2030,
																			"name": "pool",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1959,
																			"src": "33251:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_PoolInfo_$957_storage_ptr",
																				"typeString": "struct NFTMasterChef.PoolInfo storage pointer"
																			}
																		},
																		"id": 2033,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "lpToken",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 950,
																		"src": "33251:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$286",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 2034,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "safeTransferFrom",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 630,
																	"src": "33251:29:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$286_$_t_address_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$286_$",
																		"typeString": "function (contract IERC20,address,address,uint256)"
																	}
																},
																"id": 2045,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "33251:74:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2046,
															"nodeType": "ExpressionStatement",
															"src": "33251:74:0"
														},
														{
															"expression": {
																"id": 2055,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 2047,
																		"name": "user",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1966,
																		"src": "33340:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_UserInfo_$947_storage_ptr",
																			"typeString": "struct NFTMasterChef.UserInfo storage pointer"
																		}
																	},
																	"id": 2049,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberName": "amount",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 944,
																	"src": "33340:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"id": 2053,
																			"name": "_amount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1954,
																			"src": "33370:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"expression": {
																				"id": 2050,
																				"name": "user",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1966,
																				"src": "33354:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_UserInfo_$947_storage_ptr",
																					"typeString": "struct NFTMasterChef.UserInfo storage pointer"
																				}
																			},
																			"id": 2051,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "amount",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 944,
																			"src": "33354:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 2052,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "add",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 27,
																		"src": "33354:15:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 2054,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "33354:24:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "33340:38:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2056,
															"nodeType": "ExpressionStatement",
															"src": "33340:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"id": 2071,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 2059,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1966,
															"src": "33400:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$947_storage_ptr",
																"typeString": "struct NFTMasterChef.UserInfo storage pointer"
															}
														},
														"id": 2061,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "rewardDebt",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 946,
														"src": "33400:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"hexValue": "31653132",
																"id": 2069,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "33461:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1000000000000_by_1",
																	"typeString": "int_const 1000000000000"
																},
																"value": "1e12"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_1000000000000_by_1",
																	"typeString": "int_const 1000000000000"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 2065,
																			"name": "pool",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1959,
																			"src": "33434:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_PoolInfo_$957_storage_ptr",
																				"typeString": "struct NFTMasterChef.PoolInfo storage pointer"
																			}
																		},
																		"id": 2066,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "accPowerPerShare",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 956,
																		"src": "33434:21:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"expression": {
																			"id": 2062,
																			"name": "user",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1966,
																			"src": "33418:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_UserInfo_$947_storage_ptr",
																				"typeString": "struct NFTMasterChef.UserInfo storage pointer"
																			}
																		},
																		"id": 2063,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "amount",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 944,
																		"src": "33418:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2064,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "mul",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 107,
																	"src": "33418:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 2067,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "33418:38:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2068,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "div",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 124,
															"src": "33418:42:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 2070,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "33418:48:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "33400:66:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2072,
												"nodeType": "ExpressionStatement",
												"src": "33400:66:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 2074,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "33490:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2075,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "33490:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"hexValue": "30",
															"id": 2076,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "33502:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"id": 2077,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1954,
															"src": "33505:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2073,
														"name": "Deposit",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1006,
														"src": "33482:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,uint256)"
														}
													},
													"id": 2078,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "33482:31:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2079,
												"nodeType": "EmitStatement",
												"src": "33477:36:0"
											}
										]
									},
									"functionSelector": "41441d3b",
									"id": 2081,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "enterStaking",
									"nameLocation": "32733:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1955,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1954,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "32754:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 2081,
												"src": "32746:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1953,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "32746:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "32745:17:0"
									},
									"returnParameters": {
										"id": 1956,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "32770:0:0"
									},
									"scope": 2269,
									"src": "32724:797:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2198,
										"nodeType": "Block",
										"src": "33619:701:0",
										"statements": [
											{
												"assignments": [
													2088
												],
												"declarations": [
													{
														"constant": false,
														"id": 2088,
														"mutability": "mutable",
														"name": "pool",
														"nameLocation": "33647:4:0",
														"nodeType": "VariableDeclaration",
														"scope": 2198,
														"src": "33630:21:0",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_PoolInfo_$957_storage_ptr",
															"typeString": "struct NFTMasterChef.PoolInfo"
														},
														"typeName": {
															"id": 2087,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 2086,
																"name": "PoolInfo",
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 957,
																"src": "33630:8:0"
															},
															"referencedDeclaration": 957,
															"src": "33630:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PoolInfo_$957_storage_ptr",
																"typeString": "struct NFTMasterChef.PoolInfo"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2092,
												"initialValue": {
													"baseExpression": {
														"id": 2089,
														"name": "poolInfo",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 982,
														"src": "33654:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_PoolInfo_$957_storage_$dyn_storage",
															"typeString": "struct NFTMasterChef.PoolInfo storage ref[] storage ref"
														}
													},
													"id": 2091,
													"indexExpression": {
														"hexValue": "30",
														"id": 2090,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "33663:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "33654:11:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_PoolInfo_$957_storage",
														"typeString": "struct NFTMasterChef.PoolInfo storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "33630:35:0"
											},
											{
												"assignments": [
													2095
												],
												"declarations": [
													{
														"constant": false,
														"id": 2095,
														"mutability": "mutable",
														"name": "user",
														"nameLocation": "33693:4:0",
														"nodeType": "VariableDeclaration",
														"scope": 2198,
														"src": "33676:21:0",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_UserInfo_$947_storage_ptr",
															"typeString": "struct NFTMasterChef.UserInfo"
														},
														"typeName": {
															"id": 2094,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 2093,
																"name": "UserInfo",
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 947,
																"src": "33676:8:0"
															},
															"referencedDeclaration": 947,
															"src": "33676:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$947_storage_ptr",
																"typeString": "struct NFTMasterChef.UserInfo"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2102,
												"initialValue": {
													"baseExpression": {
														"baseExpression": {
															"id": 2096,
															"name": "userInfo",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 989,
															"src": "33700:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_struct$_UserInfo_$947_storage_$_$",
																"typeString": "mapping(uint256 => mapping(address => struct NFTMasterChef.UserInfo storage ref))"
															}
														},
														"id": 2098,
														"indexExpression": {
															"hexValue": "30",
															"id": 2097,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "33709:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "33700:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserInfo_$947_storage_$",
															"typeString": "mapping(address => struct NFTMasterChef.UserInfo storage ref)"
														}
													},
													"id": 2101,
													"indexExpression": {
														"expression": {
															"id": 2099,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "33712:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 2100,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "33712:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "33700:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UserInfo_$947_storage",
														"typeString": "struct NFTMasterChef.UserInfo storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "33676:47:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2107,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 2104,
																	"name": "user",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2095,
																	"src": "33742:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_UserInfo_$947_storage_ptr",
																		"typeString": "struct NFTMasterChef.UserInfo storage pointer"
																	}
																},
																"id": 2105,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "amount",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 944,
																"src": "33742:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 2106,
																"name": "_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2083,
																"src": "33757:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "33742:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "77697468647261773a206e6f7420676f6f64",
															"id": 2108,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "33766:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d09049ba12a4b0d32c8152176161276998fb1529c6184e3c4227161fe99644df",
																"typeString": "literal_string \"withdraw: not good\""
															},
															"value": "withdraw: not good"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_d09049ba12a4b0d32c8152176161276998fb1529c6184e3c4227161fe99644df",
																"typeString": "literal_string \"withdraw: not good\""
															}
														],
														"id": 2103,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "33734:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2109,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "33734:53:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2110,
												"nodeType": "ExpressionStatement",
												"src": "33734:53:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"hexValue": "30",
															"id": 2112,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "33809:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															}
														],
														"id": 2111,
														"name": "updatePool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1706,
														"src": "33798:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 2113,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "33798:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2114,
												"nodeType": "ExpressionStatement",
												"src": "33798:13:0"
											},
											{
												"assignments": [
													2116
												],
												"declarations": [
													{
														"constant": false,
														"id": 2116,
														"mutability": "mutable",
														"name": "pending",
														"nameLocation": "33830:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 2198,
														"src": "33822:15:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2115,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "33822:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2130,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 2127,
																"name": "user",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2095,
																"src": "33893:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_UserInfo_$947_storage_ptr",
																	"typeString": "struct NFTMasterChef.UserInfo storage pointer"
																}
															},
															"id": 2128,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "rewardDebt",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 946,
															"src": "33893:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"hexValue": "31653132",
																	"id": 2124,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "33883:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1000000000000_by_1",
																		"typeString": "int_const 1000000000000"
																	},
																	"value": "1e12"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_1000000000000_by_1",
																		"typeString": "int_const 1000000000000"
																	}
																],
																"expression": {
																	"arguments": [
																		{
																			"expression": {
																				"id": 2120,
																				"name": "pool",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2088,
																				"src": "33856:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_PoolInfo_$957_storage_ptr",
																					"typeString": "struct NFTMasterChef.PoolInfo storage pointer"
																				}
																			},
																			"id": 2121,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "accPowerPerShare",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 956,
																			"src": "33856:21:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"expression": {
																				"id": 2117,
																				"name": "user",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2095,
																				"src": "33840:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_UserInfo_$947_storage_ptr",
																					"typeString": "struct NFTMasterChef.UserInfo storage pointer"
																				}
																			},
																			"id": 2118,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "amount",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 944,
																			"src": "33840:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 2119,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "mul",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 107,
																		"src": "33840:15:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 2122,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "33840:38:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 2123,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "div",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 124,
																"src": "33840:42:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 2125,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "33840:48:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2126,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sub",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 44,
														"src": "33840:52:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 2129,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "33840:69:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "33822:87:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2133,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2131,
														"name": "pending",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2116,
														"src": "33923:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 2132,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "33933:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "33923:11:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2148,
												"nodeType": "IfStatement",
												"src": "33920:107:0",
												"trueBody": {
													"id": 2147,
													"nodeType": "Block",
													"src": "33936:91:0",
													"statements": [
														{
															"expression": {
																"id": 2145,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 2134,
																		"name": "powerBalance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 998,
																		"src": "33951:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 2137,
																	"indexExpression": {
																		"expression": {
																			"id": 2135,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "33964:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 2136,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "33964:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "33951:24:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"id": 2143,
																			"name": "pending",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2116,
																			"src": "34007:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"baseExpression": {
																				"id": 2138,
																				"name": "powerBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 998,
																				"src": "33978:12:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 2141,
																			"indexExpression": {
																				"expression": {
																					"id": 2139,
																					"name": "msg",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967281,
																					"src": "33991:3:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_message",
																						"typeString": "msg"
																					}
																				},
																				"id": 2140,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "sender",
																				"nodeType": "MemberAccess",
																				"src": "33991:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "33978:24:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 2142,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "add",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 27,
																		"src": "33978:28:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 2144,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "33978:37:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "33951:64:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2146,
															"nodeType": "ExpressionStatement",
															"src": "33951:64:0"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2151,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2149,
														"name": "_amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2083,
														"src": "34040:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 2150,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "34050:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "34040:11:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2176,
												"nodeType": "IfStatement",
												"src": "34037:151:0",
												"trueBody": {
													"id": 2175,
													"nodeType": "Block",
													"src": "34053:135:0",
													"statements": [
														{
															"expression": {
																"id": 2160,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 2152,
																		"name": "user",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2095,
																		"src": "34068:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_UserInfo_$947_storage_ptr",
																			"typeString": "struct NFTMasterChef.UserInfo storage pointer"
																		}
																	},
																	"id": 2154,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberName": "amount",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 944,
																	"src": "34068:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"id": 2158,
																			"name": "_amount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2083,
																			"src": "34098:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"expression": {
																				"id": 2155,
																				"name": "user",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2095,
																				"src": "34082:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_UserInfo_$947_storage_ptr",
																					"typeString": "struct NFTMasterChef.UserInfo storage pointer"
																				}
																			},
																			"id": 2156,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "amount",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 944,
																			"src": "34082:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 2157,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sub",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 44,
																		"src": "34082:15:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 2159,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "34082:24:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "34068:38:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2161,
															"nodeType": "ExpressionStatement",
															"src": "34068:38:0"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"expression": {
																					"id": 2169,
																					"name": "msg",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967281,
																					"src": "34155:3:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_message",
																						"typeString": "msg"
																					}
																				},
																				"id": 2170,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "sender",
																				"nodeType": "MemberAccess",
																				"src": "34155:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 2168,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "34147:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 2167,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "34147:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 2171,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "34147:19:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 2172,
																		"name": "_amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2083,
																		"src": "34168:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"expression": {
																			"id": 2162,
																			"name": "pool",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2088,
																			"src": "34121:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_PoolInfo_$957_storage_ptr",
																				"typeString": "struct NFTMasterChef.PoolInfo storage pointer"
																			}
																		},
																		"id": 2165,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "lpToken",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 950,
																		"src": "34121:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$286",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 2166,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "safeTransfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 604,
																	"src": "34121:25:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$286_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$286_$",
																		"typeString": "function (contract IERC20,address,uint256)"
																	}
																},
																"id": 2173,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "34121:55:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2174,
															"nodeType": "ExpressionStatement",
															"src": "34121:55:0"
														}
													]
												}
											},
											{
												"expression": {
													"id": 2189,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 2177,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2095,
															"src": "34198:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$947_storage_ptr",
																"typeString": "struct NFTMasterChef.UserInfo storage pointer"
															}
														},
														"id": 2179,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "rewardDebt",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 946,
														"src": "34198:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"hexValue": "31653132",
																"id": 2187,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "34259:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1000000000000_by_1",
																	"typeString": "int_const 1000000000000"
																},
																"value": "1e12"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_1000000000000_by_1",
																	"typeString": "int_const 1000000000000"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 2183,
																			"name": "pool",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2088,
																			"src": "34232:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_PoolInfo_$957_storage_ptr",
																				"typeString": "struct NFTMasterChef.PoolInfo storage pointer"
																			}
																		},
																		"id": 2184,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "accPowerPerShare",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 956,
																		"src": "34232:21:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"expression": {
																			"id": 2180,
																			"name": "user",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2095,
																			"src": "34216:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_UserInfo_$947_storage_ptr",
																				"typeString": "struct NFTMasterChef.UserInfo storage pointer"
																			}
																		},
																		"id": 2181,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "amount",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 944,
																		"src": "34216:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2182,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "mul",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 107,
																	"src": "34216:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 2185,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "34216:38:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2186,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "div",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 124,
															"src": "34216:42:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 2188,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "34216:48:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "34198:66:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2190,
												"nodeType": "ExpressionStatement",
												"src": "34198:66:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 2192,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "34289:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2193,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "34289:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"hexValue": "30",
															"id": 2194,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "34301:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"id": 2195,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2083,
															"src": "34304:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2191,
														"name": "Withdraw",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1014,
														"src": "34280:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,uint256)"
														}
													},
													"id": 2196,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "34280:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2197,
												"nodeType": "EmitStatement",
												"src": "34275:37:0"
											}
										]
									},
									"functionSelector": "1058d281",
									"id": 2199,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "leaveStaking",
									"nameLocation": "33582:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2084,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2083,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "33603:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 2199,
												"src": "33595:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2082,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "33595:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "33594:17:0"
									},
									"returnParameters": {
										"id": 2085,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "33619:0:0"
									},
									"scope": 2269,
									"src": "33573:747:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2255,
										"nodeType": "Block",
										"src": "34447:308:0",
										"statements": [
											{
												"assignments": [
													2206
												],
												"declarations": [
													{
														"constant": false,
														"id": 2206,
														"mutability": "mutable",
														"name": "pool",
														"nameLocation": "34475:4:0",
														"nodeType": "VariableDeclaration",
														"scope": 2255,
														"src": "34458:21:0",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_PoolInfo_$957_storage_ptr",
															"typeString": "struct NFTMasterChef.PoolInfo"
														},
														"typeName": {
															"id": 2205,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 2204,
																"name": "PoolInfo",
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 957,
																"src": "34458:8:0"
															},
															"referencedDeclaration": 957,
															"src": "34458:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PoolInfo_$957_storage_ptr",
																"typeString": "struct NFTMasterChef.PoolInfo"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2210,
												"initialValue": {
													"baseExpression": {
														"id": 2207,
														"name": "poolInfo",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 982,
														"src": "34482:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_PoolInfo_$957_storage_$dyn_storage",
															"typeString": "struct NFTMasterChef.PoolInfo storage ref[] storage ref"
														}
													},
													"id": 2209,
													"indexExpression": {
														"id": 2208,
														"name": "_pid",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2201,
														"src": "34491:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "34482:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_PoolInfo_$957_storage",
														"typeString": "struct NFTMasterChef.PoolInfo storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "34458:38:0"
											},
											{
												"assignments": [
													2213
												],
												"declarations": [
													{
														"constant": false,
														"id": 2213,
														"mutability": "mutable",
														"name": "user",
														"nameLocation": "34524:4:0",
														"nodeType": "VariableDeclaration",
														"scope": 2255,
														"src": "34507:21:0",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_UserInfo_$947_storage_ptr",
															"typeString": "struct NFTMasterChef.UserInfo"
														},
														"typeName": {
															"id": 2212,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 2211,
																"name": "UserInfo",
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 947,
																"src": "34507:8:0"
															},
															"referencedDeclaration": 947,
															"src": "34507:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$947_storage_ptr",
																"typeString": "struct NFTMasterChef.UserInfo"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2220,
												"initialValue": {
													"baseExpression": {
														"baseExpression": {
															"id": 2214,
															"name": "userInfo",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 989,
															"src": "34531:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_struct$_UserInfo_$947_storage_$_$",
																"typeString": "mapping(uint256 => mapping(address => struct NFTMasterChef.UserInfo storage ref))"
															}
														},
														"id": 2216,
														"indexExpression": {
															"id": 2215,
															"name": "_pid",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2201,
															"src": "34540:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "34531:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserInfo_$947_storage_$",
															"typeString": "mapping(address => struct NFTMasterChef.UserInfo storage ref)"
														}
													},
													"id": 2219,
													"indexExpression": {
														"expression": {
															"id": 2217,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "34546:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 2218,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "34546:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "34531:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UserInfo_$947_storage",
														"typeString": "struct NFTMasterChef.UserInfo storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "34507:50:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"expression": {
																		"id": 2228,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "34602:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 2229,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "34602:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 2227,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "34594:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2226,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "34594:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 2230,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "34594:19:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 2231,
																"name": "user",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2213,
																"src": "34615:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_UserInfo_$947_storage_ptr",
																	"typeString": "struct NFTMasterChef.UserInfo storage pointer"
																}
															},
															"id": 2232,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "amount",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 944,
															"src": "34615:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"expression": {
																"id": 2221,
																"name": "pool",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2206,
																"src": "34568:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_PoolInfo_$957_storage_ptr",
																	"typeString": "struct NFTMasterChef.PoolInfo storage pointer"
																}
															},
															"id": 2224,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "lpToken",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 950,
															"src": "34568:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$286",
																"typeString": "contract IERC20"
															}
														},
														"id": 2225,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "safeTransfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 604,
														"src": "34568:25:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$286_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$286_$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 2233,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "34568:59:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2234,
												"nodeType": "ExpressionStatement",
												"src": "34568:59:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 2236,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "34661:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2237,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "34661:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2238,
															"name": "_pid",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2201,
															"src": "34673:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 2239,
																"name": "user",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2213,
																"src": "34679:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_UserInfo_$947_storage_ptr",
																	"typeString": "struct NFTMasterChef.UserInfo storage pointer"
																}
															},
															"id": 2240,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "amount",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 944,
															"src": "34679:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2235,
														"name": "EmergencyWithdraw",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1022,
														"src": "34643:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,uint256)"
														}
													},
													"id": 2241,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "34643:48:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2242,
												"nodeType": "EmitStatement",
												"src": "34638:53:0"
											},
											{
												"expression": {
													"id": 2247,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 2243,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2213,
															"src": "34702:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$947_storage_ptr",
																"typeString": "struct NFTMasterChef.UserInfo storage pointer"
															}
														},
														"id": 2245,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "amount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 944,
														"src": "34702:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 2246,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "34716:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "34702:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2248,
												"nodeType": "ExpressionStatement",
												"src": "34702:15:0"
											},
											{
												"expression": {
													"id": 2253,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 2249,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2213,
															"src": "34728:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$947_storage_ptr",
																"typeString": "struct NFTMasterChef.UserInfo storage pointer"
															}
														},
														"id": 2251,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "rewardDebt",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 946,
														"src": "34728:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 2252,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "34746:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "34728:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2254,
												"nodeType": "ExpressionStatement",
												"src": "34728:19:0"
											}
										]
									},
									"functionSelector": "5312ea8e",
									"id": 2256,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "emergencyWithdraw",
									"nameLocation": "34408:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2202,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2201,
												"mutability": "mutable",
												"name": "_pid",
												"nameLocation": "34434:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 2256,
												"src": "34426:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2200,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "34426:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "34425:14:0"
									},
									"returnParameters": {
										"id": 2203,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "34447:0:0"
									},
									"scope": 2269,
									"src": "34399:356:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2267,
										"nodeType": "Block",
										"src": "34832:44:0",
										"statements": [
											{
												"expression": {
													"id": 2265,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2263,
														"name": "PowerPerBlock",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 972,
														"src": "34843:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2264,
														"name": "newAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2258,
														"src": "34859:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "34843:25:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2266,
												"nodeType": "ExpressionStatement",
												"src": "34843:25:0"
											}
										]
									},
									"functionSelector": "3df7aff3",
									"id": 2268,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2261,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2260,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 859,
												"src": "34822:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "34822:9:0"
										}
									],
									"name": "updatePowerPerBlock",
									"nameLocation": "34776:19:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2259,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2258,
												"mutability": "mutable",
												"name": "newAmount",
												"nameLocation": "34804:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 2268,
												"src": "34796:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2257,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "34796:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "34795:19:0"
									},
									"returnParameters": {
										"id": 2262,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "34832:0:0"
									},
									"scope": 2269,
									"src": "34767:109:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 2270,
							"src": "22111:12768:0",
							"usedErrors": []
						}
					],
					"src": "103:34776:0"
				},
				"id": 0
			}
		}
	}
}
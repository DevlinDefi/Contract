{
	"id": "ac53ebbbe8ec9eaf6f2ebc63a32d71f7",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.7",
	"solcLongVersion": "0.8.7+commit.e28d00a7",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/LpPrice.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.0;\r\n\r\ninterface IERC20 {\r\n    /**\r\n     * @dev Returns the amount of tokens in existence.\r\n     */\r\n    function totalSupply() external view returns (uint256);\r\n\r\n    function token0() external view returns (address);\r\n\r\n    function token1() external view returns (address);\r\n\r\n    function balanceOf(address account) external view returns (uint256);\r\n}\r\n\r\nlibrary Address {\r\n    /**\r\n     * @dev Returns true if `account` is a contract.\r\n     *\r\n     * [IMPORTANT]\r\n     * ====\r\n     * It is unsafe to assume that an address for which this function returns\r\n     * false is an externally-owned account (EOA) and not a contract.\r\n     *\r\n     * Among others, `isContract` will return false for the following\r\n     * types of addresses:\r\n     *\r\n     *  - an externally-owned account\r\n     *  - a contract in construction\r\n     *  - an address where a contract will be created\r\n     *  - an address where a contract lived, but was destroyed\r\n     * ====\r\n     *\r\n     * [IMPORTANT]\r\n     * ====\r\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\r\n     *\r\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\r\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\r\n     * constructor.\r\n     * ====\r\n     */\r\n    function isContract(address account) internal view returns (bool) {\r\n        // This method relies on extcodesize/address.code.length, which returns 0\r\n        // for contracts in construction, since the code is only stored at the end\r\n        // of the constructor execution.\r\n\r\n        return account.code.length > 0;\r\n    }\r\n\r\n    /**\r\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\r\n     * `recipient`, forwarding all available gas and reverting on errors.\r\n     *\r\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\r\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\r\n     * imposed by `transfer`, making them unable to receive funds via\r\n     * `transfer`. {sendValue} removes this limitation.\r\n     *\r\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\r\n     *\r\n     * IMPORTANT: because control is transferred to `recipient`, care must be\r\n     * taken to not create reentrancy vulnerabilities. Consider using\r\n     * {ReentrancyGuard} or the\r\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\r\n     */\r\n    function sendValue(address payable recipient, uint256 amount) internal {\r\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\r\n\r\n        (bool success, ) = recipient.call{value: amount}(\"\");\r\n        require(success, \"Address: unable to send value, recipient may have reverted\");\r\n    }\r\n\r\n    /**\r\n     * @dev Performs a Solidity function call using a low level `call`. A\r\n     * plain `call` is an unsafe replacement for a function call: use this\r\n     * function instead.\r\n     *\r\n     * If `target` reverts with a revert reason, it is bubbled up by this\r\n     * function (like regular Solidity function calls).\r\n     *\r\n     * Returns the raw returned data. To convert to the expected return value,\r\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `target` must be a contract.\r\n     * - calling `target` with `data` must not revert.\r\n     *\r\n     * _Available since v3.1._\r\n     */\r\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\r\n        return functionCall(target, data, \"Address: low-level call failed\");\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\r\n     * `errorMessage` as a fallback revert reason when `target` reverts.\r\n     *\r\n     * _Available since v3.1._\r\n     */\r\n    function functionCall(\r\n        address target,\r\n        bytes memory data,\r\n        string memory errorMessage\r\n    ) internal returns (bytes memory) {\r\n        return functionCallWithValue(target, data, 0, errorMessage);\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\r\n     * but also transferring `value` wei to `target`.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - the calling contract must have an ETH balance of at least `value`.\r\n     * - the called Solidity function must be `payable`.\r\n     *\r\n     * _Available since v3.1._\r\n     */\r\n    function functionCallWithValue(\r\n        address target,\r\n        bytes memory data,\r\n        uint256 value\r\n    ) internal returns (bytes memory) {\r\n        return functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\r\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\r\n     *\r\n     * _Available since v3.1._\r\n     */\r\n    function functionCallWithValue(\r\n        address target,\r\n        bytes memory data,\r\n        uint256 value,\r\n        string memory errorMessage\r\n    ) internal returns (bytes memory) {\r\n        require(address(this).balance >= value, \"Address: insufficient balance for call\");\r\n        require(isContract(target), \"Address: call to non-contract\");\r\n\r\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\r\n        return verifyCallResult(success, returndata, errorMessage);\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\r\n     * but performing a static call.\r\n     *\r\n     * _Available since v3.3._\r\n     */\r\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\r\n        return functionStaticCall(target, data, \"Address: low-level static call failed\");\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\r\n     * but performing a static call.\r\n     *\r\n     * _Available since v3.3._\r\n     */\r\n    function functionStaticCall(\r\n        address target,\r\n        bytes memory data,\r\n        string memory errorMessage\r\n    ) internal view returns (bytes memory) {\r\n        require(isContract(target), \"Address: static call to non-contract\");\r\n\r\n        (bool success, bytes memory returndata) = target.staticcall(data);\r\n        return verifyCallResult(success, returndata, errorMessage);\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\r\n     * but performing a delegate call.\r\n     *\r\n     * _Available since v3.4._\r\n     */\r\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\r\n        return functionDelegateCall(target, data, \"Address: low-level delegate call failed\");\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\r\n     * but performing a delegate call.\r\n     *\r\n     * _Available since v3.4._\r\n     */\r\n    function functionDelegateCall(\r\n        address target,\r\n        bytes memory data,\r\n        string memory errorMessage\r\n    ) internal returns (bytes memory) {\r\n        require(isContract(target), \"Address: delegate call to non-contract\");\r\n\r\n        (bool success, bytes memory returndata) = target.delegatecall(data);\r\n        return verifyCallResult(success, returndata, errorMessage);\r\n    }\r\n\r\n    /**\r\n     * @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\r\n     * revert reason using the provided one.\r\n     *\r\n     * _Available since v4.3._\r\n     */\r\n    function verifyCallResult(\r\n        bool success,\r\n        bytes memory returndata,\r\n        string memory errorMessage\r\n    ) internal pure returns (bytes memory) {\r\n        if (success) {\r\n            return returndata;\r\n        } else {\r\n            // Look for revert reason and bubble it up if present\r\n            if (returndata.length > 0) {\r\n                // The easiest way to bubble the revert reason is using memory via assembly\r\n\r\n                assembly {\r\n                    let returndata_size := mload(returndata)\r\n                    revert(add(32, returndata), returndata_size)\r\n                }\r\n            } else {\r\n                revert(errorMessage);\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\ninterface Router {\r\n    function getAmountsOut(uint amountIn, address[2] memory path) external\r\n        view\r\n        returns (uint[] memory amounts);\r\n}\r\n\r\ncontract LpUtils {\r\n    address public WBNB = 0xae13d989daC2f0dEbFf460aC112a837C89BAa7cd;\r\n    address public BUSD = 0x78867BbEeF44f2326bF8DDd1941a4439382EF2A7;\r\n    uint256 amount = 1000000000000000000;\r\n\r\n    // function CalcLpPrice(IERC20 lpAddress, Router routerAddress, address busd) external view returns(uint256){\r\n    //     uint256 totalSupply = lpAddress.totalSupply();\r\n\r\n    //     uint256[] memory price0 = routerAddress.getAmountsOut(amount,[lpAddress.token0(), busd]);\r\n\r\n    //     return totalSupply;\r\n    // }\r\n\r\n    function totalSupply(IERC20 lpAddress) external view returns(uint256){\r\n        return lpAddress.totalSupply();\r\n    }\r\n\r\n    function token0(IERC20 lpAddress) external view returns(address){\r\n        return lpAddress.token0();\r\n    }\r\n\r\n    function token1(IERC20 lpAddress) external view returns(address){\r\n        return lpAddress.token1();\r\n    }\r\n\r\n    function price(Router routerAddress) external view returns(uint256){\r\n        \r\n    }\r\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"contracts/LpPrice.sol": {
				"Address": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/LpPrice.sol\":412:8686  library Address {\r... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/LpPrice.sol\":412:8686  library Address {\r... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122084d7961ecb824f97a07e18ca7d80ca341c42dfc6f2dba63fb3d346a70f1f425264736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122084d7961ecb824f97a07e18ca7d80ca341c42dfc6f2dba63fb3d346a70f1f425264736f6c63430008070033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP5 0xD7 SWAP7 0x1E 0xCB DUP3 0x4F SWAP8 LOG0 PUSH31 0x18CA7D80CA341C42DFC6F2DBA63FB3D346A70F1F425264736F6C6343000807 STOP CALLER ",
							"sourceMap": "412:8274:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122084d7961ecb824f97a07e18ca7d80ca341c42dfc6f2dba63fb3d346a70f1f425264736f6c63430008070033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP5 0xD7 SWAP7 0x1E 0xCB DUP3 0x4F SWAP8 LOG0 PUSH31 0x18CA7D80CA341C42DFC6F2DBA63FB3D346A70F1F425264736F6C6343000807 STOP CALLER ",
							"sourceMap": "412:8274:0:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"functionCall(address,bytes memory)": "infinite",
								"functionCall(address,bytes memory,string memory)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256,string memory)": "infinite",
								"functionDelegateCall(address,bytes memory)": "infinite",
								"functionDelegateCall(address,bytes memory,string memory)": "infinite",
								"functionStaticCall(address,bytes memory)": "infinite",
								"functionStaticCall(address,bytes memory,string memory)": "infinite",
								"isContract(address)": "infinite",
								"sendValue(address payable,uint256)": "infinite",
								"verifyCallResult(bool,bytes memory,string memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 412,
									"end": 8686,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 412,
									"end": 8686,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 412,
									"end": 8686,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 412,
									"end": 8686,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 412,
									"end": 8686,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 412,
									"end": 8686,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 412,
									"end": 8686,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 412,
									"end": 8686,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 412,
									"end": 8686,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 412,
									"end": 8686,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 412,
									"end": 8686,
									"name": "BYTE",
									"source": 0
								},
								{
									"begin": 412,
									"end": 8686,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 412,
									"end": 8686,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 412,
									"end": 8686,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 412,
									"end": 8686,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 412,
									"end": 8686,
									"name": "PUSH",
									"source": 0,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 412,
									"end": 8686,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 412,
									"end": 8686,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 412,
									"end": 8686,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 412,
									"end": 8686,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 412,
									"end": 8686,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 412,
									"end": 8686,
									"name": "PUSH",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 412,
									"end": 8686,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 412,
									"end": 8686,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 412,
									"end": 8686,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 412,
									"end": 8686,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 412,
									"end": 8686,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 412,
									"end": 8686,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 412,
									"end": 8686,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 412,
									"end": 8686,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 412,
									"end": 8686,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 412,
									"end": 8686,
									"name": "MSTORE8",
									"source": 0
								},
								{
									"begin": 412,
									"end": 8686,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 412,
									"end": 8686,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 412,
									"end": 8686,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122084d7961ecb824f97a07e18ca7d80ca341c42dfc6f2dba63fb3d346a70f1f425264736f6c63430008070033",
									".code": [
										{
											"begin": 412,
											"end": 8686,
											"name": "PUSHDEPLOYADDRESS",
											"source": 0
										},
										{
											"begin": 412,
											"end": 8686,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 412,
											"end": 8686,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 412,
											"end": 8686,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 412,
											"end": 8686,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 412,
											"end": 8686,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 412,
											"end": 8686,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 412,
											"end": 8686,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 412,
											"end": 8686,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/LpPrice.sol\":\"Address\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/LpPrice.sol\":{\"keccak256\":\"0xe95ac64f439c5c658dd0380be19d3c39b0eff9f0dbd08b4565c26b371253635b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3e48f763e9ee0ee9a1eaaf2496d2c45e43d6759e28ca68953bd7e310c035d27c\",\"dweb:/ipfs/QmVbyM8CeQfpVngU2wgHQf4ZSxJfskSxtyy9qGikBYodma\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "token0",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "token1",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"balanceOf(address)": "70a08231",
							"token0()": "0dfe1681",
							"token1()": "d21220a7",
							"totalSupply()": "18160ddd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token0\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token1\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/LpPrice.sol\":\"IERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/LpPrice.sol\":{\"keccak256\":\"0xe95ac64f439c5c658dd0380be19d3c39b0eff9f0dbd08b4565c26b371253635b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3e48f763e9ee0ee9a1eaaf2496d2c45e43d6759e28ca68953bd7e310c035d27c\",\"dweb:/ipfs/QmVbyM8CeQfpVngU2wgHQf4ZSxJfskSxtyy9qGikBYodma\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"LpUtils": {
					"abi": [
						{
							"inputs": [],
							"name": "BUSD",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "WBNB",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "contract Router",
									"name": "routerAddress",
									"type": "address"
								}
							],
							"name": "price",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "contract IERC20",
									"name": "lpAddress",
									"type": "address"
								}
							],
							"name": "token0",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "contract IERC20",
									"name": "lpAddress",
									"type": "address"
								}
							],
							"name": "token1",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "contract IERC20",
									"name": "lpAddress",
									"type": "address"
								}
							],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/LpPrice.sol\":8847:9828  contract LpUtils {\r... */\n  mstore(0x40, 0x80)\n    /* \"contracts/LpPrice.sol\":8893:8935  0xae13d989daC2f0dEbFf460aC112a837C89BAa7cd */\n  0xae13d989dac2f0debff460ac112a837c89baa7cd\n    /* \"contracts/LpPrice.sol\":8871:8935  address public WBNB = 0xae13d989daC2f0dEbFf460aC112a837C89BAa7cd */\n  0x00\n  dup1\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/LpPrice.sol\":8964:9006  0x78867BbEeF44f2326bF8DDd1941a4439382EF2A7 */\n  0x78867bbeef44f2326bf8ddd1941a4439382ef2a7\n    /* \"contracts/LpPrice.sol\":8942:9006  address public BUSD = 0x78867BbEeF44f2326bF8DDd1941a4439382EF2A7 */\n  0x01\n  exp(0x0100, 0x00)\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/LpPrice.sol\":9030:9049  1000000000000000000 */\n  0x0de0b6b3a7640000\n    /* \"contracts/LpPrice.sol\":9013:9049  uint256 amount = 1000000000000000000 */\n  0x02\n  sstore\n    /* \"contracts/LpPrice.sol\":8847:9828  contract LpUtils {\r... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/LpPrice.sol\":8847:9828  contract LpUtils {\r... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x37823795\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x484f4ea9\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x76bf39a3\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x8dd95002\n      eq\n      tag_6\n      jumpi\n      dup1\n      0xaea91078\n      eq\n      tag_7\n      jumpi\n      dup1\n      0xe4dc2aa4\n      eq\n      tag_8\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/LpPrice.sol\":9624:9732  function token1(IERC20 lpAddress) external view returns(address){\r... */\n    tag_3:\n      tag_9\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_10\n      swap2\n      swap1\n      tag_11\n      jump\t// in\n    tag_10:\n      tag_12\n      jump\t// in\n    tag_9:\n      mload(0x40)\n      tag_13\n      swap2\n      swap1\n      tag_14\n      jump\t// in\n    tag_13:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/LpPrice.sol\":8942:9006  address public BUSD = 0x78867BbEeF44f2326bF8DDd1941a4439382EF2A7 */\n    tag_4:\n      tag_15\n      tag_16\n      jump\t// in\n    tag_15:\n      mload(0x40)\n      tag_17\n      swap2\n      swap1\n      tag_14\n      jump\t// in\n    tag_17:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/LpPrice.sol\":9508:9616  function token0(IERC20 lpAddress) external view returns(address){\r... */\n    tag_5:\n      tag_18\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_19\n      swap2\n      swap1\n      tag_11\n      jump\t// in\n    tag_19:\n      tag_20\n      jump\t// in\n    tag_18:\n      mload(0x40)\n      tag_21\n      swap2\n      swap1\n      tag_14\n      jump\t// in\n    tag_21:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/LpPrice.sol\":8871:8935  address public WBNB = 0xae13d989daC2f0dEbFf460aC112a837C89BAa7cd */\n    tag_6:\n      tag_22\n      tag_23\n      jump\t// in\n    tag_22:\n      mload(0x40)\n      tag_24\n      swap2\n      swap1\n      tag_14\n      jump\t// in\n    tag_24:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/LpPrice.sol\":9740:9825  function price(Router routerAddress) external view returns(uint256){\r... */\n    tag_7:\n      tag_25\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_26\n      swap2\n      swap1\n      tag_27\n      jump\t// in\n    tag_26:\n      tag_28\n      jump\t// in\n    tag_25:\n      mload(0x40)\n      tag_29\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n    tag_29:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/LpPrice.sol\":9382:9500  function totalSupply(IERC20 lpAddress) external view returns(uint256){\r... */\n    tag_8:\n      tag_31\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_32\n      swap2\n      swap1\n      tag_11\n      jump\t// in\n    tag_32:\n      tag_33\n      jump\t// in\n    tag_31:\n      mload(0x40)\n      tag_34\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n    tag_34:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/LpPrice.sol\":9624:9732  function token1(IERC20 lpAddress) external view returns(address){\r... */\n    tag_12:\n        /* \"contracts/LpPrice.sol\":9680:9687  address */\n      0x00\n        /* \"contracts/LpPrice.sol\":9706:9715  lpAddress */\n      dup2\n        /* \"contracts/LpPrice.sol\":9706:9722  lpAddress.token1 */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xd21220a7\n        /* \"contracts/LpPrice.sol\":9706:9724  lpAddress.token1() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_36\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_36:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_38\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_38:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_39\n      swap2\n      swap1\n      tag_40\n      jump\t// in\n    tag_39:\n        /* \"contracts/LpPrice.sol\":9699:9724  return lpAddress.token1() */\n      swap1\n      pop\n        /* \"contracts/LpPrice.sol\":9624:9732  function token1(IERC20 lpAddress) external view returns(address){\r... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/LpPrice.sol\":8942:9006  address public BUSD = 0x78867BbEeF44f2326bF8DDd1941a4439382EF2A7 */\n    tag_16:\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/LpPrice.sol\":9508:9616  function token0(IERC20 lpAddress) external view returns(address){\r... */\n    tag_20:\n        /* \"contracts/LpPrice.sol\":9564:9571  address */\n      0x00\n        /* \"contracts/LpPrice.sol\":9590:9599  lpAddress */\n      dup2\n        /* \"contracts/LpPrice.sol\":9590:9606  lpAddress.token0 */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x0dfe1681\n        /* \"contracts/LpPrice.sol\":9590:9608  lpAddress.token0() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_42\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_42:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_44\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_44:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_45\n      swap2\n      swap1\n      tag_40\n      jump\t// in\n    tag_45:\n        /* \"contracts/LpPrice.sol\":9583:9608  return lpAddress.token0() */\n      swap1\n      pop\n        /* \"contracts/LpPrice.sol\":9508:9616  function token0(IERC20 lpAddress) external view returns(address){\r... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/LpPrice.sol\":8871:8935  address public WBNB = 0xae13d989daC2f0dEbFf460aC112a837C89BAa7cd */\n    tag_23:\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/LpPrice.sol\":9740:9825  function price(Router routerAddress) external view returns(uint256){\r... */\n    tag_28:\n        /* \"contracts/LpPrice.sol\":9799:9806  uint256 */\n      0x00\n        /* \"contracts/LpPrice.sol\":9740:9825  function price(Router routerAddress) external view returns(uint256){\r... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/LpPrice.sol\":9382:9500  function totalSupply(IERC20 lpAddress) external view returns(uint256){\r... */\n    tag_33:\n        /* \"contracts/LpPrice.sol\":9443:9450  uint256 */\n      0x00\n        /* \"contracts/LpPrice.sol\":9469:9478  lpAddress */\n      dup2\n        /* \"contracts/LpPrice.sol\":9469:9490  lpAddress.totalSupply */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x18160ddd\n        /* \"contracts/LpPrice.sol\":9469:9492  lpAddress.totalSupply() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_48\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_48:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_50\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_50:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_51\n      swap2\n      swap1\n      tag_52\n      jump\t// in\n    tag_51:\n        /* \"contracts/LpPrice.sol\":9462:9492  return lpAddress.totalSupply() */\n      swap1\n      pop\n        /* \"contracts/LpPrice.sol\":9382:9500  function totalSupply(IERC20 lpAddress) external view returns(uint256){\r... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:150   */\n    tag_54:\n        /* \"#utility.yul\":64:69   */\n      0x00\n        /* \"#utility.yul\":95:101   */\n      dup2\n        /* \"#utility.yul\":89:102   */\n      mload\n        /* \"#utility.yul\":80:102   */\n      swap1\n      pop\n        /* \"#utility.yul\":111:144   */\n      tag_56\n        /* \"#utility.yul\":138:143   */\n      dup2\n        /* \"#utility.yul\":111:144   */\n      tag_57\n      jump\t// in\n    tag_56:\n        /* \"#utility.yul\":7:150   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":156:321   */\n    tag_58:\n        /* \"#utility.yul\":215:220   */\n      0x00\n        /* \"#utility.yul\":253:259   */\n      dup2\n        /* \"#utility.yul\":240:260   */\n      calldataload\n        /* \"#utility.yul\":231:260   */\n      swap1\n      pop\n        /* \"#utility.yul\":269:315   */\n      tag_60\n        /* \"#utility.yul\":309:314   */\n      dup2\n        /* \"#utility.yul\":269:315   */\n      tag_61\n      jump\t// in\n    tag_60:\n        /* \"#utility.yul\":156:321   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":327:494   */\n    tag_62:\n        /* \"#utility.yul\":387:392   */\n      0x00\n        /* \"#utility.yul\":425:431   */\n      dup2\n        /* \"#utility.yul\":412:432   */\n      calldataload\n        /* \"#utility.yul\":403:432   */\n      swap1\n      pop\n        /* \"#utility.yul\":441:488   */\n      tag_64\n        /* \"#utility.yul\":482:487   */\n      dup2\n        /* \"#utility.yul\":441:488   */\n      tag_65\n      jump\t// in\n    tag_64:\n        /* \"#utility.yul\":327:494   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":500:643   */\n    tag_66:\n        /* \"#utility.yul\":557:562   */\n      0x00\n        /* \"#utility.yul\":588:594   */\n      dup2\n        /* \"#utility.yul\":582:595   */\n      mload\n        /* \"#utility.yul\":573:595   */\n      swap1\n      pop\n        /* \"#utility.yul\":604:637   */\n      tag_68\n        /* \"#utility.yul\":631:636   */\n      dup2\n        /* \"#utility.yul\":604:637   */\n      tag_69\n      jump\t// in\n    tag_68:\n        /* \"#utility.yul\":500:643   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":649:1000   */\n    tag_40:\n        /* \"#utility.yul\":719:725   */\n      0x00\n        /* \"#utility.yul\":768:770   */\n      0x20\n        /* \"#utility.yul\":756:765   */\n      dup3\n        /* \"#utility.yul\":747:754   */\n      dup5\n        /* \"#utility.yul\":743:766   */\n      sub\n        /* \"#utility.yul\":739:771   */\n      slt\n        /* \"#utility.yul\":736:855   */\n      iszero\n      tag_71\n      jumpi\n        /* \"#utility.yul\":774:853   */\n      tag_72\n      tag_73\n      jump\t// in\n    tag_72:\n        /* \"#utility.yul\":736:855   */\n    tag_71:\n        /* \"#utility.yul\":894:895   */\n      0x00\n        /* \"#utility.yul\":919:983   */\n      tag_74\n        /* \"#utility.yul\":975:982   */\n      dup5\n        /* \"#utility.yul\":966:972   */\n      dup3\n        /* \"#utility.yul\":955:964   */\n      dup6\n        /* \"#utility.yul\":951:973   */\n      add\n        /* \"#utility.yul\":919:983   */\n      tag_54\n      jump\t// in\n    tag_74:\n        /* \"#utility.yul\":909:983   */\n      swap2\n      pop\n        /* \"#utility.yul\":865:993   */\n      pop\n        /* \"#utility.yul\":649:1000   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1006:1361   */\n    tag_11:\n        /* \"#utility.yul\":1078:1084   */\n      0x00\n        /* \"#utility.yul\":1127:1129   */\n      0x20\n        /* \"#utility.yul\":1115:1124   */\n      dup3\n        /* \"#utility.yul\":1106:1113   */\n      dup5\n        /* \"#utility.yul\":1102:1125   */\n      sub\n        /* \"#utility.yul\":1098:1130   */\n      slt\n        /* \"#utility.yul\":1095:1214   */\n      iszero\n      tag_76\n      jumpi\n        /* \"#utility.yul\":1133:1212   */\n      tag_77\n      tag_73\n      jump\t// in\n    tag_77:\n        /* \"#utility.yul\":1095:1214   */\n    tag_76:\n        /* \"#utility.yul\":1253:1254   */\n      0x00\n        /* \"#utility.yul\":1278:1344   */\n      tag_78\n        /* \"#utility.yul\":1336:1343   */\n      dup5\n        /* \"#utility.yul\":1327:1333   */\n      dup3\n        /* \"#utility.yul\":1316:1325   */\n      dup6\n        /* \"#utility.yul\":1312:1334   */\n      add\n        /* \"#utility.yul\":1278:1344   */\n      tag_58\n      jump\t// in\n    tag_78:\n        /* \"#utility.yul\":1268:1344   */\n      swap2\n      pop\n        /* \"#utility.yul\":1224:1354   */\n      pop\n        /* \"#utility.yul\":1006:1361   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1367:1724   */\n    tag_27:\n        /* \"#utility.yul\":1440:1446   */\n      0x00\n        /* \"#utility.yul\":1489:1491   */\n      0x20\n        /* \"#utility.yul\":1477:1486   */\n      dup3\n        /* \"#utility.yul\":1468:1475   */\n      dup5\n        /* \"#utility.yul\":1464:1487   */\n      sub\n        /* \"#utility.yul\":1460:1492   */\n      slt\n        /* \"#utility.yul\":1457:1576   */\n      iszero\n      tag_80\n      jumpi\n        /* \"#utility.yul\":1495:1574   */\n      tag_81\n      tag_73\n      jump\t// in\n    tag_81:\n        /* \"#utility.yul\":1457:1576   */\n    tag_80:\n        /* \"#utility.yul\":1615:1616   */\n      0x00\n        /* \"#utility.yul\":1640:1707   */\n      tag_82\n        /* \"#utility.yul\":1699:1706   */\n      dup5\n        /* \"#utility.yul\":1690:1696   */\n      dup3\n        /* \"#utility.yul\":1679:1688   */\n      dup6\n        /* \"#utility.yul\":1675:1697   */\n      add\n        /* \"#utility.yul\":1640:1707   */\n      tag_62\n      jump\t// in\n    tag_82:\n        /* \"#utility.yul\":1630:1707   */\n      swap2\n      pop\n        /* \"#utility.yul\":1586:1717   */\n      pop\n        /* \"#utility.yul\":1367:1724   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1730:2081   */\n    tag_52:\n        /* \"#utility.yul\":1800:1806   */\n      0x00\n        /* \"#utility.yul\":1849:1851   */\n      0x20\n        /* \"#utility.yul\":1837:1846   */\n      dup3\n        /* \"#utility.yul\":1828:1835   */\n      dup5\n        /* \"#utility.yul\":1824:1847   */\n      sub\n        /* \"#utility.yul\":1820:1852   */\n      slt\n        /* \"#utility.yul\":1817:1936   */\n      iszero\n      tag_84\n      jumpi\n        /* \"#utility.yul\":1855:1934   */\n      tag_85\n      tag_73\n      jump\t// in\n    tag_85:\n        /* \"#utility.yul\":1817:1936   */\n    tag_84:\n        /* \"#utility.yul\":1975:1976   */\n      0x00\n        /* \"#utility.yul\":2000:2064   */\n      tag_86\n        /* \"#utility.yul\":2056:2063   */\n      dup5\n        /* \"#utility.yul\":2047:2053   */\n      dup3\n        /* \"#utility.yul\":2036:2045   */\n      dup6\n        /* \"#utility.yul\":2032:2054   */\n      add\n        /* \"#utility.yul\":2000:2064   */\n      tag_66\n      jump\t// in\n    tag_86:\n        /* \"#utility.yul\":1990:2064   */\n      swap2\n      pop\n        /* \"#utility.yul\":1946:2074   */\n      pop\n        /* \"#utility.yul\":1730:2081   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2087:2205   */\n    tag_87:\n        /* \"#utility.yul\":2174:2198   */\n      tag_89\n        /* \"#utility.yul\":2192:2197   */\n      dup2\n        /* \"#utility.yul\":2174:2198   */\n      tag_90\n      jump\t// in\n    tag_89:\n        /* \"#utility.yul\":2169:2172   */\n      dup3\n        /* \"#utility.yul\":2162:2199   */\n      mstore\n        /* \"#utility.yul\":2087:2205   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2211:2329   */\n    tag_91:\n        /* \"#utility.yul\":2298:2322   */\n      tag_93\n        /* \"#utility.yul\":2316:2321   */\n      dup2\n        /* \"#utility.yul\":2298:2322   */\n      tag_94\n      jump\t// in\n    tag_93:\n        /* \"#utility.yul\":2293:2296   */\n      dup3\n        /* \"#utility.yul\":2286:2323   */\n      mstore\n        /* \"#utility.yul\":2211:2329   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2335:2557   */\n    tag_14:\n        /* \"#utility.yul\":2428:2432   */\n      0x00\n        /* \"#utility.yul\":2466:2468   */\n      0x20\n        /* \"#utility.yul\":2455:2464   */\n      dup3\n        /* \"#utility.yul\":2451:2469   */\n      add\n        /* \"#utility.yul\":2443:2469   */\n      swap1\n      pop\n        /* \"#utility.yul\":2479:2550   */\n      tag_96\n        /* \"#utility.yul\":2547:2548   */\n      0x00\n        /* \"#utility.yul\":2536:2545   */\n      dup4\n        /* \"#utility.yul\":2532:2549   */\n      add\n        /* \"#utility.yul\":2523:2529   */\n      dup5\n        /* \"#utility.yul\":2479:2550   */\n      tag_87\n      jump\t// in\n    tag_96:\n        /* \"#utility.yul\":2335:2557   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2563:2785   */\n    tag_30:\n        /* \"#utility.yul\":2656:2660   */\n      0x00\n        /* \"#utility.yul\":2694:2696   */\n      0x20\n        /* \"#utility.yul\":2683:2692   */\n      dup3\n        /* \"#utility.yul\":2679:2697   */\n      add\n        /* \"#utility.yul\":2671:2697   */\n      swap1\n      pop\n        /* \"#utility.yul\":2707:2778   */\n      tag_98\n        /* \"#utility.yul\":2775:2776   */\n      0x00\n        /* \"#utility.yul\":2764:2773   */\n      dup4\n        /* \"#utility.yul\":2760:2777   */\n      add\n        /* \"#utility.yul\":2751:2757   */\n      dup5\n        /* \"#utility.yul\":2707:2778   */\n      tag_91\n      jump\t// in\n    tag_98:\n        /* \"#utility.yul\":2563:2785   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2872:2968   */\n    tag_90:\n        /* \"#utility.yul\":2909:2916   */\n      0x00\n        /* \"#utility.yul\":2938:2962   */\n      tag_102\n        /* \"#utility.yul\":2956:2961   */\n      dup3\n        /* \"#utility.yul\":2938:2962   */\n      tag_103\n      jump\t// in\n    tag_102:\n        /* \"#utility.yul\":2927:2962   */\n      swap1\n      pop\n        /* \"#utility.yul\":2872:2968   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2974:3083   */\n    tag_104:\n        /* \"#utility.yul\":3024:3031   */\n      0x00\n        /* \"#utility.yul\":3053:3077   */\n      tag_106\n        /* \"#utility.yul\":3071:3076   */\n      dup3\n        /* \"#utility.yul\":3053:3077   */\n      tag_90\n      jump\t// in\n    tag_106:\n        /* \"#utility.yul\":3042:3077   */\n      swap1\n      pop\n        /* \"#utility.yul\":2974:3083   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3089:3199   */\n    tag_107:\n        /* \"#utility.yul\":3140:3147   */\n      0x00\n        /* \"#utility.yul\":3169:3193   */\n      tag_109\n        /* \"#utility.yul\":3187:3192   */\n      dup3\n        /* \"#utility.yul\":3169:3193   */\n      tag_90\n      jump\t// in\n    tag_109:\n        /* \"#utility.yul\":3158:3193   */\n      swap1\n      pop\n        /* \"#utility.yul\":3089:3199   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3205:3331   */\n    tag_103:\n        /* \"#utility.yul\":3242:3249   */\n      0x00\n        /* \"#utility.yul\":3282:3324   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":3275:3280   */\n      dup3\n        /* \"#utility.yul\":3271:3325   */\n      and\n        /* \"#utility.yul\":3260:3325   */\n      swap1\n      pop\n        /* \"#utility.yul\":3205:3331   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3337:3414   */\n    tag_94:\n        /* \"#utility.yul\":3374:3381   */\n      0x00\n        /* \"#utility.yul\":3403:3408   */\n      dup2\n        /* \"#utility.yul\":3392:3408   */\n      swap1\n      pop\n        /* \"#utility.yul\":3337:3414   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3543:3660   */\n    tag_73:\n        /* \"#utility.yul\":3652:3653   */\n      0x00\n        /* \"#utility.yul\":3649:3650   */\n      dup1\n        /* \"#utility.yul\":3642:3654   */\n      revert\n        /* \"#utility.yul\":3666:3788   */\n    tag_57:\n        /* \"#utility.yul\":3739:3763   */\n      tag_116\n        /* \"#utility.yul\":3757:3762   */\n      dup2\n        /* \"#utility.yul\":3739:3763   */\n      tag_90\n      jump\t// in\n    tag_116:\n        /* \"#utility.yul\":3732:3737   */\n      dup2\n        /* \"#utility.yul\":3729:3764   */\n      eq\n        /* \"#utility.yul\":3719:3782   */\n      tag_117\n      jumpi\n        /* \"#utility.yul\":3778:3779   */\n      0x00\n        /* \"#utility.yul\":3775:3776   */\n      dup1\n        /* \"#utility.yul\":3768:3780   */\n      revert\n        /* \"#utility.yul\":3719:3782   */\n    tag_117:\n        /* \"#utility.yul\":3666:3788   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3794:3942   */\n    tag_61:\n        /* \"#utility.yul\":3880:3917   */\n      tag_119\n        /* \"#utility.yul\":3911:3916   */\n      dup2\n        /* \"#utility.yul\":3880:3917   */\n      tag_104\n      jump\t// in\n    tag_119:\n        /* \"#utility.yul\":3873:3878   */\n      dup2\n        /* \"#utility.yul\":3870:3918   */\n      eq\n        /* \"#utility.yul\":3860:3936   */\n      tag_120\n      jumpi\n        /* \"#utility.yul\":3932:3933   */\n      0x00\n        /* \"#utility.yul\":3929:3930   */\n      dup1\n        /* \"#utility.yul\":3922:3934   */\n      revert\n        /* \"#utility.yul\":3860:3936   */\n    tag_120:\n        /* \"#utility.yul\":3794:3942   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3948:4098   */\n    tag_65:\n        /* \"#utility.yul\":4035:4073   */\n      tag_122\n        /* \"#utility.yul\":4067:4072   */\n      dup2\n        /* \"#utility.yul\":4035:4073   */\n      tag_107\n      jump\t// in\n    tag_122:\n        /* \"#utility.yul\":4028:4033   */\n      dup2\n        /* \"#utility.yul\":4025:4074   */\n      eq\n        /* \"#utility.yul\":4015:4092   */\n      tag_123\n      jumpi\n        /* \"#utility.yul\":4088:4089   */\n      0x00\n        /* \"#utility.yul\":4085:4086   */\n      dup1\n        /* \"#utility.yul\":4078:4090   */\n      revert\n        /* \"#utility.yul\":4015:4092   */\n    tag_123:\n        /* \"#utility.yul\":3948:4098   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4104:4226   */\n    tag_69:\n        /* \"#utility.yul\":4177:4201   */\n      tag_125\n        /* \"#utility.yul\":4195:4200   */\n      dup2\n        /* \"#utility.yul\":4177:4201   */\n      tag_94\n      jump\t// in\n    tag_125:\n        /* \"#utility.yul\":4170:4175   */\n      dup2\n        /* \"#utility.yul\":4167:4202   */\n      eq\n        /* \"#utility.yul\":4157:4220   */\n      tag_126\n      jumpi\n        /* \"#utility.yul\":4216:4217   */\n      0x00\n        /* \"#utility.yul\":4213:4214   */\n      dup1\n        /* \"#utility.yul\":4206:4218   */\n      revert\n        /* \"#utility.yul\":4157:4220   */\n    tag_126:\n        /* \"#utility.yul\":4104:4226   */\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220bfc0d108fa2da030aa7c073068025f4c111a5c71d835e160846fbb084e91866f64736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405273ae13d989dac2f0debff460ac112a837c89baa7cd6000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507378867bbeef44f2326bf8ddd1941a4439382ef2a7600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550670de0b6b3a76400006002553480156100c557600080fd5b5061059c806100d56000396000f3fe608060405234801561001057600080fd5b50600436106100625760003560e01c80633782379514610067578063484f4ea91461009757806376bf39a3146100b55780638dd95002146100e5578063aea9107814610103578063e4dc2aa414610133575b600080fd5b610081600480360381019061007c91906103ca565b610163565b60405161008e919061046f565b60405180910390f35b61009f6101ea565b6040516100ac919061046f565b60405180910390f35b6100cf60048036038101906100ca91906103ca565b610210565b6040516100dc919061046f565b60405180910390f35b6100ed610297565b6040516100fa919061046f565b60405180910390f35b61011d600480360381019061011891906103f7565b6102bb565b60405161012a919061048a565b60405180910390f35b61014d600480360381019061014891906103ca565b6102c2565b60405161015a919061048a565b60405180910390f35b60008173ffffffffffffffffffffffffffffffffffffffff1663d21220a76040518163ffffffff1660e01b815260040160206040518083038186803b1580156101ab57600080fd5b505afa1580156101bf573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101e3919061039d565b9050919050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008173ffffffffffffffffffffffffffffffffffffffff16630dfe16816040518163ffffffff1660e01b815260040160206040518083038186803b15801561025857600080fd5b505afa15801561026c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610290919061039d565b9050919050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000919050565b60008173ffffffffffffffffffffffffffffffffffffffff166318160ddd6040518163ffffffff1660e01b815260040160206040518083038186803b15801561030a57600080fd5b505afa15801561031e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103429190610424565b9050919050565b6000815190506103588161050a565b92915050565b60008135905061036d81610521565b92915050565b60008135905061038281610538565b92915050565b6000815190506103978161054f565b92915050565b6000602082840312156103b3576103b2610505565b5b60006103c184828501610349565b91505092915050565b6000602082840312156103e0576103df610505565b5b60006103ee8482850161035e565b91505092915050565b60006020828403121561040d5761040c610505565b5b600061041b84828501610373565b91505092915050565b60006020828403121561043a57610439610505565b5b600061044884828501610388565b91505092915050565b61045a816104a5565b82525050565b610469816104fb565b82525050565b60006020820190506104846000830184610451565b92915050565b600060208201905061049f6000830184610460565b92915050565b60006104b0826104db565b9050919050565b60006104c2826104a5565b9050919050565b60006104d4826104a5565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600080fd5b610513816104a5565b811461051e57600080fd5b50565b61052a816104b7565b811461053557600080fd5b50565b610541816104c9565b811461054c57600080fd5b50565b610558816104fb565b811461056357600080fd5b5056fea2646970667358221220bfc0d108fa2da030aa7c073068025f4c111a5c71d835e160846fbb084e91866f64736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH20 0xAE13D989DAC2F0DEBFF460AC112A837C89BAA7CD PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH20 0x78867BBEEF44F2326BF8DDD1941A4439382EF2A7 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH8 0xDE0B6B3A7640000 PUSH1 0x2 SSTORE CALLVALUE DUP1 ISZERO PUSH2 0xC5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x59C DUP1 PUSH2 0xD5 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x62 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x37823795 EQ PUSH2 0x67 JUMPI DUP1 PUSH4 0x484F4EA9 EQ PUSH2 0x97 JUMPI DUP1 PUSH4 0x76BF39A3 EQ PUSH2 0xB5 JUMPI DUP1 PUSH4 0x8DD95002 EQ PUSH2 0xE5 JUMPI DUP1 PUSH4 0xAEA91078 EQ PUSH2 0x103 JUMPI DUP1 PUSH4 0xE4DC2AA4 EQ PUSH2 0x133 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x81 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x7C SWAP2 SWAP1 PUSH2 0x3CA JUMP JUMPDEST PUSH2 0x163 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x8E SWAP2 SWAP1 PUSH2 0x46F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x9F PUSH2 0x1EA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xAC SWAP2 SWAP1 PUSH2 0x46F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xCF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xCA SWAP2 SWAP1 PUSH2 0x3CA JUMP JUMPDEST PUSH2 0x210 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xDC SWAP2 SWAP1 PUSH2 0x46F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xED PUSH2 0x297 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xFA SWAP2 SWAP1 PUSH2 0x46F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x11D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x118 SWAP2 SWAP1 PUSH2 0x3F7 JUMP JUMPDEST PUSH2 0x2BB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x12A SWAP2 SWAP1 PUSH2 0x48A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x14D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x148 SWAP2 SWAP1 PUSH2 0x3CA JUMP JUMPDEST PUSH2 0x2C2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x15A SWAP2 SWAP1 PUSH2 0x48A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xD21220A7 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1AB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1BF JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1E3 SWAP2 SWAP1 PUSH2 0x39D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xDFE1681 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x258 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x26C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x290 SWAP2 SWAP1 PUSH2 0x39D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x18160DDD PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x30A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x31E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x342 SWAP2 SWAP1 PUSH2 0x424 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x358 DUP2 PUSH2 0x50A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x36D DUP2 PUSH2 0x521 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x382 DUP2 PUSH2 0x538 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x397 DUP2 PUSH2 0x54F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3B3 JUMPI PUSH2 0x3B2 PUSH2 0x505 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3C1 DUP5 DUP3 DUP6 ADD PUSH2 0x349 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3E0 JUMPI PUSH2 0x3DF PUSH2 0x505 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3EE DUP5 DUP3 DUP6 ADD PUSH2 0x35E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x40D JUMPI PUSH2 0x40C PUSH2 0x505 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x41B DUP5 DUP3 DUP6 ADD PUSH2 0x373 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x43A JUMPI PUSH2 0x439 PUSH2 0x505 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x448 DUP5 DUP3 DUP6 ADD PUSH2 0x388 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x45A DUP2 PUSH2 0x4A5 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x469 DUP2 PUSH2 0x4FB JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x484 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x451 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x49F PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x460 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4B0 DUP3 PUSH2 0x4DB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4C2 DUP3 PUSH2 0x4A5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4D4 DUP3 PUSH2 0x4A5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x513 DUP2 PUSH2 0x4A5 JUMP JUMPDEST DUP2 EQ PUSH2 0x51E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x52A DUP2 PUSH2 0x4B7 JUMP JUMPDEST DUP2 EQ PUSH2 0x535 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x541 DUP2 PUSH2 0x4C9 JUMP JUMPDEST DUP2 EQ PUSH2 0x54C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x558 DUP2 PUSH2 0x4FB JUMP JUMPDEST DUP2 EQ PUSH2 0x563 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xBF 0xC0 0xD1 ADDMOD STATICCALL 0x2D LOG0 ADDRESS 0xAA PUSH29 0x73068025F4C111A5C71D835E160846FBB084E91866F64736F6C634300 ADDMOD SMOD STOP CALLER ",
							"sourceMap": "8847:981:0:-:0;;;8893:42;8871:64;;;;;;;;;;;;;;;;;;;;8964:42;8942:64;;;;;;;;;;;;;;;;;;;;9030:19;9013:36;;8847:981;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@BUSD_336": {
									"entryPoint": 490,
									"id": 336,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@WBNB_333": {
									"entryPoint": 663,
									"id": 333,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@price_387": {
									"entryPoint": 699,
									"id": 387,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@token0_365": {
									"entryPoint": 528,
									"id": 365,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@token1_378": {
									"entryPoint": 355,
									"id": 378,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@totalSupply_352": {
									"entryPoint": 706,
									"id": 352,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 841,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_contract$_IERC20_$25": {
									"entryPoint": 862,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_contract$_Router_$330": {
									"entryPoint": 883,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 904,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address_fromMemory": {
									"entryPoint": 925,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_contract$_IERC20_$25": {
									"entryPoint": 970,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_contract$_Router_$330": {
									"entryPoint": 1015,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256_fromMemory": {
									"entryPoint": 1060,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 1105,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 1120,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 1135,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 1162,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 1189,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_contract$_IERC20_$25": {
									"entryPoint": 1207,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_contract$_Router_$330": {
									"entryPoint": 1225,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 1243,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 1275,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 1285,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 1290,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_contract$_IERC20_$25": {
									"entryPoint": 1313,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_contract$_Router_$330": {
									"entryPoint": 1336,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 1359,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:4229:1",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "70:80:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "80:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "95:6:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "89:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "89:13:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "80:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "138:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "111:26:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "111:33:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "111:33:1"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "48:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "56:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "64:5:1",
														"type": ""
													}
												],
												"src": "7:143:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "221:100:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "231:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "253:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "240:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "240:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "231:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "309:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_contract$_IERC20_$25",
																	"nodeType": "YulIdentifier",
																	"src": "269:39:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "269:46:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "269:46:1"
														}
													]
												},
												"name": "abi_decode_t_contract$_IERC20_$25",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "199:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "207:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "215:5:1",
														"type": ""
													}
												],
												"src": "156:165:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "393:101:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "403:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "425:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "412:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "412:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "403:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "482:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_contract$_Router_$330",
																	"nodeType": "YulIdentifier",
																	"src": "441:40:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "441:47:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "441:47:1"
														}
													]
												},
												"name": "abi_decode_t_contract$_Router_$330",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "371:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "379:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "387:5:1",
														"type": ""
													}
												],
												"src": "327:167:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "563:80:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "573:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "588:6:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "582:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "582:13:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "573:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "631:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "604:26:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "604:33:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "604:33:1"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "541:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "549:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "557:5:1",
														"type": ""
													}
												],
												"src": "500:143:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "726:274:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "772:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "774:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "774:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "774:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "747:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "756:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "743:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "743:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "768:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "739:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "739:32:1"
															},
															"nodeType": "YulIf",
															"src": "736:119:1"
														},
														{
															"nodeType": "YulBlock",
															"src": "865:128:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "880:15:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "894:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "884:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "909:74:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "955:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "966:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "951:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "951:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "975:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "919:31:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "919:64:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "909:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "696:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "707:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "719:6:1",
														"type": ""
													}
												],
												"src": "649:351:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1085:276:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1131:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "1133:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1133:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1133:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1106:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1115:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1102:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1102:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1127:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1098:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1098:32:1"
															},
															"nodeType": "YulIf",
															"src": "1095:119:1"
														},
														{
															"nodeType": "YulBlock",
															"src": "1224:130:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1239:15:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1253:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1243:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1268:76:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1316:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1327:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1312:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1312:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1336:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_contract$_IERC20_$25",
																			"nodeType": "YulIdentifier",
																			"src": "1278:33:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1278:66:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1268:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_contract$_IERC20_$25",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1055:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1066:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1078:6:1",
														"type": ""
													}
												],
												"src": "1006:355:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1447:277:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1493:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "1495:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1495:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1495:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1468:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1477:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1464:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1464:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1489:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1460:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1460:32:1"
															},
															"nodeType": "YulIf",
															"src": "1457:119:1"
														},
														{
															"nodeType": "YulBlock",
															"src": "1586:131:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1601:15:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1615:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1605:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1630:77:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1679:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1690:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1675:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1675:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1699:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_contract$_Router_$330",
																			"nodeType": "YulIdentifier",
																			"src": "1640:34:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1640:67:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1630:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_contract$_Router_$330",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1417:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1428:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1440:6:1",
														"type": ""
													}
												],
												"src": "1367:357:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1807:274:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1853:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "1855:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1855:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1855:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1828:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1837:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1824:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1824:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1849:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1820:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1820:32:1"
															},
															"nodeType": "YulIf",
															"src": "1817:119:1"
														},
														{
															"nodeType": "YulBlock",
															"src": "1946:128:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1961:15:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1975:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1965:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1990:74:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2036:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2047:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2032:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2032:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2056:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "2000:31:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2000:64:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1990:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1777:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1788:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1800:6:1",
														"type": ""
													}
												],
												"src": "1730:351:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2152:53:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2169:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2192:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "2174:17:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2174:24:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2162:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2162:37:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2162:37:1"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2140:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2147:3:1",
														"type": ""
													}
												],
												"src": "2087:118:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2276:53:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2293:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2316:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "2298:17:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2298:24:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2286:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2286:37:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2286:37:1"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2264:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2271:3:1",
														"type": ""
													}
												],
												"src": "2211:118:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2433:124:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2443:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2455:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2466:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2451:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2451:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2443:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "2523:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2536:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2547:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2532:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2532:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2479:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2479:71:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2479:71:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2405:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2417:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2428:4:1",
														"type": ""
													}
												],
												"src": "2335:222:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2661:124:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2671:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2683:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2694:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2679:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2679:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2671:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "2751:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2764:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2775:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2760:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2760:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2707:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2707:71:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2707:71:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2633:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2645:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2656:4:1",
														"type": ""
													}
												],
												"src": "2563:222:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2831:35:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2841:19:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2857:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "2851:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2851:9:1"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "2841:6:1"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "2824:6:1",
														"type": ""
													}
												],
												"src": "2791:75:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2917:51:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2927:35:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2956:5:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "2938:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2938:24:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "2927:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2899:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "2909:7:1",
														"type": ""
													}
												],
												"src": "2872:96:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3032:51:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3042:35:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3071:5:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "3053:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3053:24:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "3042:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_contract$_IERC20_$25",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3014:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "3024:7:1",
														"type": ""
													}
												],
												"src": "2974:109:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3148:51:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3158:35:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3187:5:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "3169:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3169:24:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "3158:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_contract$_Router_$330",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3130:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "3140:7:1",
														"type": ""
													}
												],
												"src": "3089:110:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3250:81:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3260:65:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3275:5:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3282:42:1",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "3271:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3271:54:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "3260:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3232:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "3242:7:1",
														"type": ""
													}
												],
												"src": "3205:126:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3382:32:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3392:16:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "3403:5:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "3392:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3364:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "3374:7:1",
														"type": ""
													}
												],
												"src": "3337:77:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3509:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3526:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3529:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "3519:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3519:12:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3519:12:1"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "3420:117:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3632:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3649:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3652:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "3642:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3642:12:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3642:12:1"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "3543:117:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3709:79:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3766:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3775:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3778:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3768:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3768:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3768:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3732:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "3757:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "3739:17:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3739:24:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "3729:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3729:35:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "3722:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3722:43:1"
															},
															"nodeType": "YulIf",
															"src": "3719:63:1"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3702:5:1",
														"type": ""
													}
												],
												"src": "3666:122:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3850:92:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3920:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3929:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3932:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3922:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3922:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3922:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3873:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "3911:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_contract$_IERC20_$25",
																					"nodeType": "YulIdentifier",
																					"src": "3880:30:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3880:37:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "3870:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3870:48:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "3863:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3863:56:1"
															},
															"nodeType": "YulIf",
															"src": "3860:76:1"
														}
													]
												},
												"name": "validator_revert_t_contract$_IERC20_$25",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3843:5:1",
														"type": ""
													}
												],
												"src": "3794:148:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4005:93:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4076:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4085:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4088:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4078:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4078:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4078:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "4028:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "4067:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_contract$_Router_$330",
																					"nodeType": "YulIdentifier",
																					"src": "4035:31:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4035:38:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "4025:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4025:49:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "4018:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4018:57:1"
															},
															"nodeType": "YulIf",
															"src": "4015:77:1"
														}
													]
												},
												"name": "validator_revert_t_contract$_Router_$330",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3998:5:1",
														"type": ""
													}
												],
												"src": "3948:150:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4147:79:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4204:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4213:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4216:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4206:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4206:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4206:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "4170:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "4195:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "4177:17:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4177:24:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "4167:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4167:35:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "4160:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4160:43:1"
															},
															"nodeType": "YulIf",
															"src": "4157:63:1"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4140:5:1",
														"type": ""
													}
												],
												"src": "4104:122:1"
											}
										]
									},
									"contents": "{\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_t_contract$_IERC20_$25(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_contract$_IERC20_$25(value)\n    }\n\n    function abi_decode_t_contract$_Router_$330(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_contract$_Router_$330(value)\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_contract$_IERC20_$25(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_contract$_IERC20_$25(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_contract$_Router_$330(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_contract$_Router_$330(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_contract$_IERC20_$25(value) -> cleaned {\n        cleaned := cleanup_t_address(value)\n    }\n\n    function cleanup_t_contract$_Router_$330(value) -> cleaned {\n        cleaned := cleanup_t_address(value)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_contract$_IERC20_$25(value) {\n        if iszero(eq(value, cleanup_t_contract$_IERC20_$25(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_contract$_Router_$330(value) {\n        if iszero(eq(value, cleanup_t_contract$_Router_$330(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n}\n",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100625760003560e01c80633782379514610067578063484f4ea91461009757806376bf39a3146100b55780638dd95002146100e5578063aea9107814610103578063e4dc2aa414610133575b600080fd5b610081600480360381019061007c91906103ca565b610163565b60405161008e919061046f565b60405180910390f35b61009f6101ea565b6040516100ac919061046f565b60405180910390f35b6100cf60048036038101906100ca91906103ca565b610210565b6040516100dc919061046f565b60405180910390f35b6100ed610297565b6040516100fa919061046f565b60405180910390f35b61011d600480360381019061011891906103f7565b6102bb565b60405161012a919061048a565b60405180910390f35b61014d600480360381019061014891906103ca565b6102c2565b60405161015a919061048a565b60405180910390f35b60008173ffffffffffffffffffffffffffffffffffffffff1663d21220a76040518163ffffffff1660e01b815260040160206040518083038186803b1580156101ab57600080fd5b505afa1580156101bf573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101e3919061039d565b9050919050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008173ffffffffffffffffffffffffffffffffffffffff16630dfe16816040518163ffffffff1660e01b815260040160206040518083038186803b15801561025857600080fd5b505afa15801561026c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610290919061039d565b9050919050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000919050565b60008173ffffffffffffffffffffffffffffffffffffffff166318160ddd6040518163ffffffff1660e01b815260040160206040518083038186803b15801561030a57600080fd5b505afa15801561031e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103429190610424565b9050919050565b6000815190506103588161050a565b92915050565b60008135905061036d81610521565b92915050565b60008135905061038281610538565b92915050565b6000815190506103978161054f565b92915050565b6000602082840312156103b3576103b2610505565b5b60006103c184828501610349565b91505092915050565b6000602082840312156103e0576103df610505565b5b60006103ee8482850161035e565b91505092915050565b60006020828403121561040d5761040c610505565b5b600061041b84828501610373565b91505092915050565b60006020828403121561043a57610439610505565b5b600061044884828501610388565b91505092915050565b61045a816104a5565b82525050565b610469816104fb565b82525050565b60006020820190506104846000830184610451565b92915050565b600060208201905061049f6000830184610460565b92915050565b60006104b0826104db565b9050919050565b60006104c2826104a5565b9050919050565b60006104d4826104a5565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600080fd5b610513816104a5565b811461051e57600080fd5b50565b61052a816104b7565b811461053557600080fd5b50565b610541816104c9565b811461054c57600080fd5b50565b610558816104fb565b811461056357600080fd5b5056fea2646970667358221220bfc0d108fa2da030aa7c073068025f4c111a5c71d835e160846fbb084e91866f64736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x62 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x37823795 EQ PUSH2 0x67 JUMPI DUP1 PUSH4 0x484F4EA9 EQ PUSH2 0x97 JUMPI DUP1 PUSH4 0x76BF39A3 EQ PUSH2 0xB5 JUMPI DUP1 PUSH4 0x8DD95002 EQ PUSH2 0xE5 JUMPI DUP1 PUSH4 0xAEA91078 EQ PUSH2 0x103 JUMPI DUP1 PUSH4 0xE4DC2AA4 EQ PUSH2 0x133 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x81 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x7C SWAP2 SWAP1 PUSH2 0x3CA JUMP JUMPDEST PUSH2 0x163 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x8E SWAP2 SWAP1 PUSH2 0x46F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x9F PUSH2 0x1EA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xAC SWAP2 SWAP1 PUSH2 0x46F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xCF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xCA SWAP2 SWAP1 PUSH2 0x3CA JUMP JUMPDEST PUSH2 0x210 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xDC SWAP2 SWAP1 PUSH2 0x46F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xED PUSH2 0x297 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xFA SWAP2 SWAP1 PUSH2 0x46F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x11D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x118 SWAP2 SWAP1 PUSH2 0x3F7 JUMP JUMPDEST PUSH2 0x2BB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x12A SWAP2 SWAP1 PUSH2 0x48A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x14D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x148 SWAP2 SWAP1 PUSH2 0x3CA JUMP JUMPDEST PUSH2 0x2C2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x15A SWAP2 SWAP1 PUSH2 0x48A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xD21220A7 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1AB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1BF JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1E3 SWAP2 SWAP1 PUSH2 0x39D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xDFE1681 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x258 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x26C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x290 SWAP2 SWAP1 PUSH2 0x39D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x18160DDD PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x30A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x31E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x342 SWAP2 SWAP1 PUSH2 0x424 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x358 DUP2 PUSH2 0x50A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x36D DUP2 PUSH2 0x521 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x382 DUP2 PUSH2 0x538 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x397 DUP2 PUSH2 0x54F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3B3 JUMPI PUSH2 0x3B2 PUSH2 0x505 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3C1 DUP5 DUP3 DUP6 ADD PUSH2 0x349 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3E0 JUMPI PUSH2 0x3DF PUSH2 0x505 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3EE DUP5 DUP3 DUP6 ADD PUSH2 0x35E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x40D JUMPI PUSH2 0x40C PUSH2 0x505 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x41B DUP5 DUP3 DUP6 ADD PUSH2 0x373 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x43A JUMPI PUSH2 0x439 PUSH2 0x505 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x448 DUP5 DUP3 DUP6 ADD PUSH2 0x388 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x45A DUP2 PUSH2 0x4A5 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x469 DUP2 PUSH2 0x4FB JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x484 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x451 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x49F PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x460 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4B0 DUP3 PUSH2 0x4DB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4C2 DUP3 PUSH2 0x4A5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4D4 DUP3 PUSH2 0x4A5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x513 DUP2 PUSH2 0x4A5 JUMP JUMPDEST DUP2 EQ PUSH2 0x51E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x52A DUP2 PUSH2 0x4B7 JUMP JUMPDEST DUP2 EQ PUSH2 0x535 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x541 DUP2 PUSH2 0x4C9 JUMP JUMPDEST DUP2 EQ PUSH2 0x54C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x558 DUP2 PUSH2 0x4FB JUMP JUMPDEST DUP2 EQ PUSH2 0x563 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xBF 0xC0 0xD1 ADDMOD STATICCALL 0x2D LOG0 ADDRESS 0xAA PUSH29 0x73068025F4C111A5C71D835E160846FBB084E91866F64736F6C634300 ADDMOD SMOD STOP CALLER ",
							"sourceMap": "8847:981:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9624:108;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;8942:64;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;9508:108;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;8871:64;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;9740:85;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;9382:118;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;9624:108;9680:7;9706:9;:16;;;:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;9699:25;;9624:108;;;:::o;8942:64::-;;;;;;;;;;;;;:::o;9508:108::-;9564:7;9590:9;:16;;;:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;9583:25;;9508:108;;;:::o;8871:64::-;;;;;;;;;;;;:::o;9740:85::-;9799:7;9740:85;;;:::o;9382:118::-;9443:7;9469:9;:21;;;:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;9462:30;;9382:118;;;:::o;7:143:1:-;64:5;95:6;89:13;80:22;;111:33;138:5;111:33;:::i;:::-;7:143;;;;:::o;156:165::-;215:5;253:6;240:20;231:29;;269:46;309:5;269:46;:::i;:::-;156:165;;;;:::o;327:167::-;387:5;425:6;412:20;403:29;;441:47;482:5;441:47;:::i;:::-;327:167;;;;:::o;500:143::-;557:5;588:6;582:13;573:22;;604:33;631:5;604:33;:::i;:::-;500:143;;;;:::o;649:351::-;719:6;768:2;756:9;747:7;743:23;739:32;736:119;;;774:79;;:::i;:::-;736:119;894:1;919:64;975:7;966:6;955:9;951:22;919:64;:::i;:::-;909:74;;865:128;649:351;;;;:::o;1006:355::-;1078:6;1127:2;1115:9;1106:7;1102:23;1098:32;1095:119;;;1133:79;;:::i;:::-;1095:119;1253:1;1278:66;1336:7;1327:6;1316:9;1312:22;1278:66;:::i;:::-;1268:76;;1224:130;1006:355;;;;:::o;1367:357::-;1440:6;1489:2;1477:9;1468:7;1464:23;1460:32;1457:119;;;1495:79;;:::i;:::-;1457:119;1615:1;1640:67;1699:7;1690:6;1679:9;1675:22;1640:67;:::i;:::-;1630:77;;1586:131;1367:357;;;;:::o;1730:351::-;1800:6;1849:2;1837:9;1828:7;1824:23;1820:32;1817:119;;;1855:79;;:::i;:::-;1817:119;1975:1;2000:64;2056:7;2047:6;2036:9;2032:22;2000:64;:::i;:::-;1990:74;;1946:128;1730:351;;;;:::o;2087:118::-;2174:24;2192:5;2174:24;:::i;:::-;2169:3;2162:37;2087:118;;:::o;2211:::-;2298:24;2316:5;2298:24;:::i;:::-;2293:3;2286:37;2211:118;;:::o;2335:222::-;2428:4;2466:2;2455:9;2451:18;2443:26;;2479:71;2547:1;2536:9;2532:17;2523:6;2479:71;:::i;:::-;2335:222;;;;:::o;2563:::-;2656:4;2694:2;2683:9;2679:18;2671:26;;2707:71;2775:1;2764:9;2760:17;2751:6;2707:71;:::i;:::-;2563:222;;;;:::o;2872:96::-;2909:7;2938:24;2956:5;2938:24;:::i;:::-;2927:35;;2872:96;;;:::o;2974:109::-;3024:7;3053:24;3071:5;3053:24;:::i;:::-;3042:35;;2974:109;;;:::o;3089:110::-;3140:7;3169:24;3187:5;3169:24;:::i;:::-;3158:35;;3089:110;;;:::o;3205:126::-;3242:7;3282:42;3275:5;3271:54;3260:65;;3205:126;;;:::o;3337:77::-;3374:7;3403:5;3392:16;;3337:77;;;:::o;3543:117::-;3652:1;3649;3642:12;3666:122;3739:24;3757:5;3739:24;:::i;:::-;3732:5;3729:35;3719:63;;3778:1;3775;3768:12;3719:63;3666:122;:::o;3794:148::-;3880:37;3911:5;3880:37;:::i;:::-;3873:5;3870:48;3860:76;;3932:1;3929;3922:12;3860:76;3794:148;:::o;3948:150::-;4035:38;4067:5;4035:38;:::i;:::-;4028:5;4025:49;4015:77;;4088:1;4085;4078:12;4015:77;3948:150;:::o;4104:122::-;4177:24;4195:5;4177:24;:::i;:::-;4170:5;4167:35;4157:63;;4216:1;4213;4206:12;4157:63;4104:122;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "287200",
								"executionCost": "70964",
								"totalCost": "358164"
							},
							"external": {
								"BUSD()": "2514",
								"WBNB()": "2555",
								"price(address)": "752",
								"token0(address)": "infinite",
								"token1(address)": "infinite",
								"totalSupply(address)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 8847,
									"end": 9828,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 8847,
									"end": 9828,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 8847,
									"end": 9828,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 8893,
									"end": 8935,
									"name": "PUSH",
									"source": 0,
									"value": "AE13D989DAC2F0DEBFF460AC112A837C89BAA7CD"
								},
								{
									"begin": 8871,
									"end": 8935,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 8871,
									"end": 8935,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 8871,
									"end": 8935,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 8871,
									"end": 8935,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 8871,
									"end": 8935,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 8871,
									"end": 8935,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 8871,
									"end": 8935,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 8871,
									"end": 8935,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 8871,
									"end": 8935,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 8871,
									"end": 8935,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 8871,
									"end": 8935,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 8871,
									"end": 8935,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 8871,
									"end": 8935,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 8871,
									"end": 8935,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 8871,
									"end": 8935,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 8871,
									"end": 8935,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 8871,
									"end": 8935,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 8871,
									"end": 8935,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 8871,
									"end": 8935,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 8871,
									"end": 8935,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 8964,
									"end": 9006,
									"name": "PUSH",
									"source": 0,
									"value": "78867BBEEF44F2326BF8DDD1941A4439382EF2A7"
								},
								{
									"begin": 8942,
									"end": 9006,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 8942,
									"end": 9006,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 8942,
									"end": 9006,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 8942,
									"end": 9006,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 8942,
									"end": 9006,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 8942,
									"end": 9006,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 8942,
									"end": 9006,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 8942,
									"end": 9006,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 8942,
									"end": 9006,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 8942,
									"end": 9006,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 8942,
									"end": 9006,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 8942,
									"end": 9006,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 8942,
									"end": 9006,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 8942,
									"end": 9006,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 8942,
									"end": 9006,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 8942,
									"end": 9006,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 8942,
									"end": 9006,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 8942,
									"end": 9006,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 8942,
									"end": 9006,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 8942,
									"end": 9006,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 9030,
									"end": 9049,
									"name": "PUSH",
									"source": 0,
									"value": "DE0B6B3A7640000"
								},
								{
									"begin": 9013,
									"end": 9049,
									"name": "PUSH",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 9013,
									"end": 9049,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 8847,
									"end": 9828,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 8847,
									"end": 9828,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 8847,
									"end": 9828,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 8847,
									"end": 9828,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 8847,
									"end": 9828,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 8847,
									"end": 9828,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 8847,
									"end": 9828,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 8847,
									"end": 9828,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 8847,
									"end": 9828,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 8847,
									"end": 9828,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 8847,
									"end": 9828,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 8847,
									"end": 9828,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 8847,
									"end": 9828,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 8847,
									"end": 9828,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 8847,
									"end": 9828,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 8847,
									"end": 9828,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 8847,
									"end": 9828,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 8847,
									"end": 9828,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220bfc0d108fa2da030aa7c073068025f4c111a5c71d835e160846fbb084e91866f64736f6c63430008070033",
									".code": [
										{
											"begin": 8847,
											"end": 9828,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 8847,
											"end": 9828,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8847,
											"end": 9828,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8847,
											"end": 9828,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 8847,
											"end": 9828,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8847,
											"end": 9828,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 8847,
											"end": 9828,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 8847,
											"end": 9828,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8847,
											"end": 9828,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8847,
											"end": 9828,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8847,
											"end": 9828,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 8847,
											"end": 9828,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 8847,
											"end": 9828,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8847,
											"end": 9828,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8847,
											"end": 9828,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 8847,
											"end": 9828,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 8847,
											"end": 9828,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 8847,
											"end": 9828,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 8847,
											"end": 9828,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8847,
											"end": 9828,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8847,
											"end": 9828,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 8847,
											"end": 9828,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 8847,
											"end": 9828,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 8847,
											"end": 9828,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8847,
											"end": 9828,
											"name": "PUSH",
											"source": 0,
											"value": "37823795"
										},
										{
											"begin": 8847,
											"end": 9828,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 8847,
											"end": 9828,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 8847,
											"end": 9828,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8847,
											"end": 9828,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8847,
											"end": 9828,
											"name": "PUSH",
											"source": 0,
											"value": "484F4EA9"
										},
										{
											"begin": 8847,
											"end": 9828,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 8847,
											"end": 9828,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 8847,
											"end": 9828,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8847,
											"end": 9828,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8847,
											"end": 9828,
											"name": "PUSH",
											"source": 0,
											"value": "76BF39A3"
										},
										{
											"begin": 8847,
											"end": 9828,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 8847,
											"end": 9828,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 8847,
											"end": 9828,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8847,
											"end": 9828,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8847,
											"end": 9828,
											"name": "PUSH",
											"source": 0,
											"value": "8DD95002"
										},
										{
											"begin": 8847,
											"end": 9828,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 8847,
											"end": 9828,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 8847,
											"end": 9828,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8847,
											"end": 9828,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8847,
											"end": 9828,
											"name": "PUSH",
											"source": 0,
											"value": "AEA91078"
										},
										{
											"begin": 8847,
											"end": 9828,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 8847,
											"end": 9828,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 8847,
											"end": 9828,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8847,
											"end": 9828,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8847,
											"end": 9828,
											"name": "PUSH",
											"source": 0,
											"value": "E4DC2AA4"
										},
										{
											"begin": 8847,
											"end": 9828,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 8847,
											"end": 9828,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 8847,
											"end": 9828,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8847,
											"end": 9828,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 8847,
											"end": 9828,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8847,
											"end": 9828,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8847,
											"end": 9828,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8847,
											"end": 9828,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 9624,
											"end": 9732,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 9624,
											"end": 9732,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9624,
											"end": 9732,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 9624,
											"end": 9732,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 9624,
											"end": 9732,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9624,
											"end": 9732,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 9624,
											"end": 9732,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 9624,
											"end": 9732,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9624,
											"end": 9732,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9624,
											"end": 9732,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9624,
											"end": 9732,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 9624,
											"end": 9732,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9624,
											"end": 9732,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9624,
											"end": 9732,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 9624,
											"end": 9732,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 9624,
											"end": 9732,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 9624,
											"end": 9732,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9624,
											"end": 9732,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 9624,
											"end": 9732,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 9624,
											"end": 9732,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 9624,
											"end": 9732,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9624,
											"end": 9732,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9624,
											"end": 9732,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 9624,
											"end": 9732,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 9624,
											"end": 9732,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9624,
											"end": 9732,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9624,
											"end": 9732,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 9624,
											"end": 9732,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 9624,
											"end": 9732,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 9624,
											"end": 9732,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9624,
											"end": 9732,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9624,
											"end": 9732,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 9624,
											"end": 9732,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9624,
											"end": 9732,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9624,
											"end": 9732,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 9624,
											"end": 9732,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9624,
											"end": 9732,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 8942,
											"end": 9006,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 8942,
											"end": 9006,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8942,
											"end": 9006,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 8942,
											"end": 9006,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 8942,
											"end": 9006,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8942,
											"end": 9006,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 8942,
											"end": 9006,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8942,
											"end": 9006,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8942,
											"end": 9006,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8942,
											"end": 9006,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 8942,
											"end": 9006,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8942,
											"end": 9006,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8942,
											"end": 9006,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 8942,
											"end": 9006,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8942,
											"end": 9006,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 8942,
											"end": 9006,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8942,
											"end": 9006,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8942,
											"end": 9006,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8942,
											"end": 9006,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8942,
											"end": 9006,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8942,
											"end": 9006,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 8942,
											"end": 9006,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8942,
											"end": 9006,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 9508,
											"end": 9616,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 9508,
											"end": 9616,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9508,
											"end": 9616,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 9508,
											"end": 9616,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 9508,
											"end": 9616,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9508,
											"end": 9616,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 9508,
											"end": 9616,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 9508,
											"end": 9616,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9508,
											"end": 9616,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9508,
											"end": 9616,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9508,
											"end": 9616,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 9508,
											"end": 9616,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9508,
											"end": 9616,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9508,
											"end": 9616,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 9508,
											"end": 9616,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 9508,
											"end": 9616,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 9508,
											"end": 9616,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9508,
											"end": 9616,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 9508,
											"end": 9616,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 9508,
											"end": 9616,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 9508,
											"end": 9616,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9508,
											"end": 9616,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9508,
											"end": 9616,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 9508,
											"end": 9616,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 9508,
											"end": 9616,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9508,
											"end": 9616,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9508,
											"end": 9616,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 9508,
											"end": 9616,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 9508,
											"end": 9616,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 9508,
											"end": 9616,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9508,
											"end": 9616,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9508,
											"end": 9616,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 9508,
											"end": 9616,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9508,
											"end": 9616,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9508,
											"end": 9616,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 9508,
											"end": 9616,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9508,
											"end": 9616,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 8871,
											"end": 8935,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 8871,
											"end": 8935,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8871,
											"end": 8935,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 8871,
											"end": 8935,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 8871,
											"end": 8935,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8871,
											"end": 8935,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 8871,
											"end": 8935,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8871,
											"end": 8935,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8871,
											"end": 8935,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8871,
											"end": 8935,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 8871,
											"end": 8935,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8871,
											"end": 8935,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8871,
											"end": 8935,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 8871,
											"end": 8935,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8871,
											"end": 8935,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 8871,
											"end": 8935,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8871,
											"end": 8935,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8871,
											"end": 8935,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8871,
											"end": 8935,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8871,
											"end": 8935,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8871,
											"end": 8935,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 8871,
											"end": 8935,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8871,
											"end": 8935,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 9740,
											"end": 9825,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 9740,
											"end": 9825,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9740,
											"end": 9825,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 9740,
											"end": 9825,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 9740,
											"end": 9825,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9740,
											"end": 9825,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 9740,
											"end": 9825,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 9740,
											"end": 9825,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9740,
											"end": 9825,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9740,
											"end": 9825,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9740,
											"end": 9825,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 9740,
											"end": 9825,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9740,
											"end": 9825,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9740,
											"end": 9825,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 9740,
											"end": 9825,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 9740,
											"end": 9825,
											"name": "tag",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 9740,
											"end": 9825,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9740,
											"end": 9825,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 9740,
											"end": 9825,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 9740,
											"end": 9825,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 9740,
											"end": 9825,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9740,
											"end": 9825,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9740,
											"end": 9825,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 9740,
											"end": 9825,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 9740,
											"end": 9825,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9740,
											"end": 9825,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9740,
											"end": 9825,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 9740,
											"end": 9825,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 9740,
											"end": 9825,
											"name": "tag",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 9740,
											"end": 9825,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9740,
											"end": 9825,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9740,
											"end": 9825,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 9740,
											"end": 9825,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9740,
											"end": 9825,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9740,
											"end": 9825,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 9740,
											"end": 9825,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9740,
											"end": 9825,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 9382,
											"end": 9500,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 9382,
											"end": 9500,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9382,
											"end": 9500,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 9382,
											"end": 9500,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 9382,
											"end": 9500,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9382,
											"end": 9500,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 9382,
											"end": 9500,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 9382,
											"end": 9500,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9382,
											"end": 9500,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9382,
											"end": 9500,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9382,
											"end": 9500,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 9382,
											"end": 9500,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9382,
											"end": 9500,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9382,
											"end": 9500,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 9382,
											"end": 9500,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 9382,
											"end": 9500,
											"name": "tag",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 9382,
											"end": 9500,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9382,
											"end": 9500,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 9382,
											"end": 9500,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 9382,
											"end": 9500,
											"name": "tag",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 9382,
											"end": 9500,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9382,
											"end": 9500,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9382,
											"end": 9500,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 9382,
											"end": 9500,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 9382,
											"end": 9500,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9382,
											"end": 9500,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9382,
											"end": 9500,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 9382,
											"end": 9500,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 9382,
											"end": 9500,
											"name": "tag",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 9382,
											"end": 9500,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9382,
											"end": 9500,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9382,
											"end": 9500,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 9382,
											"end": 9500,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9382,
											"end": 9500,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9382,
											"end": 9500,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 9382,
											"end": 9500,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9382,
											"end": 9500,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 9624,
											"end": 9732,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 9624,
											"end": 9732,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9680,
											"end": 9687,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9706,
											"end": 9715,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9706,
											"end": 9722,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9706,
											"end": 9722,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9706,
											"end": 9722,
											"name": "PUSH",
											"source": 0,
											"value": "D21220A7"
										},
										{
											"begin": 9706,
											"end": 9724,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9706,
											"end": 9724,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 9706,
											"end": 9724,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9706,
											"end": 9724,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 9706,
											"end": 9724,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9706,
											"end": 9724,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 9706,
											"end": 9724,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 9706,
											"end": 9724,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9706,
											"end": 9724,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9706,
											"end": 9724,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 9706,
											"end": 9724,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9706,
											"end": 9724,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 9706,
											"end": 9724,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9706,
											"end": 9724,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 9706,
											"end": 9724,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9706,
											"end": 9724,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 9706,
											"end": 9724,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 9706,
											"end": 9724,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9706,
											"end": 9724,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 9706,
											"end": 9724,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9706,
											"end": 9724,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 9706,
											"end": 9724,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 9706,
											"end": 9724,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9706,
											"end": 9724,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 9706,
											"end": 9724,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 9706,
											"end": 9724,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9706,
											"end": 9724,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9706,
											"end": 9724,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9706,
											"end": 9724,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 9706,
											"end": 9724,
											"name": "tag",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 9706,
											"end": 9724,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9706,
											"end": 9724,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9706,
											"end": 9724,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 9706,
											"end": 9724,
											"name": "STATICCALL",
											"source": 0
										},
										{
											"begin": 9706,
											"end": 9724,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 9706,
											"end": 9724,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9706,
											"end": 9724,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 9706,
											"end": 9724,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 9706,
											"end": 9724,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9706,
											"end": 9724,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 9706,
											"end": 9724,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9706,
											"end": 9724,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9706,
											"end": 9724,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 9706,
											"end": 9724,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 9706,
											"end": 9724,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9706,
											"end": 9724,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 9706,
											"end": 9724,
											"name": "tag",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 9706,
											"end": 9724,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9706,
											"end": 9724,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9706,
											"end": 9724,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9706,
											"end": 9724,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9706,
											"end": 9724,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9706,
											"end": 9724,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9706,
											"end": 9724,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 9706,
											"end": 9724,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 9706,
											"end": 9724,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 9706,
											"end": 9724,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 9706,
											"end": 9724,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 9706,
											"end": 9724,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 9706,
											"end": 9724,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9706,
											"end": 9724,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9706,
											"end": 9724,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 9706,
											"end": 9724,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9706,
											"end": 9724,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9706,
											"end": 9724,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9706,
											"end": 9724,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9706,
											"end": 9724,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9706,
											"end": 9724,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9706,
											"end": 9724,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9706,
											"end": 9724,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9706,
											"end": 9724,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 9706,
											"end": 9724,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9706,
											"end": 9724,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9706,
											"end": 9724,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9706,
											"end": 9724,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 9706,
											"end": 9724,
											"name": "tag",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 9706,
											"end": 9724,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9699,
											"end": 9724,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9699,
											"end": 9724,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9624,
											"end": 9732,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9624,
											"end": 9732,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9624,
											"end": 9732,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9624,
											"end": 9732,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 8942,
											"end": 9006,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 8942,
											"end": 9006,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8942,
											"end": 9006,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 8942,
											"end": 9006,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8942,
											"end": 9006,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8942,
											"end": 9006,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 8942,
											"end": 9006,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8942,
											"end": 9006,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 8942,
											"end": 9006,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 8942,
											"end": 9006,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8942,
											"end": 9006,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 8942,
											"end": 9006,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8942,
											"end": 9006,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8942,
											"end": 9006,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8942,
											"end": 9006,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 9508,
											"end": 9616,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 9508,
											"end": 9616,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9564,
											"end": 9571,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9590,
											"end": 9599,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9590,
											"end": 9606,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9590,
											"end": 9606,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9590,
											"end": 9606,
											"name": "PUSH",
											"source": 0,
											"value": "DFE1681"
										},
										{
											"begin": 9590,
											"end": 9608,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9590,
											"end": 9608,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 9590,
											"end": 9608,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9590,
											"end": 9608,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 9590,
											"end": 9608,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9590,
											"end": 9608,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 9590,
											"end": 9608,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 9590,
											"end": 9608,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9590,
											"end": 9608,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9590,
											"end": 9608,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 9590,
											"end": 9608,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9590,
											"end": 9608,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 9590,
											"end": 9608,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9590,
											"end": 9608,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 9590,
											"end": 9608,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9590,
											"end": 9608,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 9590,
											"end": 9608,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 9590,
											"end": 9608,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9590,
											"end": 9608,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 9590,
											"end": 9608,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9590,
											"end": 9608,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 9590,
											"end": 9608,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 9590,
											"end": 9608,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9590,
											"end": 9608,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 9590,
											"end": 9608,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 9590,
											"end": 9608,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9590,
											"end": 9608,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9590,
											"end": 9608,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9590,
											"end": 9608,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 9590,
											"end": 9608,
											"name": "tag",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 9590,
											"end": 9608,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9590,
											"end": 9608,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9590,
											"end": 9608,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 9590,
											"end": 9608,
											"name": "STATICCALL",
											"source": 0
										},
										{
											"begin": 9590,
											"end": 9608,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 9590,
											"end": 9608,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9590,
											"end": 9608,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 9590,
											"end": 9608,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 9590,
											"end": 9608,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9590,
											"end": 9608,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 9590,
											"end": 9608,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9590,
											"end": 9608,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9590,
											"end": 9608,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 9590,
											"end": 9608,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 9590,
											"end": 9608,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9590,
											"end": 9608,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 9590,
											"end": 9608,
											"name": "tag",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 9590,
											"end": 9608,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9590,
											"end": 9608,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9590,
											"end": 9608,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9590,
											"end": 9608,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9590,
											"end": 9608,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9590,
											"end": 9608,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9590,
											"end": 9608,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 9590,
											"end": 9608,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 9590,
											"end": 9608,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 9590,
											"end": 9608,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 9590,
											"end": 9608,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 9590,
											"end": 9608,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 9590,
											"end": 9608,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9590,
											"end": 9608,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9590,
											"end": 9608,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 9590,
											"end": 9608,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9590,
											"end": 9608,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9590,
											"end": 9608,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9590,
											"end": 9608,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9590,
											"end": 9608,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9590,
											"end": 9608,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9590,
											"end": 9608,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9590,
											"end": 9608,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9590,
											"end": 9608,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 9590,
											"end": 9608,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9590,
											"end": 9608,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9590,
											"end": 9608,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9590,
											"end": 9608,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 9590,
											"end": 9608,
											"name": "tag",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 9590,
											"end": 9608,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9583,
											"end": 9608,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9583,
											"end": 9608,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9508,
											"end": 9616,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9508,
											"end": 9616,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9508,
											"end": 9616,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9508,
											"end": 9616,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 8871,
											"end": 8935,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 8871,
											"end": 8935,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8871,
											"end": 8935,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8871,
											"end": 8935,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8871,
											"end": 8935,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 8871,
											"end": 8935,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8871,
											"end": 8935,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 8871,
											"end": 8935,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 8871,
											"end": 8935,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8871,
											"end": 8935,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 8871,
											"end": 8935,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8871,
											"end": 8935,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8871,
											"end": 8935,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8871,
											"end": 8935,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 9740,
											"end": 9825,
											"name": "tag",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 9740,
											"end": 9825,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9799,
											"end": 9806,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9740,
											"end": 9825,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9740,
											"end": 9825,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9740,
											"end": 9825,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9740,
											"end": 9825,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 9382,
											"end": 9500,
											"name": "tag",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 9382,
											"end": 9500,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9443,
											"end": 9450,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9469,
											"end": 9478,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9469,
											"end": 9490,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9469,
											"end": 9490,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9469,
											"end": 9490,
											"name": "PUSH",
											"source": 0,
											"value": "18160DDD"
										},
										{
											"begin": 9469,
											"end": 9492,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9469,
											"end": 9492,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 9469,
											"end": 9492,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9469,
											"end": 9492,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 9469,
											"end": 9492,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9469,
											"end": 9492,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 9469,
											"end": 9492,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 9469,
											"end": 9492,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9469,
											"end": 9492,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9469,
											"end": 9492,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 9469,
											"end": 9492,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9469,
											"end": 9492,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 9469,
											"end": 9492,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9469,
											"end": 9492,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 9469,
											"end": 9492,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9469,
											"end": 9492,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 9469,
											"end": 9492,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 9469,
											"end": 9492,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9469,
											"end": 9492,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 9469,
											"end": 9492,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9469,
											"end": 9492,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 9469,
											"end": 9492,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 9469,
											"end": 9492,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9469,
											"end": 9492,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 9469,
											"end": 9492,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 9469,
											"end": 9492,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9469,
											"end": 9492,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9469,
											"end": 9492,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9469,
											"end": 9492,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 9469,
											"end": 9492,
											"name": "tag",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 9469,
											"end": 9492,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9469,
											"end": 9492,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9469,
											"end": 9492,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 9469,
											"end": 9492,
											"name": "STATICCALL",
											"source": 0
										},
										{
											"begin": 9469,
											"end": 9492,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 9469,
											"end": 9492,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9469,
											"end": 9492,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 9469,
											"end": 9492,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 9469,
											"end": 9492,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9469,
											"end": 9492,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 9469,
											"end": 9492,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9469,
											"end": 9492,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9469,
											"end": 9492,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 9469,
											"end": 9492,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 9469,
											"end": 9492,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9469,
											"end": 9492,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 9469,
											"end": 9492,
											"name": "tag",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 9469,
											"end": 9492,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9469,
											"end": 9492,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9469,
											"end": 9492,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9469,
											"end": 9492,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9469,
											"end": 9492,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9469,
											"end": 9492,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9469,
											"end": 9492,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 9469,
											"end": 9492,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 9469,
											"end": 9492,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 9469,
											"end": 9492,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 9469,
											"end": 9492,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 9469,
											"end": 9492,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 9469,
											"end": 9492,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9469,
											"end": 9492,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9469,
											"end": 9492,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 9469,
											"end": 9492,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9469,
											"end": 9492,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9469,
											"end": 9492,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9469,
											"end": 9492,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9469,
											"end": 9492,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9469,
											"end": 9492,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9469,
											"end": 9492,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9469,
											"end": 9492,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9469,
											"end": 9492,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 9469,
											"end": 9492,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9469,
											"end": 9492,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9469,
											"end": 9492,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 9469,
											"end": 9492,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 9469,
											"end": 9492,
											"name": "tag",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 9469,
											"end": 9492,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9462,
											"end": 9492,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9462,
											"end": 9492,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9382,
											"end": 9500,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9382,
											"end": 9500,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9382,
											"end": 9500,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9382,
											"end": 9500,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 7,
											"end": 150,
											"name": "tag",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 7,
											"end": 150,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 64,
											"end": 69,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 95,
											"end": 101,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 89,
											"end": 102,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 80,
											"end": 102,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 80,
											"end": 102,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 111,
											"end": 144,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 138,
											"end": 143,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 111,
											"end": 144,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "57"
										},
										{
											"begin": 111,
											"end": 144,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 111,
											"end": 144,
											"name": "tag",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 111,
											"end": 144,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7,
											"end": 150,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 7,
											"end": 150,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7,
											"end": 150,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 150,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 150,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 156,
											"end": 321,
											"name": "tag",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 156,
											"end": 321,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 215,
											"end": 220,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 253,
											"end": 259,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 240,
											"end": 260,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 231,
											"end": 260,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 231,
											"end": 260,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 269,
											"end": 315,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 309,
											"end": 314,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 269,
											"end": 315,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 269,
											"end": 315,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 269,
											"end": 315,
											"name": "tag",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 269,
											"end": 315,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 156,
											"end": 321,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 156,
											"end": 321,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 156,
											"end": 321,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 156,
											"end": 321,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 156,
											"end": 321,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 327,
											"end": 494,
											"name": "tag",
											"source": 1,
											"value": "62"
										},
										{
											"begin": 327,
											"end": 494,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 387,
											"end": 392,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 425,
											"end": 431,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 412,
											"end": 432,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 403,
											"end": 432,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 403,
											"end": 432,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 441,
											"end": 488,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 482,
											"end": 487,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 441,
											"end": 488,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 441,
											"end": 488,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 441,
											"end": 488,
											"name": "tag",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 441,
											"end": 488,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 327,
											"end": 494,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 327,
											"end": 494,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 327,
											"end": 494,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 327,
											"end": 494,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 327,
											"end": 494,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 500,
											"end": 643,
											"name": "tag",
											"source": 1,
											"value": "66"
										},
										{
											"begin": 500,
											"end": 643,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 557,
											"end": 562,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 588,
											"end": 594,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 582,
											"end": 595,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 573,
											"end": 595,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 573,
											"end": 595,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 604,
											"end": 637,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 631,
											"end": 636,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 604,
											"end": 637,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "69"
										},
										{
											"begin": 604,
											"end": 637,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 604,
											"end": 637,
											"name": "tag",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 604,
											"end": 637,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 500,
											"end": 643,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 500,
											"end": 643,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 500,
											"end": 643,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 500,
											"end": 643,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 500,
											"end": 643,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 649,
											"end": 1000,
											"name": "tag",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 649,
											"end": 1000,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 719,
											"end": 725,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 768,
											"end": 770,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 756,
											"end": 765,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 747,
											"end": 754,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 743,
											"end": 766,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 739,
											"end": 771,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 736,
											"end": 855,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 736,
											"end": 855,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 736,
											"end": 855,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 774,
											"end": 853,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "72"
										},
										{
											"begin": 774,
											"end": 853,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "73"
										},
										{
											"begin": 774,
											"end": 853,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 774,
											"end": 853,
											"name": "tag",
											"source": 1,
											"value": "72"
										},
										{
											"begin": 774,
											"end": 853,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 736,
											"end": 855,
											"name": "tag",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 736,
											"end": 855,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 894,
											"end": 895,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 919,
											"end": 983,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "74"
										},
										{
											"begin": 975,
											"end": 982,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 966,
											"end": 972,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 955,
											"end": 964,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 951,
											"end": 973,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 919,
											"end": 983,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 919,
											"end": 983,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 919,
											"end": 983,
											"name": "tag",
											"source": 1,
											"value": "74"
										},
										{
											"begin": 919,
											"end": 983,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 909,
											"end": 983,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 909,
											"end": 983,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 865,
											"end": 993,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 649,
											"end": 1000,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 649,
											"end": 1000,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 649,
											"end": 1000,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 649,
											"end": 1000,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 649,
											"end": 1000,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1006,
											"end": 1361,
											"name": "tag",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 1006,
											"end": 1361,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1078,
											"end": 1084,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1127,
											"end": 1129,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1115,
											"end": 1124,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1106,
											"end": 1113,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1102,
											"end": 1125,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1098,
											"end": 1130,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 1095,
											"end": 1214,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1095,
											"end": 1214,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "76"
										},
										{
											"begin": 1095,
											"end": 1214,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1133,
											"end": 1212,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "77"
										},
										{
											"begin": 1133,
											"end": 1212,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "73"
										},
										{
											"begin": 1133,
											"end": 1212,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1133,
											"end": 1212,
											"name": "tag",
											"source": 1,
											"value": "77"
										},
										{
											"begin": 1133,
											"end": 1212,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1095,
											"end": 1214,
											"name": "tag",
											"source": 1,
											"value": "76"
										},
										{
											"begin": 1095,
											"end": 1214,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1253,
											"end": 1254,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1278,
											"end": 1344,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "78"
										},
										{
											"begin": 1336,
											"end": 1343,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1327,
											"end": 1333,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1316,
											"end": 1325,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1312,
											"end": 1334,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1278,
											"end": 1344,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 1278,
											"end": 1344,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1278,
											"end": 1344,
											"name": "tag",
											"source": 1,
											"value": "78"
										},
										{
											"begin": 1278,
											"end": 1344,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1268,
											"end": 1344,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1268,
											"end": 1344,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1224,
											"end": 1354,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1006,
											"end": 1361,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1006,
											"end": 1361,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1006,
											"end": 1361,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1006,
											"end": 1361,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1006,
											"end": 1361,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1367,
											"end": 1724,
											"name": "tag",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 1367,
											"end": 1724,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1440,
											"end": 1446,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1489,
											"end": 1491,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1477,
											"end": 1486,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1468,
											"end": 1475,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1464,
											"end": 1487,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1460,
											"end": 1492,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 1457,
											"end": 1576,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1457,
											"end": 1576,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 1457,
											"end": 1576,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1495,
											"end": 1574,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "81"
										},
										{
											"begin": 1495,
											"end": 1574,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "73"
										},
										{
											"begin": 1495,
											"end": 1574,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1495,
											"end": 1574,
											"name": "tag",
											"source": 1,
											"value": "81"
										},
										{
											"begin": 1495,
											"end": 1574,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1457,
											"end": 1576,
											"name": "tag",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 1457,
											"end": 1576,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1615,
											"end": 1616,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1640,
											"end": 1707,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "82"
										},
										{
											"begin": 1699,
											"end": 1706,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1690,
											"end": 1696,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1679,
											"end": 1688,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1675,
											"end": 1697,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1640,
											"end": 1707,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "62"
										},
										{
											"begin": 1640,
											"end": 1707,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1640,
											"end": 1707,
											"name": "tag",
											"source": 1,
											"value": "82"
										},
										{
											"begin": 1640,
											"end": 1707,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1630,
											"end": 1707,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1630,
											"end": 1707,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1586,
											"end": 1717,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1367,
											"end": 1724,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1367,
											"end": 1724,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1367,
											"end": 1724,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1367,
											"end": 1724,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1367,
											"end": 1724,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1730,
											"end": 2081,
											"name": "tag",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 1730,
											"end": 2081,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1800,
											"end": 1806,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1849,
											"end": 1851,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1837,
											"end": 1846,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1828,
											"end": 1835,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1824,
											"end": 1847,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1820,
											"end": 1852,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 1817,
											"end": 1936,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1817,
											"end": 1936,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 1817,
											"end": 1936,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1855,
											"end": 1934,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "85"
										},
										{
											"begin": 1855,
											"end": 1934,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "73"
										},
										{
											"begin": 1855,
											"end": 1934,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1855,
											"end": 1934,
											"name": "tag",
											"source": 1,
											"value": "85"
										},
										{
											"begin": 1855,
											"end": 1934,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1817,
											"end": 1936,
											"name": "tag",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 1817,
											"end": 1936,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1975,
											"end": 1976,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2000,
											"end": 2064,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "86"
										},
										{
											"begin": 2056,
											"end": 2063,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2047,
											"end": 2053,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2036,
											"end": 2045,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 2032,
											"end": 2054,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2000,
											"end": 2064,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "66"
										},
										{
											"begin": 2000,
											"end": 2064,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2000,
											"end": 2064,
											"name": "tag",
											"source": 1,
											"value": "86"
										},
										{
											"begin": 2000,
											"end": 2064,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1990,
											"end": 2064,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1990,
											"end": 2064,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1946,
											"end": 2074,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1730,
											"end": 2081,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1730,
											"end": 2081,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1730,
											"end": 2081,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1730,
											"end": 2081,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1730,
											"end": 2081,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 2087,
											"end": 2205,
											"name": "tag",
											"source": 1,
											"value": "87"
										},
										{
											"begin": 2087,
											"end": 2205,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2174,
											"end": 2198,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "89"
										},
										{
											"begin": 2192,
											"end": 2197,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2174,
											"end": 2198,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "90"
										},
										{
											"begin": 2174,
											"end": 2198,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2174,
											"end": 2198,
											"name": "tag",
											"source": 1,
											"value": "89"
										},
										{
											"begin": 2174,
											"end": 2198,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2172,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2162,
											"end": 2199,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2087,
											"end": 2205,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2087,
											"end": 2205,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2087,
											"end": 2205,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 2211,
											"end": 2329,
											"name": "tag",
											"source": 1,
											"value": "91"
										},
										{
											"begin": 2211,
											"end": 2329,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2298,
											"end": 2322,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "93"
										},
										{
											"begin": 2316,
											"end": 2321,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2298,
											"end": 2322,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "94"
										},
										{
											"begin": 2298,
											"end": 2322,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2298,
											"end": 2322,
											"name": "tag",
											"source": 1,
											"value": "93"
										},
										{
											"begin": 2298,
											"end": 2322,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2293,
											"end": 2296,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2286,
											"end": 2323,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2211,
											"end": 2329,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2211,
											"end": 2329,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2211,
											"end": 2329,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 2335,
											"end": 2557,
											"name": "tag",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 2335,
											"end": 2557,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2428,
											"end": 2432,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2466,
											"end": 2468,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2455,
											"end": 2464,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2451,
											"end": 2469,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2443,
											"end": 2469,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2443,
											"end": 2469,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2479,
											"end": 2550,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "96"
										},
										{
											"begin": 2547,
											"end": 2548,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2536,
											"end": 2545,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2532,
											"end": 2549,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2523,
											"end": 2529,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2479,
											"end": 2550,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "87"
										},
										{
											"begin": 2479,
											"end": 2550,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2479,
											"end": 2550,
											"name": "tag",
											"source": 1,
											"value": "96"
										},
										{
											"begin": 2479,
											"end": 2550,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2335,
											"end": 2557,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2335,
											"end": 2557,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2335,
											"end": 2557,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2335,
											"end": 2557,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2335,
											"end": 2557,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 2563,
											"end": 2785,
											"name": "tag",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 2563,
											"end": 2785,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2656,
											"end": 2660,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2694,
											"end": 2696,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2683,
											"end": 2692,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2679,
											"end": 2697,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2671,
											"end": 2697,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2671,
											"end": 2697,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2707,
											"end": 2778,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "98"
										},
										{
											"begin": 2775,
											"end": 2776,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2764,
											"end": 2773,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2760,
											"end": 2777,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2751,
											"end": 2757,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2707,
											"end": 2778,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "91"
										},
										{
											"begin": 2707,
											"end": 2778,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2707,
											"end": 2778,
											"name": "tag",
											"source": 1,
											"value": "98"
										},
										{
											"begin": 2707,
											"end": 2778,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2563,
											"end": 2785,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2563,
											"end": 2785,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2563,
											"end": 2785,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2563,
											"end": 2785,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2563,
											"end": 2785,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 2872,
											"end": 2968,
											"name": "tag",
											"source": 1,
											"value": "90"
										},
										{
											"begin": 2872,
											"end": 2968,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2909,
											"end": 2916,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2938,
											"end": 2962,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "102"
										},
										{
											"begin": 2956,
											"end": 2961,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2938,
											"end": 2962,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "103"
										},
										{
											"begin": 2938,
											"end": 2962,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2938,
											"end": 2962,
											"name": "tag",
											"source": 1,
											"value": "102"
										},
										{
											"begin": 2938,
											"end": 2962,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2927,
											"end": 2962,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2927,
											"end": 2962,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2872,
											"end": 2968,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2872,
											"end": 2968,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2872,
											"end": 2968,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2872,
											"end": 2968,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 2974,
											"end": 3083,
											"name": "tag",
											"source": 1,
											"value": "104"
										},
										{
											"begin": 2974,
											"end": 3083,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3024,
											"end": 3031,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3053,
											"end": 3077,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "106"
										},
										{
											"begin": 3071,
											"end": 3076,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3053,
											"end": 3077,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "90"
										},
										{
											"begin": 3053,
											"end": 3077,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3053,
											"end": 3077,
											"name": "tag",
											"source": 1,
											"value": "106"
										},
										{
											"begin": 3053,
											"end": 3077,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3042,
											"end": 3077,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3042,
											"end": 3077,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2974,
											"end": 3083,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2974,
											"end": 3083,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2974,
											"end": 3083,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2974,
											"end": 3083,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 3089,
											"end": 3199,
											"name": "tag",
											"source": 1,
											"value": "107"
										},
										{
											"begin": 3089,
											"end": 3199,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3140,
											"end": 3147,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3169,
											"end": 3193,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "109"
										},
										{
											"begin": 3187,
											"end": 3192,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3169,
											"end": 3193,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "90"
										},
										{
											"begin": 3169,
											"end": 3193,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3169,
											"end": 3193,
											"name": "tag",
											"source": 1,
											"value": "109"
										},
										{
											"begin": 3169,
											"end": 3193,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3158,
											"end": 3193,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3158,
											"end": 3193,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3089,
											"end": 3199,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3089,
											"end": 3199,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3089,
											"end": 3199,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3089,
											"end": 3199,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 3205,
											"end": 3331,
											"name": "tag",
											"source": 1,
											"value": "103"
										},
										{
											"begin": 3205,
											"end": 3331,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3242,
											"end": 3249,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3282,
											"end": 3324,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3275,
											"end": 3280,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3271,
											"end": 3325,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3260,
											"end": 3325,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3260,
											"end": 3325,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3205,
											"end": 3331,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3205,
											"end": 3331,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3205,
											"end": 3331,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3205,
											"end": 3331,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 3337,
											"end": 3414,
											"name": "tag",
											"source": 1,
											"value": "94"
										},
										{
											"begin": 3337,
											"end": 3414,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3374,
											"end": 3381,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3403,
											"end": 3408,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3392,
											"end": 3408,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3392,
											"end": 3408,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3337,
											"end": 3414,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3337,
											"end": 3414,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3337,
											"end": 3414,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3337,
											"end": 3414,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 3543,
											"end": 3660,
											"name": "tag",
											"source": 1,
											"value": "73"
										},
										{
											"begin": 3543,
											"end": 3660,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3652,
											"end": 3653,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3649,
											"end": 3650,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3642,
											"end": 3654,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 3666,
											"end": 3788,
											"name": "tag",
											"source": 1,
											"value": "57"
										},
										{
											"begin": 3666,
											"end": 3788,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3739,
											"end": 3763,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "116"
										},
										{
											"begin": 3757,
											"end": 3762,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3739,
											"end": 3763,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "90"
										},
										{
											"begin": 3739,
											"end": 3763,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3739,
											"end": 3763,
											"name": "tag",
											"source": 1,
											"value": "116"
										},
										{
											"begin": 3739,
											"end": 3763,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3732,
											"end": 3737,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3729,
											"end": 3764,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 3719,
											"end": 3782,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "117"
										},
										{
											"begin": 3719,
											"end": 3782,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3778,
											"end": 3779,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3775,
											"end": 3776,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3768,
											"end": 3780,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 3719,
											"end": 3782,
											"name": "tag",
											"source": 1,
											"value": "117"
										},
										{
											"begin": 3719,
											"end": 3782,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3666,
											"end": 3788,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3666,
											"end": 3788,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 3794,
											"end": 3942,
											"name": "tag",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 3794,
											"end": 3942,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3880,
											"end": 3917,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "119"
										},
										{
											"begin": 3911,
											"end": 3916,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3880,
											"end": 3917,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "104"
										},
										{
											"begin": 3880,
											"end": 3917,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3880,
											"end": 3917,
											"name": "tag",
											"source": 1,
											"value": "119"
										},
										{
											"begin": 3880,
											"end": 3917,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3873,
											"end": 3878,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3870,
											"end": 3918,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 3860,
											"end": 3936,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "120"
										},
										{
											"begin": 3860,
											"end": 3936,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3932,
											"end": 3933,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3929,
											"end": 3930,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3922,
											"end": 3934,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 3860,
											"end": 3936,
											"name": "tag",
											"source": 1,
											"value": "120"
										},
										{
											"begin": 3860,
											"end": 3936,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3794,
											"end": 3942,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3794,
											"end": 3942,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 3948,
											"end": 4098,
											"name": "tag",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 3948,
											"end": 4098,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4035,
											"end": 4073,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "122"
										},
										{
											"begin": 4067,
											"end": 4072,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4035,
											"end": 4073,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "107"
										},
										{
											"begin": 4035,
											"end": 4073,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4035,
											"end": 4073,
											"name": "tag",
											"source": 1,
											"value": "122"
										},
										{
											"begin": 4035,
											"end": 4073,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4028,
											"end": 4033,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4025,
											"end": 4074,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 4015,
											"end": 4092,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "123"
										},
										{
											"begin": 4015,
											"end": 4092,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4088,
											"end": 4089,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4085,
											"end": 4086,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4078,
											"end": 4090,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 4015,
											"end": 4092,
											"name": "tag",
											"source": 1,
											"value": "123"
										},
										{
											"begin": 4015,
											"end": 4092,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3948,
											"end": 4098,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3948,
											"end": 4098,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 4104,
											"end": 4226,
											"name": "tag",
											"source": 1,
											"value": "69"
										},
										{
											"begin": 4104,
											"end": 4226,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4177,
											"end": 4201,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "125"
										},
										{
											"begin": 4195,
											"end": 4200,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4177,
											"end": 4201,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "94"
										},
										{
											"begin": 4177,
											"end": 4201,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4177,
											"end": 4201,
											"name": "tag",
											"source": 1,
											"value": "125"
										},
										{
											"begin": 4177,
											"end": 4201,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4170,
											"end": 4175,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4167,
											"end": 4202,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 4157,
											"end": 4220,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "126"
										},
										{
											"begin": 4157,
											"end": 4220,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4216,
											"end": 4217,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4213,
											"end": 4214,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4206,
											"end": 4218,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 4157,
											"end": 4220,
											"name": "tag",
											"source": 1,
											"value": "126"
										},
										{
											"begin": 4157,
											"end": 4220,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4104,
											"end": 4226,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4104,
											"end": 4226,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"BUSD()": "484f4ea9",
							"WBNB()": "8dd95002",
							"price(address)": "aea91078",
							"token0(address)": "76bf39a3",
							"token1(address)": "37823795",
							"totalSupply(address)": "e4dc2aa4"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"BUSD\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"WBNB\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract Router\",\"name\":\"routerAddress\",\"type\":\"address\"}],\"name\":\"price\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"lpAddress\",\"type\":\"address\"}],\"name\":\"token0\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"lpAddress\",\"type\":\"address\"}],\"name\":\"token1\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"lpAddress\",\"type\":\"address\"}],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/LpPrice.sol\":\"LpUtils\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/LpPrice.sol\":{\"keccak256\":\"0xe95ac64f439c5c658dd0380be19d3c39b0eff9f0dbd08b4565c26b371253635b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3e48f763e9ee0ee9a1eaaf2496d2c45e43d6759e28ca68953bd7e310c035d27c\",\"dweb:/ipfs/QmVbyM8CeQfpVngU2wgHQf4ZSxJfskSxtyy9qGikBYodma\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 333,
								"contract": "contracts/LpPrice.sol:LpUtils",
								"label": "WBNB",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 336,
								"contract": "contracts/LpPrice.sol:LpUtils",
								"label": "BUSD",
								"offset": 0,
								"slot": "1",
								"type": "t_address"
							},
							{
								"astId": 339,
								"contract": "contracts/LpPrice.sol:LpUtils",
								"label": "amount",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"Router": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								},
								{
									"internalType": "address[2]",
									"name": "path",
									"type": "address[2]"
								}
							],
							"name": "getAmountsOut",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"getAmountsOut(uint256,address[2])": "bd5f68b0"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"address[2]\",\"name\":\"path\",\"type\":\"address[2]\"}],\"name\":\"getAmountsOut\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/LpPrice.sol\":\"Router\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/LpPrice.sol\":{\"keccak256\":\"0xe95ac64f439c5c658dd0380be19d3c39b0eff9f0dbd08b4565c26b371253635b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3e48f763e9ee0ee9a1eaaf2496d2c45e43d6759e28ca68953bd7e310c035d27c\",\"dweb:/ipfs/QmVbyM8CeQfpVngU2wgHQf4ZSxJfskSxtyy9qGikBYodma\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"contracts/LpPrice.sol": {
				"ast": {
					"absolutePath": "contracts/LpPrice.sol",
					"exportedSymbols": {
						"Address": [
							317
						],
						"IERC20": [
							25
						],
						"LpUtils": [
							388
						],
						"Router": [
							330
						]
					},
					"id": 389,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 25,
							"linearizedBaseContracts": [
								25
							],
							"name": "IERC20",
							"nameLocation": "70:6:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 2,
										"nodeType": "StructuredDocumentation",
										"src": "84:68:0",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 7,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "167:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "178:2:0"
									},
									"returnParameters": {
										"id": 6,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 7,
												"src": "204:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "204:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "203:9:0"
									},
									"scope": 25,
									"src": "158:55:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "0dfe1681",
									"id": 12,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "token0",
									"nameLocation": "230:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 8,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "236:2:0"
									},
									"returnParameters": {
										"id": 11,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 10,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 12,
												"src": "262:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 9,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "262:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "261:9:0"
									},
									"scope": 25,
									"src": "221:50:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "d21220a7",
									"id": 17,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "token1",
									"nameLocation": "288:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 13,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "294:2:0"
									},
									"returnParameters": {
										"id": 16,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 15,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 17,
												"src": "320:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 14,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "320:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "319:9:0"
									},
									"scope": 25,
									"src": "279:50:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "70a08231",
									"id": 24,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "346:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 20,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 19,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "364:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "356:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 18,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "356:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "355:17:0"
									},
									"returnParameters": {
										"id": 23,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 22,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "396:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 21,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "396:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "395:9:0"
									},
									"scope": 25,
									"src": "337:68:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 389,
							"src": "60:348:0",
							"usedErrors": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"fullyImplemented": true,
							"id": 317,
							"linearizedBaseContracts": [
								317
							],
							"name": "Address",
							"nameLocation": "420:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 39,
										"nodeType": "Block",
										"src": "1486:260:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 37,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 33,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 28,
																"src": "1715:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 34,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "1715:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 35,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "1715:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 36,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1737:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1715:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 32,
												"id": 38,
												"nodeType": "Return",
												"src": "1708:30:0"
											}
										]
									},
									"documentation": {
										"id": 26,
										"nodeType": "StructuredDocumentation",
										"src": "435:979:0",
										"text": " @dev Returns true if `account` is a contract.\n [IMPORTANT]\n ====\n It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract.\n Among others, `isContract` will return false for the following\n types of addresses:\n  - an externally-owned account\n  - a contract in construction\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n ====\n [IMPORTANT]\n ====\n You shouldn't rely on `isContract` to protect against flash loan attacks!\n Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n constructor.\n ===="
									},
									"id": 40,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isContract",
									"nameLocation": "1429:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 28,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1448:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 40,
												"src": "1440:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 27,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1440:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1439:17:0"
									},
									"returnParameters": {
										"id": 32,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 31,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 40,
												"src": "1480:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 30,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1480:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1479:6:0"
									},
									"scope": 317,
									"src": "1420:326:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 73,
										"nodeType": "Block",
										"src": "2752:246:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 55,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 51,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "2779:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$317",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$317",
																				"typeString": "library Address"
																			}
																		],
																		"id": 50,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2771:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 49,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2771:7:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 52,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2771:13:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 53,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "2771:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 54,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 45,
																"src": "2796:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2771:31:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e6365",
															"id": 56,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2804:31:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															},
															"value": "Address: insufficient balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															}
														],
														"id": 48,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2763:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 57,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2763:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 58,
												"nodeType": "ExpressionStatement",
												"src": "2763:73:0"
											},
											{
												"assignments": [
													60,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 60,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "2855:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 73,
														"src": "2850:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 59,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "2850:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 67,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 65,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2898:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"id": 61,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 43,
																"src": "2868:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 62,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "2868:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 64,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 63,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 45,
																"src": "2890:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "2868:29:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 66,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2868:33:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2849:52:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 69,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 60,
															"src": "2920:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564",
															"id": 70,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2929:60:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															},
															"value": "Address: unable to send value, recipient may have reverted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															}
														],
														"id": 68,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2912:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 71,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2912:78:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 72,
												"nodeType": "ExpressionStatement",
												"src": "2912:78:0"
											}
										]
									},
									"documentation": {
										"id": 41,
										"nodeType": "StructuredDocumentation",
										"src": "1754:921:0",
										"text": " @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."
									},
									"id": 74,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendValue",
									"nameLocation": "2690:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 46,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 43,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "2716:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 74,
												"src": "2700:25:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 42,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2700:15:0",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 45,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2735:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 74,
												"src": "2727:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 44,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2727:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2699:43:0"
									},
									"returnParameters": {
										"id": 47,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2752:0:0"
									},
									"scope": 317,
									"src": "2681:317:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 90,
										"nodeType": "Block",
										"src": "3849:86:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 85,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 77,
															"src": "3880:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 86,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 79,
															"src": "3888:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 87,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3894:32:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															},
															"value": "Address: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															}
														],
														"id": 84,
														"name": "functionCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															91,
															111
														],
														"referencedDeclaration": 111,
														"src": "3867:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 88,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3867:60:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 83,
												"id": 89,
												"nodeType": "Return",
												"src": "3860:67:0"
											}
										]
									},
									"documentation": {
										"id": 75,
										"nodeType": "StructuredDocumentation",
										"src": "3006:748:0",
										"text": " @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason, it is bubbled up by this\n function (like regular Solidity function calls).\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert.\n _Available since v3.1._"
									},
									"id": 91,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "3769:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 80,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 77,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3790:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 91,
												"src": "3782:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 76,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3782:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 79,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3811:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 91,
												"src": "3798:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 78,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3798:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3781:35:0"
									},
									"returnParameters": {
										"id": 83,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 82,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 91,
												"src": "3835:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 81,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3835:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3834:14:0"
									},
									"scope": 317,
									"src": "3760:175:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 110,
										"nodeType": "Block",
										"src": "4316:78:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 104,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 94,
															"src": "4356:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 105,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 96,
															"src": "4364:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 106,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4370:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"id": 107,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 98,
															"src": "4373:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 103,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															131,
															181
														],
														"referencedDeclaration": 181,
														"src": "4334:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 108,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4334:52:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 102,
												"id": 109,
												"nodeType": "Return",
												"src": "4327:59:0"
											}
										]
									},
									"documentation": {
										"id": 92,
										"nodeType": "StructuredDocumentation",
										"src": "3943:216:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 111,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "4174:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 99,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 94,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4205:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 111,
												"src": "4197:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 93,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4197:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 96,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4235:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 111,
												"src": "4222:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 95,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4222:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 98,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "4264:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 111,
												"src": "4250:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 97,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "4250:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4186:97:0"
									},
									"returnParameters": {
										"id": 102,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 101,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 111,
												"src": "4302:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 100,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4302:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4301:14:0"
									},
									"scope": 317,
									"src": "4165:229:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 130,
										"nodeType": "Block",
										"src": "4916:113:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 124,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 114,
															"src": "4956:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 125,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 116,
															"src": "4964:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 126,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 118,
															"src": "4970:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564",
															"id": 127,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4977:43:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															},
															"value": "Address: low-level call with value failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															}
														],
														"id": 123,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															131,
															181
														],
														"referencedDeclaration": 181,
														"src": "4934:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 128,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4934:87:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 122,
												"id": 129,
												"nodeType": "Return",
												"src": "4927:94:0"
											}
										]
									},
									"documentation": {
										"id": 112,
										"nodeType": "StructuredDocumentation",
										"src": "4402:361:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`.\n _Available since v3.1._"
									},
									"id": 131,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "4778:21:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 119,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 114,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4818:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 131,
												"src": "4810:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 113,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4810:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 116,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4848:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 131,
												"src": "4835:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 115,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4835:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 118,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4871:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 131,
												"src": "4863:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 117,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4863:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4799:84:0"
									},
									"returnParameters": {
										"id": 122,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 121,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 131,
												"src": "4902:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 120,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4902:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4901:14:0"
									},
									"scope": 317,
									"src": "4769:260:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 180,
										"nodeType": "Block",
										"src": "5469:326:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 152,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 148,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "5496:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$317",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$317",
																				"typeString": "library Address"
																			}
																		],
																		"id": 147,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "5488:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 146,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "5488:7:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 149,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5488:13:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 150,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "5488:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 151,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 138,
																"src": "5513:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5488:30:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c",
															"id": 153,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5520:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															},
															"value": "Address: insufficient balance for call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															}
														],
														"id": 145,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5480:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 154,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5480:81:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 155,
												"nodeType": "ExpressionStatement",
												"src": "5480:81:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 158,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 134,
																	"src": "5591:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 157,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 40,
																"src": "5580:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 159,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5580:18:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 160,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5600:31:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																"typeString": "literal_string \"Address: call to non-contract\""
															},
															"value": "Address: call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																"typeString": "literal_string \"Address: call to non-contract\""
															}
														],
														"id": 156,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5572:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 161,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5572:60:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 162,
												"nodeType": "ExpressionStatement",
												"src": "5572:60:0"
											},
											{
												"assignments": [
													164,
													166
												],
												"declarations": [
													{
														"constant": false,
														"id": 164,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "5651:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 180,
														"src": "5646:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 163,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "5646:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 166,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "5673:10:0",
														"nodeType": "VariableDeclaration",
														"scope": 180,
														"src": "5660:23:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 165,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "5660:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 173,
												"initialValue": {
													"arguments": [
														{
															"id": 171,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 136,
															"src": "5713:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 167,
																"name": "target",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 134,
																"src": "5687:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 168,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "5687:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 170,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 169,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 138,
																"src": "5706:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "5687:25:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 172,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5687:31:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5645:73:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 175,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 164,
															"src": "5753:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 176,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 166,
															"src": "5762:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 177,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 140,
															"src": "5774:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 174,
														"name": "verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 316,
														"src": "5736:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 178,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5736:51:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 144,
												"id": 179,
												"nodeType": "Return",
												"src": "5729:58:0"
											}
										]
									},
									"documentation": {
										"id": 132,
										"nodeType": "StructuredDocumentation",
										"src": "5037:242:0",
										"text": " @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n with `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 181,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "5294:21:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 141,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 134,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "5334:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 181,
												"src": "5326:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 133,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5326:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 136,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5364:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 181,
												"src": "5351:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 135,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5351:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 138,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5387:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 181,
												"src": "5379:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 137,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5379:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 140,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5417:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 181,
												"src": "5403:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 139,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5403:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5315:121:0"
									},
									"returnParameters": {
										"id": 144,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 143,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 181,
												"src": "5455:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 142,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5455:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5454:14:0"
									},
									"scope": 317,
									"src": "5285:510:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 197,
										"nodeType": "Block",
										"src": "6080:99:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 192,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 184,
															"src": "6117:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 193,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 186,
															"src": "6125:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c207374617469632063616c6c206661696c6564",
															"id": 194,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6131:39:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															},
															"value": "Address: low-level static call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															}
														],
														"id": 191,
														"name": "functionStaticCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															198,
															233
														],
														"referencedDeclaration": 233,
														"src": "6098:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 195,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6098:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 190,
												"id": 196,
												"nodeType": "Return",
												"src": "6091:80:0"
											}
										]
									},
									"documentation": {
										"id": 182,
										"nodeType": "StructuredDocumentation",
										"src": "5803:171:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 198,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "5989:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 187,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 184,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6016:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 198,
												"src": "6008:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 183,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6008:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 186,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6037:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 198,
												"src": "6024:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 185,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6024:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6007:35:0"
									},
									"returnParameters": {
										"id": 190,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 189,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 198,
												"src": "6066:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 188,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6066:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6065:14:0"
									},
									"scope": 317,
									"src": "5980:199:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 232,
										"nodeType": "Block",
										"src": "6533:233:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 212,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 201,
																	"src": "6563:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 211,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 40,
																"src": "6552:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 213,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6552:18:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a207374617469632063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 214,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6572:38:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c79cc78e4f16ce3933a42b84c73868f93bb4a59c031a0acf576679de98c608a9",
																"typeString": "literal_string \"Address: static call to non-contract\""
															},
															"value": "Address: static call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c79cc78e4f16ce3933a42b84c73868f93bb4a59c031a0acf576679de98c608a9",
																"typeString": "literal_string \"Address: static call to non-contract\""
															}
														],
														"id": 210,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6544:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 215,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6544:67:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 216,
												"nodeType": "ExpressionStatement",
												"src": "6544:67:0"
											},
											{
												"assignments": [
													218,
													220
												],
												"declarations": [
													{
														"constant": false,
														"id": 218,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "6630:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 232,
														"src": "6625:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 217,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "6625:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 220,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "6652:10:0",
														"nodeType": "VariableDeclaration",
														"scope": 232,
														"src": "6639:23:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 219,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "6639:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 225,
												"initialValue": {
													"arguments": [
														{
															"id": 223,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 203,
															"src": "6684:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 221,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 201,
															"src": "6666:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 222,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "staticcall",
														"nodeType": "MemberAccess",
														"src": "6666:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) view returns (bool,bytes memory)"
														}
													},
													"id": 224,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6666:23:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6624:65:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 227,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 218,
															"src": "6724:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 228,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 220,
															"src": "6733:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 229,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 205,
															"src": "6745:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 226,
														"name": "verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 316,
														"src": "6707:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 230,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6707:51:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 209,
												"id": 231,
												"nodeType": "Return",
												"src": "6700:58:0"
											}
										]
									},
									"documentation": {
										"id": 199,
										"nodeType": "StructuredDocumentation",
										"src": "6187:178:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 233,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "6380:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 206,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 201,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6417:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 233,
												"src": "6409:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 200,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6409:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 203,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6447:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 233,
												"src": "6434:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 202,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6434:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 205,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "6476:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 233,
												"src": "6462:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 204,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6462:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6398:97:0"
									},
									"returnParameters": {
										"id": 209,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 208,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 233,
												"src": "6519:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 207,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6519:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6518:14:0"
									},
									"scope": 317,
									"src": "6371:395:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 249,
										"nodeType": "Block",
										"src": "7050:103:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 244,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 236,
															"src": "7089:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 245,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 238,
															"src": "7097:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564",
															"id": 246,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7103:41:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															},
															"value": "Address: low-level delegate call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															}
														],
														"id": 243,
														"name": "functionDelegateCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															250,
															285
														],
														"referencedDeclaration": 285,
														"src": "7068:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 247,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7068:77:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 242,
												"id": 248,
												"nodeType": "Return",
												"src": "7061:84:0"
											}
										]
									},
									"documentation": {
										"id": 234,
										"nodeType": "StructuredDocumentation",
										"src": "6774:173:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 250,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "6962:20:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 239,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 236,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6991:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 250,
												"src": "6983:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 235,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6983:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 238,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "7012:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 250,
												"src": "6999:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 237,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6999:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6982:35:0"
									},
									"returnParameters": {
										"id": 242,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 241,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 250,
												"src": "7036:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 240,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7036:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7035:14:0"
									},
									"scope": 317,
									"src": "6953:200:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 284,
										"nodeType": "Block",
										"src": "7506:237:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 264,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 253,
																	"src": "7536:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 263,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 40,
																"src": "7525:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 265,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7525:18:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 266,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7545:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520",
																"typeString": "literal_string \"Address: delegate call to non-contract\""
															},
															"value": "Address: delegate call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520",
																"typeString": "literal_string \"Address: delegate call to non-contract\""
															}
														],
														"id": 262,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7517:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 267,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7517:69:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 268,
												"nodeType": "ExpressionStatement",
												"src": "7517:69:0"
											},
											{
												"assignments": [
													270,
													272
												],
												"declarations": [
													{
														"constant": false,
														"id": 270,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "7605:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 284,
														"src": "7600:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 269,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "7600:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 272,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "7627:10:0",
														"nodeType": "VariableDeclaration",
														"scope": 284,
														"src": "7614:23:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 271,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "7614:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 277,
												"initialValue": {
													"arguments": [
														{
															"id": 275,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 255,
															"src": "7661:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 273,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 253,
															"src": "7641:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 274,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "delegatecall",
														"nodeType": "MemberAccess",
														"src": "7641:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) returns (bool,bytes memory)"
														}
													},
													"id": 276,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7641:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7599:67:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 279,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 270,
															"src": "7701:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 280,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 272,
															"src": "7710:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 281,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 257,
															"src": "7722:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 278,
														"name": "verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 316,
														"src": "7684:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 282,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7684:51:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 261,
												"id": 283,
												"nodeType": "Return",
												"src": "7677:58:0"
											}
										]
									},
									"documentation": {
										"id": 251,
										"nodeType": "StructuredDocumentation",
										"src": "7161:180:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 285,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "7356:20:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 258,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 253,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "7395:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 285,
												"src": "7387:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 252,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7387:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 255,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "7425:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 285,
												"src": "7412:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 254,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7412:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 257,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "7454:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 285,
												"src": "7440:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 256,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7440:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7376:97:0"
									},
									"returnParameters": {
										"id": 261,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 260,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 285,
												"src": "7492:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 259,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7492:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7491:14:0"
									},
									"scope": 317,
									"src": "7347:396:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 315,
										"nodeType": "Block",
										"src": "8135:548:0",
										"statements": [
											{
												"condition": {
													"id": 297,
													"name": "success",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 288,
													"src": "8150:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 313,
													"nodeType": "Block",
													"src": "8209:467:0",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 304,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 301,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 290,
																		"src": "8295:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 302,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "8295:17:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 303,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8315:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "8295:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 311,
																"nodeType": "Block",
																"src": "8610:55:0",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 308,
																					"name": "errorMessage",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 292,
																					"src": "8636:12:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				],
																				"id": 307,
																				"name": "revert",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					4294967277,
																					4294967277
																				],
																				"referencedDeclaration": 4294967277,
																				"src": "8629:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																					"typeString": "function (string memory) pure"
																				}
																			},
																			"id": 309,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "8629:20:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 310,
																		"nodeType": "ExpressionStatement",
																		"src": "8629:20:0"
																	}
																]
															},
															"id": 312,
															"nodeType": "IfStatement",
															"src": "8291:374:0",
															"trueBody": {
																"id": 306,
																"nodeType": "Block",
																"src": "8318:286:0",
																"statements": [
																	{
																		"AST": {
																			"nodeType": "YulBlock",
																			"src": "8441:148:0",
																			"statements": [
																				{
																					"nodeType": "YulVariableDeclaration",
																					"src": "8464:40:0",
																					"value": {
																						"arguments": [
																							{
																								"name": "returndata",
																								"nodeType": "YulIdentifier",
																								"src": "8493:10:0"
																							}
																						],
																						"functionName": {
																							"name": "mload",
																							"nodeType": "YulIdentifier",
																							"src": "8487:5:0"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "8487:17:0"
																					},
																					"variables": [
																						{
																							"name": "returndata_size",
																							"nodeType": "YulTypedName",
																							"src": "8468:15:0",
																							"type": ""
																						}
																					]
																				},
																				{
																					"expression": {
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "8537:2:0",
																										"type": "",
																										"value": "32"
																									},
																									{
																										"name": "returndata",
																										"nodeType": "YulIdentifier",
																										"src": "8541:10:0"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "8533:3:0"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "8533:19:0"
																							},
																							{
																								"name": "returndata_size",
																								"nodeType": "YulIdentifier",
																								"src": "8554:15:0"
																							}
																						],
																						"functionName": {
																							"name": "revert",
																							"nodeType": "YulIdentifier",
																							"src": "8526:6:0"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "8526:44:0"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "8526:44:0"
																				}
																			]
																		},
																		"evmVersion": "london",
																		"externalReferences": [
																			{
																				"declaration": 290,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "8493:10:0",
																				"valueSize": 1
																			},
																			{
																				"declaration": 290,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "8541:10:0",
																				"valueSize": 1
																			}
																		],
																		"id": 305,
																		"nodeType": "InlineAssembly",
																		"src": "8432:157:0"
																	}
																]
															}
														}
													]
												},
												"id": 314,
												"nodeType": "IfStatement",
												"src": "8146:530:0",
												"trueBody": {
													"id": 300,
													"nodeType": "Block",
													"src": "8159:44:0",
													"statements": [
														{
															"expression": {
																"id": 298,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 290,
																"src": "8181:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 296,
															"id": 299,
															"nodeType": "Return",
															"src": "8174:17:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 286,
										"nodeType": "StructuredDocumentation",
										"src": "7751:214:0",
										"text": " @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\n revert reason using the provided one.\n _Available since v4.3._"
									},
									"id": 316,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResult",
									"nameLocation": "7980:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 293,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 288,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "8012:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 316,
												"src": "8007:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 287,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "8007:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 290,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "8043:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 316,
												"src": "8030:23:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 289,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8030:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 292,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "8078:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 316,
												"src": "8064:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 291,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "8064:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7996:101:0"
									},
									"returnParameters": {
										"id": 296,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 295,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 316,
												"src": "8121:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 294,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8121:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8120:14:0"
									},
									"scope": 317,
									"src": "7971:712:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 389,
							"src": "412:8274:0",
							"usedErrors": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 330,
							"linearizedBaseContracts": [
								330
							],
							"name": "Router",
							"nameLocation": "8700:6:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "bd5f68b0",
									"id": 329,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getAmountsOut",
									"nameLocation": "8723:13:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 324,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 319,
												"mutability": "mutable",
												"name": "amountIn",
												"nameLocation": "8742:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 329,
												"src": "8737:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 318,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "8737:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 323,
												"mutability": "mutable",
												"name": "path",
												"nameLocation": "8770:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 329,
												"src": "8752:22:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$2_memory_ptr",
													"typeString": "address[2]"
												},
												"typeName": {
													"baseType": {
														"id": 320,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "8752:7:0",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 322,
													"length": {
														"hexValue": "32",
														"id": 321,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "8760:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_2_by_1",
															"typeString": "int_const 2"
														},
														"value": "2"
													},
													"nodeType": "ArrayTypeName",
													"src": "8752:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$2_storage_ptr",
														"typeString": "address[2]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8736:39:0"
									},
									"returnParameters": {
										"id": 328,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 327,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "8831:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 329,
												"src": "8817:21:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 325,
														"name": "uint",
														"nodeType": "ElementaryTypeName",
														"src": "8817:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 326,
													"nodeType": "ArrayTypeName",
													"src": "8817:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8816:23:0"
									},
									"scope": 330,
									"src": "8714:126:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 389,
							"src": "8690:153:0",
							"usedErrors": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 388,
							"linearizedBaseContracts": [
								388
							],
							"name": "LpUtils",
							"nameLocation": "8856:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "8dd95002",
									"id": 333,
									"mutability": "mutable",
									"name": "WBNB",
									"nameLocation": "8886:4:0",
									"nodeType": "VariableDeclaration",
									"scope": 388,
									"src": "8871:64:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 331,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "8871:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": {
										"hexValue": "307861653133643938396461433266306445624666343630614331313261383337433839424161376364",
										"id": 332,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "8893:42:0",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										},
										"value": "0xae13d989daC2f0dEbFf460aC112a837C89BAa7cd"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "484f4ea9",
									"id": 336,
									"mutability": "mutable",
									"name": "BUSD",
									"nameLocation": "8957:4:0",
									"nodeType": "VariableDeclaration",
									"scope": 388,
									"src": "8942:64:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 334,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "8942:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": {
										"hexValue": "307837383836374262456546343466323332366246384444643139343161343433393338324546324137",
										"id": 335,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "8964:42:0",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										},
										"value": "0x78867BbEeF44f2326bF8DDd1941a4439382EF2A7"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 339,
									"mutability": "mutable",
									"name": "amount",
									"nameLocation": "9021:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 388,
									"src": "9013:36:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 337,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "9013:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31303030303030303030303030303030303030",
										"id": 338,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "9030:19:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1000000000000000000_by_1",
											"typeString": "int_const 1000000000000000000"
										},
										"value": "1000000000000000000"
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 351,
										"nodeType": "Block",
										"src": "9451:49:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 347,
															"name": "lpAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 342,
															"src": "9469:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$25",
																"typeString": "contract IERC20"
															}
														},
														"id": 348,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "totalSupply",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 7,
														"src": "9469:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
															"typeString": "function () view external returns (uint256)"
														}
													},
													"id": 349,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9469:23:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 346,
												"id": 350,
												"nodeType": "Return",
												"src": "9462:30:0"
											}
										]
									},
									"functionSelector": "e4dc2aa4",
									"id": 352,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "9391:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 343,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 342,
												"mutability": "mutable",
												"name": "lpAddress",
												"nameLocation": "9410:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 352,
												"src": "9403:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$25",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 341,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 340,
														"name": "IERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 25,
														"src": "9403:6:0"
													},
													"referencedDeclaration": 25,
													"src": "9403:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$25",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9402:18:0"
									},
									"returnParameters": {
										"id": 346,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 345,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 352,
												"src": "9443:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 344,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9443:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9442:9:0"
									},
									"scope": 388,
									"src": "9382:118:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 364,
										"nodeType": "Block",
										"src": "9572:44:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 360,
															"name": "lpAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 355,
															"src": "9590:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$25",
																"typeString": "contract IERC20"
															}
														},
														"id": 361,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "token0",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 12,
														"src": "9590:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
															"typeString": "function () view external returns (address)"
														}
													},
													"id": 362,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9590:18:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 359,
												"id": 363,
												"nodeType": "Return",
												"src": "9583:25:0"
											}
										]
									},
									"functionSelector": "76bf39a3",
									"id": 365,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "token0",
									"nameLocation": "9517:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 356,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 355,
												"mutability": "mutable",
												"name": "lpAddress",
												"nameLocation": "9531:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 365,
												"src": "9524:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$25",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 354,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 353,
														"name": "IERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 25,
														"src": "9524:6:0"
													},
													"referencedDeclaration": 25,
													"src": "9524:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$25",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9523:18:0"
									},
									"returnParameters": {
										"id": 359,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 358,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 365,
												"src": "9564:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 357,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9564:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9563:9:0"
									},
									"scope": 388,
									"src": "9508:108:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 377,
										"nodeType": "Block",
										"src": "9688:44:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 373,
															"name": "lpAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 368,
															"src": "9706:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$25",
																"typeString": "contract IERC20"
															}
														},
														"id": 374,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "token1",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 17,
														"src": "9706:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
															"typeString": "function () view external returns (address)"
														}
													},
													"id": 375,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9706:18:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 372,
												"id": 376,
												"nodeType": "Return",
												"src": "9699:25:0"
											}
										]
									},
									"functionSelector": "37823795",
									"id": 378,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "token1",
									"nameLocation": "9633:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 369,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 368,
												"mutability": "mutable",
												"name": "lpAddress",
												"nameLocation": "9647:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 378,
												"src": "9640:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$25",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 367,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 366,
														"name": "IERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 25,
														"src": "9640:6:0"
													},
													"referencedDeclaration": 25,
													"src": "9640:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$25",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9639:18:0"
									},
									"returnParameters": {
										"id": 372,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 371,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 378,
												"src": "9680:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 370,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9680:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9679:9:0"
									},
									"scope": 388,
									"src": "9624:108:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 386,
										"nodeType": "Block",
										"src": "9807:18:0",
										"statements": []
									},
									"functionSelector": "aea91078",
									"id": 387,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "price",
									"nameLocation": "9749:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 382,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 381,
												"mutability": "mutable",
												"name": "routerAddress",
												"nameLocation": "9762:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 387,
												"src": "9755:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_Router_$330",
													"typeString": "contract Router"
												},
												"typeName": {
													"id": 380,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 379,
														"name": "Router",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 330,
														"src": "9755:6:0"
													},
													"referencedDeclaration": 330,
													"src": "9755:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_Router_$330",
														"typeString": "contract Router"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9754:22:0"
									},
									"returnParameters": {
										"id": 385,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 384,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 387,
												"src": "9799:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 383,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9799:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9798:9:0"
									},
									"scope": 388,
									"src": "9740:85:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 389,
							"src": "8847:981:0",
							"usedErrors": []
						}
					],
					"src": "33:9795:0"
				},
				"id": 0
			}
		}
	}
}
{
	"id": "25a972dc6687f960f164b71697ee6e32",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.7",
	"solcLongVersion": "0.8.7+commit.e28d00a7",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/LpPrice.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.0;\r\n\r\ninterface IERC20 {\r\n    /**\r\n     * @dev Returns the amount of tokens in existence.\r\n     */\r\n    function totalSupply() external view returns (uint256);\r\n\r\n    function token0() external view returns (address);\r\n\r\n    function token1() external view returns (address);\r\n\r\n    function balanceOf(address account) external view returns (uint256);\r\n}\r\n\r\nlibrary Address {\r\n    /**\r\n     * @dev Returns true if `account` is a contract.\r\n     *\r\n     * [IMPORTANT]\r\n     * ====\r\n     * It is unsafe to assume that an address for which this function returns\r\n     * false is an externally-owned account (EOA) and not a contract.\r\n     *\r\n     * Among others, `isContract` will return false for the following\r\n     * types of addresses:\r\n     *\r\n     *  - an externally-owned account\r\n     *  - a contract in construction\r\n     *  - an address where a contract will be created\r\n     *  - an address where a contract lived, but was destroyed\r\n     * ====\r\n     *\r\n     * [IMPORTANT]\r\n     * ====\r\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\r\n     *\r\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\r\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\r\n     * constructor.\r\n     * ====\r\n     */\r\n    function isContract(address account) internal view returns (bool) {\r\n        // This method relies on extcodesize/address.code.length, which returns 0\r\n        // for contracts in construction, since the code is only stored at the end\r\n        // of the constructor execution.\r\n\r\n        return account.code.length > 0;\r\n    }\r\n\r\n    /**\r\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\r\n     * `recipient`, forwarding all available gas and reverting on errors.\r\n     *\r\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\r\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\r\n     * imposed by `transfer`, making them unable to receive funds via\r\n     * `transfer`. {sendValue} removes this limitation.\r\n     *\r\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\r\n     *\r\n     * IMPORTANT: because control is transferred to `recipient`, care must be\r\n     * taken to not create reentrancy vulnerabilities. Consider using\r\n     * {ReentrancyGuard} or the\r\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\r\n     */\r\n    function sendValue(address payable recipient, uint256 amount) internal {\r\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\r\n\r\n        (bool success, ) = recipient.call{value: amount}(\"\");\r\n        require(success, \"Address: unable to send value, recipient may have reverted\");\r\n    }\r\n\r\n    /**\r\n     * @dev Performs a Solidity function call using a low level `call`. A\r\n     * plain `call` is an unsafe replacement for a function call: use this\r\n     * function instead.\r\n     *\r\n     * If `target` reverts with a revert reason, it is bubbled up by this\r\n     * function (like regular Solidity function calls).\r\n     *\r\n     * Returns the raw returned data. To convert to the expected return value,\r\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `target` must be a contract.\r\n     * - calling `target` with `data` must not revert.\r\n     *\r\n     * _Available since v3.1._\r\n     */\r\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\r\n        return functionCall(target, data, \"Address: low-level call failed\");\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\r\n     * `errorMessage` as a fallback revert reason when `target` reverts.\r\n     *\r\n     * _Available since v3.1._\r\n     */\r\n    function functionCall(\r\n        address target,\r\n        bytes memory data,\r\n        string memory errorMessage\r\n    ) internal returns (bytes memory) {\r\n        return functionCallWithValue(target, data, 0, errorMessage);\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\r\n     * but also transferring `value` wei to `target`.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - the calling contract must have an ETH balance of at least `value`.\r\n     * - the called Solidity function must be `payable`.\r\n     *\r\n     * _Available since v3.1._\r\n     */\r\n    function functionCallWithValue(\r\n        address target,\r\n        bytes memory data,\r\n        uint256 value\r\n    ) internal returns (bytes memory) {\r\n        return functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\r\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\r\n     *\r\n     * _Available since v3.1._\r\n     */\r\n    function functionCallWithValue(\r\n        address target,\r\n        bytes memory data,\r\n        uint256 value,\r\n        string memory errorMessage\r\n    ) internal returns (bytes memory) {\r\n        require(address(this).balance >= value, \"Address: insufficient balance for call\");\r\n        require(isContract(target), \"Address: call to non-contract\");\r\n\r\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\r\n        return verifyCallResult(success, returndata, errorMessage);\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\r\n     * but performing a static call.\r\n     *\r\n     * _Available since v3.3._\r\n     */\r\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\r\n        return functionStaticCall(target, data, \"Address: low-level static call failed\");\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\r\n     * but performing a static call.\r\n     *\r\n     * _Available since v3.3._\r\n     */\r\n    function functionStaticCall(\r\n        address target,\r\n        bytes memory data,\r\n        string memory errorMessage\r\n    ) internal view returns (bytes memory) {\r\n        require(isContract(target), \"Address: static call to non-contract\");\r\n\r\n        (bool success, bytes memory returndata) = target.staticcall(data);\r\n        return verifyCallResult(success, returndata, errorMessage);\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\r\n     * but performing a delegate call.\r\n     *\r\n     * _Available since v3.4._\r\n     */\r\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\r\n        return functionDelegateCall(target, data, \"Address: low-level delegate call failed\");\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\r\n     * but performing a delegate call.\r\n     *\r\n     * _Available since v3.4._\r\n     */\r\n    function functionDelegateCall(\r\n        address target,\r\n        bytes memory data,\r\n        string memory errorMessage\r\n    ) internal returns (bytes memory) {\r\n        require(isContract(target), \"Address: delegate call to non-contract\");\r\n\r\n        (bool success, bytes memory returndata) = target.delegatecall(data);\r\n        return verifyCallResult(success, returndata, errorMessage);\r\n    }\r\n\r\n    /**\r\n     * @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\r\n     * revert reason using the provided one.\r\n     *\r\n     * _Available since v4.3._\r\n     */\r\n    function verifyCallResult(\r\n        bool success,\r\n        bytes memory returndata,\r\n        string memory errorMessage\r\n    ) internal pure returns (bytes memory) {\r\n        if (success) {\r\n            return returndata;\r\n        } else {\r\n            // Look for revert reason and bubble it up if present\r\n            if (returndata.length > 0) {\r\n                // The easiest way to bubble the revert reason is using memory via assembly\r\n\r\n                assembly {\r\n                    let returndata_size := mload(returndata)\r\n                    revert(add(32, returndata), returndata_size)\r\n                }\r\n            } else {\r\n                revert(errorMessage);\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\ninterface Router {\r\n    function getAmountsOut(uint amountIn, address[2] memory path) external\r\n        view\r\n        returns (uint[] memory amounts);\r\n}\r\n\r\ncontract LpUtils {\r\n    uint256 amount = 1000000000000000000;\r\n\r\n    function CalcLpPrice(IERC20 lpAddress, Router routerAddress, address busd) external view returns(uint256){\r\n        uint256 totalSupply = lpAddress.totalSupply();\r\n\r\n        uint256[] memory price0 = routerAddress.getAmountsOut(amount,[busd, busd]);\r\n\r\n        return totalSupply;\r\n    }\r\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"contracts/LpPrice.sol": {
				"Address": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/LpPrice.sol\":412:8686  library Address {\r... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/LpPrice.sol\":412:8686  library Address {\r... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220b1c0cf3942e5f45ce96674e917100b27a9b30a5463c7e09ec3d9ee967ce2b4c664736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220b1c0cf3942e5f45ce96674e917100b27a9b30a5463c7e09ec3d9ee967ce2b4c664736f6c63430008070033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB1 0xC0 0xCF CODECOPY TIMESTAMP 0xE5 DELEGATECALL 0x5C 0xE9 PUSH7 0x74E917100B27A9 0xB3 EXP SLOAD PUSH4 0xC7E09EC3 0xD9 0xEE SWAP7 PUSH29 0xE2B4C664736F6C63430008070033000000000000000000000000000000 ",
							"sourceMap": "412:8274:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220b1c0cf3942e5f45ce96674e917100b27a9b30a5463c7e09ec3d9ee967ce2b4c664736f6c63430008070033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB1 0xC0 0xCF CODECOPY TIMESTAMP 0xE5 DELEGATECALL 0x5C 0xE9 PUSH7 0x74E917100B27A9 0xB3 EXP SLOAD PUSH4 0xC7E09EC3 0xD9 0xEE SWAP7 PUSH29 0xE2B4C664736F6C63430008070033000000000000000000000000000000 ",
							"sourceMap": "412:8274:0:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"functionCall(address,bytes memory)": "infinite",
								"functionCall(address,bytes memory,string memory)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256,string memory)": "infinite",
								"functionDelegateCall(address,bytes memory)": "infinite",
								"functionDelegateCall(address,bytes memory,string memory)": "infinite",
								"functionStaticCall(address,bytes memory)": "infinite",
								"functionStaticCall(address,bytes memory,string memory)": "infinite",
								"isContract(address)": "infinite",
								"sendValue(address payable,uint256)": "infinite",
								"verifyCallResult(bool,bytes memory,string memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 412,
									"end": 8686,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 412,
									"end": 8686,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 412,
									"end": 8686,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 412,
									"end": 8686,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 412,
									"end": 8686,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 412,
									"end": 8686,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 412,
									"end": 8686,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 412,
									"end": 8686,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 412,
									"end": 8686,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 412,
									"end": 8686,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 412,
									"end": 8686,
									"name": "BYTE",
									"source": 0
								},
								{
									"begin": 412,
									"end": 8686,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 412,
									"end": 8686,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 412,
									"end": 8686,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 412,
									"end": 8686,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 412,
									"end": 8686,
									"name": "PUSH",
									"source": 0,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 412,
									"end": 8686,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 412,
									"end": 8686,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 412,
									"end": 8686,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 412,
									"end": 8686,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 412,
									"end": 8686,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 412,
									"end": 8686,
									"name": "PUSH",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 412,
									"end": 8686,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 412,
									"end": 8686,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 412,
									"end": 8686,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 412,
									"end": 8686,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 412,
									"end": 8686,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 412,
									"end": 8686,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 412,
									"end": 8686,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 412,
									"end": 8686,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 412,
									"end": 8686,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 412,
									"end": 8686,
									"name": "MSTORE8",
									"source": 0
								},
								{
									"begin": 412,
									"end": 8686,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 412,
									"end": 8686,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 412,
									"end": 8686,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220b1c0cf3942e5f45ce96674e917100b27a9b30a5463c7e09ec3d9ee967ce2b4c664736f6c63430008070033",
									".code": [
										{
											"begin": 412,
											"end": 8686,
											"name": "PUSHDEPLOYADDRESS",
											"source": 0
										},
										{
											"begin": 412,
											"end": 8686,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 412,
											"end": 8686,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 412,
											"end": 8686,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 412,
											"end": 8686,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 412,
											"end": 8686,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 412,
											"end": 8686,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 412,
											"end": 8686,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 412,
											"end": 8686,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/LpPrice.sol\":\"Address\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/LpPrice.sol\":{\"keccak256\":\"0x4bf0bfbe6cdb485458653d5cda6ebfdccc479c20d9c92aeb7ec83765a8ba97b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://165174297ae7608246e2b9e6fc90ac643c5681e1a26dcc094bb403b8d80e11c3\",\"dweb:/ipfs/QmXceoPGDR2khQN3tk8676d6w3eworpLGrg16FvSgJfwk5\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "token0",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "token1",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"balanceOf(address)": "70a08231",
							"token0()": "0dfe1681",
							"token1()": "d21220a7",
							"totalSupply()": "18160ddd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token0\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token1\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/LpPrice.sol\":\"IERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/LpPrice.sol\":{\"keccak256\":\"0x4bf0bfbe6cdb485458653d5cda6ebfdccc479c20d9c92aeb7ec83765a8ba97b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://165174297ae7608246e2b9e6fc90ac643c5681e1a26dcc094bb403b8d80e11c3\",\"dweb:/ipfs/QmXceoPGDR2khQN3tk8676d6w3eworpLGrg16FvSgJfwk5\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"LpUtils": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "contract IERC20",
									"name": "lpAddress",
									"type": "address"
								},
								{
									"internalType": "contract Router",
									"name": "routerAddress",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "busd",
									"type": "address"
								}
							],
							"name": "CalcLpPrice",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/LpPrice.sol\":8847:9206  contract LpUtils {\r... */\n  mstore(0x40, 0x80)\n    /* \"contracts/LpPrice.sol\":8888:8907  1000000000000000000 */\n  0x0de0b6b3a7640000\n    /* \"contracts/LpPrice.sol\":8871:8907  uint256 amount = 1000000000000000000 */\n  0x00\n  sstore\n    /* \"contracts/LpPrice.sol\":8847:9206  contract LpUtils {\r... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/LpPrice.sol\":8847:9206  contract LpUtils {\r... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x20ae0b6d\n      eq\n      tag_3\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/LpPrice.sol\":8916:9203  function CalcLpPrice(IERC20 lpAddress, Router routerAddress, address busd) external view returns(uint256){\r... */\n    tag_3:\n      tag_4\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_5\n      swap2\n      swap1\n      tag_6\n      jump\t// in\n    tag_5:\n      tag_7\n      jump\t// in\n    tag_4:\n      mload(0x40)\n      tag_8\n      swap2\n      swap1\n      tag_9\n      jump\t// in\n    tag_8:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n    tag_7:\n        /* \"contracts/LpPrice.sol\":9013:9020  uint256 */\n      0x00\n        /* \"contracts/LpPrice.sol\":9032:9051  uint256 totalSupply */\n      dup1\n        /* \"contracts/LpPrice.sol\":9054:9063  lpAddress */\n      dup5\n        /* \"contracts/LpPrice.sol\":9054:9075  lpAddress.totalSupply */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x18160ddd\n        /* \"contracts/LpPrice.sol\":9054:9077  lpAddress.totalSupply() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_11\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_11:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_13\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_13:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_14\n      swap2\n      swap1\n      tag_15\n      jump\t// in\n    tag_14:\n        /* \"contracts/LpPrice.sol\":9032:9077  uint256 totalSupply = lpAddress.totalSupply() */\n      swap1\n      pop\n        /* \"contracts/LpPrice.sol\":9090:9113  uint256[] memory price0 */\n      0x00\n        /* \"contracts/LpPrice.sol\":9116:9129  routerAddress */\n      dup5\n        /* \"contracts/LpPrice.sol\":9116:9143  routerAddress.getAmountsOut */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xbd5f68b0\n        /* \"contracts/LpPrice.sol\":9144:9150  amount */\n      sload(0x00)\n        /* \"contracts/LpPrice.sol\":9116:9164  routerAddress.getAmountsOut(amount,[busd, busd]) */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n        /* \"contracts/LpPrice.sol\":9152:9156  busd */\n      dup9\n        /* \"contracts/LpPrice.sol\":9116:9164  routerAddress.getAmountsOut(amount,[busd, busd]) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/LpPrice.sol\":9158:9162  busd */\n      dup9\n        /* \"contracts/LpPrice.sol\":9116:9164  routerAddress.getAmountsOut(amount,[busd, busd]) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      pop\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_16\n      swap3\n      swap2\n      swap1\n      tag_17\n      jump\t// in\n    tag_16:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_18\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_18:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_20\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_20:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      0x00\n      dup3\n      returndatacopy\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_21\n      swap2\n      swap1\n      tag_22\n      jump\t// in\n    tag_21:\n        /* \"contracts/LpPrice.sol\":9090:9164  uint256[] memory price0 = routerAddress.getAmountsOut(amount,[busd, busd]) */\n      swap1\n      pop\n        /* \"contracts/LpPrice.sol\":9184:9195  totalSupply */\n      dup2\n        /* \"contracts/LpPrice.sol\":9177:9195  return totalSupply */\n      swap3\n      pop\n      pop\n      pop\n        /* \"contracts/LpPrice.sol\":8916:9203  function CalcLpPrice(IERC20 lpAddress, Router routerAddress, address busd) external view returns(uint256){\r... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24:768   */\n    tag_24:\n        /* \"#utility.yul\":131:136   */\n      0x00\n        /* \"#utility.yul\":156:237   */\n      tag_26\n        /* \"#utility.yul\":172:236   */\n      tag_27\n        /* \"#utility.yul\":229:235   */\n      dup5\n        /* \"#utility.yul\":172:236   */\n      tag_28\n      jump\t// in\n    tag_27:\n        /* \"#utility.yul\":156:237   */\n      tag_29\n      jump\t// in\n    tag_26:\n        /* \"#utility.yul\":147:237   */\n      swap1\n      pop\n        /* \"#utility.yul\":257:262   */\n      dup1\n        /* \"#utility.yul\":286:292   */\n      dup4\n        /* \"#utility.yul\":279:284   */\n      dup3\n        /* \"#utility.yul\":272:293   */\n      mstore\n        /* \"#utility.yul\":320:324   */\n      0x20\n        /* \"#utility.yul\":313:318   */\n      dup3\n        /* \"#utility.yul\":309:325   */\n      add\n        /* \"#utility.yul\":302:325   */\n      swap1\n      pop\n        /* \"#utility.yul\":346:352   */\n      dup3\n        /* \"#utility.yul\":396:399   */\n      dup6\n        /* \"#utility.yul\":388:392   */\n      0x20\n        /* \"#utility.yul\":380:386   */\n      dup7\n        /* \"#utility.yul\":376:393   */\n      mul\n        /* \"#utility.yul\":371:374   */\n      dup3\n        /* \"#utility.yul\":367:394   */\n      add\n        /* \"#utility.yul\":364:400   */\n      gt\n        /* \"#utility.yul\":361:504   */\n      iszero\n      tag_30\n      jumpi\n        /* \"#utility.yul\":415:494   */\n      tag_31\n      tag_32\n      jump\t// in\n    tag_31:\n        /* \"#utility.yul\":361:504   */\n    tag_30:\n        /* \"#utility.yul\":528:529   */\n      0x00\n        /* \"#utility.yul\":513:762   */\n    tag_33:\n        /* \"#utility.yul\":538:544   */\n      dup6\n        /* \"#utility.yul\":535:536   */\n      dup2\n        /* \"#utility.yul\":532:545   */\n      lt\n        /* \"#utility.yul\":513:762   */\n      iszero\n      tag_35\n      jumpi\n        /* \"#utility.yul\":606:609   */\n      dup2\n        /* \"#utility.yul\":635:683   */\n      tag_36\n        /* \"#utility.yul\":679:682   */\n      dup9\n        /* \"#utility.yul\":667:677   */\n      dup3\n        /* \"#utility.yul\":635:683   */\n      tag_37\n      jump\t// in\n    tag_36:\n        /* \"#utility.yul\":630:633   */\n      dup5\n        /* \"#utility.yul\":623:684   */\n      mstore\n        /* \"#utility.yul\":713:717   */\n      0x20\n        /* \"#utility.yul\":708:711   */\n      dup5\n        /* \"#utility.yul\":704:718   */\n      add\n        /* \"#utility.yul\":697:718   */\n      swap4\n      pop\n        /* \"#utility.yul\":747:751   */\n      0x20\n        /* \"#utility.yul\":742:745   */\n      dup4\n        /* \"#utility.yul\":738:752   */\n      add\n        /* \"#utility.yul\":731:752   */\n      swap3\n      pop\n        /* \"#utility.yul\":573:762   */\n      pop\n        /* \"#utility.yul\":560:561   */\n      0x01\n        /* \"#utility.yul\":557:558   */\n      dup2\n        /* \"#utility.yul\":553:562   */\n      add\n        /* \"#utility.yul\":548:562   */\n      swap1\n      pop\n        /* \"#utility.yul\":513:762   */\n      jump(tag_33)\n    tag_35:\n        /* \"#utility.yul\":517:531   */\n      pop\n        /* \"#utility.yul\":137:768   */\n      pop\n      pop\n        /* \"#utility.yul\":24:768   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":774:913   */\n    tag_38:\n        /* \"#utility.yul\":820:825   */\n      0x00\n        /* \"#utility.yul\":858:864   */\n      dup2\n        /* \"#utility.yul\":845:865   */\n      calldataload\n        /* \"#utility.yul\":836:865   */\n      swap1\n      pop\n        /* \"#utility.yul\":874:907   */\n      tag_40\n        /* \"#utility.yul\":901:906   */\n      dup2\n        /* \"#utility.yul\":874:907   */\n      tag_41\n      jump\t// in\n    tag_40:\n        /* \"#utility.yul\":774:913   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":936:1321   */\n    tag_42:\n        /* \"#utility.yul\":1018:1023   */\n      0x00\n        /* \"#utility.yul\":1067:1070   */\n      dup3\n        /* \"#utility.yul\":1060:1064   */\n      0x1f\n        /* \"#utility.yul\":1052:1058   */\n      dup4\n        /* \"#utility.yul\":1048:1065   */\n      add\n        /* \"#utility.yul\":1044:1071   */\n      slt\n        /* \"#utility.yul\":1034:1156   */\n      tag_44\n      jumpi\n        /* \"#utility.yul\":1075:1154   */\n      tag_45\n      tag_46\n      jump\t// in\n    tag_45:\n        /* \"#utility.yul\":1034:1156   */\n    tag_44:\n        /* \"#utility.yul\":1185:1191   */\n      dup2\n        /* \"#utility.yul\":1179:1192   */\n      mload\n        /* \"#utility.yul\":1210:1315   */\n      tag_47\n        /* \"#utility.yul\":1311:1314   */\n      dup5\n        /* \"#utility.yul\":1303:1309   */\n      dup3\n        /* \"#utility.yul\":1296:1300   */\n      0x20\n        /* \"#utility.yul\":1288:1294   */\n      dup7\n        /* \"#utility.yul\":1284:1301   */\n      add\n        /* \"#utility.yul\":1210:1315   */\n      tag_24\n      jump\t// in\n    tag_47:\n        /* \"#utility.yul\":1201:1315   */\n      swap2\n      pop\n        /* \"#utility.yul\":1024:1321   */\n      pop\n        /* \"#utility.yul\":936:1321   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1327:1492   */\n    tag_48:\n        /* \"#utility.yul\":1386:1391   */\n      0x00\n        /* \"#utility.yul\":1424:1430   */\n      dup2\n        /* \"#utility.yul\":1411:1431   */\n      calldataload\n        /* \"#utility.yul\":1402:1431   */\n      swap1\n      pop\n        /* \"#utility.yul\":1440:1486   */\n      tag_50\n        /* \"#utility.yul\":1480:1485   */\n      dup2\n        /* \"#utility.yul\":1440:1486   */\n      tag_51\n      jump\t// in\n    tag_50:\n        /* \"#utility.yul\":1327:1492   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1498:1665   */\n    tag_52:\n        /* \"#utility.yul\":1558:1563   */\n      0x00\n        /* \"#utility.yul\":1596:1602   */\n      dup2\n        /* \"#utility.yul\":1583:1603   */\n      calldataload\n        /* \"#utility.yul\":1574:1603   */\n      swap1\n      pop\n        /* \"#utility.yul\":1612:1659   */\n      tag_54\n        /* \"#utility.yul\":1653:1658   */\n      dup2\n        /* \"#utility.yul\":1612:1659   */\n      tag_55\n      jump\t// in\n    tag_54:\n        /* \"#utility.yul\":1498:1665   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1671:1814   */\n    tag_37:\n        /* \"#utility.yul\":1728:1733   */\n      0x00\n        /* \"#utility.yul\":1759:1765   */\n      dup2\n        /* \"#utility.yul\":1753:1766   */\n      mload\n        /* \"#utility.yul\":1744:1766   */\n      swap1\n      pop\n        /* \"#utility.yul\":1775:1808   */\n      tag_57\n        /* \"#utility.yul\":1802:1807   */\n      dup2\n        /* \"#utility.yul\":1775:1808   */\n      tag_58\n      jump\t// in\n    tag_57:\n        /* \"#utility.yul\":1671:1814   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1820:2374   */\n    tag_22:\n        /* \"#utility.yul\":1915:1921   */\n      0x00\n        /* \"#utility.yul\":1964:1966   */\n      0x20\n        /* \"#utility.yul\":1952:1961   */\n      dup3\n        /* \"#utility.yul\":1943:1950   */\n      dup5\n        /* \"#utility.yul\":1939:1962   */\n      sub\n        /* \"#utility.yul\":1935:1967   */\n      slt\n        /* \"#utility.yul\":1932:2051   */\n      iszero\n      tag_60\n      jumpi\n        /* \"#utility.yul\":1970:2049   */\n      tag_61\n      tag_62\n      jump\t// in\n    tag_61:\n        /* \"#utility.yul\":1932:2051   */\n    tag_60:\n        /* \"#utility.yul\":2111:2112   */\n      0x00\n        /* \"#utility.yul\":2100:2109   */\n      dup3\n        /* \"#utility.yul\":2096:2113   */\n      add\n        /* \"#utility.yul\":2090:2114   */\n      mload\n        /* \"#utility.yul\":2141:2159   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":2133:2139   */\n      dup2\n        /* \"#utility.yul\":2130:2160   */\n      gt\n        /* \"#utility.yul\":2127:2244   */\n      iszero\n      tag_63\n      jumpi\n        /* \"#utility.yul\":2163:2242   */\n      tag_64\n      tag_65\n      jump\t// in\n    tag_64:\n        /* \"#utility.yul\":2127:2244   */\n    tag_63:\n        /* \"#utility.yul\":2268:2357   */\n      tag_66\n        /* \"#utility.yul\":2349:2356   */\n      dup5\n        /* \"#utility.yul\":2340:2346   */\n      dup3\n        /* \"#utility.yul\":2329:2338   */\n      dup6\n        /* \"#utility.yul\":2325:2347   */\n      add\n        /* \"#utility.yul\":2268:2357   */\n      tag_42\n      jump\t// in\n    tag_66:\n        /* \"#utility.yul\":2258:2357   */\n      swap2\n      pop\n        /* \"#utility.yul\":2061:2367   */\n      pop\n        /* \"#utility.yul\":1820:2374   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2380:3053   */\n    tag_6:\n        /* \"#utility.yul\":2484:2490   */\n      0x00\n        /* \"#utility.yul\":2492:2498   */\n      dup1\n        /* \"#utility.yul\":2500:2506   */\n      0x00\n        /* \"#utility.yul\":2549:2551   */\n      0x60\n        /* \"#utility.yul\":2537:2546   */\n      dup5\n        /* \"#utility.yul\":2528:2535   */\n      dup7\n        /* \"#utility.yul\":2524:2547   */\n      sub\n        /* \"#utility.yul\":2520:2552   */\n      slt\n        /* \"#utility.yul\":2517:2636   */\n      iszero\n      tag_68\n      jumpi\n        /* \"#utility.yul\":2555:2634   */\n      tag_69\n      tag_62\n      jump\t// in\n    tag_69:\n        /* \"#utility.yul\":2517:2636   */\n    tag_68:\n        /* \"#utility.yul\":2675:2676   */\n      0x00\n        /* \"#utility.yul\":2700:2766   */\n      tag_70\n        /* \"#utility.yul\":2758:2765   */\n      dup7\n        /* \"#utility.yul\":2749:2755   */\n      dup3\n        /* \"#utility.yul\":2738:2747   */\n      dup8\n        /* \"#utility.yul\":2734:2756   */\n      add\n        /* \"#utility.yul\":2700:2766   */\n      tag_48\n      jump\t// in\n    tag_70:\n        /* \"#utility.yul\":2690:2766   */\n      swap4\n      pop\n        /* \"#utility.yul\":2646:2776   */\n      pop\n        /* \"#utility.yul\":2815:2817   */\n      0x20\n        /* \"#utility.yul\":2841:2908   */\n      tag_71\n        /* \"#utility.yul\":2900:2907   */\n      dup7\n        /* \"#utility.yul\":2891:2897   */\n      dup3\n        /* \"#utility.yul\":2880:2889   */\n      dup8\n        /* \"#utility.yul\":2876:2898   */\n      add\n        /* \"#utility.yul\":2841:2908   */\n      tag_52\n      jump\t// in\n    tag_71:\n        /* \"#utility.yul\":2831:2908   */\n      swap3\n      pop\n        /* \"#utility.yul\":2786:2918   */\n      pop\n        /* \"#utility.yul\":2957:2959   */\n      0x40\n        /* \"#utility.yul\":2983:3036   */\n      tag_72\n        /* \"#utility.yul\":3028:3035   */\n      dup7\n        /* \"#utility.yul\":3019:3025   */\n      dup3\n        /* \"#utility.yul\":3008:3017   */\n      dup8\n        /* \"#utility.yul\":3004:3026   */\n      add\n        /* \"#utility.yul\":2983:3036   */\n      tag_38\n      jump\t// in\n    tag_72:\n        /* \"#utility.yul\":2973:3036   */\n      swap2\n      pop\n        /* \"#utility.yul\":2928:3046   */\n      pop\n        /* \"#utility.yul\":2380:3053   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":3059:3410   */\n    tag_15:\n        /* \"#utility.yul\":3129:3135   */\n      0x00\n        /* \"#utility.yul\":3178:3180   */\n      0x20\n        /* \"#utility.yul\":3166:3175   */\n      dup3\n        /* \"#utility.yul\":3157:3164   */\n      dup5\n        /* \"#utility.yul\":3153:3176   */\n      sub\n        /* \"#utility.yul\":3149:3181   */\n      slt\n        /* \"#utility.yul\":3146:3265   */\n      iszero\n      tag_74\n      jumpi\n        /* \"#utility.yul\":3184:3263   */\n      tag_75\n      tag_62\n      jump\t// in\n    tag_75:\n        /* \"#utility.yul\":3146:3265   */\n    tag_74:\n        /* \"#utility.yul\":3304:3305   */\n      0x00\n        /* \"#utility.yul\":3329:3393   */\n      tag_76\n        /* \"#utility.yul\":3385:3392   */\n      dup5\n        /* \"#utility.yul\":3376:3382   */\n      dup3\n        /* \"#utility.yul\":3365:3374   */\n      dup6\n        /* \"#utility.yul\":3361:3383   */\n      add\n        /* \"#utility.yul\":3329:3393   */\n      tag_37\n      jump\t// in\n    tag_76:\n        /* \"#utility.yul\":3319:3393   */\n      swap2\n      pop\n        /* \"#utility.yul\":3275:3403   */\n      pop\n        /* \"#utility.yul\":3059:3410   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3416:3595   */\n    tag_77:\n        /* \"#utility.yul\":3485:3495   */\n      0x00\n        /* \"#utility.yul\":3506:3552   */\n      tag_79\n        /* \"#utility.yul\":3548:3551   */\n      dup4\n        /* \"#utility.yul\":3540:3546   */\n      dup4\n        /* \"#utility.yul\":3506:3552   */\n      tag_80\n      jump\t// in\n    tag_79:\n        /* \"#utility.yul\":3584:3588   */\n      0x20\n        /* \"#utility.yul\":3579:3582   */\n      dup4\n        /* \"#utility.yul\":3575:3589   */\n      add\n        /* \"#utility.yul\":3561:3589   */\n      swap1\n      pop\n        /* \"#utility.yul\":3416:3595   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3601:3709   */\n    tag_80:\n        /* \"#utility.yul\":3678:3702   */\n      tag_82\n        /* \"#utility.yul\":3696:3701   */\n      dup2\n        /* \"#utility.yul\":3678:3702   */\n      tag_83\n      jump\t// in\n    tag_82:\n        /* \"#utility.yul\":3673:3676   */\n      dup3\n        /* \"#utility.yul\":3666:3703   */\n      mstore\n        /* \"#utility.yul\":3601:3709   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3747:4441   */\n    tag_84:\n        /* \"#utility.yul\":3883:3935   */\n      tag_86\n        /* \"#utility.yul\":3929:3934   */\n      dup2\n        /* \"#utility.yul\":3883:3935   */\n      tag_87\n      jump\t// in\n    tag_86:\n        /* \"#utility.yul\":3951:4035   */\n      tag_88\n        /* \"#utility.yul\":4028:4034   */\n      dup2\n        /* \"#utility.yul\":4023:4026   */\n      dup5\n        /* \"#utility.yul\":3951:4035   */\n      tag_89\n      jump\t// in\n    tag_88:\n        /* \"#utility.yul\":3944:4035   */\n      swap3\n      pop\n        /* \"#utility.yul\":4059:4113   */\n      tag_90\n        /* \"#utility.yul\":4107:4112   */\n      dup3\n        /* \"#utility.yul\":4059:4113   */\n      tag_91\n      jump\t// in\n    tag_90:\n        /* \"#utility.yul\":4136:4143   */\n      dup1\n        /* \"#utility.yul\":4167:4168   */\n      0x00\n        /* \"#utility.yul\":4152:4434   */\n    tag_92:\n        /* \"#utility.yul\":4177:4183   */\n      dup4\n        /* \"#utility.yul\":4174:4175   */\n      dup2\n        /* \"#utility.yul\":4171:4184   */\n      lt\n        /* \"#utility.yul\":4152:4434   */\n      iszero\n      tag_94\n      jumpi\n        /* \"#utility.yul\":4253:4259   */\n      dup2\n        /* \"#utility.yul\":4247:4260   */\n      mload\n        /* \"#utility.yul\":4280:4343   */\n      tag_95\n        /* \"#utility.yul\":4339:4342   */\n      dup8\n        /* \"#utility.yul\":4324:4337   */\n      dup3\n        /* \"#utility.yul\":4280:4343   */\n      tag_77\n      jump\t// in\n    tag_95:\n        /* \"#utility.yul\":4273:4343   */\n      swap7\n      pop\n        /* \"#utility.yul\":4366:4424   */\n      tag_96\n        /* \"#utility.yul\":4417:4423   */\n      dup4\n        /* \"#utility.yul\":4366:4424   */\n      tag_97\n      jump\t// in\n    tag_96:\n        /* \"#utility.yul\":4356:4424   */\n      swap3\n      pop\n        /* \"#utility.yul\":4212:4434   */\n      pop\n        /* \"#utility.yul\":4199:4200   */\n      0x01\n        /* \"#utility.yul\":4196:4197   */\n      dup2\n        /* \"#utility.yul\":4192:4201   */\n      add\n        /* \"#utility.yul\":4187:4201   */\n      swap1\n      pop\n        /* \"#utility.yul\":4152:4434   */\n      jump(tag_92)\n    tag_94:\n        /* \"#utility.yul\":4156:4170   */\n      pop\n        /* \"#utility.yul\":3859:4441   */\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":3747:4441   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4447:4565   */\n    tag_98:\n        /* \"#utility.yul\":4534:4558   */\n      tag_100\n        /* \"#utility.yul\":4552:4557   */\n      dup2\n        /* \"#utility.yul\":4534:4558   */\n      tag_101\n      jump\t// in\n    tag_100:\n        /* \"#utility.yul\":4529:4532   */\n      dup3\n        /* \"#utility.yul\":4522:4559   */\n      mstore\n        /* \"#utility.yul\":4447:4565   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4571:4793   */\n    tag_9:\n        /* \"#utility.yul\":4664:4668   */\n      0x00\n        /* \"#utility.yul\":4702:4704   */\n      0x20\n        /* \"#utility.yul\":4691:4700   */\n      dup3\n        /* \"#utility.yul\":4687:4705   */\n      add\n        /* \"#utility.yul\":4679:4705   */\n      swap1\n      pop\n        /* \"#utility.yul\":4715:4786   */\n      tag_103\n        /* \"#utility.yul\":4783:4784   */\n      0x00\n        /* \"#utility.yul\":4772:4781   */\n      dup4\n        /* \"#utility.yul\":4768:4785   */\n      add\n        /* \"#utility.yul\":4759:4765   */\n      dup5\n        /* \"#utility.yul\":4715:4786   */\n      tag_98\n      jump\t// in\n    tag_103:\n        /* \"#utility.yul\":4571:4793   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4799:5223   */\n    tag_17:\n        /* \"#utility.yul\":4966:4970   */\n      0x00\n        /* \"#utility.yul\":5004:5006   */\n      0x60\n        /* \"#utility.yul\":4993:5002   */\n      dup3\n        /* \"#utility.yul\":4989:5007   */\n      add\n        /* \"#utility.yul\":4981:5007   */\n      swap1\n      pop\n        /* \"#utility.yul\":5017:5088   */\n      tag_105\n        /* \"#utility.yul\":5085:5086   */\n      0x00\n        /* \"#utility.yul\":5074:5083   */\n      dup4\n        /* \"#utility.yul\":5070:5087   */\n      add\n        /* \"#utility.yul\":5061:5067   */\n      dup6\n        /* \"#utility.yul\":5017:5088   */\n      tag_98\n      jump\t// in\n    tag_105:\n        /* \"#utility.yul\":5098:5216   */\n      tag_106\n        /* \"#utility.yul\":5212:5214   */\n      0x20\n        /* \"#utility.yul\":5201:5210   */\n      dup4\n        /* \"#utility.yul\":5197:5215   */\n      add\n        /* \"#utility.yul\":5188:5194   */\n      dup5\n        /* \"#utility.yul\":5098:5216   */\n      tag_84\n      jump\t// in\n    tag_106:\n        /* \"#utility.yul\":4799:5223   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5229:5358   */\n    tag_29:\n        /* \"#utility.yul\":5263:5269   */\n      0x00\n        /* \"#utility.yul\":5290:5310   */\n      tag_108\n      tag_109\n      jump\t// in\n    tag_108:\n        /* \"#utility.yul\":5280:5310   */\n      swap1\n      pop\n        /* \"#utility.yul\":5319:5352   */\n      tag_110\n        /* \"#utility.yul\":5347:5351   */\n      dup3\n        /* \"#utility.yul\":5339:5345   */\n      dup3\n        /* \"#utility.yul\":5319:5352   */\n      tag_111\n      jump\t// in\n    tag_110:\n        /* \"#utility.yul\":5229:5358   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5364:5439   */\n    tag_109:\n        /* \"#utility.yul\":5397:5403   */\n      0x00\n        /* \"#utility.yul\":5430:5432   */\n      0x40\n        /* \"#utility.yul\":5424:5433   */\n      mload\n        /* \"#utility.yul\":5414:5433   */\n      swap1\n      pop\n        /* \"#utility.yul\":5364:5439   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":5445:5756   */\n    tag_28:\n        /* \"#utility.yul\":5522:5526   */\n      0x00\n        /* \"#utility.yul\":5612:5630   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":5604:5610   */\n      dup3\n        /* \"#utility.yul\":5601:5631   */\n      gt\n        /* \"#utility.yul\":5598:5654   */\n      iszero\n      tag_114\n      jumpi\n        /* \"#utility.yul\":5634:5652   */\n      tag_115\n      tag_116\n      jump\t// in\n    tag_115:\n        /* \"#utility.yul\":5598:5654   */\n    tag_114:\n        /* \"#utility.yul\":5684:5688   */\n      0x20\n        /* \"#utility.yul\":5676:5682   */\n      dup3\n        /* \"#utility.yul\":5672:5689   */\n      mul\n        /* \"#utility.yul\":5664:5689   */\n      swap1\n      pop\n        /* \"#utility.yul\":5744:5748   */\n      0x20\n        /* \"#utility.yul\":5738:5742   */\n      dup2\n        /* \"#utility.yul\":5734:5749   */\n      add\n        /* \"#utility.yul\":5726:5749   */\n      swap1\n      pop\n        /* \"#utility.yul\":5445:5756   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5762:5860   */\n    tag_91:\n        /* \"#utility.yul\":5827:5831   */\n      0x00\n        /* \"#utility.yul\":5850:5853   */\n      dup2\n        /* \"#utility.yul\":5842:5853   */\n      swap1\n      pop\n        /* \"#utility.yul\":5762:5860   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5866:5970   */\n    tag_87:\n        /* \"#utility.yul\":5931:5937   */\n      0x00\n        /* \"#utility.yul\":5959:5963   */\n      0x02\n        /* \"#utility.yul\":5949:5963   */\n      swap1\n      pop\n        /* \"#utility.yul\":5866:5970   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5976:6087   */\n    tag_97:\n        /* \"#utility.yul\":6044:6048   */\n      0x00\n        /* \"#utility.yul\":6076:6080   */\n      0x20\n        /* \"#utility.yul\":6071:6074   */\n      dup3\n        /* \"#utility.yul\":6067:6081   */\n      add\n        /* \"#utility.yul\":6059:6081   */\n      swap1\n      pop\n        /* \"#utility.yul\":5976:6087   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6093:6236   */\n    tag_89:\n        /* \"#utility.yul\":6190:6201   */\n      0x00\n        /* \"#utility.yul\":6227:6230   */\n      dup2\n        /* \"#utility.yul\":6212:6230   */\n      swap1\n      pop\n        /* \"#utility.yul\":6093:6236   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6242:6338   */\n    tag_83:\n        /* \"#utility.yul\":6279:6286   */\n      0x00\n        /* \"#utility.yul\":6308:6332   */\n      tag_122\n        /* \"#utility.yul\":6326:6331   */\n      dup3\n        /* \"#utility.yul\":6308:6332   */\n      tag_123\n      jump\t// in\n    tag_122:\n        /* \"#utility.yul\":6297:6332   */\n      swap1\n      pop\n        /* \"#utility.yul\":6242:6338   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6344:6453   */\n    tag_124:\n        /* \"#utility.yul\":6394:6401   */\n      0x00\n        /* \"#utility.yul\":6423:6447   */\n      tag_126\n        /* \"#utility.yul\":6441:6446   */\n      dup3\n        /* \"#utility.yul\":6423:6447   */\n      tag_83\n      jump\t// in\n    tag_126:\n        /* \"#utility.yul\":6412:6447   */\n      swap1\n      pop\n        /* \"#utility.yul\":6344:6453   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6459:6569   */\n    tag_127:\n        /* \"#utility.yul\":6510:6517   */\n      0x00\n        /* \"#utility.yul\":6539:6563   */\n      tag_129\n        /* \"#utility.yul\":6557:6562   */\n      dup3\n        /* \"#utility.yul\":6539:6563   */\n      tag_83\n      jump\t// in\n    tag_129:\n        /* \"#utility.yul\":6528:6563   */\n      swap1\n      pop\n        /* \"#utility.yul\":6459:6569   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6575:6701   */\n    tag_123:\n        /* \"#utility.yul\":6612:6619   */\n      0x00\n        /* \"#utility.yul\":6652:6694   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":6645:6650   */\n      dup3\n        /* \"#utility.yul\":6641:6695   */\n      and\n        /* \"#utility.yul\":6630:6695   */\n      swap1\n      pop\n        /* \"#utility.yul\":6575:6701   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6707:6784   */\n    tag_101:\n        /* \"#utility.yul\":6744:6751   */\n      0x00\n        /* \"#utility.yul\":6773:6778   */\n      dup2\n        /* \"#utility.yul\":6762:6778   */\n      swap1\n      pop\n        /* \"#utility.yul\":6707:6784   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6790:7071   */\n    tag_111:\n        /* \"#utility.yul\":6873:6900   */\n      tag_133\n        /* \"#utility.yul\":6895:6899   */\n      dup3\n        /* \"#utility.yul\":6873:6900   */\n      tag_134\n      jump\t// in\n    tag_133:\n        /* \"#utility.yul\":6865:6871   */\n      dup2\n        /* \"#utility.yul\":6861:6901   */\n      add\n        /* \"#utility.yul\":7003:7009   */\n      dup2\n        /* \"#utility.yul\":6991:7001   */\n      dup2\n        /* \"#utility.yul\":6988:7010   */\n      lt\n        /* \"#utility.yul\":6967:6985   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":6955:6965   */\n      dup3\n        /* \"#utility.yul\":6952:6986   */\n      gt\n        /* \"#utility.yul\":6949:7011   */\n      or\n        /* \"#utility.yul\":6946:7034   */\n      iszero\n      tag_135\n      jumpi\n        /* \"#utility.yul\":7014:7032   */\n      tag_136\n      tag_116\n      jump\t// in\n    tag_136:\n        /* \"#utility.yul\":6946:7034   */\n    tag_135:\n        /* \"#utility.yul\":7054:7064   */\n      dup1\n        /* \"#utility.yul\":7050:7052   */\n      0x40\n        /* \"#utility.yul\":7043:7065   */\n      mstore\n        /* \"#utility.yul\":6833:7071   */\n      pop\n        /* \"#utility.yul\":6790:7071   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7077:7257   */\n    tag_116:\n        /* \"#utility.yul\":7125:7202   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":7122:7123   */\n      0x00\n        /* \"#utility.yul\":7115:7203   */\n      mstore\n        /* \"#utility.yul\":7222:7226   */\n      0x41\n        /* \"#utility.yul\":7219:7220   */\n      0x04\n        /* \"#utility.yul\":7212:7227   */\n      mstore\n        /* \"#utility.yul\":7246:7250   */\n      0x24\n        /* \"#utility.yul\":7243:7244   */\n      0x00\n        /* \"#utility.yul\":7236:7251   */\n      revert\n        /* \"#utility.yul\":7263:7380   */\n    tag_46:\n        /* \"#utility.yul\":7372:7373   */\n      0x00\n        /* \"#utility.yul\":7369:7370   */\n      dup1\n        /* \"#utility.yul\":7362:7374   */\n      revert\n        /* \"#utility.yul\":7386:7503   */\n    tag_32:\n        /* \"#utility.yul\":7495:7496   */\n      0x00\n        /* \"#utility.yul\":7492:7493   */\n      dup1\n        /* \"#utility.yul\":7485:7497   */\n      revert\n        /* \"#utility.yul\":7509:7626   */\n    tag_65:\n        /* \"#utility.yul\":7618:7619   */\n      0x00\n        /* \"#utility.yul\":7615:7616   */\n      dup1\n        /* \"#utility.yul\":7608:7620   */\n      revert\n        /* \"#utility.yul\":7632:7749   */\n    tag_62:\n        /* \"#utility.yul\":7741:7742   */\n      0x00\n        /* \"#utility.yul\":7738:7739   */\n      dup1\n        /* \"#utility.yul\":7731:7743   */\n      revert\n        /* \"#utility.yul\":7755:7857   */\n    tag_134:\n        /* \"#utility.yul\":7796:7802   */\n      0x00\n        /* \"#utility.yul\":7847:7849   */\n      0x1f\n        /* \"#utility.yul\":7843:7850   */\n      not\n        /* \"#utility.yul\":7838:7840   */\n      0x1f\n        /* \"#utility.yul\":7831:7836   */\n      dup4\n        /* \"#utility.yul\":7827:7841   */\n      add\n        /* \"#utility.yul\":7823:7851   */\n      and\n        /* \"#utility.yul\":7813:7851   */\n      swap1\n      pop\n        /* \"#utility.yul\":7755:7857   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7863:7985   */\n    tag_41:\n        /* \"#utility.yul\":7936:7960   */\n      tag_144\n        /* \"#utility.yul\":7954:7959   */\n      dup2\n        /* \"#utility.yul\":7936:7960   */\n      tag_83\n      jump\t// in\n    tag_144:\n        /* \"#utility.yul\":7929:7934   */\n      dup2\n        /* \"#utility.yul\":7926:7961   */\n      eq\n        /* \"#utility.yul\":7916:7979   */\n      tag_145\n      jumpi\n        /* \"#utility.yul\":7975:7976   */\n      0x00\n        /* \"#utility.yul\":7972:7973   */\n      dup1\n        /* \"#utility.yul\":7965:7977   */\n      revert\n        /* \"#utility.yul\":7916:7979   */\n    tag_145:\n        /* \"#utility.yul\":7863:7985   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7991:8139   */\n    tag_51:\n        /* \"#utility.yul\":8077:8114   */\n      tag_147\n        /* \"#utility.yul\":8108:8113   */\n      dup2\n        /* \"#utility.yul\":8077:8114   */\n      tag_124\n      jump\t// in\n    tag_147:\n        /* \"#utility.yul\":8070:8075   */\n      dup2\n        /* \"#utility.yul\":8067:8115   */\n      eq\n        /* \"#utility.yul\":8057:8133   */\n      tag_148\n      jumpi\n        /* \"#utility.yul\":8129:8130   */\n      0x00\n        /* \"#utility.yul\":8126:8127   */\n      dup1\n        /* \"#utility.yul\":8119:8131   */\n      revert\n        /* \"#utility.yul\":8057:8133   */\n    tag_148:\n        /* \"#utility.yul\":7991:8139   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8145:8295   */\n    tag_55:\n        /* \"#utility.yul\":8232:8270   */\n      tag_150\n        /* \"#utility.yul\":8264:8269   */\n      dup2\n        /* \"#utility.yul\":8232:8270   */\n      tag_127\n      jump\t// in\n    tag_150:\n        /* \"#utility.yul\":8225:8230   */\n      dup2\n        /* \"#utility.yul\":8222:8271   */\n      eq\n        /* \"#utility.yul\":8212:8289   */\n      tag_151\n      jumpi\n        /* \"#utility.yul\":8285:8286   */\n      0x00\n        /* \"#utility.yul\":8282:8283   */\n      dup1\n        /* \"#utility.yul\":8275:8287   */\n      revert\n        /* \"#utility.yul\":8212:8289   */\n    tag_151:\n        /* \"#utility.yul\":8145:8295   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8301:8423   */\n    tag_58:\n        /* \"#utility.yul\":8374:8398   */\n      tag_153\n        /* \"#utility.yul\":8392:8397   */\n      dup2\n        /* \"#utility.yul\":8374:8398   */\n      tag_101\n      jump\t// in\n    tag_153:\n        /* \"#utility.yul\":8367:8372   */\n      dup2\n        /* \"#utility.yul\":8364:8399   */\n      eq\n        /* \"#utility.yul\":8354:8417   */\n      tag_154\n      jumpi\n        /* \"#utility.yul\":8413:8414   */\n      0x00\n        /* \"#utility.yul\":8410:8411   */\n      dup1\n        /* \"#utility.yul\":8403:8415   */\n      revert\n        /* \"#utility.yul\":8354:8417   */\n    tag_154:\n        /* \"#utility.yul\":8301:8423   */\n      pop\n      jump\t// out\n\n    auxdata: 0xa264697066735822122091bcc564a937ef0d5e43cea6540260ab5aa9cce950544171374f82c1b2d4347f64736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080604052670de0b6b3a764000060005534801561001c57600080fd5b506106728061002c6000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c806320ae0b6d14610030575b600080fd5b61004a6004803603810190610045919061032c565b610060565b6040516100579190610439565b60405180910390f35b6000808473ffffffffffffffffffffffffffffffffffffffff166318160ddd6040518163ffffffff1660e01b815260040160206040518083038186803b1580156100a957600080fd5b505afa1580156100bd573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906100e1919061037f565b905060008473ffffffffffffffffffffffffffffffffffffffff1663bd5f68b060005460405180604001604052808873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152506040518363ffffffff1660e01b815260040161018e929190610454565b60006040518083038186803b1580156101a657600080fd5b505afa1580156101ba573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f820116820180604052508101906101e391906102e3565b905081925050509392505050565b60006102046101ff846104a2565b61047d565b90508083825260208201905082856020860282011115610227576102266105c0565b5b60005b85811015610257578161023d88826102ce565b84526020840193506020830192505060018101905061022a565b5050509392505050565b600081359050610270816105e0565b92915050565b600082601f83011261028b5761028a6105bb565b5b815161029b8482602086016101f1565b91505092915050565b6000813590506102b3816105f7565b92915050565b6000813590506102c88161060e565b92915050565b6000815190506102dd81610625565b92915050565b6000602082840312156102f9576102f86105ca565b5b600082015167ffffffffffffffff811115610317576103166105c5565b5b61032384828501610276565b91505092915050565b600080600060608486031215610345576103446105ca565b5b6000610353868287016102a4565b9350506020610364868287016102b9565b925050604061037586828701610261565b9150509250925092565b600060208284031215610395576103946105ca565b5b60006103a3848285016102ce565b91505092915050565b60006103b883836103c4565b60208301905092915050565b6103cd816104fb565b82525050565b6103dc816104d8565b6103e681846104f0565b92506103f1826104ce565b8060005b8381101561042257815161040987826103ac565b9650610414836104e3565b9250506001810190506103f5565b505050505050565b61043381610551565b82525050565b600060208201905061044e600083018461042a565b92915050565b6000606082019050610469600083018561042a565b61047660208301846103d3565b9392505050565b6000610487610498565b9050610493828261055b565b919050565b6000604051905090565b600067ffffffffffffffff8211156104bd576104bc61058c565b5b602082029050602081019050919050565b6000819050919050565b600060029050919050565b6000602082019050919050565b600081905092915050565b600061050682610531565b9050919050565b6000610518826104fb565b9050919050565b600061052a826104fb565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b610564826105cf565b810181811067ffffffffffffffff821117156105835761058261058c565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b6105e9816104fb565b81146105f457600080fd5b50565b6106008161050d565b811461060b57600080fd5b50565b6106178161051f565b811461062257600080fd5b50565b61062e81610551565b811461063957600080fd5b5056fea264697066735822122091bcc564a937ef0d5e43cea6540260ab5aa9cce950544171374f82c1b2d4347f64736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH8 0xDE0B6B3A7640000 PUSH1 0x0 SSTORE CALLVALUE DUP1 ISZERO PUSH2 0x1C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x672 DUP1 PUSH2 0x2C PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x2B JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x20AE0B6D EQ PUSH2 0x30 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x45 SWAP2 SWAP1 PUSH2 0x32C JUMP JUMPDEST PUSH2 0x60 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x57 SWAP2 SWAP1 PUSH2 0x439 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x18160DDD PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xA9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xBD JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xE1 SWAP2 SWAP1 PUSH2 0x37F JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xBD5F68B0 PUSH1 0x0 SLOAD PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x18E SWAP3 SWAP2 SWAP1 PUSH2 0x454 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1A6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1BA JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1E3 SWAP2 SWAP1 PUSH2 0x2E3 JUMP JUMPDEST SWAP1 POP DUP2 SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x204 PUSH2 0x1FF DUP5 PUSH2 0x4A2 JUMP JUMPDEST PUSH2 0x47D JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP DUP3 DUP6 PUSH1 0x20 DUP7 MUL DUP3 ADD GT ISZERO PUSH2 0x227 JUMPI PUSH2 0x226 PUSH2 0x5C0 JUMP JUMPDEST JUMPDEST PUSH1 0x0 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0x257 JUMPI DUP2 PUSH2 0x23D DUP9 DUP3 PUSH2 0x2CE JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP PUSH1 0x20 DUP4 ADD SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x22A JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x270 DUP2 PUSH2 0x5E0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x28B JUMPI PUSH2 0x28A PUSH2 0x5BB JUMP JUMPDEST JUMPDEST DUP2 MLOAD PUSH2 0x29B DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x1F1 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2B3 DUP2 PUSH2 0x5F7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2C8 DUP2 PUSH2 0x60E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x2DD DUP2 PUSH2 0x625 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2F9 JUMPI PUSH2 0x2F8 PUSH2 0x5CA JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP3 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x317 JUMPI PUSH2 0x316 PUSH2 0x5C5 JUMP JUMPDEST JUMPDEST PUSH2 0x323 DUP5 DUP3 DUP6 ADD PUSH2 0x276 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x345 JUMPI PUSH2 0x344 PUSH2 0x5CA JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x353 DUP7 DUP3 DUP8 ADD PUSH2 0x2A4 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x364 DUP7 DUP3 DUP8 ADD PUSH2 0x2B9 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x375 DUP7 DUP3 DUP8 ADD PUSH2 0x261 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x395 JUMPI PUSH2 0x394 PUSH2 0x5CA JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3A3 DUP5 DUP3 DUP6 ADD PUSH2 0x2CE JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3B8 DUP4 DUP4 PUSH2 0x3C4 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x3CD DUP2 PUSH2 0x4FB JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x3DC DUP2 PUSH2 0x4D8 JUMP JUMPDEST PUSH2 0x3E6 DUP2 DUP5 PUSH2 0x4F0 JUMP JUMPDEST SWAP3 POP PUSH2 0x3F1 DUP3 PUSH2 0x4CE JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x422 JUMPI DUP2 MLOAD PUSH2 0x409 DUP8 DUP3 PUSH2 0x3AC JUMP JUMPDEST SWAP7 POP PUSH2 0x414 DUP4 PUSH2 0x4E3 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x3F5 JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x433 DUP2 PUSH2 0x551 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x44E PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x42A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x469 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x42A JUMP JUMPDEST PUSH2 0x476 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x3D3 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x487 PUSH2 0x498 JUMP JUMPDEST SWAP1 POP PUSH2 0x493 DUP3 DUP3 PUSH2 0x55B JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x4BD JUMPI PUSH2 0x4BC PUSH2 0x58C JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x506 DUP3 PUSH2 0x531 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x518 DUP3 PUSH2 0x4FB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x52A DUP3 PUSH2 0x4FB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x564 DUP3 PUSH2 0x5CF JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x583 JUMPI PUSH2 0x582 PUSH2 0x58C JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x5E9 DUP2 PUSH2 0x4FB JUMP JUMPDEST DUP2 EQ PUSH2 0x5F4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x600 DUP2 PUSH2 0x50D JUMP JUMPDEST DUP2 EQ PUSH2 0x60B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x617 DUP2 PUSH2 0x51F JUMP JUMPDEST DUP2 EQ PUSH2 0x622 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x62E DUP2 PUSH2 0x551 JUMP JUMPDEST DUP2 EQ PUSH2 0x639 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP2 0xBC 0xC5 PUSH5 0xA937EF0D5E NUMBER 0xCE 0xA6 SLOAD MUL PUSH1 0xAB GAS 0xA9 0xCC 0xE9 POP SLOAD COINBASE PUSH18 0x374F82C1B2D4347F64736F6C634300080700 CALLER ",
							"sourceMap": "8847:359:0:-:0;;;8888:19;8871:36;;8847:359;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@CalcLpPrice_368": {
									"entryPoint": 96,
									"id": 368,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr_fromMemory": {
									"entryPoint": 497,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_t_address": {
									"entryPoint": 609,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_array$_t_uint256_$dyn_memory_ptr_fromMemory": {
									"entryPoint": 630,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_contract$_IERC20_$25": {
									"entryPoint": 676,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_contract$_Router_$330": {
									"entryPoint": 697,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 718,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_array$_t_uint256_$dyn_memory_ptr_fromMemory": {
									"entryPoint": 739,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_contract$_IERC20_$25t_contract$_Router_$330t_address": {
									"entryPoint": 812,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_uint256_fromMemory": {
									"entryPoint": 895,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encodeUpdatedPos_t_address_to_t_address": {
									"entryPoint": 940,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address": {
									"entryPoint": 964,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_array$_t_address_$2_memory_ptr_to_t_array$_t_address_$2_memory_ptr_fromStack": {
									"entryPoint": 979,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 1066,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 1081,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_array$_t_address_$2_memory_ptr__to_t_uint256_t_array$_t_address_$2_memory_ptr__fromStack_reversed": {
									"entryPoint": 1108,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"allocate_memory": {
									"entryPoint": 1149,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": 1176,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 1186,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_dataslot_t_array$_t_address_$2_memory_ptr": {
									"entryPoint": 1230,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_array$_t_address_$2_memory_ptr": {
									"entryPoint": 1240,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_nextElement_t_array$_t_address_$2_memory_ptr": {
									"entryPoint": 1251,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_array$_t_address_$2_memory_ptr_fromStack": {
									"entryPoint": 1264,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 1275,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_contract$_IERC20_$25": {
									"entryPoint": 1293,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_contract$_Router_$330": {
									"entryPoint": 1311,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 1329,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 1361,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"finalize_allocation": {
									"entryPoint": 1371,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 1420,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 1467,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef": {
									"entryPoint": 1472,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 1477,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 1482,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 1487,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"validator_revert_t_address": {
									"entryPoint": 1504,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_contract$_IERC20_$25": {
									"entryPoint": 1527,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_contract$_Router_$330": {
									"entryPoint": 1550,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 1573,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:8426:1",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "137:631:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "147:90:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "229:6:1"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "172:56:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "172:64:1"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nodeType": "YulIdentifier",
																	"src": "156:15:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "156:81:1"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "147:5:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "246:16:1",
															"value": {
																"name": "array",
																"nodeType": "YulIdentifier",
																"src": "257:5:1"
															},
															"variables": [
																{
																	"name": "dst",
																	"nodeType": "YulTypedName",
																	"src": "250:3:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "279:5:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "286:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "272:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "272:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "272:21:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "302:23:1",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "313:5:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "320:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "309:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "309:16:1"
															},
															"variableNames": [
																{
																	"name": "dst",
																	"nodeType": "YulIdentifier",
																	"src": "302:3:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "335:17:1",
															"value": {
																"name": "offset",
																"nodeType": "YulIdentifier",
																"src": "346:6:1"
															},
															"variables": [
																{
																	"name": "src",
																	"nodeType": "YulTypedName",
																	"src": "339:3:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "401:103:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
																				"nodeType": "YulIdentifier",
																				"src": "415:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "415:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "415:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "371:3:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "length",
																						"nodeType": "YulIdentifier",
																						"src": "380:6:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "388:4:1",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nodeType": "YulIdentifier",
																					"src": "376:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "376:17:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "367:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "367:27:1"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "396:3:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "364:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "364:36:1"
															},
															"nodeType": "YulIf",
															"src": "361:143:1"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "573:189:1",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "588:21:1",
																		"value": {
																			"name": "src",
																			"nodeType": "YulIdentifier",
																			"src": "606:3:1"
																		},
																		"variables": [
																			{
																				"name": "elementPos",
																				"nodeType": "YulTypedName",
																				"src": "592:10:1",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "630:3:1"
																				},
																				{
																					"arguments": [
																						{
																							"name": "elementPos",
																							"nodeType": "YulIdentifier",
																							"src": "667:10:1"
																						},
																						{
																							"name": "end",
																							"nodeType": "YulIdentifier",
																							"src": "679:3:1"
																						}
																					],
																					"functionName": {
																						"name": "abi_decode_t_uint256_fromMemory",
																						"nodeType": "YulIdentifier",
																						"src": "635:31:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "635:48:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "623:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "623:61:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "623:61:1"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "697:21:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "708:3:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "713:4:1",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "704:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "704:14:1"
																		},
																		"variableNames": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "697:3:1"
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "731:21:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "src",
																					"nodeType": "YulIdentifier",
																					"src": "742:3:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "747:4:1",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "738:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "738:14:1"
																		},
																		"variableNames": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "731:3:1"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "535:1:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "538:6:1"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "532:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "532:13:1"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "546:18:1",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "548:14:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "557:1:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "560:1:1",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "553:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "553:9:1"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "548:1:1"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "517:14:1",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "519:10:1",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "528:1:1",
																			"type": "",
																			"value": "0"
																		},
																		"variables": [
																			{
																				"name": "i",
																				"nodeType": "YulTypedName",
																				"src": "523:1:1",
																				"type": ""
																			}
																		]
																	}
																]
															},
															"src": "513:249:1"
														}
													]
												},
												"name": "abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "107:6:1",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "115:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "123:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "131:5:1",
														"type": ""
													}
												],
												"src": "24:744:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "826:87:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "836:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "858:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "845:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "845:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "836:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "901:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "874:26:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "874:33:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "874:33:1"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "804:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "812:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "820:5:1",
														"type": ""
													}
												],
												"src": "774:139:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1024:297:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1073:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nodeType": "YulIdentifier",
																				"src": "1075:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1075:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1075:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1052:6:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1060:4:1",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1048:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1048:17:1"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "1067:3:1"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "1044:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1044:27:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1037:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1037:35:1"
															},
															"nodeType": "YulIf",
															"src": "1034:122:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1165:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1185:6:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1179:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1179:13:1"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "1169:6:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1201:114:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "1288:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1296:4:1",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1284:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1284:17:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1303:6:1"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "1311:3:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "1210:73:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1210:105:1"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "1201:5:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_array$_t_uint256_$dyn_memory_ptr_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "1002:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1010:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "1018:5:1",
														"type": ""
													}
												],
												"src": "936:385:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1392:100:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1402:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1424:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1411:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1411:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "1402:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1480:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_contract$_IERC20_$25",
																	"nodeType": "YulIdentifier",
																	"src": "1440:39:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1440:46:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1440:46:1"
														}
													]
												},
												"name": "abi_decode_t_contract$_IERC20_$25",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "1370:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1378:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1386:5:1",
														"type": ""
													}
												],
												"src": "1327:165:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1564:101:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1574:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1596:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1583:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1583:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "1574:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1653:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_contract$_Router_$330",
																	"nodeType": "YulIdentifier",
																	"src": "1612:40:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1612:47:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1612:47:1"
														}
													]
												},
												"name": "abi_decode_t_contract$_Router_$330",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "1542:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1550:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1558:5:1",
														"type": ""
													}
												],
												"src": "1498:167:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1734:80:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1744:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1759:6:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1753:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1753:13:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "1744:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1802:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "1775:26:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1775:33:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1775:33:1"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "1712:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1720:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1728:5:1",
														"type": ""
													}
												],
												"src": "1671:143:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1922:452:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1968:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "1970:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1970:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1970:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1943:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1952:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1939:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1939:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1964:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1935:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1935:32:1"
															},
															"nodeType": "YulIf",
															"src": "1932:119:1"
														},
														{
															"nodeType": "YulBlock",
															"src": "2061:306:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2076:38:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2100:9:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2111:1:1",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2096:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2096:17:1"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "2090:5:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2090:24:1"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2080:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "2161:83:1",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "2163:77:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2163:79:1"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "2163:79:1"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "2133:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2141:18:1",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "2130:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2130:30:1"
																	},
																	"nodeType": "YulIf",
																	"src": "2127:117:1"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2258:99:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2329:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2340:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2325:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2325:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2349:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_array$_t_uint256_$dyn_memory_ptr_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "2268:56:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2268:89:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "2258:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_array$_t_uint256_$dyn_memory_ptr_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1892:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1903:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1915:6:1",
														"type": ""
													}
												],
												"src": "1820:554:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2507:546:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2553:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "2555:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2555:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2555:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2528:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2537:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2524:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2524:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2549:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2520:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2520:32:1"
															},
															"nodeType": "YulIf",
															"src": "2517:119:1"
														},
														{
															"nodeType": "YulBlock",
															"src": "2646:130:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2661:15:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2675:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2665:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2690:76:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2738:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2749:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2734:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2734:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2758:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_contract$_IERC20_$25",
																			"nodeType": "YulIdentifier",
																			"src": "2700:33:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2700:66:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "2690:6:1"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "2786:132:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2801:16:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2815:2:1",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2805:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2831:77:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2880:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2891:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2876:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2876:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2900:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_contract$_Router_$330",
																			"nodeType": "YulIdentifier",
																			"src": "2841:34:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2841:67:1"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "2831:6:1"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "2928:118:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2943:16:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2957:2:1",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2947:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2973:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3008:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3019:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3004:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3004:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3028:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "2983:20:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2983:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "2973:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_contract$_IERC20_$25t_contract$_Router_$330t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2461:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2472:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2484:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2492:6:1",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "2500:6:1",
														"type": ""
													}
												],
												"src": "2380:673:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3136:274:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3182:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "3184:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3184:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3184:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3157:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3166:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3153:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3153:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3178:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3149:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3149:32:1"
															},
															"nodeType": "YulIf",
															"src": "3146:119:1"
														},
														{
															"nodeType": "YulBlock",
															"src": "3275:128:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3290:15:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3304:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3294:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3319:74:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3365:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3376:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3361:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3361:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3385:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "3329:31:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3329:64:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "3319:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3106:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3117:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3129:6:1",
														"type": ""
													}
												],
												"src": "3059:351:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3496:99:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "3540:6:1"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3548:3:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "3506:33:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3506:46:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3506:46:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3561:28:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3579:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3584:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3575:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3575:14:1"
															},
															"variableNames": [
																{
																	"name": "updatedPos",
																	"nodeType": "YulIdentifier",
																	"src": "3561:10:1"
																}
															]
														}
													]
												},
												"name": "abi_encodeUpdatedPos_t_address_to_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3469:6:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3477:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updatedPos",
														"nodeType": "YulTypedName",
														"src": "3485:10:1",
														"type": ""
													}
												],
												"src": "3416:179:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3656:53:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3673:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3696:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "3678:17:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3678:24:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3666:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3666:37:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3666:37:1"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3644:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3651:3:1",
														"type": ""
													}
												],
												"src": "3601:108:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3859:582:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3869:66:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3929:5:1"
																	}
																],
																"functionName": {
																	"name": "array_length_t_array$_t_address_$2_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "3883:45:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3883:52:1"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "3873:6:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3944:91:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4023:3:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "4028:6:1"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_array$_t_address_$2_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3951:71:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3951:84:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "3944:3:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4044:69:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "4107:5:1"
																	}
																],
																"functionName": {
																	"name": "array_dataslot_t_array$_t_address_$2_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "4059:47:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4059:54:1"
															},
															"variables": [
																{
																	"name": "baseRef",
																	"nodeType": "YulTypedName",
																	"src": "4048:7:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4122:21:1",
															"value": {
																"name": "baseRef",
																"nodeType": "YulIdentifier",
																"src": "4136:7:1"
															},
															"variables": [
																{
																	"name": "srcPtr",
																	"nodeType": "YulTypedName",
																	"src": "4126:6:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4212:222:1",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "4226:34:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nodeType": "YulIdentifier",
																					"src": "4253:6:1"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nodeType": "YulIdentifier",
																				"src": "4247:5:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4247:13:1"
																		},
																		"variables": [
																			{
																				"name": "elementValue0",
																				"nodeType": "YulTypedName",
																				"src": "4230:13:1",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "4273:70:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "elementValue0",
																					"nodeType": "YulIdentifier",
																					"src": "4324:13:1"
																				},
																				{
																					"name": "pos",
																					"nodeType": "YulIdentifier",
																					"src": "4339:3:1"
																				}
																			],
																			"functionName": {
																				"name": "abi_encodeUpdatedPos_t_address_to_t_address",
																				"nodeType": "YulIdentifier",
																				"src": "4280:43:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4280:63:1"
																		},
																		"variableNames": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "4273:3:1"
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "4356:68:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nodeType": "YulIdentifier",
																					"src": "4417:6:1"
																				}
																			],
																			"functionName": {
																				"name": "array_nextElement_t_array$_t_address_$2_memory_ptr",
																				"nodeType": "YulIdentifier",
																				"src": "4366:50:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4366:58:1"
																		},
																		"variableNames": [
																			{
																				"name": "srcPtr",
																				"nodeType": "YulIdentifier",
																				"src": "4356:6:1"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "4174:1:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "4177:6:1"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "4171:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4171:13:1"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "4185:18:1",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "4187:14:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "4196:1:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4199:1:1",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "4192:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4192:9:1"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "4187:1:1"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "4156:14:1",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "4158:10:1",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "4167:1:1",
																			"type": "",
																			"value": "0"
																		},
																		"variables": [
																			{
																				"name": "i",
																				"nodeType": "YulTypedName",
																				"src": "4162:1:1",
																				"type": ""
																			}
																		]
																	}
																]
															},
															"src": "4152:282:1"
														}
													]
												},
												"name": "abi_encode_t_array$_t_address_$2_memory_ptr_to_t_array$_t_address_$2_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3846:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3853:3:1",
														"type": ""
													}
												],
												"src": "3747:694:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4512:53:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4529:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "4552:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "4534:17:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4534:24:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4522:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4522:37:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4522:37:1"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4500:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4507:3:1",
														"type": ""
													}
												],
												"src": "4447:118:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4669:124:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4679:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4691:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4702:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4687:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4687:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4679:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "4759:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4772:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4783:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4768:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4768:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4715:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4715:71:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4715:71:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4641:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4653:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4664:4:1",
														"type": ""
													}
												],
												"src": "4571:222:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4971:252:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4981:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4993:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5004:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4989:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4989:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4981:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "5061:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5074:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5085:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5070:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5070:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5017:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5017:71:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5017:71:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "5188:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5201:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5212:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5197:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5197:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_array$_t_address_$2_memory_ptr_to_t_array$_t_address_$2_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5098:89:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5098:118:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5098:118:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_array$_t_address_$2_memory_ptr__to_t_uint256_t_array$_t_address_$2_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4935:9:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "4947:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4955:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4966:4:1",
														"type": ""
													}
												],
												"src": "4799:424:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5270:88:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5280:30:1",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "allocate_unbounded",
																	"nodeType": "YulIdentifier",
																	"src": "5290:18:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5290:20:1"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "5280:6:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "5339:6:1"
																	},
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "5347:4:1"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nodeType": "YulIdentifier",
																	"src": "5319:19:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5319:33:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5319:33:1"
														}
													]
												},
												"name": "allocate_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "5254:4:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "5263:6:1",
														"type": ""
													}
												],
												"src": "5229:129:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5404:35:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5414:19:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5430:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "5424:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5424:9:1"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "5414:6:1"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "5397:6:1",
														"type": ""
													}
												],
												"src": "5364:75:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5527:229:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5632:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "5634:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5634:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5634:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "5604:6:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5612:18:1",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "5601:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5601:30:1"
															},
															"nodeType": "YulIf",
															"src": "5598:56:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5664:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "5676:6:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5684:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "5672:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5672:17:1"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "5664:4:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "5726:23:1",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "5738:4:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5744:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5734:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5734:15:1"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "5726:4:1"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "5511:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "5522:4:1",
														"type": ""
													}
												],
												"src": "5445:311:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5832:28:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5842:11:1",
															"value": {
																"name": "ptr",
																"nodeType": "YulIdentifier",
																"src": "5850:3:1"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "5842:4:1"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_array$_t_address_$2_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nodeType": "YulTypedName",
														"src": "5819:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "5827:4:1",
														"type": ""
													}
												],
												"src": "5762:98:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5938:32:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5949:14:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "5959:4:1",
																"type": "",
																"value": "0x02"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "5949:6:1"
																}
															]
														}
													]
												},
												"name": "array_length_t_array$_t_address_$2_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5921:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "5931:6:1",
														"type": ""
													}
												],
												"src": "5866:104:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6049:38:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6059:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nodeType": "YulIdentifier",
																		"src": "6071:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6076:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6067:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6067:14:1"
															},
															"variableNames": [
																{
																	"name": "next",
																	"nodeType": "YulIdentifier",
																	"src": "6059:4:1"
																}
															]
														}
													]
												},
												"name": "array_nextElement_t_array$_t_address_$2_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nodeType": "YulTypedName",
														"src": "6036:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "next",
														"nodeType": "YulTypedName",
														"src": "6044:4:1",
														"type": ""
													}
												],
												"src": "5976:111:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6202:34:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6212:18:1",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "6227:3:1"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "6212:11:1"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_array$_t_address_$2_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "6174:3:1",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "6179:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "6190:11:1",
														"type": ""
													}
												],
												"src": "6093:143:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6287:51:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6297:35:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "6326:5:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "6308:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6308:24:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "6297:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6269:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "6279:7:1",
														"type": ""
													}
												],
												"src": "6242:96:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6402:51:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6412:35:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "6441:5:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "6423:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6423:24:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "6412:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_contract$_IERC20_$25",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6384:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "6394:7:1",
														"type": ""
													}
												],
												"src": "6344:109:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6518:51:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6528:35:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "6557:5:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "6539:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6539:24:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "6528:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_contract$_Router_$330",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6500:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "6510:7:1",
														"type": ""
													}
												],
												"src": "6459:110:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6620:81:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6630:65:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "6645:5:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6652:42:1",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "6641:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6641:54:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "6630:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6602:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "6612:7:1",
														"type": ""
													}
												],
												"src": "6575:126:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6752:32:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6762:16:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "6773:5:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "6762:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6734:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "6744:7:1",
														"type": ""
													}
												],
												"src": "6707:77:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6833:238:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6843:58:1",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "6865:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "size",
																				"nodeType": "YulIdentifier",
																				"src": "6895:4:1"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "6873:21:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6873:27:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6861:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6861:40:1"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "6847:10:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7012:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "7014:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7014:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7014:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "6955:10:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6967:18:1",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "6952:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6952:34:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "6991:10:1"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "7003:6:1"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "6988:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6988:22:1"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "6949:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6949:62:1"
															},
															"nodeType": "YulIf",
															"src": "6946:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7050:2:1",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "7054:10:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7043:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7043:22:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7043:22:1"
														}
													]
												},
												"name": "finalize_allocation",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "6819:6:1",
														"type": ""
													},
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "6827:4:1",
														"type": ""
													}
												],
												"src": "6790:281:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7105:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7122:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7125:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7115:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7115:88:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7115:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7219:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7222:4:1",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7212:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7212:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7212:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7243:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7246:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "7236:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7236:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7236:15:1"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "7077:180:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7352:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7369:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7372:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "7362:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7362:12:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7362:12:1"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nodeType": "YulFunctionDefinition",
												"src": "7263:117:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7475:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7492:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7495:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "7485:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7485:12:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7485:12:1"
														}
													]
												},
												"name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
												"nodeType": "YulFunctionDefinition",
												"src": "7386:117:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7598:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7615:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7618:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "7608:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7608:12:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7608:12:1"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "7509:117:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7721:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7738:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7741:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "7731:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7731:12:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7731:12:1"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "7632:117:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7803:54:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7813:38:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "7831:5:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7838:2:1",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7827:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7827:14:1"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7847:2:1",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "7843:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7843:7:1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "7823:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7823:28:1"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "7813:6:1"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "7786:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "7796:6:1",
														"type": ""
													}
												],
												"src": "7755:102:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7906:79:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7963:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7972:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7975:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "7965:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7965:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7965:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "7929:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "7954:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "7936:17:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7936:24:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "7926:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7926:35:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "7919:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7919:43:1"
															},
															"nodeType": "YulIf",
															"src": "7916:63:1"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "7899:5:1",
														"type": ""
													}
												],
												"src": "7863:122:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8047:92:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8117:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8126:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8129:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "8119:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8119:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8119:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "8070:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "8108:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_contract$_IERC20_$25",
																					"nodeType": "YulIdentifier",
																					"src": "8077:30:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "8077:37:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "8067:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8067:48:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "8060:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8060:56:1"
															},
															"nodeType": "YulIf",
															"src": "8057:76:1"
														}
													]
												},
												"name": "validator_revert_t_contract$_IERC20_$25",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "8040:5:1",
														"type": ""
													}
												],
												"src": "7991:148:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8202:93:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8273:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8282:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8285:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "8275:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8275:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8275:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "8225:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "8264:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_contract$_Router_$330",
																					"nodeType": "YulIdentifier",
																					"src": "8232:31:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "8232:38:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "8222:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8222:49:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "8215:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8215:57:1"
															},
															"nodeType": "YulIf",
															"src": "8212:77:1"
														}
													]
												},
												"name": "validator_revert_t_contract$_Router_$330",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "8195:5:1",
														"type": ""
													}
												],
												"src": "8145:150:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8344:79:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8401:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8410:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8413:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "8403:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8403:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8403:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "8367:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "8392:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "8374:17:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "8374:24:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "8364:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8364:35:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "8357:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8357:43:1"
															},
															"nodeType": "YulIf",
															"src": "8354:63:1"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "8337:5:1",
														"type": ""
													}
												],
												"src": "8301:122:1"
											}
										]
									},
									"contents": "{\n\n    // uint256[]\n    function abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr_fromMemory(offset, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr(length))\n        let dst := array\n\n        mstore(array, length)\n        dst := add(array, 0x20)\n\n        let src := offset\n        if gt(add(src, mul(length, 0x20)), end) {\n            revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef()\n        }\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n\n            let elementPos := src\n\n            mstore(dst, abi_decode_t_uint256_fromMemory(elementPos, end))\n            dst := add(dst, 0x20)\n            src := add(src, 0x20)\n        }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    // uint256[]\n    function abi_decode_t_array$_t_uint256_$dyn_memory_ptr_fromMemory(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := mload(offset)\n        array := abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr_fromMemory(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_t_contract$_IERC20_$25(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_contract$_IERC20_$25(value)\n    }\n\n    function abi_decode_t_contract$_Router_$330(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_contract$_Router_$330(value)\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_array$_t_uint256_$dyn_memory_ptr_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := mload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_array$_t_uint256_$dyn_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_contract$_IERC20_$25t_contract$_Router_$330t_address(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_contract$_IERC20_$25(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_contract$_Router_$330(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encodeUpdatedPos_t_address_to_t_address(value0, pos) -> updatedPos {\n        abi_encode_t_address_to_t_address(value0, pos)\n        updatedPos := add(pos, 0x20)\n    }\n\n    function abi_encode_t_address_to_t_address(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    // address[2] -> address[2]\n    function abi_encode_t_array$_t_address_$2_memory_ptr_to_t_array$_t_address_$2_memory_ptr_fromStack(value, pos)  {\n        let length := array_length_t_array$_t_address_$2_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_array$_t_address_$2_memory_ptr_fromStack(pos, length)\n        let baseRef := array_dataslot_t_array$_t_address_$2_memory_ptr(value)\n        let srcPtr := baseRef\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n            let elementValue0 := mload(srcPtr)\n            pos := abi_encodeUpdatedPos_t_address_to_t_address(elementValue0, pos)\n            srcPtr := array_nextElement_t_array$_t_address_$2_memory_ptr(srcPtr)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_array$_t_address_$2_memory_ptr__to_t_uint256_t_array$_t_address_$2_memory_ptr__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_array$_t_address_$2_memory_ptr_to_t_array$_t_address_$2_memory_ptr_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := mul(length, 0x20)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function array_dataslot_t_array$_t_address_$2_memory_ptr(ptr) -> data {\n        data := ptr\n\n    }\n\n    function array_length_t_array$_t_address_$2_memory_ptr(value) -> length {\n\n        length := 0x02\n\n    }\n\n    function array_nextElement_t_array$_t_address_$2_memory_ptr(ptr) -> next {\n        next := add(ptr, 0x20)\n    }\n\n    function array_storeLengthForEncoding_t_array$_t_address_$2_memory_ptr_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_contract$_IERC20_$25(value) -> cleaned {\n        cleaned := cleanup_t_address(value)\n    }\n\n    function cleanup_t_contract$_Router_$330(value) -> cleaned {\n        cleaned := cleanup_t_address(value)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_contract$_IERC20_$25(value) {\n        if iszero(eq(value, cleanup_t_contract$_IERC20_$25(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_contract$_Router_$330(value) {\n        if iszero(eq(value, cleanup_t_contract$_Router_$330(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n}\n",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b506004361061002b5760003560e01c806320ae0b6d14610030575b600080fd5b61004a6004803603810190610045919061032c565b610060565b6040516100579190610439565b60405180910390f35b6000808473ffffffffffffffffffffffffffffffffffffffff166318160ddd6040518163ffffffff1660e01b815260040160206040518083038186803b1580156100a957600080fd5b505afa1580156100bd573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906100e1919061037f565b905060008473ffffffffffffffffffffffffffffffffffffffff1663bd5f68b060005460405180604001604052808873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152506040518363ffffffff1660e01b815260040161018e929190610454565b60006040518083038186803b1580156101a657600080fd5b505afa1580156101ba573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f820116820180604052508101906101e391906102e3565b905081925050509392505050565b60006102046101ff846104a2565b61047d565b90508083825260208201905082856020860282011115610227576102266105c0565b5b60005b85811015610257578161023d88826102ce565b84526020840193506020830192505060018101905061022a565b5050509392505050565b600081359050610270816105e0565b92915050565b600082601f83011261028b5761028a6105bb565b5b815161029b8482602086016101f1565b91505092915050565b6000813590506102b3816105f7565b92915050565b6000813590506102c88161060e565b92915050565b6000815190506102dd81610625565b92915050565b6000602082840312156102f9576102f86105ca565b5b600082015167ffffffffffffffff811115610317576103166105c5565b5b61032384828501610276565b91505092915050565b600080600060608486031215610345576103446105ca565b5b6000610353868287016102a4565b9350506020610364868287016102b9565b925050604061037586828701610261565b9150509250925092565b600060208284031215610395576103946105ca565b5b60006103a3848285016102ce565b91505092915050565b60006103b883836103c4565b60208301905092915050565b6103cd816104fb565b82525050565b6103dc816104d8565b6103e681846104f0565b92506103f1826104ce565b8060005b8381101561042257815161040987826103ac565b9650610414836104e3565b9250506001810190506103f5565b505050505050565b61043381610551565b82525050565b600060208201905061044e600083018461042a565b92915050565b6000606082019050610469600083018561042a565b61047660208301846103d3565b9392505050565b6000610487610498565b9050610493828261055b565b919050565b6000604051905090565b600067ffffffffffffffff8211156104bd576104bc61058c565b5b602082029050602081019050919050565b6000819050919050565b600060029050919050565b6000602082019050919050565b600081905092915050565b600061050682610531565b9050919050565b6000610518826104fb565b9050919050565b600061052a826104fb565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b610564826105cf565b810181811067ffffffffffffffff821117156105835761058261058c565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b6105e9816104fb565b81146105f457600080fd5b50565b6106008161050d565b811461060b57600080fd5b50565b6106178161051f565b811461062257600080fd5b50565b61062e81610551565b811461063957600080fd5b5056fea264697066735822122091bcc564a937ef0d5e43cea6540260ab5aa9cce950544171374f82c1b2d4347f64736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x2B JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x20AE0B6D EQ PUSH2 0x30 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x45 SWAP2 SWAP1 PUSH2 0x32C JUMP JUMPDEST PUSH2 0x60 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x57 SWAP2 SWAP1 PUSH2 0x439 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x18160DDD PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xA9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xBD JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xE1 SWAP2 SWAP1 PUSH2 0x37F JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xBD5F68B0 PUSH1 0x0 SLOAD PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x18E SWAP3 SWAP2 SWAP1 PUSH2 0x454 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1A6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1BA JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1E3 SWAP2 SWAP1 PUSH2 0x2E3 JUMP JUMPDEST SWAP1 POP DUP2 SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x204 PUSH2 0x1FF DUP5 PUSH2 0x4A2 JUMP JUMPDEST PUSH2 0x47D JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP DUP3 DUP6 PUSH1 0x20 DUP7 MUL DUP3 ADD GT ISZERO PUSH2 0x227 JUMPI PUSH2 0x226 PUSH2 0x5C0 JUMP JUMPDEST JUMPDEST PUSH1 0x0 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0x257 JUMPI DUP2 PUSH2 0x23D DUP9 DUP3 PUSH2 0x2CE JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP PUSH1 0x20 DUP4 ADD SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x22A JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x270 DUP2 PUSH2 0x5E0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x28B JUMPI PUSH2 0x28A PUSH2 0x5BB JUMP JUMPDEST JUMPDEST DUP2 MLOAD PUSH2 0x29B DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x1F1 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2B3 DUP2 PUSH2 0x5F7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2C8 DUP2 PUSH2 0x60E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x2DD DUP2 PUSH2 0x625 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2F9 JUMPI PUSH2 0x2F8 PUSH2 0x5CA JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP3 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x317 JUMPI PUSH2 0x316 PUSH2 0x5C5 JUMP JUMPDEST JUMPDEST PUSH2 0x323 DUP5 DUP3 DUP6 ADD PUSH2 0x276 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x345 JUMPI PUSH2 0x344 PUSH2 0x5CA JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x353 DUP7 DUP3 DUP8 ADD PUSH2 0x2A4 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x364 DUP7 DUP3 DUP8 ADD PUSH2 0x2B9 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x375 DUP7 DUP3 DUP8 ADD PUSH2 0x261 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x395 JUMPI PUSH2 0x394 PUSH2 0x5CA JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3A3 DUP5 DUP3 DUP6 ADD PUSH2 0x2CE JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3B8 DUP4 DUP4 PUSH2 0x3C4 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x3CD DUP2 PUSH2 0x4FB JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x3DC DUP2 PUSH2 0x4D8 JUMP JUMPDEST PUSH2 0x3E6 DUP2 DUP5 PUSH2 0x4F0 JUMP JUMPDEST SWAP3 POP PUSH2 0x3F1 DUP3 PUSH2 0x4CE JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x422 JUMPI DUP2 MLOAD PUSH2 0x409 DUP8 DUP3 PUSH2 0x3AC JUMP JUMPDEST SWAP7 POP PUSH2 0x414 DUP4 PUSH2 0x4E3 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x3F5 JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x433 DUP2 PUSH2 0x551 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x44E PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x42A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x469 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x42A JUMP JUMPDEST PUSH2 0x476 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x3D3 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x487 PUSH2 0x498 JUMP JUMPDEST SWAP1 POP PUSH2 0x493 DUP3 DUP3 PUSH2 0x55B JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x4BD JUMPI PUSH2 0x4BC PUSH2 0x58C JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x506 DUP3 PUSH2 0x531 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x518 DUP3 PUSH2 0x4FB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x52A DUP3 PUSH2 0x4FB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x564 DUP3 PUSH2 0x5CF JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x583 JUMPI PUSH2 0x582 PUSH2 0x58C JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x5E9 DUP2 PUSH2 0x4FB JUMP JUMPDEST DUP2 EQ PUSH2 0x5F4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x600 DUP2 PUSH2 0x50D JUMP JUMPDEST DUP2 EQ PUSH2 0x60B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x617 DUP2 PUSH2 0x51F JUMP JUMPDEST DUP2 EQ PUSH2 0x622 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x62E DUP2 PUSH2 0x551 JUMP JUMPDEST DUP2 EQ PUSH2 0x639 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP2 0xBC 0xC5 PUSH5 0xA937EF0D5E NUMBER 0xCE 0xA6 SLOAD MUL PUSH1 0xAB GAS 0xA9 0xCC 0xE9 POP SLOAD COINBASE PUSH18 0x374F82C1B2D4347F64736F6C634300080700 CALLER ",
							"sourceMap": "8847:359:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8916:287;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;9013:7;9032:19;9054:9;:21;;;:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;9032:45;;9090:23;9116:13;:27;;;9144:6;;9116:48;;;;;;;;9152:4;9116:48;;;;;;;;9158:4;9116:48;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;9090:74;;9184:11;9177:18;;;;8916:287;;;;;:::o;24:744:1:-;131:5;156:81;172:64;229:6;172:64;:::i;:::-;156:81;:::i;:::-;147:90;;257:5;286:6;279:5;272:21;320:4;313:5;309:16;302:23;;346:6;396:3;388:4;380:6;376:17;371:3;367:27;364:36;361:143;;;415:79;;:::i;:::-;361:143;528:1;513:249;538:6;535:1;532:13;513:249;;;606:3;635:48;679:3;667:10;635:48;:::i;:::-;630:3;623:61;713:4;708:3;704:14;697:21;;747:4;742:3;738:14;731:21;;573:189;560:1;557;553:9;548:14;;513:249;;;517:14;137:631;;24:744;;;;;:::o;774:139::-;820:5;858:6;845:20;836:29;;874:33;901:5;874:33;:::i;:::-;774:139;;;;:::o;936:385::-;1018:5;1067:3;1060:4;1052:6;1048:17;1044:27;1034:122;;1075:79;;:::i;:::-;1034:122;1185:6;1179:13;1210:105;1311:3;1303:6;1296:4;1288:6;1284:17;1210:105;:::i;:::-;1201:114;;1024:297;936:385;;;;:::o;1327:165::-;1386:5;1424:6;1411:20;1402:29;;1440:46;1480:5;1440:46;:::i;:::-;1327:165;;;;:::o;1498:167::-;1558:5;1596:6;1583:20;1574:29;;1612:47;1653:5;1612:47;:::i;:::-;1498:167;;;;:::o;1671:143::-;1728:5;1759:6;1753:13;1744:22;;1775:33;1802:5;1775:33;:::i;:::-;1671:143;;;;:::o;1820:554::-;1915:6;1964:2;1952:9;1943:7;1939:23;1935:32;1932:119;;;1970:79;;:::i;:::-;1932:119;2111:1;2100:9;2096:17;2090:24;2141:18;2133:6;2130:30;2127:117;;;2163:79;;:::i;:::-;2127:117;2268:89;2349:7;2340:6;2329:9;2325:22;2268:89;:::i;:::-;2258:99;;2061:306;1820:554;;;;:::o;2380:673::-;2484:6;2492;2500;2549:2;2537:9;2528:7;2524:23;2520:32;2517:119;;;2555:79;;:::i;:::-;2517:119;2675:1;2700:66;2758:7;2749:6;2738:9;2734:22;2700:66;:::i;:::-;2690:76;;2646:130;2815:2;2841:67;2900:7;2891:6;2880:9;2876:22;2841:67;:::i;:::-;2831:77;;2786:132;2957:2;2983:53;3028:7;3019:6;3008:9;3004:22;2983:53;:::i;:::-;2973:63;;2928:118;2380:673;;;;;:::o;3059:351::-;3129:6;3178:2;3166:9;3157:7;3153:23;3149:32;3146:119;;;3184:79;;:::i;:::-;3146:119;3304:1;3329:64;3385:7;3376:6;3365:9;3361:22;3329:64;:::i;:::-;3319:74;;3275:128;3059:351;;;;:::o;3416:179::-;3485:10;3506:46;3548:3;3540:6;3506:46;:::i;:::-;3584:4;3579:3;3575:14;3561:28;;3416:179;;;;:::o;3601:108::-;3678:24;3696:5;3678:24;:::i;:::-;3673:3;3666:37;3601:108;;:::o;3747:694::-;3883:52;3929:5;3883:52;:::i;:::-;3951:84;4028:6;4023:3;3951:84;:::i;:::-;3944:91;;4059:54;4107:5;4059:54;:::i;:::-;4136:7;4167:1;4152:282;4177:6;4174:1;4171:13;4152:282;;;4253:6;4247:13;4280:63;4339:3;4324:13;4280:63;:::i;:::-;4273:70;;4366:58;4417:6;4366:58;:::i;:::-;4356:68;;4212:222;4199:1;4196;4192:9;4187:14;;4152:282;;;4156:14;3859:582;;;3747:694;;:::o;4447:118::-;4534:24;4552:5;4534:24;:::i;:::-;4529:3;4522:37;4447:118;;:::o;4571:222::-;4664:4;4702:2;4691:9;4687:18;4679:26;;4715:71;4783:1;4772:9;4768:17;4759:6;4715:71;:::i;:::-;4571:222;;;;:::o;4799:424::-;4966:4;5004:2;4993:9;4989:18;4981:26;;5017:71;5085:1;5074:9;5070:17;5061:6;5017:71;:::i;:::-;5098:118;5212:2;5201:9;5197:18;5188:6;5098:118;:::i;:::-;4799:424;;;;;:::o;5229:129::-;5263:6;5290:20;;:::i;:::-;5280:30;;5319:33;5347:4;5339:6;5319:33;:::i;:::-;5229:129;;;:::o;5364:75::-;5397:6;5430:2;5424:9;5414:19;;5364:75;:::o;5445:311::-;5522:4;5612:18;5604:6;5601:30;5598:56;;;5634:18;;:::i;:::-;5598:56;5684:4;5676:6;5672:17;5664:25;;5744:4;5738;5734:15;5726:23;;5445:311;;;:::o;5762:98::-;5827:4;5850:3;5842:11;;5762:98;;;:::o;5866:104::-;5931:6;5959:4;5949:14;;5866:104;;;:::o;5976:111::-;6044:4;6076;6071:3;6067:14;6059:22;;5976:111;;;:::o;6093:143::-;6190:11;6227:3;6212:18;;6093:143;;;;:::o;6242:96::-;6279:7;6308:24;6326:5;6308:24;:::i;:::-;6297:35;;6242:96;;;:::o;6344:109::-;6394:7;6423:24;6441:5;6423:24;:::i;:::-;6412:35;;6344:109;;;:::o;6459:110::-;6510:7;6539:24;6557:5;6539:24;:::i;:::-;6528:35;;6459:110;;;:::o;6575:126::-;6612:7;6652:42;6645:5;6641:54;6630:65;;6575:126;;;:::o;6707:77::-;6744:7;6773:5;6762:16;;6707:77;;;:::o;6790:281::-;6873:27;6895:4;6873:27;:::i;:::-;6865:6;6861:40;7003:6;6991:10;6988:22;6967:18;6955:10;6952:34;6949:62;6946:88;;;7014:18;;:::i;:::-;6946:88;7054:10;7050:2;7043:22;6833:238;6790:281;;:::o;7077:180::-;7125:77;7122:1;7115:88;7222:4;7219:1;7212:15;7246:4;7243:1;7236:15;7263:117;7372:1;7369;7362:12;7386:117;7495:1;7492;7485:12;7509:117;7618:1;7615;7608:12;7632:117;7741:1;7738;7731:12;7755:102;7796:6;7847:2;7843:7;7838:2;7831:5;7827:14;7823:28;7813:38;;7755:102;;;:::o;7863:122::-;7936:24;7954:5;7936:24;:::i;:::-;7929:5;7926:35;7916:63;;7975:1;7972;7965:12;7916:63;7863:122;:::o;7991:148::-;8077:37;8108:5;8077:37;:::i;:::-;8070:5;8067:48;8057:76;;8129:1;8126;8119:12;8057:76;7991:148;:::o;8145:150::-;8232:38;8264:5;8232:38;:::i;:::-;8225:5;8222:49;8212:77;;8285:1;8282;8275:12;8212:77;8145:150;:::o;8301:122::-;8374:24;8392:5;8374:24;:::i;:::-;8367:5;8364:35;8354:63;;8413:1;8410;8403:12;8354:63;8301:122;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "330000",
								"executionCost": "22474",
								"totalCost": "352474"
							},
							"external": {
								"CalcLpPrice(address,address,address)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 8847,
									"end": 9206,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 8847,
									"end": 9206,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 8847,
									"end": 9206,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 8888,
									"end": 8907,
									"name": "PUSH",
									"source": 0,
									"value": "DE0B6B3A7640000"
								},
								{
									"begin": 8871,
									"end": 8907,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 8871,
									"end": 8907,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 8847,
									"end": 9206,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 8847,
									"end": 9206,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 8847,
									"end": 9206,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 8847,
									"end": 9206,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 8847,
									"end": 9206,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 8847,
									"end": 9206,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 8847,
									"end": 9206,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 8847,
									"end": 9206,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 8847,
									"end": 9206,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 8847,
									"end": 9206,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 8847,
									"end": 9206,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 8847,
									"end": 9206,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 8847,
									"end": 9206,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 8847,
									"end": 9206,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 8847,
									"end": 9206,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 8847,
									"end": 9206,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 8847,
									"end": 9206,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 8847,
									"end": 9206,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122091bcc564a937ef0d5e43cea6540260ab5aa9cce950544171374f82c1b2d4347f64736f6c63430008070033",
									".code": [
										{
											"begin": 8847,
											"end": 9206,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 8847,
											"end": 9206,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8847,
											"end": 9206,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8847,
											"end": 9206,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 8847,
											"end": 9206,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8847,
											"end": 9206,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 8847,
											"end": 9206,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 8847,
											"end": 9206,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8847,
											"end": 9206,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8847,
											"end": 9206,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8847,
											"end": 9206,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 8847,
											"end": 9206,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 8847,
											"end": 9206,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8847,
											"end": 9206,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8847,
											"end": 9206,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 8847,
											"end": 9206,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 8847,
											"end": 9206,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 8847,
											"end": 9206,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 8847,
											"end": 9206,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8847,
											"end": 9206,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8847,
											"end": 9206,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 8847,
											"end": 9206,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 8847,
											"end": 9206,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 8847,
											"end": 9206,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8847,
											"end": 9206,
											"name": "PUSH",
											"source": 0,
											"value": "20AE0B6D"
										},
										{
											"begin": 8847,
											"end": 9206,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 8847,
											"end": 9206,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 8847,
											"end": 9206,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8847,
											"end": 9206,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 8847,
											"end": 9206,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8847,
											"end": 9206,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8847,
											"end": 9206,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8847,
											"end": 9206,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 8916,
											"end": 9203,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 8916,
											"end": 9203,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8916,
											"end": 9203,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 8916,
											"end": 9203,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 8916,
											"end": 9203,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8916,
											"end": 9203,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 8916,
											"end": 9203,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 8916,
											"end": 9203,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8916,
											"end": 9203,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8916,
											"end": 9203,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8916,
											"end": 9203,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 8916,
											"end": 9203,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8916,
											"end": 9203,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8916,
											"end": 9203,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 8916,
											"end": 9203,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8916,
											"end": 9203,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 8916,
											"end": 9203,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8916,
											"end": 9203,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 8916,
											"end": 9203,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8916,
											"end": 9203,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 8916,
											"end": 9203,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8916,
											"end": 9203,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8916,
											"end": 9203,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8916,
											"end": 9203,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 8916,
											"end": 9203,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8916,
											"end": 9203,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8916,
											"end": 9203,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 8916,
											"end": 9203,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8916,
											"end": 9203,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 8916,
											"end": 9203,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8916,
											"end": 9203,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8916,
											"end": 9203,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8916,
											"end": 9203,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8916,
											"end": 9203,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8916,
											"end": 9203,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 8916,
											"end": 9203,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8916,
											"end": 9203,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 8916,
											"end": 9203,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 8916,
											"end": 9203,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9013,
											"end": 9020,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9032,
											"end": 9051,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9054,
											"end": 9063,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 9054,
											"end": 9075,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9054,
											"end": 9075,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9054,
											"end": 9075,
											"name": "PUSH",
											"source": 0,
											"value": "18160DDD"
										},
										{
											"begin": 9054,
											"end": 9077,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9054,
											"end": 9077,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 9054,
											"end": 9077,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9054,
											"end": 9077,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 9054,
											"end": 9077,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9054,
											"end": 9077,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 9054,
											"end": 9077,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 9054,
											"end": 9077,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9054,
											"end": 9077,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9054,
											"end": 9077,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 9054,
											"end": 9077,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9054,
											"end": 9077,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 9054,
											"end": 9077,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9054,
											"end": 9077,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 9054,
											"end": 9077,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9054,
											"end": 9077,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 9054,
											"end": 9077,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 9054,
											"end": 9077,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9054,
											"end": 9077,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 9054,
											"end": 9077,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9054,
											"end": 9077,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 9054,
											"end": 9077,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 9054,
											"end": 9077,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9054,
											"end": 9077,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 9054,
											"end": 9077,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 9054,
											"end": 9077,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9054,
											"end": 9077,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9054,
											"end": 9077,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9054,
											"end": 9077,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 9054,
											"end": 9077,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 9054,
											"end": 9077,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9054,
											"end": 9077,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9054,
											"end": 9077,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 9054,
											"end": 9077,
											"name": "STATICCALL",
											"source": 0
										},
										{
											"begin": 9054,
											"end": 9077,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 9054,
											"end": 9077,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9054,
											"end": 9077,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 9054,
											"end": 9077,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 9054,
											"end": 9077,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9054,
											"end": 9077,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 9054,
											"end": 9077,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9054,
											"end": 9077,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9054,
											"end": 9077,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 9054,
											"end": 9077,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 9054,
											"end": 9077,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9054,
											"end": 9077,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 9054,
											"end": 9077,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 9054,
											"end": 9077,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9054,
											"end": 9077,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9054,
											"end": 9077,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9054,
											"end": 9077,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9054,
											"end": 9077,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9054,
											"end": 9077,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9054,
											"end": 9077,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 9054,
											"end": 9077,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 9054,
											"end": 9077,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 9054,
											"end": 9077,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 9054,
											"end": 9077,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 9054,
											"end": 9077,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 9054,
											"end": 9077,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9054,
											"end": 9077,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9054,
											"end": 9077,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 9054,
											"end": 9077,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9054,
											"end": 9077,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9054,
											"end": 9077,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9054,
											"end": 9077,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9054,
											"end": 9077,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9054,
											"end": 9077,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9054,
											"end": 9077,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9054,
											"end": 9077,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9054,
											"end": 9077,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 9054,
											"end": 9077,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9054,
											"end": 9077,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9054,
											"end": 9077,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 9054,
											"end": 9077,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 9054,
											"end": 9077,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 9054,
											"end": 9077,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9032,
											"end": 9077,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9032,
											"end": 9077,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9090,
											"end": 9113,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9116,
											"end": 9129,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 9116,
											"end": 9143,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9116,
											"end": 9143,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9116,
											"end": 9143,
											"name": "PUSH",
											"source": 0,
											"value": "BD5F68B0"
										},
										{
											"begin": 9144,
											"end": 9150,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9144,
											"end": 9150,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 9116,
											"end": 9164,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9116,
											"end": 9164,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 9116,
											"end": 9164,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9116,
											"end": 9164,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9116,
											"end": 9164,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9116,
											"end": 9164,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9116,
											"end": 9164,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9116,
											"end": 9164,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9152,
											"end": 9156,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 9116,
											"end": 9164,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9116,
											"end": 9164,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9116,
											"end": 9164,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9116,
											"end": 9164,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9116,
											"end": 9164,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9116,
											"end": 9164,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9116,
											"end": 9164,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 9116,
											"end": 9164,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9158,
											"end": 9162,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 9116,
											"end": 9164,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9116,
											"end": 9164,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9116,
											"end": 9164,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9116,
											"end": 9164,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9116,
											"end": 9164,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9116,
											"end": 9164,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9116,
											"end": 9164,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9116,
											"end": 9164,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9116,
											"end": 9164,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 9116,
											"end": 9164,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 9116,
											"end": 9164,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 9116,
											"end": 9164,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9116,
											"end": 9164,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 9116,
											"end": 9164,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 9116,
											"end": 9164,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9116,
											"end": 9164,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9116,
											"end": 9164,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 9116,
											"end": 9164,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9116,
											"end": 9164,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 9116,
											"end": 9164,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 9116,
											"end": 9164,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9116,
											"end": 9164,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9116,
											"end": 9164,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 9116,
											"end": 9164,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 9116,
											"end": 9164,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 9116,
											"end": 9164,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9116,
											"end": 9164,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9116,
											"end": 9164,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9116,
											"end": 9164,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 9116,
											"end": 9164,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9116,
											"end": 9164,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 9116,
											"end": 9164,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 9116,
											"end": 9164,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9116,
											"end": 9164,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 9116,
											"end": 9164,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9116,
											"end": 9164,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 9116,
											"end": 9164,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 9116,
											"end": 9164,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9116,
											"end": 9164,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 9116,
											"end": 9164,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 9116,
											"end": 9164,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9116,
											"end": 9164,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9116,
											"end": 9164,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9116,
											"end": 9164,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 9116,
											"end": 9164,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 9116,
											"end": 9164,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9116,
											"end": 9164,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9116,
											"end": 9164,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 9116,
											"end": 9164,
											"name": "STATICCALL",
											"source": 0
										},
										{
											"begin": 9116,
											"end": 9164,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 9116,
											"end": 9164,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9116,
											"end": 9164,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 9116,
											"end": 9164,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 9116,
											"end": 9164,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9116,
											"end": 9164,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 9116,
											"end": 9164,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9116,
											"end": 9164,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9116,
											"end": 9164,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 9116,
											"end": 9164,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 9116,
											"end": 9164,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9116,
											"end": 9164,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 9116,
											"end": 9164,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 9116,
											"end": 9164,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9116,
											"end": 9164,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9116,
											"end": 9164,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9116,
											"end": 9164,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9116,
											"end": 9164,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9116,
											"end": 9164,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9116,
											"end": 9164,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 9116,
											"end": 9164,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 9116,
											"end": 9164,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9116,
											"end": 9164,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 9116,
											"end": 9164,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 9116,
											"end": 9164,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 9116,
											"end": 9164,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 9116,
											"end": 9164,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 9116,
											"end": 9164,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 9116,
											"end": 9164,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 9116,
											"end": 9164,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9116,
											"end": 9164,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9116,
											"end": 9164,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 9116,
											"end": 9164,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9116,
											"end": 9164,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9116,
											"end": 9164,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9116,
											"end": 9164,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9116,
											"end": 9164,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9116,
											"end": 9164,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9116,
											"end": 9164,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9116,
											"end": 9164,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9116,
											"end": 9164,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 9116,
											"end": 9164,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9116,
											"end": 9164,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9116,
											"end": 9164,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 9116,
											"end": 9164,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 9116,
											"end": 9164,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 9116,
											"end": 9164,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9090,
											"end": 9164,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9090,
											"end": 9164,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9184,
											"end": 9195,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9177,
											"end": 9195,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 9177,
											"end": 9195,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9177,
											"end": 9195,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9177,
											"end": 9195,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8916,
											"end": 9203,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 8916,
											"end": 9203,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 8916,
											"end": 9203,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8916,
											"end": 9203,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8916,
											"end": 9203,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8916,
											"end": 9203,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 24,
											"end": 768,
											"name": "tag",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 24,
											"end": 768,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 131,
											"end": 136,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 156,
											"end": 237,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 172,
											"end": 236,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 229,
											"end": 235,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 172,
											"end": 236,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 172,
											"end": 236,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 172,
											"end": 236,
											"name": "tag",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 172,
											"end": 236,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 156,
											"end": 237,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 156,
											"end": 237,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 156,
											"end": 237,
											"name": "tag",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 156,
											"end": 237,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 147,
											"end": 237,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 147,
											"end": 237,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 257,
											"end": 262,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 286,
											"end": 292,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 279,
											"end": 284,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 272,
											"end": 293,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 320,
											"end": 324,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 313,
											"end": 318,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 309,
											"end": 325,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 302,
											"end": 325,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 302,
											"end": 325,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 346,
											"end": 352,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 396,
											"end": 399,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 388,
											"end": 392,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 380,
											"end": 386,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 376,
											"end": 393,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 371,
											"end": 374,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 367,
											"end": 394,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 364,
											"end": 400,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 361,
											"end": 504,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 361,
											"end": 504,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 361,
											"end": 504,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 415,
											"end": 494,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 415,
											"end": 494,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 415,
											"end": 494,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 415,
											"end": 494,
											"name": "tag",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 415,
											"end": 494,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 361,
											"end": 504,
											"name": "tag",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 361,
											"end": 504,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 528,
											"end": 529,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 513,
											"end": 762,
											"name": "tag",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 513,
											"end": 762,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 538,
											"end": 544,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 535,
											"end": 536,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 532,
											"end": 545,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 513,
											"end": 762,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 513,
											"end": 762,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 513,
											"end": 762,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 606,
											"end": 609,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 635,
											"end": 683,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 679,
											"end": 682,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 667,
											"end": 677,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 635,
											"end": 683,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 635,
											"end": 683,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 635,
											"end": 683,
											"name": "tag",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 635,
											"end": 683,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 630,
											"end": 633,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 623,
											"end": 684,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 713,
											"end": 717,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 708,
											"end": 711,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 704,
											"end": 718,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 697,
											"end": 718,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 697,
											"end": 718,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 747,
											"end": 751,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 742,
											"end": 745,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 738,
											"end": 752,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 731,
											"end": 752,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 731,
											"end": 752,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 573,
											"end": 762,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 560,
											"end": 561,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 557,
											"end": 558,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 553,
											"end": 562,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 548,
											"end": 562,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 548,
											"end": 562,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 513,
											"end": 762,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 513,
											"end": 762,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 513,
											"end": 762,
											"name": "tag",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 513,
											"end": 762,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 517,
											"end": 531,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 137,
											"end": 768,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 137,
											"end": 768,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 24,
											"end": 768,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 24,
											"end": 768,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 24,
											"end": 768,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 24,
											"end": 768,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 24,
											"end": 768,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 24,
											"end": 768,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 774,
											"end": 913,
											"name": "tag",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 774,
											"end": 913,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 820,
											"end": 825,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 858,
											"end": 864,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 845,
											"end": 865,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 836,
											"end": 865,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 836,
											"end": 865,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 874,
											"end": 907,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 901,
											"end": 906,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 874,
											"end": 907,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 874,
											"end": 907,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 874,
											"end": 907,
											"name": "tag",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 874,
											"end": 907,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 774,
											"end": 913,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 774,
											"end": 913,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 774,
											"end": 913,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 774,
											"end": 913,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 774,
											"end": 913,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 936,
											"end": 1321,
											"name": "tag",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 936,
											"end": 1321,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1018,
											"end": 1023,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1067,
											"end": 1070,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1060,
											"end": 1064,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 1052,
											"end": 1058,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1048,
											"end": 1065,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1044,
											"end": 1071,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 1034,
											"end": 1156,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 1034,
											"end": 1156,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1075,
											"end": 1154,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 1075,
											"end": 1154,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 1075,
											"end": 1154,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1075,
											"end": 1154,
											"name": "tag",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 1075,
											"end": 1154,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1034,
											"end": 1156,
											"name": "tag",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 1034,
											"end": 1156,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1185,
											"end": 1191,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1179,
											"end": 1192,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1210,
											"end": 1315,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 1311,
											"end": 1314,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1303,
											"end": 1309,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1296,
											"end": 1300,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1288,
											"end": 1294,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 1284,
											"end": 1301,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1210,
											"end": 1315,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 1210,
											"end": 1315,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1210,
											"end": 1315,
											"name": "tag",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 1210,
											"end": 1315,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1201,
											"end": 1315,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1201,
											"end": 1315,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1024,
											"end": 1321,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 936,
											"end": 1321,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 936,
											"end": 1321,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 936,
											"end": 1321,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 936,
											"end": 1321,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 936,
											"end": 1321,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1327,
											"end": 1492,
											"name": "tag",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 1327,
											"end": 1492,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1386,
											"end": 1391,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1424,
											"end": 1430,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1411,
											"end": 1431,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 1402,
											"end": 1431,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1402,
											"end": 1431,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1440,
											"end": 1486,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 1480,
											"end": 1485,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1440,
											"end": 1486,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 1440,
											"end": 1486,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1440,
											"end": 1486,
											"name": "tag",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 1440,
											"end": 1486,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1327,
											"end": 1492,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1327,
											"end": 1492,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1327,
											"end": 1492,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1327,
											"end": 1492,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1327,
											"end": 1492,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1498,
											"end": 1665,
											"name": "tag",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 1498,
											"end": 1665,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1558,
											"end": 1563,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1596,
											"end": 1602,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1583,
											"end": 1603,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 1574,
											"end": 1603,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1574,
											"end": 1603,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1612,
											"end": 1659,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 1653,
											"end": 1658,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1612,
											"end": 1659,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 1612,
											"end": 1659,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1612,
											"end": 1659,
											"name": "tag",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 1612,
											"end": 1659,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1498,
											"end": 1665,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1498,
											"end": 1665,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1498,
											"end": 1665,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1498,
											"end": 1665,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1498,
											"end": 1665,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1671,
											"end": 1814,
											"name": "tag",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 1671,
											"end": 1814,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1728,
											"end": 1733,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1759,
											"end": 1765,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1753,
											"end": 1766,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1744,
											"end": 1766,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1744,
											"end": 1766,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1775,
											"end": 1808,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "57"
										},
										{
											"begin": 1802,
											"end": 1807,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1775,
											"end": 1808,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 1775,
											"end": 1808,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1775,
											"end": 1808,
											"name": "tag",
											"source": 1,
											"value": "57"
										},
										{
											"begin": 1775,
											"end": 1808,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1671,
											"end": 1814,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1671,
											"end": 1814,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1671,
											"end": 1814,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1671,
											"end": 1814,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1671,
											"end": 1814,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1820,
											"end": 2374,
											"name": "tag",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 1820,
											"end": 2374,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1915,
											"end": 1921,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1964,
											"end": 1966,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1952,
											"end": 1961,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1943,
											"end": 1950,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1939,
											"end": 1962,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1935,
											"end": 1967,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 1932,
											"end": 2051,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1932,
											"end": 2051,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 1932,
											"end": 2051,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1970,
											"end": 2049,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 1970,
											"end": 2049,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "62"
										},
										{
											"begin": 1970,
											"end": 2049,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1970,
											"end": 2049,
											"name": "tag",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 1970,
											"end": 2049,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1932,
											"end": 2051,
											"name": "tag",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 1932,
											"end": 2051,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2111,
											"end": 2112,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2100,
											"end": 2109,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2096,
											"end": 2113,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2090,
											"end": 2114,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2141,
											"end": 2159,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2133,
											"end": 2139,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2130,
											"end": 2160,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 2127,
											"end": 2244,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2127,
											"end": 2244,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "63"
										},
										{
											"begin": 2127,
											"end": 2244,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2163,
											"end": 2242,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 2163,
											"end": 2242,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 2163,
											"end": 2242,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2163,
											"end": 2242,
											"name": "tag",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 2163,
											"end": 2242,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2127,
											"end": 2244,
											"name": "tag",
											"source": 1,
											"value": "63"
										},
										{
											"begin": 2127,
											"end": 2244,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2268,
											"end": 2357,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "66"
										},
										{
											"begin": 2349,
											"end": 2356,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2340,
											"end": 2346,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2329,
											"end": 2338,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 2325,
											"end": 2347,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2268,
											"end": 2357,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 2268,
											"end": 2357,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2268,
											"end": 2357,
											"name": "tag",
											"source": 1,
											"value": "66"
										},
										{
											"begin": 2268,
											"end": 2357,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2258,
											"end": 2357,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2258,
											"end": 2357,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2061,
											"end": 2367,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1820,
											"end": 2374,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1820,
											"end": 2374,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1820,
											"end": 2374,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1820,
											"end": 2374,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1820,
											"end": 2374,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 2380,
											"end": 3053,
											"name": "tag",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 2380,
											"end": 3053,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2484,
											"end": 2490,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2492,
											"end": 2498,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2500,
											"end": 2506,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2549,
											"end": 2551,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 2537,
											"end": 2546,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2528,
											"end": 2535,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 2524,
											"end": 2547,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2520,
											"end": 2552,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 2517,
											"end": 2636,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2517,
											"end": 2636,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 2517,
											"end": 2636,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2555,
											"end": 2634,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "69"
										},
										{
											"begin": 2555,
											"end": 2634,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "62"
										},
										{
											"begin": 2555,
											"end": 2634,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2555,
											"end": 2634,
											"name": "tag",
											"source": 1,
											"value": "69"
										},
										{
											"begin": 2555,
											"end": 2634,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2517,
											"end": 2636,
											"name": "tag",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 2517,
											"end": 2636,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2675,
											"end": 2676,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2700,
											"end": 2766,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "70"
										},
										{
											"begin": 2758,
											"end": 2765,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 2749,
											"end": 2755,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2738,
											"end": 2747,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 2734,
											"end": 2756,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2700,
											"end": 2766,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 2700,
											"end": 2766,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2700,
											"end": 2766,
											"name": "tag",
											"source": 1,
											"value": "70"
										},
										{
											"begin": 2700,
											"end": 2766,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2690,
											"end": 2766,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 2690,
											"end": 2766,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2646,
											"end": 2776,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2815,
											"end": 2817,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2841,
											"end": 2908,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 2900,
											"end": 2907,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 2891,
											"end": 2897,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2880,
											"end": 2889,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 2876,
											"end": 2898,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2841,
											"end": 2908,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 2841,
											"end": 2908,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2841,
											"end": 2908,
											"name": "tag",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 2841,
											"end": 2908,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2831,
											"end": 2908,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2831,
											"end": 2908,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2786,
											"end": 2918,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2957,
											"end": 2959,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2983,
											"end": 3036,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "72"
										},
										{
											"begin": 3028,
											"end": 3035,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 3019,
											"end": 3025,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3008,
											"end": 3017,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 3004,
											"end": 3026,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2983,
											"end": 3036,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 2983,
											"end": 3036,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2983,
											"end": 3036,
											"name": "tag",
											"source": 1,
											"value": "72"
										},
										{
											"begin": 2983,
											"end": 3036,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2973,
											"end": 3036,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2973,
											"end": 3036,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2928,
											"end": 3046,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2380,
											"end": 3053,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2380,
											"end": 3053,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2380,
											"end": 3053,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2380,
											"end": 3053,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2380,
											"end": 3053,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2380,
											"end": 3053,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 3059,
											"end": 3410,
											"name": "tag",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 3059,
											"end": 3410,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3129,
											"end": 3135,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3178,
											"end": 3180,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3166,
											"end": 3175,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3157,
											"end": 3164,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3153,
											"end": 3176,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3149,
											"end": 3181,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 3146,
											"end": 3265,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3146,
											"end": 3265,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "74"
										},
										{
											"begin": 3146,
											"end": 3265,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3184,
											"end": 3263,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "75"
										},
										{
											"begin": 3184,
											"end": 3263,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "62"
										},
										{
											"begin": 3184,
											"end": 3263,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3184,
											"end": 3263,
											"name": "tag",
											"source": 1,
											"value": "75"
										},
										{
											"begin": 3184,
											"end": 3263,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3146,
											"end": 3265,
											"name": "tag",
											"source": 1,
											"value": "74"
										},
										{
											"begin": 3146,
											"end": 3265,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3304,
											"end": 3305,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3329,
											"end": 3393,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "76"
										},
										{
											"begin": 3385,
											"end": 3392,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3376,
											"end": 3382,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3365,
											"end": 3374,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 3361,
											"end": 3383,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3329,
											"end": 3393,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 3329,
											"end": 3393,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3329,
											"end": 3393,
											"name": "tag",
											"source": 1,
											"value": "76"
										},
										{
											"begin": 3329,
											"end": 3393,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3319,
											"end": 3393,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3319,
											"end": 3393,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3275,
											"end": 3403,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3059,
											"end": 3410,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3059,
											"end": 3410,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3059,
											"end": 3410,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3059,
											"end": 3410,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3059,
											"end": 3410,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 3416,
											"end": 3595,
											"name": "tag",
											"source": 1,
											"value": "77"
										},
										{
											"begin": 3416,
											"end": 3595,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3485,
											"end": 3495,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3506,
											"end": 3552,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "79"
										},
										{
											"begin": 3548,
											"end": 3551,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3540,
											"end": 3546,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3506,
											"end": 3552,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 3506,
											"end": 3552,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3506,
											"end": 3552,
											"name": "tag",
											"source": 1,
											"value": "79"
										},
										{
											"begin": 3506,
											"end": 3552,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3584,
											"end": 3588,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3579,
											"end": 3582,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3575,
											"end": 3589,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3561,
											"end": 3589,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3561,
											"end": 3589,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3416,
											"end": 3595,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3416,
											"end": 3595,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3416,
											"end": 3595,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3416,
											"end": 3595,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3416,
											"end": 3595,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 3601,
											"end": 3709,
											"name": "tag",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 3601,
											"end": 3709,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3678,
											"end": 3702,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "82"
										},
										{
											"begin": 3696,
											"end": 3701,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3678,
											"end": 3702,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "83"
										},
										{
											"begin": 3678,
											"end": 3702,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3678,
											"end": 3702,
											"name": "tag",
											"source": 1,
											"value": "82"
										},
										{
											"begin": 3678,
											"end": 3702,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3673,
											"end": 3676,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3666,
											"end": 3703,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3601,
											"end": 3709,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3601,
											"end": 3709,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3601,
											"end": 3709,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 3747,
											"end": 4441,
											"name": "tag",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 3747,
											"end": 4441,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3883,
											"end": 3935,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "86"
										},
										{
											"begin": 3929,
											"end": 3934,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3883,
											"end": 3935,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "87"
										},
										{
											"begin": 3883,
											"end": 3935,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3883,
											"end": 3935,
											"name": "tag",
											"source": 1,
											"value": "86"
										},
										{
											"begin": 3883,
											"end": 3935,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3951,
											"end": 4035,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "88"
										},
										{
											"begin": 4028,
											"end": 4034,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4023,
											"end": 4026,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3951,
											"end": 4035,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "89"
										},
										{
											"begin": 3951,
											"end": 4035,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3951,
											"end": 4035,
											"name": "tag",
											"source": 1,
											"value": "88"
										},
										{
											"begin": 3951,
											"end": 4035,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3944,
											"end": 4035,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3944,
											"end": 4035,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4059,
											"end": 4113,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "90"
										},
										{
											"begin": 4107,
											"end": 4112,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4059,
											"end": 4113,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "91"
										},
										{
											"begin": 4059,
											"end": 4113,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4059,
											"end": 4113,
											"name": "tag",
											"source": 1,
											"value": "90"
										},
										{
											"begin": 4059,
											"end": 4113,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4136,
											"end": 4143,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4167,
											"end": 4168,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4152,
											"end": 4434,
											"name": "tag",
											"source": 1,
											"value": "92"
										},
										{
											"begin": 4152,
											"end": 4434,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4177,
											"end": 4183,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4174,
											"end": 4175,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4171,
											"end": 4184,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 4152,
											"end": 4434,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4152,
											"end": 4434,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "94"
										},
										{
											"begin": 4152,
											"end": 4434,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4253,
											"end": 4259,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4247,
											"end": 4260,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4280,
											"end": 4343,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "95"
										},
										{
											"begin": 4339,
											"end": 4342,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 4324,
											"end": 4337,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4280,
											"end": 4343,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "77"
										},
										{
											"begin": 4280,
											"end": 4343,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4280,
											"end": 4343,
											"name": "tag",
											"source": 1,
											"value": "95"
										},
										{
											"begin": 4280,
											"end": 4343,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4273,
											"end": 4343,
											"name": "SWAP7",
											"source": 1
										},
										{
											"begin": 4273,
											"end": 4343,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4366,
											"end": 4424,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "96"
										},
										{
											"begin": 4417,
											"end": 4423,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4366,
											"end": 4424,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "97"
										},
										{
											"begin": 4366,
											"end": 4424,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4366,
											"end": 4424,
											"name": "tag",
											"source": 1,
											"value": "96"
										},
										{
											"begin": 4366,
											"end": 4424,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4356,
											"end": 4424,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4356,
											"end": 4424,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4212,
											"end": 4434,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4199,
											"end": 4200,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 4196,
											"end": 4197,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4192,
											"end": 4201,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4187,
											"end": 4201,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4187,
											"end": 4201,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4152,
											"end": 4434,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "92"
										},
										{
											"begin": 4152,
											"end": 4434,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4152,
											"end": 4434,
											"name": "tag",
											"source": 1,
											"value": "94"
										},
										{
											"begin": 4152,
											"end": 4434,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4156,
											"end": 4170,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3859,
											"end": 4441,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3859,
											"end": 4441,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3859,
											"end": 4441,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3747,
											"end": 4441,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3747,
											"end": 4441,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3747,
											"end": 4441,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 4447,
											"end": 4565,
											"name": "tag",
											"source": 1,
											"value": "98"
										},
										{
											"begin": 4447,
											"end": 4565,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4534,
											"end": 4558,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 4552,
											"end": 4557,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4534,
											"end": 4558,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "101"
										},
										{
											"begin": 4534,
											"end": 4558,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4534,
											"end": 4558,
											"name": "tag",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 4534,
											"end": 4558,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4529,
											"end": 4532,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4522,
											"end": 4559,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4447,
											"end": 4565,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4447,
											"end": 4565,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4447,
											"end": 4565,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 4571,
											"end": 4793,
											"name": "tag",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 4571,
											"end": 4793,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4664,
											"end": 4668,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4702,
											"end": 4704,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4691,
											"end": 4700,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4687,
											"end": 4705,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4679,
											"end": 4705,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4679,
											"end": 4705,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4715,
											"end": 4786,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "103"
										},
										{
											"begin": 4783,
											"end": 4784,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4772,
											"end": 4781,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4768,
											"end": 4785,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4759,
											"end": 4765,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 4715,
											"end": 4786,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "98"
										},
										{
											"begin": 4715,
											"end": 4786,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4715,
											"end": 4786,
											"name": "tag",
											"source": 1,
											"value": "103"
										},
										{
											"begin": 4715,
											"end": 4786,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4571,
											"end": 4793,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4571,
											"end": 4793,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4571,
											"end": 4793,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4571,
											"end": 4793,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4571,
											"end": 4793,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 4799,
											"end": 5223,
											"name": "tag",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 4799,
											"end": 5223,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4966,
											"end": 4970,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5004,
											"end": 5006,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 4993,
											"end": 5002,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4989,
											"end": 5007,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4981,
											"end": 5007,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4981,
											"end": 5007,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5017,
											"end": 5088,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "105"
										},
										{
											"begin": 5085,
											"end": 5086,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5074,
											"end": 5083,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5070,
											"end": 5087,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5061,
											"end": 5067,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5017,
											"end": 5088,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "98"
										},
										{
											"begin": 5017,
											"end": 5088,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5017,
											"end": 5088,
											"name": "tag",
											"source": 1,
											"value": "105"
										},
										{
											"begin": 5017,
											"end": 5088,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5098,
											"end": 5216,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "106"
										},
										{
											"begin": 5212,
											"end": 5214,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5201,
											"end": 5210,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5197,
											"end": 5215,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5188,
											"end": 5194,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5098,
											"end": 5216,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 5098,
											"end": 5216,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5098,
											"end": 5216,
											"name": "tag",
											"source": 1,
											"value": "106"
										},
										{
											"begin": 5098,
											"end": 5216,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4799,
											"end": 5223,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 4799,
											"end": 5223,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4799,
											"end": 5223,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4799,
											"end": 5223,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4799,
											"end": 5223,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4799,
											"end": 5223,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 5229,
											"end": 5358,
											"name": "tag",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 5229,
											"end": 5358,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5263,
											"end": 5269,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5290,
											"end": 5310,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "108"
										},
										{
											"begin": 5290,
											"end": 5310,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "109"
										},
										{
											"begin": 5290,
											"end": 5310,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5290,
											"end": 5310,
											"name": "tag",
											"source": 1,
											"value": "108"
										},
										{
											"begin": 5290,
											"end": 5310,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5280,
											"end": 5310,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5280,
											"end": 5310,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5319,
											"end": 5352,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "110"
										},
										{
											"begin": 5347,
											"end": 5351,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5339,
											"end": 5345,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5319,
											"end": 5352,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "111"
										},
										{
											"begin": 5319,
											"end": 5352,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5319,
											"end": 5352,
											"name": "tag",
											"source": 1,
											"value": "110"
										},
										{
											"begin": 5319,
											"end": 5352,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5229,
											"end": 5358,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5229,
											"end": 5358,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5229,
											"end": 5358,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5229,
											"end": 5358,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 5364,
											"end": 5439,
											"name": "tag",
											"source": 1,
											"value": "109"
										},
										{
											"begin": 5364,
											"end": 5439,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5397,
											"end": 5403,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5430,
											"end": 5432,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5424,
											"end": 5433,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5414,
											"end": 5433,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5414,
											"end": 5433,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5364,
											"end": 5439,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5364,
											"end": 5439,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 5445,
											"end": 5756,
											"name": "tag",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 5445,
											"end": 5756,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5522,
											"end": 5526,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5612,
											"end": 5630,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5604,
											"end": 5610,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5601,
											"end": 5631,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 5598,
											"end": 5654,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5598,
											"end": 5654,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "114"
										},
										{
											"begin": 5598,
											"end": 5654,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5634,
											"end": 5652,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "115"
										},
										{
											"begin": 5634,
											"end": 5652,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "116"
										},
										{
											"begin": 5634,
											"end": 5652,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5634,
											"end": 5652,
											"name": "tag",
											"source": 1,
											"value": "115"
										},
										{
											"begin": 5634,
											"end": 5652,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5598,
											"end": 5654,
											"name": "tag",
											"source": 1,
											"value": "114"
										},
										{
											"begin": 5598,
											"end": 5654,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5684,
											"end": 5688,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5676,
											"end": 5682,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5672,
											"end": 5689,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 5664,
											"end": 5689,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5664,
											"end": 5689,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5744,
											"end": 5748,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5738,
											"end": 5742,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5734,
											"end": 5749,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5726,
											"end": 5749,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5726,
											"end": 5749,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5445,
											"end": 5756,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5445,
											"end": 5756,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5445,
											"end": 5756,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5445,
											"end": 5756,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 5762,
											"end": 5860,
											"name": "tag",
											"source": 1,
											"value": "91"
										},
										{
											"begin": 5762,
											"end": 5860,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5827,
											"end": 5831,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5850,
											"end": 5853,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5842,
											"end": 5853,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5842,
											"end": 5853,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5762,
											"end": 5860,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5762,
											"end": 5860,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5762,
											"end": 5860,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5762,
											"end": 5860,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 5866,
											"end": 5970,
											"name": "tag",
											"source": 1,
											"value": "87"
										},
										{
											"begin": 5866,
											"end": 5970,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5931,
											"end": 5937,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5959,
											"end": 5963,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 5949,
											"end": 5963,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5949,
											"end": 5963,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5866,
											"end": 5970,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5866,
											"end": 5970,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5866,
											"end": 5970,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5866,
											"end": 5970,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 5976,
											"end": 6087,
											"name": "tag",
											"source": 1,
											"value": "97"
										},
										{
											"begin": 5976,
											"end": 6087,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6044,
											"end": 6048,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6076,
											"end": 6080,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6071,
											"end": 6074,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6067,
											"end": 6081,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6059,
											"end": 6081,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6059,
											"end": 6081,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5976,
											"end": 6087,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5976,
											"end": 6087,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5976,
											"end": 6087,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5976,
											"end": 6087,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 6093,
											"end": 6236,
											"name": "tag",
											"source": 1,
											"value": "89"
										},
										{
											"begin": 6093,
											"end": 6236,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6190,
											"end": 6201,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6227,
											"end": 6230,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6212,
											"end": 6230,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6212,
											"end": 6230,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6093,
											"end": 6236,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 6093,
											"end": 6236,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6093,
											"end": 6236,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6093,
											"end": 6236,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6093,
											"end": 6236,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 6242,
											"end": 6338,
											"name": "tag",
											"source": 1,
											"value": "83"
										},
										{
											"begin": 6242,
											"end": 6338,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6279,
											"end": 6286,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6308,
											"end": 6332,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "122"
										},
										{
											"begin": 6326,
											"end": 6331,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6308,
											"end": 6332,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "123"
										},
										{
											"begin": 6308,
											"end": 6332,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 6308,
											"end": 6332,
											"name": "tag",
											"source": 1,
											"value": "122"
										},
										{
											"begin": 6308,
											"end": 6332,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6297,
											"end": 6332,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6297,
											"end": 6332,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6242,
											"end": 6338,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6242,
											"end": 6338,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6242,
											"end": 6338,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6242,
											"end": 6338,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 6344,
											"end": 6453,
											"name": "tag",
											"source": 1,
											"value": "124"
										},
										{
											"begin": 6344,
											"end": 6453,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6394,
											"end": 6401,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6423,
											"end": 6447,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "126"
										},
										{
											"begin": 6441,
											"end": 6446,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6423,
											"end": 6447,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "83"
										},
										{
											"begin": 6423,
											"end": 6447,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 6423,
											"end": 6447,
											"name": "tag",
											"source": 1,
											"value": "126"
										},
										{
											"begin": 6423,
											"end": 6447,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6412,
											"end": 6447,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6412,
											"end": 6447,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6344,
											"end": 6453,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6344,
											"end": 6453,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6344,
											"end": 6453,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6344,
											"end": 6453,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 6459,
											"end": 6569,
											"name": "tag",
											"source": 1,
											"value": "127"
										},
										{
											"begin": 6459,
											"end": 6569,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6510,
											"end": 6517,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6539,
											"end": 6563,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "129"
										},
										{
											"begin": 6557,
											"end": 6562,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6539,
											"end": 6563,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "83"
										},
										{
											"begin": 6539,
											"end": 6563,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 6539,
											"end": 6563,
											"name": "tag",
											"source": 1,
											"value": "129"
										},
										{
											"begin": 6539,
											"end": 6563,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6528,
											"end": 6563,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6528,
											"end": 6563,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6459,
											"end": 6569,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6459,
											"end": 6569,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6459,
											"end": 6569,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6459,
											"end": 6569,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 6575,
											"end": 6701,
											"name": "tag",
											"source": 1,
											"value": "123"
										},
										{
											"begin": 6575,
											"end": 6701,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6612,
											"end": 6619,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6652,
											"end": 6694,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6645,
											"end": 6650,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6641,
											"end": 6695,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6630,
											"end": 6695,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6630,
											"end": 6695,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6575,
											"end": 6701,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6575,
											"end": 6701,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6575,
											"end": 6701,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6575,
											"end": 6701,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 6707,
											"end": 6784,
											"name": "tag",
											"source": 1,
											"value": "101"
										},
										{
											"begin": 6707,
											"end": 6784,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6744,
											"end": 6751,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6773,
											"end": 6778,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6762,
											"end": 6778,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6762,
											"end": 6778,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6707,
											"end": 6784,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6707,
											"end": 6784,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6707,
											"end": 6784,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6707,
											"end": 6784,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 6790,
											"end": 7071,
											"name": "tag",
											"source": 1,
											"value": "111"
										},
										{
											"begin": 6790,
											"end": 7071,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6873,
											"end": 6900,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "133"
										},
										{
											"begin": 6895,
											"end": 6899,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6873,
											"end": 6900,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "134"
										},
										{
											"begin": 6873,
											"end": 6900,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 6873,
											"end": 6900,
											"name": "tag",
											"source": 1,
											"value": "133"
										},
										{
											"begin": 6873,
											"end": 6900,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6865,
											"end": 6871,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6861,
											"end": 6901,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7003,
											"end": 7009,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6991,
											"end": 7001,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6988,
											"end": 7010,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 6967,
											"end": 6985,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6955,
											"end": 6965,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6952,
											"end": 6986,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 6949,
											"end": 7011,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 6946,
											"end": 7034,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 6946,
											"end": 7034,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "135"
										},
										{
											"begin": 6946,
											"end": 7034,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7014,
											"end": 7032,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "136"
										},
										{
											"begin": 7014,
											"end": 7032,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "116"
										},
										{
											"begin": 7014,
											"end": 7032,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 7014,
											"end": 7032,
											"name": "tag",
											"source": 1,
											"value": "136"
										},
										{
											"begin": 7014,
											"end": 7032,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6946,
											"end": 7034,
											"name": "tag",
											"source": 1,
											"value": "135"
										},
										{
											"begin": 6946,
											"end": 7034,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7054,
											"end": 7064,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7050,
											"end": 7052,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7043,
											"end": 7065,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6833,
											"end": 7071,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6790,
											"end": 7071,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6790,
											"end": 7071,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6790,
											"end": 7071,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 7077,
											"end": 7257,
											"name": "tag",
											"source": 1,
											"value": "116"
										},
										{
											"begin": 7077,
											"end": 7257,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7125,
											"end": 7202,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7122,
											"end": 7123,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7115,
											"end": 7203,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7222,
											"end": 7226,
											"name": "PUSH",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 7219,
											"end": 7220,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 7212,
											"end": 7227,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7246,
											"end": 7250,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 7243,
											"end": 7244,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7236,
											"end": 7251,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 7263,
											"end": 7380,
											"name": "tag",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 7263,
											"end": 7380,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7372,
											"end": 7373,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7369,
											"end": 7370,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7362,
											"end": 7374,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 7386,
											"end": 7503,
											"name": "tag",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 7386,
											"end": 7503,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7495,
											"end": 7496,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7492,
											"end": 7493,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7485,
											"end": 7497,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 7509,
											"end": 7626,
											"name": "tag",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 7509,
											"end": 7626,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7618,
											"end": 7619,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7615,
											"end": 7616,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7608,
											"end": 7620,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 7632,
											"end": 7749,
											"name": "tag",
											"source": 1,
											"value": "62"
										},
										{
											"begin": 7632,
											"end": 7749,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7741,
											"end": 7742,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7738,
											"end": 7739,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7731,
											"end": 7743,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 7755,
											"end": 7857,
											"name": "tag",
											"source": 1,
											"value": "134"
										},
										{
											"begin": 7755,
											"end": 7857,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7796,
											"end": 7802,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7847,
											"end": 7849,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 7843,
											"end": 7850,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 7838,
											"end": 7840,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 7831,
											"end": 7836,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7827,
											"end": 7841,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7823,
											"end": 7851,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7813,
											"end": 7851,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7813,
											"end": 7851,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7755,
											"end": 7857,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7755,
											"end": 7857,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7755,
											"end": 7857,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7755,
											"end": 7857,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 7863,
											"end": 7985,
											"name": "tag",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 7863,
											"end": 7985,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7936,
											"end": 7960,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "144"
										},
										{
											"begin": 7954,
											"end": 7959,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7936,
											"end": 7960,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "83"
										},
										{
											"begin": 7936,
											"end": 7960,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 7936,
											"end": 7960,
											"name": "tag",
											"source": 1,
											"value": "144"
										},
										{
											"begin": 7936,
											"end": 7960,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7929,
											"end": 7934,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7926,
											"end": 7961,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 7916,
											"end": 7979,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "145"
										},
										{
											"begin": 7916,
											"end": 7979,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7975,
											"end": 7976,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7972,
											"end": 7973,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7965,
											"end": 7977,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 7916,
											"end": 7979,
											"name": "tag",
											"source": 1,
											"value": "145"
										},
										{
											"begin": 7916,
											"end": 7979,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7863,
											"end": 7985,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7863,
											"end": 7985,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 7991,
											"end": 8139,
											"name": "tag",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 7991,
											"end": 8139,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8077,
											"end": 8114,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "147"
										},
										{
											"begin": 8108,
											"end": 8113,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8077,
											"end": 8114,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "124"
										},
										{
											"begin": 8077,
											"end": 8114,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 8077,
											"end": 8114,
											"name": "tag",
											"source": 1,
											"value": "147"
										},
										{
											"begin": 8077,
											"end": 8114,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8070,
											"end": 8075,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8067,
											"end": 8115,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 8057,
											"end": 8133,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "148"
										},
										{
											"begin": 8057,
											"end": 8133,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 8129,
											"end": 8130,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8126,
											"end": 8127,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 8119,
											"end": 8131,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 8057,
											"end": 8133,
											"name": "tag",
											"source": 1,
											"value": "148"
										},
										{
											"begin": 8057,
											"end": 8133,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7991,
											"end": 8139,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7991,
											"end": 8139,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 8145,
											"end": 8295,
											"name": "tag",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 8145,
											"end": 8295,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8232,
											"end": 8270,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "150"
										},
										{
											"begin": 8264,
											"end": 8269,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8232,
											"end": 8270,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "127"
										},
										{
											"begin": 8232,
											"end": 8270,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 8232,
											"end": 8270,
											"name": "tag",
											"source": 1,
											"value": "150"
										},
										{
											"begin": 8232,
											"end": 8270,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8225,
											"end": 8230,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8222,
											"end": 8271,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 8212,
											"end": 8289,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "151"
										},
										{
											"begin": 8212,
											"end": 8289,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 8285,
											"end": 8286,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8282,
											"end": 8283,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 8275,
											"end": 8287,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 8212,
											"end": 8289,
											"name": "tag",
											"source": 1,
											"value": "151"
										},
										{
											"begin": 8212,
											"end": 8289,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8145,
											"end": 8295,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8145,
											"end": 8295,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 8301,
											"end": 8423,
											"name": "tag",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 8301,
											"end": 8423,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8374,
											"end": 8398,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "153"
										},
										{
											"begin": 8392,
											"end": 8397,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8374,
											"end": 8398,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "101"
										},
										{
											"begin": 8374,
											"end": 8398,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 8374,
											"end": 8398,
											"name": "tag",
											"source": 1,
											"value": "153"
										},
										{
											"begin": 8374,
											"end": 8398,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8367,
											"end": 8372,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8364,
											"end": 8399,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 8354,
											"end": 8417,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "154"
										},
										{
											"begin": 8354,
											"end": 8417,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 8413,
											"end": 8414,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8410,
											"end": 8411,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 8403,
											"end": 8415,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 8354,
											"end": 8417,
											"name": "tag",
											"source": 1,
											"value": "154"
										},
										{
											"begin": 8354,
											"end": 8417,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8301,
											"end": 8423,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8301,
											"end": 8423,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"CalcLpPrice(address,address,address)": "20ae0b6d"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"lpAddress\",\"type\":\"address\"},{\"internalType\":\"contract Router\",\"name\":\"routerAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"busd\",\"type\":\"address\"}],\"name\":\"CalcLpPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/LpPrice.sol\":\"LpUtils\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/LpPrice.sol\":{\"keccak256\":\"0x4bf0bfbe6cdb485458653d5cda6ebfdccc479c20d9c92aeb7ec83765a8ba97b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://165174297ae7608246e2b9e6fc90ac643c5681e1a26dcc094bb403b8d80e11c3\",\"dweb:/ipfs/QmXceoPGDR2khQN3tk8676d6w3eworpLGrg16FvSgJfwk5\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 333,
								"contract": "contracts/LpPrice.sol:LpUtils",
								"label": "amount",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"Router": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								},
								{
									"internalType": "address[2]",
									"name": "path",
									"type": "address[2]"
								}
							],
							"name": "getAmountsOut",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"getAmountsOut(uint256,address[2])": "bd5f68b0"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"address[2]\",\"name\":\"path\",\"type\":\"address[2]\"}],\"name\":\"getAmountsOut\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/LpPrice.sol\":\"Router\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/LpPrice.sol\":{\"keccak256\":\"0x4bf0bfbe6cdb485458653d5cda6ebfdccc479c20d9c92aeb7ec83765a8ba97b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://165174297ae7608246e2b9e6fc90ac643c5681e1a26dcc094bb403b8d80e11c3\",\"dweb:/ipfs/QmXceoPGDR2khQN3tk8676d6w3eworpLGrg16FvSgJfwk5\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "2072",
				"formattedMessage": "Warning: Unused local variable.\n   --> contracts/LpPrice.sol:244:9:\n    |\n244 |         uint256[] memory price0 = routerAddress.getAmountsOut(amount,[busd, busd]);\n    |         ^^^^^^^^^^^^^^^^^^^^^^^\n\n",
				"message": "Unused local variable.",
				"severity": "warning",
				"sourceLocation": {
					"end": 9113,
					"file": "contracts/LpPrice.sol",
					"start": 9090
				},
				"type": "Warning"
			}
		],
		"sources": {
			"contracts/LpPrice.sol": {
				"ast": {
					"absolutePath": "contracts/LpPrice.sol",
					"exportedSymbols": {
						"Address": [
							317
						],
						"IERC20": [
							25
						],
						"LpUtils": [
							369
						],
						"Router": [
							330
						]
					},
					"id": 370,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 25,
							"linearizedBaseContracts": [
								25
							],
							"name": "IERC20",
							"nameLocation": "70:6:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 2,
										"nodeType": "StructuredDocumentation",
										"src": "84:68:0",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 7,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "167:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "178:2:0"
									},
									"returnParameters": {
										"id": 6,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 7,
												"src": "204:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "204:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "203:9:0"
									},
									"scope": 25,
									"src": "158:55:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "0dfe1681",
									"id": 12,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "token0",
									"nameLocation": "230:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 8,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "236:2:0"
									},
									"returnParameters": {
										"id": 11,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 10,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 12,
												"src": "262:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 9,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "262:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "261:9:0"
									},
									"scope": 25,
									"src": "221:50:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "d21220a7",
									"id": 17,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "token1",
									"nameLocation": "288:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 13,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "294:2:0"
									},
									"returnParameters": {
										"id": 16,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 15,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 17,
												"src": "320:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 14,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "320:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "319:9:0"
									},
									"scope": 25,
									"src": "279:50:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "70a08231",
									"id": 24,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "346:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 20,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 19,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "364:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "356:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 18,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "356:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "355:17:0"
									},
									"returnParameters": {
										"id": 23,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 22,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "396:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 21,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "396:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "395:9:0"
									},
									"scope": 25,
									"src": "337:68:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 370,
							"src": "60:348:0",
							"usedErrors": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"fullyImplemented": true,
							"id": 317,
							"linearizedBaseContracts": [
								317
							],
							"name": "Address",
							"nameLocation": "420:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 39,
										"nodeType": "Block",
										"src": "1486:260:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 37,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 33,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 28,
																"src": "1715:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 34,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "1715:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 35,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "1715:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 36,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1737:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1715:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 32,
												"id": 38,
												"nodeType": "Return",
												"src": "1708:30:0"
											}
										]
									},
									"documentation": {
										"id": 26,
										"nodeType": "StructuredDocumentation",
										"src": "435:979:0",
										"text": " @dev Returns true if `account` is a contract.\n [IMPORTANT]\n ====\n It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract.\n Among others, `isContract` will return false for the following\n types of addresses:\n  - an externally-owned account\n  - a contract in construction\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n ====\n [IMPORTANT]\n ====\n You shouldn't rely on `isContract` to protect against flash loan attacks!\n Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n constructor.\n ===="
									},
									"id": 40,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isContract",
									"nameLocation": "1429:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 28,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1448:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 40,
												"src": "1440:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 27,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1440:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1439:17:0"
									},
									"returnParameters": {
										"id": 32,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 31,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 40,
												"src": "1480:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 30,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1480:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1479:6:0"
									},
									"scope": 317,
									"src": "1420:326:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 73,
										"nodeType": "Block",
										"src": "2752:246:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 55,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 51,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "2779:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$317",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$317",
																				"typeString": "library Address"
																			}
																		],
																		"id": 50,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2771:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 49,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2771:7:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 52,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2771:13:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 53,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "2771:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 54,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 45,
																"src": "2796:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2771:31:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e6365",
															"id": 56,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2804:31:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															},
															"value": "Address: insufficient balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															}
														],
														"id": 48,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2763:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 57,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2763:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 58,
												"nodeType": "ExpressionStatement",
												"src": "2763:73:0"
											},
											{
												"assignments": [
													60,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 60,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "2855:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 73,
														"src": "2850:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 59,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "2850:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 67,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 65,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2898:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"id": 61,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 43,
																"src": "2868:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 62,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "2868:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 64,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 63,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 45,
																"src": "2890:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "2868:29:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 66,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2868:33:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2849:52:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 69,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 60,
															"src": "2920:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564",
															"id": 70,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2929:60:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															},
															"value": "Address: unable to send value, recipient may have reverted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															}
														],
														"id": 68,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2912:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 71,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2912:78:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 72,
												"nodeType": "ExpressionStatement",
												"src": "2912:78:0"
											}
										]
									},
									"documentation": {
										"id": 41,
										"nodeType": "StructuredDocumentation",
										"src": "1754:921:0",
										"text": " @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."
									},
									"id": 74,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendValue",
									"nameLocation": "2690:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 46,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 43,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "2716:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 74,
												"src": "2700:25:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 42,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2700:15:0",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 45,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2735:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 74,
												"src": "2727:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 44,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2727:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2699:43:0"
									},
									"returnParameters": {
										"id": 47,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2752:0:0"
									},
									"scope": 317,
									"src": "2681:317:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 90,
										"nodeType": "Block",
										"src": "3849:86:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 85,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 77,
															"src": "3880:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 86,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 79,
															"src": "3888:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 87,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3894:32:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															},
															"value": "Address: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															}
														],
														"id": 84,
														"name": "functionCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															91,
															111
														],
														"referencedDeclaration": 111,
														"src": "3867:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 88,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3867:60:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 83,
												"id": 89,
												"nodeType": "Return",
												"src": "3860:67:0"
											}
										]
									},
									"documentation": {
										"id": 75,
										"nodeType": "StructuredDocumentation",
										"src": "3006:748:0",
										"text": " @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason, it is bubbled up by this\n function (like regular Solidity function calls).\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert.\n _Available since v3.1._"
									},
									"id": 91,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "3769:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 80,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 77,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3790:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 91,
												"src": "3782:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 76,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3782:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 79,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3811:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 91,
												"src": "3798:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 78,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3798:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3781:35:0"
									},
									"returnParameters": {
										"id": 83,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 82,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 91,
												"src": "3835:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 81,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3835:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3834:14:0"
									},
									"scope": 317,
									"src": "3760:175:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 110,
										"nodeType": "Block",
										"src": "4316:78:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 104,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 94,
															"src": "4356:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 105,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 96,
															"src": "4364:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 106,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4370:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"id": 107,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 98,
															"src": "4373:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 103,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															131,
															181
														],
														"referencedDeclaration": 181,
														"src": "4334:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 108,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4334:52:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 102,
												"id": 109,
												"nodeType": "Return",
												"src": "4327:59:0"
											}
										]
									},
									"documentation": {
										"id": 92,
										"nodeType": "StructuredDocumentation",
										"src": "3943:216:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 111,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "4174:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 99,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 94,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4205:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 111,
												"src": "4197:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 93,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4197:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 96,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4235:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 111,
												"src": "4222:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 95,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4222:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 98,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "4264:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 111,
												"src": "4250:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 97,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "4250:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4186:97:0"
									},
									"returnParameters": {
										"id": 102,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 101,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 111,
												"src": "4302:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 100,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4302:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4301:14:0"
									},
									"scope": 317,
									"src": "4165:229:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 130,
										"nodeType": "Block",
										"src": "4916:113:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 124,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 114,
															"src": "4956:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 125,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 116,
															"src": "4964:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 126,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 118,
															"src": "4970:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564",
															"id": 127,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4977:43:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															},
															"value": "Address: low-level call with value failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															}
														],
														"id": 123,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															131,
															181
														],
														"referencedDeclaration": 181,
														"src": "4934:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 128,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4934:87:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 122,
												"id": 129,
												"nodeType": "Return",
												"src": "4927:94:0"
											}
										]
									},
									"documentation": {
										"id": 112,
										"nodeType": "StructuredDocumentation",
										"src": "4402:361:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`.\n _Available since v3.1._"
									},
									"id": 131,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "4778:21:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 119,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 114,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4818:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 131,
												"src": "4810:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 113,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4810:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 116,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4848:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 131,
												"src": "4835:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 115,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4835:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 118,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4871:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 131,
												"src": "4863:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 117,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4863:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4799:84:0"
									},
									"returnParameters": {
										"id": 122,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 121,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 131,
												"src": "4902:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 120,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4902:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4901:14:0"
									},
									"scope": 317,
									"src": "4769:260:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 180,
										"nodeType": "Block",
										"src": "5469:326:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 152,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 148,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "5496:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$317",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$317",
																				"typeString": "library Address"
																			}
																		],
																		"id": 147,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "5488:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 146,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "5488:7:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 149,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5488:13:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 150,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "5488:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 151,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 138,
																"src": "5513:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5488:30:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c",
															"id": 153,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5520:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															},
															"value": "Address: insufficient balance for call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															}
														],
														"id": 145,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5480:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 154,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5480:81:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 155,
												"nodeType": "ExpressionStatement",
												"src": "5480:81:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 158,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 134,
																	"src": "5591:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 157,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 40,
																"src": "5580:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 159,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5580:18:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 160,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5600:31:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																"typeString": "literal_string \"Address: call to non-contract\""
															},
															"value": "Address: call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																"typeString": "literal_string \"Address: call to non-contract\""
															}
														],
														"id": 156,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5572:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 161,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5572:60:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 162,
												"nodeType": "ExpressionStatement",
												"src": "5572:60:0"
											},
											{
												"assignments": [
													164,
													166
												],
												"declarations": [
													{
														"constant": false,
														"id": 164,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "5651:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 180,
														"src": "5646:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 163,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "5646:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 166,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "5673:10:0",
														"nodeType": "VariableDeclaration",
														"scope": 180,
														"src": "5660:23:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 165,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "5660:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 173,
												"initialValue": {
													"arguments": [
														{
															"id": 171,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 136,
															"src": "5713:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 167,
																"name": "target",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 134,
																"src": "5687:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 168,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "5687:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 170,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 169,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 138,
																"src": "5706:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "5687:25:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 172,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5687:31:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5645:73:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 175,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 164,
															"src": "5753:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 176,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 166,
															"src": "5762:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 177,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 140,
															"src": "5774:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 174,
														"name": "verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 316,
														"src": "5736:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 178,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5736:51:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 144,
												"id": 179,
												"nodeType": "Return",
												"src": "5729:58:0"
											}
										]
									},
									"documentation": {
										"id": 132,
										"nodeType": "StructuredDocumentation",
										"src": "5037:242:0",
										"text": " @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n with `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 181,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "5294:21:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 141,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 134,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "5334:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 181,
												"src": "5326:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 133,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5326:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 136,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5364:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 181,
												"src": "5351:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 135,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5351:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 138,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5387:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 181,
												"src": "5379:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 137,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5379:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 140,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5417:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 181,
												"src": "5403:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 139,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5403:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5315:121:0"
									},
									"returnParameters": {
										"id": 144,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 143,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 181,
												"src": "5455:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 142,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5455:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5454:14:0"
									},
									"scope": 317,
									"src": "5285:510:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 197,
										"nodeType": "Block",
										"src": "6080:99:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 192,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 184,
															"src": "6117:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 193,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 186,
															"src": "6125:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c207374617469632063616c6c206661696c6564",
															"id": 194,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6131:39:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															},
															"value": "Address: low-level static call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															}
														],
														"id": 191,
														"name": "functionStaticCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															198,
															233
														],
														"referencedDeclaration": 233,
														"src": "6098:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 195,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6098:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 190,
												"id": 196,
												"nodeType": "Return",
												"src": "6091:80:0"
											}
										]
									},
									"documentation": {
										"id": 182,
										"nodeType": "StructuredDocumentation",
										"src": "5803:171:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 198,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "5989:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 187,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 184,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6016:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 198,
												"src": "6008:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 183,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6008:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 186,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6037:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 198,
												"src": "6024:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 185,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6024:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6007:35:0"
									},
									"returnParameters": {
										"id": 190,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 189,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 198,
												"src": "6066:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 188,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6066:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6065:14:0"
									},
									"scope": 317,
									"src": "5980:199:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 232,
										"nodeType": "Block",
										"src": "6533:233:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 212,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 201,
																	"src": "6563:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 211,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 40,
																"src": "6552:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 213,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6552:18:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a207374617469632063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 214,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6572:38:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c79cc78e4f16ce3933a42b84c73868f93bb4a59c031a0acf576679de98c608a9",
																"typeString": "literal_string \"Address: static call to non-contract\""
															},
															"value": "Address: static call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c79cc78e4f16ce3933a42b84c73868f93bb4a59c031a0acf576679de98c608a9",
																"typeString": "literal_string \"Address: static call to non-contract\""
															}
														],
														"id": 210,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6544:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 215,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6544:67:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 216,
												"nodeType": "ExpressionStatement",
												"src": "6544:67:0"
											},
											{
												"assignments": [
													218,
													220
												],
												"declarations": [
													{
														"constant": false,
														"id": 218,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "6630:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 232,
														"src": "6625:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 217,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "6625:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 220,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "6652:10:0",
														"nodeType": "VariableDeclaration",
														"scope": 232,
														"src": "6639:23:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 219,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "6639:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 225,
												"initialValue": {
													"arguments": [
														{
															"id": 223,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 203,
															"src": "6684:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 221,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 201,
															"src": "6666:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 222,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "staticcall",
														"nodeType": "MemberAccess",
														"src": "6666:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) view returns (bool,bytes memory)"
														}
													},
													"id": 224,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6666:23:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6624:65:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 227,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 218,
															"src": "6724:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 228,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 220,
															"src": "6733:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 229,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 205,
															"src": "6745:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 226,
														"name": "verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 316,
														"src": "6707:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 230,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6707:51:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 209,
												"id": 231,
												"nodeType": "Return",
												"src": "6700:58:0"
											}
										]
									},
									"documentation": {
										"id": 199,
										"nodeType": "StructuredDocumentation",
										"src": "6187:178:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 233,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "6380:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 206,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 201,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6417:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 233,
												"src": "6409:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 200,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6409:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 203,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6447:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 233,
												"src": "6434:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 202,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6434:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 205,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "6476:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 233,
												"src": "6462:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 204,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6462:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6398:97:0"
									},
									"returnParameters": {
										"id": 209,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 208,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 233,
												"src": "6519:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 207,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6519:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6518:14:0"
									},
									"scope": 317,
									"src": "6371:395:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 249,
										"nodeType": "Block",
										"src": "7050:103:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 244,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 236,
															"src": "7089:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 245,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 238,
															"src": "7097:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564",
															"id": 246,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7103:41:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															},
															"value": "Address: low-level delegate call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															}
														],
														"id": 243,
														"name": "functionDelegateCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															250,
															285
														],
														"referencedDeclaration": 285,
														"src": "7068:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 247,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7068:77:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 242,
												"id": 248,
												"nodeType": "Return",
												"src": "7061:84:0"
											}
										]
									},
									"documentation": {
										"id": 234,
										"nodeType": "StructuredDocumentation",
										"src": "6774:173:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 250,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "6962:20:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 239,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 236,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6991:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 250,
												"src": "6983:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 235,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6983:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 238,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "7012:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 250,
												"src": "6999:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 237,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6999:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6982:35:0"
									},
									"returnParameters": {
										"id": 242,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 241,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 250,
												"src": "7036:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 240,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7036:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7035:14:0"
									},
									"scope": 317,
									"src": "6953:200:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 284,
										"nodeType": "Block",
										"src": "7506:237:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 264,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 253,
																	"src": "7536:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 263,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 40,
																"src": "7525:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 265,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7525:18:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 266,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7545:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520",
																"typeString": "literal_string \"Address: delegate call to non-contract\""
															},
															"value": "Address: delegate call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520",
																"typeString": "literal_string \"Address: delegate call to non-contract\""
															}
														],
														"id": 262,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7517:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 267,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7517:69:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 268,
												"nodeType": "ExpressionStatement",
												"src": "7517:69:0"
											},
											{
												"assignments": [
													270,
													272
												],
												"declarations": [
													{
														"constant": false,
														"id": 270,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "7605:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 284,
														"src": "7600:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 269,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "7600:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 272,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "7627:10:0",
														"nodeType": "VariableDeclaration",
														"scope": 284,
														"src": "7614:23:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 271,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "7614:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 277,
												"initialValue": {
													"arguments": [
														{
															"id": 275,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 255,
															"src": "7661:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 273,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 253,
															"src": "7641:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 274,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "delegatecall",
														"nodeType": "MemberAccess",
														"src": "7641:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) returns (bool,bytes memory)"
														}
													},
													"id": 276,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7641:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7599:67:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 279,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 270,
															"src": "7701:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 280,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 272,
															"src": "7710:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 281,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 257,
															"src": "7722:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 278,
														"name": "verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 316,
														"src": "7684:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 282,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7684:51:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 261,
												"id": 283,
												"nodeType": "Return",
												"src": "7677:58:0"
											}
										]
									},
									"documentation": {
										"id": 251,
										"nodeType": "StructuredDocumentation",
										"src": "7161:180:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 285,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "7356:20:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 258,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 253,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "7395:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 285,
												"src": "7387:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 252,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7387:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 255,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "7425:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 285,
												"src": "7412:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 254,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7412:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 257,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "7454:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 285,
												"src": "7440:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 256,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7440:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7376:97:0"
									},
									"returnParameters": {
										"id": 261,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 260,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 285,
												"src": "7492:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 259,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7492:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7491:14:0"
									},
									"scope": 317,
									"src": "7347:396:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 315,
										"nodeType": "Block",
										"src": "8135:548:0",
										"statements": [
											{
												"condition": {
													"id": 297,
													"name": "success",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 288,
													"src": "8150:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 313,
													"nodeType": "Block",
													"src": "8209:467:0",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 304,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 301,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 290,
																		"src": "8295:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 302,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "8295:17:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 303,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8315:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "8295:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 311,
																"nodeType": "Block",
																"src": "8610:55:0",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 308,
																					"name": "errorMessage",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 292,
																					"src": "8636:12:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				],
																				"id": 307,
																				"name": "revert",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					4294967277,
																					4294967277
																				],
																				"referencedDeclaration": 4294967277,
																				"src": "8629:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																					"typeString": "function (string memory) pure"
																				}
																			},
																			"id": 309,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "8629:20:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 310,
																		"nodeType": "ExpressionStatement",
																		"src": "8629:20:0"
																	}
																]
															},
															"id": 312,
															"nodeType": "IfStatement",
															"src": "8291:374:0",
															"trueBody": {
																"id": 306,
																"nodeType": "Block",
																"src": "8318:286:0",
																"statements": [
																	{
																		"AST": {
																			"nodeType": "YulBlock",
																			"src": "8441:148:0",
																			"statements": [
																				{
																					"nodeType": "YulVariableDeclaration",
																					"src": "8464:40:0",
																					"value": {
																						"arguments": [
																							{
																								"name": "returndata",
																								"nodeType": "YulIdentifier",
																								"src": "8493:10:0"
																							}
																						],
																						"functionName": {
																							"name": "mload",
																							"nodeType": "YulIdentifier",
																							"src": "8487:5:0"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "8487:17:0"
																					},
																					"variables": [
																						{
																							"name": "returndata_size",
																							"nodeType": "YulTypedName",
																							"src": "8468:15:0",
																							"type": ""
																						}
																					]
																				},
																				{
																					"expression": {
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "8537:2:0",
																										"type": "",
																										"value": "32"
																									},
																									{
																										"name": "returndata",
																										"nodeType": "YulIdentifier",
																										"src": "8541:10:0"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "8533:3:0"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "8533:19:0"
																							},
																							{
																								"name": "returndata_size",
																								"nodeType": "YulIdentifier",
																								"src": "8554:15:0"
																							}
																						],
																						"functionName": {
																							"name": "revert",
																							"nodeType": "YulIdentifier",
																							"src": "8526:6:0"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "8526:44:0"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "8526:44:0"
																				}
																			]
																		},
																		"evmVersion": "london",
																		"externalReferences": [
																			{
																				"declaration": 290,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "8493:10:0",
																				"valueSize": 1
																			},
																			{
																				"declaration": 290,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "8541:10:0",
																				"valueSize": 1
																			}
																		],
																		"id": 305,
																		"nodeType": "InlineAssembly",
																		"src": "8432:157:0"
																	}
																]
															}
														}
													]
												},
												"id": 314,
												"nodeType": "IfStatement",
												"src": "8146:530:0",
												"trueBody": {
													"id": 300,
													"nodeType": "Block",
													"src": "8159:44:0",
													"statements": [
														{
															"expression": {
																"id": 298,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 290,
																"src": "8181:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 296,
															"id": 299,
															"nodeType": "Return",
															"src": "8174:17:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 286,
										"nodeType": "StructuredDocumentation",
										"src": "7751:214:0",
										"text": " @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\n revert reason using the provided one.\n _Available since v4.3._"
									},
									"id": 316,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResult",
									"nameLocation": "7980:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 293,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 288,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "8012:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 316,
												"src": "8007:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 287,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "8007:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 290,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "8043:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 316,
												"src": "8030:23:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 289,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8030:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 292,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "8078:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 316,
												"src": "8064:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 291,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "8064:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7996:101:0"
									},
									"returnParameters": {
										"id": 296,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 295,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 316,
												"src": "8121:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 294,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8121:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8120:14:0"
									},
									"scope": 317,
									"src": "7971:712:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 370,
							"src": "412:8274:0",
							"usedErrors": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 330,
							"linearizedBaseContracts": [
								330
							],
							"name": "Router",
							"nameLocation": "8700:6:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "bd5f68b0",
									"id": 329,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getAmountsOut",
									"nameLocation": "8723:13:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 324,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 319,
												"mutability": "mutable",
												"name": "amountIn",
												"nameLocation": "8742:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 329,
												"src": "8737:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 318,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "8737:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 323,
												"mutability": "mutable",
												"name": "path",
												"nameLocation": "8770:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 329,
												"src": "8752:22:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$2_memory_ptr",
													"typeString": "address[2]"
												},
												"typeName": {
													"baseType": {
														"id": 320,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "8752:7:0",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 322,
													"length": {
														"hexValue": "32",
														"id": 321,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "8760:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_2_by_1",
															"typeString": "int_const 2"
														},
														"value": "2"
													},
													"nodeType": "ArrayTypeName",
													"src": "8752:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$2_storage_ptr",
														"typeString": "address[2]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8736:39:0"
									},
									"returnParameters": {
										"id": 328,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 327,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "8831:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 329,
												"src": "8817:21:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 325,
														"name": "uint",
														"nodeType": "ElementaryTypeName",
														"src": "8817:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 326,
													"nodeType": "ArrayTypeName",
													"src": "8817:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8816:23:0"
									},
									"scope": 330,
									"src": "8714:126:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 370,
							"src": "8690:153:0",
							"usedErrors": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 369,
							"linearizedBaseContracts": [
								369
							],
							"name": "LpUtils",
							"nameLocation": "8856:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 333,
									"mutability": "mutable",
									"name": "amount",
									"nameLocation": "8879:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 369,
									"src": "8871:36:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 331,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "8871:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31303030303030303030303030303030303030",
										"id": 332,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "8888:19:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1000000000000000000_by_1",
											"typeString": "int_const 1000000000000000000"
										},
										"value": "1000000000000000000"
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 367,
										"nodeType": "Block",
										"src": "9021:182:0",
										"statements": [
											{
												"assignments": [
													347
												],
												"declarations": [
													{
														"constant": false,
														"id": 347,
														"mutability": "mutable",
														"name": "totalSupply",
														"nameLocation": "9040:11:0",
														"nodeType": "VariableDeclaration",
														"scope": 367,
														"src": "9032:19:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 346,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9032:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 351,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 348,
															"name": "lpAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 336,
															"src": "9054:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$25",
																"typeString": "contract IERC20"
															}
														},
														"id": 349,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "totalSupply",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 7,
														"src": "9054:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
															"typeString": "function () view external returns (uint256)"
														}
													},
													"id": 350,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9054:23:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9032:45:0"
											},
											{
												"assignments": [
													356
												],
												"declarations": [
													{
														"constant": false,
														"id": 356,
														"mutability": "mutable",
														"name": "price0",
														"nameLocation": "9107:6:0",
														"nodeType": "VariableDeclaration",
														"scope": 367,
														"src": "9090:23:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[]"
														},
														"typeName": {
															"baseType": {
																"id": 354,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "9090:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 355,
															"nodeType": "ArrayTypeName",
															"src": "9090:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 364,
												"initialValue": {
													"arguments": [
														{
															"id": 359,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 333,
															"src": "9144:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"components": [
																{
																	"id": 360,
																	"name": "busd",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 341,
																	"src": "9152:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 361,
																	"name": "busd",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 341,
																	"src": "9158:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"id": 362,
															"isConstant": false,
															"isInlineArray": true,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "9151:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$2_memory_ptr",
																"typeString": "address[2] memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_array$_t_address_$2_memory_ptr",
																"typeString": "address[2] memory"
															}
														],
														"expression": {
															"id": 357,
															"name": "routerAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 339,
															"src": "9116:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_Router_$330",
																"typeString": "contract Router"
															}
														},
														"id": 358,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "getAmountsOut",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 329,
														"src": "9116:27:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_uint256_$_t_array$_t_address_$2_memory_ptr_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
															"typeString": "function (uint256,address[2] memory) view external returns (uint256[] memory)"
														}
													},
													"id": 363,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9116:48:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9090:74:0"
											},
											{
												"expression": {
													"id": 365,
													"name": "totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 347,
													"src": "9184:11:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 345,
												"id": 366,
												"nodeType": "Return",
												"src": "9177:18:0"
											}
										]
									},
									"functionSelector": "20ae0b6d",
									"id": 368,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "CalcLpPrice",
									"nameLocation": "8925:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 342,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 336,
												"mutability": "mutable",
												"name": "lpAddress",
												"nameLocation": "8944:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 368,
												"src": "8937:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$25",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 335,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 334,
														"name": "IERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 25,
														"src": "8937:6:0"
													},
													"referencedDeclaration": 25,
													"src": "8937:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$25",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 339,
												"mutability": "mutable",
												"name": "routerAddress",
												"nameLocation": "8962:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 368,
												"src": "8955:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_Router_$330",
													"typeString": "contract Router"
												},
												"typeName": {
													"id": 338,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 337,
														"name": "Router",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 330,
														"src": "8955:6:0"
													},
													"referencedDeclaration": 330,
													"src": "8955:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_Router_$330",
														"typeString": "contract Router"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 341,
												"mutability": "mutable",
												"name": "busd",
												"nameLocation": "8985:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 368,
												"src": "8977:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 340,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8977:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8936:54:0"
									},
									"returnParameters": {
										"id": 345,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 344,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 368,
												"src": "9013:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 343,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9013:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9012:9:0"
									},
									"scope": 369,
									"src": "8916:287:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 370,
							"src": "8847:359:0",
							"usedErrors": []
						}
					],
					"src": "33:9173:0"
				},
				"id": 0
			}
		}
	}
}
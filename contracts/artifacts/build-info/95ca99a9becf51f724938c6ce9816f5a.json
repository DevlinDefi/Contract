{
	"id": "95ca99a9becf51f724938c6ce9816f5a",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.7",
	"solcLongVersion": "0.8.7+commit.e28d00a7",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/LpPrice.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.0;\r\n\r\nlibrary Address {\r\n    /**\r\n     * @dev Returns true if `account` is a contract.\r\n     *\r\n     * [IMPORTANT]\r\n     * ====\r\n     * It is unsafe to assume that an address for which this function returns\r\n     * false is an externally-owned account (EOA) and not a contract.\r\n     *\r\n     * Among others, `isContract` will return false for the following\r\n     * types of addresses:\r\n     *\r\n     *  - an externally-owned account\r\n     *  - a contract in construction\r\n     *  - an address where a contract will be created\r\n     *  - an address where a contract lived, but was destroyed\r\n     * ====\r\n     *\r\n     * [IMPORTANT]\r\n     * ====\r\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\r\n     *\r\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\r\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\r\n     * constructor.\r\n     * ====\r\n     */\r\n    function isContract(address account) internal view returns (bool) {\r\n        // This method relies on extcodesize/address.code.length, which returns 0\r\n        // for contracts in construction, since the code is only stored at the end\r\n        // of the constructor execution.\r\n\r\n        return account.code.length > 0;\r\n    }\r\n\r\n    /**\r\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\r\n     * `recipient`, forwarding all available gas and reverting on errors.\r\n     *\r\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\r\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\r\n     * imposed by `transfer`, making them unable to receive funds via\r\n     * `transfer`. {sendValue} removes this limitation.\r\n     *\r\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\r\n     *\r\n     * IMPORTANT: because control is transferred to `recipient`, care must be\r\n     * taken to not create reentrancy vulnerabilities. Consider using\r\n     * {ReentrancyGuard} or the\r\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\r\n     */\r\n    function sendValue(address payable recipient, uint256 amount) internal {\r\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\r\n\r\n        (bool success, ) = recipient.call{value: amount}(\"\");\r\n        require(success, \"Address: unable to send value, recipient may have reverted\");\r\n    }\r\n\r\n    /**\r\n     * @dev Performs a Solidity function call using a low level `call`. A\r\n     * plain `call` is an unsafe replacement for a function call: use this\r\n     * function instead.\r\n     *\r\n     * If `target` reverts with a revert reason, it is bubbled up by this\r\n     * function (like regular Solidity function calls).\r\n     *\r\n     * Returns the raw returned data. To convert to the expected return value,\r\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `target` must be a contract.\r\n     * - calling `target` with `data` must not revert.\r\n     *\r\n     * _Available since v3.1._\r\n     */\r\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\r\n        return functionCall(target, data, \"Address: low-level call failed\");\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\r\n     * `errorMessage` as a fallback revert reason when `target` reverts.\r\n     *\r\n     * _Available since v3.1._\r\n     */\r\n    function functionCall(\r\n        address target,\r\n        bytes memory data,\r\n        string memory errorMessage\r\n    ) internal returns (bytes memory) {\r\n        return functionCallWithValue(target, data, 0, errorMessage);\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\r\n     * but also transferring `value` wei to `target`.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - the calling contract must have an ETH balance of at least `value`.\r\n     * - the called Solidity function must be `payable`.\r\n     *\r\n     * _Available since v3.1._\r\n     */\r\n    function functionCallWithValue(\r\n        address target,\r\n        bytes memory data,\r\n        uint256 value\r\n    ) internal returns (bytes memory) {\r\n        return functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\r\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\r\n     *\r\n     * _Available since v3.1._\r\n     */\r\n    function functionCallWithValue(\r\n        address target,\r\n        bytes memory data,\r\n        uint256 value,\r\n        string memory errorMessage\r\n    ) internal returns (bytes memory) {\r\n        require(address(this).balance >= value, \"Address: insufficient balance for call\");\r\n        require(isContract(target), \"Address: call to non-contract\");\r\n\r\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\r\n        return verifyCallResult(success, returndata, errorMessage);\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\r\n     * but performing a static call.\r\n     *\r\n     * _Available since v3.3._\r\n     */\r\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\r\n        return functionStaticCall(target, data, \"Address: low-level static call failed\");\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\r\n     * but performing a static call.\r\n     *\r\n     * _Available since v3.3._\r\n     */\r\n    function functionStaticCall(\r\n        address target,\r\n        bytes memory data,\r\n        string memory errorMessage\r\n    ) internal view returns (bytes memory) {\r\n        require(isContract(target), \"Address: static call to non-contract\");\r\n\r\n        (bool success, bytes memory returndata) = target.staticcall(data);\r\n        return verifyCallResult(success, returndata, errorMessage);\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\r\n     * but performing a delegate call.\r\n     *\r\n     * _Available since v3.4._\r\n     */\r\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\r\n        return functionDelegateCall(target, data, \"Address: low-level delegate call failed\");\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\r\n     * but performing a delegate call.\r\n     *\r\n     * _Available since v3.4._\r\n     */\r\n    function functionDelegateCall(\r\n        address target,\r\n        bytes memory data,\r\n        string memory errorMessage\r\n    ) internal returns (bytes memory) {\r\n        require(isContract(target), \"Address: delegate call to non-contract\");\r\n\r\n        (bool success, bytes memory returndata) = target.delegatecall(data);\r\n        return verifyCallResult(success, returndata, errorMessage);\r\n    }\r\n\r\n    /**\r\n     * @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\r\n     * revert reason using the provided one.\r\n     *\r\n     * _Available since v4.3._\r\n     */\r\n    function verifyCallResult(\r\n        bool success,\r\n        bytes memory returndata,\r\n        string memory errorMessage\r\n    ) internal pure returns (bytes memory) {\r\n        if (success) {\r\n            return returndata;\r\n        } else {\r\n            // Look for revert reason and bubble it up if present\r\n            if (returndata.length > 0) {\r\n                // The easiest way to bubble the revert reason is using memory via assembly\r\n\r\n                assembly {\r\n                    let returndata_size := mload(returndata)\r\n                    revert(add(32, returndata), returndata_size)\r\n                }\r\n            } else {\r\n                revert(errorMessage);\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nlibrary SafeMath {\r\n    /**\r\n     * @dev Returns the addition of two unsigned integers, reverting on\r\n     * overflow.\r\n     *\r\n     * Counterpart to Solidity's `+` operator.\r\n     *\r\n     * Requirements:\r\n     * - Addition cannot overflow.\r\n     */\r\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        uint256 c = a + b;\r\n        require(c >= a, \"SafeMath: addition overflow\");\r\n\r\n        return c;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the subtraction of two unsigned integers, reverting on\r\n     * overflow (when the result is negative).\r\n     *\r\n     * Counterpart to Solidity's `-` operator.\r\n     *\r\n     * Requirements:\r\n     * - Subtraction cannot overflow.\r\n     */\r\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        return sub(a, b, \"SafeMath: subtraction overflow\");\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\r\n     * overflow (when the result is negative).\r\n     *\r\n     * Counterpart to Solidity's `-` operator.\r\n     *\r\n     * Requirements:\r\n     * - Subtraction cannot overflow.\r\n     *\r\n     * _Available since v2.4.0._\r\n     */\r\n    function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\r\n        require(b <= a, errorMessage);\r\n        uint256 c = a - b;\r\n\r\n        return c;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the multiplication of two unsigned integers, reverting on\r\n     * overflow.\r\n     *\r\n     * Counterpart to Solidity's `*` operator.\r\n     *\r\n     * Requirements:\r\n     * - Multiplication cannot overflow.\r\n     */\r\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\r\n        // benefit is lost if 'b' is also tested.\r\n        // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\r\n        if (a == 0) {\r\n            return 0;\r\n        }\r\n\r\n        uint256 c = a * b;\r\n        require(c / a == b, \"SafeMath: multiplication overflow\");\r\n\r\n        return c;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the integer division of two unsigned integers. Reverts on\r\n     * division by zero. The result is rounded towards zero.\r\n     *\r\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\r\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\r\n     * uses an invalid opcode to revert (consuming all remaining gas).\r\n     *\r\n     * Requirements:\r\n     * - The divisor cannot be zero.\r\n     */\r\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        return div(a, b, \"SafeMath: division by zero\");\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the integer division of two unsigned integers. Reverts with custom message on\r\n     * division by zero. The result is rounded towards zero.\r\n     *\r\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\r\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\r\n     * uses an invalid opcode to revert (consuming all remaining gas).\r\n     *\r\n     * Requirements:\r\n     * - The divisor cannot be zero.\r\n     *\r\n     * _Available since v2.4.0._\r\n     */\r\n    function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\r\n        // Solidity only automatically asserts when dividing by 0\r\n        require(b > 0, errorMessage);\r\n        uint256 c = a / b;\r\n        // assert(a == b * c + a % b); // There is no case in which this doesn't hold\r\n\r\n        return c;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\r\n     * Reverts when dividing by zero.\r\n     *\r\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\r\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\r\n     * invalid opcode to revert (consuming all remaining gas).\r\n     *\r\n     * Requirements:\r\n     * - The divisor cannot be zero.\r\n     */\r\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        return mod(a, b, \"SafeMath: modulo by zero\");\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\r\n     * Reverts with custom message when dividing by zero.\r\n     *\r\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\r\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\r\n     * invalid opcode to revert (consuming all remaining gas).\r\n     *\r\n     * Requirements:\r\n     * - The divisor cannot be zero.\r\n     *\r\n     * _Available since v2.4.0._\r\n     */\r\n    function mod(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\r\n        require(b != 0, errorMessage);\r\n        return a % b;\r\n    }\r\n}\r\n\r\ninterface IERC20 {\r\n    /**\r\n     * @dev Returns the amount of tokens in existence.\r\n     */\r\n    function totalSupply() external view returns (uint256);\r\n\r\n    function token0() external view returns (address);\r\n\r\n    function token1() external view returns (address);\r\n\r\n    function balanceOf(address account) external view returns (uint256);\r\n}\r\n\r\ninterface Router {\r\n    function getAmountsOut(uint amountIn, address[] memory path) external\r\n        view\r\n        returns (uint[] memory amounts);\r\n}\r\n\r\ncontract LpUtils {\r\n    using SafeMath for uint256;\r\n    address public WBNB = 0xae13d989daC2f0dEbFf460aC112a837C89BAa7cd;\r\n    address public BUSD = 0x78867BbEeF44f2326bF8DDd1941a4439382EF2A7;\r\n    uint256 amount = 1000000000000000000;\r\n\r\n    function price(Router routerAddress, address token) internal view returns(uint256){\r\n        address[] memory path = new address[](3);\r\n        path[0] = token;\r\n        path[1] = WBNB;\r\n        path[2] = BUSD;\r\n        return routerAddress.getAmountsOut(amount,path)[2];\r\n    }\r\n\r\n    function CalcLpPrice(IERC20 lpAddress, Router routerAddress) external view returns(uint256){\r\n\r\n        // uint256 phase1 = (lpAddress.balanceOf(lpAddress.token0())*price(routerAddress,lpAddress.token0()));\r\n        // uint256 phase2 = (lpAddress.balanceOf(lpAddress.token1())*price(routerAddress,lpAddress.token1()));\r\n        return (price(routerAddress,lpAddress.token0()).mul(lpAddress.balanceOf(lpAddress.token0())));\r\n    }\r\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"contracts/LpPrice.sol": {
				"Address": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/LpPrice.sol\":60:8334  library Address {\r... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/LpPrice.sol\":60:8334  library Address {\r... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122094e1fc6e3e23a842b71cf76b8ee195fbedd2ab801a2b9d7f089a4bb0d8f1ed3b64736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122094e1fc6e3e23a842b71cf76b8ee195fbedd2ab801a2b9d7f089a4bb0d8f1ed3b64736f6c63430008070033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP5 0xE1 0xFC PUSH15 0x3E23A842B71CF76B8EE195FBEDD2AB DUP1 BYTE 0x2B SWAP14 PUSH32 0x89A4BB0D8F1ED3B64736F6C6343000807003300000000000000000000000000 ",
							"sourceMap": "60:8274:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122094e1fc6e3e23a842b71cf76b8ee195fbedd2ab801a2b9d7f089a4bb0d8f1ed3b64736f6c63430008070033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP5 0xE1 0xFC PUSH15 0x3E23A842B71CF76B8EE195FBEDD2AB DUP1 BYTE 0x2B SWAP14 PUSH32 0x89A4BB0D8F1ED3B64736F6C6343000807003300000000000000000000000000 ",
							"sourceMap": "60:8274:0:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"functionCall(address,bytes memory)": "infinite",
								"functionCall(address,bytes memory,string memory)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256,string memory)": "infinite",
								"functionDelegateCall(address,bytes memory)": "infinite",
								"functionDelegateCall(address,bytes memory,string memory)": "infinite",
								"functionStaticCall(address,bytes memory)": "infinite",
								"functionStaticCall(address,bytes memory,string memory)": "infinite",
								"isContract(address)": "infinite",
								"sendValue(address payable,uint256)": "infinite",
								"verifyCallResult(bool,bytes memory,string memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 60,
									"end": 8334,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 60,
									"end": 8334,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 60,
									"end": 8334,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 60,
									"end": 8334,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 60,
									"end": 8334,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 60,
									"end": 8334,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 60,
									"end": 8334,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 60,
									"end": 8334,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 60,
									"end": 8334,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 60,
									"end": 8334,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 60,
									"end": 8334,
									"name": "BYTE",
									"source": 0
								},
								{
									"begin": 60,
									"end": 8334,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 60,
									"end": 8334,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 60,
									"end": 8334,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 60,
									"end": 8334,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 60,
									"end": 8334,
									"name": "PUSH",
									"source": 0,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 60,
									"end": 8334,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 60,
									"end": 8334,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 60,
									"end": 8334,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 60,
									"end": 8334,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 60,
									"end": 8334,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 60,
									"end": 8334,
									"name": "PUSH",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 60,
									"end": 8334,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 60,
									"end": 8334,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 60,
									"end": 8334,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 60,
									"end": 8334,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 60,
									"end": 8334,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 60,
									"end": 8334,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 60,
									"end": 8334,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 60,
									"end": 8334,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 60,
									"end": 8334,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 60,
									"end": 8334,
									"name": "MSTORE8",
									"source": 0
								},
								{
									"begin": 60,
									"end": 8334,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 60,
									"end": 8334,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 60,
									"end": 8334,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122094e1fc6e3e23a842b71cf76b8ee195fbedd2ab801a2b9d7f089a4bb0d8f1ed3b64736f6c63430008070033",
									".code": [
										{
											"begin": 60,
											"end": 8334,
											"name": "PUSHDEPLOYADDRESS",
											"source": 0
										},
										{
											"begin": 60,
											"end": 8334,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 60,
											"end": 8334,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 60,
											"end": 8334,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 60,
											"end": 8334,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 60,
											"end": 8334,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 8334,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 60,
											"end": 8334,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 60,
											"end": 8334,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/LpPrice.sol\":\"Address\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/LpPrice.sol\":{\"keccak256\":\"0x1853e835c929e66e22b351805d81bae3ac14e03018976bbdc72dc1fa1c2a977f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://085205b3315c81bc859c4f2d1fa10444904e7a463f105a97389c4c8f22797427\",\"dweb:/ipfs/QmW4XjGHRzy2r7yA1xjx7DhaAXQwjPqWby4qcFirJCjjVQ\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "token0",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "token1",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"balanceOf(address)": "70a08231",
							"token0()": "0dfe1681",
							"token1()": "d21220a7",
							"totalSupply()": "18160ddd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token0\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token1\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/LpPrice.sol\":\"IERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/LpPrice.sol\":{\"keccak256\":\"0x1853e835c929e66e22b351805d81bae3ac14e03018976bbdc72dc1fa1c2a977f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://085205b3315c81bc859c4f2d1fa10444904e7a463f105a97389c4c8f22797427\",\"dweb:/ipfs/QmW4XjGHRzy2r7yA1xjx7DhaAXQwjPqWby4qcFirJCjjVQ\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"LpUtils": {
					"abi": [
						{
							"inputs": [],
							"name": "BUSD",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "contract IERC20",
									"name": "lpAddress",
									"type": "address"
								},
								{
									"internalType": "contract Router",
									"name": "routerAddress",
									"type": "address"
								}
							],
							"name": "CalcLpPrice",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "WBNB",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/LpPrice.sol\":13698:14660  contract LpUtils {\r... */\n  mstore(0x40, 0x80)\n    /* \"contracts/LpPrice.sol\":13777:13819  0xae13d989daC2f0dEbFf460aC112a837C89BAa7cd */\n  0xae13d989dac2f0debff460ac112a837c89baa7cd\n    /* \"contracts/LpPrice.sol\":13755:13819  address public WBNB = 0xae13d989daC2f0dEbFf460aC112a837C89BAa7cd */\n  0x00\n  dup1\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/LpPrice.sol\":13848:13890  0x78867BbEeF44f2326bF8DDd1941a4439382EF2A7 */\n  0x78867bbeef44f2326bf8ddd1941a4439382ef2a7\n    /* \"contracts/LpPrice.sol\":13826:13890  address public BUSD = 0x78867BbEeF44f2326bF8DDd1941a4439382EF2A7 */\n  0x01\n  exp(0x0100, 0x00)\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/LpPrice.sol\":13914:13933  1000000000000000000 */\n  0x0de0b6b3a7640000\n    /* \"contracts/LpPrice.sol\":13897:13933  uint256 amount = 1000000000000000000 */\n  0x02\n  sstore\n    /* \"contracts/LpPrice.sol\":13698:14660  contract LpUtils {\r... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/LpPrice.sol\":13698:14660  contract LpUtils {\r... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x344e49d9\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x484f4ea9\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x8dd95002\n      eq\n      tag_5\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/LpPrice.sol\":14228:14657  function CalcLpPrice(IERC20 lpAddress, Router routerAddress) external view returns(uint256){\r... */\n    tag_3:\n      tag_6\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_7\n      swap2\n      swap1\n      tag_8\n      jump\t// in\n    tag_7:\n      tag_9\n      jump\t// in\n    tag_6:\n      mload(0x40)\n      tag_10\n      swap2\n      swap1\n      tag_11\n      jump\t// in\n    tag_10:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/LpPrice.sol\":13826:13890  address public BUSD = 0x78867BbEeF44f2326bF8DDd1941a4439382EF2A7 */\n    tag_4:\n      tag_12\n      tag_13\n      jump\t// in\n    tag_12:\n      mload(0x40)\n      tag_14\n      swap2\n      swap1\n      tag_15\n      jump\t// in\n    tag_14:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/LpPrice.sol\":13755:13819  address public WBNB = 0xae13d989daC2f0dEbFf460aC112a837C89BAa7cd */\n    tag_5:\n      tag_16\n      tag_17\n      jump\t// in\n    tag_16:\n      mload(0x40)\n      tag_18\n      swap2\n      swap1\n      tag_15\n      jump\t// in\n    tag_18:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/LpPrice.sol\":14228:14657  function CalcLpPrice(IERC20 lpAddress, Router routerAddress) external view returns(uint256){\r... */\n    tag_9:\n        /* \"contracts/LpPrice.sol\":14311:14318  uint256 */\n      0x00\n        /* \"contracts/LpPrice.sol\":14564:14648  price(routerAddress,lpAddress.token0()).mul(lpAddress.balanceOf(lpAddress.token0())) */\n      tag_20\n        /* \"contracts/LpPrice.sol\":14608:14617  lpAddress */\n      dup4\n        /* \"contracts/LpPrice.sol\":14608:14627  lpAddress.balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"contracts/LpPrice.sol\":14628:14637  lpAddress */\n      dup6\n        /* \"contracts/LpPrice.sol\":14628:14644  lpAddress.token0 */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x0dfe1681\n        /* \"contracts/LpPrice.sol\":14628:14646  lpAddress.token0() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_21\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_21:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_23\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_23:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_24\n      swap2\n      swap1\n      tag_25\n      jump\t// in\n    tag_24:\n        /* \"contracts/LpPrice.sol\":14608:14647  lpAddress.balanceOf(lpAddress.token0()) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_26\n      swap2\n      swap1\n      tag_15\n      jump\t// in\n    tag_26:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_27\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_27:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_29\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_29:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_30\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_30:\n        /* \"contracts/LpPrice.sol\":14564:14603  price(routerAddress,lpAddress.token0()) */\n      tag_32\n        /* \"contracts/LpPrice.sol\":14570:14583  routerAddress */\n      dup5\n        /* \"contracts/LpPrice.sol\":14584:14593  lpAddress */\n      dup7\n        /* \"contracts/LpPrice.sol\":14584:14600  lpAddress.token0 */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x0dfe1681\n        /* \"contracts/LpPrice.sol\":14584:14602  lpAddress.token0() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_33\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_33:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_35\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_35:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_36\n      swap2\n      swap1\n      tag_25\n      jump\t// in\n    tag_36:\n        /* \"contracts/LpPrice.sol\":14564:14569  price */\n      tag_37\n        /* \"contracts/LpPrice.sol\":14564:14603  price(routerAddress,lpAddress.token0()) */\n      jump\t// in\n    tag_32:\n        /* \"contracts/LpPrice.sol\":14564:14607  price(routerAddress,lpAddress.token0()).mul */\n      tag_38\n      swap1\n        /* \"contracts/LpPrice.sol\":14564:14648  price(routerAddress,lpAddress.token0()).mul(lpAddress.balanceOf(lpAddress.token0())) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_20:\n        /* \"contracts/LpPrice.sol\":14556:14649  return (price(routerAddress,lpAddress.token0()).mul(lpAddress.balanceOf(lpAddress.token0()))) */\n      swap1\n      pop\n        /* \"contracts/LpPrice.sol\":14228:14657  function CalcLpPrice(IERC20 lpAddress, Router routerAddress) external view returns(uint256){\r... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/LpPrice.sol\":13826:13890  address public BUSD = 0x78867BbEeF44f2326bF8DDd1941a4439382EF2A7 */\n    tag_13:\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/LpPrice.sol\":13755:13819  address public WBNB = 0xae13d989daC2f0dEbFf460aC112a837C89BAa7cd */\n    tag_17:\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/LpPrice.sol\":13942:14220  function price(Router routerAddress, address token) internal view returns(uint256){\r... */\n    tag_37:\n        /* \"contracts/LpPrice.sol\":14016:14023  uint256 */\n      0x00\n        /* \"contracts/LpPrice.sol\":14035:14056  address[] memory path */\n      dup1\n        /* \"contracts/LpPrice.sol\":14073:14074  3 */\n      0x03\n        /* \"contracts/LpPrice.sol\":14059:14075  new address[](3) */\n      0xffffffffffffffff\n      dup2\n      gt\n      iszero\n      tag_40\n      jumpi\n      tag_41\n      tag_42\n      jump\t// in\n    tag_41:\n    tag_40:\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_43\n      jumpi\n      dup2\n      0x20\n      add\n      0x20\n      dup3\n      mul\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      dup1\n      dup3\n      add\n      swap2\n      pop\n      pop\n      swap1\n      pop\n    tag_43:\n      pop\n        /* \"contracts/LpPrice.sol\":14035:14075  address[] memory path = new address[](3) */\n      swap1\n      pop\n        /* \"contracts/LpPrice.sol\":14096:14101  token */\n      dup3\n        /* \"contracts/LpPrice.sol\":14086:14090  path */\n      dup2\n        /* \"contracts/LpPrice.sol\":14091:14092  0 */\n      0x00\n        /* \"contracts/LpPrice.sol\":14086:14093  path[0] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_44\n      jumpi\n      tag_45\n      tag_46\n      jump\t// in\n    tag_45:\n    tag_44:\n      0x20\n      mul\n      0x20\n      add\n      add\n        /* \"contracts/LpPrice.sol\":14086:14101  path[0] = token */\n      swap1\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      pop\n      pop\n        /* \"contracts/LpPrice.sol\":14122:14126  WBNB */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/LpPrice.sol\":14112:14116  path */\n      dup2\n        /* \"contracts/LpPrice.sol\":14117:14118  1 */\n      0x01\n        /* \"contracts/LpPrice.sol\":14112:14119  path[1] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_47\n      jumpi\n      tag_48\n      tag_46\n      jump\t// in\n    tag_48:\n    tag_47:\n      0x20\n      mul\n      0x20\n      add\n      add\n        /* \"contracts/LpPrice.sol\":14112:14126  path[1] = WBNB */\n      swap1\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      pop\n      pop\n        /* \"contracts/LpPrice.sol\":14147:14151  BUSD */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/LpPrice.sol\":14137:14141  path */\n      dup2\n        /* \"contracts/LpPrice.sol\":14142:14143  2 */\n      0x02\n        /* \"contracts/LpPrice.sol\":14137:14144  path[2] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_49\n      jumpi\n      tag_50\n      tag_46\n      jump\t// in\n    tag_50:\n    tag_49:\n      0x20\n      mul\n      0x20\n      add\n      add\n        /* \"contracts/LpPrice.sol\":14137:14151  path[2] = BUSD */\n      swap1\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      pop\n      pop\n        /* \"contracts/LpPrice.sol\":14169:14182  routerAddress */\n      dup4\n        /* \"contracts/LpPrice.sol\":14169:14196  routerAddress.getAmountsOut */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xd06ca61f\n        /* \"contracts/LpPrice.sol\":14197:14203  amount */\n      sload(0x02)\n        /* \"contracts/LpPrice.sol\":14204:14208  path */\n      dup4\n        /* \"contracts/LpPrice.sol\":14169:14209  routerAddress.getAmountsOut(amount,path) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_51\n      swap3\n      swap2\n      swap1\n      tag_52\n      jump\t// in\n    tag_51:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_53\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_53:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_55\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_55:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      0x00\n      dup3\n      returndatacopy\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_56\n      swap2\n      swap1\n      tag_57\n      jump\t// in\n    tag_56:\n        /* \"contracts/LpPrice.sol\":14210:14211  2 */\n      0x02\n        /* \"contracts/LpPrice.sol\":14169:14212  routerAddress.getAmountsOut(amount,path)[2] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_58\n      jumpi\n      tag_59\n      tag_46\n      jump\t// in\n    tag_59:\n    tag_58:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"contracts/LpPrice.sol\":14162:14212  return routerAddress.getAmountsOut(amount,path)[2] */\n      swap2\n      pop\n      pop\n        /* \"contracts/LpPrice.sol\":13942:14220  function price(Router routerAddress, address token) internal view returns(uint256){\r... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/LpPrice.sol\":9965:10436  function mul(uint256 a, uint256 b) internal pure returns (uint256) {\r... */\n    tag_38:\n        /* \"contracts/LpPrice.sol\":10023:10030  uint256 */\n      0x00\n        /* \"contracts/LpPrice.sol\":10273:10274  0 */\n      dup1\n        /* \"contracts/LpPrice.sol\":10268:10269  a */\n      dup4\n        /* \"contracts/LpPrice.sol\":10268:10274  a == 0 */\n      eq\n        /* \"contracts/LpPrice.sol\":10264:10311  if (a == 0) {\r... */\n      iszero\n      tag_61\n      jumpi\n        /* \"contracts/LpPrice.sol\":10298:10299  0 */\n      0x00\n        /* \"contracts/LpPrice.sol\":10291:10299  return 0 */\n      swap1\n      pop\n      jump(tag_60)\n        /* \"contracts/LpPrice.sol\":10264:10311  if (a == 0) {\r... */\n    tag_61:\n        /* \"contracts/LpPrice.sol\":10323:10332  uint256 c */\n      0x00\n        /* \"contracts/LpPrice.sol\":10339:10340  b */\n      dup3\n        /* \"contracts/LpPrice.sol\":10335:10336  a */\n      dup5\n        /* \"contracts/LpPrice.sol\":10335:10340  a * b */\n      tag_62\n      swap2\n      swap1\n      tag_63\n      jump\t// in\n    tag_62:\n        /* \"contracts/LpPrice.sol\":10323:10340  uint256 c = a * b */\n      swap1\n      pop\n        /* \"contracts/LpPrice.sol\":10368:10369  b */\n      dup3\n        /* \"contracts/LpPrice.sol\":10363:10364  a */\n      dup5\n        /* \"contracts/LpPrice.sol\":10359:10360  c */\n      dup3\n        /* \"contracts/LpPrice.sol\":10359:10364  c / a */\n      tag_64\n      swap2\n      swap1\n      tag_65\n      jump\t// in\n    tag_64:\n        /* \"contracts/LpPrice.sol\":10359:10369  c / a == b */\n      eq\n        /* \"contracts/LpPrice.sol\":10351:10407  require(c / a == b, \"SafeMath: multiplication overflow\") */\n      tag_66\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_67\n      swap1\n      tag_68\n      jump\t// in\n    tag_67:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_66:\n        /* \"contracts/LpPrice.sol\":10427:10428  c */\n      dup1\n        /* \"contracts/LpPrice.sol\":10420:10428  return c */\n      swap2\n      pop\n      pop\n        /* \"contracts/LpPrice.sol\":9965:10436  function mul(uint256 a, uint256 b) internal pure returns (uint256) {\r... */\n    tag_60:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24:768   */\n    tag_70:\n        /* \"#utility.yul\":131:136   */\n      0x00\n        /* \"#utility.yul\":156:237   */\n      tag_72\n        /* \"#utility.yul\":172:236   */\n      tag_73\n        /* \"#utility.yul\":229:235   */\n      dup5\n        /* \"#utility.yul\":172:236   */\n      tag_74\n      jump\t// in\n    tag_73:\n        /* \"#utility.yul\":156:237   */\n      tag_75\n      jump\t// in\n    tag_72:\n        /* \"#utility.yul\":147:237   */\n      swap1\n      pop\n        /* \"#utility.yul\":257:262   */\n      dup1\n        /* \"#utility.yul\":286:292   */\n      dup4\n        /* \"#utility.yul\":279:284   */\n      dup3\n        /* \"#utility.yul\":272:293   */\n      mstore\n        /* \"#utility.yul\":320:324   */\n      0x20\n        /* \"#utility.yul\":313:318   */\n      dup3\n        /* \"#utility.yul\":309:325   */\n      add\n        /* \"#utility.yul\":302:325   */\n      swap1\n      pop\n        /* \"#utility.yul\":346:352   */\n      dup3\n        /* \"#utility.yul\":396:399   */\n      dup6\n        /* \"#utility.yul\":388:392   */\n      0x20\n        /* \"#utility.yul\":380:386   */\n      dup7\n        /* \"#utility.yul\":376:393   */\n      mul\n        /* \"#utility.yul\":371:374   */\n      dup3\n        /* \"#utility.yul\":367:394   */\n      add\n        /* \"#utility.yul\":364:400   */\n      gt\n        /* \"#utility.yul\":361:504   */\n      iszero\n      tag_76\n      jumpi\n        /* \"#utility.yul\":415:494   */\n      tag_77\n      tag_78\n      jump\t// in\n    tag_77:\n        /* \"#utility.yul\":361:504   */\n    tag_76:\n        /* \"#utility.yul\":528:529   */\n      0x00\n        /* \"#utility.yul\":513:762   */\n    tag_79:\n        /* \"#utility.yul\":538:544   */\n      dup6\n        /* \"#utility.yul\":535:536   */\n      dup2\n        /* \"#utility.yul\":532:545   */\n      lt\n        /* \"#utility.yul\":513:762   */\n      iszero\n      tag_81\n      jumpi\n        /* \"#utility.yul\":606:609   */\n      dup2\n        /* \"#utility.yul\":635:683   */\n      tag_82\n        /* \"#utility.yul\":679:682   */\n      dup9\n        /* \"#utility.yul\":667:677   */\n      dup3\n        /* \"#utility.yul\":635:683   */\n      tag_83\n      jump\t// in\n    tag_82:\n        /* \"#utility.yul\":630:633   */\n      dup5\n        /* \"#utility.yul\":623:684   */\n      mstore\n        /* \"#utility.yul\":713:717   */\n      0x20\n        /* \"#utility.yul\":708:711   */\n      dup5\n        /* \"#utility.yul\":704:718   */\n      add\n        /* \"#utility.yul\":697:718   */\n      swap4\n      pop\n        /* \"#utility.yul\":747:751   */\n      0x20\n        /* \"#utility.yul\":742:745   */\n      dup4\n        /* \"#utility.yul\":738:752   */\n      add\n        /* \"#utility.yul\":731:752   */\n      swap3\n      pop\n        /* \"#utility.yul\":573:762   */\n      pop\n        /* \"#utility.yul\":560:561   */\n      0x01\n        /* \"#utility.yul\":557:558   */\n      dup2\n        /* \"#utility.yul\":553:562   */\n      add\n        /* \"#utility.yul\":548:562   */\n      swap1\n      pop\n        /* \"#utility.yul\":513:762   */\n      jump(tag_79)\n    tag_81:\n        /* \"#utility.yul\":517:531   */\n      pop\n        /* \"#utility.yul\":137:768   */\n      pop\n      pop\n        /* \"#utility.yul\":24:768   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":774:917   */\n    tag_84:\n        /* \"#utility.yul\":831:836   */\n      0x00\n        /* \"#utility.yul\":862:868   */\n      dup2\n        /* \"#utility.yul\":856:869   */\n      mload\n        /* \"#utility.yul\":847:869   */\n      swap1\n      pop\n        /* \"#utility.yul\":878:911   */\n      tag_86\n        /* \"#utility.yul\":905:910   */\n      dup2\n        /* \"#utility.yul\":878:911   */\n      tag_87\n      jump\t// in\n    tag_86:\n        /* \"#utility.yul\":774:917   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":940:1325   */\n    tag_88:\n        /* \"#utility.yul\":1022:1027   */\n      0x00\n        /* \"#utility.yul\":1071:1074   */\n      dup3\n        /* \"#utility.yul\":1064:1068   */\n      0x1f\n        /* \"#utility.yul\":1056:1062   */\n      dup4\n        /* \"#utility.yul\":1052:1069   */\n      add\n        /* \"#utility.yul\":1048:1075   */\n      slt\n        /* \"#utility.yul\":1038:1160   */\n      tag_90\n      jumpi\n        /* \"#utility.yul\":1079:1158   */\n      tag_91\n      tag_92\n      jump\t// in\n    tag_91:\n        /* \"#utility.yul\":1038:1160   */\n    tag_90:\n        /* \"#utility.yul\":1189:1195   */\n      dup2\n        /* \"#utility.yul\":1183:1196   */\n      mload\n        /* \"#utility.yul\":1214:1319   */\n      tag_93\n        /* \"#utility.yul\":1315:1318   */\n      dup5\n        /* \"#utility.yul\":1307:1313   */\n      dup3\n        /* \"#utility.yul\":1300:1304   */\n      0x20\n        /* \"#utility.yul\":1292:1298   */\n      dup7\n        /* \"#utility.yul\":1288:1305   */\n      add\n        /* \"#utility.yul\":1214:1319   */\n      tag_70\n      jump\t// in\n    tag_93:\n        /* \"#utility.yul\":1205:1319   */\n      swap2\n      pop\n        /* \"#utility.yul\":1028:1325   */\n      pop\n        /* \"#utility.yul\":940:1325   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1331:1498   */\n    tag_94:\n        /* \"#utility.yul\":1391:1396   */\n      0x00\n        /* \"#utility.yul\":1429:1435   */\n      dup2\n        /* \"#utility.yul\":1416:1436   */\n      calldataload\n        /* \"#utility.yul\":1407:1436   */\n      swap1\n      pop\n        /* \"#utility.yul\":1445:1492   */\n      tag_96\n        /* \"#utility.yul\":1486:1491   */\n      dup2\n        /* \"#utility.yul\":1445:1492   */\n      tag_97\n      jump\t// in\n    tag_96:\n        /* \"#utility.yul\":1331:1498   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1504:1671   */\n    tag_98:\n        /* \"#utility.yul\":1564:1569   */\n      0x00\n        /* \"#utility.yul\":1602:1608   */\n      dup2\n        /* \"#utility.yul\":1589:1609   */\n      calldataload\n        /* \"#utility.yul\":1580:1609   */\n      swap1\n      pop\n        /* \"#utility.yul\":1618:1665   */\n      tag_100\n        /* \"#utility.yul\":1659:1664   */\n      dup2\n        /* \"#utility.yul\":1618:1665   */\n      tag_101\n      jump\t// in\n    tag_100:\n        /* \"#utility.yul\":1504:1671   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1677:1820   */\n    tag_83:\n        /* \"#utility.yul\":1734:1739   */\n      0x00\n        /* \"#utility.yul\":1765:1771   */\n      dup2\n        /* \"#utility.yul\":1759:1772   */\n      mload\n        /* \"#utility.yul\":1750:1772   */\n      swap1\n      pop\n        /* \"#utility.yul\":1781:1814   */\n      tag_103\n        /* \"#utility.yul\":1808:1813   */\n      dup2\n        /* \"#utility.yul\":1781:1814   */\n      tag_104\n      jump\t// in\n    tag_103:\n        /* \"#utility.yul\":1677:1820   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1826:2177   */\n    tag_25:\n        /* \"#utility.yul\":1896:1902   */\n      0x00\n        /* \"#utility.yul\":1945:1947   */\n      0x20\n        /* \"#utility.yul\":1933:1942   */\n      dup3\n        /* \"#utility.yul\":1924:1931   */\n      dup5\n        /* \"#utility.yul\":1920:1943   */\n      sub\n        /* \"#utility.yul\":1916:1948   */\n      slt\n        /* \"#utility.yul\":1913:2032   */\n      iszero\n      tag_106\n      jumpi\n        /* \"#utility.yul\":1951:2030   */\n      tag_107\n      tag_108\n      jump\t// in\n    tag_107:\n        /* \"#utility.yul\":1913:2032   */\n    tag_106:\n        /* \"#utility.yul\":2071:2072   */\n      0x00\n        /* \"#utility.yul\":2096:2160   */\n      tag_109\n        /* \"#utility.yul\":2152:2159   */\n      dup5\n        /* \"#utility.yul\":2143:2149   */\n      dup3\n        /* \"#utility.yul\":2132:2141   */\n      dup6\n        /* \"#utility.yul\":2128:2150   */\n      add\n        /* \"#utility.yul\":2096:2160   */\n      tag_84\n      jump\t// in\n    tag_109:\n        /* \"#utility.yul\":2086:2160   */\n      swap2\n      pop\n        /* \"#utility.yul\":2042:2170   */\n      pop\n        /* \"#utility.yul\":1826:2177   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2183:2737   */\n    tag_57:\n        /* \"#utility.yul\":2278:2284   */\n      0x00\n        /* \"#utility.yul\":2327:2329   */\n      0x20\n        /* \"#utility.yul\":2315:2324   */\n      dup3\n        /* \"#utility.yul\":2306:2313   */\n      dup5\n        /* \"#utility.yul\":2302:2325   */\n      sub\n        /* \"#utility.yul\":2298:2330   */\n      slt\n        /* \"#utility.yul\":2295:2414   */\n      iszero\n      tag_111\n      jumpi\n        /* \"#utility.yul\":2333:2412   */\n      tag_112\n      tag_108\n      jump\t// in\n    tag_112:\n        /* \"#utility.yul\":2295:2414   */\n    tag_111:\n        /* \"#utility.yul\":2474:2475   */\n      0x00\n        /* \"#utility.yul\":2463:2472   */\n      dup3\n        /* \"#utility.yul\":2459:2476   */\n      add\n        /* \"#utility.yul\":2453:2477   */\n      mload\n        /* \"#utility.yul\":2504:2522   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":2496:2502   */\n      dup2\n        /* \"#utility.yul\":2493:2523   */\n      gt\n        /* \"#utility.yul\":2490:2607   */\n      iszero\n      tag_113\n      jumpi\n        /* \"#utility.yul\":2526:2605   */\n      tag_114\n      tag_115\n      jump\t// in\n    tag_114:\n        /* \"#utility.yul\":2490:2607   */\n    tag_113:\n        /* \"#utility.yul\":2631:2720   */\n      tag_116\n        /* \"#utility.yul\":2712:2719   */\n      dup5\n        /* \"#utility.yul\":2703:2709   */\n      dup3\n        /* \"#utility.yul\":2692:2701   */\n      dup6\n        /* \"#utility.yul\":2688:2710   */\n      add\n        /* \"#utility.yul\":2631:2720   */\n      tag_88\n      jump\t// in\n    tag_116:\n        /* \"#utility.yul\":2621:2720   */\n      swap2\n      pop\n        /* \"#utility.yul\":2424:2730   */\n      pop\n        /* \"#utility.yul\":2183:2737   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2743:3273   */\n    tag_8:\n        /* \"#utility.yul\":2839:2845   */\n      0x00\n        /* \"#utility.yul\":2847:2853   */\n      dup1\n        /* \"#utility.yul\":2896:2898   */\n      0x40\n        /* \"#utility.yul\":2884:2893   */\n      dup4\n        /* \"#utility.yul\":2875:2882   */\n      dup6\n        /* \"#utility.yul\":2871:2894   */\n      sub\n        /* \"#utility.yul\":2867:2899   */\n      slt\n        /* \"#utility.yul\":2864:2983   */\n      iszero\n      tag_118\n      jumpi\n        /* \"#utility.yul\":2902:2981   */\n      tag_119\n      tag_108\n      jump\t// in\n    tag_119:\n        /* \"#utility.yul\":2864:2983   */\n    tag_118:\n        /* \"#utility.yul\":3022:3023   */\n      0x00\n        /* \"#utility.yul\":3047:3114   */\n      tag_120\n        /* \"#utility.yul\":3106:3113   */\n      dup6\n        /* \"#utility.yul\":3097:3103   */\n      dup3\n        /* \"#utility.yul\":3086:3095   */\n      dup7\n        /* \"#utility.yul\":3082:3104   */\n      add\n        /* \"#utility.yul\":3047:3114   */\n      tag_94\n      jump\t// in\n    tag_120:\n        /* \"#utility.yul\":3037:3114   */\n      swap3\n      pop\n        /* \"#utility.yul\":2993:3124   */\n      pop\n        /* \"#utility.yul\":3163:3165   */\n      0x20\n        /* \"#utility.yul\":3189:3256   */\n      tag_121\n        /* \"#utility.yul\":3248:3255   */\n      dup6\n        /* \"#utility.yul\":3239:3245   */\n      dup3\n        /* \"#utility.yul\":3228:3237   */\n      dup7\n        /* \"#utility.yul\":3224:3246   */\n      add\n        /* \"#utility.yul\":3189:3256   */\n      tag_98\n      jump\t// in\n    tag_121:\n        /* \"#utility.yul\":3179:3256   */\n      swap2\n      pop\n        /* \"#utility.yul\":3134:3266   */\n      pop\n        /* \"#utility.yul\":2743:3273   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3279:3630   */\n    tag_31:\n        /* \"#utility.yul\":3349:3355   */\n      0x00\n        /* \"#utility.yul\":3398:3400   */\n      0x20\n        /* \"#utility.yul\":3386:3395   */\n      dup3\n        /* \"#utility.yul\":3377:3384   */\n      dup5\n        /* \"#utility.yul\":3373:3396   */\n      sub\n        /* \"#utility.yul\":3369:3401   */\n      slt\n        /* \"#utility.yul\":3366:3485   */\n      iszero\n      tag_123\n      jumpi\n        /* \"#utility.yul\":3404:3483   */\n      tag_124\n      tag_108\n      jump\t// in\n    tag_124:\n        /* \"#utility.yul\":3366:3485   */\n    tag_123:\n        /* \"#utility.yul\":3524:3525   */\n      0x00\n        /* \"#utility.yul\":3549:3613   */\n      tag_125\n        /* \"#utility.yul\":3605:3612   */\n      dup5\n        /* \"#utility.yul\":3596:3602   */\n      dup3\n        /* \"#utility.yul\":3585:3594   */\n      dup6\n        /* \"#utility.yul\":3581:3603   */\n      add\n        /* \"#utility.yul\":3549:3613   */\n      tag_83\n      jump\t// in\n    tag_125:\n        /* \"#utility.yul\":3539:3613   */\n      swap2\n      pop\n        /* \"#utility.yul\":3495:3623   */\n      pop\n        /* \"#utility.yul\":3279:3630   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3636:3815   */\n    tag_126:\n        /* \"#utility.yul\":3705:3715   */\n      0x00\n        /* \"#utility.yul\":3726:3772   */\n      tag_128\n        /* \"#utility.yul\":3768:3771   */\n      dup4\n        /* \"#utility.yul\":3760:3766   */\n      dup4\n        /* \"#utility.yul\":3726:3772   */\n      tag_129\n      jump\t// in\n    tag_128:\n        /* \"#utility.yul\":3804:3808   */\n      0x20\n        /* \"#utility.yul\":3799:3802   */\n      dup4\n        /* \"#utility.yul\":3795:3809   */\n      add\n        /* \"#utility.yul\":3781:3809   */\n      swap1\n      pop\n        /* \"#utility.yul\":3636:3815   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3821:3929   */\n    tag_129:\n        /* \"#utility.yul\":3898:3922   */\n      tag_131\n        /* \"#utility.yul\":3916:3921   */\n      dup2\n        /* \"#utility.yul\":3898:3922   */\n      tag_132\n      jump\t// in\n    tag_131:\n        /* \"#utility.yul\":3893:3896   */\n      dup3\n        /* \"#utility.yul\":3886:3923   */\n      mstore\n        /* \"#utility.yul\":3821:3929   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3935:4053   */\n    tag_133:\n        /* \"#utility.yul\":4022:4046   */\n      tag_135\n        /* \"#utility.yul\":4040:4045   */\n      dup2\n        /* \"#utility.yul\":4022:4046   */\n      tag_132\n      jump\t// in\n    tag_135:\n        /* \"#utility.yul\":4017:4020   */\n      dup3\n        /* \"#utility.yul\":4010:4047   */\n      mstore\n        /* \"#utility.yul\":3935:4053   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4089:4821   */\n    tag_136:\n        /* \"#utility.yul\":4208:4211   */\n      0x00\n        /* \"#utility.yul\":4237:4291   */\n      tag_138\n        /* \"#utility.yul\":4285:4290   */\n      dup3\n        /* \"#utility.yul\":4237:4291   */\n      tag_139\n      jump\t// in\n    tag_138:\n        /* \"#utility.yul\":4307:4393   */\n      tag_140\n        /* \"#utility.yul\":4386:4392   */\n      dup2\n        /* \"#utility.yul\":4381:4384   */\n      dup6\n        /* \"#utility.yul\":4307:4393   */\n      tag_141\n      jump\t// in\n    tag_140:\n        /* \"#utility.yul\":4300:4393   */\n      swap4\n      pop\n        /* \"#utility.yul\":4417:4473   */\n      tag_142\n        /* \"#utility.yul\":4467:4472   */\n      dup4\n        /* \"#utility.yul\":4417:4473   */\n      tag_143\n      jump\t// in\n    tag_142:\n        /* \"#utility.yul\":4496:4503   */\n      dup1\n        /* \"#utility.yul\":4527:4528   */\n      0x00\n        /* \"#utility.yul\":4512:4796   */\n    tag_144:\n        /* \"#utility.yul\":4537:4543   */\n      dup4\n        /* \"#utility.yul\":4534:4535   */\n      dup2\n        /* \"#utility.yul\":4531:4544   */\n      lt\n        /* \"#utility.yul\":4512:4796   */\n      iszero\n      tag_146\n      jumpi\n        /* \"#utility.yul\":4613:4619   */\n      dup2\n        /* \"#utility.yul\":4607:4620   */\n      mload\n        /* \"#utility.yul\":4640:4703   */\n      tag_147\n        /* \"#utility.yul\":4699:4702   */\n      dup9\n        /* \"#utility.yul\":4684:4697   */\n      dup3\n        /* \"#utility.yul\":4640:4703   */\n      tag_126\n      jump\t// in\n    tag_147:\n        /* \"#utility.yul\":4633:4703   */\n      swap8\n      pop\n        /* \"#utility.yul\":4726:4786   */\n      tag_148\n        /* \"#utility.yul\":4779:4785   */\n      dup4\n        /* \"#utility.yul\":4726:4786   */\n      tag_149\n      jump\t// in\n    tag_148:\n        /* \"#utility.yul\":4716:4786   */\n      swap3\n      pop\n        /* \"#utility.yul\":4572:4796   */\n      pop\n        /* \"#utility.yul\":4559:4560   */\n      0x01\n        /* \"#utility.yul\":4556:4557   */\n      dup2\n        /* \"#utility.yul\":4552:4561   */\n      add\n        /* \"#utility.yul\":4547:4561   */\n      swap1\n      pop\n        /* \"#utility.yul\":4512:4796   */\n      jump(tag_144)\n    tag_146:\n        /* \"#utility.yul\":4516:4530   */\n      pop\n        /* \"#utility.yul\":4812:4815   */\n      dup6\n        /* \"#utility.yul\":4805:4815   */\n      swap4\n      pop\n        /* \"#utility.yul\":4213:4821   */\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":4089:4821   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4827:5193   */\n    tag_150:\n        /* \"#utility.yul\":4969:4972   */\n      0x00\n        /* \"#utility.yul\":4990:5057   */\n      tag_152\n        /* \"#utility.yul\":5054:5056   */\n      0x21\n        /* \"#utility.yul\":5049:5052   */\n      dup4\n        /* \"#utility.yul\":4990:5057   */\n      tag_153\n      jump\t// in\n    tag_152:\n        /* \"#utility.yul\":4983:5057   */\n      swap2\n      pop\n        /* \"#utility.yul\":5066:5159   */\n      tag_154\n        /* \"#utility.yul\":5155:5158   */\n      dup3\n        /* \"#utility.yul\":5066:5159   */\n      tag_155\n      jump\t// in\n    tag_154:\n        /* \"#utility.yul\":5184:5186   */\n      0x40\n        /* \"#utility.yul\":5179:5182   */\n      dup3\n        /* \"#utility.yul\":5175:5187   */\n      add\n        /* \"#utility.yul\":5168:5187   */\n      swap1\n      pop\n        /* \"#utility.yul\":4827:5193   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5199:5317   */\n    tag_156:\n        /* \"#utility.yul\":5286:5310   */\n      tag_158\n        /* \"#utility.yul\":5304:5309   */\n      dup2\n        /* \"#utility.yul\":5286:5310   */\n      tag_159\n      jump\t// in\n    tag_158:\n        /* \"#utility.yul\":5281:5284   */\n      dup3\n        /* \"#utility.yul\":5274:5311   */\n      mstore\n        /* \"#utility.yul\":5199:5317   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5323:5545   */\n    tag_15:\n        /* \"#utility.yul\":5416:5420   */\n      0x00\n        /* \"#utility.yul\":5454:5456   */\n      0x20\n        /* \"#utility.yul\":5443:5452   */\n      dup3\n        /* \"#utility.yul\":5439:5457   */\n      add\n        /* \"#utility.yul\":5431:5457   */\n      swap1\n      pop\n        /* \"#utility.yul\":5467:5538   */\n      tag_161\n        /* \"#utility.yul\":5535:5536   */\n      0x00\n        /* \"#utility.yul\":5524:5533   */\n      dup4\n        /* \"#utility.yul\":5520:5537   */\n      add\n        /* \"#utility.yul\":5511:5517   */\n      dup5\n        /* \"#utility.yul\":5467:5538   */\n      tag_133\n      jump\t// in\n    tag_161:\n        /* \"#utility.yul\":5323:5545   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5551:5970   */\n    tag_68:\n        /* \"#utility.yul\":5717:5721   */\n      0x00\n        /* \"#utility.yul\":5755:5757   */\n      0x20\n        /* \"#utility.yul\":5744:5753   */\n      dup3\n        /* \"#utility.yul\":5740:5758   */\n      add\n        /* \"#utility.yul\":5732:5758   */\n      swap1\n      pop\n        /* \"#utility.yul\":5804:5813   */\n      dup2\n        /* \"#utility.yul\":5798:5802   */\n      dup2\n        /* \"#utility.yul\":5794:5814   */\n      sub\n        /* \"#utility.yul\":5790:5791   */\n      0x00\n        /* \"#utility.yul\":5779:5788   */\n      dup4\n        /* \"#utility.yul\":5775:5792   */\n      add\n        /* \"#utility.yul\":5768:5815   */\n      mstore\n        /* \"#utility.yul\":5832:5963   */\n      tag_163\n        /* \"#utility.yul\":5958:5962   */\n      dup2\n        /* \"#utility.yul\":5832:5963   */\n      tag_150\n      jump\t// in\n    tag_163:\n        /* \"#utility.yul\":5824:5963   */\n      swap1\n      pop\n        /* \"#utility.yul\":5551:5970   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5976:6198   */\n    tag_11:\n        /* \"#utility.yul\":6069:6073   */\n      0x00\n        /* \"#utility.yul\":6107:6109   */\n      0x20\n        /* \"#utility.yul\":6096:6105   */\n      dup3\n        /* \"#utility.yul\":6092:6110   */\n      add\n        /* \"#utility.yul\":6084:6110   */\n      swap1\n      pop\n        /* \"#utility.yul\":6120:6191   */\n      tag_165\n        /* \"#utility.yul\":6188:6189   */\n      0x00\n        /* \"#utility.yul\":6177:6186   */\n      dup4\n        /* \"#utility.yul\":6173:6190   */\n      add\n        /* \"#utility.yul\":6164:6170   */\n      dup5\n        /* \"#utility.yul\":6120:6191   */\n      tag_156\n      jump\t// in\n    tag_165:\n        /* \"#utility.yul\":5976:6198   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6204:6687   */\n    tag_52:\n        /* \"#utility.yul\":6375:6379   */\n      0x00\n        /* \"#utility.yul\":6413:6415   */\n      0x40\n        /* \"#utility.yul\":6402:6411   */\n      dup3\n        /* \"#utility.yul\":6398:6416   */\n      add\n        /* \"#utility.yul\":6390:6416   */\n      swap1\n      pop\n        /* \"#utility.yul\":6426:6497   */\n      tag_167\n        /* \"#utility.yul\":6494:6495   */\n      0x00\n        /* \"#utility.yul\":6483:6492   */\n      dup4\n        /* \"#utility.yul\":6479:6496   */\n      add\n        /* \"#utility.yul\":6470:6476   */\n      dup6\n        /* \"#utility.yul\":6426:6497   */\n      tag_156\n      jump\t// in\n    tag_167:\n        /* \"#utility.yul\":6544:6553   */\n      dup2\n        /* \"#utility.yul\":6538:6542   */\n      dup2\n        /* \"#utility.yul\":6534:6554   */\n      sub\n        /* \"#utility.yul\":6529:6531   */\n      0x20\n        /* \"#utility.yul\":6518:6527   */\n      dup4\n        /* \"#utility.yul\":6514:6532   */\n      add\n        /* \"#utility.yul\":6507:6555   */\n      mstore\n        /* \"#utility.yul\":6572:6680   */\n      tag_168\n        /* \"#utility.yul\":6675:6679   */\n      dup2\n        /* \"#utility.yul\":6666:6672   */\n      dup5\n        /* \"#utility.yul\":6572:6680   */\n      tag_136\n      jump\t// in\n    tag_168:\n        /* \"#utility.yul\":6564:6680   */\n      swap1\n      pop\n        /* \"#utility.yul\":6204:6687   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6693:6822   */\n    tag_75:\n        /* \"#utility.yul\":6727:6733   */\n      0x00\n        /* \"#utility.yul\":6754:6774   */\n      tag_170\n      tag_171\n      jump\t// in\n    tag_170:\n        /* \"#utility.yul\":6744:6774   */\n      swap1\n      pop\n        /* \"#utility.yul\":6783:6816   */\n      tag_172\n        /* \"#utility.yul\":6811:6815   */\n      dup3\n        /* \"#utility.yul\":6803:6809   */\n      dup3\n        /* \"#utility.yul\":6783:6816   */\n      tag_173\n      jump\t// in\n    tag_172:\n        /* \"#utility.yul\":6693:6822   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6828:6903   */\n    tag_171:\n        /* \"#utility.yul\":6861:6867   */\n      0x00\n        /* \"#utility.yul\":6894:6896   */\n      0x40\n        /* \"#utility.yul\":6888:6897   */\n      mload\n        /* \"#utility.yul\":6878:6897   */\n      swap1\n      pop\n        /* \"#utility.yul\":6828:6903   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":6909:7220   */\n    tag_74:\n        /* \"#utility.yul\":6986:6990   */\n      0x00\n        /* \"#utility.yul\":7076:7094   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":7068:7074   */\n      dup3\n        /* \"#utility.yul\":7065:7095   */\n      gt\n        /* \"#utility.yul\":7062:7118   */\n      iszero\n      tag_176\n      jumpi\n        /* \"#utility.yul\":7098:7116   */\n      tag_177\n      tag_42\n      jump\t// in\n    tag_177:\n        /* \"#utility.yul\":7062:7118   */\n    tag_176:\n        /* \"#utility.yul\":7148:7152   */\n      0x20\n        /* \"#utility.yul\":7140:7146   */\n      dup3\n        /* \"#utility.yul\":7136:7153   */\n      mul\n        /* \"#utility.yul\":7128:7153   */\n      swap1\n      pop\n        /* \"#utility.yul\":7208:7212   */\n      0x20\n        /* \"#utility.yul\":7202:7206   */\n      dup2\n        /* \"#utility.yul\":7198:7213   */\n      add\n        /* \"#utility.yul\":7190:7213   */\n      swap1\n      pop\n        /* \"#utility.yul\":6909:7220   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7226:7358   */\n    tag_143:\n        /* \"#utility.yul\":7293:7297   */\n      0x00\n        /* \"#utility.yul\":7316:7319   */\n      dup2\n        /* \"#utility.yul\":7308:7319   */\n      swap1\n      pop\n        /* \"#utility.yul\":7346:7350   */\n      0x20\n        /* \"#utility.yul\":7341:7344   */\n      dup3\n        /* \"#utility.yul\":7337:7351   */\n      add\n        /* \"#utility.yul\":7329:7351   */\n      swap1\n      pop\n        /* \"#utility.yul\":7226:7358   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7364:7478   */\n    tag_139:\n        /* \"#utility.yul\":7431:7437   */\n      0x00\n        /* \"#utility.yul\":7465:7470   */\n      dup2\n        /* \"#utility.yul\":7459:7471   */\n      mload\n        /* \"#utility.yul\":7449:7471   */\n      swap1\n      pop\n        /* \"#utility.yul\":7364:7478   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7484:7597   */\n    tag_149:\n        /* \"#utility.yul\":7554:7558   */\n      0x00\n        /* \"#utility.yul\":7586:7590   */\n      0x20\n        /* \"#utility.yul\":7581:7584   */\n      dup3\n        /* \"#utility.yul\":7577:7591   */\n      add\n        /* \"#utility.yul\":7569:7591   */\n      swap1\n      pop\n        /* \"#utility.yul\":7484:7597   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7603:7787   */\n    tag_141:\n        /* \"#utility.yul\":7702:7713   */\n      0x00\n        /* \"#utility.yul\":7736:7742   */\n      dup3\n        /* \"#utility.yul\":7731:7734   */\n      dup3\n        /* \"#utility.yul\":7724:7743   */\n      mstore\n        /* \"#utility.yul\":7776:7780   */\n      0x20\n        /* \"#utility.yul\":7771:7774   */\n      dup3\n        /* \"#utility.yul\":7767:7781   */\n      add\n        /* \"#utility.yul\":7752:7781   */\n      swap1\n      pop\n        /* \"#utility.yul\":7603:7787   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7793:7962   */\n    tag_153:\n        /* \"#utility.yul\":7877:7888   */\n      0x00\n        /* \"#utility.yul\":7911:7917   */\n      dup3\n        /* \"#utility.yul\":7906:7909   */\n      dup3\n        /* \"#utility.yul\":7899:7918   */\n      mstore\n        /* \"#utility.yul\":7951:7955   */\n      0x20\n        /* \"#utility.yul\":7946:7949   */\n      dup3\n        /* \"#utility.yul\":7942:7956   */\n      add\n        /* \"#utility.yul\":7927:7956   */\n      swap1\n      pop\n        /* \"#utility.yul\":7793:7962   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7968:8153   */\n    tag_65:\n        /* \"#utility.yul\":8008:8009   */\n      0x00\n        /* \"#utility.yul\":8025:8045   */\n      tag_184\n        /* \"#utility.yul\":8043:8044   */\n      dup3\n        /* \"#utility.yul\":8025:8045   */\n      tag_159\n      jump\t// in\n    tag_184:\n        /* \"#utility.yul\":8020:8045   */\n      swap2\n      pop\n        /* \"#utility.yul\":8059:8079   */\n      tag_185\n        /* \"#utility.yul\":8077:8078   */\n      dup4\n        /* \"#utility.yul\":8059:8079   */\n      tag_159\n      jump\t// in\n    tag_185:\n        /* \"#utility.yul\":8054:8079   */\n      swap3\n      pop\n        /* \"#utility.yul\":8098:8099   */\n      dup3\n        /* \"#utility.yul\":8088:8123   */\n      tag_186\n      jumpi\n        /* \"#utility.yul\":8103:8121   */\n      tag_187\n      tag_188\n      jump\t// in\n    tag_187:\n        /* \"#utility.yul\":8088:8123   */\n    tag_186:\n        /* \"#utility.yul\":8145:8146   */\n      dup3\n        /* \"#utility.yul\":8142:8143   */\n      dup3\n        /* \"#utility.yul\":8138:8147   */\n      div\n        /* \"#utility.yul\":8133:8147   */\n      swap1\n      pop\n        /* \"#utility.yul\":7968:8153   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8159:8507   */\n    tag_63:\n        /* \"#utility.yul\":8199:8206   */\n      0x00\n        /* \"#utility.yul\":8222:8242   */\n      tag_190\n        /* \"#utility.yul\":8240:8241   */\n      dup3\n        /* \"#utility.yul\":8222:8242   */\n      tag_159\n      jump\t// in\n    tag_190:\n        /* \"#utility.yul\":8217:8242   */\n      swap2\n      pop\n        /* \"#utility.yul\":8256:8276   */\n      tag_191\n        /* \"#utility.yul\":8274:8275   */\n      dup4\n        /* \"#utility.yul\":8256:8276   */\n      tag_159\n      jump\t// in\n    tag_191:\n        /* \"#utility.yul\":8251:8276   */\n      swap3\n      pop\n        /* \"#utility.yul\":8444:8445   */\n      dup2\n        /* \"#utility.yul\":8376:8442   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":8372:8446   */\n      div\n        /* \"#utility.yul\":8369:8370   */\n      dup4\n        /* \"#utility.yul\":8366:8447   */\n      gt\n        /* \"#utility.yul\":8361:8362   */\n      dup3\n        /* \"#utility.yul\":8354:8363   */\n      iszero\n        /* \"#utility.yul\":8347:8364   */\n      iszero\n        /* \"#utility.yul\":8343:8448   */\n      and\n        /* \"#utility.yul\":8340:8471   */\n      iszero\n      tag_192\n      jumpi\n        /* \"#utility.yul\":8451:8469   */\n      tag_193\n      tag_194\n      jump\t// in\n    tag_193:\n        /* \"#utility.yul\":8340:8471   */\n    tag_192:\n        /* \"#utility.yul\":8499:8500   */\n      dup3\n        /* \"#utility.yul\":8496:8497   */\n      dup3\n        /* \"#utility.yul\":8492:8501   */\n      mul\n        /* \"#utility.yul\":8481:8501   */\n      swap1\n      pop\n        /* \"#utility.yul\":8159:8507   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8513:8609   */\n    tag_132:\n        /* \"#utility.yul\":8550:8557   */\n      0x00\n        /* \"#utility.yul\":8579:8603   */\n      tag_196\n        /* \"#utility.yul\":8597:8602   */\n      dup3\n        /* \"#utility.yul\":8579:8603   */\n      tag_197\n      jump\t// in\n    tag_196:\n        /* \"#utility.yul\":8568:8603   */\n      swap1\n      pop\n        /* \"#utility.yul\":8513:8609   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8615:8725   */\n    tag_198:\n        /* \"#utility.yul\":8666:8673   */\n      0x00\n        /* \"#utility.yul\":8695:8719   */\n      tag_200\n        /* \"#utility.yul\":8713:8718   */\n      dup3\n        /* \"#utility.yul\":8695:8719   */\n      tag_132\n      jump\t// in\n    tag_200:\n        /* \"#utility.yul\":8684:8719   */\n      swap1\n      pop\n        /* \"#utility.yul\":8615:8725   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8731:8841   */\n    tag_201:\n        /* \"#utility.yul\":8782:8789   */\n      0x00\n        /* \"#utility.yul\":8811:8835   */\n      tag_203\n        /* \"#utility.yul\":8829:8834   */\n      dup3\n        /* \"#utility.yul\":8811:8835   */\n      tag_132\n      jump\t// in\n    tag_203:\n        /* \"#utility.yul\":8800:8835   */\n      swap1\n      pop\n        /* \"#utility.yul\":8731:8841   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8847:8973   */\n    tag_197:\n        /* \"#utility.yul\":8884:8891   */\n      0x00\n        /* \"#utility.yul\":8924:8966   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":8917:8922   */\n      dup3\n        /* \"#utility.yul\":8913:8967   */\n      and\n        /* \"#utility.yul\":8902:8967   */\n      swap1\n      pop\n        /* \"#utility.yul\":8847:8973   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8979:9056   */\n    tag_159:\n        /* \"#utility.yul\":9016:9023   */\n      0x00\n        /* \"#utility.yul\":9045:9050   */\n      dup2\n        /* \"#utility.yul\":9034:9050   */\n      swap1\n      pop\n        /* \"#utility.yul\":8979:9056   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9062:9343   */\n    tag_173:\n        /* \"#utility.yul\":9145:9172   */\n      tag_207\n        /* \"#utility.yul\":9167:9171   */\n      dup3\n        /* \"#utility.yul\":9145:9172   */\n      tag_208\n      jump\t// in\n    tag_207:\n        /* \"#utility.yul\":9137:9143   */\n      dup2\n        /* \"#utility.yul\":9133:9173   */\n      add\n        /* \"#utility.yul\":9275:9281   */\n      dup2\n        /* \"#utility.yul\":9263:9273   */\n      dup2\n        /* \"#utility.yul\":9260:9282   */\n      lt\n        /* \"#utility.yul\":9239:9257   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":9227:9237   */\n      dup3\n        /* \"#utility.yul\":9224:9258   */\n      gt\n        /* \"#utility.yul\":9221:9283   */\n      or\n        /* \"#utility.yul\":9218:9306   */\n      iszero\n      tag_209\n      jumpi\n        /* \"#utility.yul\":9286:9304   */\n      tag_210\n      tag_42\n      jump\t// in\n    tag_210:\n        /* \"#utility.yul\":9218:9306   */\n    tag_209:\n        /* \"#utility.yul\":9326:9336   */\n      dup1\n        /* \"#utility.yul\":9322:9324   */\n      0x40\n        /* \"#utility.yul\":9315:9337   */\n      mstore\n        /* \"#utility.yul\":9105:9343   */\n      pop\n        /* \"#utility.yul\":9062:9343   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9349:9529   */\n    tag_194:\n        /* \"#utility.yul\":9397:9474   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":9394:9395   */\n      0x00\n        /* \"#utility.yul\":9387:9475   */\n      mstore\n        /* \"#utility.yul\":9494:9498   */\n      0x11\n        /* \"#utility.yul\":9491:9492   */\n      0x04\n        /* \"#utility.yul\":9484:9499   */\n      mstore\n        /* \"#utility.yul\":9518:9522   */\n      0x24\n        /* \"#utility.yul\":9515:9516   */\n      0x00\n        /* \"#utility.yul\":9508:9523   */\n      revert\n        /* \"#utility.yul\":9535:9715   */\n    tag_188:\n        /* \"#utility.yul\":9583:9660   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":9580:9581   */\n      0x00\n        /* \"#utility.yul\":9573:9661   */\n      mstore\n        /* \"#utility.yul\":9680:9684   */\n      0x12\n        /* \"#utility.yul\":9677:9678   */\n      0x04\n        /* \"#utility.yul\":9670:9685   */\n      mstore\n        /* \"#utility.yul\":9704:9708   */\n      0x24\n        /* \"#utility.yul\":9701:9702   */\n      0x00\n        /* \"#utility.yul\":9694:9709   */\n      revert\n        /* \"#utility.yul\":9721:9901   */\n    tag_46:\n        /* \"#utility.yul\":9769:9846   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":9766:9767   */\n      0x00\n        /* \"#utility.yul\":9759:9847   */\n      mstore\n        /* \"#utility.yul\":9866:9870   */\n      0x32\n        /* \"#utility.yul\":9863:9864   */\n      0x04\n        /* \"#utility.yul\":9856:9871   */\n      mstore\n        /* \"#utility.yul\":9890:9894   */\n      0x24\n        /* \"#utility.yul\":9887:9888   */\n      0x00\n        /* \"#utility.yul\":9880:9895   */\n      revert\n        /* \"#utility.yul\":9907:10087   */\n    tag_42:\n        /* \"#utility.yul\":9955:10032   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":9952:9953   */\n      0x00\n        /* \"#utility.yul\":9945:10033   */\n      mstore\n        /* \"#utility.yul\":10052:10056   */\n      0x41\n        /* \"#utility.yul\":10049:10050   */\n      0x04\n        /* \"#utility.yul\":10042:10057   */\n      mstore\n        /* \"#utility.yul\":10076:10080   */\n      0x24\n        /* \"#utility.yul\":10073:10074   */\n      0x00\n        /* \"#utility.yul\":10066:10081   */\n      revert\n        /* \"#utility.yul\":10093:10210   */\n    tag_92:\n        /* \"#utility.yul\":10202:10203   */\n      0x00\n        /* \"#utility.yul\":10199:10200   */\n      dup1\n        /* \"#utility.yul\":10192:10204   */\n      revert\n        /* \"#utility.yul\":10216:10333   */\n    tag_78:\n        /* \"#utility.yul\":10325:10326   */\n      0x00\n        /* \"#utility.yul\":10322:10323   */\n      dup1\n        /* \"#utility.yul\":10315:10327   */\n      revert\n        /* \"#utility.yul\":10339:10456   */\n    tag_115:\n        /* \"#utility.yul\":10448:10449   */\n      0x00\n        /* \"#utility.yul\":10445:10446   */\n      dup1\n        /* \"#utility.yul\":10438:10450   */\n      revert\n        /* \"#utility.yul\":10462:10579   */\n    tag_108:\n        /* \"#utility.yul\":10571:10572   */\n      0x00\n        /* \"#utility.yul\":10568:10569   */\n      dup1\n        /* \"#utility.yul\":10561:10573   */\n      revert\n        /* \"#utility.yul\":10585:10687   */\n    tag_208:\n        /* \"#utility.yul\":10626:10632   */\n      0x00\n        /* \"#utility.yul\":10677:10679   */\n      0x1f\n        /* \"#utility.yul\":10673:10680   */\n      not\n        /* \"#utility.yul\":10668:10670   */\n      0x1f\n        /* \"#utility.yul\":10661:10666   */\n      dup4\n        /* \"#utility.yul\":10657:10671   */\n      add\n        /* \"#utility.yul\":10653:10681   */\n      and\n        /* \"#utility.yul\":10643:10681   */\n      swap1\n      pop\n        /* \"#utility.yul\":10585:10687   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10693:10913   */\n    tag_155:\n        /* \"#utility.yul\":10833:10867   */\n      0x536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f\n        /* \"#utility.yul\":10829:10830   */\n      0x00\n        /* \"#utility.yul\":10821:10827   */\n      dup3\n        /* \"#utility.yul\":10817:10831   */\n      add\n        /* \"#utility.yul\":10810:10868   */\n      mstore\n        /* \"#utility.yul\":10902:10905   */\n      0x7700000000000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":10897:10899   */\n      0x20\n        /* \"#utility.yul\":10889:10895   */\n      dup3\n        /* \"#utility.yul\":10885:10900   */\n      add\n        /* \"#utility.yul\":10878:10906   */\n      mstore\n        /* \"#utility.yul\":10693:10913   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10919:11041   */\n    tag_87:\n        /* \"#utility.yul\":10992:11016   */\n      tag_222\n        /* \"#utility.yul\":11010:11015   */\n      dup2\n        /* \"#utility.yul\":10992:11016   */\n      tag_132\n      jump\t// in\n    tag_222:\n        /* \"#utility.yul\":10985:10990   */\n      dup2\n        /* \"#utility.yul\":10982:11017   */\n      eq\n        /* \"#utility.yul\":10972:11035   */\n      tag_223\n      jumpi\n        /* \"#utility.yul\":11031:11032   */\n      0x00\n        /* \"#utility.yul\":11028:11029   */\n      dup1\n        /* \"#utility.yul\":11021:11033   */\n      revert\n        /* \"#utility.yul\":10972:11035   */\n    tag_223:\n        /* \"#utility.yul\":10919:11041   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11047:11197   */\n    tag_97:\n        /* \"#utility.yul\":11134:11172   */\n      tag_225\n        /* \"#utility.yul\":11166:11171   */\n      dup2\n        /* \"#utility.yul\":11134:11172   */\n      tag_198\n      jump\t// in\n    tag_225:\n        /* \"#utility.yul\":11127:11132   */\n      dup2\n        /* \"#utility.yul\":11124:11173   */\n      eq\n        /* \"#utility.yul\":11114:11191   */\n      tag_226\n      jumpi\n        /* \"#utility.yul\":11187:11188   */\n      0x00\n        /* \"#utility.yul\":11184:11185   */\n      dup1\n        /* \"#utility.yul\":11177:11189   */\n      revert\n        /* \"#utility.yul\":11114:11191   */\n    tag_226:\n        /* \"#utility.yul\":11047:11197   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11203:11353   */\n    tag_101:\n        /* \"#utility.yul\":11290:11328   */\n      tag_228\n        /* \"#utility.yul\":11322:11327   */\n      dup2\n        /* \"#utility.yul\":11290:11328   */\n      tag_201\n      jump\t// in\n    tag_228:\n        /* \"#utility.yul\":11283:11288   */\n      dup2\n        /* \"#utility.yul\":11280:11329   */\n      eq\n        /* \"#utility.yul\":11270:11347   */\n      tag_229\n      jumpi\n        /* \"#utility.yul\":11343:11344   */\n      0x00\n        /* \"#utility.yul\":11340:11341   */\n      dup1\n        /* \"#utility.yul\":11333:11345   */\n      revert\n        /* \"#utility.yul\":11270:11347   */\n    tag_229:\n        /* \"#utility.yul\":11203:11353   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11359:11481   */\n    tag_104:\n        /* \"#utility.yul\":11432:11456   */\n      tag_231\n        /* \"#utility.yul\":11450:11455   */\n      dup2\n        /* \"#utility.yul\":11432:11456   */\n      tag_159\n      jump\t// in\n    tag_231:\n        /* \"#utility.yul\":11425:11430   */\n      dup2\n        /* \"#utility.yul\":11422:11457   */\n      eq\n        /* \"#utility.yul\":11412:11475   */\n      tag_232\n      jumpi\n        /* \"#utility.yul\":11471:11472   */\n      0x00\n        /* \"#utility.yul\":11468:11469   */\n      dup1\n        /* \"#utility.yul\":11461:11473   */\n      revert\n        /* \"#utility.yul\":11412:11475   */\n    tag_232:\n        /* \"#utility.yul\":11359:11481   */\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212203120acc3172dcc50a3749d45114339d2017f5b40ee15636f60037c7c196fdcaf64736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405273ae13d989dac2f0debff460ac112a837c89baa7cd6000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507378867bbeef44f2326bf8ddd1941a4439382ef2a7600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550670de0b6b3a76400006002553480156100c557600080fd5b50610bed806100d56000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c8063344e49d914610046578063484f4ea9146100765780638dd9500214610094575b600080fd5b610060600480360381019061005b91906106bb565b6100b2565b60405161006d9190610829565b60405180910390f35b61007e61025a565b60405161008b91906107ee565b60405180910390f35b61009c610280565b6040516100a991906107ee565b60405180910390f35b60006102528373ffffffffffffffffffffffffffffffffffffffff166370a082318573ffffffffffffffffffffffffffffffffffffffff16630dfe16816040518163ffffffff1660e01b815260040160206040518083038186803b15801561011957600080fd5b505afa15801561012d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101519190610645565b6040518263ffffffff1660e01b815260040161016d91906107ee565b60206040518083038186803b15801561018557600080fd5b505afa158015610199573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101bd91906106fb565b610244848673ffffffffffffffffffffffffffffffffffffffff16630dfe16816040518163ffffffff1660e01b815260040160206040518083038186803b15801561020757600080fd5b505afa15801561021b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061023f9190610645565b6102a4565b6104d890919063ffffffff16565b905092915050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600080600367ffffffffffffffff8111156102c2576102c1610ab8565b5b6040519080825280602002602001820160405280156102f05781602001602082028036833780820191505090505b509050828160008151811061030857610307610a89565b5b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff168152505060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff168160018151811061037757610376610a89565b5b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff1681525050600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16816002815181106103e8576103e7610a89565b5b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff16815250508373ffffffffffffffffffffffffffffffffffffffff1663d06ca61f600254836040518363ffffffff1660e01b815260040161045f929190610844565b60006040518083038186803b15801561047757600080fd5b505afa15801561048b573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f820116820180604052508101906104b49190610672565b6002815181106104c7576104c6610a89565b5b602002602001015191505092915050565b6000808314156104eb576000905061054d565b600082846104f99190610940565b9050828482610508919061090f565b14610548576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161053f90610809565b60405180910390fd5b809150505b92915050565b600061056661056184610899565b610874565b9050808382526020820190508285602086028201111561058957610588610aec565b5b60005b858110156105b9578161059f8882610630565b84526020840193506020830192505060018101905061058c565b5050509392505050565b6000815190506105d281610b5b565b92915050565b600082601f8301126105ed576105ec610ae7565b5b81516105fd848260208601610553565b91505092915050565b60008135905061061581610b72565b92915050565b60008135905061062a81610b89565b92915050565b60008151905061063f81610ba0565b92915050565b60006020828403121561065b5761065a610af6565b5b6000610669848285016105c3565b91505092915050565b60006020828403121561068857610687610af6565b5b600082015167ffffffffffffffff8111156106a6576106a5610af1565b5b6106b2848285016105d8565b91505092915050565b600080604083850312156106d2576106d1610af6565b5b60006106e085828601610606565b92505060206106f18582860161061b565b9150509250929050565b60006020828403121561071157610710610af6565b5b600061071f84828501610630565b91505092915050565b60006107348383610740565b60208301905092915050565b6107498161099a565b82525050565b6107588161099a565b82525050565b6000610769826108d5565b61077381856108ed565b935061077e836108c5565b8060005b838110156107af5781516107968882610728565b97506107a1836108e0565b925050600181019050610782565b5085935050505092915050565b60006107c96021836108fe565b91506107d482610b0c565b604082019050919050565b6107e8816109f0565b82525050565b6000602082019050610803600083018461074f565b92915050565b60006020820190508181036000830152610822816107bc565b9050919050565b600060208201905061083e60008301846107df565b92915050565b600060408201905061085960008301856107df565b818103602083015261086b818461075e565b90509392505050565b600061087e61088f565b905061088a82826109fa565b919050565b6000604051905090565b600067ffffffffffffffff8211156108b4576108b3610ab8565b5b602082029050602081019050919050565b6000819050602082019050919050565b600081519050919050565b6000602082019050919050565b600082825260208201905092915050565b600082825260208201905092915050565b600061091a826109f0565b9150610925836109f0565b92508261093557610934610a5a565b5b828204905092915050565b600061094b826109f0565b9150610956836109f0565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff048311821515161561098f5761098e610a2b565b5b828202905092915050565b60006109a5826109d0565b9050919050565b60006109b78261099a565b9050919050565b60006109c98261099a565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b610a0382610afb565b810181811067ffffffffffffffff82111715610a2257610a21610ab8565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f60008201527f7700000000000000000000000000000000000000000000000000000000000000602082015250565b610b648161099a565b8114610b6f57600080fd5b50565b610b7b816109ac565b8114610b8657600080fd5b50565b610b92816109be565b8114610b9d57600080fd5b50565b610ba9816109f0565b8114610bb457600080fd5b5056fea26469706673582212203120acc3172dcc50a3749d45114339d2017f5b40ee15636f60037c7c196fdcaf64736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH20 0xAE13D989DAC2F0DEBFF460AC112A837C89BAA7CD PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH20 0x78867BBEEF44F2326BF8DDD1941A4439382EF2A7 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH8 0xDE0B6B3A7640000 PUSH1 0x2 SSTORE CALLVALUE DUP1 ISZERO PUSH2 0xC5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xBED DUP1 PUSH2 0xD5 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x41 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x344E49D9 EQ PUSH2 0x46 JUMPI DUP1 PUSH4 0x484F4EA9 EQ PUSH2 0x76 JUMPI DUP1 PUSH4 0x8DD95002 EQ PUSH2 0x94 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x60 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5B SWAP2 SWAP1 PUSH2 0x6BB JUMP JUMPDEST PUSH2 0xB2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6D SWAP2 SWAP1 PUSH2 0x829 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x7E PUSH2 0x25A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x8B SWAP2 SWAP1 PUSH2 0x7EE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x9C PUSH2 0x280 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xA9 SWAP2 SWAP1 PUSH2 0x7EE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH2 0x252 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xDFE1681 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x119 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x12D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x151 SWAP2 SWAP1 PUSH2 0x645 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x16D SWAP2 SWAP1 PUSH2 0x7EE JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x185 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x199 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1BD SWAP2 SWAP1 PUSH2 0x6FB JUMP JUMPDEST PUSH2 0x244 DUP5 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xDFE1681 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x207 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x21B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x23F SWAP2 SWAP1 PUSH2 0x645 JUMP JUMPDEST PUSH2 0x2A4 JUMP JUMPDEST PUSH2 0x4D8 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x3 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2C2 JUMPI PUSH2 0x2C1 PUSH2 0xAB8 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x2F0 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP DUP3 DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x308 JUMPI PUSH2 0x307 PUSH2 0xA89 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x377 JUMPI PUSH2 0x376 PUSH2 0xA89 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH1 0x2 DUP2 MLOAD DUP2 LT PUSH2 0x3E8 JUMPI PUSH2 0x3E7 PUSH2 0xA89 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xD06CA61F PUSH1 0x2 SLOAD DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x45F SWAP3 SWAP2 SWAP1 PUSH2 0x844 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x477 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x48B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x4B4 SWAP2 SWAP1 PUSH2 0x672 JUMP JUMPDEST PUSH1 0x2 DUP2 MLOAD DUP2 LT PUSH2 0x4C7 JUMPI PUSH2 0x4C6 PUSH2 0xA89 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 EQ ISZERO PUSH2 0x4EB JUMPI PUSH1 0x0 SWAP1 POP PUSH2 0x54D JUMP JUMPDEST PUSH1 0x0 DUP3 DUP5 PUSH2 0x4F9 SWAP2 SWAP1 PUSH2 0x940 JUMP JUMPDEST SWAP1 POP DUP3 DUP5 DUP3 PUSH2 0x508 SWAP2 SWAP1 PUSH2 0x90F JUMP JUMPDEST EQ PUSH2 0x548 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x53F SWAP1 PUSH2 0x809 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x566 PUSH2 0x561 DUP5 PUSH2 0x899 JUMP JUMPDEST PUSH2 0x874 JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP DUP3 DUP6 PUSH1 0x20 DUP7 MUL DUP3 ADD GT ISZERO PUSH2 0x589 JUMPI PUSH2 0x588 PUSH2 0xAEC JUMP JUMPDEST JUMPDEST PUSH1 0x0 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0x5B9 JUMPI DUP2 PUSH2 0x59F DUP9 DUP3 PUSH2 0x630 JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP PUSH1 0x20 DUP4 ADD SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x58C JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x5D2 DUP2 PUSH2 0xB5B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x5ED JUMPI PUSH2 0x5EC PUSH2 0xAE7 JUMP JUMPDEST JUMPDEST DUP2 MLOAD PUSH2 0x5FD DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x553 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x615 DUP2 PUSH2 0xB72 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x62A DUP2 PUSH2 0xB89 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x63F DUP2 PUSH2 0xBA0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x65B JUMPI PUSH2 0x65A PUSH2 0xAF6 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x669 DUP5 DUP3 DUP6 ADD PUSH2 0x5C3 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x688 JUMPI PUSH2 0x687 PUSH2 0xAF6 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP3 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x6A6 JUMPI PUSH2 0x6A5 PUSH2 0xAF1 JUMP JUMPDEST JUMPDEST PUSH2 0x6B2 DUP5 DUP3 DUP6 ADD PUSH2 0x5D8 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x6D2 JUMPI PUSH2 0x6D1 PUSH2 0xAF6 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x6E0 DUP6 DUP3 DUP7 ADD PUSH2 0x606 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x6F1 DUP6 DUP3 DUP7 ADD PUSH2 0x61B JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x711 JUMPI PUSH2 0x710 PUSH2 0xAF6 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x71F DUP5 DUP3 DUP6 ADD PUSH2 0x630 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x734 DUP4 DUP4 PUSH2 0x740 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x749 DUP2 PUSH2 0x99A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x758 DUP2 PUSH2 0x99A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x769 DUP3 PUSH2 0x8D5 JUMP JUMPDEST PUSH2 0x773 DUP2 DUP6 PUSH2 0x8ED JUMP JUMPDEST SWAP4 POP PUSH2 0x77E DUP4 PUSH2 0x8C5 JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x7AF JUMPI DUP2 MLOAD PUSH2 0x796 DUP9 DUP3 PUSH2 0x728 JUMP JUMPDEST SWAP8 POP PUSH2 0x7A1 DUP4 PUSH2 0x8E0 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x782 JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x7C9 PUSH1 0x21 DUP4 PUSH2 0x8FE JUMP JUMPDEST SWAP2 POP PUSH2 0x7D4 DUP3 PUSH2 0xB0C JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x7E8 DUP2 PUSH2 0x9F0 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x803 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x74F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x822 DUP2 PUSH2 0x7BC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x83E PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x7DF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x859 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x7DF JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x86B DUP2 DUP5 PUSH2 0x75E JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x87E PUSH2 0x88F JUMP JUMPDEST SWAP1 POP PUSH2 0x88A DUP3 DUP3 PUSH2 0x9FA JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x8B4 JUMPI PUSH2 0x8B3 PUSH2 0xAB8 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x91A DUP3 PUSH2 0x9F0 JUMP JUMPDEST SWAP2 POP PUSH2 0x925 DUP4 PUSH2 0x9F0 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x935 JUMPI PUSH2 0x934 PUSH2 0xA5A JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x94B DUP3 PUSH2 0x9F0 JUMP JUMPDEST SWAP2 POP PUSH2 0x956 DUP4 PUSH2 0x9F0 JUMP JUMPDEST SWAP3 POP DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x98F JUMPI PUSH2 0x98E PUSH2 0xA2B JUMP JUMPDEST JUMPDEST DUP3 DUP3 MUL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x9A5 DUP3 PUSH2 0x9D0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x9B7 DUP3 PUSH2 0x99A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x9C9 DUP3 PUSH2 0x99A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xA03 DUP3 PUSH2 0xAFB JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0xA22 JUMPI PUSH2 0xA21 PUSH2 0xAB8 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x536166654D6174683A206D756C7469706C69636174696F6E206F766572666C6F PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7700000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH2 0xB64 DUP2 PUSH2 0x99A JUMP JUMPDEST DUP2 EQ PUSH2 0xB6F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0xB7B DUP2 PUSH2 0x9AC JUMP JUMPDEST DUP2 EQ PUSH2 0xB86 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0xB92 DUP2 PUSH2 0x9BE JUMP JUMPDEST DUP2 EQ PUSH2 0xB9D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0xBA9 DUP2 PUSH2 0x9F0 JUMP JUMPDEST DUP2 EQ PUSH2 0xBB4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 BALANCE KECCAK256 0xAC 0xC3 OR 0x2D 0xCC POP LOG3 PUSH21 0x9D45114339D2017F5B40EE15636F60037C7C196FDC 0xAF PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "13698:962:0:-:0;;;13777:42;13755:64;;;;;;;;;;;;;;;;;;;;13848:42;13826:64;;;;;;;;;;;;;;;;;;;;13914:19;13897:36;;13698:962;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@BUSD_531": {
									"entryPoint": 602,
									"id": 531,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@CalcLpPrice_610": {
									"entryPoint": 178,
									"id": 610,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@WBNB_528": {
									"entryPoint": 640,
									"id": 528,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@mul_399": {
									"entryPoint": 1240,
									"id": 399,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@price_582": {
									"entryPoint": 676,
									"id": 582,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr_fromMemory": {
									"entryPoint": 1363,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 1475,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_array$_t_uint256_$dyn_memory_ptr_fromMemory": {
									"entryPoint": 1496,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_contract$_IERC20_$510": {
									"entryPoint": 1542,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_contract$_Router_$522": {
									"entryPoint": 1563,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 1584,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address_fromMemory": {
									"entryPoint": 1605,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_array$_t_uint256_$dyn_memory_ptr_fromMemory": {
									"entryPoint": 1650,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_contract$_IERC20_$510t_contract$_Router_$522": {
									"entryPoint": 1723,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_uint256_fromMemory": {
									"entryPoint": 1787,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encodeUpdatedPos_t_address_to_t_address": {
									"entryPoint": 1832,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address": {
									"entryPoint": 1856,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 1871,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_array$_t_address_$dyn_memory_ptr_to_t_array$_t_address_$dyn_memory_ptr_fromStack": {
									"entryPoint": 1886,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 1980,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 2015,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 2030,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 2057,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 2089,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_array$_t_address_$dyn_memory_ptr__to_t_uint256_t_array$_t_address_$dyn_memory_ptr__fromStack_reversed": {
									"entryPoint": 2116,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"allocate_memory": {
									"entryPoint": 2164,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": 2191,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 2201,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_dataslot_t_array$_t_address_$dyn_memory_ptr": {
									"entryPoint": 2245,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_array$_t_address_$dyn_memory_ptr": {
									"entryPoint": 2261,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_nextElement_t_array$_t_address_$dyn_memory_ptr": {
									"entryPoint": 2272,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_array$_t_address_$dyn_memory_ptr_fromStack": {
									"entryPoint": 2285,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 2302,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 2319,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 2368,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 2458,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_contract$_IERC20_$510": {
									"entryPoint": 2476,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_contract$_Router_$522": {
									"entryPoint": 2494,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 2512,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 2544,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"finalize_allocation": {
									"entryPoint": 2554,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"panic_error_0x11": {
									"entryPoint": 2603,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 2650,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 2697,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 2744,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 2791,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef": {
									"entryPoint": 2796,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 2801,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 2806,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 2811,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"store_literal_in_memory_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3": {
									"entryPoint": 2828,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 2907,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_contract$_IERC20_$510": {
									"entryPoint": 2930,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_contract$_Router_$522": {
									"entryPoint": 2953,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 2976,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:11484:1",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "137:631:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "147:90:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "229:6:1"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "172:56:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "172:64:1"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nodeType": "YulIdentifier",
																	"src": "156:15:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "156:81:1"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "147:5:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "246:16:1",
															"value": {
																"name": "array",
																"nodeType": "YulIdentifier",
																"src": "257:5:1"
															},
															"variables": [
																{
																	"name": "dst",
																	"nodeType": "YulTypedName",
																	"src": "250:3:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "279:5:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "286:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "272:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "272:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "272:21:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "302:23:1",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "313:5:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "320:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "309:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "309:16:1"
															},
															"variableNames": [
																{
																	"name": "dst",
																	"nodeType": "YulIdentifier",
																	"src": "302:3:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "335:17:1",
															"value": {
																"name": "offset",
																"nodeType": "YulIdentifier",
																"src": "346:6:1"
															},
															"variables": [
																{
																	"name": "src",
																	"nodeType": "YulTypedName",
																	"src": "339:3:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "401:103:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
																				"nodeType": "YulIdentifier",
																				"src": "415:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "415:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "415:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "371:3:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "length",
																						"nodeType": "YulIdentifier",
																						"src": "380:6:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "388:4:1",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nodeType": "YulIdentifier",
																					"src": "376:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "376:17:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "367:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "367:27:1"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "396:3:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "364:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "364:36:1"
															},
															"nodeType": "YulIf",
															"src": "361:143:1"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "573:189:1",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "588:21:1",
																		"value": {
																			"name": "src",
																			"nodeType": "YulIdentifier",
																			"src": "606:3:1"
																		},
																		"variables": [
																			{
																				"name": "elementPos",
																				"nodeType": "YulTypedName",
																				"src": "592:10:1",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "630:3:1"
																				},
																				{
																					"arguments": [
																						{
																							"name": "elementPos",
																							"nodeType": "YulIdentifier",
																							"src": "667:10:1"
																						},
																						{
																							"name": "end",
																							"nodeType": "YulIdentifier",
																							"src": "679:3:1"
																						}
																					],
																					"functionName": {
																						"name": "abi_decode_t_uint256_fromMemory",
																						"nodeType": "YulIdentifier",
																						"src": "635:31:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "635:48:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "623:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "623:61:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "623:61:1"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "697:21:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "708:3:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "713:4:1",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "704:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "704:14:1"
																		},
																		"variableNames": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "697:3:1"
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "731:21:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "src",
																					"nodeType": "YulIdentifier",
																					"src": "742:3:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "747:4:1",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "738:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "738:14:1"
																		},
																		"variableNames": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "731:3:1"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "535:1:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "538:6:1"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "532:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "532:13:1"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "546:18:1",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "548:14:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "557:1:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "560:1:1",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "553:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "553:9:1"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "548:1:1"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "517:14:1",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "519:10:1",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "528:1:1",
																			"type": "",
																			"value": "0"
																		},
																		"variables": [
																			{
																				"name": "i",
																				"nodeType": "YulTypedName",
																				"src": "523:1:1",
																				"type": ""
																			}
																		]
																	}
																]
															},
															"src": "513:249:1"
														}
													]
												},
												"name": "abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "107:6:1",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "115:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "123:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "131:5:1",
														"type": ""
													}
												],
												"src": "24:744:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "837:80:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "847:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "862:6:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "856:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "856:13:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "847:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "905:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "878:26:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "878:33:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "878:33:1"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "815:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "823:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "831:5:1",
														"type": ""
													}
												],
												"src": "774:143:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1028:297:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1077:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nodeType": "YulIdentifier",
																				"src": "1079:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1079:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1079:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1056:6:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1064:4:1",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1052:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1052:17:1"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "1071:3:1"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "1048:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1048:27:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1041:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1041:35:1"
															},
															"nodeType": "YulIf",
															"src": "1038:122:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1169:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1189:6:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1183:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1183:13:1"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "1173:6:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1205:114:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "1292:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1300:4:1",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1288:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1288:17:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1307:6:1"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "1315:3:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "1214:73:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1214:105:1"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "1205:5:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_array$_t_uint256_$dyn_memory_ptr_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "1006:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1014:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "1022:5:1",
														"type": ""
													}
												],
												"src": "940:385:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1397:101:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1407:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1429:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1416:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1416:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "1407:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1486:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_contract$_IERC20_$510",
																	"nodeType": "YulIdentifier",
																	"src": "1445:40:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1445:47:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1445:47:1"
														}
													]
												},
												"name": "abi_decode_t_contract$_IERC20_$510",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "1375:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1383:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1391:5:1",
														"type": ""
													}
												],
												"src": "1331:167:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1570:101:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1580:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1602:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1589:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1589:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "1580:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1659:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_contract$_Router_$522",
																	"nodeType": "YulIdentifier",
																	"src": "1618:40:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1618:47:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1618:47:1"
														}
													]
												},
												"name": "abi_decode_t_contract$_Router_$522",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "1548:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1556:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1564:5:1",
														"type": ""
													}
												],
												"src": "1504:167:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1740:80:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1750:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1765:6:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1759:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1759:13:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "1750:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1808:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "1781:26:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1781:33:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1781:33:1"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "1718:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1726:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1734:5:1",
														"type": ""
													}
												],
												"src": "1677:143:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1903:274:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1949:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "1951:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1951:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1951:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1924:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1933:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1920:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1920:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1945:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1916:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1916:32:1"
															},
															"nodeType": "YulIf",
															"src": "1913:119:1"
														},
														{
															"nodeType": "YulBlock",
															"src": "2042:128:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2057:15:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2071:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2061:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2086:74:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2132:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2143:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2128:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2128:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2152:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "2096:31:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2096:64:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "2086:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1873:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1884:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1896:6:1",
														"type": ""
													}
												],
												"src": "1826:351:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2285:452:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2331:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "2333:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2333:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2333:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2306:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2315:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2302:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2302:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2327:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2298:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2298:32:1"
															},
															"nodeType": "YulIf",
															"src": "2295:119:1"
														},
														{
															"nodeType": "YulBlock",
															"src": "2424:306:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2439:38:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2463:9:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2474:1:1",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2459:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2459:17:1"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "2453:5:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2453:24:1"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2443:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "2524:83:1",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "2526:77:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2526:79:1"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "2526:79:1"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "2496:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2504:18:1",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "2493:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2493:30:1"
																	},
																	"nodeType": "YulIf",
																	"src": "2490:117:1"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2621:99:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2692:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2703:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2688:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2688:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2712:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_array$_t_uint256_$dyn_memory_ptr_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "2631:56:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2631:89:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "2621:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_array$_t_uint256_$dyn_memory_ptr_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2255:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2266:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2278:6:1",
														"type": ""
													}
												],
												"src": "2183:554:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2854:419:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2900:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "2902:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2902:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2902:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2875:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2884:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2871:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2871:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2896:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2867:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2867:32:1"
															},
															"nodeType": "YulIf",
															"src": "2864:119:1"
														},
														{
															"nodeType": "YulBlock",
															"src": "2993:131:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3008:15:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3022:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3012:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3037:77:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3086:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3097:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3082:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3082:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3106:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_contract$_IERC20_$510",
																			"nodeType": "YulIdentifier",
																			"src": "3047:34:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3047:67:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "3037:6:1"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "3134:132:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3149:16:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3163:2:1",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3153:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3179:77:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3228:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3239:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3224:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3224:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3248:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_contract$_Router_$522",
																			"nodeType": "YulIdentifier",
																			"src": "3189:34:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3189:67:1"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "3179:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_contract$_IERC20_$510t_contract$_Router_$522",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2816:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2827:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2839:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2847:6:1",
														"type": ""
													}
												],
												"src": "2743:530:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3356:274:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3402:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "3404:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3404:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3404:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3377:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3386:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3373:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3373:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3398:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3369:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3369:32:1"
															},
															"nodeType": "YulIf",
															"src": "3366:119:1"
														},
														{
															"nodeType": "YulBlock",
															"src": "3495:128:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3510:15:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3524:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3514:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3539:74:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3585:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3596:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3581:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3581:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3605:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "3549:31:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3549:64:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "3539:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3326:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3337:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3349:6:1",
														"type": ""
													}
												],
												"src": "3279:351:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3716:99:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "3760:6:1"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3768:3:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "3726:33:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3726:46:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3726:46:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3781:28:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3799:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3804:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3795:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3795:14:1"
															},
															"variableNames": [
																{
																	"name": "updatedPos",
																	"nodeType": "YulIdentifier",
																	"src": "3781:10:1"
																}
															]
														}
													]
												},
												"name": "abi_encodeUpdatedPos_t_address_to_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3689:6:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3697:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updatedPos",
														"nodeType": "YulTypedName",
														"src": "3705:10:1",
														"type": ""
													}
												],
												"src": "3636:179:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3876:53:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3893:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3916:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "3898:17:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3898:24:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3886:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3886:37:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3886:37:1"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3864:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3871:3:1",
														"type": ""
													}
												],
												"src": "3821:108:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4000:53:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4017:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "4040:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "4022:17:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4022:24:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4010:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4010:37:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4010:37:1"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3988:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3995:3:1",
														"type": ""
													}
												],
												"src": "3935:118:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4213:608:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4223:68:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "4285:5:1"
																	}
																],
																"functionName": {
																	"name": "array_length_t_array$_t_address_$dyn_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "4237:47:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4237:54:1"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "4227:6:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4300:93:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4381:3:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "4386:6:1"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_array$_t_address_$dyn_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4307:73:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4307:86:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "4300:3:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4402:71:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "4467:5:1"
																	}
																],
																"functionName": {
																	"name": "array_dataslot_t_array$_t_address_$dyn_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "4417:49:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4417:56:1"
															},
															"variables": [
																{
																	"name": "baseRef",
																	"nodeType": "YulTypedName",
																	"src": "4406:7:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4482:21:1",
															"value": {
																"name": "baseRef",
																"nodeType": "YulIdentifier",
																"src": "4496:7:1"
															},
															"variables": [
																{
																	"name": "srcPtr",
																	"nodeType": "YulTypedName",
																	"src": "4486:6:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4572:224:1",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "4586:34:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nodeType": "YulIdentifier",
																					"src": "4613:6:1"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nodeType": "YulIdentifier",
																				"src": "4607:5:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4607:13:1"
																		},
																		"variables": [
																			{
																				"name": "elementValue0",
																				"nodeType": "YulTypedName",
																				"src": "4590:13:1",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "4633:70:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "elementValue0",
																					"nodeType": "YulIdentifier",
																					"src": "4684:13:1"
																				},
																				{
																					"name": "pos",
																					"nodeType": "YulIdentifier",
																					"src": "4699:3:1"
																				}
																			],
																			"functionName": {
																				"name": "abi_encodeUpdatedPos_t_address_to_t_address",
																				"nodeType": "YulIdentifier",
																				"src": "4640:43:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4640:63:1"
																		},
																		"variableNames": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "4633:3:1"
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "4716:70:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nodeType": "YulIdentifier",
																					"src": "4779:6:1"
																				}
																			],
																			"functionName": {
																				"name": "array_nextElement_t_array$_t_address_$dyn_memory_ptr",
																				"nodeType": "YulIdentifier",
																				"src": "4726:52:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4726:60:1"
																		},
																		"variableNames": [
																			{
																				"name": "srcPtr",
																				"nodeType": "YulIdentifier",
																				"src": "4716:6:1"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "4534:1:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "4537:6:1"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "4531:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4531:13:1"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "4545:18:1",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "4547:14:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "4556:1:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4559:1:1",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "4552:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4552:9:1"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "4547:1:1"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "4516:14:1",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "4518:10:1",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "4527:1:1",
																			"type": "",
																			"value": "0"
																		},
																		"variables": [
																			{
																				"name": "i",
																				"nodeType": "YulTypedName",
																				"src": "4522:1:1",
																				"type": ""
																			}
																		]
																	}
																]
															},
															"src": "4512:284:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4805:10:1",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "4812:3:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "4805:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_array$_t_address_$dyn_memory_ptr_to_t_array$_t_address_$dyn_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4192:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4199:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "4208:3:1",
														"type": ""
													}
												],
												"src": "4089:732:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4973:220:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4983:74:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5049:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5054:2:1",
																		"type": "",
																		"value": "33"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4990:58:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4990:67:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "4983:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5155:3:1"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3",
																	"nodeType": "YulIdentifier",
																	"src": "5066:88:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5066:93:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5066:93:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5168:19:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5179:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5184:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5175:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5175:12:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "5168:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4961:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "4969:3:1",
														"type": ""
													}
												],
												"src": "4827:366:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5264:53:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5281:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "5304:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "5286:17:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5286:24:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5274:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5274:37:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5274:37:1"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5252:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "5259:3:1",
														"type": ""
													}
												],
												"src": "5199:118:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5421:124:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5431:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5443:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5454:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5439:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5439:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5431:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "5511:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5524:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5535:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5520:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5520:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5467:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5467:71:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5467:71:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5393:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5405:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5416:4:1",
														"type": ""
													}
												],
												"src": "5323:222:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5722:248:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5732:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5744:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5755:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5740:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5740:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5732:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5779:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5790:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5775:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5775:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "5798:4:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5804:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5794:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5794:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5768:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5768:47:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5768:47:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5824:139:1",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "5958:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5832:124:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5832:131:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5824:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5702:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5717:4:1",
														"type": ""
													}
												],
												"src": "5551:419:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6074:124:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6084:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6096:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6107:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6092:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6092:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6084:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "6164:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6177:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6188:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6173:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6173:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6120:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6120:71:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6120:71:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6046:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6058:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6069:4:1",
														"type": ""
													}
												],
												"src": "5976:222:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6380:307:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6390:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6402:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6413:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6398:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6398:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6390:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "6470:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6483:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6494:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6479:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6479:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6426:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6426:71:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6426:71:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6518:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6529:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6514:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6514:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "6538:4:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6544:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "6534:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6534:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6507:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6507:48:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6507:48:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6564:116:1",
															"value": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "6666:6:1"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "6675:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_array$_t_address_$dyn_memory_ptr_to_t_array$_t_address_$dyn_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6572:93:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6572:108:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6564:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_array$_t_address_$dyn_memory_ptr__to_t_uint256_t_array$_t_address_$dyn_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6344:9:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "6356:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6364:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6375:4:1",
														"type": ""
													}
												],
												"src": "6204:483:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6734:88:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6744:30:1",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "allocate_unbounded",
																	"nodeType": "YulIdentifier",
																	"src": "6754:18:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6754:20:1"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "6744:6:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "6803:6:1"
																	},
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "6811:4:1"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nodeType": "YulIdentifier",
																	"src": "6783:19:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6783:33:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6783:33:1"
														}
													]
												},
												"name": "allocate_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "6718:4:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "6727:6:1",
														"type": ""
													}
												],
												"src": "6693:129:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6868:35:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6878:19:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6894:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "6888:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6888:9:1"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "6878:6:1"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "6861:6:1",
														"type": ""
													}
												],
												"src": "6828:75:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6991:229:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7096:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "7098:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7098:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7098:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "7068:6:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7076:18:1",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "7065:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7065:30:1"
															},
															"nodeType": "YulIf",
															"src": "7062:56:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7128:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "7140:6:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7148:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "7136:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7136:17:1"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "7128:4:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "7190:23:1",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "7202:4:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7208:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7198:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7198:15:1"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "7190:4:1"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "6975:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "6986:4:1",
														"type": ""
													}
												],
												"src": "6909:311:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7298:60:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7308:11:1",
															"value": {
																"name": "ptr",
																"nodeType": "YulIdentifier",
																"src": "7316:3:1"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "7308:4:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "7329:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nodeType": "YulIdentifier",
																		"src": "7341:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7346:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7337:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7337:14:1"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "7329:4:1"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_array$_t_address_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nodeType": "YulTypedName",
														"src": "7285:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "7293:4:1",
														"type": ""
													}
												],
												"src": "7226:132:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7438:40:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7449:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "7465:5:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "7459:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7459:12:1"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "7449:6:1"
																}
															]
														}
													]
												},
												"name": "array_length_t_array$_t_address_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "7421:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "7431:6:1",
														"type": ""
													}
												],
												"src": "7364:114:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7559:38:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7569:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nodeType": "YulIdentifier",
																		"src": "7581:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7586:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7577:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7577:14:1"
															},
															"variableNames": [
																{
																	"name": "next",
																	"nodeType": "YulIdentifier",
																	"src": "7569:4:1"
																}
															]
														}
													]
												},
												"name": "array_nextElement_t_array$_t_address_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nodeType": "YulTypedName",
														"src": "7546:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "next",
														"nodeType": "YulTypedName",
														"src": "7554:4:1",
														"type": ""
													}
												],
												"src": "7484:113:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7714:73:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7731:3:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "7736:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7724:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7724:19:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7724:19:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7752:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7771:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7776:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7767:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7767:14:1"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "7752:11:1"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_array$_t_address_$dyn_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "7686:3:1",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "7691:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "7702:11:1",
														"type": ""
													}
												],
												"src": "7603:184:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7889:73:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7906:3:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "7911:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7899:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7899:19:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7899:19:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7927:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7946:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7951:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7942:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7942:14:1"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "7927:11:1"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "7861:3:1",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "7866:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "7877:11:1",
														"type": ""
													}
												],
												"src": "7793:169:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8010:143:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8020:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "8043:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "8025:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8025:20:1"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "8020:1:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "8054:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "8077:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "8059:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8059:20:1"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "8054:1:1"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8101:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nodeType": "YulIdentifier",
																				"src": "8103:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8103:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8103:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "8098:1:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "8091:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8091:9:1"
															},
															"nodeType": "YulIf",
															"src": "8088:35:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8133:14:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "8142:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "8145:1:1"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "8138:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8138:9:1"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "8133:1:1"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "7999:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "8002:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "8008:1:1",
														"type": ""
													}
												],
												"src": "7968:185:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8207:300:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8217:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "8240:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "8222:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8222:20:1"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "8217:1:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "8251:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "8274:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "8256:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8256:20:1"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "8251:1:1"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8449:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "8451:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8451:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8451:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "8361:1:1"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "8354:6:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "8354:9:1"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "8347:6:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8347:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "8369:1:1"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "8376:66:1",
																						"type": "",
																						"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																					},
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "8444:1:1"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nodeType": "YulIdentifier",
																					"src": "8372:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "8372:74:1"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "8366:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8366:81:1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "8343:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8343:105:1"
															},
															"nodeType": "YulIf",
															"src": "8340:131:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8481:20:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "8496:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "8499:1:1"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "8492:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8492:9:1"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nodeType": "YulIdentifier",
																	"src": "8481:7:1"
																}
															]
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "8190:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "8193:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nodeType": "YulTypedName",
														"src": "8199:7:1",
														"type": ""
													}
												],
												"src": "8159:348:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8558:51:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8568:35:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "8597:5:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "8579:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8579:24:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "8568:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "8540:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "8550:7:1",
														"type": ""
													}
												],
												"src": "8513:96:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8674:51:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8684:35:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "8713:5:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "8695:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8695:24:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "8684:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_contract$_IERC20_$510",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "8656:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "8666:7:1",
														"type": ""
													}
												],
												"src": "8615:110:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8790:51:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8800:35:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "8829:5:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "8811:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8811:24:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "8800:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_contract$_Router_$522",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "8772:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "8782:7:1",
														"type": ""
													}
												],
												"src": "8731:110:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8892:81:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8902:65:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "8917:5:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8924:42:1",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "8913:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8913:54:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "8902:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "8874:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "8884:7:1",
														"type": ""
													}
												],
												"src": "8847:126:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9024:32:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9034:16:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "9045:5:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "9034:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "9006:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "9016:7:1",
														"type": ""
													}
												],
												"src": "8979:77:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9105:238:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "9115:58:1",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "9137:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "size",
																				"nodeType": "YulIdentifier",
																				"src": "9167:4:1"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "9145:21:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9145:27:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9133:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9133:40:1"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "9119:10:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "9284:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "9286:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9286:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9286:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "9227:10:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9239:18:1",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "9224:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9224:34:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "9263:10:1"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "9275:6:1"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "9260:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9260:22:1"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "9221:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9221:62:1"
															},
															"nodeType": "YulIf",
															"src": "9218:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9322:2:1",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "9326:10:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9315:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9315:22:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9315:22:1"
														}
													]
												},
												"name": "finalize_allocation",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "9091:6:1",
														"type": ""
													},
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "9099:4:1",
														"type": ""
													}
												],
												"src": "9062:281:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9377:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9394:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9397:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9387:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9387:88:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9387:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9491:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9494:4:1",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9484:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9484:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9484:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9515:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9518:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "9508:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9508:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9508:15:1"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "9349:180:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9563:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9580:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9583:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9573:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9573:88:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9573:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9677:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9680:4:1",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9670:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9670:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9670:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9701:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9704:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "9694:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9694:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9694:15:1"
														}
													]
												},
												"name": "panic_error_0x12",
												"nodeType": "YulFunctionDefinition",
												"src": "9535:180:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9749:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9766:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9769:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9759:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9759:88:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9759:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9863:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9866:4:1",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9856:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9856:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9856:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9887:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9890:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "9880:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9880:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9880:15:1"
														}
													]
												},
												"name": "panic_error_0x32",
												"nodeType": "YulFunctionDefinition",
												"src": "9721:180:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9935:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9952:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9955:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9945:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9945:88:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9945:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10049:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10052:4:1",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10042:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10042:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10042:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10073:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10076:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "10066:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10066:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10066:15:1"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "9907:180:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10182:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10199:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10202:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "10192:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10192:12:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10192:12:1"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nodeType": "YulFunctionDefinition",
												"src": "10093:117:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10305:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10322:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10325:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "10315:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10315:12:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10315:12:1"
														}
													]
												},
												"name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
												"nodeType": "YulFunctionDefinition",
												"src": "10216:117:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10428:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10445:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10448:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "10438:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10438:12:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10438:12:1"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "10339:117:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10551:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10568:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10571:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "10561:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10561:12:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10561:12:1"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "10462:117:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10633:54:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10643:38:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "10661:5:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10668:2:1",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10657:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10657:14:1"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10677:2:1",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "10673:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10673:7:1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "10653:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10653:28:1"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "10643:6:1"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "10616:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "10626:6:1",
														"type": ""
													}
												],
												"src": "10585:102:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10799:114:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "10821:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10829:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10817:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10817:14:1"
																	},
																	{
																		"hexValue": "536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "10833:34:1",
																		"type": "",
																		"value": "SafeMath: multiplication overflo"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10810:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10810:58:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10810:58:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "10889:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10897:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10885:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10885:15:1"
																	},
																	{
																		"hexValue": "77",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "10902:3:1",
																		"type": "",
																		"value": "w"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10878:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10878:28:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10878:28:1"
														}
													]
												},
												"name": "store_literal_in_memory_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "10791:6:1",
														"type": ""
													}
												],
												"src": "10693:220:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10962:79:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "11019:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "11028:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "11031:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "11021:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11021:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "11021:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "10985:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "11010:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "10992:17:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "10992:24:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "10982:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10982:35:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "10975:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10975:43:1"
															},
															"nodeType": "YulIf",
															"src": "10972:63:1"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "10955:5:1",
														"type": ""
													}
												],
												"src": "10919:122:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11104:93:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "11175:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "11184:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "11187:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "11177:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11177:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "11177:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "11127:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "11166:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_contract$_IERC20_$510",
																					"nodeType": "YulIdentifier",
																					"src": "11134:31:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "11134:38:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "11124:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11124:49:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "11117:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11117:57:1"
															},
															"nodeType": "YulIf",
															"src": "11114:77:1"
														}
													]
												},
												"name": "validator_revert_t_contract$_IERC20_$510",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "11097:5:1",
														"type": ""
													}
												],
												"src": "11047:150:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11260:93:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "11331:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "11340:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "11343:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "11333:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11333:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "11333:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "11283:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "11322:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_contract$_Router_$522",
																					"nodeType": "YulIdentifier",
																					"src": "11290:31:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "11290:38:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "11280:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11280:49:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "11273:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11273:57:1"
															},
															"nodeType": "YulIf",
															"src": "11270:77:1"
														}
													]
												},
												"name": "validator_revert_t_contract$_Router_$522",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "11253:5:1",
														"type": ""
													}
												],
												"src": "11203:150:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11402:79:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "11459:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "11468:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "11471:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "11461:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11461:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "11461:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "11425:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "11450:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "11432:17:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "11432:24:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "11422:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11422:35:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "11415:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11415:43:1"
															},
															"nodeType": "YulIf",
															"src": "11412:63:1"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "11395:5:1",
														"type": ""
													}
												],
												"src": "11359:122:1"
											}
										]
									},
									"contents": "{\n\n    // uint256[]\n    function abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr_fromMemory(offset, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr(length))\n        let dst := array\n\n        mstore(array, length)\n        dst := add(array, 0x20)\n\n        let src := offset\n        if gt(add(src, mul(length, 0x20)), end) {\n            revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef()\n        }\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n\n            let elementPos := src\n\n            mstore(dst, abi_decode_t_uint256_fromMemory(elementPos, end))\n            dst := add(dst, 0x20)\n            src := add(src, 0x20)\n        }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    // uint256[]\n    function abi_decode_t_array$_t_uint256_$dyn_memory_ptr_fromMemory(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := mload(offset)\n        array := abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr_fromMemory(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_t_contract$_IERC20_$510(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_contract$_IERC20_$510(value)\n    }\n\n    function abi_decode_t_contract$_Router_$522(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_contract$_Router_$522(value)\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_array$_t_uint256_$dyn_memory_ptr_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := mload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_array$_t_uint256_$dyn_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_contract$_IERC20_$510t_contract$_Router_$522(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_contract$_IERC20_$510(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_contract$_Router_$522(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encodeUpdatedPos_t_address_to_t_address(value0, pos) -> updatedPos {\n        abi_encode_t_address_to_t_address(value0, pos)\n        updatedPos := add(pos, 0x20)\n    }\n\n    function abi_encode_t_address_to_t_address(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    // address[] -> address[]\n    function abi_encode_t_array$_t_address_$dyn_memory_ptr_to_t_array$_t_address_$dyn_memory_ptr_fromStack(value, pos)  -> end  {\n        let length := array_length_t_array$_t_address_$dyn_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_array$_t_address_$dyn_memory_ptr_fromStack(pos, length)\n        let baseRef := array_dataslot_t_array$_t_address_$dyn_memory_ptr(value)\n        let srcPtr := baseRef\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n            let elementValue0 := mload(srcPtr)\n            pos := abi_encodeUpdatedPos_t_address_to_t_address(elementValue0, pos)\n            srcPtr := array_nextElement_t_array$_t_address_$dyn_memory_ptr(srcPtr)\n        }\n        end := pos\n    }\n\n    function abi_encode_t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 33)\n        store_literal_in_memory_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_array$_t_address_$dyn_memory_ptr__to_t_uint256_t_array$_t_address_$dyn_memory_ptr__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        mstore(add(headStart, 32), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_address_$dyn_memory_ptr_to_t_array$_t_address_$dyn_memory_ptr_fromStack(value1,  tail)\n\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := mul(length, 0x20)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function array_dataslot_t_array$_t_address_$dyn_memory_ptr(ptr) -> data {\n        data := ptr\n\n        data := add(ptr, 0x20)\n\n    }\n\n    function array_length_t_array$_t_address_$dyn_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_nextElement_t_array$_t_address_$dyn_memory_ptr(ptr) -> next {\n        next := add(ptr, 0x20)\n    }\n\n    function array_storeLengthForEncoding_t_array$_t_address_$dyn_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x != 0 and y > (maxValue / x)\n        if and(iszero(iszero(x)), gt(y, div(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, x))) { panic_error_0x11() }\n\n        product := mul(x, y)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_contract$_IERC20_$510(value) -> cleaned {\n        cleaned := cleanup_t_address(value)\n    }\n\n    function cleanup_t_contract$_Router_$522(value) -> cleaned {\n        cleaned := cleanup_t_address(value)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function store_literal_in_memory_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3(memPtr) {\n\n        mstore(add(memPtr, 0), \"SafeMath: multiplication overflo\")\n\n        mstore(add(memPtr, 32), \"w\")\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_contract$_IERC20_$510(value) {\n        if iszero(eq(value, cleanup_t_contract$_IERC20_$510(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_contract$_Router_$522(value) {\n        if iszero(eq(value, cleanup_t_contract$_Router_$522(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n}\n",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100415760003560e01c8063344e49d914610046578063484f4ea9146100765780638dd9500214610094575b600080fd5b610060600480360381019061005b91906106bb565b6100b2565b60405161006d9190610829565b60405180910390f35b61007e61025a565b60405161008b91906107ee565b60405180910390f35b61009c610280565b6040516100a991906107ee565b60405180910390f35b60006102528373ffffffffffffffffffffffffffffffffffffffff166370a082318573ffffffffffffffffffffffffffffffffffffffff16630dfe16816040518163ffffffff1660e01b815260040160206040518083038186803b15801561011957600080fd5b505afa15801561012d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101519190610645565b6040518263ffffffff1660e01b815260040161016d91906107ee565b60206040518083038186803b15801561018557600080fd5b505afa158015610199573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101bd91906106fb565b610244848673ffffffffffffffffffffffffffffffffffffffff16630dfe16816040518163ffffffff1660e01b815260040160206040518083038186803b15801561020757600080fd5b505afa15801561021b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061023f9190610645565b6102a4565b6104d890919063ffffffff16565b905092915050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600080600367ffffffffffffffff8111156102c2576102c1610ab8565b5b6040519080825280602002602001820160405280156102f05781602001602082028036833780820191505090505b509050828160008151811061030857610307610a89565b5b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff168152505060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff168160018151811061037757610376610a89565b5b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff1681525050600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16816002815181106103e8576103e7610a89565b5b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff16815250508373ffffffffffffffffffffffffffffffffffffffff1663d06ca61f600254836040518363ffffffff1660e01b815260040161045f929190610844565b60006040518083038186803b15801561047757600080fd5b505afa15801561048b573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f820116820180604052508101906104b49190610672565b6002815181106104c7576104c6610a89565b5b602002602001015191505092915050565b6000808314156104eb576000905061054d565b600082846104f99190610940565b9050828482610508919061090f565b14610548576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161053f90610809565b60405180910390fd5b809150505b92915050565b600061056661056184610899565b610874565b9050808382526020820190508285602086028201111561058957610588610aec565b5b60005b858110156105b9578161059f8882610630565b84526020840193506020830192505060018101905061058c565b5050509392505050565b6000815190506105d281610b5b565b92915050565b600082601f8301126105ed576105ec610ae7565b5b81516105fd848260208601610553565b91505092915050565b60008135905061061581610b72565b92915050565b60008135905061062a81610b89565b92915050565b60008151905061063f81610ba0565b92915050565b60006020828403121561065b5761065a610af6565b5b6000610669848285016105c3565b91505092915050565b60006020828403121561068857610687610af6565b5b600082015167ffffffffffffffff8111156106a6576106a5610af1565b5b6106b2848285016105d8565b91505092915050565b600080604083850312156106d2576106d1610af6565b5b60006106e085828601610606565b92505060206106f18582860161061b565b9150509250929050565b60006020828403121561071157610710610af6565b5b600061071f84828501610630565b91505092915050565b60006107348383610740565b60208301905092915050565b6107498161099a565b82525050565b6107588161099a565b82525050565b6000610769826108d5565b61077381856108ed565b935061077e836108c5565b8060005b838110156107af5781516107968882610728565b97506107a1836108e0565b925050600181019050610782565b5085935050505092915050565b60006107c96021836108fe565b91506107d482610b0c565b604082019050919050565b6107e8816109f0565b82525050565b6000602082019050610803600083018461074f565b92915050565b60006020820190508181036000830152610822816107bc565b9050919050565b600060208201905061083e60008301846107df565b92915050565b600060408201905061085960008301856107df565b818103602083015261086b818461075e565b90509392505050565b600061087e61088f565b905061088a82826109fa565b919050565b6000604051905090565b600067ffffffffffffffff8211156108b4576108b3610ab8565b5b602082029050602081019050919050565b6000819050602082019050919050565b600081519050919050565b6000602082019050919050565b600082825260208201905092915050565b600082825260208201905092915050565b600061091a826109f0565b9150610925836109f0565b92508261093557610934610a5a565b5b828204905092915050565b600061094b826109f0565b9150610956836109f0565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff048311821515161561098f5761098e610a2b565b5b828202905092915050565b60006109a5826109d0565b9050919050565b60006109b78261099a565b9050919050565b60006109c98261099a565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b610a0382610afb565b810181811067ffffffffffffffff82111715610a2257610a21610ab8565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f60008201527f7700000000000000000000000000000000000000000000000000000000000000602082015250565b610b648161099a565b8114610b6f57600080fd5b50565b610b7b816109ac565b8114610b8657600080fd5b50565b610b92816109be565b8114610b9d57600080fd5b50565b610ba9816109f0565b8114610bb457600080fd5b5056fea26469706673582212203120acc3172dcc50a3749d45114339d2017f5b40ee15636f60037c7c196fdcaf64736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x41 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x344E49D9 EQ PUSH2 0x46 JUMPI DUP1 PUSH4 0x484F4EA9 EQ PUSH2 0x76 JUMPI DUP1 PUSH4 0x8DD95002 EQ PUSH2 0x94 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x60 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5B SWAP2 SWAP1 PUSH2 0x6BB JUMP JUMPDEST PUSH2 0xB2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6D SWAP2 SWAP1 PUSH2 0x829 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x7E PUSH2 0x25A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x8B SWAP2 SWAP1 PUSH2 0x7EE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x9C PUSH2 0x280 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xA9 SWAP2 SWAP1 PUSH2 0x7EE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH2 0x252 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xDFE1681 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x119 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x12D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x151 SWAP2 SWAP1 PUSH2 0x645 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x16D SWAP2 SWAP1 PUSH2 0x7EE JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x185 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x199 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1BD SWAP2 SWAP1 PUSH2 0x6FB JUMP JUMPDEST PUSH2 0x244 DUP5 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xDFE1681 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x207 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x21B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x23F SWAP2 SWAP1 PUSH2 0x645 JUMP JUMPDEST PUSH2 0x2A4 JUMP JUMPDEST PUSH2 0x4D8 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x3 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2C2 JUMPI PUSH2 0x2C1 PUSH2 0xAB8 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x2F0 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP DUP3 DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x308 JUMPI PUSH2 0x307 PUSH2 0xA89 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x377 JUMPI PUSH2 0x376 PUSH2 0xA89 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH1 0x2 DUP2 MLOAD DUP2 LT PUSH2 0x3E8 JUMPI PUSH2 0x3E7 PUSH2 0xA89 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xD06CA61F PUSH1 0x2 SLOAD DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x45F SWAP3 SWAP2 SWAP1 PUSH2 0x844 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x477 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x48B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x4B4 SWAP2 SWAP1 PUSH2 0x672 JUMP JUMPDEST PUSH1 0x2 DUP2 MLOAD DUP2 LT PUSH2 0x4C7 JUMPI PUSH2 0x4C6 PUSH2 0xA89 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 EQ ISZERO PUSH2 0x4EB JUMPI PUSH1 0x0 SWAP1 POP PUSH2 0x54D JUMP JUMPDEST PUSH1 0x0 DUP3 DUP5 PUSH2 0x4F9 SWAP2 SWAP1 PUSH2 0x940 JUMP JUMPDEST SWAP1 POP DUP3 DUP5 DUP3 PUSH2 0x508 SWAP2 SWAP1 PUSH2 0x90F JUMP JUMPDEST EQ PUSH2 0x548 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x53F SWAP1 PUSH2 0x809 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x566 PUSH2 0x561 DUP5 PUSH2 0x899 JUMP JUMPDEST PUSH2 0x874 JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP DUP3 DUP6 PUSH1 0x20 DUP7 MUL DUP3 ADD GT ISZERO PUSH2 0x589 JUMPI PUSH2 0x588 PUSH2 0xAEC JUMP JUMPDEST JUMPDEST PUSH1 0x0 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0x5B9 JUMPI DUP2 PUSH2 0x59F DUP9 DUP3 PUSH2 0x630 JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP PUSH1 0x20 DUP4 ADD SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x58C JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x5D2 DUP2 PUSH2 0xB5B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x5ED JUMPI PUSH2 0x5EC PUSH2 0xAE7 JUMP JUMPDEST JUMPDEST DUP2 MLOAD PUSH2 0x5FD DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x553 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x615 DUP2 PUSH2 0xB72 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x62A DUP2 PUSH2 0xB89 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x63F DUP2 PUSH2 0xBA0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x65B JUMPI PUSH2 0x65A PUSH2 0xAF6 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x669 DUP5 DUP3 DUP6 ADD PUSH2 0x5C3 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x688 JUMPI PUSH2 0x687 PUSH2 0xAF6 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP3 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x6A6 JUMPI PUSH2 0x6A5 PUSH2 0xAF1 JUMP JUMPDEST JUMPDEST PUSH2 0x6B2 DUP5 DUP3 DUP6 ADD PUSH2 0x5D8 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x6D2 JUMPI PUSH2 0x6D1 PUSH2 0xAF6 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x6E0 DUP6 DUP3 DUP7 ADD PUSH2 0x606 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x6F1 DUP6 DUP3 DUP7 ADD PUSH2 0x61B JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x711 JUMPI PUSH2 0x710 PUSH2 0xAF6 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x71F DUP5 DUP3 DUP6 ADD PUSH2 0x630 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x734 DUP4 DUP4 PUSH2 0x740 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x749 DUP2 PUSH2 0x99A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x758 DUP2 PUSH2 0x99A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x769 DUP3 PUSH2 0x8D5 JUMP JUMPDEST PUSH2 0x773 DUP2 DUP6 PUSH2 0x8ED JUMP JUMPDEST SWAP4 POP PUSH2 0x77E DUP4 PUSH2 0x8C5 JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x7AF JUMPI DUP2 MLOAD PUSH2 0x796 DUP9 DUP3 PUSH2 0x728 JUMP JUMPDEST SWAP8 POP PUSH2 0x7A1 DUP4 PUSH2 0x8E0 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x782 JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x7C9 PUSH1 0x21 DUP4 PUSH2 0x8FE JUMP JUMPDEST SWAP2 POP PUSH2 0x7D4 DUP3 PUSH2 0xB0C JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x7E8 DUP2 PUSH2 0x9F0 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x803 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x74F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x822 DUP2 PUSH2 0x7BC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x83E PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x7DF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x859 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x7DF JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x86B DUP2 DUP5 PUSH2 0x75E JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x87E PUSH2 0x88F JUMP JUMPDEST SWAP1 POP PUSH2 0x88A DUP3 DUP3 PUSH2 0x9FA JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x8B4 JUMPI PUSH2 0x8B3 PUSH2 0xAB8 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x91A DUP3 PUSH2 0x9F0 JUMP JUMPDEST SWAP2 POP PUSH2 0x925 DUP4 PUSH2 0x9F0 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x935 JUMPI PUSH2 0x934 PUSH2 0xA5A JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x94B DUP3 PUSH2 0x9F0 JUMP JUMPDEST SWAP2 POP PUSH2 0x956 DUP4 PUSH2 0x9F0 JUMP JUMPDEST SWAP3 POP DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x98F JUMPI PUSH2 0x98E PUSH2 0xA2B JUMP JUMPDEST JUMPDEST DUP3 DUP3 MUL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x9A5 DUP3 PUSH2 0x9D0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x9B7 DUP3 PUSH2 0x99A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x9C9 DUP3 PUSH2 0x99A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xA03 DUP3 PUSH2 0xAFB JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0xA22 JUMPI PUSH2 0xA21 PUSH2 0xAB8 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x536166654D6174683A206D756C7469706C69636174696F6E206F766572666C6F PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7700000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH2 0xB64 DUP2 PUSH2 0x99A JUMP JUMPDEST DUP2 EQ PUSH2 0xB6F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0xB7B DUP2 PUSH2 0x9AC JUMP JUMPDEST DUP2 EQ PUSH2 0xB86 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0xB92 DUP2 PUSH2 0x9BE JUMP JUMPDEST DUP2 EQ PUSH2 0xB9D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0xBA9 DUP2 PUSH2 0x9F0 JUMP JUMPDEST DUP2 EQ PUSH2 0xBB4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 BALANCE KECCAK256 0xAC 0xC3 OR 0x2D 0xCC POP LOG3 PUSH21 0x9D45114339D2017F5B40EE15636F60037C7C196FDC 0xAF PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "13698:962:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14228:429;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;13826:64;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;13755;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;14228:429;14311:7;14564:84;14608:9;:19;;;14628:9;:16;;;:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;14608:39;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;14564;14570:13;14584:9;:16;;;:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;14564:5;:39::i;:::-;:43;;:84;;;;:::i;:::-;14556:93;;14228:429;;;;:::o;13826:64::-;;;;;;;;;;;;;:::o;13755:::-;;;;;;;;;;;;:::o;13942:278::-;14016:7;14035:21;14073:1;14059:16;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14035:40;;14096:5;14086:4;14091:1;14086:7;;;;;;;;:::i;:::-;;;;;;;:15;;;;;;;;;;;14122:4;;;;;;;;;;14112;14117:1;14112:7;;;;;;;;:::i;:::-;;;;;;;:14;;;;;;;;;;;14147:4;;;;;;;;;;;14137;14142:1;14137:7;;;;;;;;:::i;:::-;;;;;;;:14;;;;;;;;;;;14169:13;:27;;;14197:6;;14204:4;14169:40;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;14210:1;14169:43;;;;;;;;:::i;:::-;;;;;;;;14162:50;;;13942:278;;;;:::o;9965:471::-;10023:7;10273:1;10268;:6;10264:47;;;10298:1;10291:8;;;;10264:47;10323:9;10339:1;10335;:5;;;;:::i;:::-;10323:17;;10368:1;10363;10359;:5;;;;:::i;:::-;:10;10351:56;;;;;;;;;;;;:::i;:::-;;;;;;;;;10427:1;10420:8;;;9965:471;;;;;:::o;24:744:1:-;131:5;156:81;172:64;229:6;172:64;:::i;:::-;156:81;:::i;:::-;147:90;;257:5;286:6;279:5;272:21;320:4;313:5;309:16;302:23;;346:6;396:3;388:4;380:6;376:17;371:3;367:27;364:36;361:143;;;415:79;;:::i;:::-;361:143;528:1;513:249;538:6;535:1;532:13;513:249;;;606:3;635:48;679:3;667:10;635:48;:::i;:::-;630:3;623:61;713:4;708:3;704:14;697:21;;747:4;742:3;738:14;731:21;;573:189;560:1;557;553:9;548:14;;513:249;;;517:14;137:631;;24:744;;;;;:::o;774:143::-;831:5;862:6;856:13;847:22;;878:33;905:5;878:33;:::i;:::-;774:143;;;;:::o;940:385::-;1022:5;1071:3;1064:4;1056:6;1052:17;1048:27;1038:122;;1079:79;;:::i;:::-;1038:122;1189:6;1183:13;1214:105;1315:3;1307:6;1300:4;1292:6;1288:17;1214:105;:::i;:::-;1205:114;;1028:297;940:385;;;;:::o;1331:167::-;1391:5;1429:6;1416:20;1407:29;;1445:47;1486:5;1445:47;:::i;:::-;1331:167;;;;:::o;1504:::-;1564:5;1602:6;1589:20;1580:29;;1618:47;1659:5;1618:47;:::i;:::-;1504:167;;;;:::o;1677:143::-;1734:5;1765:6;1759:13;1750:22;;1781:33;1808:5;1781:33;:::i;:::-;1677:143;;;;:::o;1826:351::-;1896:6;1945:2;1933:9;1924:7;1920:23;1916:32;1913:119;;;1951:79;;:::i;:::-;1913:119;2071:1;2096:64;2152:7;2143:6;2132:9;2128:22;2096:64;:::i;:::-;2086:74;;2042:128;1826:351;;;;:::o;2183:554::-;2278:6;2327:2;2315:9;2306:7;2302:23;2298:32;2295:119;;;2333:79;;:::i;:::-;2295:119;2474:1;2463:9;2459:17;2453:24;2504:18;2496:6;2493:30;2490:117;;;2526:79;;:::i;:::-;2490:117;2631:89;2712:7;2703:6;2692:9;2688:22;2631:89;:::i;:::-;2621:99;;2424:306;2183:554;;;;:::o;2743:530::-;2839:6;2847;2896:2;2884:9;2875:7;2871:23;2867:32;2864:119;;;2902:79;;:::i;:::-;2864:119;3022:1;3047:67;3106:7;3097:6;3086:9;3082:22;3047:67;:::i;:::-;3037:77;;2993:131;3163:2;3189:67;3248:7;3239:6;3228:9;3224:22;3189:67;:::i;:::-;3179:77;;3134:132;2743:530;;;;;:::o;3279:351::-;3349:6;3398:2;3386:9;3377:7;3373:23;3369:32;3366:119;;;3404:79;;:::i;:::-;3366:119;3524:1;3549:64;3605:7;3596:6;3585:9;3581:22;3549:64;:::i;:::-;3539:74;;3495:128;3279:351;;;;:::o;3636:179::-;3705:10;3726:46;3768:3;3760:6;3726:46;:::i;:::-;3804:4;3799:3;3795:14;3781:28;;3636:179;;;;:::o;3821:108::-;3898:24;3916:5;3898:24;:::i;:::-;3893:3;3886:37;3821:108;;:::o;3935:118::-;4022:24;4040:5;4022:24;:::i;:::-;4017:3;4010:37;3935:118;;:::o;4089:732::-;4208:3;4237:54;4285:5;4237:54;:::i;:::-;4307:86;4386:6;4381:3;4307:86;:::i;:::-;4300:93;;4417:56;4467:5;4417:56;:::i;:::-;4496:7;4527:1;4512:284;4537:6;4534:1;4531:13;4512:284;;;4613:6;4607:13;4640:63;4699:3;4684:13;4640:63;:::i;:::-;4633:70;;4726:60;4779:6;4726:60;:::i;:::-;4716:70;;4572:224;4559:1;4556;4552:9;4547:14;;4512:284;;;4516:14;4812:3;4805:10;;4213:608;;;4089:732;;;;:::o;4827:366::-;4969:3;4990:67;5054:2;5049:3;4990:67;:::i;:::-;4983:74;;5066:93;5155:3;5066:93;:::i;:::-;5184:2;5179:3;5175:12;5168:19;;4827:366;;;:::o;5199:118::-;5286:24;5304:5;5286:24;:::i;:::-;5281:3;5274:37;5199:118;;:::o;5323:222::-;5416:4;5454:2;5443:9;5439:18;5431:26;;5467:71;5535:1;5524:9;5520:17;5511:6;5467:71;:::i;:::-;5323:222;;;;:::o;5551:419::-;5717:4;5755:2;5744:9;5740:18;5732:26;;5804:9;5798:4;5794:20;5790:1;5779:9;5775:17;5768:47;5832:131;5958:4;5832:131;:::i;:::-;5824:139;;5551:419;;;:::o;5976:222::-;6069:4;6107:2;6096:9;6092:18;6084:26;;6120:71;6188:1;6177:9;6173:17;6164:6;6120:71;:::i;:::-;5976:222;;;;:::o;6204:483::-;6375:4;6413:2;6402:9;6398:18;6390:26;;6426:71;6494:1;6483:9;6479:17;6470:6;6426:71;:::i;:::-;6544:9;6538:4;6534:20;6529:2;6518:9;6514:18;6507:48;6572:108;6675:4;6666:6;6572:108;:::i;:::-;6564:116;;6204:483;;;;;:::o;6693:129::-;6727:6;6754:20;;:::i;:::-;6744:30;;6783:33;6811:4;6803:6;6783:33;:::i;:::-;6693:129;;;:::o;6828:75::-;6861:6;6894:2;6888:9;6878:19;;6828:75;:::o;6909:311::-;6986:4;7076:18;7068:6;7065:30;7062:56;;;7098:18;;:::i;:::-;7062:56;7148:4;7140:6;7136:17;7128:25;;7208:4;7202;7198:15;7190:23;;6909:311;;;:::o;7226:132::-;7293:4;7316:3;7308:11;;7346:4;7341:3;7337:14;7329:22;;7226:132;;;:::o;7364:114::-;7431:6;7465:5;7459:12;7449:22;;7364:114;;;:::o;7484:113::-;7554:4;7586;7581:3;7577:14;7569:22;;7484:113;;;:::o;7603:184::-;7702:11;7736:6;7731:3;7724:19;7776:4;7771:3;7767:14;7752:29;;7603:184;;;;:::o;7793:169::-;7877:11;7911:6;7906:3;7899:19;7951:4;7946:3;7942:14;7927:29;;7793:169;;;;:::o;7968:185::-;8008:1;8025:20;8043:1;8025:20;:::i;:::-;8020:25;;8059:20;8077:1;8059:20;:::i;:::-;8054:25;;8098:1;8088:35;;8103:18;;:::i;:::-;8088:35;8145:1;8142;8138:9;8133:14;;7968:185;;;;:::o;8159:348::-;8199:7;8222:20;8240:1;8222:20;:::i;:::-;8217:25;;8256:20;8274:1;8256:20;:::i;:::-;8251:25;;8444:1;8376:66;8372:74;8369:1;8366:81;8361:1;8354:9;8347:17;8343:105;8340:131;;;8451:18;;:::i;:::-;8340:131;8499:1;8496;8492:9;8481:20;;8159:348;;;;:::o;8513:96::-;8550:7;8579:24;8597:5;8579:24;:::i;:::-;8568:35;;8513:96;;;:::o;8615:110::-;8666:7;8695:24;8713:5;8695:24;:::i;:::-;8684:35;;8615:110;;;:::o;8731:::-;8782:7;8811:24;8829:5;8811:24;:::i;:::-;8800:35;;8731:110;;;:::o;8847:126::-;8884:7;8924:42;8917:5;8913:54;8902:65;;8847:126;;;:::o;8979:77::-;9016:7;9045:5;9034:16;;8979:77;;;:::o;9062:281::-;9145:27;9167:4;9145:27;:::i;:::-;9137:6;9133:40;9275:6;9263:10;9260:22;9239:18;9227:10;9224:34;9221:62;9218:88;;;9286:18;;:::i;:::-;9218:88;9326:10;9322:2;9315:22;9105:238;9062:281;;:::o;9349:180::-;9397:77;9394:1;9387:88;9494:4;9491:1;9484:15;9518:4;9515:1;9508:15;9535:180;9583:77;9580:1;9573:88;9680:4;9677:1;9670:15;9704:4;9701:1;9694:15;9721:180;9769:77;9766:1;9759:88;9866:4;9863:1;9856:15;9890:4;9887:1;9880:15;9907:180;9955:77;9952:1;9945:88;10052:4;10049:1;10042:15;10076:4;10073:1;10066:15;10093:117;10202:1;10199;10192:12;10216:117;10325:1;10322;10315:12;10339:117;10448:1;10445;10438:12;10462:117;10571:1;10568;10561:12;10585:102;10626:6;10677:2;10673:7;10668:2;10661:5;10657:14;10653:28;10643:38;;10585:102;;;:::o;10693:220::-;10833:34;10829:1;10821:6;10817:14;10810:58;10902:3;10897:2;10889:6;10885:15;10878:28;10693:220;:::o;10919:122::-;10992:24;11010:5;10992:24;:::i;:::-;10985:5;10982:35;10972:63;;11031:1;11028;11021:12;10972:63;10919:122;:::o;11047:150::-;11134:38;11166:5;11134:38;:::i;:::-;11127:5;11124:49;11114:77;;11187:1;11184;11177:12;11114:77;11047:150;:::o;11203:::-;11290:38;11322:5;11290:38;:::i;:::-;11283:5;11280:49;11270:77;;11343:1;11340;11333:12;11270:77;11203:150;:::o;11359:122::-;11432:24;11450:5;11432:24;:::i;:::-;11425:5;11422:35;11412:63;;11471:1;11468;11461:12;11412:63;11359:122;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "610600",
								"executionCost": "71285",
								"totalCost": "681885"
							},
							"external": {
								"BUSD()": "2514",
								"CalcLpPrice(address,address)": "infinite",
								"WBNB()": "2533"
							},
							"internal": {
								"price(contract Router,address)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 13698,
									"end": 14660,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 13698,
									"end": 14660,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 13698,
									"end": 14660,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 13777,
									"end": 13819,
									"name": "PUSH",
									"source": 0,
									"value": "AE13D989DAC2F0DEBFF460AC112A837C89BAA7CD"
								},
								{
									"begin": 13755,
									"end": 13819,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 13755,
									"end": 13819,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 13755,
									"end": 13819,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 13755,
									"end": 13819,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 13755,
									"end": 13819,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 13755,
									"end": 13819,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 13755,
									"end": 13819,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 13755,
									"end": 13819,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 13755,
									"end": 13819,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 13755,
									"end": 13819,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 13755,
									"end": 13819,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 13755,
									"end": 13819,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 13755,
									"end": 13819,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 13755,
									"end": 13819,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 13755,
									"end": 13819,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 13755,
									"end": 13819,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 13755,
									"end": 13819,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 13755,
									"end": 13819,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 13755,
									"end": 13819,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 13755,
									"end": 13819,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 13848,
									"end": 13890,
									"name": "PUSH",
									"source": 0,
									"value": "78867BBEEF44F2326BF8DDD1941A4439382EF2A7"
								},
								{
									"begin": 13826,
									"end": 13890,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 13826,
									"end": 13890,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 13826,
									"end": 13890,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 13826,
									"end": 13890,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 13826,
									"end": 13890,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 13826,
									"end": 13890,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 13826,
									"end": 13890,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 13826,
									"end": 13890,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 13826,
									"end": 13890,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 13826,
									"end": 13890,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 13826,
									"end": 13890,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 13826,
									"end": 13890,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 13826,
									"end": 13890,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 13826,
									"end": 13890,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 13826,
									"end": 13890,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 13826,
									"end": 13890,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 13826,
									"end": 13890,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 13826,
									"end": 13890,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 13826,
									"end": 13890,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 13826,
									"end": 13890,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 13914,
									"end": 13933,
									"name": "PUSH",
									"source": 0,
									"value": "DE0B6B3A7640000"
								},
								{
									"begin": 13897,
									"end": 13933,
									"name": "PUSH",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 13897,
									"end": 13933,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 13698,
									"end": 14660,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 13698,
									"end": 14660,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 13698,
									"end": 14660,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 13698,
									"end": 14660,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 13698,
									"end": 14660,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 13698,
									"end": 14660,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 13698,
									"end": 14660,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 13698,
									"end": 14660,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 13698,
									"end": 14660,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 13698,
									"end": 14660,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 13698,
									"end": 14660,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 13698,
									"end": 14660,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 13698,
									"end": 14660,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 13698,
									"end": 14660,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 13698,
									"end": 14660,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 13698,
									"end": 14660,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 13698,
									"end": 14660,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 13698,
									"end": 14660,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212203120acc3172dcc50a3749d45114339d2017f5b40ee15636f60037c7c196fdcaf64736f6c63430008070033",
									".code": [
										{
											"begin": 13698,
											"end": 14660,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 13698,
											"end": 14660,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13698,
											"end": 14660,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13698,
											"end": 14660,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 13698,
											"end": 14660,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13698,
											"end": 14660,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 13698,
											"end": 14660,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 13698,
											"end": 14660,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 13698,
											"end": 14660,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13698,
											"end": 14660,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13698,
											"end": 14660,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 13698,
											"end": 14660,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 13698,
											"end": 14660,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13698,
											"end": 14660,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13698,
											"end": 14660,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 13698,
											"end": 14660,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 13698,
											"end": 14660,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 13698,
											"end": 14660,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 13698,
											"end": 14660,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 13698,
											"end": 14660,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13698,
											"end": 14660,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 13698,
											"end": 14660,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 13698,
											"end": 14660,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 13698,
											"end": 14660,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13698,
											"end": 14660,
											"name": "PUSH",
											"source": 0,
											"value": "344E49D9"
										},
										{
											"begin": 13698,
											"end": 14660,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 13698,
											"end": 14660,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 13698,
											"end": 14660,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 13698,
											"end": 14660,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13698,
											"end": 14660,
											"name": "PUSH",
											"source": 0,
											"value": "484F4EA9"
										},
										{
											"begin": 13698,
											"end": 14660,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 13698,
											"end": 14660,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 13698,
											"end": 14660,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 13698,
											"end": 14660,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13698,
											"end": 14660,
											"name": "PUSH",
											"source": 0,
											"value": "8DD95002"
										},
										{
											"begin": 13698,
											"end": 14660,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 13698,
											"end": 14660,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 13698,
											"end": 14660,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 13698,
											"end": 14660,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 13698,
											"end": 14660,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13698,
											"end": 14660,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13698,
											"end": 14660,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13698,
											"end": 14660,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 14228,
											"end": 14657,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 14228,
											"end": 14657,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14228,
											"end": 14657,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 14228,
											"end": 14657,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 14228,
											"end": 14657,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14228,
											"end": 14657,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 14228,
											"end": 14657,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 14228,
											"end": 14657,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14228,
											"end": 14657,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14228,
											"end": 14657,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14228,
											"end": 14657,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 14228,
											"end": 14657,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14228,
											"end": 14657,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14228,
											"end": 14657,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 14228,
											"end": 14657,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 14228,
											"end": 14657,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 14228,
											"end": 14657,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14228,
											"end": 14657,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 14228,
											"end": 14657,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 14228,
											"end": 14657,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 14228,
											"end": 14657,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14228,
											"end": 14657,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14228,
											"end": 14657,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14228,
											"end": 14657,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 14228,
											"end": 14657,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14228,
											"end": 14657,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14228,
											"end": 14657,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 14228,
											"end": 14657,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 14228,
											"end": 14657,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 14228,
											"end": 14657,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14228,
											"end": 14657,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14228,
											"end": 14657,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14228,
											"end": 14657,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14228,
											"end": 14657,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14228,
											"end": 14657,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 14228,
											"end": 14657,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14228,
											"end": 14657,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 13826,
											"end": 13890,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 13826,
											"end": 13890,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13826,
											"end": 13890,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 13826,
											"end": 13890,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 13826,
											"end": 13890,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 13826,
											"end": 13890,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 13826,
											"end": 13890,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13826,
											"end": 13890,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13826,
											"end": 13890,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 13826,
											"end": 13890,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 13826,
											"end": 13890,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13826,
											"end": 13890,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13826,
											"end": 13890,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 13826,
											"end": 13890,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 13826,
											"end": 13890,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 13826,
											"end": 13890,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13826,
											"end": 13890,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13826,
											"end": 13890,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 13826,
											"end": 13890,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13826,
											"end": 13890,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13826,
											"end": 13890,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 13826,
											"end": 13890,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13826,
											"end": 13890,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 13755,
											"end": 13819,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 13755,
											"end": 13819,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13755,
											"end": 13819,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 13755,
											"end": 13819,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 13755,
											"end": 13819,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 13755,
											"end": 13819,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 13755,
											"end": 13819,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13755,
											"end": 13819,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13755,
											"end": 13819,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 13755,
											"end": 13819,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 13755,
											"end": 13819,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13755,
											"end": 13819,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13755,
											"end": 13819,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 13755,
											"end": 13819,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 13755,
											"end": 13819,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 13755,
											"end": 13819,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13755,
											"end": 13819,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13755,
											"end": 13819,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 13755,
											"end": 13819,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13755,
											"end": 13819,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13755,
											"end": 13819,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 13755,
											"end": 13819,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13755,
											"end": 13819,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 14228,
											"end": 14657,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 14228,
											"end": 14657,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14311,
											"end": 14318,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14564,
											"end": 14648,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 14608,
											"end": 14617,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 14608,
											"end": 14627,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14608,
											"end": 14627,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14608,
											"end": 14627,
											"name": "PUSH",
											"source": 0,
											"value": "70A08231"
										},
										{
											"begin": 14628,
											"end": 14637,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 14628,
											"end": 14644,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14628,
											"end": 14644,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14628,
											"end": 14644,
											"name": "PUSH",
											"source": 0,
											"value": "DFE1681"
										},
										{
											"begin": 14628,
											"end": 14646,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14628,
											"end": 14646,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14628,
											"end": 14646,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14628,
											"end": 14646,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 14628,
											"end": 14646,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14628,
											"end": 14646,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 14628,
											"end": 14646,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 14628,
											"end": 14646,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14628,
											"end": 14646,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14628,
											"end": 14646,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 14628,
											"end": 14646,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14628,
											"end": 14646,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 14628,
											"end": 14646,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14628,
											"end": 14646,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14628,
											"end": 14646,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14628,
											"end": 14646,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 14628,
											"end": 14646,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 14628,
											"end": 14646,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14628,
											"end": 14646,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 14628,
											"end": 14646,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14628,
											"end": 14646,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 14628,
											"end": 14646,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 14628,
											"end": 14646,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14628,
											"end": 14646,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 14628,
											"end": 14646,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 14628,
											"end": 14646,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 14628,
											"end": 14646,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14628,
											"end": 14646,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14628,
											"end": 14646,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 14628,
											"end": 14646,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 14628,
											"end": 14646,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14628,
											"end": 14646,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14628,
											"end": 14646,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 14628,
											"end": 14646,
											"name": "STATICCALL",
											"source": 0
										},
										{
											"begin": 14628,
											"end": 14646,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 14628,
											"end": 14646,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14628,
											"end": 14646,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 14628,
											"end": 14646,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 14628,
											"end": 14646,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 14628,
											"end": 14646,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 14628,
											"end": 14646,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14628,
											"end": 14646,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14628,
											"end": 14646,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 14628,
											"end": 14646,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 14628,
											"end": 14646,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14628,
											"end": 14646,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 14628,
											"end": 14646,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 14628,
											"end": 14646,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14628,
											"end": 14646,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14628,
											"end": 14646,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14628,
											"end": 14646,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14628,
											"end": 14646,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14628,
											"end": 14646,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14628,
											"end": 14646,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14628,
											"end": 14646,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 14628,
											"end": 14646,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 14628,
											"end": 14646,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 14628,
											"end": 14646,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 14628,
											"end": 14646,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 14628,
											"end": 14646,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14628,
											"end": 14646,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14628,
											"end": 14646,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 14628,
											"end": 14646,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14628,
											"end": 14646,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14628,
											"end": 14646,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14628,
											"end": 14646,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14628,
											"end": 14646,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14628,
											"end": 14646,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14628,
											"end": 14646,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14628,
											"end": 14646,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14628,
											"end": 14646,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 14628,
											"end": 14646,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14628,
											"end": 14646,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14628,
											"end": 14646,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 14628,
											"end": 14646,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 14628,
											"end": 14646,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 14628,
											"end": 14646,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14608,
											"end": 14647,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14608,
											"end": 14647,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14608,
											"end": 14647,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 14608,
											"end": 14647,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 14608,
											"end": 14647,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14608,
											"end": 14647,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 14608,
											"end": 14647,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 14608,
											"end": 14647,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14608,
											"end": 14647,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14608,
											"end": 14647,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 14608,
											"end": 14647,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14608,
											"end": 14647,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 14608,
											"end": 14647,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14608,
											"end": 14647,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14608,
											"end": 14647,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 14608,
											"end": 14647,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 14608,
											"end": 14647,
											"name": "tag",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 14608,
											"end": 14647,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14608,
											"end": 14647,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 14608,
											"end": 14647,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14608,
											"end": 14647,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14608,
											"end": 14647,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14608,
											"end": 14647,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 14608,
											"end": 14647,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 14608,
											"end": 14647,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14608,
											"end": 14647,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 14608,
											"end": 14647,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14608,
											"end": 14647,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 14608,
											"end": 14647,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 14608,
											"end": 14647,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14608,
											"end": 14647,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 14608,
											"end": 14647,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 14608,
											"end": 14647,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 14608,
											"end": 14647,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14608,
											"end": 14647,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14608,
											"end": 14647,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 14608,
											"end": 14647,
											"name": "tag",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 14608,
											"end": 14647,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14608,
											"end": 14647,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14608,
											"end": 14647,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 14608,
											"end": 14647,
											"name": "STATICCALL",
											"source": 0
										},
										{
											"begin": 14608,
											"end": 14647,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 14608,
											"end": 14647,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14608,
											"end": 14647,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 14608,
											"end": 14647,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 14608,
											"end": 14647,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 14608,
											"end": 14647,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 14608,
											"end": 14647,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14608,
											"end": 14647,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14608,
											"end": 14647,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 14608,
											"end": 14647,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 14608,
											"end": 14647,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14608,
											"end": 14647,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 14608,
											"end": 14647,
											"name": "tag",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 14608,
											"end": 14647,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14608,
											"end": 14647,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14608,
											"end": 14647,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14608,
											"end": 14647,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14608,
											"end": 14647,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14608,
											"end": 14647,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14608,
											"end": 14647,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14608,
											"end": 14647,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 14608,
											"end": 14647,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 14608,
											"end": 14647,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 14608,
											"end": 14647,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 14608,
											"end": 14647,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 14608,
											"end": 14647,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14608,
											"end": 14647,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14608,
											"end": 14647,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 14608,
											"end": 14647,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14608,
											"end": 14647,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14608,
											"end": 14647,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14608,
											"end": 14647,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14608,
											"end": 14647,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14608,
											"end": 14647,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14608,
											"end": 14647,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14608,
											"end": 14647,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14608,
											"end": 14647,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 14608,
											"end": 14647,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14608,
											"end": 14647,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14608,
											"end": 14647,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 14608,
											"end": 14647,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 14608,
											"end": 14647,
											"name": "tag",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 14608,
											"end": 14647,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14564,
											"end": 14603,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 14570,
											"end": 14583,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 14584,
											"end": 14593,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 14584,
											"end": 14600,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14584,
											"end": 14600,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14584,
											"end": 14600,
											"name": "PUSH",
											"source": 0,
											"value": "DFE1681"
										},
										{
											"begin": 14584,
											"end": 14602,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14584,
											"end": 14602,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14584,
											"end": 14602,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14584,
											"end": 14602,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 14584,
											"end": 14602,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14584,
											"end": 14602,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 14584,
											"end": 14602,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 14584,
											"end": 14602,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14584,
											"end": 14602,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14584,
											"end": 14602,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 14584,
											"end": 14602,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14584,
											"end": 14602,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 14584,
											"end": 14602,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14584,
											"end": 14602,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14584,
											"end": 14602,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14584,
											"end": 14602,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 14584,
											"end": 14602,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 14584,
											"end": 14602,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14584,
											"end": 14602,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 14584,
											"end": 14602,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14584,
											"end": 14602,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 14584,
											"end": 14602,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 14584,
											"end": 14602,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14584,
											"end": 14602,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 14584,
											"end": 14602,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 14584,
											"end": 14602,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 14584,
											"end": 14602,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14584,
											"end": 14602,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14584,
											"end": 14602,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 14584,
											"end": 14602,
											"name": "tag",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 14584,
											"end": 14602,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14584,
											"end": 14602,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14584,
											"end": 14602,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 14584,
											"end": 14602,
											"name": "STATICCALL",
											"source": 0
										},
										{
											"begin": 14584,
											"end": 14602,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 14584,
											"end": 14602,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14584,
											"end": 14602,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 14584,
											"end": 14602,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 14584,
											"end": 14602,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 14584,
											"end": 14602,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 14584,
											"end": 14602,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14584,
											"end": 14602,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14584,
											"end": 14602,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 14584,
											"end": 14602,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 14584,
											"end": 14602,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14584,
											"end": 14602,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 14584,
											"end": 14602,
											"name": "tag",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 14584,
											"end": 14602,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14584,
											"end": 14602,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14584,
											"end": 14602,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14584,
											"end": 14602,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14584,
											"end": 14602,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14584,
											"end": 14602,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14584,
											"end": 14602,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14584,
											"end": 14602,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 14584,
											"end": 14602,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 14584,
											"end": 14602,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 14584,
											"end": 14602,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 14584,
											"end": 14602,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 14584,
											"end": 14602,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14584,
											"end": 14602,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14584,
											"end": 14602,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 14584,
											"end": 14602,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14584,
											"end": 14602,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14584,
											"end": 14602,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14584,
											"end": 14602,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14584,
											"end": 14602,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14584,
											"end": 14602,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14584,
											"end": 14602,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14584,
											"end": 14602,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14584,
											"end": 14602,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 14584,
											"end": 14602,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14584,
											"end": 14602,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14584,
											"end": 14602,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 14584,
											"end": 14602,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 14584,
											"end": 14602,
											"name": "tag",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 14584,
											"end": 14602,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14564,
											"end": 14569,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 14564,
											"end": 14603,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 14564,
											"end": 14603,
											"name": "tag",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 14564,
											"end": 14603,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14564,
											"end": 14607,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 14564,
											"end": 14607,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14564,
											"end": 14648,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14564,
											"end": 14648,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14564,
											"end": 14648,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 14564,
											"end": 14648,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14564,
											"end": 14648,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 14564,
											"end": 14648,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 14564,
											"end": 14648,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14556,
											"end": 14649,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14556,
											"end": 14649,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14228,
											"end": 14657,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 14228,
											"end": 14657,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14228,
											"end": 14657,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14228,
											"end": 14657,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14228,
											"end": 14657,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 13826,
											"end": 13890,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 13826,
											"end": 13890,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13826,
											"end": 13890,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 13826,
											"end": 13890,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13826,
											"end": 13890,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13826,
											"end": 13890,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 13826,
											"end": 13890,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13826,
											"end": 13890,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 13826,
											"end": 13890,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 13826,
											"end": 13890,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13826,
											"end": 13890,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 13826,
											"end": 13890,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13826,
											"end": 13890,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 13826,
											"end": 13890,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13826,
											"end": 13890,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 13755,
											"end": 13819,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 13755,
											"end": 13819,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13755,
											"end": 13819,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13755,
											"end": 13819,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13755,
											"end": 13819,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 13755,
											"end": 13819,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13755,
											"end": 13819,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 13755,
											"end": 13819,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 13755,
											"end": 13819,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13755,
											"end": 13819,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 13755,
											"end": 13819,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13755,
											"end": 13819,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 13755,
											"end": 13819,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13755,
											"end": 13819,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 13942,
											"end": 14220,
											"name": "tag",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 13942,
											"end": 14220,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14016,
											"end": 14023,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14035,
											"end": 14056,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14073,
											"end": 14074,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 14059,
											"end": 14075,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14059,
											"end": 14075,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14059,
											"end": 14075,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 14059,
											"end": 14075,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 14059,
											"end": 14075,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14059,
											"end": 14075,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 14059,
											"end": 14075,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 14059,
											"end": 14075,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 14059,
											"end": 14075,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 14059,
											"end": 14075,
											"name": "tag",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 14059,
											"end": 14075,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14059,
											"end": 14075,
											"name": "tag",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14059,
											"end": 14075,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14059,
											"end": 14075,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14059,
											"end": 14075,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14059,
											"end": 14075,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14059,
											"end": 14075,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14059,
											"end": 14075,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 14059,
											"end": 14075,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14059,
											"end": 14075,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14059,
											"end": 14075,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 14059,
											"end": 14075,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 14059,
											"end": 14075,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 14059,
											"end": 14075,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14059,
											"end": 14075,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 14059,
											"end": 14075,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14059,
											"end": 14075,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14059,
											"end": 14075,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14059,
											"end": 14075,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14059,
											"end": 14075,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 14059,
											"end": 14075,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 14059,
											"end": 14075,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 14059,
											"end": 14075,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14059,
											"end": 14075,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 14059,
											"end": 14075,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14059,
											"end": 14075,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 14059,
											"end": 14075,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 14059,
											"end": 14075,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 14059,
											"end": 14075,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14059,
											"end": 14075,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 14059,
											"end": 14075,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 14059,
											"end": 14075,
											"name": "CALLDATACOPY",
											"source": 0
										},
										{
											"begin": 14059,
											"end": 14075,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14059,
											"end": 14075,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 14059,
											"end": 14075,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14059,
											"end": 14075,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14059,
											"end": 14075,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14059,
											"end": 14075,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14059,
											"end": 14075,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14059,
											"end": 14075,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14059,
											"end": 14075,
											"name": "tag",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 14059,
											"end": 14075,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14059,
											"end": 14075,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14035,
											"end": 14075,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14035,
											"end": 14075,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14096,
											"end": 14101,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 14086,
											"end": 14090,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14091,
											"end": 14092,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14086,
											"end": 14093,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14086,
											"end": 14093,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14086,
											"end": 14093,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14086,
											"end": 14093,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 14086,
											"end": 14093,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 14086,
											"end": 14093,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 14086,
											"end": 14093,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 14086,
											"end": 14093,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 14086,
											"end": 14093,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 14086,
											"end": 14093,
											"name": "tag",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 14086,
											"end": 14093,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14086,
											"end": 14093,
											"name": "tag",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 14086,
											"end": 14093,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14086,
											"end": 14093,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 14086,
											"end": 14093,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 14086,
											"end": 14093,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 14086,
											"end": 14093,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14086,
											"end": 14093,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14086,
											"end": 14101,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14086,
											"end": 14101,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14086,
											"end": 14101,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14086,
											"end": 14101,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14086,
											"end": 14101,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14086,
											"end": 14101,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14086,
											"end": 14101,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14086,
											"end": 14101,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14086,
											"end": 14101,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14086,
											"end": 14101,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14086,
											"end": 14101,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14122,
											"end": 14126,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14122,
											"end": 14126,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14122,
											"end": 14126,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 14122,
											"end": 14126,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14122,
											"end": 14126,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 14122,
											"end": 14126,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 14122,
											"end": 14126,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14122,
											"end": 14126,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 14122,
											"end": 14126,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14122,
											"end": 14126,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14112,
											"end": 14116,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14117,
											"end": 14118,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 14112,
											"end": 14119,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14112,
											"end": 14119,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14112,
											"end": 14119,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14112,
											"end": 14119,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 14112,
											"end": 14119,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 14112,
											"end": 14119,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 14112,
											"end": 14119,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 14112,
											"end": 14119,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 14112,
											"end": 14119,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 14112,
											"end": 14119,
											"name": "tag",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 14112,
											"end": 14119,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14112,
											"end": 14119,
											"name": "tag",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 14112,
											"end": 14119,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14112,
											"end": 14119,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 14112,
											"end": 14119,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 14112,
											"end": 14119,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 14112,
											"end": 14119,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14112,
											"end": 14119,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14112,
											"end": 14126,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14112,
											"end": 14126,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14112,
											"end": 14126,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14112,
											"end": 14126,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14112,
											"end": 14126,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14112,
											"end": 14126,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14112,
											"end": 14126,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14112,
											"end": 14126,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14112,
											"end": 14126,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14112,
											"end": 14126,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14112,
											"end": 14126,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14147,
											"end": 14151,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 14147,
											"end": 14151,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14147,
											"end": 14151,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14147,
											"end": 14151,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 14147,
											"end": 14151,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14147,
											"end": 14151,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 14147,
											"end": 14151,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 14147,
											"end": 14151,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14147,
											"end": 14151,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 14147,
											"end": 14151,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14147,
											"end": 14151,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14137,
											"end": 14141,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14142,
											"end": 14143,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 14137,
											"end": 14144,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14137,
											"end": 14144,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14137,
											"end": 14144,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14137,
											"end": 14144,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 14137,
											"end": 14144,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 14137,
											"end": 14144,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 14137,
											"end": 14144,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 14137,
											"end": 14144,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 14137,
											"end": 14144,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 14137,
											"end": 14144,
											"name": "tag",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 14137,
											"end": 14144,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14137,
											"end": 14144,
											"name": "tag",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 14137,
											"end": 14144,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14137,
											"end": 14144,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 14137,
											"end": 14144,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 14137,
											"end": 14144,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 14137,
											"end": 14144,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14137,
											"end": 14144,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14137,
											"end": 14151,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14137,
											"end": 14151,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14137,
											"end": 14151,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14137,
											"end": 14151,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14137,
											"end": 14151,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14137,
											"end": 14151,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14137,
											"end": 14151,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14137,
											"end": 14151,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14137,
											"end": 14151,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14137,
											"end": 14151,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14137,
											"end": 14151,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14169,
											"end": 14182,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 14169,
											"end": 14196,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14169,
											"end": 14196,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14169,
											"end": 14196,
											"name": "PUSH",
											"source": 0,
											"value": "D06CA61F"
										},
										{
											"begin": 14197,
											"end": 14203,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 14197,
											"end": 14203,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 14204,
											"end": 14208,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 14169,
											"end": 14209,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14169,
											"end": 14209,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14169,
											"end": 14209,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 14169,
											"end": 14209,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 14169,
											"end": 14209,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14169,
											"end": 14209,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 14169,
											"end": 14209,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 14169,
											"end": 14209,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14169,
											"end": 14209,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14169,
											"end": 14209,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 14169,
											"end": 14209,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14169,
											"end": 14209,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 14169,
											"end": 14209,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 14169,
											"end": 14209,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14169,
											"end": 14209,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14169,
											"end": 14209,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 14169,
											"end": 14209,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 14169,
											"end": 14209,
											"name": "tag",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 14169,
											"end": 14209,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14169,
											"end": 14209,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14169,
											"end": 14209,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14169,
											"end": 14209,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14169,
											"end": 14209,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14169,
											"end": 14209,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 14169,
											"end": 14209,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 14169,
											"end": 14209,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14169,
											"end": 14209,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 14169,
											"end": 14209,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14169,
											"end": 14209,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 14169,
											"end": 14209,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 14169,
											"end": 14209,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14169,
											"end": 14209,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 14169,
											"end": 14209,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 14169,
											"end": 14209,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 14169,
											"end": 14209,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14169,
											"end": 14209,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14169,
											"end": 14209,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 14169,
											"end": 14209,
											"name": "tag",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 14169,
											"end": 14209,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14169,
											"end": 14209,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14169,
											"end": 14209,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 14169,
											"end": 14209,
											"name": "STATICCALL",
											"source": 0
										},
										{
											"begin": 14169,
											"end": 14209,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 14169,
											"end": 14209,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14169,
											"end": 14209,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 14169,
											"end": 14209,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 14169,
											"end": 14209,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 14169,
											"end": 14209,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 14169,
											"end": 14209,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14169,
											"end": 14209,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14169,
											"end": 14209,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 14169,
											"end": 14209,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 14169,
											"end": 14209,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14169,
											"end": 14209,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 14169,
											"end": 14209,
											"name": "tag",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 14169,
											"end": 14209,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14169,
											"end": 14209,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14169,
											"end": 14209,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14169,
											"end": 14209,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14169,
											"end": 14209,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14169,
											"end": 14209,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14169,
											"end": 14209,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14169,
											"end": 14209,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 14169,
											"end": 14209,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14169,
											"end": 14209,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 14169,
											"end": 14209,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 14169,
											"end": 14209,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 14169,
											"end": 14209,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 14169,
											"end": 14209,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 14169,
											"end": 14209,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 14169,
											"end": 14209,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 14169,
											"end": 14209,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14169,
											"end": 14209,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14169,
											"end": 14209,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 14169,
											"end": 14209,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14169,
											"end": 14209,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14169,
											"end": 14209,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14169,
											"end": 14209,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14169,
											"end": 14209,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14169,
											"end": 14209,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14169,
											"end": 14209,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14169,
											"end": 14209,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14169,
											"end": 14209,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 14169,
											"end": 14209,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14169,
											"end": 14209,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14169,
											"end": 14209,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 14169,
											"end": 14209,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 14169,
											"end": 14209,
											"name": "tag",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 14169,
											"end": 14209,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14210,
											"end": 14211,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 14169,
											"end": 14212,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14169,
											"end": 14212,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14169,
											"end": 14212,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14169,
											"end": 14212,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 14169,
											"end": 14212,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 14169,
											"end": 14212,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 14169,
											"end": 14212,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 14169,
											"end": 14212,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 14169,
											"end": 14212,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 14169,
											"end": 14212,
											"name": "tag",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 14169,
											"end": 14212,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14169,
											"end": 14212,
											"name": "tag",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 14169,
											"end": 14212,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14169,
											"end": 14212,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 14169,
											"end": 14212,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 14169,
											"end": 14212,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 14169,
											"end": 14212,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14169,
											"end": 14212,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14169,
											"end": 14212,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14162,
											"end": 14212,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14162,
											"end": 14212,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14162,
											"end": 14212,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13942,
											"end": 14220,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 13942,
											"end": 14220,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13942,
											"end": 14220,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13942,
											"end": 14220,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13942,
											"end": 14220,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 9965,
											"end": 10436,
											"name": "tag",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 9965,
											"end": 10436,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10023,
											"end": 10030,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10273,
											"end": 10274,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10268,
											"end": 10269,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 10268,
											"end": 10274,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 10264,
											"end": 10311,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 10264,
											"end": 10311,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 10264,
											"end": 10311,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 10298,
											"end": 10299,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10291,
											"end": 10299,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10291,
											"end": 10299,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10291,
											"end": 10299,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 10291,
											"end": 10299,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 10264,
											"end": 10311,
											"name": "tag",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 10264,
											"end": 10311,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10323,
											"end": 10332,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10339,
											"end": 10340,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 10335,
											"end": 10336,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 10335,
											"end": 10340,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 10335,
											"end": 10340,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10335,
											"end": 10340,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10335,
											"end": 10340,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 10335,
											"end": 10340,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 10335,
											"end": 10340,
											"name": "tag",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 10335,
											"end": 10340,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10323,
											"end": 10340,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10323,
											"end": 10340,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10368,
											"end": 10369,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 10363,
											"end": 10364,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 10359,
											"end": 10360,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 10359,
											"end": 10364,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 10359,
											"end": 10364,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10359,
											"end": 10364,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10359,
											"end": 10364,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 10359,
											"end": 10364,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 10359,
											"end": 10364,
											"name": "tag",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 10359,
											"end": 10364,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10359,
											"end": 10369,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 10351,
											"end": 10407,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 10351,
											"end": 10407,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 10351,
											"end": 10407,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10351,
											"end": 10407,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 10351,
											"end": 10407,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10351,
											"end": 10407,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10351,
											"end": 10407,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10351,
											"end": 10407,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 10351,
											"end": 10407,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10351,
											"end": 10407,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 10351,
											"end": 10407,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10351,
											"end": 10407,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 10351,
											"end": 10407,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 10351,
											"end": 10407,
											"name": "tag",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 10351,
											"end": 10407,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10351,
											"end": 10407,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10351,
											"end": 10407,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 10351,
											"end": 10407,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10351,
											"end": 10407,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10351,
											"end": 10407,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 10351,
											"end": 10407,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10351,
											"end": 10407,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 10351,
											"end": 10407,
											"name": "tag",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 10351,
											"end": 10407,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10427,
											"end": 10428,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10420,
											"end": 10428,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10420,
											"end": 10428,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10420,
											"end": 10428,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9965,
											"end": 10436,
											"name": "tag",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 9965,
											"end": 10436,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9965,
											"end": 10436,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 9965,
											"end": 10436,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9965,
											"end": 10436,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9965,
											"end": 10436,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9965,
											"end": 10436,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 24,
											"end": 768,
											"name": "tag",
											"source": 1,
											"value": "70"
										},
										{
											"begin": 24,
											"end": 768,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 131,
											"end": 136,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 156,
											"end": 237,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "72"
										},
										{
											"begin": 172,
											"end": 236,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "73"
										},
										{
											"begin": 229,
											"end": 235,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 172,
											"end": 236,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "74"
										},
										{
											"begin": 172,
											"end": 236,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 172,
											"end": 236,
											"name": "tag",
											"source": 1,
											"value": "73"
										},
										{
											"begin": 172,
											"end": 236,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 156,
											"end": 237,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "75"
										},
										{
											"begin": 156,
											"end": 237,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 156,
											"end": 237,
											"name": "tag",
											"source": 1,
											"value": "72"
										},
										{
											"begin": 156,
											"end": 237,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 147,
											"end": 237,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 147,
											"end": 237,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 257,
											"end": 262,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 286,
											"end": 292,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 279,
											"end": 284,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 272,
											"end": 293,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 320,
											"end": 324,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 313,
											"end": 318,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 309,
											"end": 325,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 302,
											"end": 325,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 302,
											"end": 325,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 346,
											"end": 352,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 396,
											"end": 399,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 388,
											"end": 392,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 380,
											"end": 386,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 376,
											"end": 393,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 371,
											"end": 374,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 367,
											"end": 394,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 364,
											"end": 400,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 361,
											"end": 504,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 361,
											"end": 504,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "76"
										},
										{
											"begin": 361,
											"end": 504,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 415,
											"end": 494,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "77"
										},
										{
											"begin": 415,
											"end": 494,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "78"
										},
										{
											"begin": 415,
											"end": 494,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 415,
											"end": 494,
											"name": "tag",
											"source": 1,
											"value": "77"
										},
										{
											"begin": 415,
											"end": 494,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 361,
											"end": 504,
											"name": "tag",
											"source": 1,
											"value": "76"
										},
										{
											"begin": 361,
											"end": 504,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 528,
											"end": 529,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 513,
											"end": 762,
											"name": "tag",
											"source": 1,
											"value": "79"
										},
										{
											"begin": 513,
											"end": 762,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 538,
											"end": 544,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 535,
											"end": 536,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 532,
											"end": 545,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 513,
											"end": 762,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 513,
											"end": 762,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "81"
										},
										{
											"begin": 513,
											"end": 762,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 606,
											"end": 609,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 635,
											"end": 683,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "82"
										},
										{
											"begin": 679,
											"end": 682,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 667,
											"end": 677,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 635,
											"end": 683,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "83"
										},
										{
											"begin": 635,
											"end": 683,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 635,
											"end": 683,
											"name": "tag",
											"source": 1,
											"value": "82"
										},
										{
											"begin": 635,
											"end": 683,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 630,
											"end": 633,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 623,
											"end": 684,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 713,
											"end": 717,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 708,
											"end": 711,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 704,
											"end": 718,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 697,
											"end": 718,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 697,
											"end": 718,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 747,
											"end": 751,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 742,
											"end": 745,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 738,
											"end": 752,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 731,
											"end": 752,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 731,
											"end": 752,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 573,
											"end": 762,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 560,
											"end": 561,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 557,
											"end": 558,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 553,
											"end": 562,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 548,
											"end": 562,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 548,
											"end": 562,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 513,
											"end": 762,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "79"
										},
										{
											"begin": 513,
											"end": 762,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 513,
											"end": 762,
											"name": "tag",
											"source": 1,
											"value": "81"
										},
										{
											"begin": 513,
											"end": 762,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 517,
											"end": 531,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 137,
											"end": 768,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 137,
											"end": 768,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 24,
											"end": 768,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 24,
											"end": 768,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 24,
											"end": 768,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 24,
											"end": 768,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 24,
											"end": 768,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 24,
											"end": 768,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 774,
											"end": 917,
											"name": "tag",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 774,
											"end": 917,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 831,
											"end": 836,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 862,
											"end": 868,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 856,
											"end": 869,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 847,
											"end": 869,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 847,
											"end": 869,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 878,
											"end": 911,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "86"
										},
										{
											"begin": 905,
											"end": 910,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 878,
											"end": 911,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "87"
										},
										{
											"begin": 878,
											"end": 911,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 878,
											"end": 911,
											"name": "tag",
											"source": 1,
											"value": "86"
										},
										{
											"begin": 878,
											"end": 911,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 774,
											"end": 917,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 774,
											"end": 917,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 774,
											"end": 917,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 774,
											"end": 917,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 774,
											"end": 917,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 940,
											"end": 1325,
											"name": "tag",
											"source": 1,
											"value": "88"
										},
										{
											"begin": 940,
											"end": 1325,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1022,
											"end": 1027,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1071,
											"end": 1074,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1064,
											"end": 1068,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 1056,
											"end": 1062,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1052,
											"end": 1069,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1048,
											"end": 1075,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 1038,
											"end": 1160,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "90"
										},
										{
											"begin": 1038,
											"end": 1160,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1079,
											"end": 1158,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "91"
										},
										{
											"begin": 1079,
											"end": 1158,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "92"
										},
										{
											"begin": 1079,
											"end": 1158,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1079,
											"end": 1158,
											"name": "tag",
											"source": 1,
											"value": "91"
										},
										{
											"begin": 1079,
											"end": 1158,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1038,
											"end": 1160,
											"name": "tag",
											"source": 1,
											"value": "90"
										},
										{
											"begin": 1038,
											"end": 1160,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1189,
											"end": 1195,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1183,
											"end": 1196,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1214,
											"end": 1319,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "93"
										},
										{
											"begin": 1315,
											"end": 1318,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1307,
											"end": 1313,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1300,
											"end": 1304,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1292,
											"end": 1298,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 1288,
											"end": 1305,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1214,
											"end": 1319,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "70"
										},
										{
											"begin": 1214,
											"end": 1319,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1214,
											"end": 1319,
											"name": "tag",
											"source": 1,
											"value": "93"
										},
										{
											"begin": 1214,
											"end": 1319,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1205,
											"end": 1319,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1205,
											"end": 1319,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1028,
											"end": 1325,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 940,
											"end": 1325,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 940,
											"end": 1325,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 940,
											"end": 1325,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 940,
											"end": 1325,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 940,
											"end": 1325,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1331,
											"end": 1498,
											"name": "tag",
											"source": 1,
											"value": "94"
										},
										{
											"begin": 1331,
											"end": 1498,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1391,
											"end": 1396,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1429,
											"end": 1435,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1416,
											"end": 1436,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 1407,
											"end": 1436,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1407,
											"end": 1436,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1445,
											"end": 1492,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "96"
										},
										{
											"begin": 1486,
											"end": 1491,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1445,
											"end": 1492,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "97"
										},
										{
											"begin": 1445,
											"end": 1492,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1445,
											"end": 1492,
											"name": "tag",
											"source": 1,
											"value": "96"
										},
										{
											"begin": 1445,
											"end": 1492,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1331,
											"end": 1498,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1331,
											"end": 1498,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1331,
											"end": 1498,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1331,
											"end": 1498,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1331,
											"end": 1498,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1504,
											"end": 1671,
											"name": "tag",
											"source": 1,
											"value": "98"
										},
										{
											"begin": 1504,
											"end": 1671,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1564,
											"end": 1569,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1602,
											"end": 1608,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1589,
											"end": 1609,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 1580,
											"end": 1609,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1580,
											"end": 1609,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1618,
											"end": 1665,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 1659,
											"end": 1664,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1618,
											"end": 1665,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "101"
										},
										{
											"begin": 1618,
											"end": 1665,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1618,
											"end": 1665,
											"name": "tag",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 1618,
											"end": 1665,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1504,
											"end": 1671,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1504,
											"end": 1671,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1504,
											"end": 1671,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1504,
											"end": 1671,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1504,
											"end": 1671,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1677,
											"end": 1820,
											"name": "tag",
											"source": 1,
											"value": "83"
										},
										{
											"begin": 1677,
											"end": 1820,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1734,
											"end": 1739,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1765,
											"end": 1771,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1759,
											"end": 1772,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1750,
											"end": 1772,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1750,
											"end": 1772,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1781,
											"end": 1814,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "103"
										},
										{
											"begin": 1808,
											"end": 1813,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1781,
											"end": 1814,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "104"
										},
										{
											"begin": 1781,
											"end": 1814,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1781,
											"end": 1814,
											"name": "tag",
											"source": 1,
											"value": "103"
										},
										{
											"begin": 1781,
											"end": 1814,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1677,
											"end": 1820,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1677,
											"end": 1820,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1677,
											"end": 1820,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1677,
											"end": 1820,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1677,
											"end": 1820,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1826,
											"end": 2177,
											"name": "tag",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 1826,
											"end": 2177,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1896,
											"end": 1902,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1945,
											"end": 1947,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1933,
											"end": 1942,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1924,
											"end": 1931,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1920,
											"end": 1943,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1916,
											"end": 1948,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 1913,
											"end": 2032,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1913,
											"end": 2032,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "106"
										},
										{
											"begin": 1913,
											"end": 2032,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1951,
											"end": 2030,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "107"
										},
										{
											"begin": 1951,
											"end": 2030,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "108"
										},
										{
											"begin": 1951,
											"end": 2030,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1951,
											"end": 2030,
											"name": "tag",
											"source": 1,
											"value": "107"
										},
										{
											"begin": 1951,
											"end": 2030,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1913,
											"end": 2032,
											"name": "tag",
											"source": 1,
											"value": "106"
										},
										{
											"begin": 1913,
											"end": 2032,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2071,
											"end": 2072,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2096,
											"end": 2160,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "109"
										},
										{
											"begin": 2152,
											"end": 2159,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2143,
											"end": 2149,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2132,
											"end": 2141,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 2128,
											"end": 2150,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2096,
											"end": 2160,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 2096,
											"end": 2160,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2096,
											"end": 2160,
											"name": "tag",
											"source": 1,
											"value": "109"
										},
										{
											"begin": 2096,
											"end": 2160,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2086,
											"end": 2160,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2086,
											"end": 2160,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2042,
											"end": 2170,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1826,
											"end": 2177,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1826,
											"end": 2177,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1826,
											"end": 2177,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1826,
											"end": 2177,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1826,
											"end": 2177,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 2183,
											"end": 2737,
											"name": "tag",
											"source": 1,
											"value": "57"
										},
										{
											"begin": 2183,
											"end": 2737,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2278,
											"end": 2284,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2327,
											"end": 2329,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2315,
											"end": 2324,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2306,
											"end": 2313,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2302,
											"end": 2325,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2298,
											"end": 2330,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 2295,
											"end": 2414,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2295,
											"end": 2414,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "111"
										},
										{
											"begin": 2295,
											"end": 2414,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2333,
											"end": 2412,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "112"
										},
										{
											"begin": 2333,
											"end": 2412,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "108"
										},
										{
											"begin": 2333,
											"end": 2412,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2333,
											"end": 2412,
											"name": "tag",
											"source": 1,
											"value": "112"
										},
										{
											"begin": 2333,
											"end": 2412,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2295,
											"end": 2414,
											"name": "tag",
											"source": 1,
											"value": "111"
										},
										{
											"begin": 2295,
											"end": 2414,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2474,
											"end": 2475,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2463,
											"end": 2472,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2459,
											"end": 2476,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2453,
											"end": 2477,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2504,
											"end": 2522,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2496,
											"end": 2502,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2493,
											"end": 2523,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 2490,
											"end": 2607,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2490,
											"end": 2607,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "113"
										},
										{
											"begin": 2490,
											"end": 2607,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2526,
											"end": 2605,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "114"
										},
										{
											"begin": 2526,
											"end": 2605,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "115"
										},
										{
											"begin": 2526,
											"end": 2605,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2526,
											"end": 2605,
											"name": "tag",
											"source": 1,
											"value": "114"
										},
										{
											"begin": 2526,
											"end": 2605,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2490,
											"end": 2607,
											"name": "tag",
											"source": 1,
											"value": "113"
										},
										{
											"begin": 2490,
											"end": 2607,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2631,
											"end": 2720,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "116"
										},
										{
											"begin": 2712,
											"end": 2719,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2703,
											"end": 2709,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2692,
											"end": 2701,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 2688,
											"end": 2710,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2631,
											"end": 2720,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "88"
										},
										{
											"begin": 2631,
											"end": 2720,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2631,
											"end": 2720,
											"name": "tag",
											"source": 1,
											"value": "116"
										},
										{
											"begin": 2631,
											"end": 2720,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2621,
											"end": 2720,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2621,
											"end": 2720,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2424,
											"end": 2730,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2183,
											"end": 2737,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2183,
											"end": 2737,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2183,
											"end": 2737,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2183,
											"end": 2737,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2183,
											"end": 2737,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 2743,
											"end": 3273,
											"name": "tag",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 2743,
											"end": 3273,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2839,
											"end": 2845,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2847,
											"end": 2853,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2896,
											"end": 2898,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2884,
											"end": 2893,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2875,
											"end": 2882,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 2871,
											"end": 2894,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2867,
											"end": 2899,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 2864,
											"end": 2983,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2864,
											"end": 2983,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "118"
										},
										{
											"begin": 2864,
											"end": 2983,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2902,
											"end": 2981,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "119"
										},
										{
											"begin": 2902,
											"end": 2981,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "108"
										},
										{
											"begin": 2902,
											"end": 2981,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2902,
											"end": 2981,
											"name": "tag",
											"source": 1,
											"value": "119"
										},
										{
											"begin": 2902,
											"end": 2981,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2864,
											"end": 2983,
											"name": "tag",
											"source": 1,
											"value": "118"
										},
										{
											"begin": 2864,
											"end": 2983,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3022,
											"end": 3023,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3047,
											"end": 3114,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "120"
										},
										{
											"begin": 3106,
											"end": 3113,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 3097,
											"end": 3103,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3086,
											"end": 3095,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 3082,
											"end": 3104,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3047,
											"end": 3114,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "94"
										},
										{
											"begin": 3047,
											"end": 3114,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3047,
											"end": 3114,
											"name": "tag",
											"source": 1,
											"value": "120"
										},
										{
											"begin": 3047,
											"end": 3114,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3037,
											"end": 3114,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3037,
											"end": 3114,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2993,
											"end": 3124,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3163,
											"end": 3165,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3189,
											"end": 3256,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "121"
										},
										{
											"begin": 3248,
											"end": 3255,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 3239,
											"end": 3245,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3228,
											"end": 3237,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 3224,
											"end": 3246,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3189,
											"end": 3256,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "98"
										},
										{
											"begin": 3189,
											"end": 3256,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3189,
											"end": 3256,
											"name": "tag",
											"source": 1,
											"value": "121"
										},
										{
											"begin": 3189,
											"end": 3256,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3179,
											"end": 3256,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3179,
											"end": 3256,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3134,
											"end": 3266,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2743,
											"end": 3273,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2743,
											"end": 3273,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2743,
											"end": 3273,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2743,
											"end": 3273,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2743,
											"end": 3273,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2743,
											"end": 3273,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 3279,
											"end": 3630,
											"name": "tag",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 3279,
											"end": 3630,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3349,
											"end": 3355,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3398,
											"end": 3400,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3386,
											"end": 3395,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3377,
											"end": 3384,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3373,
											"end": 3396,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3369,
											"end": 3401,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 3366,
											"end": 3485,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3366,
											"end": 3485,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "123"
										},
										{
											"begin": 3366,
											"end": 3485,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3404,
											"end": 3483,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "124"
										},
										{
											"begin": 3404,
											"end": 3483,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "108"
										},
										{
											"begin": 3404,
											"end": 3483,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3404,
											"end": 3483,
											"name": "tag",
											"source": 1,
											"value": "124"
										},
										{
											"begin": 3404,
											"end": 3483,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3366,
											"end": 3485,
											"name": "tag",
											"source": 1,
											"value": "123"
										},
										{
											"begin": 3366,
											"end": 3485,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3524,
											"end": 3525,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3549,
											"end": 3613,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "125"
										},
										{
											"begin": 3605,
											"end": 3612,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3596,
											"end": 3602,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3585,
											"end": 3594,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 3581,
											"end": 3603,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3549,
											"end": 3613,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "83"
										},
										{
											"begin": 3549,
											"end": 3613,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3549,
											"end": 3613,
											"name": "tag",
											"source": 1,
											"value": "125"
										},
										{
											"begin": 3549,
											"end": 3613,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3539,
											"end": 3613,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3539,
											"end": 3613,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3495,
											"end": 3623,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3279,
											"end": 3630,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3279,
											"end": 3630,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3279,
											"end": 3630,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3279,
											"end": 3630,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3279,
											"end": 3630,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 3636,
											"end": 3815,
											"name": "tag",
											"source": 1,
											"value": "126"
										},
										{
											"begin": 3636,
											"end": 3815,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3705,
											"end": 3715,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3726,
											"end": 3772,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "128"
										},
										{
											"begin": 3768,
											"end": 3771,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3760,
											"end": 3766,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3726,
											"end": 3772,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "129"
										},
										{
											"begin": 3726,
											"end": 3772,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3726,
											"end": 3772,
											"name": "tag",
											"source": 1,
											"value": "128"
										},
										{
											"begin": 3726,
											"end": 3772,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3804,
											"end": 3808,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3799,
											"end": 3802,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3795,
											"end": 3809,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3781,
											"end": 3809,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3781,
											"end": 3809,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3636,
											"end": 3815,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3636,
											"end": 3815,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3636,
											"end": 3815,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3636,
											"end": 3815,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3636,
											"end": 3815,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 3821,
											"end": 3929,
											"name": "tag",
											"source": 1,
											"value": "129"
										},
										{
											"begin": 3821,
											"end": 3929,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3898,
											"end": 3922,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "131"
										},
										{
											"begin": 3916,
											"end": 3921,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3898,
											"end": 3922,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "132"
										},
										{
											"begin": 3898,
											"end": 3922,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3898,
											"end": 3922,
											"name": "tag",
											"source": 1,
											"value": "131"
										},
										{
											"begin": 3898,
											"end": 3922,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3893,
											"end": 3896,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3886,
											"end": 3923,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3821,
											"end": 3929,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3821,
											"end": 3929,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3821,
											"end": 3929,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 3935,
											"end": 4053,
											"name": "tag",
											"source": 1,
											"value": "133"
										},
										{
											"begin": 3935,
											"end": 4053,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4022,
											"end": 4046,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "135"
										},
										{
											"begin": 4040,
											"end": 4045,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4022,
											"end": 4046,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "132"
										},
										{
											"begin": 4022,
											"end": 4046,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4022,
											"end": 4046,
											"name": "tag",
											"source": 1,
											"value": "135"
										},
										{
											"begin": 4022,
											"end": 4046,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4017,
											"end": 4020,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4010,
											"end": 4047,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3935,
											"end": 4053,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3935,
											"end": 4053,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3935,
											"end": 4053,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 4089,
											"end": 4821,
											"name": "tag",
											"source": 1,
											"value": "136"
										},
										{
											"begin": 4089,
											"end": 4821,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4208,
											"end": 4211,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4237,
											"end": 4291,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "138"
										},
										{
											"begin": 4285,
											"end": 4290,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4237,
											"end": 4291,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "139"
										},
										{
											"begin": 4237,
											"end": 4291,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4237,
											"end": 4291,
											"name": "tag",
											"source": 1,
											"value": "138"
										},
										{
											"begin": 4237,
											"end": 4291,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4307,
											"end": 4393,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "140"
										},
										{
											"begin": 4386,
											"end": 4392,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4381,
											"end": 4384,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4307,
											"end": 4393,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "141"
										},
										{
											"begin": 4307,
											"end": 4393,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4307,
											"end": 4393,
											"name": "tag",
											"source": 1,
											"value": "140"
										},
										{
											"begin": 4307,
											"end": 4393,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4300,
											"end": 4393,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 4300,
											"end": 4393,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4417,
											"end": 4473,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "142"
										},
										{
											"begin": 4467,
											"end": 4472,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4417,
											"end": 4473,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "143"
										},
										{
											"begin": 4417,
											"end": 4473,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4417,
											"end": 4473,
											"name": "tag",
											"source": 1,
											"value": "142"
										},
										{
											"begin": 4417,
											"end": 4473,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4496,
											"end": 4503,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4527,
											"end": 4528,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4512,
											"end": 4796,
											"name": "tag",
											"source": 1,
											"value": "144"
										},
										{
											"begin": 4512,
											"end": 4796,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4537,
											"end": 4543,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4534,
											"end": 4535,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4531,
											"end": 4544,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 4512,
											"end": 4796,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4512,
											"end": 4796,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "146"
										},
										{
											"begin": 4512,
											"end": 4796,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4613,
											"end": 4619,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4607,
											"end": 4620,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4640,
											"end": 4703,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "147"
										},
										{
											"begin": 4699,
											"end": 4702,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 4684,
											"end": 4697,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4640,
											"end": 4703,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "126"
										},
										{
											"begin": 4640,
											"end": 4703,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4640,
											"end": 4703,
											"name": "tag",
											"source": 1,
											"value": "147"
										},
										{
											"begin": 4640,
											"end": 4703,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4633,
											"end": 4703,
											"name": "SWAP8",
											"source": 1
										},
										{
											"begin": 4633,
											"end": 4703,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4726,
											"end": 4786,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "148"
										},
										{
											"begin": 4779,
											"end": 4785,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4726,
											"end": 4786,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "149"
										},
										{
											"begin": 4726,
											"end": 4786,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4726,
											"end": 4786,
											"name": "tag",
											"source": 1,
											"value": "148"
										},
										{
											"begin": 4726,
											"end": 4786,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4716,
											"end": 4786,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4716,
											"end": 4786,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4572,
											"end": 4796,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4559,
											"end": 4560,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 4556,
											"end": 4557,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4552,
											"end": 4561,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4547,
											"end": 4561,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4547,
											"end": 4561,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4512,
											"end": 4796,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "144"
										},
										{
											"begin": 4512,
											"end": 4796,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4512,
											"end": 4796,
											"name": "tag",
											"source": 1,
											"value": "146"
										},
										{
											"begin": 4512,
											"end": 4796,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4516,
											"end": 4530,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4812,
											"end": 4815,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4805,
											"end": 4815,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 4805,
											"end": 4815,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4213,
											"end": 4821,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4213,
											"end": 4821,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4213,
											"end": 4821,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4089,
											"end": 4821,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4089,
											"end": 4821,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4089,
											"end": 4821,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4089,
											"end": 4821,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4089,
											"end": 4821,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 4827,
											"end": 5193,
											"name": "tag",
											"source": 1,
											"value": "150"
										},
										{
											"begin": 4827,
											"end": 5193,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4969,
											"end": 4972,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4990,
											"end": 5057,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "152"
										},
										{
											"begin": 5054,
											"end": 5056,
											"name": "PUSH",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 5049,
											"end": 5052,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4990,
											"end": 5057,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "153"
										},
										{
											"begin": 4990,
											"end": 5057,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4990,
											"end": 5057,
											"name": "tag",
											"source": 1,
											"value": "152"
										},
										{
											"begin": 4990,
											"end": 5057,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4983,
											"end": 5057,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4983,
											"end": 5057,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5066,
											"end": 5159,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "154"
										},
										{
											"begin": 5155,
											"end": 5158,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5066,
											"end": 5159,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "155"
										},
										{
											"begin": 5066,
											"end": 5159,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5066,
											"end": 5159,
											"name": "tag",
											"source": 1,
											"value": "154"
										},
										{
											"begin": 5066,
											"end": 5159,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5184,
											"end": 5186,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5179,
											"end": 5182,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5175,
											"end": 5187,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5168,
											"end": 5187,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5168,
											"end": 5187,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4827,
											"end": 5193,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4827,
											"end": 5193,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4827,
											"end": 5193,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4827,
											"end": 5193,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 5199,
											"end": 5317,
											"name": "tag",
											"source": 1,
											"value": "156"
										},
										{
											"begin": 5199,
											"end": 5317,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5286,
											"end": 5310,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "158"
										},
										{
											"begin": 5304,
											"end": 5309,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5286,
											"end": 5310,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "159"
										},
										{
											"begin": 5286,
											"end": 5310,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5286,
											"end": 5310,
											"name": "tag",
											"source": 1,
											"value": "158"
										},
										{
											"begin": 5286,
											"end": 5310,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5281,
											"end": 5284,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5274,
											"end": 5311,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5199,
											"end": 5317,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5199,
											"end": 5317,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5199,
											"end": 5317,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 5323,
											"end": 5545,
											"name": "tag",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 5323,
											"end": 5545,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5416,
											"end": 5420,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5454,
											"end": 5456,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5443,
											"end": 5452,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5439,
											"end": 5457,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5431,
											"end": 5457,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5431,
											"end": 5457,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5467,
											"end": 5538,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "161"
										},
										{
											"begin": 5535,
											"end": 5536,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5524,
											"end": 5533,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5520,
											"end": 5537,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5511,
											"end": 5517,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5467,
											"end": 5538,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "133"
										},
										{
											"begin": 5467,
											"end": 5538,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5467,
											"end": 5538,
											"name": "tag",
											"source": 1,
											"value": "161"
										},
										{
											"begin": 5467,
											"end": 5538,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5323,
											"end": 5545,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 5323,
											"end": 5545,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5323,
											"end": 5545,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5323,
											"end": 5545,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5323,
											"end": 5545,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 5551,
											"end": 5970,
											"name": "tag",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 5551,
											"end": 5970,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5717,
											"end": 5721,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5755,
											"end": 5757,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5744,
											"end": 5753,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5740,
											"end": 5758,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5732,
											"end": 5758,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5732,
											"end": 5758,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5804,
											"end": 5813,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5798,
											"end": 5802,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5794,
											"end": 5814,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5790,
											"end": 5791,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5779,
											"end": 5788,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5775,
											"end": 5792,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5768,
											"end": 5815,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5832,
											"end": 5963,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "163"
										},
										{
											"begin": 5958,
											"end": 5962,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5832,
											"end": 5963,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "150"
										},
										{
											"begin": 5832,
											"end": 5963,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5832,
											"end": 5963,
											"name": "tag",
											"source": 1,
											"value": "163"
										},
										{
											"begin": 5832,
											"end": 5963,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5824,
											"end": 5963,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5824,
											"end": 5963,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5551,
											"end": 5970,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5551,
											"end": 5970,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5551,
											"end": 5970,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5551,
											"end": 5970,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 5976,
											"end": 6198,
											"name": "tag",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 5976,
											"end": 6198,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6069,
											"end": 6073,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6107,
											"end": 6109,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6096,
											"end": 6105,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6092,
											"end": 6110,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6084,
											"end": 6110,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6084,
											"end": 6110,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6120,
											"end": 6191,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "165"
										},
										{
											"begin": 6188,
											"end": 6189,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6177,
											"end": 6186,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6173,
											"end": 6190,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6164,
											"end": 6170,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 6120,
											"end": 6191,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "156"
										},
										{
											"begin": 6120,
											"end": 6191,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 6120,
											"end": 6191,
											"name": "tag",
											"source": 1,
											"value": "165"
										},
										{
											"begin": 6120,
											"end": 6191,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5976,
											"end": 6198,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 5976,
											"end": 6198,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5976,
											"end": 6198,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5976,
											"end": 6198,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5976,
											"end": 6198,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 6204,
											"end": 6687,
											"name": "tag",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 6204,
											"end": 6687,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6375,
											"end": 6379,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6413,
											"end": 6415,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6402,
											"end": 6411,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6398,
											"end": 6416,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6390,
											"end": 6416,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6390,
											"end": 6416,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6426,
											"end": 6497,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "167"
										},
										{
											"begin": 6494,
											"end": 6495,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6483,
											"end": 6492,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6479,
											"end": 6496,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6470,
											"end": 6476,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 6426,
											"end": 6497,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "156"
										},
										{
											"begin": 6426,
											"end": 6497,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 6426,
											"end": 6497,
											"name": "tag",
											"source": 1,
											"value": "167"
										},
										{
											"begin": 6426,
											"end": 6497,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6544,
											"end": 6553,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6538,
											"end": 6542,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6534,
											"end": 6554,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 6529,
											"end": 6531,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6518,
											"end": 6527,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6514,
											"end": 6532,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6507,
											"end": 6555,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6572,
											"end": 6680,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "168"
										},
										{
											"begin": 6675,
											"end": 6679,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6666,
											"end": 6672,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 6572,
											"end": 6680,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "136"
										},
										{
											"begin": 6572,
											"end": 6680,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 6572,
											"end": 6680,
											"name": "tag",
											"source": 1,
											"value": "168"
										},
										{
											"begin": 6572,
											"end": 6680,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6564,
											"end": 6680,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6564,
											"end": 6680,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6204,
											"end": 6687,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 6204,
											"end": 6687,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 6204,
											"end": 6687,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6204,
											"end": 6687,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6204,
											"end": 6687,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6204,
											"end": 6687,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 6693,
											"end": 6822,
											"name": "tag",
											"source": 1,
											"value": "75"
										},
										{
											"begin": 6693,
											"end": 6822,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6727,
											"end": 6733,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6754,
											"end": 6774,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "170"
										},
										{
											"begin": 6754,
											"end": 6774,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "171"
										},
										{
											"begin": 6754,
											"end": 6774,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 6754,
											"end": 6774,
											"name": "tag",
											"source": 1,
											"value": "170"
										},
										{
											"begin": 6754,
											"end": 6774,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6744,
											"end": 6774,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6744,
											"end": 6774,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6783,
											"end": 6816,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "172"
										},
										{
											"begin": 6811,
											"end": 6815,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6803,
											"end": 6809,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6783,
											"end": 6816,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "173"
										},
										{
											"begin": 6783,
											"end": 6816,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 6783,
											"end": 6816,
											"name": "tag",
											"source": 1,
											"value": "172"
										},
										{
											"begin": 6783,
											"end": 6816,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6693,
											"end": 6822,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6693,
											"end": 6822,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6693,
											"end": 6822,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6693,
											"end": 6822,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 6828,
											"end": 6903,
											"name": "tag",
											"source": 1,
											"value": "171"
										},
										{
											"begin": 6828,
											"end": 6903,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6861,
											"end": 6867,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6894,
											"end": 6896,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6888,
											"end": 6897,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 6878,
											"end": 6897,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6878,
											"end": 6897,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6828,
											"end": 6903,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6828,
											"end": 6903,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 6909,
											"end": 7220,
											"name": "tag",
											"source": 1,
											"value": "74"
										},
										{
											"begin": 6909,
											"end": 7220,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6986,
											"end": 6990,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7076,
											"end": 7094,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7068,
											"end": 7074,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7065,
											"end": 7095,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 7062,
											"end": 7118,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 7062,
											"end": 7118,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "176"
										},
										{
											"begin": 7062,
											"end": 7118,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7098,
											"end": 7116,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "177"
										},
										{
											"begin": 7098,
											"end": 7116,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 7098,
											"end": 7116,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 7098,
											"end": 7116,
											"name": "tag",
											"source": 1,
											"value": "177"
										},
										{
											"begin": 7098,
											"end": 7116,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7062,
											"end": 7118,
											"name": "tag",
											"source": 1,
											"value": "176"
										},
										{
											"begin": 7062,
											"end": 7118,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7148,
											"end": 7152,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7140,
											"end": 7146,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7136,
											"end": 7153,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 7128,
											"end": 7153,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7128,
											"end": 7153,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7208,
											"end": 7212,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7202,
											"end": 7206,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7198,
											"end": 7213,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7190,
											"end": 7213,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7190,
											"end": 7213,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6909,
											"end": 7220,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6909,
											"end": 7220,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6909,
											"end": 7220,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6909,
											"end": 7220,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 7226,
											"end": 7358,
											"name": "tag",
											"source": 1,
											"value": "143"
										},
										{
											"begin": 7226,
											"end": 7358,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7293,
											"end": 7297,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7316,
											"end": 7319,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7308,
											"end": 7319,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7308,
											"end": 7319,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7346,
											"end": 7350,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7341,
											"end": 7344,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7337,
											"end": 7351,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7329,
											"end": 7351,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7329,
											"end": 7351,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7226,
											"end": 7358,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7226,
											"end": 7358,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7226,
											"end": 7358,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7226,
											"end": 7358,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 7364,
											"end": 7478,
											"name": "tag",
											"source": 1,
											"value": "139"
										},
										{
											"begin": 7364,
											"end": 7478,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7431,
											"end": 7437,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7465,
											"end": 7470,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7459,
											"end": 7471,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7449,
											"end": 7471,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7449,
											"end": 7471,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7364,
											"end": 7478,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7364,
											"end": 7478,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7364,
											"end": 7478,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7364,
											"end": 7478,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 7484,
											"end": 7597,
											"name": "tag",
											"source": 1,
											"value": "149"
										},
										{
											"begin": 7484,
											"end": 7597,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7554,
											"end": 7558,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7586,
											"end": 7590,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7581,
											"end": 7584,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7577,
											"end": 7591,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7569,
											"end": 7591,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7569,
											"end": 7591,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7484,
											"end": 7597,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7484,
											"end": 7597,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7484,
											"end": 7597,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7484,
											"end": 7597,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 7603,
											"end": 7787,
											"name": "tag",
											"source": 1,
											"value": "141"
										},
										{
											"begin": 7603,
											"end": 7787,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7702,
											"end": 7713,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7736,
											"end": 7742,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7731,
											"end": 7734,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7724,
											"end": 7743,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7776,
											"end": 7780,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7771,
											"end": 7774,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7767,
											"end": 7781,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7752,
											"end": 7781,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7752,
											"end": 7781,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7603,
											"end": 7787,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 7603,
											"end": 7787,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7603,
											"end": 7787,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7603,
											"end": 7787,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7603,
											"end": 7787,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 7793,
											"end": 7962,
											"name": "tag",
											"source": 1,
											"value": "153"
										},
										{
											"begin": 7793,
											"end": 7962,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7877,
											"end": 7888,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7911,
											"end": 7917,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7906,
											"end": 7909,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7899,
											"end": 7918,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7951,
											"end": 7955,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7946,
											"end": 7949,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7942,
											"end": 7956,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7927,
											"end": 7956,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7927,
											"end": 7956,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7793,
											"end": 7962,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 7793,
											"end": 7962,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7793,
											"end": 7962,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7793,
											"end": 7962,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7793,
											"end": 7962,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 7968,
											"end": 8153,
											"name": "tag",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 7968,
											"end": 8153,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8008,
											"end": 8009,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8025,
											"end": 8045,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "184"
										},
										{
											"begin": 8043,
											"end": 8044,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8025,
											"end": 8045,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "159"
										},
										{
											"begin": 8025,
											"end": 8045,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 8025,
											"end": 8045,
											"name": "tag",
											"source": 1,
											"value": "184"
										},
										{
											"begin": 8025,
											"end": 8045,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8020,
											"end": 8045,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8020,
											"end": 8045,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8059,
											"end": 8079,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "185"
										},
										{
											"begin": 8077,
											"end": 8078,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 8059,
											"end": 8079,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "159"
										},
										{
											"begin": 8059,
											"end": 8079,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 8059,
											"end": 8079,
											"name": "tag",
											"source": 1,
											"value": "185"
										},
										{
											"begin": 8059,
											"end": 8079,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8054,
											"end": 8079,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 8054,
											"end": 8079,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8098,
											"end": 8099,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8088,
											"end": 8123,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "186"
										},
										{
											"begin": 8088,
											"end": 8123,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 8103,
											"end": 8121,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "187"
										},
										{
											"begin": 8103,
											"end": 8121,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "188"
										},
										{
											"begin": 8103,
											"end": 8121,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 8103,
											"end": 8121,
											"name": "tag",
											"source": 1,
											"value": "187"
										},
										{
											"begin": 8103,
											"end": 8121,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8088,
											"end": 8123,
											"name": "tag",
											"source": 1,
											"value": "186"
										},
										{
											"begin": 8088,
											"end": 8123,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8145,
											"end": 8146,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8142,
											"end": 8143,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8138,
											"end": 8147,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 8133,
											"end": 8147,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8133,
											"end": 8147,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7968,
											"end": 8153,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 7968,
											"end": 8153,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7968,
											"end": 8153,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7968,
											"end": 8153,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7968,
											"end": 8153,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 8159,
											"end": 8507,
											"name": "tag",
											"source": 1,
											"value": "63"
										},
										{
											"begin": 8159,
											"end": 8507,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8199,
											"end": 8206,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8222,
											"end": 8242,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "190"
										},
										{
											"begin": 8240,
											"end": 8241,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8222,
											"end": 8242,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "159"
										},
										{
											"begin": 8222,
											"end": 8242,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 8222,
											"end": 8242,
											"name": "tag",
											"source": 1,
											"value": "190"
										},
										{
											"begin": 8222,
											"end": 8242,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8217,
											"end": 8242,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8217,
											"end": 8242,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8256,
											"end": 8276,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "191"
										},
										{
											"begin": 8274,
											"end": 8275,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 8256,
											"end": 8276,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "159"
										},
										{
											"begin": 8256,
											"end": 8276,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 8256,
											"end": 8276,
											"name": "tag",
											"source": 1,
											"value": "191"
										},
										{
											"begin": 8256,
											"end": 8276,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8251,
											"end": 8276,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 8251,
											"end": 8276,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8444,
											"end": 8445,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8376,
											"end": 8442,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8372,
											"end": 8446,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 8369,
											"end": 8370,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 8366,
											"end": 8447,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 8361,
											"end": 8362,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8354,
											"end": 8363,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 8347,
											"end": 8364,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 8343,
											"end": 8448,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 8340,
											"end": 8471,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 8340,
											"end": 8471,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "192"
										},
										{
											"begin": 8340,
											"end": 8471,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 8451,
											"end": 8469,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "193"
										},
										{
											"begin": 8451,
											"end": 8469,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "194"
										},
										{
											"begin": 8451,
											"end": 8469,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 8451,
											"end": 8469,
											"name": "tag",
											"source": 1,
											"value": "193"
										},
										{
											"begin": 8451,
											"end": 8469,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8340,
											"end": 8471,
											"name": "tag",
											"source": 1,
											"value": "192"
										},
										{
											"begin": 8340,
											"end": 8471,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8499,
											"end": 8500,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8496,
											"end": 8497,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8492,
											"end": 8501,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 8481,
											"end": 8501,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8481,
											"end": 8501,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8159,
											"end": 8507,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 8159,
											"end": 8507,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8159,
											"end": 8507,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8159,
											"end": 8507,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8159,
											"end": 8507,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 8513,
											"end": 8609,
											"name": "tag",
											"source": 1,
											"value": "132"
										},
										{
											"begin": 8513,
											"end": 8609,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8550,
											"end": 8557,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8579,
											"end": 8603,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "196"
										},
										{
											"begin": 8597,
											"end": 8602,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8579,
											"end": 8603,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "197"
										},
										{
											"begin": 8579,
											"end": 8603,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 8579,
											"end": 8603,
											"name": "tag",
											"source": 1,
											"value": "196"
										},
										{
											"begin": 8579,
											"end": 8603,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8568,
											"end": 8603,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8568,
											"end": 8603,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8513,
											"end": 8609,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8513,
											"end": 8609,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8513,
											"end": 8609,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8513,
											"end": 8609,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 8615,
											"end": 8725,
											"name": "tag",
											"source": 1,
											"value": "198"
										},
										{
											"begin": 8615,
											"end": 8725,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8666,
											"end": 8673,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8695,
											"end": 8719,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "200"
										},
										{
											"begin": 8713,
											"end": 8718,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8695,
											"end": 8719,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "132"
										},
										{
											"begin": 8695,
											"end": 8719,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 8695,
											"end": 8719,
											"name": "tag",
											"source": 1,
											"value": "200"
										},
										{
											"begin": 8695,
											"end": 8719,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8684,
											"end": 8719,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8684,
											"end": 8719,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8615,
											"end": 8725,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8615,
											"end": 8725,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8615,
											"end": 8725,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8615,
											"end": 8725,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 8731,
											"end": 8841,
											"name": "tag",
											"source": 1,
											"value": "201"
										},
										{
											"begin": 8731,
											"end": 8841,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8782,
											"end": 8789,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8811,
											"end": 8835,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "203"
										},
										{
											"begin": 8829,
											"end": 8834,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8811,
											"end": 8835,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "132"
										},
										{
											"begin": 8811,
											"end": 8835,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 8811,
											"end": 8835,
											"name": "tag",
											"source": 1,
											"value": "203"
										},
										{
											"begin": 8811,
											"end": 8835,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8800,
											"end": 8835,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8800,
											"end": 8835,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8731,
											"end": 8841,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8731,
											"end": 8841,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8731,
											"end": 8841,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8731,
											"end": 8841,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 8847,
											"end": 8973,
											"name": "tag",
											"source": 1,
											"value": "197"
										},
										{
											"begin": 8847,
											"end": 8973,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8884,
											"end": 8891,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8924,
											"end": 8966,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8917,
											"end": 8922,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8913,
											"end": 8967,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 8902,
											"end": 8967,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8902,
											"end": 8967,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8847,
											"end": 8973,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8847,
											"end": 8973,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8847,
											"end": 8973,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8847,
											"end": 8973,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 8979,
											"end": 9056,
											"name": "tag",
											"source": 1,
											"value": "159"
										},
										{
											"begin": 8979,
											"end": 9056,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9016,
											"end": 9023,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9045,
											"end": 9050,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9034,
											"end": 9050,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9034,
											"end": 9050,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8979,
											"end": 9056,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8979,
											"end": 9056,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8979,
											"end": 9056,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8979,
											"end": 9056,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 9062,
											"end": 9343,
											"name": "tag",
											"source": 1,
											"value": "173"
										},
										{
											"begin": 9062,
											"end": 9343,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9145,
											"end": 9172,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "207"
										},
										{
											"begin": 9167,
											"end": 9171,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9145,
											"end": 9172,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "208"
										},
										{
											"begin": 9145,
											"end": 9172,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 9145,
											"end": 9172,
											"name": "tag",
											"source": 1,
											"value": "207"
										},
										{
											"begin": 9145,
											"end": 9172,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9137,
											"end": 9143,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9133,
											"end": 9173,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9275,
											"end": 9281,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9263,
											"end": 9273,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9260,
											"end": 9282,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 9239,
											"end": 9257,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9227,
											"end": 9237,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9224,
											"end": 9258,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 9221,
											"end": 9283,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 9218,
											"end": 9306,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 9218,
											"end": 9306,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "209"
										},
										{
											"begin": 9218,
											"end": 9306,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 9286,
											"end": 9304,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "210"
										},
										{
											"begin": 9286,
											"end": 9304,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 9286,
											"end": 9304,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 9286,
											"end": 9304,
											"name": "tag",
											"source": 1,
											"value": "210"
										},
										{
											"begin": 9286,
											"end": 9304,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9218,
											"end": 9306,
											"name": "tag",
											"source": 1,
											"value": "209"
										},
										{
											"begin": 9218,
											"end": 9306,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9326,
											"end": 9336,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 9322,
											"end": 9324,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 9315,
											"end": 9337,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9105,
											"end": 9343,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9062,
											"end": 9343,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9062,
											"end": 9343,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9062,
											"end": 9343,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 9349,
											"end": 9529,
											"name": "tag",
											"source": 1,
											"value": "194"
										},
										{
											"begin": 9349,
											"end": 9529,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9397,
											"end": 9474,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9394,
											"end": 9395,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9387,
											"end": 9475,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9494,
											"end": 9498,
											"name": "PUSH",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 9491,
											"end": 9492,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 9484,
											"end": 9499,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9518,
											"end": 9522,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 9515,
											"end": 9516,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9508,
											"end": 9523,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 9535,
											"end": 9715,
											"name": "tag",
											"source": 1,
											"value": "188"
										},
										{
											"begin": 9535,
											"end": 9715,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9583,
											"end": 9660,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9580,
											"end": 9581,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9573,
											"end": 9661,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9680,
											"end": 9684,
											"name": "PUSH",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 9677,
											"end": 9678,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 9670,
											"end": 9685,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9704,
											"end": 9708,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 9701,
											"end": 9702,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9694,
											"end": 9709,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 9721,
											"end": 9901,
											"name": "tag",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 9721,
											"end": 9901,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9769,
											"end": 9846,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9766,
											"end": 9767,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9759,
											"end": 9847,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9866,
											"end": 9870,
											"name": "PUSH",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 9863,
											"end": 9864,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 9856,
											"end": 9871,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9890,
											"end": 9894,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 9887,
											"end": 9888,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9880,
											"end": 9895,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 9907,
											"end": 10087,
											"name": "tag",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 9907,
											"end": 10087,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9955,
											"end": 10032,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9952,
											"end": 9953,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9945,
											"end": 10033,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10052,
											"end": 10056,
											"name": "PUSH",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 10049,
											"end": 10050,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 10042,
											"end": 10057,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10076,
											"end": 10080,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 10073,
											"end": 10074,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10066,
											"end": 10081,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 10093,
											"end": 10210,
											"name": "tag",
											"source": 1,
											"value": "92"
										},
										{
											"begin": 10093,
											"end": 10210,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10202,
											"end": 10203,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10199,
											"end": 10200,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10192,
											"end": 10204,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 10216,
											"end": 10333,
											"name": "tag",
											"source": 1,
											"value": "78"
										},
										{
											"begin": 10216,
											"end": 10333,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10325,
											"end": 10326,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10322,
											"end": 10323,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10315,
											"end": 10327,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 10339,
											"end": 10456,
											"name": "tag",
											"source": 1,
											"value": "115"
										},
										{
											"begin": 10339,
											"end": 10456,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10448,
											"end": 10449,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10445,
											"end": 10446,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10438,
											"end": 10450,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 10462,
											"end": 10579,
											"name": "tag",
											"source": 1,
											"value": "108"
										},
										{
											"begin": 10462,
											"end": 10579,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10571,
											"end": 10572,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10568,
											"end": 10569,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10561,
											"end": 10573,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 10585,
											"end": 10687,
											"name": "tag",
											"source": 1,
											"value": "208"
										},
										{
											"begin": 10585,
											"end": 10687,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10626,
											"end": 10632,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10677,
											"end": 10679,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 10673,
											"end": 10680,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 10668,
											"end": 10670,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 10661,
											"end": 10666,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 10657,
											"end": 10671,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10653,
											"end": 10681,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10643,
											"end": 10681,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10643,
											"end": 10681,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10585,
											"end": 10687,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10585,
											"end": 10687,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10585,
											"end": 10687,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10585,
											"end": 10687,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 10693,
											"end": 10913,
											"name": "tag",
											"source": 1,
											"value": "155"
										},
										{
											"begin": 10693,
											"end": 10913,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10833,
											"end": 10867,
											"name": "PUSH",
											"source": 1,
											"value": "536166654D6174683A206D756C7469706C69636174696F6E206F766572666C6F"
										},
										{
											"begin": 10829,
											"end": 10830,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10821,
											"end": 10827,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10817,
											"end": 10831,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10810,
											"end": 10868,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10902,
											"end": 10905,
											"name": "PUSH",
											"source": 1,
											"value": "7700000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10897,
											"end": 10899,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 10889,
											"end": 10895,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10885,
											"end": 10900,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10878,
											"end": 10906,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10693,
											"end": 10913,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10693,
											"end": 10913,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 10919,
											"end": 11041,
											"name": "tag",
											"source": 1,
											"value": "87"
										},
										{
											"begin": 10919,
											"end": 11041,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10992,
											"end": 11016,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "222"
										},
										{
											"begin": 11010,
											"end": 11015,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10992,
											"end": 11016,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "132"
										},
										{
											"begin": 10992,
											"end": 11016,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 10992,
											"end": 11016,
											"name": "tag",
											"source": 1,
											"value": "222"
										},
										{
											"begin": 10992,
											"end": 11016,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10985,
											"end": 10990,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10982,
											"end": 11017,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 10972,
											"end": 11035,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "223"
										},
										{
											"begin": 10972,
											"end": 11035,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 11031,
											"end": 11032,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11028,
											"end": 11029,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 11021,
											"end": 11033,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 10972,
											"end": 11035,
											"name": "tag",
											"source": 1,
											"value": "223"
										},
										{
											"begin": 10972,
											"end": 11035,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10919,
											"end": 11041,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10919,
											"end": 11041,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 11047,
											"end": 11197,
											"name": "tag",
											"source": 1,
											"value": "97"
										},
										{
											"begin": 11047,
											"end": 11197,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11134,
											"end": 11172,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "225"
										},
										{
											"begin": 11166,
											"end": 11171,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11134,
											"end": 11172,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "198"
										},
										{
											"begin": 11134,
											"end": 11172,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 11134,
											"end": 11172,
											"name": "tag",
											"source": 1,
											"value": "225"
										},
										{
											"begin": 11134,
											"end": 11172,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11127,
											"end": 11132,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11124,
											"end": 11173,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 11114,
											"end": 11191,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "226"
										},
										{
											"begin": 11114,
											"end": 11191,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 11187,
											"end": 11188,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11184,
											"end": 11185,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 11177,
											"end": 11189,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 11114,
											"end": 11191,
											"name": "tag",
											"source": 1,
											"value": "226"
										},
										{
											"begin": 11114,
											"end": 11191,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11047,
											"end": 11197,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11047,
											"end": 11197,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 11203,
											"end": 11353,
											"name": "tag",
											"source": 1,
											"value": "101"
										},
										{
											"begin": 11203,
											"end": 11353,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11290,
											"end": 11328,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "228"
										},
										{
											"begin": 11322,
											"end": 11327,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11290,
											"end": 11328,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "201"
										},
										{
											"begin": 11290,
											"end": 11328,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 11290,
											"end": 11328,
											"name": "tag",
											"source": 1,
											"value": "228"
										},
										{
											"begin": 11290,
											"end": 11328,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11283,
											"end": 11288,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11280,
											"end": 11329,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 11270,
											"end": 11347,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "229"
										},
										{
											"begin": 11270,
											"end": 11347,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 11343,
											"end": 11344,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11340,
											"end": 11341,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 11333,
											"end": 11345,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 11270,
											"end": 11347,
											"name": "tag",
											"source": 1,
											"value": "229"
										},
										{
											"begin": 11270,
											"end": 11347,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11203,
											"end": 11353,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11203,
											"end": 11353,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 11359,
											"end": 11481,
											"name": "tag",
											"source": 1,
											"value": "104"
										},
										{
											"begin": 11359,
											"end": 11481,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11432,
											"end": 11456,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "231"
										},
										{
											"begin": 11450,
											"end": 11455,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11432,
											"end": 11456,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "159"
										},
										{
											"begin": 11432,
											"end": 11456,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 11432,
											"end": 11456,
											"name": "tag",
											"source": 1,
											"value": "231"
										},
										{
											"begin": 11432,
											"end": 11456,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11425,
											"end": 11430,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11422,
											"end": 11457,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 11412,
											"end": 11475,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "232"
										},
										{
											"begin": 11412,
											"end": 11475,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 11471,
											"end": 11472,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11468,
											"end": 11469,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 11461,
											"end": 11473,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 11412,
											"end": 11475,
											"name": "tag",
											"source": 1,
											"value": "232"
										},
										{
											"begin": 11412,
											"end": 11475,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11359,
											"end": 11481,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11359,
											"end": 11481,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"BUSD()": "484f4ea9",
							"CalcLpPrice(address,address)": "344e49d9",
							"WBNB()": "8dd95002"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"BUSD\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"lpAddress\",\"type\":\"address\"},{\"internalType\":\"contract Router\",\"name\":\"routerAddress\",\"type\":\"address\"}],\"name\":\"CalcLpPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"WBNB\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/LpPrice.sol\":\"LpUtils\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/LpPrice.sol\":{\"keccak256\":\"0x1853e835c929e66e22b351805d81bae3ac14e03018976bbdc72dc1fa1c2a977f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://085205b3315c81bc859c4f2d1fa10444904e7a463f105a97389c4c8f22797427\",\"dweb:/ipfs/QmW4XjGHRzy2r7yA1xjx7DhaAXQwjPqWby4qcFirJCjjVQ\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 528,
								"contract": "contracts/LpPrice.sol:LpUtils",
								"label": "WBNB",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 531,
								"contract": "contracts/LpPrice.sol:LpUtils",
								"label": "BUSD",
								"offset": 0,
								"slot": "1",
								"type": "t_address"
							},
							{
								"astId": 534,
								"contract": "contracts/LpPrice.sol:LpUtils",
								"label": "amount",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"Router": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								}
							],
							"name": "getAmountsOut",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"getAmountsOut(uint256,address[])": "d06ca61f"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"}],\"name\":\"getAmountsOut\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/LpPrice.sol\":\"Router\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/LpPrice.sol\":{\"keccak256\":\"0x1853e835c929e66e22b351805d81bae3ac14e03018976bbdc72dc1fa1c2a977f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://085205b3315c81bc859c4f2d1fa10444904e7a463f105a97389c4c8f22797427\",\"dweb:/ipfs/QmW4XjGHRzy2r7yA1xjx7DhaAXQwjPqWby4qcFirJCjjVQ\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"SafeMath": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/LpPrice.sol\":8338:13186  library SafeMath {\r... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/LpPrice.sol\":8338:13186  library SafeMath {\r... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220d967a4c585942a5414bdee8b26b5e8b8ba6ad2a0ee17e89acf4184349033abdb64736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220d967a4c585942a5414bdee8b26b5e8b8ba6ad2a0ee17e89acf4184349033abdb64736f6c63430008070033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD9 PUSH8 0xA4C585942A5414BD 0xEE DUP12 0x26 0xB5 0xE8 0xB8 0xBA PUSH11 0xD2A0EE17E89ACF41843490 CALLER 0xAB 0xDB PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "8338:4848:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220d967a4c585942a5414bdee8b26b5e8b8ba6ad2a0ee17e89acf4184349033abdb64736f6c63430008070033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD9 PUSH8 0xA4C585942A5414BD 0xEE DUP12 0x26 0xB5 0xE8 0xB8 0xBA PUSH11 0xD2A0EE17E89ACF41843490 CALLER 0xAB 0xDB PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "8338:4848:0:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"add(uint256,uint256)": "infinite",
								"div(uint256,uint256)": "infinite",
								"div(uint256,uint256,string memory)": "infinite",
								"mod(uint256,uint256)": "infinite",
								"mod(uint256,uint256,string memory)": "infinite",
								"mul(uint256,uint256)": "infinite",
								"sub(uint256,uint256)": "infinite",
								"sub(uint256,uint256,string memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 8338,
									"end": 13186,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 8338,
									"end": 13186,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 8338,
									"end": 13186,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 8338,
									"end": 13186,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 8338,
									"end": 13186,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 8338,
									"end": 13186,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 8338,
									"end": 13186,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 8338,
									"end": 13186,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 8338,
									"end": 13186,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 8338,
									"end": 13186,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 8338,
									"end": 13186,
									"name": "BYTE",
									"source": 0
								},
								{
									"begin": 8338,
									"end": 13186,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 8338,
									"end": 13186,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 8338,
									"end": 13186,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 8338,
									"end": 13186,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 8338,
									"end": 13186,
									"name": "PUSH",
									"source": 0,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 8338,
									"end": 13186,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 8338,
									"end": 13186,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 8338,
									"end": 13186,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 8338,
									"end": 13186,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 8338,
									"end": 13186,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 8338,
									"end": 13186,
									"name": "PUSH",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 8338,
									"end": 13186,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 8338,
									"end": 13186,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 8338,
									"end": 13186,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 8338,
									"end": 13186,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 8338,
									"end": 13186,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 8338,
									"end": 13186,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 8338,
									"end": 13186,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 8338,
									"end": 13186,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 8338,
									"end": 13186,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 8338,
									"end": 13186,
									"name": "MSTORE8",
									"source": 0
								},
								{
									"begin": 8338,
									"end": 13186,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 8338,
									"end": 13186,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 8338,
									"end": 13186,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220d967a4c585942a5414bdee8b26b5e8b8ba6ad2a0ee17e89acf4184349033abdb64736f6c63430008070033",
									".code": [
										{
											"begin": 8338,
											"end": 13186,
											"name": "PUSHDEPLOYADDRESS",
											"source": 0
										},
										{
											"begin": 8338,
											"end": 13186,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 8338,
											"end": 13186,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 8338,
											"end": 13186,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 8338,
											"end": 13186,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8338,
											"end": 13186,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8338,
											"end": 13186,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8338,
											"end": 13186,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8338,
											"end": 13186,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/LpPrice.sol\":\"SafeMath\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/LpPrice.sol\":{\"keccak256\":\"0x1853e835c929e66e22b351805d81bae3ac14e03018976bbdc72dc1fa1c2a977f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://085205b3315c81bc859c4f2d1fa10444904e7a463f105a97389c4c8f22797427\",\"dweb:/ipfs/QmW4XjGHRzy2r7yA1xjx7DhaAXQwjPqWby4qcFirJCjjVQ\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"contracts/LpPrice.sol": {
				"ast": {
					"absolutePath": "contracts/LpPrice.sol",
					"exportedSymbols": {
						"Address": [
							293
						],
						"IERC20": [
							510
						],
						"LpUtils": [
							611
						],
						"Router": [
							522
						],
						"SafeMath": [
							486
						]
					},
					"id": 612,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"fullyImplemented": true,
							"id": 293,
							"linearizedBaseContracts": [
								293
							],
							"name": "Address",
							"nameLocation": "68:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 15,
										"nodeType": "Block",
										"src": "1134:260:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 13,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 9,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4,
																"src": "1363:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 10,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "1363:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 11,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "1363:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 12,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1385:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1363:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 8,
												"id": 14,
												"nodeType": "Return",
												"src": "1356:30:0"
											}
										]
									},
									"documentation": {
										"id": 2,
										"nodeType": "StructuredDocumentation",
										"src": "83:979:0",
										"text": " @dev Returns true if `account` is a contract.\n [IMPORTANT]\n ====\n It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract.\n Among others, `isContract` will return false for the following\n types of addresses:\n  - an externally-owned account\n  - a contract in construction\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n ====\n [IMPORTANT]\n ====\n You shouldn't rely on `isContract` to protect against flash loan attacks!\n Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n constructor.\n ===="
									},
									"id": 16,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isContract",
									"nameLocation": "1077:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 5,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1096:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 16,
												"src": "1088:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1088:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1087:17:0"
									},
									"returnParameters": {
										"id": 8,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 7,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 16,
												"src": "1128:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 6,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1128:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1127:6:0"
									},
									"scope": 293,
									"src": "1068:326:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 49,
										"nodeType": "Block",
										"src": "2400:246:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 31,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 27,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "2427:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$293",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$293",
																				"typeString": "library Address"
																			}
																		],
																		"id": 26,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2419:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 25,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2419:7:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 28,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2419:13:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 29,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "2419:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 30,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 21,
																"src": "2444:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2419:31:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e6365",
															"id": 32,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2452:31:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															},
															"value": "Address: insufficient balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															}
														],
														"id": 24,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2411:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 33,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2411:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 34,
												"nodeType": "ExpressionStatement",
												"src": "2411:73:0"
											},
											{
												"assignments": [
													36,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 36,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "2503:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 49,
														"src": "2498:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 35,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "2498:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 43,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 41,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2546:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"id": 37,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 19,
																"src": "2516:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 38,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "2516:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 40,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 39,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 21,
																"src": "2538:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "2516:29:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 42,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2516:33:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2497:52:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 45,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 36,
															"src": "2568:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564",
															"id": 46,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2577:60:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															},
															"value": "Address: unable to send value, recipient may have reverted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															}
														],
														"id": 44,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2560:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 47,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2560:78:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 48,
												"nodeType": "ExpressionStatement",
												"src": "2560:78:0"
											}
										]
									},
									"documentation": {
										"id": 17,
										"nodeType": "StructuredDocumentation",
										"src": "1402:921:0",
										"text": " @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."
									},
									"id": 50,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendValue",
									"nameLocation": "2338:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 22,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 19,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "2364:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 50,
												"src": "2348:25:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 18,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2348:15:0",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 21,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2383:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 50,
												"src": "2375:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 20,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2375:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2347:43:0"
									},
									"returnParameters": {
										"id": 23,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2400:0:0"
									},
									"scope": 293,
									"src": "2329:317:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 66,
										"nodeType": "Block",
										"src": "3497:86:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 61,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 53,
															"src": "3528:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 62,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 55,
															"src": "3536:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 63,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3542:32:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															},
															"value": "Address: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															}
														],
														"id": 60,
														"name": "functionCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															67,
															87
														],
														"referencedDeclaration": 87,
														"src": "3515:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 64,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3515:60:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 59,
												"id": 65,
												"nodeType": "Return",
												"src": "3508:67:0"
											}
										]
									},
									"documentation": {
										"id": 51,
										"nodeType": "StructuredDocumentation",
										"src": "2654:748:0",
										"text": " @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason, it is bubbled up by this\n function (like regular Solidity function calls).\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert.\n _Available since v3.1._"
									},
									"id": 67,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "3417:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 56,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 53,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3438:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "3430:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 52,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3430:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 55,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3459:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "3446:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 54,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3446:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3429:35:0"
									},
									"returnParameters": {
										"id": 59,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 58,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "3483:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 57,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3483:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3482:14:0"
									},
									"scope": 293,
									"src": "3408:175:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 86,
										"nodeType": "Block",
										"src": "3964:78:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 80,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 70,
															"src": "4004:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 81,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 72,
															"src": "4012:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 82,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4018:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"id": 83,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 74,
															"src": "4021:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 79,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															107,
															157
														],
														"referencedDeclaration": 157,
														"src": "3982:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 84,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3982:52:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 78,
												"id": 85,
												"nodeType": "Return",
												"src": "3975:59:0"
											}
										]
									},
									"documentation": {
										"id": 68,
										"nodeType": "StructuredDocumentation",
										"src": "3591:216:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 87,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "3822:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 75,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 70,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3853:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 87,
												"src": "3845:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 69,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3845:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 72,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3883:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 87,
												"src": "3870:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 71,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3870:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 74,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "3912:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 87,
												"src": "3898:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 73,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3898:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3834:97:0"
									},
									"returnParameters": {
										"id": 78,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 77,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 87,
												"src": "3950:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 76,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3950:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3949:14:0"
									},
									"scope": 293,
									"src": "3813:229:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 106,
										"nodeType": "Block",
										"src": "4564:113:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 100,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 90,
															"src": "4604:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 101,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 92,
															"src": "4612:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 102,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 94,
															"src": "4618:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564",
															"id": 103,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4625:43:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															},
															"value": "Address: low-level call with value failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															}
														],
														"id": 99,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															107,
															157
														],
														"referencedDeclaration": 157,
														"src": "4582:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 104,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4582:87:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 98,
												"id": 105,
												"nodeType": "Return",
												"src": "4575:94:0"
											}
										]
									},
									"documentation": {
										"id": 88,
										"nodeType": "StructuredDocumentation",
										"src": "4050:361:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`.\n _Available since v3.1._"
									},
									"id": 107,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "4426:21:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 95,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 90,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4466:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 107,
												"src": "4458:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 89,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4458:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 92,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4496:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 107,
												"src": "4483:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 91,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4483:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 94,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4519:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 107,
												"src": "4511:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 93,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4511:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4447:84:0"
									},
									"returnParameters": {
										"id": 98,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 97,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 107,
												"src": "4550:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 96,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4550:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4549:14:0"
									},
									"scope": 293,
									"src": "4417:260:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 156,
										"nodeType": "Block",
										"src": "5117:326:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 128,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 124,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "5144:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$293",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$293",
																				"typeString": "library Address"
																			}
																		],
																		"id": 123,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "5136:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 122,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "5136:7:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 125,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5136:13:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 126,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "5136:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 127,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 114,
																"src": "5161:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5136:30:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c",
															"id": 129,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5168:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															},
															"value": "Address: insufficient balance for call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															}
														],
														"id": 121,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5128:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 130,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5128:81:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 131,
												"nodeType": "ExpressionStatement",
												"src": "5128:81:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 134,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 110,
																	"src": "5239:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 133,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 16,
																"src": "5228:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 135,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5228:18:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 136,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5248:31:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																"typeString": "literal_string \"Address: call to non-contract\""
															},
															"value": "Address: call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																"typeString": "literal_string \"Address: call to non-contract\""
															}
														],
														"id": 132,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5220:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 137,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5220:60:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 138,
												"nodeType": "ExpressionStatement",
												"src": "5220:60:0"
											},
											{
												"assignments": [
													140,
													142
												],
												"declarations": [
													{
														"constant": false,
														"id": 140,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "5299:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 156,
														"src": "5294:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 139,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "5294:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 142,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "5321:10:0",
														"nodeType": "VariableDeclaration",
														"scope": 156,
														"src": "5308:23:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 141,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "5308:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 149,
												"initialValue": {
													"arguments": [
														{
															"id": 147,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 112,
															"src": "5361:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 143,
																"name": "target",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 110,
																"src": "5335:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 144,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "5335:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 146,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 145,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 114,
																"src": "5354:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "5335:25:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 148,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5335:31:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5293:73:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 151,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 140,
															"src": "5401:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 152,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 142,
															"src": "5410:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 153,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 116,
															"src": "5422:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 150,
														"name": "verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 292,
														"src": "5384:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 154,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5384:51:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 120,
												"id": 155,
												"nodeType": "Return",
												"src": "5377:58:0"
											}
										]
									},
									"documentation": {
										"id": 108,
										"nodeType": "StructuredDocumentation",
										"src": "4685:242:0",
										"text": " @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n with `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 157,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "4942:21:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 117,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 110,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4982:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 157,
												"src": "4974:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 109,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4974:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 112,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5012:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 157,
												"src": "4999:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 111,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4999:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 114,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5035:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 157,
												"src": "5027:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 113,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5027:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 116,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5065:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 157,
												"src": "5051:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 115,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5051:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4963:121:0"
									},
									"returnParameters": {
										"id": 120,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 119,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 157,
												"src": "5103:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 118,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5103:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5102:14:0"
									},
									"scope": 293,
									"src": "4933:510:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 173,
										"nodeType": "Block",
										"src": "5728:99:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 168,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 160,
															"src": "5765:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 169,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 162,
															"src": "5773:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c207374617469632063616c6c206661696c6564",
															"id": 170,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5779:39:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															},
															"value": "Address: low-level static call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															}
														],
														"id": 167,
														"name": "functionStaticCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															174,
															209
														],
														"referencedDeclaration": 209,
														"src": "5746:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 171,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5746:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 166,
												"id": 172,
												"nodeType": "Return",
												"src": "5739:80:0"
											}
										]
									},
									"documentation": {
										"id": 158,
										"nodeType": "StructuredDocumentation",
										"src": "5451:171:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 174,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "5637:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 163,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 160,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "5664:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 174,
												"src": "5656:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 159,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5656:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 162,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5685:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 174,
												"src": "5672:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 161,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5672:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5655:35:0"
									},
									"returnParameters": {
										"id": 166,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 165,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 174,
												"src": "5714:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 164,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5714:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5713:14:0"
									},
									"scope": 293,
									"src": "5628:199:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 208,
										"nodeType": "Block",
										"src": "6181:233:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 188,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 177,
																	"src": "6211:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 187,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 16,
																"src": "6200:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 189,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6200:18:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a207374617469632063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 190,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6220:38:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c79cc78e4f16ce3933a42b84c73868f93bb4a59c031a0acf576679de98c608a9",
																"typeString": "literal_string \"Address: static call to non-contract\""
															},
															"value": "Address: static call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c79cc78e4f16ce3933a42b84c73868f93bb4a59c031a0acf576679de98c608a9",
																"typeString": "literal_string \"Address: static call to non-contract\""
															}
														],
														"id": 186,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6192:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 191,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6192:67:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 192,
												"nodeType": "ExpressionStatement",
												"src": "6192:67:0"
											},
											{
												"assignments": [
													194,
													196
												],
												"declarations": [
													{
														"constant": false,
														"id": 194,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "6278:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 208,
														"src": "6273:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 193,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "6273:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 196,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "6300:10:0",
														"nodeType": "VariableDeclaration",
														"scope": 208,
														"src": "6287:23:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 195,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "6287:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 201,
												"initialValue": {
													"arguments": [
														{
															"id": 199,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 179,
															"src": "6332:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 197,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 177,
															"src": "6314:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 198,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "staticcall",
														"nodeType": "MemberAccess",
														"src": "6314:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) view returns (bool,bytes memory)"
														}
													},
													"id": 200,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6314:23:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6272:65:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 203,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 194,
															"src": "6372:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 204,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 196,
															"src": "6381:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 205,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 181,
															"src": "6393:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 202,
														"name": "verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 292,
														"src": "6355:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 206,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6355:51:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 185,
												"id": 207,
												"nodeType": "Return",
												"src": "6348:58:0"
											}
										]
									},
									"documentation": {
										"id": 175,
										"nodeType": "StructuredDocumentation",
										"src": "5835:178:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 209,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "6028:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 182,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 177,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6065:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "6057:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 176,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6057:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 179,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6095:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "6082:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 178,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6082:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 181,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "6124:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "6110:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 180,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6110:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6046:97:0"
									},
									"returnParameters": {
										"id": 185,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 184,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "6167:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 183,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6167:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6166:14:0"
									},
									"scope": 293,
									"src": "6019:395:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 225,
										"nodeType": "Block",
										"src": "6698:103:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 220,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 212,
															"src": "6737:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 221,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 214,
															"src": "6745:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564",
															"id": 222,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6751:41:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															},
															"value": "Address: low-level delegate call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															}
														],
														"id": 219,
														"name": "functionDelegateCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															226,
															261
														],
														"referencedDeclaration": 261,
														"src": "6716:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 223,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6716:77:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 218,
												"id": 224,
												"nodeType": "Return",
												"src": "6709:84:0"
											}
										]
									},
									"documentation": {
										"id": 210,
										"nodeType": "StructuredDocumentation",
										"src": "6422:173:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 226,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "6610:20:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 215,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 212,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6639:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 226,
												"src": "6631:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 211,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6631:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 214,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6660:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 226,
												"src": "6647:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 213,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6647:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6630:35:0"
									},
									"returnParameters": {
										"id": 218,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 217,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 226,
												"src": "6684:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 216,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6684:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6683:14:0"
									},
									"scope": 293,
									"src": "6601:200:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 260,
										"nodeType": "Block",
										"src": "7154:237:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 240,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 229,
																	"src": "7184:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 239,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 16,
																"src": "7173:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 241,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7173:18:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 242,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7193:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520",
																"typeString": "literal_string \"Address: delegate call to non-contract\""
															},
															"value": "Address: delegate call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520",
																"typeString": "literal_string \"Address: delegate call to non-contract\""
															}
														],
														"id": 238,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7165:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 243,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7165:69:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 244,
												"nodeType": "ExpressionStatement",
												"src": "7165:69:0"
											},
											{
												"assignments": [
													246,
													248
												],
												"declarations": [
													{
														"constant": false,
														"id": 246,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "7253:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 260,
														"src": "7248:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 245,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "7248:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 248,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "7275:10:0",
														"nodeType": "VariableDeclaration",
														"scope": 260,
														"src": "7262:23:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 247,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "7262:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 253,
												"initialValue": {
													"arguments": [
														{
															"id": 251,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 231,
															"src": "7309:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 249,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 229,
															"src": "7289:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 250,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "delegatecall",
														"nodeType": "MemberAccess",
														"src": "7289:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) returns (bool,bytes memory)"
														}
													},
													"id": 252,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7289:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7247:67:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 255,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 246,
															"src": "7349:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 256,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 248,
															"src": "7358:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 257,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 233,
															"src": "7370:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 254,
														"name": "verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 292,
														"src": "7332:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 258,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7332:51:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 237,
												"id": 259,
												"nodeType": "Return",
												"src": "7325:58:0"
											}
										]
									},
									"documentation": {
										"id": 227,
										"nodeType": "StructuredDocumentation",
										"src": "6809:180:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 261,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "7004:20:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 234,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 229,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "7043:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 261,
												"src": "7035:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 228,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7035:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 231,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "7073:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 261,
												"src": "7060:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 230,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7060:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 233,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "7102:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 261,
												"src": "7088:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 232,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7088:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7024:97:0"
									},
									"returnParameters": {
										"id": 237,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 236,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 261,
												"src": "7140:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 235,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7140:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7139:14:0"
									},
									"scope": 293,
									"src": "6995:396:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 291,
										"nodeType": "Block",
										"src": "7783:548:0",
										"statements": [
											{
												"condition": {
													"id": 273,
													"name": "success",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 264,
													"src": "7798:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 289,
													"nodeType": "Block",
													"src": "7857:467:0",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 280,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 277,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 266,
																		"src": "7943:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 278,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "7943:17:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 279,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7963:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "7943:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 287,
																"nodeType": "Block",
																"src": "8258:55:0",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 284,
																					"name": "errorMessage",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 268,
																					"src": "8284:12:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				],
																				"id": 283,
																				"name": "revert",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					4294967277,
																					4294967277
																				],
																				"referencedDeclaration": 4294967277,
																				"src": "8277:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																					"typeString": "function (string memory) pure"
																				}
																			},
																			"id": 285,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "8277:20:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 286,
																		"nodeType": "ExpressionStatement",
																		"src": "8277:20:0"
																	}
																]
															},
															"id": 288,
															"nodeType": "IfStatement",
															"src": "7939:374:0",
															"trueBody": {
																"id": 282,
																"nodeType": "Block",
																"src": "7966:286:0",
																"statements": [
																	{
																		"AST": {
																			"nodeType": "YulBlock",
																			"src": "8089:148:0",
																			"statements": [
																				{
																					"nodeType": "YulVariableDeclaration",
																					"src": "8112:40:0",
																					"value": {
																						"arguments": [
																							{
																								"name": "returndata",
																								"nodeType": "YulIdentifier",
																								"src": "8141:10:0"
																							}
																						],
																						"functionName": {
																							"name": "mload",
																							"nodeType": "YulIdentifier",
																							"src": "8135:5:0"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "8135:17:0"
																					},
																					"variables": [
																						{
																							"name": "returndata_size",
																							"nodeType": "YulTypedName",
																							"src": "8116:15:0",
																							"type": ""
																						}
																					]
																				},
																				{
																					"expression": {
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "8185:2:0",
																										"type": "",
																										"value": "32"
																									},
																									{
																										"name": "returndata",
																										"nodeType": "YulIdentifier",
																										"src": "8189:10:0"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "8181:3:0"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "8181:19:0"
																							},
																							{
																								"name": "returndata_size",
																								"nodeType": "YulIdentifier",
																								"src": "8202:15:0"
																							}
																						],
																						"functionName": {
																							"name": "revert",
																							"nodeType": "YulIdentifier",
																							"src": "8174:6:0"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "8174:44:0"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "8174:44:0"
																				}
																			]
																		},
																		"evmVersion": "london",
																		"externalReferences": [
																			{
																				"declaration": 266,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "8141:10:0",
																				"valueSize": 1
																			},
																			{
																				"declaration": 266,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "8189:10:0",
																				"valueSize": 1
																			}
																		],
																		"id": 281,
																		"nodeType": "InlineAssembly",
																		"src": "8080:157:0"
																	}
																]
															}
														}
													]
												},
												"id": 290,
												"nodeType": "IfStatement",
												"src": "7794:530:0",
												"trueBody": {
													"id": 276,
													"nodeType": "Block",
													"src": "7807:44:0",
													"statements": [
														{
															"expression": {
																"id": 274,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 266,
																"src": "7829:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 272,
															"id": 275,
															"nodeType": "Return",
															"src": "7822:17:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 262,
										"nodeType": "StructuredDocumentation",
										"src": "7399:214:0",
										"text": " @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\n revert reason using the provided one.\n _Available since v4.3._"
									},
									"id": 292,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResult",
									"nameLocation": "7628:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 269,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 264,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "7660:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 292,
												"src": "7655:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 263,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7655:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 266,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "7691:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 292,
												"src": "7678:23:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 265,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7678:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 268,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "7726:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 292,
												"src": "7712:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 267,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7712:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7644:101:0"
									},
									"returnParameters": {
										"id": 272,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 271,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 292,
												"src": "7769:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 270,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7769:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7768:14:0"
									},
									"scope": 293,
									"src": "7619:712:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 612,
							"src": "60:8274:0",
							"usedErrors": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"fullyImplemented": true,
							"id": 486,
							"linearizedBaseContracts": [
								486
							],
							"name": "SafeMath",
							"nameLocation": "8346:8:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 318,
										"nodeType": "Block",
										"src": "8660:114:0",
										"statements": [
											{
												"assignments": [
													304
												],
												"declarations": [
													{
														"constant": false,
														"id": 304,
														"mutability": "mutable",
														"name": "c",
														"nameLocation": "8679:1:0",
														"nodeType": "VariableDeclaration",
														"scope": 318,
														"src": "8671:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 303,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8671:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 308,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 307,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 305,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 296,
														"src": "8683:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 306,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 298,
														"src": "8687:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8683:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8671:17:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 312,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 310,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 304,
																"src": "8707:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 311,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 296,
																"src": "8712:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "8707:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "536166654d6174683a206164646974696f6e206f766572666c6f77",
															"id": 313,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8715:29:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a",
																"typeString": "literal_string \"SafeMath: addition overflow\""
															},
															"value": "SafeMath: addition overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a",
																"typeString": "literal_string \"SafeMath: addition overflow\""
															}
														],
														"id": 309,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "8699:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 314,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8699:46:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 315,
												"nodeType": "ExpressionStatement",
												"src": "8699:46:0"
											},
											{
												"expression": {
													"id": 316,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 304,
													"src": "8765:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 302,
												"id": 317,
												"nodeType": "Return",
												"src": "8758:8:0"
											}
										]
									},
									"documentation": {
										"id": 294,
										"nodeType": "StructuredDocumentation",
										"src": "8362:225:0",
										"text": " @dev Returns the addition of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `+` operator.\n Requirements:\n - Addition cannot overflow."
									},
									"id": 319,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nameLocation": "8602:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 299,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 296,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "8614:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 319,
												"src": "8606:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 295,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8606:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 298,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "8625:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 319,
												"src": "8617:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 297,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8617:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8605:22:0"
									},
									"returnParameters": {
										"id": 302,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 301,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 319,
												"src": "8651:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 300,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8651:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8650:9:0"
									},
									"scope": 486,
									"src": "8593:181:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 335,
										"nodeType": "Block",
										"src": "9116:69:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 330,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 322,
															"src": "9138:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 331,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 324,
															"src": "9141:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "536166654d6174683a207375627472616374696f6e206f766572666c6f77",
															"id": 332,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9144:32:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_50b058e9b5320e58880d88223c9801cd9eecdcf90323d5c2318bc1b6b916e862",
																"typeString": "literal_string \"SafeMath: subtraction overflow\""
															},
															"value": "SafeMath: subtraction overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_50b058e9b5320e58880d88223c9801cd9eecdcf90323d5c2318bc1b6b916e862",
																"typeString": "literal_string \"SafeMath: subtraction overflow\""
															}
														],
														"id": 329,
														"name": "sub",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															336,
															364
														],
														"referencedDeclaration": 364,
														"src": "9134:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
														}
													},
													"id": 333,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9134:43:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 328,
												"id": 334,
												"nodeType": "Return",
												"src": "9127:50:0"
											}
										]
									},
									"documentation": {
										"id": 320,
										"nodeType": "StructuredDocumentation",
										"src": "8782:261:0",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting on\n overflow (when the result is negative).\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 336,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "9058:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 325,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 322,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "9070:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 336,
												"src": "9062:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 321,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9062:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 324,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "9081:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 336,
												"src": "9073:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 323,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9073:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9061:22:0"
									},
									"returnParameters": {
										"id": 328,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 327,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 336,
												"src": "9107:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 326,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9107:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9106:9:0"
									},
									"scope": 486,
									"src": "9049:136:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 363,
										"nodeType": "Block",
										"src": "9617:97:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 351,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 349,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 341,
																"src": "9636:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 350,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 339,
																"src": "9641:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9636:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 352,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 343,
															"src": "9644:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 348,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "9628:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 353,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9628:29:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 354,
												"nodeType": "ExpressionStatement",
												"src": "9628:29:0"
											},
											{
												"assignments": [
													356
												],
												"declarations": [
													{
														"constant": false,
														"id": 356,
														"mutability": "mutable",
														"name": "c",
														"nameLocation": "9676:1:0",
														"nodeType": "VariableDeclaration",
														"scope": 363,
														"src": "9668:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 355,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9668:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 360,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 359,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 357,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 339,
														"src": "9680:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 358,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 341,
														"src": "9684:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9680:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9668:17:0"
											},
											{
												"expression": {
													"id": 361,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 356,
													"src": "9705:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 347,
												"id": 362,
												"nodeType": "Return",
												"src": "9698:8:0"
											}
										]
									},
									"documentation": {
										"id": 337,
										"nodeType": "StructuredDocumentation",
										"src": "9193:323:0",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n overflow (when the result is negative).\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow.\n _Available since v2.4.0._"
									},
									"id": 364,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "9531:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 344,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 339,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "9543:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 364,
												"src": "9535:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 338,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9535:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 341,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "9554:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 364,
												"src": "9546:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 340,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9546:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 343,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "9571:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 364,
												"src": "9557:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 342,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "9557:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9534:50:0"
									},
									"returnParameters": {
										"id": 347,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 346,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 364,
												"src": "9608:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 345,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9608:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9607:9:0"
									},
									"scope": 486,
									"src": "9522:192:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 398,
										"nodeType": "Block",
										"src": "10032:404:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 376,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 374,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 367,
														"src": "10268:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 375,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "10273:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "10268:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 380,
												"nodeType": "IfStatement",
												"src": "10264:47:0",
												"trueBody": {
													"id": 379,
													"nodeType": "Block",
													"src": "10276:35:0",
													"statements": [
														{
															"expression": {
																"hexValue": "30",
																"id": 377,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10298:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 373,
															"id": 378,
															"nodeType": "Return",
															"src": "10291:8:0"
														}
													]
												}
											},
											{
												"assignments": [
													382
												],
												"declarations": [
													{
														"constant": false,
														"id": 382,
														"mutability": "mutable",
														"name": "c",
														"nameLocation": "10331:1:0",
														"nodeType": "VariableDeclaration",
														"scope": 398,
														"src": "10323:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 381,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10323:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 386,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 385,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 383,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 367,
														"src": "10335:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"id": 384,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 369,
														"src": "10339:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10335:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10323:17:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 392,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 390,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 388,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 382,
																	"src": "10359:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 389,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 367,
																	"src": "10363:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "10359:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 391,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 369,
																"src": "10368:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10359:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77",
															"id": 393,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10371:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3",
																"typeString": "literal_string \"SafeMath: multiplication overflow\""
															},
															"value": "SafeMath: multiplication overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3",
																"typeString": "literal_string \"SafeMath: multiplication overflow\""
															}
														],
														"id": 387,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "10351:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 394,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10351:56:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 395,
												"nodeType": "ExpressionStatement",
												"src": "10351:56:0"
											},
											{
												"expression": {
													"id": 396,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 382,
													"src": "10427:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 373,
												"id": 397,
												"nodeType": "Return",
												"src": "10420:8:0"
											}
										]
									},
									"documentation": {
										"id": 365,
										"nodeType": "StructuredDocumentation",
										"src": "9722:237:0",
										"text": " @dev Returns the multiplication of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `*` operator.\n Requirements:\n - Multiplication cannot overflow."
									},
									"id": 399,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mul",
									"nameLocation": "9974:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 370,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 367,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "9986:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 399,
												"src": "9978:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 366,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9978:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 369,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "9997:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 399,
												"src": "9989:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 368,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9989:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9977:22:0"
									},
									"returnParameters": {
										"id": 373,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 372,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 399,
												"src": "10023:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 371,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10023:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10022:9:0"
									},
									"scope": 486,
									"src": "9965:471:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 415,
										"nodeType": "Block",
										"src": "10971:65:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 410,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 402,
															"src": "10993:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 411,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 404,
															"src": "10996:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "536166654d6174683a206469766973696f6e206279207a65726f",
															"id": 412,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10999:28:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5b7cc70dda4dc2143e5adb63bd5d1f349504f461dbdfd9bc76fac1f8ca6d019f",
																"typeString": "literal_string \"SafeMath: division by zero\""
															},
															"value": "SafeMath: division by zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_5b7cc70dda4dc2143e5adb63bd5d1f349504f461dbdfd9bc76fac1f8ca6d019f",
																"typeString": "literal_string \"SafeMath: division by zero\""
															}
														],
														"id": 409,
														"name": "div",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															416,
															444
														],
														"referencedDeclaration": 444,
														"src": "10989:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
														}
													},
													"id": 413,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10989:39:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 408,
												"id": 414,
												"nodeType": "Return",
												"src": "10982:46:0"
											}
										]
									},
									"documentation": {
										"id": 400,
										"nodeType": "StructuredDocumentation",
										"src": "10444:454:0",
										"text": " @dev Returns the integer division of two unsigned integers. Reverts on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 416,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "10913:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 405,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 402,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "10925:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 416,
												"src": "10917:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 401,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10917:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 404,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "10936:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 416,
												"src": "10928:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 403,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10928:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10916:22:0"
									},
									"returnParameters": {
										"id": 408,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 407,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 416,
												"src": "10962:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 406,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10962:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10961:9:0"
									},
									"scope": 486,
									"src": "10904:132:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 443,
										"nodeType": "Block",
										"src": "11661:250:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 431,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 429,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 421,
																"src": "11747:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 430,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11751:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11747:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 432,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 423,
															"src": "11754:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 428,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "11739:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 433,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11739:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 434,
												"nodeType": "ExpressionStatement",
												"src": "11739:28:0"
											},
											{
												"assignments": [
													436
												],
												"declarations": [
													{
														"constant": false,
														"id": 436,
														"mutability": "mutable",
														"name": "c",
														"nameLocation": "11786:1:0",
														"nodeType": "VariableDeclaration",
														"scope": 443,
														"src": "11778:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 435,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "11778:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 440,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 439,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 437,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 419,
														"src": "11790:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 438,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 421,
														"src": "11794:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "11790:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11778:17:0"
											},
											{
												"expression": {
													"id": 441,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 436,
													"src": "11902:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 427,
												"id": 442,
												"nodeType": "Return",
												"src": "11895:8:0"
											}
										]
									},
									"documentation": {
										"id": 417,
										"nodeType": "StructuredDocumentation",
										"src": "11044:516:0",
										"text": " @dev Returns the integer division of two unsigned integers. Reverts with custom message on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero.\n _Available since v2.4.0._"
									},
									"id": 444,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "11575:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 424,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 419,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "11587:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 444,
												"src": "11579:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 418,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11579:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 421,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "11598:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 444,
												"src": "11590:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 420,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11590:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 423,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "11615:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 444,
												"src": "11601:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 422,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "11601:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11578:50:0"
									},
									"returnParameters": {
										"id": 427,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 426,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 444,
												"src": "11652:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 425,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11652:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11651:9:0"
									},
									"scope": 486,
									"src": "11566:345:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 460,
										"nodeType": "Block",
										"src": "12435:63:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 455,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 447,
															"src": "12457:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 456,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 449,
															"src": "12460:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "536166654d6174683a206d6f64756c6f206279207a65726f",
															"id": 457,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "12463:26:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_726e51f7b81fce0a68f5f214f445e275313b20b1633f08ce954ee39abf8d7832",
																"typeString": "literal_string \"SafeMath: modulo by zero\""
															},
															"value": "SafeMath: modulo by zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_726e51f7b81fce0a68f5f214f445e275313b20b1633f08ce954ee39abf8d7832",
																"typeString": "literal_string \"SafeMath: modulo by zero\""
															}
														],
														"id": 454,
														"name": "mod",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															461,
															485
														],
														"referencedDeclaration": 485,
														"src": "12453:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
														}
													},
													"id": 458,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12453:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 453,
												"id": 459,
												"nodeType": "Return",
												"src": "12446:44:0"
											}
										]
									},
									"documentation": {
										"id": 445,
										"nodeType": "StructuredDocumentation",
										"src": "11919:443:0",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n Reverts when dividing by zero.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 461,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "12377:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 450,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 447,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "12389:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 461,
												"src": "12381:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 446,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12381:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 449,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "12400:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 461,
												"src": "12392:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 448,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12392:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12380:22:0"
									},
									"returnParameters": {
										"id": 453,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 452,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 461,
												"src": "12426:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 451,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12426:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12425:9:0"
									},
									"scope": 486,
									"src": "12368:130:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 484,
										"nodeType": "Block",
										"src": "13112:71:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 476,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 474,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 466,
																"src": "13131:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"hexValue": "30",
																"id": 475,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "13136:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "13131:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 477,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 468,
															"src": "13139:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 473,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "13123:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 478,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13123:29:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 479,
												"nodeType": "ExpressionStatement",
												"src": "13123:29:0"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 482,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 480,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 464,
														"src": "13170:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"id": 481,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 466,
														"src": "13174:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "13170:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 472,
												"id": 483,
												"nodeType": "Return",
												"src": "13163:12:0"
											}
										]
									},
									"documentation": {
										"id": 462,
										"nodeType": "StructuredDocumentation",
										"src": "12506:505:0",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n Reverts with custom message when dividing by zero.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero.\n _Available since v2.4.0._"
									},
									"id": 485,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "13026:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 469,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 464,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "13038:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 485,
												"src": "13030:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 463,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13030:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 466,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "13049:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 485,
												"src": "13041:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 465,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13041:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 468,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "13066:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 485,
												"src": "13052:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 467,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "13052:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13029:50:0"
									},
									"returnParameters": {
										"id": 472,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 471,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 485,
												"src": "13103:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 470,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13103:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13102:9:0"
									},
									"scope": 486,
									"src": "13017:166:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 612,
							"src": "8338:4848:0",
							"usedErrors": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 510,
							"linearizedBaseContracts": [
								510
							],
							"name": "IERC20",
							"nameLocation": "13200:6:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 487,
										"nodeType": "StructuredDocumentation",
										"src": "13214:68:0",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 492,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "13297:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 488,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13308:2:0"
									},
									"returnParameters": {
										"id": 491,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 490,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 492,
												"src": "13334:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 489,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13334:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13333:9:0"
									},
									"scope": 510,
									"src": "13288:55:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "0dfe1681",
									"id": 497,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "token0",
									"nameLocation": "13360:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 493,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13366:2:0"
									},
									"returnParameters": {
										"id": 496,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 495,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 497,
												"src": "13392:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 494,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13392:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13391:9:0"
									},
									"scope": 510,
									"src": "13351:50:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "d21220a7",
									"id": 502,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "token1",
									"nameLocation": "13418:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 498,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13424:2:0"
									},
									"returnParameters": {
										"id": 501,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 500,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 502,
												"src": "13450:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 499,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13450:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13449:9:0"
									},
									"scope": 510,
									"src": "13409:50:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "70a08231",
									"id": 509,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "13476:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 505,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 504,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "13494:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 509,
												"src": "13486:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 503,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13486:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13485:17:0"
									},
									"returnParameters": {
										"id": 508,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 507,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 509,
												"src": "13526:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 506,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13526:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13525:9:0"
									},
									"scope": 510,
									"src": "13467:68:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 612,
							"src": "13190:348:0",
							"usedErrors": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 522,
							"linearizedBaseContracts": [
								522
							],
							"name": "Router",
							"nameLocation": "13552:6:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "d06ca61f",
									"id": 521,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getAmountsOut",
									"nameLocation": "13575:13:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 516,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 512,
												"mutability": "mutable",
												"name": "amountIn",
												"nameLocation": "13594:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 521,
												"src": "13589:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 511,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "13589:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 515,
												"mutability": "mutable",
												"name": "path",
												"nameLocation": "13621:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 521,
												"src": "13604:21:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 513,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "13604:7:0",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 514,
													"nodeType": "ArrayTypeName",
													"src": "13604:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13588:38:0"
									},
									"returnParameters": {
										"id": 520,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 519,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "13682:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 521,
												"src": "13668:21:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 517,
														"name": "uint",
														"nodeType": "ElementaryTypeName",
														"src": "13668:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 518,
													"nodeType": "ArrayTypeName",
													"src": "13668:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13667:23:0"
									},
									"scope": 522,
									"src": "13566:125:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 612,
							"src": "13542:152:0",
							"usedErrors": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 611,
							"linearizedBaseContracts": [
								611
							],
							"name": "LpUtils",
							"nameLocation": "13707:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 525,
									"libraryName": {
										"id": 523,
										"name": "SafeMath",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 486,
										"src": "13728:8:0"
									},
									"nodeType": "UsingForDirective",
									"src": "13722:27:0",
									"typeName": {
										"id": 524,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "13741:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"constant": false,
									"functionSelector": "8dd95002",
									"id": 528,
									"mutability": "mutable",
									"name": "WBNB",
									"nameLocation": "13770:4:0",
									"nodeType": "VariableDeclaration",
									"scope": 611,
									"src": "13755:64:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 526,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "13755:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": {
										"hexValue": "307861653133643938396461433266306445624666343630614331313261383337433839424161376364",
										"id": 527,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "13777:42:0",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										},
										"value": "0xae13d989daC2f0dEbFf460aC112a837C89BAa7cd"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "484f4ea9",
									"id": 531,
									"mutability": "mutable",
									"name": "BUSD",
									"nameLocation": "13841:4:0",
									"nodeType": "VariableDeclaration",
									"scope": 611,
									"src": "13826:64:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 529,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "13826:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": {
										"hexValue": "307837383836374262456546343466323332366246384444643139343161343433393338324546324137",
										"id": 530,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "13848:42:0",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										},
										"value": "0x78867BbEeF44f2326bF8DDd1941a4439382EF2A7"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 534,
									"mutability": "mutable",
									"name": "amount",
									"nameLocation": "13905:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 611,
									"src": "13897:36:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 532,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "13897:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31303030303030303030303030303030303030",
										"id": 533,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "13914:19:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1000000000000000000_by_1",
											"typeString": "int_const 1000000000000000000"
										},
										"value": "1000000000000000000"
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 581,
										"nodeType": "Block",
										"src": "14024:196:0",
										"statements": [
											{
												"assignments": [
													548
												],
												"declarations": [
													{
														"constant": false,
														"id": 548,
														"mutability": "mutable",
														"name": "path",
														"nameLocation": "14052:4:0",
														"nodeType": "VariableDeclaration",
														"scope": 581,
														"src": "14035:21:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
															"typeString": "address[]"
														},
														"typeName": {
															"baseType": {
																"id": 546,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "14035:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 547,
															"nodeType": "ArrayTypeName",
															"src": "14035:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
																"typeString": "address[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 554,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "33",
															"id": 552,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "14073:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_3_by_1",
																"typeString": "int_const 3"
															},
															"value": "3"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_rational_3_by_1",
																"typeString": "int_const 3"
															}
														],
														"id": 551,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "14059:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_address_$dyn_memory_ptr_$",
															"typeString": "function (uint256) pure returns (address[] memory)"
														},
														"typeName": {
															"baseType": {
																"id": 549,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "14063:7:0",
																"stateMutability": "nonpayable",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 550,
															"nodeType": "ArrayTypeName",
															"src": "14063:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
																"typeString": "address[]"
															}
														}
													},
													"id": 553,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14059:16:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
														"typeString": "address[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "14035:40:0"
											},
											{
												"expression": {
													"id": 559,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 555,
															"name": "path",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 548,
															"src": "14086:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																"typeString": "address[] memory"
															}
														},
														"id": 557,
														"indexExpression": {
															"hexValue": "30",
															"id": 556,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "14091:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "14086:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 558,
														"name": "token",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 539,
														"src": "14096:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "14086:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 560,
												"nodeType": "ExpressionStatement",
												"src": "14086:15:0"
											},
											{
												"expression": {
													"id": 565,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 561,
															"name": "path",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 548,
															"src": "14112:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																"typeString": "address[] memory"
															}
														},
														"id": 563,
														"indexExpression": {
															"hexValue": "31",
															"id": 562,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "14117:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "14112:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 564,
														"name": "WBNB",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 528,
														"src": "14122:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "14112:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 566,
												"nodeType": "ExpressionStatement",
												"src": "14112:14:0"
											},
											{
												"expression": {
													"id": 571,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 567,
															"name": "path",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 548,
															"src": "14137:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																"typeString": "address[] memory"
															}
														},
														"id": 569,
														"indexExpression": {
															"hexValue": "32",
															"id": 568,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "14142:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "14137:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 570,
														"name": "BUSD",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 531,
														"src": "14147:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "14137:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 572,
												"nodeType": "ExpressionStatement",
												"src": "14137:14:0"
											},
											{
												"expression": {
													"baseExpression": {
														"arguments": [
															{
																"id": 575,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 534,
																"src": "14197:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 576,
																"name": "path",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 548,
																"src": "14204:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																	"typeString": "address[] memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																	"typeString": "address[] memory"
																}
															],
															"expression": {
																"id": 573,
																"name": "routerAddress",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 537,
																"src": "14169:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_Router_$522",
																	"typeString": "contract Router"
																}
															},
															"id": 574,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "getAmountsOut",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 521,
															"src": "14169:27:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_view$_t_uint256_$_t_array$_t_address_$dyn_memory_ptr_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
																"typeString": "function (uint256,address[] memory) view external returns (uint256[] memory)"
															}
														},
														"id": 577,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "14169:40:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[] memory"
														}
													},
													"id": 579,
													"indexExpression": {
														"hexValue": "32",
														"id": 578,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "14210:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_2_by_1",
															"typeString": "int_const 2"
														},
														"value": "2"
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "14169:43:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 543,
												"id": 580,
												"nodeType": "Return",
												"src": "14162:50:0"
											}
										]
									},
									"id": 582,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "price",
									"nameLocation": "13951:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 540,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 537,
												"mutability": "mutable",
												"name": "routerAddress",
												"nameLocation": "13964:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 582,
												"src": "13957:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_Router_$522",
													"typeString": "contract Router"
												},
												"typeName": {
													"id": 536,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 535,
														"name": "Router",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 522,
														"src": "13957:6:0"
													},
													"referencedDeclaration": 522,
													"src": "13957:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_Router_$522",
														"typeString": "contract Router"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 539,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "13987:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 582,
												"src": "13979:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 538,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13979:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13956:37:0"
									},
									"returnParameters": {
										"id": 543,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 542,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 582,
												"src": "14016:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 541,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14016:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14015:9:0"
									},
									"scope": 611,
									"src": "13942:278:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 609,
										"nodeType": "Block",
										"src": "14319:338:0",
										"statements": [
											{
												"expression": {
													"components": [
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"arguments": [],
																			"expression": {
																				"argumentTypes": [],
																				"expression": {
																					"id": 602,
																					"name": "lpAddress",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 585,
																					"src": "14628:9:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC20_$510",
																						"typeString": "contract IERC20"
																					}
																				},
																				"id": 603,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "token0",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 497,
																				"src": "14628:16:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
																					"typeString": "function () view external returns (address)"
																				}
																			},
																			"id": 604,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "14628:18:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"expression": {
																			"id": 600,
																			"name": "lpAddress",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 585,
																			"src": "14608:9:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$510",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 601,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "balanceOf",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 509,
																		"src": "14608:19:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																			"typeString": "function (address) view external returns (uint256)"
																		}
																	},
																	"id": 605,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "14608:39:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"arguments": [
																		{
																			"id": 594,
																			"name": "routerAddress",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 588,
																			"src": "14570:13:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Router_$522",
																				"typeString": "contract Router"
																			}
																		},
																		{
																			"arguments": [],
																			"expression": {
																				"argumentTypes": [],
																				"expression": {
																					"id": 595,
																					"name": "lpAddress",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 585,
																					"src": "14584:9:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC20_$510",
																						"typeString": "contract IERC20"
																					}
																				},
																				"id": 596,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "token0",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 497,
																				"src": "14584:16:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
																					"typeString": "function () view external returns (address)"
																				}
																			},
																			"id": 597,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "14584:18:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Router_$522",
																				"typeString": "contract Router"
																			},
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 593,
																		"name": "price",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 582,
																		"src": "14564:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$_t_contract$_Router_$522_$_t_address_$returns$_t_uint256_$",
																			"typeString": "function (contract Router,address) view returns (uint256)"
																		}
																	},
																	"id": 598,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "14564:39:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 599,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "mul",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 399,
																"src": "14564:43:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 606,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "14564:84:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 607,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "14563:86:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 592,
												"id": 608,
												"nodeType": "Return",
												"src": "14556:93:0"
											}
										]
									},
									"functionSelector": "344e49d9",
									"id": 610,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "CalcLpPrice",
									"nameLocation": "14237:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 589,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 585,
												"mutability": "mutable",
												"name": "lpAddress",
												"nameLocation": "14256:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 610,
												"src": "14249:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$510",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 584,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 583,
														"name": "IERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 510,
														"src": "14249:6:0"
													},
													"referencedDeclaration": 510,
													"src": "14249:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$510",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 588,
												"mutability": "mutable",
												"name": "routerAddress",
												"nameLocation": "14274:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 610,
												"src": "14267:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_Router_$522",
													"typeString": "contract Router"
												},
												"typeName": {
													"id": 587,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 586,
														"name": "Router",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 522,
														"src": "14267:6:0"
													},
													"referencedDeclaration": 522,
													"src": "14267:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_Router_$522",
														"typeString": "contract Router"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14248:40:0"
									},
									"returnParameters": {
										"id": 592,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 591,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 610,
												"src": "14311:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 590,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14311:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14310:9:0"
									},
									"scope": 611,
									"src": "14228:429:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 612,
							"src": "13698:962:0",
							"usedErrors": []
						}
					],
					"src": "33:14627:0"
				},
				"id": 0
			}
		}
	}
}
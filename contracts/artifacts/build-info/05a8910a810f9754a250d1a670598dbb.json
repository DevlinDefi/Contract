{
	"id": "05a8910a810f9754a250d1a670598dbb",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.15",
	"solcLongVersion": "0.8.15+commit.e14f2714",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/NFTMasterChef.sol": {
				"content": "/**\r\n *Submitted for verification at BscScan.com on 2022-02-21\r\n*/\r\n\r\n// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.0;\r\n\r\nlibrary SafeMath {\r\n    /**\r\n     * @dev Returns the addition of two unsigned integers, reverting on\r\n     * overflow.\r\n     *\r\n     * Counterpart to Solidity's `+` operator.\r\n     *\r\n     * Requirements:\r\n     * - Addition cannot overflow.\r\n     */\r\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        uint256 c = a + b;\r\n        require(c >= a, \"SafeMath: addition overflow\");\r\n\r\n        return c;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the subtraction of two unsigned integers, reverting on\r\n     * overflow (when the result is negative).\r\n     *\r\n     * Counterpart to Solidity's `-` operator.\r\n     *\r\n     * Requirements:\r\n     * - Subtraction cannot overflow.\r\n     */\r\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        return sub(a, b, \"SafeMath: subtraction overflow\");\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\r\n     * overflow (when the result is negative).\r\n     *\r\n     * Counterpart to Solidity's `-` operator.\r\n     *\r\n     * Requirements:\r\n     * - Subtraction cannot overflow.\r\n     *\r\n     * _Available since v2.4.0._\r\n     */\r\n    function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\r\n        require(b <= a, errorMessage);\r\n        uint256 c = a - b;\r\n\r\n        return c;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the multiplication of two unsigned integers, reverting on\r\n     * overflow.\r\n     *\r\n     * Counterpart to Solidity's `*` operator.\r\n     *\r\n     * Requirements:\r\n     * - Multiplication cannot overflow.\r\n     */\r\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\r\n        // benefit is lost if 'b' is also tested.\r\n        // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\r\n        if (a == 0) {\r\n            return 0;\r\n        }\r\n\r\n        uint256 c = a * b;\r\n        require(c / a == b, \"SafeMath: multiplication overflow\");\r\n\r\n        return c;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the integer division of two unsigned integers. Reverts on\r\n     * division by zero. The result is rounded towards zero.\r\n     *\r\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\r\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\r\n     * uses an invalid opcode to revert (consuming all remaining gas).\r\n     *\r\n     * Requirements:\r\n     * - The divisor cannot be zero.\r\n     */\r\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        return div(a, b, \"SafeMath: division by zero\");\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the integer division of two unsigned integers. Reverts with custom message on\r\n     * division by zero. The result is rounded towards zero.\r\n     *\r\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\r\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\r\n     * uses an invalid opcode to revert (consuming all remaining gas).\r\n     *\r\n     * Requirements:\r\n     * - The divisor cannot be zero.\r\n     *\r\n     * _Available since v2.4.0._\r\n     */\r\n    function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\r\n        // Solidity only automatically asserts when dividing by 0\r\n        require(b > 0, errorMessage);\r\n        uint256 c = a / b;\r\n        // assert(a == b * c + a % b); // There is no case in which this doesn't hold\r\n\r\n        return c;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\r\n     * Reverts when dividing by zero.\r\n     *\r\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\r\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\r\n     * invalid opcode to revert (consuming all remaining gas).\r\n     *\r\n     * Requirements:\r\n     * - The divisor cannot be zero.\r\n     */\r\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        return mod(a, b, \"SafeMath: modulo by zero\");\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\r\n     * Reverts with custom message when dividing by zero.\r\n     *\r\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\r\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\r\n     * invalid opcode to revert (consuming all remaining gas).\r\n     *\r\n     * Requirements:\r\n     * - The divisor cannot be zero.\r\n     *\r\n     * _Available since v2.4.0._\r\n     */\r\n    function mod(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\r\n        require(b != 0, errorMessage);\r\n        return a % b;\r\n    }\r\n}\r\n\r\ninterface IERC20 {\r\n    /**\r\n     * @dev Returns the amount of tokens in existence.\r\n     */\r\n    function totalSupply() external view returns (uint256);\r\n\r\n    /**\r\n     * @dev Returns the amount of tokens owned by `account`.\r\n     */\r\n    function balanceOf(address account) external view returns (uint256);\r\n\r\n    /**\r\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\r\n     *\r\n     * Returns a boolean value indicating whether the operation succeeded.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     */\r\n    function transfer(address recipient, uint256 amount) external returns (bool);\r\n\r\n    /**\r\n     * @dev Returns the remaining number of tokens that `spender` will be\r\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\r\n     * zero by default.\r\n     *\r\n     * This value changes when {approve} or {transferFrom} are called.\r\n     */\r\n    function allowance(address owner, address spender) external view returns (uint256);\r\n\r\n    /**\r\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\r\n     *\r\n     * Returns a boolean value indicating whether the operation succeeded.\r\n     *\r\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\r\n     * that someone may use both the old and the new allowance by unfortunate\r\n     * transaction ordering. One possible solution to mitigate this race\r\n     * condition is to first reduce the spender's allowance to 0 and set the\r\n     * desired value afterwards:\r\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\r\n     *\r\n     * Emits an {Approval} event.\r\n     */\r\n    function approve(address spender, uint256 amount) external returns (bool);\r\n\r\n    function mint(address account, uint256 amount) external returns (bool);\r\n\r\n    /**\r\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\r\n     * allowance mechanism. `amount` is then deducted from the caller's\r\n     * allowance.\r\n     *\r\n     * Returns a boolean value indicating whether the operation succeeded.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     */\r\n    function transferFrom(\r\n        address sender,\r\n        address recipient,\r\n        uint256 amount\r\n    ) external returns (bool);\r\n\r\n    /**\r\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\r\n     * another (`to`).\r\n     *\r\n     * Note that `value` may be zero.\r\n     */\r\n    event Transfer(address indexed from, address indexed to, uint256 value);\r\n\r\n    /**\r\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\r\n     * a call to {approve}. `value` is the new allowance.\r\n     */\r\n    event Approval(address indexed owner, address indexed spender, uint256 value);\r\n\r\n    event Mint(address indexed minter, address indexed to, uint256 amount);\r\n}\r\n\r\nlibrary Address {\r\n    /**\r\n     * @dev Returns true if `account` is a contract.\r\n     *\r\n     * [IMPORTANT]\r\n     * ====\r\n     * It is unsafe to assume that an address for which this function returns\r\n     * false is an externally-owned account (EOA) and not a contract.\r\n     *\r\n     * Among others, `isContract` will return false for the following\r\n     * types of addresses:\r\n     *\r\n     *  - an externally-owned account\r\n     *  - a contract in construction\r\n     *  - an address where a contract will be created\r\n     *  - an address where a contract lived, but was destroyed\r\n     * ====\r\n     *\r\n     * [IMPORTANT]\r\n     * ====\r\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\r\n     *\r\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\r\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\r\n     * constructor.\r\n     * ====\r\n     */\r\n    function isContract(address account) internal view returns (bool) {\r\n        // This method relies on extcodesize/address.code.length, which returns 0\r\n        // for contracts in construction, since the code is only stored at the end\r\n        // of the constructor execution.\r\n\r\n        return account.code.length > 0;\r\n    }\r\n\r\n    /**\r\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\r\n     * `recipient`, forwarding all available gas and reverting on errors.\r\n     *\r\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\r\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\r\n     * imposed by `transfer`, making them unable to receive funds via\r\n     * `transfer`. {sendValue} removes this limitation.\r\n     *\r\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\r\n     *\r\n     * IMPORTANT: because control is transferred to `recipient`, care must be\r\n     * taken to not create reentrancy vulnerabilities. Consider using\r\n     * {ReentrancyGuard} or the\r\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\r\n     */\r\n    function sendValue(address payable recipient, uint256 amount) internal {\r\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\r\n\r\n        (bool success, ) = recipient.call{value: amount}(\"\");\r\n        require(success, \"Address: unable to send value, recipient may have reverted\");\r\n    }\r\n\r\n    /**\r\n     * @dev Performs a Solidity function call using a low level `call`. A\r\n     * plain `call` is an unsafe replacement for a function call: use this\r\n     * function instead.\r\n     *\r\n     * If `target` reverts with a revert reason, it is bubbled up by this\r\n     * function (like regular Solidity function calls).\r\n     *\r\n     * Returns the raw returned data. To convert to the expected return value,\r\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `target` must be a contract.\r\n     * - calling `target` with `data` must not revert.\r\n     *\r\n     * _Available since v3.1._\r\n     */\r\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\r\n        return functionCall(target, data, \"Address: low-level call failed\");\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\r\n     * `errorMessage` as a fallback revert reason when `target` reverts.\r\n     *\r\n     * _Available since v3.1._\r\n     */\r\n    function functionCall(\r\n        address target,\r\n        bytes memory data,\r\n        string memory errorMessage\r\n    ) internal returns (bytes memory) {\r\n        return functionCallWithValue(target, data, 0, errorMessage);\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\r\n     * but also transferring `value` wei to `target`.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - the calling contract must have an ETH balance of at least `value`.\r\n     * - the called Solidity function must be `payable`.\r\n     *\r\n     * _Available since v3.1._\r\n     */\r\n    function functionCallWithValue(\r\n        address target,\r\n        bytes memory data,\r\n        uint256 value\r\n    ) internal returns (bytes memory) {\r\n        return functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\r\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\r\n     *\r\n     * _Available since v3.1._\r\n     */\r\n    function functionCallWithValue(\r\n        address target,\r\n        bytes memory data,\r\n        uint256 value,\r\n        string memory errorMessage\r\n    ) internal returns (bytes memory) {\r\n        require(address(this).balance >= value, \"Address: insufficient balance for call\");\r\n        require(isContract(target), \"Address: call to non-contract\");\r\n\r\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\r\n        return verifyCallResult(success, returndata, errorMessage);\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\r\n     * but performing a static call.\r\n     *\r\n     * _Available since v3.3._\r\n     */\r\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\r\n        return functionStaticCall(target, data, \"Address: low-level static call failed\");\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\r\n     * but performing a static call.\r\n     *\r\n     * _Available since v3.3._\r\n     */\r\n    function functionStaticCall(\r\n        address target,\r\n        bytes memory data,\r\n        string memory errorMessage\r\n    ) internal view returns (bytes memory) {\r\n        require(isContract(target), \"Address: static call to non-contract\");\r\n\r\n        (bool success, bytes memory returndata) = target.staticcall(data);\r\n        return verifyCallResult(success, returndata, errorMessage);\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\r\n     * but performing a delegate call.\r\n     *\r\n     * _Available since v3.4._\r\n     */\r\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\r\n        return functionDelegateCall(target, data, \"Address: low-level delegate call failed\");\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\r\n     * but performing a delegate call.\r\n     *\r\n     * _Available since v3.4._\r\n     */\r\n    function functionDelegateCall(\r\n        address target,\r\n        bytes memory data,\r\n        string memory errorMessage\r\n    ) internal returns (bytes memory) {\r\n        require(isContract(target), \"Address: delegate call to non-contract\");\r\n\r\n        (bool success, bytes memory returndata) = target.delegatecall(data);\r\n        return verifyCallResult(success, returndata, errorMessage);\r\n    }\r\n\r\n    /**\r\n     * @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\r\n     * revert reason using the provided one.\r\n     *\r\n     * _Available since v4.3._\r\n     */\r\n    function verifyCallResult(\r\n        bool success,\r\n        bytes memory returndata,\r\n        string memory errorMessage\r\n    ) internal pure returns (bytes memory) {\r\n        if (success) {\r\n            return returndata;\r\n        } else {\r\n            // Look for revert reason and bubble it up if present\r\n            if (returndata.length > 0) {\r\n                // The easiest way to bubble the revert reason is using memory via assembly\r\n\r\n                assembly {\r\n                    let returndata_size := mload(returndata)\r\n                    revert(add(32, returndata), returndata_size)\r\n                }\r\n            } else {\r\n                revert(errorMessage);\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nlibrary SafeERC20 {\r\n    using Address for address;\r\n\r\n    function safeTransfer(\r\n        IERC20 token,\r\n        address to,\r\n        uint256 value\r\n    ) internal {\r\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value));\r\n    }\r\n\r\n    function safeTransferFrom(\r\n        IERC20 token,\r\n        address from,\r\n        address to,\r\n        uint256 value\r\n    ) internal {\r\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value));\r\n    }\r\n\r\n    /**\r\n     * @dev Deprecated. This function has issues similar to the ones found in\r\n     * {IERC20-approve}, and its usage is discouraged.\r\n     *\r\n     * Whenever possible, use {safeIncreaseAllowance} and\r\n     * {safeDecreaseAllowance} instead.\r\n     */\r\n    function safeApprove(\r\n        IERC20 token,\r\n        address spender,\r\n        uint256 value\r\n    ) internal {\r\n        // safeApprove should only be called when setting an initial allowance,\r\n        // or when resetting it to zero. To increase and decrease it, use\r\n        // 'safeIncreaseAllowance' and 'safeDecreaseAllowance'\r\n        require(\r\n            (value == 0) || (token.allowance(address(this), spender) == 0),\r\n            \"SafeERC20: approve from non-zero to non-zero allowance\"\r\n        );\r\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, value));\r\n    }\r\n\r\n    function safeIncreaseAllowance(\r\n        IERC20 token,\r\n        address spender,\r\n        uint256 value\r\n    ) internal {\r\n        uint256 newAllowance = token.allowance(address(this), spender) + value;\r\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\r\n    }\r\n\r\n    function safeDecreaseAllowance(\r\n        IERC20 token,\r\n        address spender,\r\n        uint256 value\r\n    ) internal {\r\n        unchecked {\r\n            uint256 oldAllowance = token.allowance(address(this), spender);\r\n            require(oldAllowance >= value, \"SafeERC20: decreased allowance below zero\");\r\n            uint256 newAllowance = oldAllowance - value;\r\n            _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\r\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\r\n     * @param token The token targeted by the call.\r\n     * @param data The call data (encoded using abi.encode or one of its variants).\r\n     */\r\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\r\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\r\n        // we're implementing it ourselves. We use {Address.functionCall} to perform this call, which verifies that\r\n        // the target address contains contract code and also asserts for success in the low-level call.\r\n\r\n        bytes memory returndata = address(token).functionCall(data, \"SafeERC20: low-level call failed\");\r\n        if (returndata.length > 0) {\r\n            // Return data is optional\r\n            require(abi.decode(returndata, (bool)), \"SafeERC20: ERC20 operation did not succeed\");\r\n        }\r\n    }\r\n}\r\n\r\nabstract contract Context {\r\n    function _msgSender() internal view virtual returns (address) {\r\n        return msg.sender;\r\n    }\r\n\r\n    function _msgData() internal view virtual returns (bytes calldata) {\r\n        return msg.data;\r\n    }\r\n}\r\n\r\nabstract contract Ownable is Context {\r\n    address private _owner;\r\n\r\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\r\n\r\n    /**\r\n     * @dev Initializes the contract setting the deployer as the initial owner.\r\n     */\r\n    constructor() {\r\n        _transferOwnership(_msgSender());\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the address of the current owner.\r\n     */\r\n    function owner() public view virtual returns (address) {\r\n        return _owner;\r\n    }\r\n\r\n    /**\r\n     * @dev Throws if called by any account other than the owner.\r\n     */\r\n    modifier onlyOwner() {\r\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\r\n        _;\r\n    }\r\n\r\n    /**\r\n     * @dev Leaves the contract without owner. It will not be possible to call\r\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\r\n     *\r\n     * NOTE: Renouncing ownership will leave the contract without an owner,\r\n     * thereby removing any functionality that is only available to the owner.\r\n     */\r\n    function renounceOwnership() public virtual onlyOwner {\r\n        _transferOwnership(address(0));\r\n    }\r\n\r\n    /**\r\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\r\n     * Can only be called by the current owner.\r\n     */\r\n    function transferOwnership(address newOwner) public virtual onlyOwner {\r\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\r\n        _transferOwnership(newOwner);\r\n    }\r\n\r\n    /**\r\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\r\n     * Internal function without access restriction.\r\n     */\r\n    function _transferOwnership(address newOwner) internal virtual {\r\n        address oldOwner = _owner;\r\n        _owner = newOwner;\r\n        emit OwnershipTransferred(oldOwner, newOwner);\r\n    }\r\n}\r\n\r\ninterface IMigratorChef {\r\n    function migrate(IERC20 token) external returns (IERC20);\r\n}\r\n\r\ninterface IERC721 {\r\n    function createNFT(address to) external;\r\n}\r\n\r\n// MasterChef is the master of Power. He can make Power and he is a fair guy.\r\n//\r\n// Note that it's ownable and the owner wields tremendous power. The ownership\r\n// will be transferred to a governance smart contract once Power is sufficiently\r\n// distributed and the community can show to govern itself.\r\n//\r\n// Have fun reading it. Hopefully it's bug-free. God bless.\r\ncontract NFTMasterChef is Ownable {\r\n    using SafeMath for uint256;\r\n    using SafeERC20 for IERC20;\r\n    // Info of each user.\r\n    struct UserInfo {\r\n        uint256 amount; // How many LP tokens the user has provided.\r\n        uint256 rewardDebt; // Reward debt. See explanation below.\r\n        //\r\n        // We do some fancy math here. Basically, any point in time, the amount of Powers\r\n        // entitled to a user but is pending to be distributed is:\r\n        //\r\n        //   pending reward = (user.amount * pool.accPowerPerShare) - user.rewardDebt\r\n        //\r\n        // Whenever a user deposits or withdraws LP tokens to a pool. Here's what happens:\r\n        //   1. The pool's `accPowerPerShare` (and `lastRewardBlock`) gets updated.\r\n        //   2. User receives the pending reward sent to his/her address.\r\n        //   3. User's `amount` gets updated.\r\n        //   4. User's `rewardDebt` gets updated.\r\n    }\r\n    // Info of each pool.\r\n    struct PoolInfo {\r\n        IERC20 lpToken; // Address of LP token contract.\r\n        uint256 allocPoint; // How many allocation points assigned to this pool. Powers to distribute per block.\r\n        uint256 lastRewardBlock; // Last block number that Powers distribution occurs.\r\n        uint256 accPowerPerShare; // Accumulated Powers per share, times 1e12. See below.\r\n    }\r\n\r\n    struct NFTsInfo {\r\n        IERC721 NFT;\r\n        uint256 power;\r\n    }\r\n\r\n    NFTsInfo[] public nftsInfo;\r\n\r\n    // The Power TOKEN!\r\n    IERC20 public DDT;\r\n    // Dev address.\r\n    address public devaddr;\r\n    // Power tokens created per block.\r\n    uint256 public PowerPerBlock;\r\n    // Bonus muliplier for early Power makers.\r\n    uint256 public BONUS_MULTIPLIER = 1;\r\n    // The migrator contract. It has a lot of power. Can only be set through governance (owner).\r\n    IMigratorChef public migrator;\r\n    // Info of each pool.\r\n    PoolInfo[] public poolInfo;\r\n    // Info of each user that stakes LP tokens.\r\n    mapping(uint256 => mapping(address => UserInfo)) public userInfo;\r\n    // Total allocation poitns. Must be the sum of all allocation points in all pools.\r\n    uint256 public totalAllocPoint = 0;\r\n    // The block number when Power mining starts.\r\n    uint256 public startBlock;\r\n\r\n    mapping(address => uint256) public powerBalance;\r\n\r\n    event Deposit(address indexed user, uint256 indexed pid, uint256 amount);\r\n    event Withdraw(address indexed user, uint256 indexed pid, uint256 amount);\r\n    event EmergencyWithdraw(\r\n        address indexed user,\r\n        uint256 indexed pid,\r\n        uint256 amount\r\n    );\r\n\r\n    constructor(\r\n        IERC20 _DDT,\r\n        address _devaddr,\r\n        uint256 _PowerPerBlock,\r\n        uint256 _startBlock\r\n    ) {\r\n        DDT = _DDT;\r\n        devaddr = _devaddr;\r\n        PowerPerBlock = _PowerPerBlock;\r\n        startBlock = _startBlock;\r\n        \r\n        // staking pool\r\n        poolInfo.push(PoolInfo({\r\n            lpToken: DDT,\r\n            allocPoint: 1000,\r\n            lastRewardBlock: startBlock,\r\n            accPowerPerShare: 0\r\n        }));\r\n\r\n        totalAllocPoint = 1000;\r\n\r\n    }\r\n\r\n    function getPowerBalance(address account) public view returns(uint256) {\r\n        return powerBalance[account];\r\n    }\r\n\r\n    function addNFT(IERC721 _NFT, uint256 _power) public onlyOwner {\r\n        nftsInfo.push(\r\n            NFTsInfo({\r\n                NFT: _NFT,\r\n                power: _power\r\n            })\r\n        );\r\n    }\r\n\r\n    function claimNFTReward(uint256 level, uint256 _pid) public {\r\n        PoolInfo storage pool = poolInfo[_pid];\r\n        UserInfo storage user = userInfo[_pid][msg.sender];\r\n        uint256 accPowerPerShare = pool.accPowerPerShare;\r\n        uint256 lpSupply = pool.lpToken.balanceOf(address(this));\r\n        if (block.number > pool.lastRewardBlock && lpSupply != 0) {\r\n            uint256 multiplier = getMultiplier(pool.lastRewardBlock, block.number);\r\n            uint256 PowerReward = multiplier.mul(PowerPerBlock).mul(pool.allocPoint).div(totalAllocPoint);\r\n            accPowerPerShare = accPowerPerShare.add(PowerReward.mul(1e12).div(lpSupply));\r\n        }\r\n        uint256 pending = user.amount.mul(accPowerPerShare).div(1e12).sub(user.rewardDebt);\r\n        NFTsInfo storage nft = nftsInfo[level];\r\n        uint256 total = pending.add(powerBalance[msg.sender]);\r\n        if(total > nft.power){\r\n            if(_pid == 0){\r\n                leaveStaking(0);\r\n            }\r\n            if(_pid != 0){\r\n                withdraw(_pid,0);\r\n            }\r\n        }\r\n        require(nft.power < powerBalance[msg.sender], \"Power is not enough\");\r\n        powerBalance[msg.sender] = powerBalance[msg.sender].sub(nft.power);\r\n        nft.NFT.createNFT(msg.sender);\r\n    }\r\n\r\n    function updateMultiplier(uint256 multiplierNumber) public onlyOwner {\r\n        BONUS_MULTIPLIER = multiplierNumber;\r\n    }\r\n\r\n    function poolLength() external view returns (uint256) {\r\n        return poolInfo.length;\r\n    }\r\n\r\n    // Add a new lp to the pool. Can only be called by the owner.\r\n    // XXX DO NOT add the same LP token more than once. Rewards will be messed up if you do.\r\n    function add( uint256 _allocPoint, IERC20 _lpToken, bool _withUpdate ) public onlyOwner {\r\n        if (_withUpdate) {\r\n            massUpdatePools();\r\n        }\r\n        uint256 lastRewardBlock = block.number > startBlock ? block.number : startBlock;\r\n        totalAllocPoint = totalAllocPoint.add(_allocPoint);\r\n        poolInfo.push(\r\n            PoolInfo({\r\n                lpToken: _lpToken,\r\n                allocPoint: _allocPoint,\r\n                lastRewardBlock: lastRewardBlock,\r\n                accPowerPerShare: 0\r\n            })\r\n        );\r\n    }\r\n\r\n    // Update the given pool's Power allocation point. Can only be called by the owner.\r\n    function set( uint256 _pid, uint256 _allocPoint, bool _withUpdate) public onlyOwner {\r\n        if (_withUpdate) {\r\n            massUpdatePools();\r\n        }\r\n        totalAllocPoint = totalAllocPoint.sub(poolInfo[_pid].allocPoint).add(_allocPoint);\r\n        poolInfo[_pid].allocPoint = _allocPoint;\r\n    }\r\n\r\n    // Set the migrator contract. Can only be called by the owner.\r\n    function setMigrator(IMigratorChef _migrator) public onlyOwner {\r\n        migrator = _migrator;\r\n    }\r\n\r\n    // Migrate lp token to another lp contract. Can be called by anyone. We trust that migrator contract is good.\r\n    function migrate(uint256 _pid) public {\r\n        require(address(migrator) != address(0), \"migrate: no migrator\");\r\n        PoolInfo storage pool = poolInfo[_pid];\r\n        IERC20 lpToken = pool.lpToken;\r\n        uint256 bal = lpToken.balanceOf(address(this));\r\n        lpToken.safeApprove(address(migrator), bal);\r\n        IERC20 newLpToken = migrator.migrate(lpToken);\r\n        require(bal == newLpToken.balanceOf(address(this)), \"migrate: bad\");\r\n        pool.lpToken = newLpToken;\r\n    }\r\n\r\n    // Return reward multiplier over the given _from to _to block.\r\n    function getMultiplier(uint256 _from, uint256 _to) public view returns (uint256) {\r\n         return _to.sub(_from).mul(BONUS_MULTIPLIER);\r\n    }\r\n\r\n    // View function to see pending Powers on frontend.\r\n    function pendingPower(uint256 _pid, address _user) external view returns (uint256){\r\n        PoolInfo storage pool = poolInfo[_pid];\r\n        UserInfo storage user = userInfo[_pid][_user];\r\n        uint256 accPowerPerShare = pool.accPowerPerShare;\r\n        uint256 lpSupply = pool.lpToken.balanceOf(address(this));\r\n        if (block.number > pool.lastRewardBlock && lpSupply != 0) {\r\n            uint256 multiplier = getMultiplier(pool.lastRewardBlock, block.number);\r\n            uint256 PowerReward = multiplier.mul(PowerPerBlock).mul(pool.allocPoint).div(totalAllocPoint);\r\n            accPowerPerShare = accPowerPerShare.add(PowerReward.mul(1e12).div(lpSupply));\r\n        }\r\n        return user.amount.mul(accPowerPerShare).div(1e12).sub(user.rewardDebt);\r\n    }\r\n\r\n    // Update reward vairables for all pools. Be careful of gas spending!\r\n    function massUpdatePools() public {\r\n        uint256 length = poolInfo.length;\r\n        for (uint256 pid = 0; pid < length; ++pid) {\r\n            updatePool(pid);\r\n        }\r\n    }\r\n\r\n    // Update reward variables of the given pool to be up-to-date.\r\n    function updatePool(uint256 _pid) public {\r\n        PoolInfo storage pool = poolInfo[_pid];\r\n        if (block.number <= pool.lastRewardBlock) {\r\n            return;\r\n        }\r\n        uint256 lpSupply = pool.lpToken.balanceOf(address(this));\r\n        if (lpSupply <= 0) {\r\n            pool.lastRewardBlock = block.number;\r\n            return;\r\n        }\r\n        uint256 multiplier = getMultiplier(pool.lastRewardBlock, block.number);\r\n        uint256 PowerReward = multiplier.mul(PowerPerBlock).mul(pool.allocPoint).div(totalAllocPoint);\r\n        pool.accPowerPerShare = pool.accPowerPerShare.add(PowerReward.mul(1e12).div(lpSupply));\r\n        pool.lastRewardBlock = block.number;\r\n    }\r\n\r\n    // Deposit LP tokens to MasterChef for Power allocation.\r\n    function deposit(uint256 _pid, uint256 _amount) public {\r\n\r\n        require (_pid != 0, 'deposit Power by staking');\r\n\r\n        PoolInfo storage pool = poolInfo[_pid];\r\n        UserInfo storage user = userInfo[_pid][msg.sender];\r\n        updatePool(_pid);\r\n        if (user.amount > 0) {\r\n            uint256 pending = user.amount.mul(pool.accPowerPerShare).div(1e12).sub(user.rewardDebt);\r\n            if(pending > 0){\r\n                powerBalance[msg.sender] = powerBalance[msg.sender].add(pending);\r\n            }\r\n        }\r\n        pool.lpToken.safeTransferFrom(address(msg.sender), address(this), _amount);\r\n        user.amount = user.amount.add(_amount);\r\n        user.rewardDebt = user.amount.mul(pool.accPowerPerShare).div(1e12);\r\n        emit Deposit(msg.sender, _pid, _amount);\r\n    }\r\n\r\n    // Withdraw LP tokens from MasterChef.\r\n    function withdraw(uint256 _pid, uint256 _amount) public {\r\n\r\n        require (_pid != 0, 'withdraw Power by unstaking');\r\n\r\n        PoolInfo storage pool = poolInfo[_pid];\r\n        UserInfo storage user = userInfo[_pid][msg.sender];\r\n        require(user.amount >= _amount, \"withdraw: not good\");\r\n        updatePool(_pid);\r\n        uint256 pending = user.amount.mul(pool.accPowerPerShare).div(1e12).sub(user.rewardDebt);\r\n        if(pending > 0){\r\n            powerBalance[msg.sender] = powerBalance[msg.sender].add(pending);\r\n        }\r\n        user.amount = user.amount.sub(_amount);\r\n        user.rewardDebt = user.amount.mul(pool.accPowerPerShare).div(1e12);\r\n        pool.lpToken.safeTransfer(address(msg.sender), _amount);\r\n        emit Withdraw(msg.sender, _pid, _amount);\r\n    }\r\n\r\n        // Stake Power tokens to MasterChef\r\n    function enterStaking(uint256 _amount) public {\r\n        PoolInfo storage pool = poolInfo[0];\r\n        UserInfo storage user = userInfo[0][address(msg.sender)];\r\n        \r\n        updatePool(0);\r\n        if (user.amount > 0) {\r\n            uint256 pending = user.amount.mul(pool.accPowerPerShare).div(1e12).sub(user.rewardDebt);\r\n            if(pending > 0) {\r\n                powerBalance[address(msg.sender)] = powerBalance[address(msg.sender)].add(pending);\r\n            }\r\n        }\r\n        if(_amount > 0) {\r\n            pool.lpToken.safeTransferFrom(address(msg.sender), address(this), _amount);\r\n            user.amount = user.amount.add(_amount);\r\n        }\r\n        user.rewardDebt = user.amount.mul(pool.accPowerPerShare).div(1e12);\r\n        emit Deposit(msg.sender, 0, _amount);\r\n    }\r\n\r\n    // Withdraw Power tokens from STAKING.\r\n    function leaveStaking(uint256 _amount) public {\r\n        PoolInfo storage pool = poolInfo[0];\r\n        UserInfo storage user = userInfo[0][msg.sender];\r\n        require(user.amount >= _amount, \"withdraw: not good\");\r\n        updatePool(0);\r\n        uint256 pending = user.amount.mul(pool.accPowerPerShare).div(1e12).sub(user.rewardDebt);\r\n        if(pending > 0) {\r\n            powerBalance[msg.sender] = powerBalance[msg.sender].add(pending);\r\n        }\r\n        if(_amount > 0) {\r\n            user.amount = user.amount.sub(_amount);\r\n            pool.lpToken.safeTransfer(address(msg.sender), _amount);\r\n        }\r\n        user.rewardDebt = user.amount.mul(pool.accPowerPerShare).div(1e12);\r\n        emit Withdraw(msg.sender, 0, _amount);\r\n    }\r\n\r\n    \r\n\r\n    // Withdraw without caring about rewards. EMERGENCY ONLY.\r\n    function emergencyWithdraw(uint256 _pid) public {\r\n        PoolInfo storage pool = poolInfo[_pid];\r\n        UserInfo storage user = userInfo[_pid][msg.sender];\r\n        pool.lpToken.safeTransfer(address(msg.sender), user.amount);\r\n        emit EmergencyWithdraw(msg.sender, _pid, user.amount);\r\n        user.amount = 0;\r\n        user.rewardDebt = 0;\r\n    }\r\n    \r\n    function setDevAddress(address _devaddr) public onlyOwner {\r\n        devaddr = _devaddr;\r\n    }\r\n    function updatePowerPerBlock(uint256 newAmount) public onlyOwner {\r\n        PowerPerBlock = newAmount;\r\n    }\r\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"contracts/NFTMasterChef.sol": {
				"Address": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/NFTMasterChef.sol\":7813:16087  library Address {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/NFTMasterChef.sol\":7813:16087  library Address {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212201e92ff80c1bb0d01b705be89312dba7d676c3ac8b9a4628ce6571a07695da95664736f6c634300080f0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212201e92ff80c1bb0d01b705be89312dba7d676c3ac8b9a4628ce6571a07695da95664736f6c634300080f0033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x1E SWAP3 SELFDESTRUCT DUP1 0xC1 0xBB 0xD ADD 0xB7 SDIV 0xBE DUP10 BALANCE 0x2D 0xBA PUSH30 0x676C3AC8B9A4628CE6571A07695DA95664736F6C634300080F0033000000 ",
							"sourceMap": "7813:8274:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212201e92ff80c1bb0d01b705be89312dba7d676c3ac8b9a4628ce6571a07695da95664736f6c634300080f0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x1E SWAP3 SELFDESTRUCT DUP1 0xC1 0xBB 0xD ADD 0xB7 SDIV 0xBE DUP10 BALANCE 0x2D 0xBA PUSH30 0x676C3AC8B9A4628CE6571A07695DA95664736F6C634300080F0033000000 ",
							"sourceMap": "7813:8274:0:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"functionCall(address,bytes memory)": "infinite",
								"functionCall(address,bytes memory,string memory)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256,string memory)": "infinite",
								"functionDelegateCall(address,bytes memory)": "infinite",
								"functionDelegateCall(address,bytes memory,string memory)": "infinite",
								"functionStaticCall(address,bytes memory)": "infinite",
								"functionStaticCall(address,bytes memory,string memory)": "infinite",
								"isContract(address)": "infinite",
								"sendValue(address payable,uint256)": "infinite",
								"verifyCallResult(bool,bytes memory,string memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 7813,
									"end": 16087,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 7813,
									"end": 16087,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 7813,
									"end": 16087,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 7813,
									"end": 16087,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 7813,
									"end": 16087,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 7813,
									"end": 16087,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 7813,
									"end": 16087,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 7813,
									"end": 16087,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 7813,
									"end": 16087,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 7813,
									"end": 16087,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 7813,
									"end": 16087,
									"name": "BYTE",
									"source": 0
								},
								{
									"begin": 7813,
									"end": 16087,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 7813,
									"end": 16087,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 7813,
									"end": 16087,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 7813,
									"end": 16087,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 7813,
									"end": 16087,
									"name": "PUSH",
									"source": 0,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 7813,
									"end": 16087,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 7813,
									"end": 16087,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 7813,
									"end": 16087,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 7813,
									"end": 16087,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 7813,
									"end": 16087,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 7813,
									"end": 16087,
									"name": "PUSH",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 7813,
									"end": 16087,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 7813,
									"end": 16087,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 7813,
									"end": 16087,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 7813,
									"end": 16087,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 7813,
									"end": 16087,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 7813,
									"end": 16087,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 7813,
									"end": 16087,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 7813,
									"end": 16087,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 7813,
									"end": 16087,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 7813,
									"end": 16087,
									"name": "MSTORE8",
									"source": 0
								},
								{
									"begin": 7813,
									"end": 16087,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 7813,
									"end": 16087,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 7813,
									"end": 16087,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212201e92ff80c1bb0d01b705be89312dba7d676c3ac8b9a4628ce6571a07695da95664736f6c634300080f0033",
									".code": [
										{
											"begin": 7813,
											"end": 16087,
											"name": "PUSHDEPLOYADDRESS",
											"source": 0
										},
										{
											"begin": 7813,
											"end": 16087,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 7813,
											"end": 16087,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 7813,
											"end": 16087,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 7813,
											"end": 16087,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7813,
											"end": 16087,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7813,
											"end": 16087,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7813,
											"end": 16087,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7813,
											"end": 16087,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							},
							"sourceList": [
								"contracts/NFTMasterChef.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/NFTMasterChef.sol\":\"Address\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/NFTMasterChef.sol\":{\"keccak256\":\"0xcc7485cb48b1db2bf487e44fdfc5cc0444254e4c173c2632fa68c746198f3e96\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3b326ccae9da09650a79b0cc161ab6751fdc819a0317d13acc92660f44a89236\",\"dweb:/ipfs/QmbevPN3gohEgaRvabaxFXTLF6gDLWUG1Tmdj2TTEWTPqw\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"Context": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/NFTMasterChef.sol\":\"Context\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/NFTMasterChef.sol\":{\"keccak256\":\"0xcc7485cb48b1db2bf487e44fdfc5cc0444254e4c173c2632fa68c746198f3e96\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3b326ccae9da09650a79b0cc161ab6751fdc819a0317d13acc92660f44a89236\",\"dweb:/ipfs/QmbevPN3gohEgaRvabaxFXTLF6gDLWUG1Tmdj2TTEWTPqw\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "minter",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "Mint",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "mint",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"mint(address,uint256)": "40c10f19",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"minter\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Mint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/NFTMasterChef.sol\":\"IERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/NFTMasterChef.sol\":{\"keccak256\":\"0xcc7485cb48b1db2bf487e44fdfc5cc0444254e4c173c2632fa68c746198f3e96\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3b326ccae9da09650a79b0cc161ab6751fdc819a0317d13acc92660f44a89236\",\"dweb:/ipfs/QmbevPN3gohEgaRvabaxFXTLF6gDLWUG1Tmdj2TTEWTPqw\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC721": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								}
							],
							"name": "createNFT",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"createNFT(address)": "17e5883c"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"createNFT\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/NFTMasterChef.sol\":\"IERC721\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/NFTMasterChef.sol\":{\"keccak256\":\"0xcc7485cb48b1db2bf487e44fdfc5cc0444254e4c173c2632fa68c746198f3e96\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3b326ccae9da09650a79b0cc161ab6751fdc819a0317d13acc92660f44a89236\",\"dweb:/ipfs/QmbevPN3gohEgaRvabaxFXTLF6gDLWUG1Tmdj2TTEWTPqw\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IMigratorChef": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "contract IERC20",
									"name": "token",
									"type": "address"
								}
							],
							"name": "migrate",
							"outputs": [
								{
									"internalType": "contract IERC20",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"migrate(address)": "ce5494bb"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"migrate\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/NFTMasterChef.sol\":\"IMigratorChef\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/NFTMasterChef.sol\":{\"keccak256\":\"0xcc7485cb48b1db2bf487e44fdfc5cc0444254e4c173c2632fa68c746198f3e96\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3b326ccae9da09650a79b0cc161ab6751fdc819a0317d13acc92660f44a89236\",\"dweb:/ipfs/QmbevPN3gohEgaRvabaxFXTLF6gDLWUG1Tmdj2TTEWTPqw\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"NFTMasterChef": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "contract IERC20",
									"name": "_DDT",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_devaddr",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_PowerPerBlock",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_startBlock",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "pid",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "Deposit",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "pid",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "EmergencyWithdraw",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "pid",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "Withdraw",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "BONUS_MULTIPLIER",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "DDT",
							"outputs": [
								{
									"internalType": "contract IERC20",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "PowerPerBlock",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_allocPoint",
									"type": "uint256"
								},
								{
									"internalType": "contract IERC20",
									"name": "_lpToken",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "_withUpdate",
									"type": "bool"
								}
							],
							"name": "add",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "contract IERC721",
									"name": "_NFT",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_power",
									"type": "uint256"
								}
							],
							"name": "addNFT",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "level",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_pid",
									"type": "uint256"
								}
							],
							"name": "claimNFTReward",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_pid",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "deposit",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "devaddr",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_pid",
									"type": "uint256"
								}
							],
							"name": "emergencyWithdraw",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "enterStaking",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_from",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_to",
									"type": "uint256"
								}
							],
							"name": "getMultiplier",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "getPowerBalance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "leaveStaking",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "massUpdatePools",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_pid",
									"type": "uint256"
								}
							],
							"name": "migrate",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "migrator",
							"outputs": [
								{
									"internalType": "contract IMigratorChef",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "nftsInfo",
							"outputs": [
								{
									"internalType": "contract IERC721",
									"name": "NFT",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "power",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_pid",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "_user",
									"type": "address"
								}
							],
							"name": "pendingPower",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "poolInfo",
							"outputs": [
								{
									"internalType": "contract IERC20",
									"name": "lpToken",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allocPoint",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "lastRewardBlock",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "accPowerPerShare",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "poolLength",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "powerBalance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_pid",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_allocPoint",
									"type": "uint256"
								},
								{
									"internalType": "bool",
									"name": "_withUpdate",
									"type": "bool"
								}
							],
							"name": "set",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_devaddr",
									"type": "address"
								}
							],
							"name": "setDevAddress",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "contract IMigratorChef",
									"name": "_migrator",
									"type": "address"
								}
							],
							"name": "setMigrator",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "startBlock",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalAllocPoint",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "multiplierNumber",
									"type": "uint256"
								}
							],
							"name": "updateMultiplier",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_pid",
									"type": "uint256"
								}
							],
							"name": "updatePool",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "newAmount",
									"type": "uint256"
								}
							],
							"name": "updatePowerPerBlock",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "userInfo",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "rewardDebt",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_pid",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "withdraw",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/NFTMasterChef.sol\":22111:35086  contract NFTMasterChef is Ownable {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/NFTMasterChef.sol\":23824:23825  1 */\n  0x01\n    /* \"contracts/NFTMasterChef.sol\":23790:23825  uint256 public BONUS_MULTIPLIER = 1 */\n  0x05\n  sstore\n    /* \"contracts/NFTMasterChef.sol\":24267:24268  0 */\n  0x00\n    /* \"contracts/NFTMasterChef.sol\":24234:24268  uint256 public totalAllocPoint = 0 */\n  0x09\n  sstore\n    /* \"contracts/NFTMasterChef.sol\":24700:25218  constructor(... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"contracts/NFTMasterChef.sol\":19984:20016  _transferOwnership(_msgSender()) */\n  tag_7\n    /* \"contracts/NFTMasterChef.sol\":20003:20015  _msgSender() */\n  tag_8\n    /* \"contracts/NFTMasterChef.sol\":20003:20013  _msgSender */\n  shl(0x20, tag_9)\n    /* \"contracts/NFTMasterChef.sol\":20003:20015  _msgSender() */\n  0x20\n  shr\n  jump\t// in\ntag_8:\n    /* \"contracts/NFTMasterChef.sol\":19984:20002  _transferOwnership */\n  shl(0x20, tag_10)\n    /* \"contracts/NFTMasterChef.sol\":19984:20016  _transferOwnership(_msgSender()) */\n  0x20\n  shr\n  jump\t// in\ntag_7:\n    /* \"contracts/NFTMasterChef.sol\":24848:24852  _DDT */\n  dup4\n    /* \"contracts/NFTMasterChef.sol\":24842:24845  DDT */\n  0x02\n  0x00\n    /* \"contracts/NFTMasterChef.sol\":24842:24852  DDT = _DDT */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/NFTMasterChef.sol\":24873:24881  _devaddr */\n  dup3\n    /* \"contracts/NFTMasterChef.sol\":24863:24870  devaddr */\n  0x03\n  0x00\n    /* \"contracts/NFTMasterChef.sol\":24863:24881  devaddr = _devaddr */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/NFTMasterChef.sol\":24908:24922  _PowerPerBlock */\n  dup2\n    /* \"contracts/NFTMasterChef.sol\":24892:24905  PowerPerBlock */\n  0x04\n    /* \"contracts/NFTMasterChef.sol\":24892:24922  PowerPerBlock = _PowerPerBlock */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/NFTMasterChef.sol\":24946:24957  _startBlock */\n  dup1\n    /* \"contracts/NFTMasterChef.sol\":24933:24943  startBlock */\n  0x0a\n    /* \"contracts/NFTMasterChef.sol\":24933:24957  startBlock = _startBlock */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/NFTMasterChef.sol\":25003:25011  poolInfo */\n  0x07\n    /* \"contracts/NFTMasterChef.sol\":25017:25172  PoolInfo({... */\n  mload(0x40)\n  dup1\n  0x80\n  add\n  0x40\n  mstore\n  dup1\n    /* \"contracts/NFTMasterChef.sol\":25050:25053  DDT */\n  0x02\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"contracts/NFTMasterChef.sol\":25017:25172  PoolInfo({... */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n    /* \"contracts/NFTMasterChef.sol\":25080:25084  1000 */\n  0x03e8\n    /* \"contracts/NFTMasterChef.sol\":25017:25172  PoolInfo({... */\n  dup2\n  mstore\n  0x20\n  add\n    /* \"contracts/NFTMasterChef.sol\":25116:25126  startBlock */\n  sload(0x0a)\n    /* \"contracts/NFTMasterChef.sol\":25017:25172  PoolInfo({... */\n  dup2\n  mstore\n  0x20\n  add\n    /* \"contracts/NFTMasterChef.sol\":25159:25160  0 */\n  0x00\n    /* \"contracts/NFTMasterChef.sol\":25017:25172  PoolInfo({... */\n  dup2\n  mstore\n  pop\n    /* \"contracts/NFTMasterChef.sol\":25003:25173  poolInfo.push(PoolInfo({... */\n  swap1\n  dup1\n  0x01\n  dup2\n  sload\n  add\n  dup1\n  dup3\n  sstore\n  dup1\n  swap2\n  pop\n  pop\n  0x01\n  swap1\n  sub\n  swap1\n  0x00\n  mstore\n  keccak256(0x00, 0x20)\n  swap1\n  0x04\n  mul\n  add\n  0x00\n  swap1\n  swap2\n  swap1\n  swap2\n  swap1\n  swap2\n  pop\n  0x00\n  dup3\n  add\n  mload\n  dup2\n  0x00\n  add\n  exp(0x0100, 0x00)\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n  0x20\n  dup3\n  add\n  mload\n  dup2\n  0x01\n  add\n  sstore\n  0x40\n  dup3\n  add\n  mload\n  dup2\n  0x02\n  add\n  sstore\n  0x60\n  dup3\n  add\n  mload\n  dup2\n  0x03\n  add\n  sstore\n  pop\n  pop\n    /* \"contracts/NFTMasterChef.sol\":25204:25208  1000 */\n  0x03e8\n    /* \"contracts/NFTMasterChef.sol\":25186:25201  totalAllocPoint */\n  0x09\n    /* \"contracts/NFTMasterChef.sol\":25186:25208  totalAllocPoint = 1000 */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/NFTMasterChef.sol\":24700:25218  constructor(... */\n  pop\n  pop\n  pop\n  pop\n    /* \"contracts/NFTMasterChef.sol\":22111:35086  contract NFTMasterChef is Ownable {... */\n  jump(tag_13)\n    /* \"contracts/NFTMasterChef.sol\":19479:19577  function _msgSender() internal view virtual returns (address) {... */\ntag_9:\n    /* \"contracts/NFTMasterChef.sol\":19532:19539  address */\n  0x00\n    /* \"contracts/NFTMasterChef.sol\":19559:19569  msg.sender */\n  caller\n    /* \"contracts/NFTMasterChef.sol\":19552:19569  return msg.sender */\n  swap1\n  pop\n    /* \"contracts/NFTMasterChef.sol\":19479:19577  function _msgSender() internal view virtual returns (address) {... */\n  swap1\n  jump\t// out\n    /* \"contracts/NFTMasterChef.sol\":21375:21566  function _transferOwnership(address newOwner) internal virtual {... */\ntag_10:\n    /* \"contracts/NFTMasterChef.sol\":21449:21465  address oldOwner */\n  0x00\n    /* \"contracts/NFTMasterChef.sol\":21468:21474  _owner */\n  dup1\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"contracts/NFTMasterChef.sol\":21449:21474  address oldOwner = _owner */\n  swap1\n  pop\n    /* \"contracts/NFTMasterChef.sol\":21494:21502  newOwner */\n  dup2\n    /* \"contracts/NFTMasterChef.sol\":21485:21491  _owner */\n  0x00\n  dup1\n    /* \"contracts/NFTMasterChef.sol\":21485:21502  _owner = newOwner */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/NFTMasterChef.sol\":21549:21557  newOwner */\n  dup2\n    /* \"contracts/NFTMasterChef.sol\":21518:21558  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"contracts/NFTMasterChef.sol\":21539:21547  oldOwner */\n  dup2\n    /* \"contracts/NFTMasterChef.sol\":21518:21558  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"contracts/NFTMasterChef.sol\":21438:21566  {... */\n  pop\n    /* \"contracts/NFTMasterChef.sol\":21375:21566  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":88:205   */\ntag_17:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  dup1\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":334:460   */\ntag_19:\n    /* \"#utility.yul\":371:378   */\n  0x00\n    /* \"#utility.yul\":411:453   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":404:409   */\n  dup3\n    /* \"#utility.yul\":400:454   */\n  and\n    /* \"#utility.yul\":389:454   */\n  swap1\n  pop\n    /* \"#utility.yul\":334:460   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":466:562   */\ntag_20:\n    /* \"#utility.yul\":503:510   */\n  0x00\n    /* \"#utility.yul\":532:556   */\n  tag_35\n    /* \"#utility.yul\":550:555   */\n  dup3\n    /* \"#utility.yul\":532:556   */\n  tag_19\n  jump\t// in\ntag_35:\n    /* \"#utility.yul\":521:556   */\n  swap1\n  pop\n    /* \"#utility.yul\":466:562   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":568:678   */\ntag_21:\n    /* \"#utility.yul\":619:626   */\n  0x00\n    /* \"#utility.yul\":648:672   */\n  tag_37\n    /* \"#utility.yul\":666:671   */\n  dup3\n    /* \"#utility.yul\":648:672   */\n  tag_20\n  jump\t// in\ntag_37:\n    /* \"#utility.yul\":637:672   */\n  swap1\n  pop\n    /* \"#utility.yul\":568:678   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":684:834   */\ntag_22:\n    /* \"#utility.yul\":771:809   */\n  tag_39\n    /* \"#utility.yul\":803:808   */\n  dup2\n    /* \"#utility.yul\":771:809   */\n  tag_21\n  jump\t// in\ntag_39:\n    /* \"#utility.yul\":764:769   */\n  dup2\n    /* \"#utility.yul\":761:810   */\n  eq\n    /* \"#utility.yul\":751:828   */\n  tag_40\n  jumpi\n    /* \"#utility.yul\":824:825   */\n  0x00\n    /* \"#utility.yul\":821:822   */\n  dup1\n    /* \"#utility.yul\":814:826   */\n  revert\n    /* \"#utility.yul\":751:828   */\ntag_40:\n    /* \"#utility.yul\":684:834   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":840:1011   */\ntag_23:\n    /* \"#utility.yul\":911:916   */\n  0x00\n    /* \"#utility.yul\":942:948   */\n  dup2\n    /* \"#utility.yul\":936:949   */\n  mload\n    /* \"#utility.yul\":927:949   */\n  swap1\n  pop\n    /* \"#utility.yul\":958:1005   */\n  tag_42\n    /* \"#utility.yul\":999:1004   */\n  dup2\n    /* \"#utility.yul\":958:1005   */\n  tag_22\n  jump\t// in\ntag_42:\n    /* \"#utility.yul\":840:1011   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1017:1139   */\ntag_24:\n    /* \"#utility.yul\":1090:1114   */\n  tag_44\n    /* \"#utility.yul\":1108:1113   */\n  dup2\n    /* \"#utility.yul\":1090:1114   */\n  tag_20\n  jump\t// in\ntag_44:\n    /* \"#utility.yul\":1083:1088   */\n  dup2\n    /* \"#utility.yul\":1080:1115   */\n  eq\n    /* \"#utility.yul\":1070:1133   */\n  tag_45\n  jumpi\n    /* \"#utility.yul\":1129:1130   */\n  0x00\n    /* \"#utility.yul\":1126:1127   */\n  dup1\n    /* \"#utility.yul\":1119:1131   */\n  revert\n    /* \"#utility.yul\":1070:1133   */\ntag_45:\n    /* \"#utility.yul\":1017:1139   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1145:1288   */\ntag_25:\n    /* \"#utility.yul\":1202:1207   */\n  0x00\n    /* \"#utility.yul\":1233:1239   */\n  dup2\n    /* \"#utility.yul\":1227:1240   */\n  mload\n    /* \"#utility.yul\":1218:1240   */\n  swap1\n  pop\n    /* \"#utility.yul\":1249:1282   */\n  tag_47\n    /* \"#utility.yul\":1276:1281   */\n  dup2\n    /* \"#utility.yul\":1249:1282   */\n  tag_24\n  jump\t// in\ntag_47:\n    /* \"#utility.yul\":1145:1288   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1294:1371   */\ntag_26:\n    /* \"#utility.yul\":1331:1338   */\n  0x00\n    /* \"#utility.yul\":1360:1365   */\n  dup2\n    /* \"#utility.yul\":1349:1365   */\n  swap1\n  pop\n    /* \"#utility.yul\":1294:1371   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1377:1499   */\ntag_27:\n    /* \"#utility.yul\":1450:1474   */\n  tag_50\n    /* \"#utility.yul\":1468:1473   */\n  dup2\n    /* \"#utility.yul\":1450:1474   */\n  tag_26\n  jump\t// in\ntag_50:\n    /* \"#utility.yul\":1443:1448   */\n  dup2\n    /* \"#utility.yul\":1440:1475   */\n  eq\n    /* \"#utility.yul\":1430:1493   */\n  tag_51\n  jumpi\n    /* \"#utility.yul\":1489:1490   */\n  0x00\n    /* \"#utility.yul\":1486:1487   */\n  dup1\n    /* \"#utility.yul\":1479:1491   */\n  revert\n    /* \"#utility.yul\":1430:1493   */\ntag_51:\n    /* \"#utility.yul\":1377:1499   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1505:1648   */\ntag_28:\n    /* \"#utility.yul\":1562:1567   */\n  0x00\n    /* \"#utility.yul\":1593:1599   */\n  dup2\n    /* \"#utility.yul\":1587:1600   */\n  mload\n    /* \"#utility.yul\":1578:1600   */\n  swap1\n  pop\n    /* \"#utility.yul\":1609:1642   */\n  tag_53\n    /* \"#utility.yul\":1636:1641   */\n  dup2\n    /* \"#utility.yul\":1609:1642   */\n  tag_27\n  jump\t// in\ntag_53:\n    /* \"#utility.yul\":1505:1648   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1654:2502   */\ntag_3:\n    /* \"#utility.yul\":1765:1771   */\n  0x00\n    /* \"#utility.yul\":1773:1779   */\n  dup1\n    /* \"#utility.yul\":1781:1787   */\n  0x00\n    /* \"#utility.yul\":1789:1795   */\n  dup1\n    /* \"#utility.yul\":1838:1841   */\n  0x80\n    /* \"#utility.yul\":1826:1835   */\n  dup6\n    /* \"#utility.yul\":1817:1824   */\n  dup8\n    /* \"#utility.yul\":1813:1836   */\n  sub\n    /* \"#utility.yul\":1809:1842   */\n  slt\n    /* \"#utility.yul\":1806:1926   */\n  iszero\n  tag_55\n  jumpi\n    /* \"#utility.yul\":1845:1924   */\n  tag_56\n  tag_17\n  jump\t// in\ntag_56:\n    /* \"#utility.yul\":1806:1926   */\ntag_55:\n    /* \"#utility.yul\":1965:1966   */\n  0x00\n    /* \"#utility.yul\":1990:2068   */\n  tag_57\n    /* \"#utility.yul\":2060:2067   */\n  dup8\n    /* \"#utility.yul\":2051:2057   */\n  dup3\n    /* \"#utility.yul\":2040:2049   */\n  dup9\n    /* \"#utility.yul\":2036:2058   */\n  add\n    /* \"#utility.yul\":1990:2068   */\n  tag_23\n  jump\t// in\ntag_57:\n    /* \"#utility.yul\":1980:2068   */\n  swap5\n  pop\n    /* \"#utility.yul\":1936:2078   */\n  pop\n    /* \"#utility.yul\":2117:2119   */\n  0x20\n    /* \"#utility.yul\":2143:2207   */\n  tag_58\n    /* \"#utility.yul\":2199:2206   */\n  dup8\n    /* \"#utility.yul\":2190:2196   */\n  dup3\n    /* \"#utility.yul\":2179:2188   */\n  dup9\n    /* \"#utility.yul\":2175:2197   */\n  add\n    /* \"#utility.yul\":2143:2207   */\n  tag_25\n  jump\t// in\ntag_58:\n    /* \"#utility.yul\":2133:2207   */\n  swap4\n  pop\n    /* \"#utility.yul\":2088:2217   */\n  pop\n    /* \"#utility.yul\":2256:2258   */\n  0x40\n    /* \"#utility.yul\":2282:2346   */\n  tag_59\n    /* \"#utility.yul\":2338:2345   */\n  dup8\n    /* \"#utility.yul\":2329:2335   */\n  dup3\n    /* \"#utility.yul\":2318:2327   */\n  dup9\n    /* \"#utility.yul\":2314:2336   */\n  add\n    /* \"#utility.yul\":2282:2346   */\n  tag_28\n  jump\t// in\ntag_59:\n    /* \"#utility.yul\":2272:2346   */\n  swap3\n  pop\n    /* \"#utility.yul\":2227:2356   */\n  pop\n    /* \"#utility.yul\":2395:2397   */\n  0x60\n    /* \"#utility.yul\":2421:2485   */\n  tag_60\n    /* \"#utility.yul\":2477:2484   */\n  dup8\n    /* \"#utility.yul\":2468:2474   */\n  dup3\n    /* \"#utility.yul\":2457:2466   */\n  dup9\n    /* \"#utility.yul\":2453:2475   */\n  add\n    /* \"#utility.yul\":2421:2485   */\n  tag_28\n  jump\t// in\ntag_60:\n    /* \"#utility.yul\":2411:2485   */\n  swap2\n  pop\n    /* \"#utility.yul\":2366:2495   */\n  pop\n    /* \"#utility.yul\":1654:2502   */\n  swap3\n  swap6\n  swap2\n  swap5\n  pop\n  swap3\n  pop\n  jump\t// out\n    /* \"contracts/NFTMasterChef.sol\":22111:35086  contract NFTMasterChef is Ownable {... */\ntag_13:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/NFTMasterChef.sol\":22111:35086  contract NFTMasterChef is Ownable {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x61c1b724\n      gt\n      tag_37\n      jumpi\n      dup1\n      0x8dbb1e3a\n      gt\n      tag_38\n      jumpi\n      dup1\n      0xd209db8c\n      gt\n      tag_39\n      jumpi\n      dup1\n      0xd209db8c\n      eq\n      tag_32\n      jumpi\n      dup1\n      0xd49e77cd\n      eq\n      tag_33\n      jumpi\n      dup1\n      0xe2bbb158\n      eq\n      tag_34\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_35\n      jumpi\n      dup1\n      0xf3239ab5\n      eq\n      tag_36\n      jumpi\n      jump(tag_2)\n    tag_39:\n      dup1\n      0x8dbb1e3a\n      eq\n      tag_28\n      jumpi\n      dup1\n      0x93f1a40b\n      eq\n      tag_29\n      jumpi\n      dup1\n      0xcb3cba55\n      eq\n      tag_30\n      jumpi\n      dup1\n      0xd0d41fe1\n      eq\n      tag_31\n      jumpi\n      jump(tag_2)\n    tag_38:\n      dup1\n      0x7cd07e47\n      gt\n      tag_40\n      jumpi\n      dup1\n      0x7cd07e47\n      eq\n      tag_24\n      jumpi\n      dup1\n      0x8aa28550\n      eq\n      tag_25\n      jumpi\n      dup1\n      0x8c51793b\n      eq\n      tag_26\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_27\n      jumpi\n      jump(tag_2)\n    tag_40:\n      dup1\n      0x61c1b724\n      eq\n      tag_20\n      jumpi\n      dup1\n      0x630b5ba1\n      eq\n      tag_21\n      jumpi\n      dup1\n      0x64482f79\n      eq\n      tag_22\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_23\n      jumpi\n      jump(tag_2)\n    tag_37:\n      dup1\n      0x41441d3b\n      gt\n      tag_41\n      jumpi\n      dup1\n      0x4ea2813c\n      gt\n      tag_42\n      jumpi\n      dup1\n      0x4ea2813c\n      eq\n      tag_15\n      jumpi\n      dup1\n      0x51eb05a6\n      eq\n      tag_16\n      jumpi\n      dup1\n      0x5312ea8e\n      eq\n      tag_17\n      jumpi\n      dup1\n      0x5990c569\n      eq\n      tag_18\n      jumpi\n      dup1\n      0x5ffe6146\n      eq\n      tag_19\n      jumpi\n      jump(tag_2)\n    tag_42:\n      dup1\n      0x41441d3b\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x441a3e70\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x454b0608\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x48cd4cb1\n      eq\n      tag_14\n      jumpi\n      jump(tag_2)\n    tag_41:\n      dup1\n      0x1d5fbd87\n      gt\n      tag_43\n      jumpi\n      dup1\n      0x1d5fbd87\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x1eaaa045\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x23cf3118\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x3df7aff3\n      eq\n      tag_10\n      jumpi\n      jump(tag_2)\n    tag_43:\n      dup1\n      0x081e3eda\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x1058d281\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x1526fe27\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x17caf6f1\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/NFTMasterChef.sol\":26973:27068  function poolLength() external view returns (uint256) {... */\n    tag_3:\n      tag_44\n      tag_45\n      jump\t// in\n    tag_44:\n      mload(0x40)\n      tag_46\n      swap2\n      swap1\n      tag_47\n      jump\t// in\n    tag_46:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/NFTMasterChef.sol\":33679:34426  function leaveStaking(uint256 _amount) public {... */\n    tag_4:\n      tag_48\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_49\n      swap2\n      swap1\n      tag_50\n      jump\t// in\n    tag_49:\n      tag_51\n      jump\t// in\n    tag_48:\n      stop\n        /* \"contracts/NFTMasterChef.sol\":23993:24019  PoolInfo[] public poolInfo */\n    tag_5:\n      tag_52\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_53\n      swap2\n      swap1\n      tag_50\n      jump\t// in\n    tag_53:\n      tag_54\n      jump\t// in\n    tag_52:\n      mload(0x40)\n      tag_55\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_56\n      jump\t// in\n    tag_55:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/NFTMasterChef.sol\":24234:24268  uint256 public totalAllocPoint = 0 */\n    tag_6:\n      tag_57\n      tag_58\n      jump\t// in\n    tag_57:\n      mload(0x40)\n      tag_59\n      swap2\n      swap1\n      tag_47\n      jump\t// in\n    tag_59:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/NFTMasterChef.sol\":25566:26834  function claimNFTReward(uint256 level, uint256 _pid) public {... */\n    tag_7:\n      tag_60\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_61\n      swap2\n      swap1\n      tag_62\n      jump\t// in\n    tag_61:\n      tag_63\n      jump\t// in\n    tag_60:\n      stop\n        /* \"contracts/NFTMasterChef.sol\":27237:27797  function add( uint256 _allocPoint, IERC20 _lpToken, bool _withUpdate ) public onlyOwner {... */\n    tag_8:\n      tag_64\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_65\n      swap2\n      swap1\n      tag_66\n      jump\t// in\n    tag_65:\n      tag_67\n      jump\t// in\n    tag_64:\n      stop\n        /* \"contracts/NFTMasterChef.sol\":28275:28377  function setMigrator(IMigratorChef _migrator) public onlyOwner {... */\n    tag_9:\n      tag_68\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_69\n      swap2\n      swap1\n      tag_70\n      jump\t// in\n    tag_69:\n      tag_71\n      jump\t// in\n    tag_68:\n      stop\n        /* \"contracts/NFTMasterChef.sol\":34974:35083  function updatePowerPerBlock(uint256 newAmount) public onlyOwner {... */\n    tag_10:\n      tag_72\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_73\n      swap2\n      swap1\n      tag_50\n      jump\t// in\n    tag_73:\n      tag_74\n      jump\t// in\n    tag_72:\n      stop\n        /* \"contracts/NFTMasterChef.sol\":32830:33627  function enterStaking(uint256 _amount) public {... */\n    tag_11:\n      tag_75\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_76\n      swap2\n      swap1\n      tag_50\n      jump\t// in\n    tag_76:\n      tag_77\n      jump\t// in\n    tag_75:\n      stop\n        /* \"contracts/NFTMasterChef.sol\":31990:32777  function withdraw(uint256 _pid, uint256 _amount) public {... */\n    tag_12:\n      tag_78\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_79\n      swap2\n      swap1\n      tag_62\n      jump\t// in\n    tag_79:\n      tag_80\n      jump\t// in\n    tag_78:\n      stop\n        /* \"contracts/NFTMasterChef.sol\":28500:28991  function migrate(uint256 _pid) public {... */\n    tag_13:\n      tag_81\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_82\n      swap2\n      swap1\n      tag_50\n      jump\t// in\n    tag_82:\n      tag_83\n      jump\t// in\n    tag_81:\n      stop\n        /* \"contracts/NFTMasterChef.sol\":24326:24351  uint256 public startBlock */\n    tag_14:\n      tag_84\n      tag_85\n      jump\t// in\n    tag_84:\n      mload(0x40)\n      tag_86\n      swap2\n      swap1\n      tag_47\n      jump\t// in\n    tag_86:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/NFTMasterChef.sol\":25352:25558  function addNFT(IERC721 _NFT, uint256 _power) public onlyOwner {... */\n    tag_15:\n      tag_87\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_88\n      swap2\n      swap1\n      tag_89\n      jump\t// in\n    tag_88:\n      tag_90\n      jump\t// in\n    tag_87:\n      stop\n        /* \"contracts/NFTMasterChef.sol\":30382:31072  function updatePool(uint256 _pid) public {... */\n    tag_16:\n      tag_91\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_92\n      swap2\n      swap1\n      tag_50\n      jump\t// in\n    tag_92:\n      tag_93\n      jump\t// in\n    tag_91:\n      stop\n        /* \"contracts/NFTMasterChef.sol\":34505:34861  function emergencyWithdraw(uint256 _pid) public {... */\n    tag_17:\n      tag_94\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_95\n      swap2\n      swap1\n      tag_50\n      jump\t// in\n    tag_95:\n      tag_96\n      jump\t// in\n    tag_94:\n      stop\n        /* \"contracts/NFTMasterChef.sol\":23707:23735  uint256 public PowerPerBlock */\n    tag_18:\n      tag_97\n      tag_98\n      jump\t// in\n    tag_97:\n      mload(0x40)\n      tag_99\n      swap2\n      swap1\n      tag_47\n      jump\t// in\n    tag_99:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/NFTMasterChef.sol\":26842:26965  function updateMultiplier(uint256 multiplierNumber) public onlyOwner {... */\n    tag_19:\n      tag_100\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_101\n      swap2\n      swap1\n      tag_50\n      jump\t// in\n    tag_101:\n      tag_102\n      jump\t// in\n    tag_100:\n      stop\n        /* \"contracts/NFTMasterChef.sol\":23533:23559  NFTsInfo[] public nftsInfo */\n    tag_20:\n      tag_103\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_104\n      swap2\n      swap1\n      tag_50\n      jump\t// in\n    tag_104:\n      tag_105\n      jump\t// in\n    tag_103:\n      mload(0x40)\n      tag_106\n      swap3\n      swap2\n      swap1\n      tag_107\n      jump\t// in\n    tag_106:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/NFTMasterChef.sol\":30126:30306  function massUpdatePools() public {... */\n    tag_21:\n      tag_108\n      tag_109\n      jump\t// in\n    tag_108:\n      stop\n        /* \"contracts/NFTMasterChef.sol\":27894:28199  function set( uint256 _pid, uint256 _allocPoint, bool _withUpdate) public onlyOwner {... */\n    tag_22:\n      tag_110\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_111\n      swap2\n      swap1\n      tag_112\n      jump\t// in\n    tag_111:\n      tag_113\n      jump\t// in\n    tag_110:\n      stop\n        /* \"contracts/NFTMasterChef.sol\":20756:20859  function renounceOwnership() public virtual onlyOwner {... */\n    tag_23:\n      tag_114\n      tag_115\n      jump\t// in\n    tag_114:\n      stop\n        /* \"contracts/NFTMasterChef.sol\":23930:23959  IMigratorChef public migrator */\n    tag_24:\n      tag_116\n      tag_117\n      jump\t// in\n    tag_116:\n      mload(0x40)\n      tag_118\n      swap2\n      swap1\n      tag_119\n      jump\t// in\n    tag_118:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/NFTMasterChef.sol\":23790:23825  uint256 public BONUS_MULTIPLIER = 1 */\n    tag_25:\n      tag_120\n      tag_121\n      jump\t// in\n    tag_120:\n      mload(0x40)\n      tag_122\n      swap2\n      swap1\n      tag_47\n      jump\t// in\n    tag_122:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/NFTMasterChef.sol\":25226:25344  function getPowerBalance(address account) public view returns(uint256) {... */\n    tag_26:\n      tag_123\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_124\n      swap2\n      swap1\n      tag_125\n      jump\t// in\n    tag_124:\n      tag_126\n      jump\t// in\n    tag_123:\n      mload(0x40)\n      tag_127\n      swap2\n      swap1\n      tag_47\n      jump\t// in\n    tag_127:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/NFTMasterChef.sol\":20105:20192  function owner() public view virtual returns (address) {... */\n    tag_27:\n      tag_128\n      tag_129\n      jump\t// in\n    tag_128:\n      mload(0x40)\n      tag_130\n      swap2\n      swap1\n      tag_131\n      jump\t// in\n    tag_130:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/NFTMasterChef.sol\":29067:29211  function getMultiplier(uint256 _from, uint256 _to) public view returns (uint256) {... */\n    tag_28:\n      tag_132\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_133\n      swap2\n      swap1\n      tag_62\n      jump\t// in\n    tag_133:\n      tag_134\n      jump\t// in\n    tag_132:\n      mload(0x40)\n      tag_135\n      swap2\n      swap1\n      tag_47\n      jump\t// in\n    tag_135:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/NFTMasterChef.sol\":24075:24139  mapping(uint256 => mapping(address => UserInfo)) public userInfo */\n    tag_29:\n      tag_136\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_137\n      swap2\n      swap1\n      tag_138\n      jump\t// in\n    tag_137:\n      tag_139\n      jump\t// in\n    tag_136:\n      mload(0x40)\n      tag_140\n      swap3\n      swap2\n      swap1\n      tag_141\n      jump\t// in\n    tag_140:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/NFTMasterChef.sol\":23593:23610  IERC20 public DDT */\n    tag_30:\n      tag_142\n      tag_143\n      jump\t// in\n    tag_142:\n      mload(0x40)\n      tag_144\n      swap2\n      swap1\n      tag_145\n      jump\t// in\n    tag_144:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/NFTMasterChef.sol\":34873:34968  function setDevAddress(address _devaddr) public onlyOwner {... */\n    tag_31:\n      tag_146\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_147\n      swap2\n      swap1\n      tag_125\n      jump\t// in\n    tag_147:\n      tag_148\n      jump\t// in\n    tag_146:\n      stop\n        /* \"contracts/NFTMasterChef.sol\":24360:24407  mapping(address => uint256) public powerBalance */\n    tag_32:\n      tag_149\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_150\n      swap2\n      swap1\n      tag_125\n      jump\t// in\n    tag_150:\n      tag_151\n      jump\t// in\n    tag_149:\n      mload(0x40)\n      tag_152\n      swap2\n      swap1\n      tag_47\n      jump\t// in\n    tag_152:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/NFTMasterChef.sol\":23638:23660  address public devaddr */\n    tag_33:\n      tag_153\n      tag_154\n      jump\t// in\n    tag_153:\n      mload(0x40)\n      tag_155\n      swap2\n      swap1\n      tag_131\n      jump\t// in\n    tag_155:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/NFTMasterChef.sol\":31142:31938  function deposit(uint256 _pid, uint256 _amount) public {... */\n    tag_34:\n      tag_156\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_157\n      swap2\n      swap1\n      tag_62\n      jump\t// in\n    tag_157:\n      tag_158\n      jump\t// in\n    tag_156:\n      stop\n        /* \"contracts/NFTMasterChef.sol\":21014:21215  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_35:\n      tag_159\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_160\n      swap2\n      swap1\n      tag_125\n      jump\t// in\n    tag_160:\n      tag_161\n      jump\t// in\n    tag_159:\n      stop\n        /* \"contracts/NFTMasterChef.sol\":29276:30043  function pendingPower(uint256 _pid, address _user) external view returns (uint256){... */\n    tag_36:\n      tag_162\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_163\n      swap2\n      swap1\n      tag_138\n      jump\t// in\n    tag_163:\n      tag_164\n      jump\t// in\n    tag_162:\n      mload(0x40)\n      tag_165\n      swap2\n      swap1\n      tag_47\n      jump\t// in\n    tag_165:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/NFTMasterChef.sol\":26973:27068  function poolLength() external view returns (uint256) {... */\n    tag_45:\n        /* \"contracts/NFTMasterChef.sol\":27018:27025  uint256 */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":27045:27053  poolInfo */\n      0x07\n        /* \"contracts/NFTMasterChef.sol\":27045:27060  poolInfo.length */\n      dup1\n      sload\n      swap1\n      pop\n        /* \"contracts/NFTMasterChef.sol\":27038:27060  return poolInfo.length */\n      swap1\n      pop\n        /* \"contracts/NFTMasterChef.sol\":26973:27068  function poolLength() external view returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/NFTMasterChef.sol\":33679:34426  function leaveStaking(uint256 _amount) public {... */\n    tag_51:\n        /* \"contracts/NFTMasterChef.sol\":33736:33757  PoolInfo storage pool */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":33760:33768  poolInfo */\n      0x07\n        /* \"contracts/NFTMasterChef.sol\":33769:33770  0 */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":33760:33771  poolInfo[0] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_168\n      jumpi\n      tag_169\n      tag_170\n      jump\t// in\n    tag_169:\n    tag_168:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x04\n      mul\n      add\n        /* \"contracts/NFTMasterChef.sol\":33736:33771  PoolInfo storage pool = poolInfo[0] */\n      swap1\n      pop\n        /* \"contracts/NFTMasterChef.sol\":33782:33803  UserInfo storage user */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":33806:33814  userInfo */\n      0x08\n        /* \"contracts/NFTMasterChef.sol\":33806:33817  userInfo[0] */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":33815:33816  0 */\n      dup1\n        /* \"contracts/NFTMasterChef.sol\":33806:33817  userInfo[0] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/NFTMasterChef.sol\":33806:33829  userInfo[0][msg.sender] */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":33818:33828  msg.sender */\n      caller\n        /* \"contracts/NFTMasterChef.sol\":33806:33829  userInfo[0][msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/NFTMasterChef.sol\":33782:33829  UserInfo storage user = userInfo[0][msg.sender] */\n      swap1\n      pop\n        /* \"contracts/NFTMasterChef.sol\":33863:33870  _amount */\n      dup3\n        /* \"contracts/NFTMasterChef.sol\":33848:33852  user */\n      dup2\n        /* \"contracts/NFTMasterChef.sol\":33848:33859  user.amount */\n      0x00\n      add\n      sload\n        /* \"contracts/NFTMasterChef.sol\":33848:33870  user.amount >= _amount */\n      lt\n      iszero\n        /* \"contracts/NFTMasterChef.sol\":33840:33893  require(user.amount >= _amount, \"withdraw: not good\") */\n      tag_172\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_173\n      swap1\n      tag_174\n      jump\t// in\n    tag_173:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_172:\n        /* \"contracts/NFTMasterChef.sol\":33904:33917  updatePool(0) */\n      tag_175\n        /* \"contracts/NFTMasterChef.sol\":33915:33916  0 */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":33904:33914  updatePool */\n      tag_93\n        /* \"contracts/NFTMasterChef.sol\":33904:33917  updatePool(0) */\n      jump\t// in\n    tag_175:\n        /* \"contracts/NFTMasterChef.sol\":33928:33943  uint256 pending */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":33946:34015  user.amount.mul(pool.accPowerPerShare).div(1e12).sub(user.rewardDebt) */\n      tag_176\n        /* \"contracts/NFTMasterChef.sol\":33999:34003  user */\n      dup3\n        /* \"contracts/NFTMasterChef.sol\":33999:34014  user.rewardDebt */\n      0x01\n      add\n      sload\n        /* \"contracts/NFTMasterChef.sol\":33946:33994  user.amount.mul(pool.accPowerPerShare).div(1e12) */\n      tag_177\n        /* \"contracts/NFTMasterChef.sol\":33989:33993  1e12 */\n      0xe8d4a51000\n        /* \"contracts/NFTMasterChef.sol\":33946:33984  user.amount.mul(pool.accPowerPerShare) */\n      tag_178\n        /* \"contracts/NFTMasterChef.sol\":33962:33966  pool */\n      dup8\n        /* \"contracts/NFTMasterChef.sol\":33962:33983  pool.accPowerPerShare */\n      0x03\n      add\n      sload\n        /* \"contracts/NFTMasterChef.sol\":33946:33950  user */\n      dup8\n        /* \"contracts/NFTMasterChef.sol\":33946:33957  user.amount */\n      0x00\n      add\n      sload\n        /* \"contracts/NFTMasterChef.sol\":33946:33961  user.amount.mul */\n      tag_179\n      swap1\n        /* \"contracts/NFTMasterChef.sol\":33946:33984  user.amount.mul(pool.accPowerPerShare) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_178:\n        /* \"contracts/NFTMasterChef.sol\":33946:33988  user.amount.mul(pool.accPowerPerShare).div */\n      tag_180\n      swap1\n        /* \"contracts/NFTMasterChef.sol\":33946:33994  user.amount.mul(pool.accPowerPerShare).div(1e12) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_177:\n        /* \"contracts/NFTMasterChef.sol\":33946:33998  user.amount.mul(pool.accPowerPerShare).div(1e12).sub */\n      tag_181\n      swap1\n        /* \"contracts/NFTMasterChef.sol\":33946:34015  user.amount.mul(pool.accPowerPerShare).div(1e12).sub(user.rewardDebt) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_176:\n        /* \"contracts/NFTMasterChef.sol\":33928:34015  uint256 pending = user.amount.mul(pool.accPowerPerShare).div(1e12).sub(user.rewardDebt) */\n      swap1\n      pop\n        /* \"contracts/NFTMasterChef.sol\":34039:34040  0 */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":34029:34036  pending */\n      dup2\n        /* \"contracts/NFTMasterChef.sol\":34029:34040  pending > 0 */\n      gt\n        /* \"contracts/NFTMasterChef.sol\":34026:34133  if(pending > 0) {... */\n      iszero\n      tag_182\n      jumpi\n        /* \"contracts/NFTMasterChef.sol\":34084:34121  powerBalance[msg.sender].add(pending) */\n      tag_183\n        /* \"contracts/NFTMasterChef.sol\":34113:34120  pending */\n      dup2\n        /* \"contracts/NFTMasterChef.sol\":34084:34096  powerBalance */\n      0x0b\n        /* \"contracts/NFTMasterChef.sol\":34084:34108  powerBalance[msg.sender] */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":34097:34107  msg.sender */\n      caller\n        /* \"contracts/NFTMasterChef.sol\":34084:34108  powerBalance[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/NFTMasterChef.sol\":34084:34112  powerBalance[msg.sender].add */\n      tag_184\n      swap1\n        /* \"contracts/NFTMasterChef.sol\":34084:34121  powerBalance[msg.sender].add(pending) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_183:\n        /* \"contracts/NFTMasterChef.sol\":34057:34069  powerBalance */\n      0x0b\n        /* \"contracts/NFTMasterChef.sol\":34057:34081  powerBalance[msg.sender] */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":34070:34080  msg.sender */\n      caller\n        /* \"contracts/NFTMasterChef.sol\":34057:34081  powerBalance[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/NFTMasterChef.sol\":34057:34121  powerBalance[msg.sender] = powerBalance[msg.sender].add(pending) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/NFTMasterChef.sol\":34026:34133  if(pending > 0) {... */\n    tag_182:\n        /* \"contracts/NFTMasterChef.sol\":34156:34157  0 */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":34146:34153  _amount */\n      dup5\n        /* \"contracts/NFTMasterChef.sol\":34146:34157  _amount > 0 */\n      gt\n        /* \"contracts/NFTMasterChef.sol\":34143:34294  if(_amount > 0) {... */\n      iszero\n      tag_185\n      jumpi\n        /* \"contracts/NFTMasterChef.sol\":34188:34212  user.amount.sub(_amount) */\n      tag_186\n        /* \"contracts/NFTMasterChef.sol\":34204:34211  _amount */\n      dup5\n        /* \"contracts/NFTMasterChef.sol\":34188:34192  user */\n      dup4\n        /* \"contracts/NFTMasterChef.sol\":34188:34199  user.amount */\n      0x00\n      add\n      sload\n        /* \"contracts/NFTMasterChef.sol\":34188:34203  user.amount.sub */\n      tag_181\n      swap1\n        /* \"contracts/NFTMasterChef.sol\":34188:34212  user.amount.sub(_amount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_186:\n        /* \"contracts/NFTMasterChef.sol\":34174:34178  user */\n      dup3\n        /* \"contracts/NFTMasterChef.sol\":34174:34185  user.amount */\n      0x00\n      add\n        /* \"contracts/NFTMasterChef.sol\":34174:34212  user.amount = user.amount.sub(_amount) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/NFTMasterChef.sol\":34227:34282  pool.lpToken.safeTransfer(address(msg.sender), _amount) */\n      tag_187\n        /* \"contracts/NFTMasterChef.sol\":34261:34271  msg.sender */\n      caller\n        /* \"contracts/NFTMasterChef.sol\":34274:34281  _amount */\n      dup6\n        /* \"contracts/NFTMasterChef.sol\":34227:34231  pool */\n      dup6\n        /* \"contracts/NFTMasterChef.sol\":34227:34239  pool.lpToken */\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/NFTMasterChef.sol\":34227:34252  pool.lpToken.safeTransfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_188\n      swap1\n        /* \"contracts/NFTMasterChef.sol\":34227:34282  pool.lpToken.safeTransfer(address(msg.sender), _amount) */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_187:\n        /* \"contracts/NFTMasterChef.sol\":34143:34294  if(_amount > 0) {... */\n    tag_185:\n        /* \"contracts/NFTMasterChef.sol\":34322:34370  user.amount.mul(pool.accPowerPerShare).div(1e12) */\n      tag_189\n        /* \"contracts/NFTMasterChef.sol\":34365:34369  1e12 */\n      0xe8d4a51000\n        /* \"contracts/NFTMasterChef.sol\":34322:34360  user.amount.mul(pool.accPowerPerShare) */\n      tag_190\n        /* \"contracts/NFTMasterChef.sol\":34338:34342  pool */\n      dup6\n        /* \"contracts/NFTMasterChef.sol\":34338:34359  pool.accPowerPerShare */\n      0x03\n      add\n      sload\n        /* \"contracts/NFTMasterChef.sol\":34322:34326  user */\n      dup6\n        /* \"contracts/NFTMasterChef.sol\":34322:34333  user.amount */\n      0x00\n      add\n      sload\n        /* \"contracts/NFTMasterChef.sol\":34322:34337  user.amount.mul */\n      tag_179\n      swap1\n        /* \"contracts/NFTMasterChef.sol\":34322:34360  user.amount.mul(pool.accPowerPerShare) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_190:\n        /* \"contracts/NFTMasterChef.sol\":34322:34364  user.amount.mul(pool.accPowerPerShare).div */\n      tag_180\n      swap1\n        /* \"contracts/NFTMasterChef.sol\":34322:34370  user.amount.mul(pool.accPowerPerShare).div(1e12) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_189:\n        /* \"contracts/NFTMasterChef.sol\":34304:34308  user */\n      dup3\n        /* \"contracts/NFTMasterChef.sol\":34304:34319  user.rewardDebt */\n      0x01\n      add\n        /* \"contracts/NFTMasterChef.sol\":34304:34370  user.rewardDebt = user.amount.mul(pool.accPowerPerShare).div(1e12) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/NFTMasterChef.sol\":34407:34408  0 */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":34395:34405  msg.sender */\n      caller\n        /* \"contracts/NFTMasterChef.sol\":34386:34418  Withdraw(msg.sender, 0, _amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xf279e6a1f5e320cca91135676d9cb6e44ca8a08c0b88342bcdb1144f6511b568\n        /* \"contracts/NFTMasterChef.sol\":34410:34417  _amount */\n      dup7\n        /* \"contracts/NFTMasterChef.sol\":34386:34418  Withdraw(msg.sender, 0, _amount) */\n      mload(0x40)\n      tag_191\n      swap2\n      swap1\n      tag_47\n      jump\t// in\n    tag_191:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/NFTMasterChef.sol\":33725:34426  {... */\n      pop\n      pop\n      pop\n        /* \"contracts/NFTMasterChef.sol\":33679:34426  function leaveStaking(uint256 _amount) public {... */\n      pop\n      jump\t// out\n        /* \"contracts/NFTMasterChef.sol\":23993:24019  PoolInfo[] public poolInfo */\n    tag_54:\n      0x07\n      dup2\n      dup2\n      sload\n      dup2\n      lt\n      tag_192\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_192:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x04\n      mul\n      add\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      dup1\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      dup1\n      0x01\n      add\n      sload\n      swap1\n      dup1\n      0x02\n      add\n      sload\n      swap1\n      dup1\n      0x03\n      add\n      sload\n      swap1\n      pop\n      dup5\n      jump\t// out\n        /* \"contracts/NFTMasterChef.sol\":24234:24268  uint256 public totalAllocPoint = 0 */\n    tag_58:\n      sload(0x09)\n      dup2\n      jump\t// out\n        /* \"contracts/NFTMasterChef.sol\":25566:26834  function claimNFTReward(uint256 level, uint256 _pid) public {... */\n    tag_63:\n        /* \"contracts/NFTMasterChef.sol\":25637:25658  PoolInfo storage pool */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":25661:25669  poolInfo */\n      0x07\n        /* \"contracts/NFTMasterChef.sol\":25670:25674  _pid */\n      dup3\n        /* \"contracts/NFTMasterChef.sol\":25661:25675  poolInfo[_pid] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_195\n      jumpi\n      tag_196\n      tag_170\n      jump\t// in\n    tag_196:\n    tag_195:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x04\n      mul\n      add\n        /* \"contracts/NFTMasterChef.sol\":25637:25675  PoolInfo storage pool = poolInfo[_pid] */\n      swap1\n      pop\n        /* \"contracts/NFTMasterChef.sol\":25686:25707  UserInfo storage user */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":25710:25718  userInfo */\n      0x08\n        /* \"contracts/NFTMasterChef.sol\":25710:25724  userInfo[_pid] */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":25719:25723  _pid */\n      dup5\n        /* \"contracts/NFTMasterChef.sol\":25710:25724  userInfo[_pid] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/NFTMasterChef.sol\":25710:25736  userInfo[_pid][msg.sender] */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":25725:25735  msg.sender */\n      caller\n        /* \"contracts/NFTMasterChef.sol\":25710:25736  userInfo[_pid][msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/NFTMasterChef.sol\":25686:25736  UserInfo storage user = userInfo[_pid][msg.sender] */\n      swap1\n      pop\n        /* \"contracts/NFTMasterChef.sol\":25747:25771  uint256 accPowerPerShare */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":25774:25778  pool */\n      dup3\n        /* \"contracts/NFTMasterChef.sol\":25774:25795  pool.accPowerPerShare */\n      0x03\n      add\n      sload\n        /* \"contracts/NFTMasterChef.sol\":25747:25795  uint256 accPowerPerShare = pool.accPowerPerShare */\n      swap1\n      pop\n        /* \"contracts/NFTMasterChef.sol\":25806:25822  uint256 lpSupply */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":25825:25829  pool */\n      dup4\n        /* \"contracts/NFTMasterChef.sol\":25825:25837  pool.lpToken */\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/NFTMasterChef.sol\":25825:25847  pool.lpToken.balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"contracts/NFTMasterChef.sol\":25856:25860  this */\n      address\n        /* \"contracts/NFTMasterChef.sol\":25825:25862  pool.lpToken.balanceOf(address(this)) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_198\n      swap2\n      swap1\n      tag_131\n      jump\t// in\n    tag_198:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_200\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_200:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_201\n      swap2\n      swap1\n      tag_202\n      jump\t// in\n    tag_201:\n        /* \"contracts/NFTMasterChef.sol\":25806:25862  uint256 lpSupply = pool.lpToken.balanceOf(address(this)) */\n      swap1\n      pop\n        /* \"contracts/NFTMasterChef.sol\":25892:25896  pool */\n      dup4\n        /* \"contracts/NFTMasterChef.sol\":25892:25912  pool.lastRewardBlock */\n      0x02\n      add\n      sload\n        /* \"contracts/NFTMasterChef.sol\":25877:25889  block.number */\n      number\n        /* \"contracts/NFTMasterChef.sol\":25877:25912  block.number > pool.lastRewardBlock */\n      gt\n        /* \"contracts/NFTMasterChef.sol\":25877:25929  block.number > pool.lastRewardBlock && lpSupply != 0 */\n      dup1\n      iszero\n      tag_203\n      jumpi\n      pop\n        /* \"contracts/NFTMasterChef.sol\":25928:25929  0 */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":25916:25924  lpSupply */\n      dup2\n        /* \"contracts/NFTMasterChef.sol\":25916:25929  lpSupply != 0 */\n      eq\n      iszero\n        /* \"contracts/NFTMasterChef.sol\":25877:25929  block.number > pool.lastRewardBlock && lpSupply != 0 */\n    tag_203:\n        /* \"contracts/NFTMasterChef.sol\":25873:26227  if (block.number > pool.lastRewardBlock && lpSupply != 0) {... */\n      iszero\n      tag_204\n      jumpi\n        /* \"contracts/NFTMasterChef.sol\":25946:25964  uint256 multiplier */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":25967:26016  getMultiplier(pool.lastRewardBlock, block.number) */\n      tag_205\n        /* \"contracts/NFTMasterChef.sol\":25981:25985  pool */\n      dup6\n        /* \"contracts/NFTMasterChef.sol\":25981:26001  pool.lastRewardBlock */\n      0x02\n      add\n      sload\n        /* \"contracts/NFTMasterChef.sol\":26003:26015  block.number */\n      number\n        /* \"contracts/NFTMasterChef.sol\":25967:25980  getMultiplier */\n      tag_134\n        /* \"contracts/NFTMasterChef.sol\":25967:26016  getMultiplier(pool.lastRewardBlock, block.number) */\n      jump\t// in\n    tag_205:\n        /* \"contracts/NFTMasterChef.sol\":25946:26016  uint256 multiplier = getMultiplier(pool.lastRewardBlock, block.number) */\n      swap1\n      pop\n        /* \"contracts/NFTMasterChef.sol\":26031:26050  uint256 PowerReward */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":26053:26124  multiplier.mul(PowerPerBlock).mul(pool.allocPoint).div(totalAllocPoint) */\n      tag_206\n        /* \"contracts/NFTMasterChef.sol\":26108:26123  totalAllocPoint */\n      sload(0x09)\n        /* \"contracts/NFTMasterChef.sol\":26053:26103  multiplier.mul(PowerPerBlock).mul(pool.allocPoint) */\n      tag_207\n        /* \"contracts/NFTMasterChef.sol\":26087:26091  pool */\n      dup9\n        /* \"contracts/NFTMasterChef.sol\":26087:26102  pool.allocPoint */\n      0x01\n      add\n      sload\n        /* \"contracts/NFTMasterChef.sol\":26053:26082  multiplier.mul(PowerPerBlock) */\n      tag_208\n        /* \"contracts/NFTMasterChef.sol\":26068:26081  PowerPerBlock */\n      sload(0x04)\n        /* \"contracts/NFTMasterChef.sol\":26053:26063  multiplier */\n      dup8\n        /* \"contracts/NFTMasterChef.sol\":26053:26067  multiplier.mul */\n      tag_179\n      swap1\n        /* \"contracts/NFTMasterChef.sol\":26053:26082  multiplier.mul(PowerPerBlock) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_208:\n        /* \"contracts/NFTMasterChef.sol\":26053:26086  multiplier.mul(PowerPerBlock).mul */\n      tag_179\n      swap1\n        /* \"contracts/NFTMasterChef.sol\":26053:26103  multiplier.mul(PowerPerBlock).mul(pool.allocPoint) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_207:\n        /* \"contracts/NFTMasterChef.sol\":26053:26107  multiplier.mul(PowerPerBlock).mul(pool.allocPoint).div */\n      tag_180\n      swap1\n        /* \"contracts/NFTMasterChef.sol\":26053:26124  multiplier.mul(PowerPerBlock).mul(pool.allocPoint).div(totalAllocPoint) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_206:\n        /* \"contracts/NFTMasterChef.sol\":26031:26124  uint256 PowerReward = multiplier.mul(PowerPerBlock).mul(pool.allocPoint).div(totalAllocPoint) */\n      swap1\n      pop\n        /* \"contracts/NFTMasterChef.sol\":26158:26215  accPowerPerShare.add(PowerReward.mul(1e12).div(lpSupply)) */\n      tag_209\n        /* \"contracts/NFTMasterChef.sol\":26179:26214  PowerReward.mul(1e12).div(lpSupply) */\n      tag_210\n        /* \"contracts/NFTMasterChef.sol\":26205:26213  lpSupply */\n      dup5\n        /* \"contracts/NFTMasterChef.sol\":26179:26200  PowerReward.mul(1e12) */\n      tag_211\n        /* \"contracts/NFTMasterChef.sol\":26195:26199  1e12 */\n      0xe8d4a51000\n        /* \"contracts/NFTMasterChef.sol\":26179:26190  PowerReward */\n      dup6\n        /* \"contracts/NFTMasterChef.sol\":26179:26194  PowerReward.mul */\n      tag_179\n      swap1\n        /* \"contracts/NFTMasterChef.sol\":26179:26200  PowerReward.mul(1e12) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_211:\n        /* \"contracts/NFTMasterChef.sol\":26179:26204  PowerReward.mul(1e12).div */\n      tag_180\n      swap1\n        /* \"contracts/NFTMasterChef.sol\":26179:26214  PowerReward.mul(1e12).div(lpSupply) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_210:\n        /* \"contracts/NFTMasterChef.sol\":26158:26174  accPowerPerShare */\n      dup6\n        /* \"contracts/NFTMasterChef.sol\":26158:26178  accPowerPerShare.add */\n      tag_184\n      swap1\n        /* \"contracts/NFTMasterChef.sol\":26158:26215  accPowerPerShare.add(PowerReward.mul(1e12).div(lpSupply)) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_209:\n        /* \"contracts/NFTMasterChef.sol\":26139:26215  accPowerPerShare = accPowerPerShare.add(PowerReward.mul(1e12).div(lpSupply)) */\n      swap4\n      pop\n        /* \"contracts/NFTMasterChef.sol\":25931:26227  {... */\n      pop\n      pop\n        /* \"contracts/NFTMasterChef.sol\":25873:26227  if (block.number > pool.lastRewardBlock && lpSupply != 0) {... */\n    tag_204:\n        /* \"contracts/NFTMasterChef.sol\":26237:26252  uint256 pending */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":26255:26319  user.amount.mul(accPowerPerShare).div(1e12).sub(user.rewardDebt) */\n      tag_212\n        /* \"contracts/NFTMasterChef.sol\":26303:26307  user */\n      dup5\n        /* \"contracts/NFTMasterChef.sol\":26303:26318  user.rewardDebt */\n      0x01\n      add\n      sload\n        /* \"contracts/NFTMasterChef.sol\":26255:26298  user.amount.mul(accPowerPerShare).div(1e12) */\n      tag_213\n        /* \"contracts/NFTMasterChef.sol\":26293:26297  1e12 */\n      0xe8d4a51000\n        /* \"contracts/NFTMasterChef.sol\":26255:26288  user.amount.mul(accPowerPerShare) */\n      tag_214\n        /* \"contracts/NFTMasterChef.sol\":26271:26287  accPowerPerShare */\n      dup8\n        /* \"contracts/NFTMasterChef.sol\":26255:26259  user */\n      dup10\n        /* \"contracts/NFTMasterChef.sol\":26255:26266  user.amount */\n      0x00\n      add\n      sload\n        /* \"contracts/NFTMasterChef.sol\":26255:26270  user.amount.mul */\n      tag_179\n      swap1\n        /* \"contracts/NFTMasterChef.sol\":26255:26288  user.amount.mul(accPowerPerShare) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_214:\n        /* \"contracts/NFTMasterChef.sol\":26255:26292  user.amount.mul(accPowerPerShare).div */\n      tag_180\n      swap1\n        /* \"contracts/NFTMasterChef.sol\":26255:26298  user.amount.mul(accPowerPerShare).div(1e12) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_213:\n        /* \"contracts/NFTMasterChef.sol\":26255:26302  user.amount.mul(accPowerPerShare).div(1e12).sub */\n      tag_181\n      swap1\n        /* \"contracts/NFTMasterChef.sol\":26255:26319  user.amount.mul(accPowerPerShare).div(1e12).sub(user.rewardDebt) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_212:\n        /* \"contracts/NFTMasterChef.sol\":26237:26319  uint256 pending = user.amount.mul(accPowerPerShare).div(1e12).sub(user.rewardDebt) */\n      swap1\n      pop\n        /* \"contracts/NFTMasterChef.sol\":26330:26350  NFTsInfo storage nft */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":26353:26361  nftsInfo */\n      0x01\n        /* \"contracts/NFTMasterChef.sol\":26362:26367  level */\n      dup9\n        /* \"contracts/NFTMasterChef.sol\":26353:26368  nftsInfo[level] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_215\n      jumpi\n      tag_216\n      tag_170\n      jump\t// in\n    tag_216:\n    tag_215:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x02\n      mul\n      add\n        /* \"contracts/NFTMasterChef.sol\":26330:26368  NFTsInfo storage nft = nftsInfo[level] */\n      swap1\n      pop\n        /* \"contracts/NFTMasterChef.sol\":26379:26392  uint256 total */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":26395:26432  pending.add(powerBalance[msg.sender]) */\n      tag_218\n        /* \"contracts/NFTMasterChef.sol\":26407:26419  powerBalance */\n      0x0b\n        /* \"contracts/NFTMasterChef.sol\":26407:26431  powerBalance[msg.sender] */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":26420:26430  msg.sender */\n      caller\n        /* \"contracts/NFTMasterChef.sol\":26407:26431  powerBalance[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/NFTMasterChef.sol\":26395:26402  pending */\n      dup5\n        /* \"contracts/NFTMasterChef.sol\":26395:26406  pending.add */\n      tag_184\n      swap1\n        /* \"contracts/NFTMasterChef.sol\":26395:26432  pending.add(powerBalance[msg.sender]) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_218:\n        /* \"contracts/NFTMasterChef.sol\":26379:26432  uint256 total = pending.add(powerBalance[msg.sender]) */\n      swap1\n      pop\n        /* \"contracts/NFTMasterChef.sol\":26454:26457  nft */\n      dup2\n        /* \"contracts/NFTMasterChef.sol\":26454:26463  nft.power */\n      0x01\n      add\n      sload\n        /* \"contracts/NFTMasterChef.sol\":26446:26451  total */\n      dup2\n        /* \"contracts/NFTMasterChef.sol\":26446:26463  total > nft.power */\n      gt\n        /* \"contracts/NFTMasterChef.sol\":26443:26631  if(total > nft.power){... */\n      iszero\n      tag_219\n      jumpi\n        /* \"contracts/NFTMasterChef.sol\":26490:26491  0 */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":26482:26486  _pid */\n      dup9\n        /* \"contracts/NFTMasterChef.sol\":26482:26491  _pid == 0 */\n      sub\n        /* \"contracts/NFTMasterChef.sol\":26479:26542  if(_pid == 0){... */\n      tag_220\n      jumpi\n        /* \"contracts/NFTMasterChef.sol\":26511:26526  leaveStaking(0) */\n      tag_221\n        /* \"contracts/NFTMasterChef.sol\":26524:26525  0 */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":26511:26523  leaveStaking */\n      tag_51\n        /* \"contracts/NFTMasterChef.sol\":26511:26526  leaveStaking(0) */\n      jump\t// in\n    tag_221:\n        /* \"contracts/NFTMasterChef.sol\":26479:26542  if(_pid == 0){... */\n    tag_220:\n        /* \"contracts/NFTMasterChef.sol\":26567:26568  0 */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":26559:26563  _pid */\n      dup9\n        /* \"contracts/NFTMasterChef.sol\":26559:26568  _pid != 0 */\n      eq\n        /* \"contracts/NFTMasterChef.sol\":26556:26620  if(_pid != 0){... */\n      tag_222\n      jumpi\n        /* \"contracts/NFTMasterChef.sol\":26588:26604  withdraw(_pid,0) */\n      tag_223\n        /* \"contracts/NFTMasterChef.sol\":26597:26601  _pid */\n      dup9\n        /* \"contracts/NFTMasterChef.sol\":26602:26603  0 */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":26588:26596  withdraw */\n      tag_80\n        /* \"contracts/NFTMasterChef.sol\":26588:26604  withdraw(_pid,0) */\n      jump\t// in\n    tag_223:\n        /* \"contracts/NFTMasterChef.sol\":26556:26620  if(_pid != 0){... */\n    tag_222:\n        /* \"contracts/NFTMasterChef.sol\":26443:26631  if(total > nft.power){... */\n    tag_219:\n        /* \"contracts/NFTMasterChef.sol\":26661:26673  powerBalance */\n      0x0b\n        /* \"contracts/NFTMasterChef.sol\":26661:26685  powerBalance[msg.sender] */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":26674:26684  msg.sender */\n      caller\n        /* \"contracts/NFTMasterChef.sol\":26661:26685  powerBalance[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/NFTMasterChef.sol\":26649:26652  nft */\n      dup3\n        /* \"contracts/NFTMasterChef.sol\":26649:26658  nft.power */\n      0x01\n      add\n      sload\n        /* \"contracts/NFTMasterChef.sol\":26649:26685  nft.power < powerBalance[msg.sender] */\n      lt\n        /* \"contracts/NFTMasterChef.sol\":26641:26709  require(nft.power < powerBalance[msg.sender], \"Power is not enough\") */\n      tag_224\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_225\n      swap1\n      tag_226\n      jump\t// in\n    tag_225:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_224:\n        /* \"contracts/NFTMasterChef.sol\":26747:26786  powerBalance[msg.sender].sub(nft.power) */\n      tag_227\n        /* \"contracts/NFTMasterChef.sol\":26776:26779  nft */\n      dup3\n        /* \"contracts/NFTMasterChef.sol\":26776:26785  nft.power */\n      0x01\n      add\n      sload\n        /* \"contracts/NFTMasterChef.sol\":26747:26759  powerBalance */\n      0x0b\n        /* \"contracts/NFTMasterChef.sol\":26747:26771  powerBalance[msg.sender] */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":26760:26770  msg.sender */\n      caller\n        /* \"contracts/NFTMasterChef.sol\":26747:26771  powerBalance[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/NFTMasterChef.sol\":26747:26775  powerBalance[msg.sender].sub */\n      tag_181\n      swap1\n        /* \"contracts/NFTMasterChef.sol\":26747:26786  powerBalance[msg.sender].sub(nft.power) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_227:\n        /* \"contracts/NFTMasterChef.sol\":26720:26732  powerBalance */\n      0x0b\n        /* \"contracts/NFTMasterChef.sol\":26720:26744  powerBalance[msg.sender] */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":26733:26743  msg.sender */\n      caller\n        /* \"contracts/NFTMasterChef.sol\":26720:26744  powerBalance[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/NFTMasterChef.sol\":26720:26786  powerBalance[msg.sender] = powerBalance[msg.sender].sub(nft.power) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/NFTMasterChef.sol\":26797:26800  nft */\n      dup2\n        /* \"contracts/NFTMasterChef.sol\":26797:26804  nft.NFT */\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/NFTMasterChef.sol\":26797:26814  nft.NFT.createNFT */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x17e5883c\n        /* \"contracts/NFTMasterChef.sol\":26815:26825  msg.sender */\n      caller\n        /* \"contracts/NFTMasterChef.sol\":26797:26826  nft.NFT.createNFT(msg.sender) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_228\n      swap2\n      swap1\n      tag_131\n      jump\t// in\n    tag_228:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_229\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_229:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_231\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_231:\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/NFTMasterChef.sol\":25626:26834  {... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/NFTMasterChef.sol\":25566:26834  function claimNFTReward(uint256 level, uint256 _pid) public {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/NFTMasterChef.sol\":27237:27797  function add( uint256 _allocPoint, IERC20 _lpToken, bool _withUpdate ) public onlyOwner {... */\n    tag_67:\n        /* \"contracts/NFTMasterChef.sol\":20336:20348  _msgSender() */\n      tag_233\n        /* \"contracts/NFTMasterChef.sol\":20336:20346  _msgSender */\n      tag_234\n        /* \"contracts/NFTMasterChef.sol\":20336:20348  _msgSender() */\n      jump\t// in\n    tag_233:\n        /* \"contracts/NFTMasterChef.sol\":20325:20348  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/NFTMasterChef.sol\":20325:20332  owner() */\n      tag_235\n        /* \"contracts/NFTMasterChef.sol\":20325:20330  owner */\n      tag_129\n        /* \"contracts/NFTMasterChef.sol\":20325:20332  owner() */\n      jump\t// in\n    tag_235:\n        /* \"contracts/NFTMasterChef.sol\":20325:20348  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/NFTMasterChef.sol\":20317:20385  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_236\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_237\n      swap1\n      tag_238\n      jump\t// in\n    tag_237:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_236:\n        /* \"contracts/NFTMasterChef.sol\":27340:27351  _withUpdate */\n      dup1\n        /* \"contracts/NFTMasterChef.sol\":27336:27397  if (_withUpdate) {... */\n      iszero\n      tag_240\n      jumpi\n        /* \"contracts/NFTMasterChef.sol\":27368:27385  massUpdatePools() */\n      tag_241\n        /* \"contracts/NFTMasterChef.sol\":27368:27383  massUpdatePools */\n      tag_109\n        /* \"contracts/NFTMasterChef.sol\":27368:27385  massUpdatePools() */\n      jump\t// in\n    tag_241:\n        /* \"contracts/NFTMasterChef.sol\":27336:27397  if (_withUpdate) {... */\n    tag_240:\n        /* \"contracts/NFTMasterChef.sol\":27407:27430  uint256 lastRewardBlock */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":27448:27458  startBlock */\n      sload(0x0a)\n        /* \"contracts/NFTMasterChef.sol\":27433:27445  block.number */\n      number\n        /* \"contracts/NFTMasterChef.sol\":27433:27458  block.number > startBlock */\n      gt\n        /* \"contracts/NFTMasterChef.sol\":27433:27486  block.number > startBlock ? block.number : startBlock */\n      tag_242\n      jumpi\n        /* \"contracts/NFTMasterChef.sol\":27476:27486  startBlock */\n      sload(0x0a)\n        /* \"contracts/NFTMasterChef.sol\":27433:27486  block.number > startBlock ? block.number : startBlock */\n      jump(tag_243)\n    tag_242:\n        /* \"contracts/NFTMasterChef.sol\":27461:27473  block.number */\n      number\n        /* \"contracts/NFTMasterChef.sol\":27433:27486  block.number > startBlock ? block.number : startBlock */\n    tag_243:\n        /* \"contracts/NFTMasterChef.sol\":27407:27486  uint256 lastRewardBlock = block.number > startBlock ? block.number : startBlock */\n      swap1\n      pop\n        /* \"contracts/NFTMasterChef.sol\":27515:27547  totalAllocPoint.add(_allocPoint) */\n      tag_244\n        /* \"contracts/NFTMasterChef.sol\":27535:27546  _allocPoint */\n      dup5\n        /* \"contracts/NFTMasterChef.sol\":27515:27530  totalAllocPoint */\n      sload(0x09)\n        /* \"contracts/NFTMasterChef.sol\":27515:27534  totalAllocPoint.add */\n      tag_184\n      swap1\n        /* \"contracts/NFTMasterChef.sol\":27515:27547  totalAllocPoint.add(_allocPoint) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_244:\n        /* \"contracts/NFTMasterChef.sol\":27497:27512  totalAllocPoint */\n      0x09\n        /* \"contracts/NFTMasterChef.sol\":27497:27547  totalAllocPoint = totalAllocPoint.add(_allocPoint) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/NFTMasterChef.sol\":27558:27566  poolInfo */\n      0x07\n        /* \"contracts/NFTMasterChef.sol\":27586:27778  PoolInfo({... */\n      mload(0x40)\n      dup1\n      0x80\n      add\n      0x40\n      mstore\n      dup1\n        /* \"contracts/NFTMasterChef.sol\":27623:27631  _lpToken */\n      dup6\n        /* \"contracts/NFTMasterChef.sol\":27586:27778  PoolInfo({... */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/NFTMasterChef.sol\":27662:27673  _allocPoint */\n      dup7\n        /* \"contracts/NFTMasterChef.sol\":27586:27778  PoolInfo({... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/NFTMasterChef.sol\":27709:27724  lastRewardBlock */\n      dup4\n        /* \"contracts/NFTMasterChef.sol\":27586:27778  PoolInfo({... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/NFTMasterChef.sol\":27761:27762  0 */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":27586:27778  PoolInfo({... */\n      dup2\n      mstore\n      pop\n        /* \"contracts/NFTMasterChef.sol\":27558:27789  poolInfo.push(... */\n      swap1\n      dup1\n      0x01\n      dup2\n      sload\n      add\n      dup1\n      dup3\n      sstore\n      dup1\n      swap2\n      pop\n      pop\n      0x01\n      swap1\n      sub\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x04\n      mul\n      add\n      0x00\n      swap1\n      swap2\n      swap1\n      swap2\n      swap1\n      swap2\n      pop\n      0x00\n      dup3\n      add\n      mload\n      dup2\n      0x00\n      add\n      exp(0x0100, 0x00)\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n      0x20\n      dup3\n      add\n      mload\n      dup2\n      0x01\n      add\n      sstore\n      0x40\n      dup3\n      add\n      mload\n      dup2\n      0x02\n      add\n      sstore\n      0x60\n      dup3\n      add\n      mload\n      dup2\n      0x03\n      add\n      sstore\n      pop\n      pop\n        /* \"contracts/NFTMasterChef.sol\":27325:27797  {... */\n      pop\n        /* \"contracts/NFTMasterChef.sol\":27237:27797  function add( uint256 _allocPoint, IERC20 _lpToken, bool _withUpdate ) public onlyOwner {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/NFTMasterChef.sol\":28275:28377  function setMigrator(IMigratorChef _migrator) public onlyOwner {... */\n    tag_71:\n        /* \"contracts/NFTMasterChef.sol\":20336:20348  _msgSender() */\n      tag_247\n        /* \"contracts/NFTMasterChef.sol\":20336:20346  _msgSender */\n      tag_234\n        /* \"contracts/NFTMasterChef.sol\":20336:20348  _msgSender() */\n      jump\t// in\n    tag_247:\n        /* \"contracts/NFTMasterChef.sol\":20325:20348  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/NFTMasterChef.sol\":20325:20332  owner() */\n      tag_248\n        /* \"contracts/NFTMasterChef.sol\":20325:20330  owner */\n      tag_129\n        /* \"contracts/NFTMasterChef.sol\":20325:20332  owner() */\n      jump\t// in\n    tag_248:\n        /* \"contracts/NFTMasterChef.sol\":20325:20348  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/NFTMasterChef.sol\":20317:20385  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_249\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_250\n      swap1\n      tag_238\n      jump\t// in\n    tag_250:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_249:\n        /* \"contracts/NFTMasterChef.sol\":28360:28369  _migrator */\n      dup1\n        /* \"contracts/NFTMasterChef.sol\":28349:28357  migrator */\n      0x06\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":28349:28369  migrator = _migrator */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/NFTMasterChef.sol\":28275:28377  function setMigrator(IMigratorChef _migrator) public onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contracts/NFTMasterChef.sol\":34974:35083  function updatePowerPerBlock(uint256 newAmount) public onlyOwner {... */\n    tag_74:\n        /* \"contracts/NFTMasterChef.sol\":20336:20348  _msgSender() */\n      tag_253\n        /* \"contracts/NFTMasterChef.sol\":20336:20346  _msgSender */\n      tag_234\n        /* \"contracts/NFTMasterChef.sol\":20336:20348  _msgSender() */\n      jump\t// in\n    tag_253:\n        /* \"contracts/NFTMasterChef.sol\":20325:20348  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/NFTMasterChef.sol\":20325:20332  owner() */\n      tag_254\n        /* \"contracts/NFTMasterChef.sol\":20325:20330  owner */\n      tag_129\n        /* \"contracts/NFTMasterChef.sol\":20325:20332  owner() */\n      jump\t// in\n    tag_254:\n        /* \"contracts/NFTMasterChef.sol\":20325:20348  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/NFTMasterChef.sol\":20317:20385  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_255\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_256\n      swap1\n      tag_238\n      jump\t// in\n    tag_256:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_255:\n        /* \"contracts/NFTMasterChef.sol\":35066:35075  newAmount */\n      dup1\n        /* \"contracts/NFTMasterChef.sol\":35050:35063  PowerPerBlock */\n      0x04\n        /* \"contracts/NFTMasterChef.sol\":35050:35075  PowerPerBlock = newAmount */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/NFTMasterChef.sol\":34974:35083  function updatePowerPerBlock(uint256 newAmount) public onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contracts/NFTMasterChef.sol\":32830:33627  function enterStaking(uint256 _amount) public {... */\n    tag_77:\n        /* \"contracts/NFTMasterChef.sol\":32887:32908  PoolInfo storage pool */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":32911:32919  poolInfo */\n      0x07\n        /* \"contracts/NFTMasterChef.sol\":32920:32921  0 */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":32911:32922  poolInfo[0] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_259\n      jumpi\n      tag_260\n      tag_170\n      jump\t// in\n    tag_260:\n    tag_259:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x04\n      mul\n      add\n        /* \"contracts/NFTMasterChef.sol\":32887:32922  PoolInfo storage pool = poolInfo[0] */\n      swap1\n      pop\n        /* \"contracts/NFTMasterChef.sol\":32933:32954  UserInfo storage user */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":32957:32965  userInfo */\n      0x08\n        /* \"contracts/NFTMasterChef.sol\":32957:32968  userInfo[0] */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":32966:32967  0 */\n      dup1\n        /* \"contracts/NFTMasterChef.sol\":32957:32968  userInfo[0] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/NFTMasterChef.sol\":32957:32989  userInfo[0][address(msg.sender)] */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":32977:32987  msg.sender */\n      caller\n        /* \"contracts/NFTMasterChef.sol\":32957:32989  userInfo[0][address(msg.sender)] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/NFTMasterChef.sol\":32933:32989  UserInfo storage user = userInfo[0][address(msg.sender)] */\n      swap1\n      pop\n        /* \"contracts/NFTMasterChef.sol\":33010:33023  updatePool(0) */\n      tag_262\n        /* \"contracts/NFTMasterChef.sol\":33021:33022  0 */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":33010:33020  updatePool */\n      tag_93\n        /* \"contracts/NFTMasterChef.sol\":33010:33023  updatePool(0) */\n      jump\t// in\n    tag_262:\n        /* \"contracts/NFTMasterChef.sol\":33052:33053  0 */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":33038:33042  user */\n      dup2\n        /* \"contracts/NFTMasterChef.sol\":33038:33049  user.amount */\n      0x00\n      add\n      sload\n        /* \"contracts/NFTMasterChef.sol\":33038:33053  user.amount > 0 */\n      gt\n        /* \"contracts/NFTMasterChef.sol\":33034:33316  if (user.amount > 0) {... */\n      iszero\n      tag_263\n      jumpi\n        /* \"contracts/NFTMasterChef.sol\":33070:33085  uint256 pending */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":33088:33157  user.amount.mul(pool.accPowerPerShare).div(1e12).sub(user.rewardDebt) */\n      tag_264\n        /* \"contracts/NFTMasterChef.sol\":33141:33145  user */\n      dup3\n        /* \"contracts/NFTMasterChef.sol\":33141:33156  user.rewardDebt */\n      0x01\n      add\n      sload\n        /* \"contracts/NFTMasterChef.sol\":33088:33136  user.amount.mul(pool.accPowerPerShare).div(1e12) */\n      tag_265\n        /* \"contracts/NFTMasterChef.sol\":33131:33135  1e12 */\n      0xe8d4a51000\n        /* \"contracts/NFTMasterChef.sol\":33088:33126  user.amount.mul(pool.accPowerPerShare) */\n      tag_266\n        /* \"contracts/NFTMasterChef.sol\":33104:33108  pool */\n      dup8\n        /* \"contracts/NFTMasterChef.sol\":33104:33125  pool.accPowerPerShare */\n      0x03\n      add\n      sload\n        /* \"contracts/NFTMasterChef.sol\":33088:33092  user */\n      dup8\n        /* \"contracts/NFTMasterChef.sol\":33088:33099  user.amount */\n      0x00\n      add\n      sload\n        /* \"contracts/NFTMasterChef.sol\":33088:33103  user.amount.mul */\n      tag_179\n      swap1\n        /* \"contracts/NFTMasterChef.sol\":33088:33126  user.amount.mul(pool.accPowerPerShare) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_266:\n        /* \"contracts/NFTMasterChef.sol\":33088:33130  user.amount.mul(pool.accPowerPerShare).div */\n      tag_180\n      swap1\n        /* \"contracts/NFTMasterChef.sol\":33088:33136  user.amount.mul(pool.accPowerPerShare).div(1e12) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_265:\n        /* \"contracts/NFTMasterChef.sol\":33088:33140  user.amount.mul(pool.accPowerPerShare).div(1e12).sub */\n      tag_181\n      swap1\n        /* \"contracts/NFTMasterChef.sol\":33088:33157  user.amount.mul(pool.accPowerPerShare).div(1e12).sub(user.rewardDebt) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_264:\n        /* \"contracts/NFTMasterChef.sol\":33070:33157  uint256 pending = user.amount.mul(pool.accPowerPerShare).div(1e12).sub(user.rewardDebt) */\n      swap1\n      pop\n        /* \"contracts/NFTMasterChef.sol\":33185:33186  0 */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":33175:33182  pending */\n      dup2\n        /* \"contracts/NFTMasterChef.sol\":33175:33186  pending > 0 */\n      gt\n        /* \"contracts/NFTMasterChef.sol\":33172:33305  if(pending > 0) {... */\n      iszero\n      tag_267\n      jumpi\n        /* \"contracts/NFTMasterChef.sol\":33243:33289  powerBalance[address(msg.sender)].add(pending) */\n      tag_268\n        /* \"contracts/NFTMasterChef.sol\":33281:33288  pending */\n      dup2\n        /* \"contracts/NFTMasterChef.sol\":33243:33255  powerBalance */\n      0x0b\n        /* \"contracts/NFTMasterChef.sol\":33243:33276  powerBalance[address(msg.sender)] */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":33264:33274  msg.sender */\n      caller\n        /* \"contracts/NFTMasterChef.sol\":33243:33276  powerBalance[address(msg.sender)] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/NFTMasterChef.sol\":33243:33280  powerBalance[address(msg.sender)].add */\n      tag_184\n      swap1\n        /* \"contracts/NFTMasterChef.sol\":33243:33289  powerBalance[address(msg.sender)].add(pending) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_268:\n        /* \"contracts/NFTMasterChef.sol\":33207:33219  powerBalance */\n      0x0b\n        /* \"contracts/NFTMasterChef.sol\":33207:33240  powerBalance[address(msg.sender)] */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":33228:33238  msg.sender */\n      caller\n        /* \"contracts/NFTMasterChef.sol\":33207:33240  powerBalance[address(msg.sender)] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/NFTMasterChef.sol\":33207:33289  powerBalance[address(msg.sender)] = powerBalance[address(msg.sender)].add(pending) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/NFTMasterChef.sol\":33172:33305  if(pending > 0) {... */\n    tag_267:\n        /* \"contracts/NFTMasterChef.sol\":33055:33316  {... */\n      pop\n        /* \"contracts/NFTMasterChef.sol\":33034:33316  if (user.amount > 0) {... */\n    tag_263:\n        /* \"contracts/NFTMasterChef.sol\":33339:33340  0 */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":33329:33336  _amount */\n      dup4\n        /* \"contracts/NFTMasterChef.sol\":33329:33340  _amount > 0 */\n      gt\n        /* \"contracts/NFTMasterChef.sol\":33326:33496  if(_amount > 0) {... */\n      iszero\n      tag_269\n      jumpi\n        /* \"contracts/NFTMasterChef.sol\":33357:33431  pool.lpToken.safeTransferFrom(address(msg.sender), address(this), _amount) */\n      tag_270\n        /* \"contracts/NFTMasterChef.sol\":33395:33405  msg.sender */\n      caller\n        /* \"contracts/NFTMasterChef.sol\":33416:33420  this */\n      address\n        /* \"contracts/NFTMasterChef.sol\":33423:33430  _amount */\n      dup6\n        /* \"contracts/NFTMasterChef.sol\":33357:33361  pool */\n      dup6\n        /* \"contracts/NFTMasterChef.sol\":33357:33369  pool.lpToken */\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/NFTMasterChef.sol\":33357:33386  pool.lpToken.safeTransferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_271\n      swap1\n        /* \"contracts/NFTMasterChef.sol\":33357:33431  pool.lpToken.safeTransferFrom(address(msg.sender), address(this), _amount) */\n      swap4\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_270:\n        /* \"contracts/NFTMasterChef.sol\":33460:33484  user.amount.add(_amount) */\n      tag_272\n        /* \"contracts/NFTMasterChef.sol\":33476:33483  _amount */\n      dup4\n        /* \"contracts/NFTMasterChef.sol\":33460:33464  user */\n      dup3\n        /* \"contracts/NFTMasterChef.sol\":33460:33471  user.amount */\n      0x00\n      add\n      sload\n        /* \"contracts/NFTMasterChef.sol\":33460:33475  user.amount.add */\n      tag_184\n      swap1\n        /* \"contracts/NFTMasterChef.sol\":33460:33484  user.amount.add(_amount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_272:\n        /* \"contracts/NFTMasterChef.sol\":33446:33450  user */\n      dup2\n        /* \"contracts/NFTMasterChef.sol\":33446:33457  user.amount */\n      0x00\n      add\n        /* \"contracts/NFTMasterChef.sol\":33446:33484  user.amount = user.amount.add(_amount) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/NFTMasterChef.sol\":33326:33496  if(_amount > 0) {... */\n    tag_269:\n        /* \"contracts/NFTMasterChef.sol\":33524:33572  user.amount.mul(pool.accPowerPerShare).div(1e12) */\n      tag_273\n        /* \"contracts/NFTMasterChef.sol\":33567:33571  1e12 */\n      0xe8d4a51000\n        /* \"contracts/NFTMasterChef.sol\":33524:33562  user.amount.mul(pool.accPowerPerShare) */\n      tag_274\n        /* \"contracts/NFTMasterChef.sol\":33540:33544  pool */\n      dup5\n        /* \"contracts/NFTMasterChef.sol\":33540:33561  pool.accPowerPerShare */\n      0x03\n      add\n      sload\n        /* \"contracts/NFTMasterChef.sol\":33524:33528  user */\n      dup5\n        /* \"contracts/NFTMasterChef.sol\":33524:33535  user.amount */\n      0x00\n      add\n      sload\n        /* \"contracts/NFTMasterChef.sol\":33524:33539  user.amount.mul */\n      tag_179\n      swap1\n        /* \"contracts/NFTMasterChef.sol\":33524:33562  user.amount.mul(pool.accPowerPerShare) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_274:\n        /* \"contracts/NFTMasterChef.sol\":33524:33566  user.amount.mul(pool.accPowerPerShare).div */\n      tag_180\n      swap1\n        /* \"contracts/NFTMasterChef.sol\":33524:33572  user.amount.mul(pool.accPowerPerShare).div(1e12) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_273:\n        /* \"contracts/NFTMasterChef.sol\":33506:33510  user */\n      dup2\n        /* \"contracts/NFTMasterChef.sol\":33506:33521  user.rewardDebt */\n      0x01\n      add\n        /* \"contracts/NFTMasterChef.sol\":33506:33572  user.rewardDebt = user.amount.mul(pool.accPowerPerShare).div(1e12) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/NFTMasterChef.sol\":33608:33609  0 */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":33596:33606  msg.sender */\n      caller\n        /* \"contracts/NFTMasterChef.sol\":33588:33619  Deposit(msg.sender, 0, _amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x90890809c654f11d6e72a28fa60149770a0d11ec6c92319d6ceb2bb0a4ea1a15\n        /* \"contracts/NFTMasterChef.sol\":33611:33618  _amount */\n      dup6\n        /* \"contracts/NFTMasterChef.sol\":33588:33619  Deposit(msg.sender, 0, _amount) */\n      mload(0x40)\n      tag_275\n      swap2\n      swap1\n      tag_47\n      jump\t// in\n    tag_275:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/NFTMasterChef.sol\":32876:33627  {... */\n      pop\n      pop\n        /* \"contracts/NFTMasterChef.sol\":32830:33627  function enterStaking(uint256 _amount) public {... */\n      pop\n      jump\t// out\n        /* \"contracts/NFTMasterChef.sol\":31990:32777  function withdraw(uint256 _pid, uint256 _amount) public {... */\n    tag_80:\n        /* \"contracts/NFTMasterChef.sol\":32076:32077  0 */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":32068:32072  _pid */\n      dup3\n        /* \"contracts/NFTMasterChef.sol\":32068:32077  _pid != 0 */\n      sub\n        /* \"contracts/NFTMasterChef.sol\":32059:32109  require (_pid != 0, 'withdraw Power by unstaking') */\n      tag_277\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_278\n      swap1\n      tag_279\n      jump\t// in\n    tag_278:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_277:\n        /* \"contracts/NFTMasterChef.sol\":32122:32143  PoolInfo storage pool */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":32146:32154  poolInfo */\n      0x07\n        /* \"contracts/NFTMasterChef.sol\":32155:32159  _pid */\n      dup4\n        /* \"contracts/NFTMasterChef.sol\":32146:32160  poolInfo[_pid] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_280\n      jumpi\n      tag_281\n      tag_170\n      jump\t// in\n    tag_281:\n    tag_280:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x04\n      mul\n      add\n        /* \"contracts/NFTMasterChef.sol\":32122:32160  PoolInfo storage pool = poolInfo[_pid] */\n      swap1\n      pop\n        /* \"contracts/NFTMasterChef.sol\":32171:32192  UserInfo storage user */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":32195:32203  userInfo */\n      0x08\n        /* \"contracts/NFTMasterChef.sol\":32195:32209  userInfo[_pid] */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":32204:32208  _pid */\n      dup6\n        /* \"contracts/NFTMasterChef.sol\":32195:32209  userInfo[_pid] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/NFTMasterChef.sol\":32195:32221  userInfo[_pid][msg.sender] */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":32210:32220  msg.sender */\n      caller\n        /* \"contracts/NFTMasterChef.sol\":32195:32221  userInfo[_pid][msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/NFTMasterChef.sol\":32171:32221  UserInfo storage user = userInfo[_pid][msg.sender] */\n      swap1\n      pop\n        /* \"contracts/NFTMasterChef.sol\":32255:32262  _amount */\n      dup3\n        /* \"contracts/NFTMasterChef.sol\":32240:32244  user */\n      dup2\n        /* \"contracts/NFTMasterChef.sol\":32240:32251  user.amount */\n      0x00\n      add\n      sload\n        /* \"contracts/NFTMasterChef.sol\":32240:32262  user.amount >= _amount */\n      lt\n      iszero\n        /* \"contracts/NFTMasterChef.sol\":32232:32285  require(user.amount >= _amount, \"withdraw: not good\") */\n      tag_283\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_284\n      swap1\n      tag_174\n      jump\t// in\n    tag_284:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_283:\n        /* \"contracts/NFTMasterChef.sol\":32296:32312  updatePool(_pid) */\n      tag_285\n        /* \"contracts/NFTMasterChef.sol\":32307:32311  _pid */\n      dup5\n        /* \"contracts/NFTMasterChef.sol\":32296:32306  updatePool */\n      tag_93\n        /* \"contracts/NFTMasterChef.sol\":32296:32312  updatePool(_pid) */\n      jump\t// in\n    tag_285:\n        /* \"contracts/NFTMasterChef.sol\":32323:32338  uint256 pending */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":32341:32410  user.amount.mul(pool.accPowerPerShare).div(1e12).sub(user.rewardDebt) */\n      tag_286\n        /* \"contracts/NFTMasterChef.sol\":32394:32398  user */\n      dup3\n        /* \"contracts/NFTMasterChef.sol\":32394:32409  user.rewardDebt */\n      0x01\n      add\n      sload\n        /* \"contracts/NFTMasterChef.sol\":32341:32389  user.amount.mul(pool.accPowerPerShare).div(1e12) */\n      tag_287\n        /* \"contracts/NFTMasterChef.sol\":32384:32388  1e12 */\n      0xe8d4a51000\n        /* \"contracts/NFTMasterChef.sol\":32341:32379  user.amount.mul(pool.accPowerPerShare) */\n      tag_288\n        /* \"contracts/NFTMasterChef.sol\":32357:32361  pool */\n      dup8\n        /* \"contracts/NFTMasterChef.sol\":32357:32378  pool.accPowerPerShare */\n      0x03\n      add\n      sload\n        /* \"contracts/NFTMasterChef.sol\":32341:32345  user */\n      dup8\n        /* \"contracts/NFTMasterChef.sol\":32341:32352  user.amount */\n      0x00\n      add\n      sload\n        /* \"contracts/NFTMasterChef.sol\":32341:32356  user.amount.mul */\n      tag_179\n      swap1\n        /* \"contracts/NFTMasterChef.sol\":32341:32379  user.amount.mul(pool.accPowerPerShare) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_288:\n        /* \"contracts/NFTMasterChef.sol\":32341:32383  user.amount.mul(pool.accPowerPerShare).div */\n      tag_180\n      swap1\n        /* \"contracts/NFTMasterChef.sol\":32341:32389  user.amount.mul(pool.accPowerPerShare).div(1e12) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_287:\n        /* \"contracts/NFTMasterChef.sol\":32341:32393  user.amount.mul(pool.accPowerPerShare).div(1e12).sub */\n      tag_181\n      swap1\n        /* \"contracts/NFTMasterChef.sol\":32341:32410  user.amount.mul(pool.accPowerPerShare).div(1e12).sub(user.rewardDebt) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_286:\n        /* \"contracts/NFTMasterChef.sol\":32323:32410  uint256 pending = user.amount.mul(pool.accPowerPerShare).div(1e12).sub(user.rewardDebt) */\n      swap1\n      pop\n        /* \"contracts/NFTMasterChef.sol\":32434:32435  0 */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":32424:32431  pending */\n      dup2\n        /* \"contracts/NFTMasterChef.sol\":32424:32435  pending > 0 */\n      gt\n        /* \"contracts/NFTMasterChef.sol\":32421:32527  if(pending > 0){... */\n      iszero\n      tag_289\n      jumpi\n        /* \"contracts/NFTMasterChef.sol\":32478:32515  powerBalance[msg.sender].add(pending) */\n      tag_290\n        /* \"contracts/NFTMasterChef.sol\":32507:32514  pending */\n      dup2\n        /* \"contracts/NFTMasterChef.sol\":32478:32490  powerBalance */\n      0x0b\n        /* \"contracts/NFTMasterChef.sol\":32478:32502  powerBalance[msg.sender] */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":32491:32501  msg.sender */\n      caller\n        /* \"contracts/NFTMasterChef.sol\":32478:32502  powerBalance[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/NFTMasterChef.sol\":32478:32506  powerBalance[msg.sender].add */\n      tag_184\n      swap1\n        /* \"contracts/NFTMasterChef.sol\":32478:32515  powerBalance[msg.sender].add(pending) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_290:\n        /* \"contracts/NFTMasterChef.sol\":32451:32463  powerBalance */\n      0x0b\n        /* \"contracts/NFTMasterChef.sol\":32451:32475  powerBalance[msg.sender] */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":32464:32474  msg.sender */\n      caller\n        /* \"contracts/NFTMasterChef.sol\":32451:32475  powerBalance[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/NFTMasterChef.sol\":32451:32515  powerBalance[msg.sender] = powerBalance[msg.sender].add(pending) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/NFTMasterChef.sol\":32421:32527  if(pending > 0){... */\n    tag_289:\n        /* \"contracts/NFTMasterChef.sol\":32551:32575  user.amount.sub(_amount) */\n      tag_291\n        /* \"contracts/NFTMasterChef.sol\":32567:32574  _amount */\n      dup5\n        /* \"contracts/NFTMasterChef.sol\":32551:32555  user */\n      dup4\n        /* \"contracts/NFTMasterChef.sol\":32551:32562  user.amount */\n      0x00\n      add\n      sload\n        /* \"contracts/NFTMasterChef.sol\":32551:32566  user.amount.sub */\n      tag_181\n      swap1\n        /* \"contracts/NFTMasterChef.sol\":32551:32575  user.amount.sub(_amount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_291:\n        /* \"contracts/NFTMasterChef.sol\":32537:32541  user */\n      dup3\n        /* \"contracts/NFTMasterChef.sol\":32537:32548  user.amount */\n      0x00\n      add\n        /* \"contracts/NFTMasterChef.sol\":32537:32575  user.amount = user.amount.sub(_amount) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/NFTMasterChef.sol\":32604:32652  user.amount.mul(pool.accPowerPerShare).div(1e12) */\n      tag_292\n        /* \"contracts/NFTMasterChef.sol\":32647:32651  1e12 */\n      0xe8d4a51000\n        /* \"contracts/NFTMasterChef.sol\":32604:32642  user.amount.mul(pool.accPowerPerShare) */\n      tag_293\n        /* \"contracts/NFTMasterChef.sol\":32620:32624  pool */\n      dup6\n        /* \"contracts/NFTMasterChef.sol\":32620:32641  pool.accPowerPerShare */\n      0x03\n      add\n      sload\n        /* \"contracts/NFTMasterChef.sol\":32604:32608  user */\n      dup6\n        /* \"contracts/NFTMasterChef.sol\":32604:32615  user.amount */\n      0x00\n      add\n      sload\n        /* \"contracts/NFTMasterChef.sol\":32604:32619  user.amount.mul */\n      tag_179\n      swap1\n        /* \"contracts/NFTMasterChef.sol\":32604:32642  user.amount.mul(pool.accPowerPerShare) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_293:\n        /* \"contracts/NFTMasterChef.sol\":32604:32646  user.amount.mul(pool.accPowerPerShare).div */\n      tag_180\n      swap1\n        /* \"contracts/NFTMasterChef.sol\":32604:32652  user.amount.mul(pool.accPowerPerShare).div(1e12) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_292:\n        /* \"contracts/NFTMasterChef.sol\":32586:32590  user */\n      dup3\n        /* \"contracts/NFTMasterChef.sol\":32586:32601  user.rewardDebt */\n      0x01\n      add\n        /* \"contracts/NFTMasterChef.sol\":32586:32652  user.rewardDebt = user.amount.mul(pool.accPowerPerShare).div(1e12) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/NFTMasterChef.sol\":32663:32718  pool.lpToken.safeTransfer(address(msg.sender), _amount) */\n      tag_294\n        /* \"contracts/NFTMasterChef.sol\":32697:32707  msg.sender */\n      caller\n        /* \"contracts/NFTMasterChef.sol\":32710:32717  _amount */\n      dup6\n        /* \"contracts/NFTMasterChef.sol\":32663:32667  pool */\n      dup6\n        /* \"contracts/NFTMasterChef.sol\":32663:32675  pool.lpToken */\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/NFTMasterChef.sol\":32663:32688  pool.lpToken.safeTransfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_188\n      swap1\n        /* \"contracts/NFTMasterChef.sol\":32663:32718  pool.lpToken.safeTransfer(address(msg.sender), _amount) */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_294:\n        /* \"contracts/NFTMasterChef.sol\":32755:32759  _pid */\n      dup5\n        /* \"contracts/NFTMasterChef.sol\":32743:32753  msg.sender */\n      caller\n        /* \"contracts/NFTMasterChef.sol\":32734:32769  Withdraw(msg.sender, _pid, _amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xf279e6a1f5e320cca91135676d9cb6e44ca8a08c0b88342bcdb1144f6511b568\n        /* \"contracts/NFTMasterChef.sol\":32761:32768  _amount */\n      dup7\n        /* \"contracts/NFTMasterChef.sol\":32734:32769  Withdraw(msg.sender, _pid, _amount) */\n      mload(0x40)\n      tag_295\n      swap2\n      swap1\n      tag_47\n      jump\t// in\n    tag_295:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/NFTMasterChef.sol\":32046:32777  {... */\n      pop\n      pop\n      pop\n        /* \"contracts/NFTMasterChef.sol\":31990:32777  function withdraw(uint256 _pid, uint256 _amount) public {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/NFTMasterChef.sol\":28500:28991  function migrate(uint256 _pid) public {... */\n    tag_83:\n        /* \"contracts/NFTMasterChef.sol\":28586:28587  0 */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":28557:28588  address(migrator) != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/NFTMasterChef.sol\":28565:28573  migrator */\n      0x06\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/NFTMasterChef.sol\":28557:28588  address(migrator) != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"contracts/NFTMasterChef.sol\":28549:28613  require(address(migrator) != address(0), \"migrate: no migrator\") */\n      tag_297\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_298\n      swap1\n      tag_299\n      jump\t// in\n    tag_298:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_297:\n        /* \"contracts/NFTMasterChef.sol\":28624:28645  PoolInfo storage pool */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":28648:28656  poolInfo */\n      0x07\n        /* \"contracts/NFTMasterChef.sol\":28657:28661  _pid */\n      dup3\n        /* \"contracts/NFTMasterChef.sol\":28648:28662  poolInfo[_pid] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_300\n      jumpi\n      tag_301\n      tag_170\n      jump\t// in\n    tag_301:\n    tag_300:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x04\n      mul\n      add\n        /* \"contracts/NFTMasterChef.sol\":28624:28662  PoolInfo storage pool = poolInfo[_pid] */\n      swap1\n      pop\n        /* \"contracts/NFTMasterChef.sol\":28673:28687  IERC20 lpToken */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":28690:28694  pool */\n      dup2\n        /* \"contracts/NFTMasterChef.sol\":28690:28702  pool.lpToken */\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/NFTMasterChef.sol\":28673:28702  IERC20 lpToken = pool.lpToken */\n      swap1\n      pop\n        /* \"contracts/NFTMasterChef.sol\":28713:28724  uint256 bal */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":28727:28734  lpToken */\n      dup2\n        /* \"contracts/NFTMasterChef.sol\":28727:28744  lpToken.balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"contracts/NFTMasterChef.sol\":28753:28757  this */\n      address\n        /* \"contracts/NFTMasterChef.sol\":28727:28759  lpToken.balanceOf(address(this)) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_303\n      swap2\n      swap1\n      tag_131\n      jump\t// in\n    tag_303:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_305\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_305:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_306\n      swap2\n      swap1\n      tag_202\n      jump\t// in\n    tag_306:\n        /* \"contracts/NFTMasterChef.sol\":28713:28759  uint256 bal = lpToken.balanceOf(address(this)) */\n      swap1\n      pop\n        /* \"contracts/NFTMasterChef.sol\":28770:28813  lpToken.safeApprove(address(migrator), bal) */\n      tag_307\n        /* \"contracts/NFTMasterChef.sol\":28798:28806  migrator */\n      0x06\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/NFTMasterChef.sol\":28809:28812  bal */\n      dup3\n        /* \"contracts/NFTMasterChef.sol\":28770:28777  lpToken */\n      dup5\n        /* \"contracts/NFTMasterChef.sol\":28770:28789  lpToken.safeApprove */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_308\n      swap1\n        /* \"contracts/NFTMasterChef.sol\":28770:28813  lpToken.safeApprove(address(migrator), bal) */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_307:\n        /* \"contracts/NFTMasterChef.sol\":28824:28841  IERC20 newLpToken */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":28844:28852  migrator */\n      0x06\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/NFTMasterChef.sol\":28844:28860  migrator.migrate */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xce5494bb\n        /* \"contracts/NFTMasterChef.sol\":28861:28868  lpToken */\n      dup5\n        /* \"contracts/NFTMasterChef.sol\":28844:28869  migrator.migrate(lpToken) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_309\n      swap2\n      swap1\n      tag_145\n      jump\t// in\n    tag_309:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_311\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_311:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_312\n      swap2\n      swap1\n      tag_313\n      jump\t// in\n    tag_312:\n        /* \"contracts/NFTMasterChef.sol\":28824:28869  IERC20 newLpToken = migrator.migrate(lpToken) */\n      swap1\n      pop\n        /* \"contracts/NFTMasterChef.sol\":28895:28905  newLpToken */\n      dup1\n        /* \"contracts/NFTMasterChef.sol\":28895:28915  newLpToken.balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"contracts/NFTMasterChef.sol\":28924:28928  this */\n      address\n        /* \"contracts/NFTMasterChef.sol\":28895:28930  newLpToken.balanceOf(address(this)) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_314\n      swap2\n      swap1\n      tag_131\n      jump\t// in\n    tag_314:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_316\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_316:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_317\n      swap2\n      swap1\n      tag_202\n      jump\t// in\n    tag_317:\n        /* \"contracts/NFTMasterChef.sol\":28888:28891  bal */\n      dup3\n        /* \"contracts/NFTMasterChef.sol\":28888:28930  bal == newLpToken.balanceOf(address(this)) */\n      eq\n        /* \"contracts/NFTMasterChef.sol\":28880:28947  require(bal == newLpToken.balanceOf(address(this)), \"migrate: bad\") */\n      tag_318\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_319\n      swap1\n      tag_320\n      jump\t// in\n    tag_319:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_318:\n        /* \"contracts/NFTMasterChef.sol\":28973:28983  newLpToken */\n      dup1\n        /* \"contracts/NFTMasterChef.sol\":28958:28962  pool */\n      dup5\n        /* \"contracts/NFTMasterChef.sol\":28958:28970  pool.lpToken */\n      0x00\n      add\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":28958:28983  pool.lpToken = newLpToken */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/NFTMasterChef.sol\":28538:28991  {... */\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/NFTMasterChef.sol\":28500:28991  function migrate(uint256 _pid) public {... */\n      pop\n      jump\t// out\n        /* \"contracts/NFTMasterChef.sol\":24326:24351  uint256 public startBlock */\n    tag_85:\n      sload(0x0a)\n      dup2\n      jump\t// out\n        /* \"contracts/NFTMasterChef.sol\":25352:25558  function addNFT(IERC721 _NFT, uint256 _power) public onlyOwner {... */\n    tag_90:\n        /* \"contracts/NFTMasterChef.sol\":20336:20348  _msgSender() */\n      tag_322\n        /* \"contracts/NFTMasterChef.sol\":20336:20346  _msgSender */\n      tag_234\n        /* \"contracts/NFTMasterChef.sol\":20336:20348  _msgSender() */\n      jump\t// in\n    tag_322:\n        /* \"contracts/NFTMasterChef.sol\":20325:20348  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/NFTMasterChef.sol\":20325:20332  owner() */\n      tag_323\n        /* \"contracts/NFTMasterChef.sol\":20325:20330  owner */\n      tag_129\n        /* \"contracts/NFTMasterChef.sol\":20325:20332  owner() */\n      jump\t// in\n    tag_323:\n        /* \"contracts/NFTMasterChef.sol\":20325:20348  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/NFTMasterChef.sol\":20317:20385  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_324\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_325\n      swap1\n      tag_238\n      jump\t// in\n    tag_325:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_324:\n        /* \"contracts/NFTMasterChef.sol\":25426:25434  nftsInfo */\n      0x01\n        /* \"contracts/NFTMasterChef.sol\":25454:25539  NFTsInfo({... */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n        /* \"contracts/NFTMasterChef.sol\":25487:25491  _NFT */\n      dup5\n        /* \"contracts/NFTMasterChef.sol\":25454:25539  NFTsInfo({... */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/NFTMasterChef.sol\":25517:25523  _power */\n      dup4\n        /* \"contracts/NFTMasterChef.sol\":25454:25539  NFTsInfo({... */\n      dup2\n      mstore\n      pop\n        /* \"contracts/NFTMasterChef.sol\":25426:25550  nftsInfo.push(... */\n      swap1\n      dup1\n      0x01\n      dup2\n      sload\n      add\n      dup1\n      dup3\n      sstore\n      dup1\n      swap2\n      pop\n      pop\n      0x01\n      swap1\n      sub\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x02\n      mul\n      add\n      0x00\n      swap1\n      swap2\n      swap1\n      swap2\n      swap1\n      swap2\n      pop\n      0x00\n      dup3\n      add\n      mload\n      dup2\n      0x00\n      add\n      exp(0x0100, 0x00)\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n      0x20\n      dup3\n      add\n      mload\n      dup2\n      0x01\n      add\n      sstore\n      pop\n      pop\n        /* \"contracts/NFTMasterChef.sol\":25352:25558  function addNFT(IERC721 _NFT, uint256 _power) public onlyOwner {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/NFTMasterChef.sol\":30382:31072  function updatePool(uint256 _pid) public {... */\n    tag_93:\n        /* \"contracts/NFTMasterChef.sol\":30434:30455  PoolInfo storage pool */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":30458:30466  poolInfo */\n      0x07\n        /* \"contracts/NFTMasterChef.sol\":30467:30471  _pid */\n      dup3\n        /* \"contracts/NFTMasterChef.sol\":30458:30472  poolInfo[_pid] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_329\n      jumpi\n      tag_330\n      tag_170\n      jump\t// in\n    tag_330:\n    tag_329:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x04\n      mul\n      add\n        /* \"contracts/NFTMasterChef.sol\":30434:30472  PoolInfo storage pool = poolInfo[_pid] */\n      swap1\n      pop\n        /* \"contracts/NFTMasterChef.sol\":30503:30507  pool */\n      dup1\n        /* \"contracts/NFTMasterChef.sol\":30503:30523  pool.lastRewardBlock */\n      0x02\n      add\n      sload\n        /* \"contracts/NFTMasterChef.sol\":30487:30499  block.number */\n      number\n        /* \"contracts/NFTMasterChef.sol\":30487:30523  block.number <= pool.lastRewardBlock */\n      gt\n        /* \"contracts/NFTMasterChef.sol\":30483:30558  if (block.number <= pool.lastRewardBlock) {... */\n      tag_332\n      jumpi\n        /* \"contracts/NFTMasterChef.sol\":30540:30547  return; */\n      pop\n      jump(tag_328)\n        /* \"contracts/NFTMasterChef.sol\":30483:30558  if (block.number <= pool.lastRewardBlock) {... */\n    tag_332:\n        /* \"contracts/NFTMasterChef.sol\":30568:30584  uint256 lpSupply */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":30587:30591  pool */\n      dup2\n        /* \"contracts/NFTMasterChef.sol\":30587:30599  pool.lpToken */\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/NFTMasterChef.sol\":30587:30609  pool.lpToken.balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"contracts/NFTMasterChef.sol\":30618:30622  this */\n      address\n        /* \"contracts/NFTMasterChef.sol\":30587:30624  pool.lpToken.balanceOf(address(this)) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_333\n      swap2\n      swap1\n      tag_131\n      jump\t// in\n    tag_333:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_335\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_335:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_336\n      swap2\n      swap1\n      tag_202\n      jump\t// in\n    tag_336:\n        /* \"contracts/NFTMasterChef.sol\":30568:30624  uint256 lpSupply = pool.lpToken.balanceOf(address(this)) */\n      swap1\n      pop\n        /* \"contracts/NFTMasterChef.sol\":30651:30652  0 */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":30639:30647  lpSupply */\n      dup2\n        /* \"contracts/NFTMasterChef.sol\":30639:30652  lpSupply <= 0 */\n      gt\n        /* \"contracts/NFTMasterChef.sol\":30635:30737  if (lpSupply <= 0) {... */\n      tag_337\n      jumpi\n        /* \"contracts/NFTMasterChef.sol\":30692:30704  block.number */\n      number\n        /* \"contracts/NFTMasterChef.sol\":30669:30673  pool */\n      dup3\n        /* \"contracts/NFTMasterChef.sol\":30669:30689  pool.lastRewardBlock */\n      0x02\n      add\n        /* \"contracts/NFTMasterChef.sol\":30669:30704  pool.lastRewardBlock = block.number */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/NFTMasterChef.sol\":30719:30726  return; */\n      pop\n      pop\n      jump(tag_328)\n        /* \"contracts/NFTMasterChef.sol\":30635:30737  if (lpSupply <= 0) {... */\n    tag_337:\n        /* \"contracts/NFTMasterChef.sol\":30747:30765  uint256 multiplier */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":30768:30817  getMultiplier(pool.lastRewardBlock, block.number) */\n      tag_338\n        /* \"contracts/NFTMasterChef.sol\":30782:30786  pool */\n      dup4\n        /* \"contracts/NFTMasterChef.sol\":30782:30802  pool.lastRewardBlock */\n      0x02\n      add\n      sload\n        /* \"contracts/NFTMasterChef.sol\":30804:30816  block.number */\n      number\n        /* \"contracts/NFTMasterChef.sol\":30768:30781  getMultiplier */\n      tag_134\n        /* \"contracts/NFTMasterChef.sol\":30768:30817  getMultiplier(pool.lastRewardBlock, block.number) */\n      jump\t// in\n    tag_338:\n        /* \"contracts/NFTMasterChef.sol\":30747:30817  uint256 multiplier = getMultiplier(pool.lastRewardBlock, block.number) */\n      swap1\n      pop\n        /* \"contracts/NFTMasterChef.sol\":30828:30847  uint256 PowerReward */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":30850:30921  multiplier.mul(PowerPerBlock).mul(pool.allocPoint).div(totalAllocPoint) */\n      tag_339\n        /* \"contracts/NFTMasterChef.sol\":30905:30920  totalAllocPoint */\n      sload(0x09)\n        /* \"contracts/NFTMasterChef.sol\":30850:30900  multiplier.mul(PowerPerBlock).mul(pool.allocPoint) */\n      tag_340\n        /* \"contracts/NFTMasterChef.sol\":30884:30888  pool */\n      dup7\n        /* \"contracts/NFTMasterChef.sol\":30884:30899  pool.allocPoint */\n      0x01\n      add\n      sload\n        /* \"contracts/NFTMasterChef.sol\":30850:30879  multiplier.mul(PowerPerBlock) */\n      tag_341\n        /* \"contracts/NFTMasterChef.sol\":30865:30878  PowerPerBlock */\n      sload(0x04)\n        /* \"contracts/NFTMasterChef.sol\":30850:30860  multiplier */\n      dup8\n        /* \"contracts/NFTMasterChef.sol\":30850:30864  multiplier.mul */\n      tag_179\n      swap1\n        /* \"contracts/NFTMasterChef.sol\":30850:30879  multiplier.mul(PowerPerBlock) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_341:\n        /* \"contracts/NFTMasterChef.sol\":30850:30883  multiplier.mul(PowerPerBlock).mul */\n      tag_179\n      swap1\n        /* \"contracts/NFTMasterChef.sol\":30850:30900  multiplier.mul(PowerPerBlock).mul(pool.allocPoint) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_340:\n        /* \"contracts/NFTMasterChef.sol\":30850:30904  multiplier.mul(PowerPerBlock).mul(pool.allocPoint).div */\n      tag_180\n      swap1\n        /* \"contracts/NFTMasterChef.sol\":30850:30921  multiplier.mul(PowerPerBlock).mul(pool.allocPoint).div(totalAllocPoint) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_339:\n        /* \"contracts/NFTMasterChef.sol\":30828:30921  uint256 PowerReward = multiplier.mul(PowerPerBlock).mul(pool.allocPoint).div(totalAllocPoint) */\n      swap1\n      pop\n        /* \"contracts/NFTMasterChef.sol\":30956:31018  pool.accPowerPerShare.add(PowerReward.mul(1e12).div(lpSupply)) */\n      tag_342\n        /* \"contracts/NFTMasterChef.sol\":30982:31017  PowerReward.mul(1e12).div(lpSupply) */\n      tag_343\n        /* \"contracts/NFTMasterChef.sol\":31008:31016  lpSupply */\n      dup5\n        /* \"contracts/NFTMasterChef.sol\":30982:31003  PowerReward.mul(1e12) */\n      tag_344\n        /* \"contracts/NFTMasterChef.sol\":30998:31002  1e12 */\n      0xe8d4a51000\n        /* \"contracts/NFTMasterChef.sol\":30982:30993  PowerReward */\n      dup6\n        /* \"contracts/NFTMasterChef.sol\":30982:30997  PowerReward.mul */\n      tag_179\n      swap1\n        /* \"contracts/NFTMasterChef.sol\":30982:31003  PowerReward.mul(1e12) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_344:\n        /* \"contracts/NFTMasterChef.sol\":30982:31007  PowerReward.mul(1e12).div */\n      tag_180\n      swap1\n        /* \"contracts/NFTMasterChef.sol\":30982:31017  PowerReward.mul(1e12).div(lpSupply) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_343:\n        /* \"contracts/NFTMasterChef.sol\":30956:30960  pool */\n      dup6\n        /* \"contracts/NFTMasterChef.sol\":30956:30977  pool.accPowerPerShare */\n      0x03\n      add\n      sload\n        /* \"contracts/NFTMasterChef.sol\":30956:30981  pool.accPowerPerShare.add */\n      tag_184\n      swap1\n        /* \"contracts/NFTMasterChef.sol\":30956:31018  pool.accPowerPerShare.add(PowerReward.mul(1e12).div(lpSupply)) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_342:\n        /* \"contracts/NFTMasterChef.sol\":30932:30936  pool */\n      dup5\n        /* \"contracts/NFTMasterChef.sol\":30932:30953  pool.accPowerPerShare */\n      0x03\n      add\n        /* \"contracts/NFTMasterChef.sol\":30932:31018  pool.accPowerPerShare = pool.accPowerPerShare.add(PowerReward.mul(1e12).div(lpSupply)) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/NFTMasterChef.sol\":31052:31064  block.number */\n      number\n        /* \"contracts/NFTMasterChef.sol\":31029:31033  pool */\n      dup5\n        /* \"contracts/NFTMasterChef.sol\":31029:31049  pool.lastRewardBlock */\n      0x02\n      add\n        /* \"contracts/NFTMasterChef.sol\":31029:31064  pool.lastRewardBlock = block.number */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/NFTMasterChef.sol\":30423:31072  {... */\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/NFTMasterChef.sol\":30382:31072  function updatePool(uint256 _pid) public {... */\n    tag_328:\n      pop\n      jump\t// out\n        /* \"contracts/NFTMasterChef.sol\":34505:34861  function emergencyWithdraw(uint256 _pid) public {... */\n    tag_96:\n        /* \"contracts/NFTMasterChef.sol\":34564:34585  PoolInfo storage pool */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":34588:34596  poolInfo */\n      0x07\n        /* \"contracts/NFTMasterChef.sol\":34597:34601  _pid */\n      dup3\n        /* \"contracts/NFTMasterChef.sol\":34588:34602  poolInfo[_pid] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_346\n      jumpi\n      tag_347\n      tag_170\n      jump\t// in\n    tag_347:\n    tag_346:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x04\n      mul\n      add\n        /* \"contracts/NFTMasterChef.sol\":34564:34602  PoolInfo storage pool = poolInfo[_pid] */\n      swap1\n      pop\n        /* \"contracts/NFTMasterChef.sol\":34613:34634  UserInfo storage user */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":34637:34645  userInfo */\n      0x08\n        /* \"contracts/NFTMasterChef.sol\":34637:34651  userInfo[_pid] */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":34646:34650  _pid */\n      dup5\n        /* \"contracts/NFTMasterChef.sol\":34637:34651  userInfo[_pid] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/NFTMasterChef.sol\":34637:34663  userInfo[_pid][msg.sender] */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":34652:34662  msg.sender */\n      caller\n        /* \"contracts/NFTMasterChef.sol\":34637:34663  userInfo[_pid][msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/NFTMasterChef.sol\":34613:34663  UserInfo storage user = userInfo[_pid][msg.sender] */\n      swap1\n      pop\n        /* \"contracts/NFTMasterChef.sol\":34674:34733  pool.lpToken.safeTransfer(address(msg.sender), user.amount) */\n      tag_349\n        /* \"contracts/NFTMasterChef.sol\":34708:34718  msg.sender */\n      caller\n        /* \"contracts/NFTMasterChef.sol\":34721:34725  user */\n      dup3\n        /* \"contracts/NFTMasterChef.sol\":34721:34732  user.amount */\n      0x00\n      add\n      sload\n        /* \"contracts/NFTMasterChef.sol\":34674:34678  pool */\n      dup5\n        /* \"contracts/NFTMasterChef.sol\":34674:34686  pool.lpToken */\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/NFTMasterChef.sol\":34674:34699  pool.lpToken.safeTransfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_188\n      swap1\n        /* \"contracts/NFTMasterChef.sol\":34674:34733  pool.lpToken.safeTransfer(address(msg.sender), user.amount) */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_349:\n        /* \"contracts/NFTMasterChef.sol\":34779:34783  _pid */\n      dup3\n        /* \"contracts/NFTMasterChef.sol\":34767:34777  msg.sender */\n      caller\n        /* \"contracts/NFTMasterChef.sol\":34749:34797  EmergencyWithdraw(msg.sender, _pid, user.amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xbb757047c2b5f3974fe26b7c10f732e7bce710b0952a71082702781e62ae0595\n        /* \"contracts/NFTMasterChef.sol\":34785:34789  user */\n      dup4\n        /* \"contracts/NFTMasterChef.sol\":34785:34796  user.amount */\n      0x00\n      add\n      sload\n        /* \"contracts/NFTMasterChef.sol\":34749:34797  EmergencyWithdraw(msg.sender, _pid, user.amount) */\n      mload(0x40)\n      tag_350\n      swap2\n      swap1\n      tag_47\n      jump\t// in\n    tag_350:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/NFTMasterChef.sol\":34822:34823  0 */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":34808:34812  user */\n      dup2\n        /* \"contracts/NFTMasterChef.sol\":34808:34819  user.amount */\n      0x00\n      add\n        /* \"contracts/NFTMasterChef.sol\":34808:34823  user.amount = 0 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/NFTMasterChef.sol\":34852:34853  0 */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":34834:34838  user */\n      dup2\n        /* \"contracts/NFTMasterChef.sol\":34834:34849  user.rewardDebt */\n      0x01\n      add\n        /* \"contracts/NFTMasterChef.sol\":34834:34853  user.rewardDebt = 0 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/NFTMasterChef.sol\":34553:34861  {... */\n      pop\n      pop\n        /* \"contracts/NFTMasterChef.sol\":34505:34861  function emergencyWithdraw(uint256 _pid) public {... */\n      pop\n      jump\t// out\n        /* \"contracts/NFTMasterChef.sol\":23707:23735  uint256 public PowerPerBlock */\n    tag_98:\n      sload(0x04)\n      dup2\n      jump\t// out\n        /* \"contracts/NFTMasterChef.sol\":26842:26965  function updateMultiplier(uint256 multiplierNumber) public onlyOwner {... */\n    tag_102:\n        /* \"contracts/NFTMasterChef.sol\":20336:20348  _msgSender() */\n      tag_352\n        /* \"contracts/NFTMasterChef.sol\":20336:20346  _msgSender */\n      tag_234\n        /* \"contracts/NFTMasterChef.sol\":20336:20348  _msgSender() */\n      jump\t// in\n    tag_352:\n        /* \"contracts/NFTMasterChef.sol\":20325:20348  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/NFTMasterChef.sol\":20325:20332  owner() */\n      tag_353\n        /* \"contracts/NFTMasterChef.sol\":20325:20330  owner */\n      tag_129\n        /* \"contracts/NFTMasterChef.sol\":20325:20332  owner() */\n      jump\t// in\n    tag_353:\n        /* \"contracts/NFTMasterChef.sol\":20325:20348  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/NFTMasterChef.sol\":20317:20385  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_354\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_355\n      swap1\n      tag_238\n      jump\t// in\n    tag_355:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_354:\n        /* \"contracts/NFTMasterChef.sol\":26941:26957  multiplierNumber */\n      dup1\n        /* \"contracts/NFTMasterChef.sol\":26922:26938  BONUS_MULTIPLIER */\n      0x05\n        /* \"contracts/NFTMasterChef.sol\":26922:26957  BONUS_MULTIPLIER = multiplierNumber */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/NFTMasterChef.sol\":26842:26965  function updateMultiplier(uint256 multiplierNumber) public onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contracts/NFTMasterChef.sol\":23533:23559  NFTsInfo[] public nftsInfo */\n    tag_105:\n      0x01\n      dup2\n      dup2\n      sload\n      dup2\n      lt\n      tag_357\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_357:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x02\n      mul\n      add\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      dup1\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      dup1\n      0x01\n      add\n      sload\n      swap1\n      pop\n      dup3\n      jump\t// out\n        /* \"contracts/NFTMasterChef.sol\":30126:30306  function massUpdatePools() public {... */\n    tag_109:\n        /* \"contracts/NFTMasterChef.sol\":30171:30185  uint256 length */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":30188:30196  poolInfo */\n      0x07\n        /* \"contracts/NFTMasterChef.sol\":30188:30203  poolInfo.length */\n      dup1\n      sload\n      swap1\n      pop\n        /* \"contracts/NFTMasterChef.sol\":30171:30203  uint256 length = poolInfo.length */\n      swap1\n      pop\n        /* \"contracts/NFTMasterChef.sol\":30219:30230  uint256 pid */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":30214:30299  for (uint256 pid = 0; pid < length; ++pid) {... */\n    tag_360:\n        /* \"contracts/NFTMasterChef.sol\":30242:30248  length */\n      dup2\n        /* \"contracts/NFTMasterChef.sol\":30236:30239  pid */\n      dup2\n        /* \"contracts/NFTMasterChef.sol\":30236:30248  pid < length */\n      lt\n        /* \"contracts/NFTMasterChef.sol\":30214:30299  for (uint256 pid = 0; pid < length; ++pid) {... */\n      iszero\n      tag_361\n      jumpi\n        /* \"contracts/NFTMasterChef.sol\":30272:30287  updatePool(pid) */\n      tag_363\n        /* \"contracts/NFTMasterChef.sol\":30283:30286  pid */\n      dup2\n        /* \"contracts/NFTMasterChef.sol\":30272:30282  updatePool */\n      tag_93\n        /* \"contracts/NFTMasterChef.sol\":30272:30287  updatePool(pid) */\n      jump\t// in\n    tag_363:\n        /* \"contracts/NFTMasterChef.sol\":30250:30255  ++pid */\n      dup1\n      tag_364\n      swap1\n      tag_365\n      jump\t// in\n    tag_364:\n      swap1\n      pop\n        /* \"contracts/NFTMasterChef.sol\":30214:30299  for (uint256 pid = 0; pid < length; ++pid) {... */\n      jump(tag_360)\n    tag_361:\n      pop\n        /* \"contracts/NFTMasterChef.sol\":30160:30306  {... */\n      pop\n        /* \"contracts/NFTMasterChef.sol\":30126:30306  function massUpdatePools() public {... */\n      jump\t// out\n        /* \"contracts/NFTMasterChef.sol\":27894:28199  function set( uint256 _pid, uint256 _allocPoint, bool _withUpdate) public onlyOwner {... */\n    tag_113:\n        /* \"contracts/NFTMasterChef.sol\":20336:20348  _msgSender() */\n      tag_367\n        /* \"contracts/NFTMasterChef.sol\":20336:20346  _msgSender */\n      tag_234\n        /* \"contracts/NFTMasterChef.sol\":20336:20348  _msgSender() */\n      jump\t// in\n    tag_367:\n        /* \"contracts/NFTMasterChef.sol\":20325:20348  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/NFTMasterChef.sol\":20325:20332  owner() */\n      tag_368\n        /* \"contracts/NFTMasterChef.sol\":20325:20330  owner */\n      tag_129\n        /* \"contracts/NFTMasterChef.sol\":20325:20332  owner() */\n      jump\t// in\n    tag_368:\n        /* \"contracts/NFTMasterChef.sol\":20325:20348  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/NFTMasterChef.sol\":20317:20385  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_369\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_370\n      swap1\n      tag_238\n      jump\t// in\n    tag_370:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_369:\n        /* \"contracts/NFTMasterChef.sol\":27993:28004  _withUpdate */\n      dup1\n        /* \"contracts/NFTMasterChef.sol\":27989:28050  if (_withUpdate) {... */\n      iszero\n      tag_372\n      jumpi\n        /* \"contracts/NFTMasterChef.sol\":28021:28038  massUpdatePools() */\n      tag_373\n        /* \"contracts/NFTMasterChef.sol\":28021:28036  massUpdatePools */\n      tag_109\n        /* \"contracts/NFTMasterChef.sol\":28021:28038  massUpdatePools() */\n      jump\t// in\n    tag_373:\n        /* \"contracts/NFTMasterChef.sol\":27989:28050  if (_withUpdate) {... */\n    tag_372:\n        /* \"contracts/NFTMasterChef.sol\":28078:28141  totalAllocPoint.sub(poolInfo[_pid].allocPoint).add(_allocPoint) */\n      tag_374\n        /* \"contracts/NFTMasterChef.sol\":28129:28140  _allocPoint */\n      dup3\n        /* \"contracts/NFTMasterChef.sol\":28078:28124  totalAllocPoint.sub(poolInfo[_pid].allocPoint) */\n      tag_375\n        /* \"contracts/NFTMasterChef.sol\":28098:28106  poolInfo */\n      0x07\n        /* \"contracts/NFTMasterChef.sol\":28107:28111  _pid */\n      dup7\n        /* \"contracts/NFTMasterChef.sol\":28098:28112  poolInfo[_pid] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_376\n      jumpi\n      tag_377\n      tag_170\n      jump\t// in\n    tag_377:\n    tag_376:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x04\n      mul\n      add\n        /* \"contracts/NFTMasterChef.sol\":28098:28123  poolInfo[_pid].allocPoint */\n      0x01\n      add\n      sload\n        /* \"contracts/NFTMasterChef.sol\":28078:28093  totalAllocPoint */\n      sload(0x09)\n        /* \"contracts/NFTMasterChef.sol\":28078:28097  totalAllocPoint.sub */\n      tag_181\n      swap1\n        /* \"contracts/NFTMasterChef.sol\":28078:28124  totalAllocPoint.sub(poolInfo[_pid].allocPoint) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_375:\n        /* \"contracts/NFTMasterChef.sol\":28078:28128  totalAllocPoint.sub(poolInfo[_pid].allocPoint).add */\n      tag_184\n      swap1\n        /* \"contracts/NFTMasterChef.sol\":28078:28141  totalAllocPoint.sub(poolInfo[_pid].allocPoint).add(_allocPoint) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_374:\n        /* \"contracts/NFTMasterChef.sol\":28060:28075  totalAllocPoint */\n      0x09\n        /* \"contracts/NFTMasterChef.sol\":28060:28141  totalAllocPoint = totalAllocPoint.sub(poolInfo[_pid].allocPoint).add(_allocPoint) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/NFTMasterChef.sol\":28180:28191  _allocPoint */\n      dup2\n        /* \"contracts/NFTMasterChef.sol\":28152:28160  poolInfo */\n      0x07\n        /* \"contracts/NFTMasterChef.sol\":28161:28165  _pid */\n      dup5\n        /* \"contracts/NFTMasterChef.sol\":28152:28166  poolInfo[_pid] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_379\n      jumpi\n      tag_380\n      tag_170\n      jump\t// in\n    tag_380:\n    tag_379:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x04\n      mul\n      add\n        /* \"contracts/NFTMasterChef.sol\":28152:28177  poolInfo[_pid].allocPoint */\n      0x01\n      add\n        /* \"contracts/NFTMasterChef.sol\":28152:28191  poolInfo[_pid].allocPoint = _allocPoint */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/NFTMasterChef.sol\":27894:28199  function set( uint256 _pid, uint256 _allocPoint, bool _withUpdate) public onlyOwner {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/NFTMasterChef.sol\":20756:20859  function renounceOwnership() public virtual onlyOwner {... */\n    tag_115:\n        /* \"contracts/NFTMasterChef.sol\":20336:20348  _msgSender() */\n      tag_383\n        /* \"contracts/NFTMasterChef.sol\":20336:20346  _msgSender */\n      tag_234\n        /* \"contracts/NFTMasterChef.sol\":20336:20348  _msgSender() */\n      jump\t// in\n    tag_383:\n        /* \"contracts/NFTMasterChef.sol\":20325:20348  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/NFTMasterChef.sol\":20325:20332  owner() */\n      tag_384\n        /* \"contracts/NFTMasterChef.sol\":20325:20330  owner */\n      tag_129\n        /* \"contracts/NFTMasterChef.sol\":20325:20332  owner() */\n      jump\t// in\n    tag_384:\n        /* \"contracts/NFTMasterChef.sol\":20325:20348  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/NFTMasterChef.sol\":20317:20385  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_385\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_386\n      swap1\n      tag_238\n      jump\t// in\n    tag_386:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_385:\n        /* \"contracts/NFTMasterChef.sol\":20821:20851  _transferOwnership(address(0)) */\n      tag_388\n        /* \"contracts/NFTMasterChef.sol\":20848:20849  0 */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":20821:20839  _transferOwnership */\n      tag_389\n        /* \"contracts/NFTMasterChef.sol\":20821:20851  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_388:\n        /* \"contracts/NFTMasterChef.sol\":20756:20859  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"contracts/NFTMasterChef.sol\":23930:23959  IMigratorChef public migrator */\n    tag_117:\n      0x06\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/NFTMasterChef.sol\":23790:23825  uint256 public BONUS_MULTIPLIER = 1 */\n    tag_121:\n      sload(0x05)\n      dup2\n      jump\t// out\n        /* \"contracts/NFTMasterChef.sol\":25226:25344  function getPowerBalance(address account) public view returns(uint256) {... */\n    tag_126:\n        /* \"contracts/NFTMasterChef.sol\":25288:25295  uint256 */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":25315:25327  powerBalance */\n      0x0b\n        /* \"contracts/NFTMasterChef.sol\":25315:25336  powerBalance[account] */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":25328:25335  account */\n      dup4\n        /* \"contracts/NFTMasterChef.sol\":25315:25336  powerBalance[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/NFTMasterChef.sol\":25308:25336  return powerBalance[account] */\n      swap1\n      pop\n        /* \"contracts/NFTMasterChef.sol\":25226:25344  function getPowerBalance(address account) public view returns(uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/NFTMasterChef.sol\":20105:20192  function owner() public view virtual returns (address) {... */\n    tag_129:\n        /* \"contracts/NFTMasterChef.sol\":20151:20158  address */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":20178:20184  _owner */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/NFTMasterChef.sol\":20171:20184  return _owner */\n      swap1\n      pop\n        /* \"contracts/NFTMasterChef.sol\":20105:20192  function owner() public view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/NFTMasterChef.sol\":29067:29211  function getMultiplier(uint256 _from, uint256 _to) public view returns (uint256) {... */\n    tag_134:\n        /* \"contracts/NFTMasterChef.sol\":29139:29146  uint256 */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":29167:29203  _to.sub(_from).mul(BONUS_MULTIPLIER) */\n      tag_393\n        /* \"contracts/NFTMasterChef.sol\":29186:29202  BONUS_MULTIPLIER */\n      sload(0x05)\n        /* \"contracts/NFTMasterChef.sol\":29167:29181  _to.sub(_from) */\n      tag_394\n        /* \"contracts/NFTMasterChef.sol\":29175:29180  _from */\n      dup6\n        /* \"contracts/NFTMasterChef.sol\":29167:29170  _to */\n      dup6\n        /* \"contracts/NFTMasterChef.sol\":29167:29174  _to.sub */\n      tag_181\n      swap1\n        /* \"contracts/NFTMasterChef.sol\":29167:29181  _to.sub(_from) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_394:\n        /* \"contracts/NFTMasterChef.sol\":29167:29185  _to.sub(_from).mul */\n      tag_179\n      swap1\n        /* \"contracts/NFTMasterChef.sol\":29167:29203  _to.sub(_from).mul(BONUS_MULTIPLIER) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_393:\n        /* \"contracts/NFTMasterChef.sol\":29160:29203  return _to.sub(_from).mul(BONUS_MULTIPLIER) */\n      swap1\n      pop\n        /* \"contracts/NFTMasterChef.sol\":29067:29211  function getMultiplier(uint256 _from, uint256 _to) public view returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/NFTMasterChef.sol\":24075:24139  mapping(uint256 => mapping(address => UserInfo)) public userInfo */\n    tag_139:\n      mstore(0x20, 0x08)\n      dup2\n      0x00\n      mstore\n      mstore(0x20, keccak256(0x00, 0x40))\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap2\n      pop\n      pop\n      dup1\n      0x00\n      add\n      sload\n      swap1\n      dup1\n      0x01\n      add\n      sload\n      swap1\n      pop\n      dup3\n      jump\t// out\n        /* \"contracts/NFTMasterChef.sol\":23593:23610  IERC20 public DDT */\n    tag_143:\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/NFTMasterChef.sol\":34873:34968  function setDevAddress(address _devaddr) public onlyOwner {... */\n    tag_148:\n        /* \"contracts/NFTMasterChef.sol\":20336:20348  _msgSender() */\n      tag_396\n        /* \"contracts/NFTMasterChef.sol\":20336:20346  _msgSender */\n      tag_234\n        /* \"contracts/NFTMasterChef.sol\":20336:20348  _msgSender() */\n      jump\t// in\n    tag_396:\n        /* \"contracts/NFTMasterChef.sol\":20325:20348  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/NFTMasterChef.sol\":20325:20332  owner() */\n      tag_397\n        /* \"contracts/NFTMasterChef.sol\":20325:20330  owner */\n      tag_129\n        /* \"contracts/NFTMasterChef.sol\":20325:20332  owner() */\n      jump\t// in\n    tag_397:\n        /* \"contracts/NFTMasterChef.sol\":20325:20348  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/NFTMasterChef.sol\":20317:20385  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_398\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_399\n      swap1\n      tag_238\n      jump\t// in\n    tag_399:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_398:\n        /* \"contracts/NFTMasterChef.sol\":34952:34960  _devaddr */\n      dup1\n        /* \"contracts/NFTMasterChef.sol\":34942:34949  devaddr */\n      0x03\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":34942:34960  devaddr = _devaddr */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/NFTMasterChef.sol\":34873:34968  function setDevAddress(address _devaddr) public onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contracts/NFTMasterChef.sol\":24360:24407  mapping(address => uint256) public powerBalance */\n    tag_151:\n      mstore(0x20, 0x0b)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      sload\n      dup2\n      jump\t// out\n        /* \"contracts/NFTMasterChef.sol\":23638:23660  address public devaddr */\n    tag_154:\n      0x03\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/NFTMasterChef.sol\":31142:31938  function deposit(uint256 _pid, uint256 _amount) public {... */\n    tag_158:\n        /* \"contracts/NFTMasterChef.sol\":31227:31228  0 */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":31219:31223  _pid */\n      dup3\n        /* \"contracts/NFTMasterChef.sol\":31219:31228  _pid != 0 */\n      sub\n        /* \"contracts/NFTMasterChef.sol\":31210:31257  require (_pid != 0, 'deposit Power by staking') */\n      tag_402\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_403\n      swap1\n      tag_404\n      jump\t// in\n    tag_403:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_402:\n        /* \"contracts/NFTMasterChef.sol\":31270:31291  PoolInfo storage pool */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":31294:31302  poolInfo */\n      0x07\n        /* \"contracts/NFTMasterChef.sol\":31303:31307  _pid */\n      dup4\n        /* \"contracts/NFTMasterChef.sol\":31294:31308  poolInfo[_pid] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_405\n      jumpi\n      tag_406\n      tag_170\n      jump\t// in\n    tag_406:\n    tag_405:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x04\n      mul\n      add\n        /* \"contracts/NFTMasterChef.sol\":31270:31308  PoolInfo storage pool = poolInfo[_pid] */\n      swap1\n      pop\n        /* \"contracts/NFTMasterChef.sol\":31319:31340  UserInfo storage user */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":31343:31351  userInfo */\n      0x08\n        /* \"contracts/NFTMasterChef.sol\":31343:31357  userInfo[_pid] */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":31352:31356  _pid */\n      dup6\n        /* \"contracts/NFTMasterChef.sol\":31343:31357  userInfo[_pid] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/NFTMasterChef.sol\":31343:31369  userInfo[_pid][msg.sender] */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":31358:31368  msg.sender */\n      caller\n        /* \"contracts/NFTMasterChef.sol\":31343:31369  userInfo[_pid][msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/NFTMasterChef.sol\":31319:31369  UserInfo storage user = userInfo[_pid][msg.sender] */\n      swap1\n      pop\n        /* \"contracts/NFTMasterChef.sol\":31380:31396  updatePool(_pid) */\n      tag_408\n        /* \"contracts/NFTMasterChef.sol\":31391:31395  _pid */\n      dup5\n        /* \"contracts/NFTMasterChef.sol\":31380:31390  updatePool */\n      tag_93\n        /* \"contracts/NFTMasterChef.sol\":31380:31396  updatePool(_pid) */\n      jump\t// in\n    tag_408:\n        /* \"contracts/NFTMasterChef.sol\":31425:31426  0 */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":31411:31415  user */\n      dup2\n        /* \"contracts/NFTMasterChef.sol\":31411:31422  user.amount */\n      0x00\n      add\n      sload\n        /* \"contracts/NFTMasterChef.sol\":31411:31426  user.amount > 0 */\n      gt\n        /* \"contracts/NFTMasterChef.sol\":31407:31670  if (user.amount > 0) {... */\n      iszero\n      tag_409\n      jumpi\n        /* \"contracts/NFTMasterChef.sol\":31443:31458  uint256 pending */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":31461:31530  user.amount.mul(pool.accPowerPerShare).div(1e12).sub(user.rewardDebt) */\n      tag_410\n        /* \"contracts/NFTMasterChef.sol\":31514:31518  user */\n      dup3\n        /* \"contracts/NFTMasterChef.sol\":31514:31529  user.rewardDebt */\n      0x01\n      add\n      sload\n        /* \"contracts/NFTMasterChef.sol\":31461:31509  user.amount.mul(pool.accPowerPerShare).div(1e12) */\n      tag_411\n        /* \"contracts/NFTMasterChef.sol\":31504:31508  1e12 */\n      0xe8d4a51000\n        /* \"contracts/NFTMasterChef.sol\":31461:31499  user.amount.mul(pool.accPowerPerShare) */\n      tag_412\n        /* \"contracts/NFTMasterChef.sol\":31477:31481  pool */\n      dup8\n        /* \"contracts/NFTMasterChef.sol\":31477:31498  pool.accPowerPerShare */\n      0x03\n      add\n      sload\n        /* \"contracts/NFTMasterChef.sol\":31461:31465  user */\n      dup8\n        /* \"contracts/NFTMasterChef.sol\":31461:31472  user.amount */\n      0x00\n      add\n      sload\n        /* \"contracts/NFTMasterChef.sol\":31461:31476  user.amount.mul */\n      tag_179\n      swap1\n        /* \"contracts/NFTMasterChef.sol\":31461:31499  user.amount.mul(pool.accPowerPerShare) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_412:\n        /* \"contracts/NFTMasterChef.sol\":31461:31503  user.amount.mul(pool.accPowerPerShare).div */\n      tag_180\n      swap1\n        /* \"contracts/NFTMasterChef.sol\":31461:31509  user.amount.mul(pool.accPowerPerShare).div(1e12) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_411:\n        /* \"contracts/NFTMasterChef.sol\":31461:31513  user.amount.mul(pool.accPowerPerShare).div(1e12).sub */\n      tag_181\n      swap1\n        /* \"contracts/NFTMasterChef.sol\":31461:31530  user.amount.mul(pool.accPowerPerShare).div(1e12).sub(user.rewardDebt) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_410:\n        /* \"contracts/NFTMasterChef.sol\":31443:31530  uint256 pending = user.amount.mul(pool.accPowerPerShare).div(1e12).sub(user.rewardDebt) */\n      swap1\n      pop\n        /* \"contracts/NFTMasterChef.sol\":31558:31559  0 */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":31548:31555  pending */\n      dup2\n        /* \"contracts/NFTMasterChef.sol\":31548:31559  pending > 0 */\n      gt\n        /* \"contracts/NFTMasterChef.sol\":31545:31659  if(pending > 0){... */\n      iszero\n      tag_413\n      jumpi\n        /* \"contracts/NFTMasterChef.sol\":31606:31643  powerBalance[msg.sender].add(pending) */\n      tag_414\n        /* \"contracts/NFTMasterChef.sol\":31635:31642  pending */\n      dup2\n        /* \"contracts/NFTMasterChef.sol\":31606:31618  powerBalance */\n      0x0b\n        /* \"contracts/NFTMasterChef.sol\":31606:31630  powerBalance[msg.sender] */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":31619:31629  msg.sender */\n      caller\n        /* \"contracts/NFTMasterChef.sol\":31606:31630  powerBalance[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/NFTMasterChef.sol\":31606:31634  powerBalance[msg.sender].add */\n      tag_184\n      swap1\n        /* \"contracts/NFTMasterChef.sol\":31606:31643  powerBalance[msg.sender].add(pending) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_414:\n        /* \"contracts/NFTMasterChef.sol\":31579:31591  powerBalance */\n      0x0b\n        /* \"contracts/NFTMasterChef.sol\":31579:31603  powerBalance[msg.sender] */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":31592:31602  msg.sender */\n      caller\n        /* \"contracts/NFTMasterChef.sol\":31579:31603  powerBalance[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/NFTMasterChef.sol\":31579:31643  powerBalance[msg.sender] = powerBalance[msg.sender].add(pending) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/NFTMasterChef.sol\":31545:31659  if(pending > 0){... */\n    tag_413:\n        /* \"contracts/NFTMasterChef.sol\":31428:31670  {... */\n      pop\n        /* \"contracts/NFTMasterChef.sol\":31407:31670  if (user.amount > 0) {... */\n    tag_409:\n        /* \"contracts/NFTMasterChef.sol\":31680:31754  pool.lpToken.safeTransferFrom(address(msg.sender), address(this), _amount) */\n      tag_415\n        /* \"contracts/NFTMasterChef.sol\":31718:31728  msg.sender */\n      caller\n        /* \"contracts/NFTMasterChef.sol\":31739:31743  this */\n      address\n        /* \"contracts/NFTMasterChef.sol\":31746:31753  _amount */\n      dup6\n        /* \"contracts/NFTMasterChef.sol\":31680:31684  pool */\n      dup6\n        /* \"contracts/NFTMasterChef.sol\":31680:31692  pool.lpToken */\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/NFTMasterChef.sol\":31680:31709  pool.lpToken.safeTransferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_271\n      swap1\n        /* \"contracts/NFTMasterChef.sol\":31680:31754  pool.lpToken.safeTransferFrom(address(msg.sender), address(this), _amount) */\n      swap4\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_415:\n        /* \"contracts/NFTMasterChef.sol\":31779:31803  user.amount.add(_amount) */\n      tag_416\n        /* \"contracts/NFTMasterChef.sol\":31795:31802  _amount */\n      dup4\n        /* \"contracts/NFTMasterChef.sol\":31779:31783  user */\n      dup3\n        /* \"contracts/NFTMasterChef.sol\":31779:31790  user.amount */\n      0x00\n      add\n      sload\n        /* \"contracts/NFTMasterChef.sol\":31779:31794  user.amount.add */\n      tag_184\n      swap1\n        /* \"contracts/NFTMasterChef.sol\":31779:31803  user.amount.add(_amount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_416:\n        /* \"contracts/NFTMasterChef.sol\":31765:31769  user */\n      dup2\n        /* \"contracts/NFTMasterChef.sol\":31765:31776  user.amount */\n      0x00\n      add\n        /* \"contracts/NFTMasterChef.sol\":31765:31803  user.amount = user.amount.add(_amount) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/NFTMasterChef.sol\":31832:31880  user.amount.mul(pool.accPowerPerShare).div(1e12) */\n      tag_417\n        /* \"contracts/NFTMasterChef.sol\":31875:31879  1e12 */\n      0xe8d4a51000\n        /* \"contracts/NFTMasterChef.sol\":31832:31870  user.amount.mul(pool.accPowerPerShare) */\n      tag_418\n        /* \"contracts/NFTMasterChef.sol\":31848:31852  pool */\n      dup5\n        /* \"contracts/NFTMasterChef.sol\":31848:31869  pool.accPowerPerShare */\n      0x03\n      add\n      sload\n        /* \"contracts/NFTMasterChef.sol\":31832:31836  user */\n      dup5\n        /* \"contracts/NFTMasterChef.sol\":31832:31843  user.amount */\n      0x00\n      add\n      sload\n        /* \"contracts/NFTMasterChef.sol\":31832:31847  user.amount.mul */\n      tag_179\n      swap1\n        /* \"contracts/NFTMasterChef.sol\":31832:31870  user.amount.mul(pool.accPowerPerShare) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_418:\n        /* \"contracts/NFTMasterChef.sol\":31832:31874  user.amount.mul(pool.accPowerPerShare).div */\n      tag_180\n      swap1\n        /* \"contracts/NFTMasterChef.sol\":31832:31880  user.amount.mul(pool.accPowerPerShare).div(1e12) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_417:\n        /* \"contracts/NFTMasterChef.sol\":31814:31818  user */\n      dup2\n        /* \"contracts/NFTMasterChef.sol\":31814:31829  user.rewardDebt */\n      0x01\n      add\n        /* \"contracts/NFTMasterChef.sol\":31814:31880  user.rewardDebt = user.amount.mul(pool.accPowerPerShare).div(1e12) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/NFTMasterChef.sol\":31916:31920  _pid */\n      dup4\n        /* \"contracts/NFTMasterChef.sol\":31904:31914  msg.sender */\n      caller\n        /* \"contracts/NFTMasterChef.sol\":31896:31930  Deposit(msg.sender, _pid, _amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x90890809c654f11d6e72a28fa60149770a0d11ec6c92319d6ceb2bb0a4ea1a15\n        /* \"contracts/NFTMasterChef.sol\":31922:31929  _amount */\n      dup6\n        /* \"contracts/NFTMasterChef.sol\":31896:31930  Deposit(msg.sender, _pid, _amount) */\n      mload(0x40)\n      tag_419\n      swap2\n      swap1\n      tag_47\n      jump\t// in\n    tag_419:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/NFTMasterChef.sol\":31197:31938  {... */\n      pop\n      pop\n        /* \"contracts/NFTMasterChef.sol\":31142:31938  function deposit(uint256 _pid, uint256 _amount) public {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/NFTMasterChef.sol\":21014:21215  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_161:\n        /* \"contracts/NFTMasterChef.sol\":20336:20348  _msgSender() */\n      tag_421\n        /* \"contracts/NFTMasterChef.sol\":20336:20346  _msgSender */\n      tag_234\n        /* \"contracts/NFTMasterChef.sol\":20336:20348  _msgSender() */\n      jump\t// in\n    tag_421:\n        /* \"contracts/NFTMasterChef.sol\":20325:20348  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/NFTMasterChef.sol\":20325:20332  owner() */\n      tag_422\n        /* \"contracts/NFTMasterChef.sol\":20325:20330  owner */\n      tag_129\n        /* \"contracts/NFTMasterChef.sol\":20325:20332  owner() */\n      jump\t// in\n    tag_422:\n        /* \"contracts/NFTMasterChef.sol\":20325:20348  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/NFTMasterChef.sol\":20317:20385  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_423\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_424\n      swap1\n      tag_238\n      jump\t// in\n    tag_424:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_423:\n        /* \"contracts/NFTMasterChef.sol\":21123:21124  0 */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":21103:21125  newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/NFTMasterChef.sol\":21103:21111  newOwner */\n      dup2\n        /* \"contracts/NFTMasterChef.sol\":21103:21125  newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"contracts/NFTMasterChef.sol\":21095:21168  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_426\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_427\n      swap1\n      tag_428\n      jump\t// in\n    tag_427:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_426:\n        /* \"contracts/NFTMasterChef.sol\":21179:21207  _transferOwnership(newOwner) */\n      tag_429\n        /* \"contracts/NFTMasterChef.sol\":21198:21206  newOwner */\n      dup2\n        /* \"contracts/NFTMasterChef.sol\":21179:21197  _transferOwnership */\n      tag_389\n        /* \"contracts/NFTMasterChef.sol\":21179:21207  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_429:\n        /* \"contracts/NFTMasterChef.sol\":21014:21215  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contracts/NFTMasterChef.sol\":29276:30043  function pendingPower(uint256 _pid, address _user) external view returns (uint256){... */\n    tag_164:\n        /* \"contracts/NFTMasterChef.sol\":29350:29357  uint256 */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":29369:29390  PoolInfo storage pool */\n      dup1\n        /* \"contracts/NFTMasterChef.sol\":29393:29401  poolInfo */\n      0x07\n        /* \"contracts/NFTMasterChef.sol\":29402:29406  _pid */\n      dup5\n        /* \"contracts/NFTMasterChef.sol\":29393:29407  poolInfo[_pid] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_431\n      jumpi\n      tag_432\n      tag_170\n      jump\t// in\n    tag_432:\n    tag_431:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x04\n      mul\n      add\n        /* \"contracts/NFTMasterChef.sol\":29369:29407  PoolInfo storage pool = poolInfo[_pid] */\n      swap1\n      pop\n        /* \"contracts/NFTMasterChef.sol\":29418:29439  UserInfo storage user */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":29442:29450  userInfo */\n      0x08\n        /* \"contracts/NFTMasterChef.sol\":29442:29456  userInfo[_pid] */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":29451:29455  _pid */\n      dup7\n        /* \"contracts/NFTMasterChef.sol\":29442:29456  userInfo[_pid] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/NFTMasterChef.sol\":29442:29463  userInfo[_pid][_user] */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":29457:29462  _user */\n      dup6\n        /* \"contracts/NFTMasterChef.sol\":29442:29463  userInfo[_pid][_user] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/NFTMasterChef.sol\":29418:29463  UserInfo storage user = userInfo[_pid][_user] */\n      swap1\n      pop\n        /* \"contracts/NFTMasterChef.sol\":29474:29498  uint256 accPowerPerShare */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":29501:29505  pool */\n      dup3\n        /* \"contracts/NFTMasterChef.sol\":29501:29522  pool.accPowerPerShare */\n      0x03\n      add\n      sload\n        /* \"contracts/NFTMasterChef.sol\":29474:29522  uint256 accPowerPerShare = pool.accPowerPerShare */\n      swap1\n      pop\n        /* \"contracts/NFTMasterChef.sol\":29533:29549  uint256 lpSupply */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":29552:29556  pool */\n      dup4\n        /* \"contracts/NFTMasterChef.sol\":29552:29564  pool.lpToken */\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/NFTMasterChef.sol\":29552:29574  pool.lpToken.balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"contracts/NFTMasterChef.sol\":29583:29587  this */\n      address\n        /* \"contracts/NFTMasterChef.sol\":29552:29589  pool.lpToken.balanceOf(address(this)) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_434\n      swap2\n      swap1\n      tag_131\n      jump\t// in\n    tag_434:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_436\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_436:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_437\n      swap2\n      swap1\n      tag_202\n      jump\t// in\n    tag_437:\n        /* \"contracts/NFTMasterChef.sol\":29533:29589  uint256 lpSupply = pool.lpToken.balanceOf(address(this)) */\n      swap1\n      pop\n        /* \"contracts/NFTMasterChef.sol\":29619:29623  pool */\n      dup4\n        /* \"contracts/NFTMasterChef.sol\":29619:29639  pool.lastRewardBlock */\n      0x02\n      add\n      sload\n        /* \"contracts/NFTMasterChef.sol\":29604:29616  block.number */\n      number\n        /* \"contracts/NFTMasterChef.sol\":29604:29639  block.number > pool.lastRewardBlock */\n      gt\n        /* \"contracts/NFTMasterChef.sol\":29604:29656  block.number > pool.lastRewardBlock && lpSupply != 0 */\n      dup1\n      iszero\n      tag_438\n      jumpi\n      pop\n        /* \"contracts/NFTMasterChef.sol\":29655:29656  0 */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":29643:29651  lpSupply */\n      dup2\n        /* \"contracts/NFTMasterChef.sol\":29643:29656  lpSupply != 0 */\n      eq\n      iszero\n        /* \"contracts/NFTMasterChef.sol\":29604:29656  block.number > pool.lastRewardBlock && lpSupply != 0 */\n    tag_438:\n        /* \"contracts/NFTMasterChef.sol\":29600:29954  if (block.number > pool.lastRewardBlock && lpSupply != 0) {... */\n      iszero\n      tag_439\n      jumpi\n        /* \"contracts/NFTMasterChef.sol\":29673:29691  uint256 multiplier */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":29694:29743  getMultiplier(pool.lastRewardBlock, block.number) */\n      tag_440\n        /* \"contracts/NFTMasterChef.sol\":29708:29712  pool */\n      dup6\n        /* \"contracts/NFTMasterChef.sol\":29708:29728  pool.lastRewardBlock */\n      0x02\n      add\n      sload\n        /* \"contracts/NFTMasterChef.sol\":29730:29742  block.number */\n      number\n        /* \"contracts/NFTMasterChef.sol\":29694:29707  getMultiplier */\n      tag_134\n        /* \"contracts/NFTMasterChef.sol\":29694:29743  getMultiplier(pool.lastRewardBlock, block.number) */\n      jump\t// in\n    tag_440:\n        /* \"contracts/NFTMasterChef.sol\":29673:29743  uint256 multiplier = getMultiplier(pool.lastRewardBlock, block.number) */\n      swap1\n      pop\n        /* \"contracts/NFTMasterChef.sol\":29758:29777  uint256 PowerReward */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":29780:29851  multiplier.mul(PowerPerBlock).mul(pool.allocPoint).div(totalAllocPoint) */\n      tag_441\n        /* \"contracts/NFTMasterChef.sol\":29835:29850  totalAllocPoint */\n      sload(0x09)\n        /* \"contracts/NFTMasterChef.sol\":29780:29830  multiplier.mul(PowerPerBlock).mul(pool.allocPoint) */\n      tag_442\n        /* \"contracts/NFTMasterChef.sol\":29814:29818  pool */\n      dup9\n        /* \"contracts/NFTMasterChef.sol\":29814:29829  pool.allocPoint */\n      0x01\n      add\n      sload\n        /* \"contracts/NFTMasterChef.sol\":29780:29809  multiplier.mul(PowerPerBlock) */\n      tag_443\n        /* \"contracts/NFTMasterChef.sol\":29795:29808  PowerPerBlock */\n      sload(0x04)\n        /* \"contracts/NFTMasterChef.sol\":29780:29790  multiplier */\n      dup8\n        /* \"contracts/NFTMasterChef.sol\":29780:29794  multiplier.mul */\n      tag_179\n      swap1\n        /* \"contracts/NFTMasterChef.sol\":29780:29809  multiplier.mul(PowerPerBlock) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_443:\n        /* \"contracts/NFTMasterChef.sol\":29780:29813  multiplier.mul(PowerPerBlock).mul */\n      tag_179\n      swap1\n        /* \"contracts/NFTMasterChef.sol\":29780:29830  multiplier.mul(PowerPerBlock).mul(pool.allocPoint) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_442:\n        /* \"contracts/NFTMasterChef.sol\":29780:29834  multiplier.mul(PowerPerBlock).mul(pool.allocPoint).div */\n      tag_180\n      swap1\n        /* \"contracts/NFTMasterChef.sol\":29780:29851  multiplier.mul(PowerPerBlock).mul(pool.allocPoint).div(totalAllocPoint) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_441:\n        /* \"contracts/NFTMasterChef.sol\":29758:29851  uint256 PowerReward = multiplier.mul(PowerPerBlock).mul(pool.allocPoint).div(totalAllocPoint) */\n      swap1\n      pop\n        /* \"contracts/NFTMasterChef.sol\":29885:29942  accPowerPerShare.add(PowerReward.mul(1e12).div(lpSupply)) */\n      tag_444\n        /* \"contracts/NFTMasterChef.sol\":29906:29941  PowerReward.mul(1e12).div(lpSupply) */\n      tag_445\n        /* \"contracts/NFTMasterChef.sol\":29932:29940  lpSupply */\n      dup5\n        /* \"contracts/NFTMasterChef.sol\":29906:29927  PowerReward.mul(1e12) */\n      tag_446\n        /* \"contracts/NFTMasterChef.sol\":29922:29926  1e12 */\n      0xe8d4a51000\n        /* \"contracts/NFTMasterChef.sol\":29906:29917  PowerReward */\n      dup6\n        /* \"contracts/NFTMasterChef.sol\":29906:29921  PowerReward.mul */\n      tag_179\n      swap1\n        /* \"contracts/NFTMasterChef.sol\":29906:29927  PowerReward.mul(1e12) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_446:\n        /* \"contracts/NFTMasterChef.sol\":29906:29931  PowerReward.mul(1e12).div */\n      tag_180\n      swap1\n        /* \"contracts/NFTMasterChef.sol\":29906:29941  PowerReward.mul(1e12).div(lpSupply) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_445:\n        /* \"contracts/NFTMasterChef.sol\":29885:29901  accPowerPerShare */\n      dup6\n        /* \"contracts/NFTMasterChef.sol\":29885:29905  accPowerPerShare.add */\n      tag_184\n      swap1\n        /* \"contracts/NFTMasterChef.sol\":29885:29942  accPowerPerShare.add(PowerReward.mul(1e12).div(lpSupply)) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_444:\n        /* \"contracts/NFTMasterChef.sol\":29866:29942  accPowerPerShare = accPowerPerShare.add(PowerReward.mul(1e12).div(lpSupply)) */\n      swap4\n      pop\n        /* \"contracts/NFTMasterChef.sol\":29658:29954  {... */\n      pop\n      pop\n        /* \"contracts/NFTMasterChef.sol\":29600:29954  if (block.number > pool.lastRewardBlock && lpSupply != 0) {... */\n    tag_439:\n        /* \"contracts/NFTMasterChef.sol\":29971:30035  user.amount.mul(accPowerPerShare).div(1e12).sub(user.rewardDebt) */\n      tag_447\n        /* \"contracts/NFTMasterChef.sol\":30019:30023  user */\n      dup4\n        /* \"contracts/NFTMasterChef.sol\":30019:30034  user.rewardDebt */\n      0x01\n      add\n      sload\n        /* \"contracts/NFTMasterChef.sol\":29971:30014  user.amount.mul(accPowerPerShare).div(1e12) */\n      tag_448\n        /* \"contracts/NFTMasterChef.sol\":30009:30013  1e12 */\n      0xe8d4a51000\n        /* \"contracts/NFTMasterChef.sol\":29971:30004  user.amount.mul(accPowerPerShare) */\n      tag_449\n        /* \"contracts/NFTMasterChef.sol\":29987:30003  accPowerPerShare */\n      dup7\n        /* \"contracts/NFTMasterChef.sol\":29971:29975  user */\n      dup9\n        /* \"contracts/NFTMasterChef.sol\":29971:29982  user.amount */\n      0x00\n      add\n      sload\n        /* \"contracts/NFTMasterChef.sol\":29971:29986  user.amount.mul */\n      tag_179\n      swap1\n        /* \"contracts/NFTMasterChef.sol\":29971:30004  user.amount.mul(accPowerPerShare) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_449:\n        /* \"contracts/NFTMasterChef.sol\":29971:30008  user.amount.mul(accPowerPerShare).div */\n      tag_180\n      swap1\n        /* \"contracts/NFTMasterChef.sol\":29971:30014  user.amount.mul(accPowerPerShare).div(1e12) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_448:\n        /* \"contracts/NFTMasterChef.sol\":29971:30018  user.amount.mul(accPowerPerShare).div(1e12).sub */\n      tag_181\n      swap1\n        /* \"contracts/NFTMasterChef.sol\":29971:30035  user.amount.mul(accPowerPerShare).div(1e12).sub(user.rewardDebt) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_447:\n        /* \"contracts/NFTMasterChef.sol\":29964:30035  return user.amount.mul(accPowerPerShare).div(1e12).sub(user.rewardDebt) */\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/NFTMasterChef.sol\":29276:30043  function pendingPower(uint256 _pid, address _user) external view returns (uint256){... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/NFTMasterChef.sol\":1757:2228  function mul(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_179:\n        /* \"contracts/NFTMasterChef.sol\":1815:1822  uint256 */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":2065:2066  0 */\n      dup1\n        /* \"contracts/NFTMasterChef.sol\":2060:2061  a */\n      dup4\n        /* \"contracts/NFTMasterChef.sol\":2060:2066  a == 0 */\n      sub\n        /* \"contracts/NFTMasterChef.sol\":2056:2103  if (a == 0) {... */\n      tag_451\n      jumpi\n        /* \"contracts/NFTMasterChef.sol\":2090:2091  0 */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":2083:2091  return 0 */\n      swap1\n      pop\n      jump(tag_450)\n        /* \"contracts/NFTMasterChef.sol\":2056:2103  if (a == 0) {... */\n    tag_451:\n        /* \"contracts/NFTMasterChef.sol\":2115:2124  uint256 c */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":2131:2132  b */\n      dup3\n        /* \"contracts/NFTMasterChef.sol\":2127:2128  a */\n      dup5\n        /* \"contracts/NFTMasterChef.sol\":2127:2132  a * b */\n      tag_452\n      swap2\n      swap1\n      tag_453\n      jump\t// in\n    tag_452:\n        /* \"contracts/NFTMasterChef.sol\":2115:2132  uint256 c = a * b */\n      swap1\n      pop\n        /* \"contracts/NFTMasterChef.sol\":2160:2161  b */\n      dup3\n        /* \"contracts/NFTMasterChef.sol\":2155:2156  a */\n      dup5\n        /* \"contracts/NFTMasterChef.sol\":2151:2152  c */\n      dup3\n        /* \"contracts/NFTMasterChef.sol\":2151:2156  c / a */\n      tag_454\n      swap2\n      swap1\n      tag_455\n      jump\t// in\n    tag_454:\n        /* \"contracts/NFTMasterChef.sol\":2151:2161  c / a == b */\n      eq\n        /* \"contracts/NFTMasterChef.sol\":2143:2199  require(c / a == b, \"SafeMath: multiplication overflow\") */\n      tag_456\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_457\n      swap1\n      tag_458\n      jump\t// in\n    tag_457:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_456:\n        /* \"contracts/NFTMasterChef.sol\":2219:2220  c */\n      dup1\n        /* \"contracts/NFTMasterChef.sol\":2212:2220  return c */\n      swap2\n      pop\n      pop\n        /* \"contracts/NFTMasterChef.sol\":1757:2228  function mul(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_450:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/NFTMasterChef.sol\":2696:2828  function div(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_180:\n        /* \"contracts/NFTMasterChef.sol\":2754:2761  uint256 */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":2781:2820  div(a, b, \"SafeMath: division by zero\") */\n      tag_460\n        /* \"contracts/NFTMasterChef.sol\":2785:2786  a */\n      dup4\n        /* \"contracts/NFTMasterChef.sol\":2788:2789  b */\n      dup4\n        /* \"contracts/NFTMasterChef.sol\":2781:2820  div(a, b, \"SafeMath: division by zero\") */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x1a\n      dup2\n      mstore\n      0x20\n      add\n      0x536166654d6174683a206469766973696f6e206279207a65726f000000000000\n      dup2\n      mstore\n      pop\n        /* \"contracts/NFTMasterChef.sol\":2781:2784  div */\n      tag_461\n        /* \"contracts/NFTMasterChef.sol\":2781:2820  div(a, b, \"SafeMath: division by zero\") */\n      jump\t// in\n    tag_460:\n        /* \"contracts/NFTMasterChef.sol\":2774:2820  return div(a, b, \"SafeMath: division by zero\") */\n      swap1\n      pop\n        /* \"contracts/NFTMasterChef.sol\":2696:2828  function div(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/NFTMasterChef.sol\":841:977  function sub(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_181:\n        /* \"contracts/NFTMasterChef.sol\":899:906  uint256 */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":926:969  sub(a, b, \"SafeMath: subtraction overflow\") */\n      tag_463\n        /* \"contracts/NFTMasterChef.sol\":930:931  a */\n      dup4\n        /* \"contracts/NFTMasterChef.sol\":933:934  b */\n      dup4\n        /* \"contracts/NFTMasterChef.sol\":926:969  sub(a, b, \"SafeMath: subtraction overflow\") */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x1e\n      dup2\n      mstore\n      0x20\n      add\n      0x536166654d6174683a207375627472616374696f6e206f766572666c6f770000\n      dup2\n      mstore\n      pop\n        /* \"contracts/NFTMasterChef.sol\":926:929  sub */\n      tag_464\n        /* \"contracts/NFTMasterChef.sol\":926:969  sub(a, b, \"SafeMath: subtraction overflow\") */\n      jump\t// in\n    tag_463:\n        /* \"contracts/NFTMasterChef.sol\":919:969  return sub(a, b, \"SafeMath: subtraction overflow\") */\n      swap1\n      pop\n        /* \"contracts/NFTMasterChef.sol\":841:977  function sub(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/NFTMasterChef.sol\":385:566  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_184:\n        /* \"contracts/NFTMasterChef.sol\":443:450  uint256 */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":463:472  uint256 c */\n      dup1\n        /* \"contracts/NFTMasterChef.sol\":479:480  b */\n      dup3\n        /* \"contracts/NFTMasterChef.sol\":475:476  a */\n      dup5\n        /* \"contracts/NFTMasterChef.sol\":475:480  a + b */\n      tag_466\n      swap2\n      swap1\n      tag_467\n      jump\t// in\n    tag_466:\n        /* \"contracts/NFTMasterChef.sol\":463:480  uint256 c = a + b */\n      swap1\n      pop\n        /* \"contracts/NFTMasterChef.sol\":504:505  a */\n      dup4\n        /* \"contracts/NFTMasterChef.sol\":499:500  c */\n      dup2\n        /* \"contracts/NFTMasterChef.sol\":499:505  c >= a */\n      lt\n      iszero\n        /* \"contracts/NFTMasterChef.sol\":491:537  require(c >= a, \"SafeMath: addition overflow\") */\n      tag_468\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_469\n      swap1\n      tag_470\n      jump\t// in\n    tag_469:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_468:\n        /* \"contracts/NFTMasterChef.sol\":557:558  c */\n      dup1\n        /* \"contracts/NFTMasterChef.sol\":550:558  return c */\n      swap2\n      pop\n      pop\n        /* \"contracts/NFTMasterChef.sol\":385:566  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/NFTMasterChef.sol\":16150:16361  function safeTransfer(... */\n    tag_188:\n        /* \"contracts/NFTMasterChef.sol\":16267:16353  _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value)) */\n      tag_472\n        /* \"contracts/NFTMasterChef.sol\":16287:16292  token */\n      dup4\n        /* \"contracts/NFTMasterChef.sol\":16317:16340  token.transfer.selector */\n      shl(0xe0, 0xa9059cbb)\n        /* \"contracts/NFTMasterChef.sol\":16342:16344  to */\n      dup5\n        /* \"contracts/NFTMasterChef.sol\":16346:16351  value */\n      dup5\n        /* \"contracts/NFTMasterChef.sol\":16294:16352  abi.encodeWithSelector(token.transfer.selector, to, value) */\n      add(0x24, mload(0x40))\n      tag_473\n      swap3\n      swap2\n      swap1\n      tag_474\n      jump\t// in\n    tag_473:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n      swap1\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      0x20\n      dup3\n      add\n      dup1\n      mload\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n      dup4\n      dup2\n      dup4\n      and\n      or\n      dup4\n      mstore\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/NFTMasterChef.sol\":16267:16286  _callOptionalReturn */\n      tag_475\n        /* \"contracts/NFTMasterChef.sol\":16267:16353  _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value)) */\n      jump\t// in\n    tag_472:\n        /* \"contracts/NFTMasterChef.sol\":16150:16361  function safeTransfer(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/NFTMasterChef.sol\":19479:19577  function _msgSender() internal view virtual returns (address) {... */\n    tag_234:\n        /* \"contracts/NFTMasterChef.sol\":19532:19539  address */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":19559:19569  msg.sender */\n      caller\n        /* \"contracts/NFTMasterChef.sol\":19552:19569  return msg.sender */\n      swap1\n      pop\n        /* \"contracts/NFTMasterChef.sol\":19479:19577  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/NFTMasterChef.sol\":16369:16617  function safeTransferFrom(... */\n    tag_271:\n        /* \"contracts/NFTMasterChef.sol\":16513:16609  _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value)) */\n      tag_478\n        /* \"contracts/NFTMasterChef.sol\":16533:16538  token */\n      dup5\n        /* \"contracts/NFTMasterChef.sol\":16563:16590  token.transferFrom.selector */\n      shl(0xe0, 0x23b872dd)\n        /* \"contracts/NFTMasterChef.sol\":16592:16596  from */\n      dup6\n        /* \"contracts/NFTMasterChef.sol\":16598:16600  to */\n      dup6\n        /* \"contracts/NFTMasterChef.sol\":16602:16607  value */\n      dup6\n        /* \"contracts/NFTMasterChef.sol\":16540:16608  abi.encodeWithSelector(token.transferFrom.selector, from, to, value) */\n      add(0x24, mload(0x40))\n      tag_479\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_480\n      jump\t// in\n    tag_479:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n      swap1\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      0x20\n      dup3\n      add\n      dup1\n      mload\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n      dup4\n      dup2\n      dup4\n      and\n      or\n      dup4\n      mstore\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/NFTMasterChef.sol\":16513:16532  _callOptionalReturn */\n      tag_475\n        /* \"contracts/NFTMasterChef.sol\":16513:16609  _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value)) */\n      jump\t// in\n    tag_478:\n        /* \"contracts/NFTMasterChef.sol\":16369:16617  function safeTransferFrom(... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/NFTMasterChef.sol\":16886:17502  function safeApprove(... */\n    tag_308:\n        /* \"contracts/NFTMasterChef.sol\":17259:17260  0 */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":17250:17255  value */\n      dup2\n        /* \"contracts/NFTMasterChef.sol\":17250:17260  value == 0 */\n      eq\n        /* \"contracts/NFTMasterChef.sol\":17249:17311  (value == 0) || (token.allowance(address(this), spender) == 0) */\n      dup1\n      tag_482\n      jumpi\n      pop\n        /* \"contracts/NFTMasterChef.sol\":17309:17310  0 */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":17266:17271  token */\n      dup4\n        /* \"contracts/NFTMasterChef.sol\":17266:17281  token.allowance */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xdd62ed3e\n        /* \"contracts/NFTMasterChef.sol\":17290:17294  this */\n      address\n        /* \"contracts/NFTMasterChef.sol\":17297:17304  spender */\n      dup6\n        /* \"contracts/NFTMasterChef.sol\":17266:17305  token.allowance(address(this), spender) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_483\n      swap3\n      swap2\n      swap1\n      tag_484\n      jump\t// in\n    tag_483:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_486\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_486:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_487\n      swap2\n      swap1\n      tag_202\n      jump\t// in\n    tag_487:\n        /* \"contracts/NFTMasterChef.sol\":17266:17310  token.allowance(address(this), spender) == 0 */\n      eq\n        /* \"contracts/NFTMasterChef.sol\":17249:17311  (value == 0) || (token.allowance(address(this), spender) == 0) */\n    tag_482:\n        /* \"contracts/NFTMasterChef.sol\":17227:17393  require(... */\n      tag_488\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_489\n      swap1\n      tag_490\n      jump\t// in\n    tag_489:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_488:\n        /* \"contracts/NFTMasterChef.sol\":17404:17494  _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, value)) */\n      tag_491\n        /* \"contracts/NFTMasterChef.sol\":17424:17429  token */\n      dup4\n        /* \"contracts/NFTMasterChef.sol\":17454:17476  token.approve.selector */\n      shl(0xe0, 0x095ea7b3)\n        /* \"contracts/NFTMasterChef.sol\":17478:17485  spender */\n      dup5\n        /* \"contracts/NFTMasterChef.sol\":17487:17492  value */\n      dup5\n        /* \"contracts/NFTMasterChef.sol\":17431:17493  abi.encodeWithSelector(token.approve.selector, spender, value) */\n      add(0x24, mload(0x40))\n      tag_492\n      swap3\n      swap2\n      swap1\n      tag_474\n      jump\t// in\n    tag_492:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n      swap1\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      0x20\n      dup3\n      add\n      dup1\n      mload\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n      dup4\n      dup2\n      dup4\n      and\n      or\n      dup4\n      mstore\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/NFTMasterChef.sol\":17404:17423  _callOptionalReturn */\n      tag_475\n        /* \"contracts/NFTMasterChef.sol\":17404:17494  _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, value)) */\n      jump\t// in\n    tag_491:\n        /* \"contracts/NFTMasterChef.sol\":16886:17502  function safeApprove(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/NFTMasterChef.sol\":21375:21566  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_389:\n        /* \"contracts/NFTMasterChef.sol\":21449:21465  address oldOwner */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":21468:21474  _owner */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/NFTMasterChef.sol\":21449:21474  address oldOwner = _owner */\n      swap1\n      pop\n        /* \"contracts/NFTMasterChef.sol\":21494:21502  newOwner */\n      dup2\n        /* \"contracts/NFTMasterChef.sol\":21485:21491  _owner */\n      0x00\n      dup1\n        /* \"contracts/NFTMasterChef.sol\":21485:21502  _owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/NFTMasterChef.sol\":21549:21557  newOwner */\n      dup2\n        /* \"contracts/NFTMasterChef.sol\":21518:21558  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/NFTMasterChef.sol\":21539:21547  oldOwner */\n      dup2\n        /* \"contracts/NFTMasterChef.sol\":21518:21558  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/NFTMasterChef.sol\":21438:21566  {... */\n      pop\n        /* \"contracts/NFTMasterChef.sol\":21375:21566  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"contracts/NFTMasterChef.sol\":3358:3703  function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {... */\n    tag_461:\n        /* \"contracts/NFTMasterChef.sol\":3444:3451  uint256 */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":3543:3544  0 */\n      dup1\n        /* \"contracts/NFTMasterChef.sol\":3539:3540  b */\n      dup4\n        /* \"contracts/NFTMasterChef.sol\":3539:3544  b > 0 */\n      gt\n        /* \"contracts/NFTMasterChef.sol\":3546:3558  errorMessage */\n      dup3\n        /* \"contracts/NFTMasterChef.sol\":3531:3559  require(b > 0, errorMessage) */\n      swap1\n      tag_495\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_496\n      swap2\n      swap1\n      tag_497\n      jump\t// in\n    tag_496:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_495:\n      pop\n        /* \"contracts/NFTMasterChef.sol\":3570:3579  uint256 c */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":3586:3587  b */\n      dup4\n        /* \"contracts/NFTMasterChef.sol\":3582:3583  a */\n      dup6\n        /* \"contracts/NFTMasterChef.sol\":3582:3587  a / b */\n      tag_498\n      swap2\n      swap1\n      tag_455\n      jump\t// in\n    tag_498:\n        /* \"contracts/NFTMasterChef.sol\":3570:3587  uint256 c = a / b */\n      swap1\n      pop\n        /* \"contracts/NFTMasterChef.sol\":3694:3695  c */\n      dup1\n        /* \"contracts/NFTMasterChef.sol\":3687:3695  return c */\n      swap2\n      pop\n      pop\n        /* \"contracts/NFTMasterChef.sol\":3358:3703  function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/NFTMasterChef.sol\":1314:1506  function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {... */\n    tag_464:\n        /* \"contracts/NFTMasterChef.sol\":1400:1407  uint256 */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":1433:1434  a */\n      dup4\n        /* \"contracts/NFTMasterChef.sol\":1428:1429  b */\n      dup4\n        /* \"contracts/NFTMasterChef.sol\":1428:1434  b <= a */\n      gt\n      iszero\n        /* \"contracts/NFTMasterChef.sol\":1436:1448  errorMessage */\n      dup3\n        /* \"contracts/NFTMasterChef.sol\":1420:1449  require(b <= a, errorMessage) */\n      swap1\n      tag_500\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_501\n      swap2\n      swap1\n      tag_497\n      jump\t// in\n    tag_501:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_500:\n      pop\n        /* \"contracts/NFTMasterChef.sol\":1460:1469  uint256 c */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":1476:1477  b */\n      dup4\n        /* \"contracts/NFTMasterChef.sol\":1472:1473  a */\n      dup6\n        /* \"contracts/NFTMasterChef.sol\":1472:1477  a - b */\n      tag_502\n      swap2\n      swap1\n      tag_503\n      jump\t// in\n    tag_502:\n        /* \"contracts/NFTMasterChef.sol\":1460:1477  uint256 c = a - b */\n      swap1\n      pop\n        /* \"contracts/NFTMasterChef.sol\":1497:1498  c */\n      dup1\n        /* \"contracts/NFTMasterChef.sol\":1490:1498  return c */\n      swap2\n      pop\n      pop\n        /* \"contracts/NFTMasterChef.sol\":1314:1506  function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/NFTMasterChef.sol\":18723:19439  function _callOptionalReturn(IERC20 token, bytes memory data) private {... */\n    tag_475:\n        /* \"contracts/NFTMasterChef.sol\":19147:19170  bytes memory returndata */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":19173:19242  address(token).functionCall(data, \"SafeERC20: low-level call failed\") */\n      tag_505\n        /* \"contracts/NFTMasterChef.sol\":19201:19205  data */\n      dup3\n        /* \"contracts/NFTMasterChef.sol\":19173:19242  address(token).functionCall(data, \"SafeERC20: low-level call failed\") */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x20\n      dup2\n      mstore\n      0x20\n      add\n      0x5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564\n      dup2\n      mstore\n      pop\n        /* \"contracts/NFTMasterChef.sol\":19181:19186  token */\n      dup6\n        /* \"contracts/NFTMasterChef.sol\":19173:19200  address(token).functionCall */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_506\n      swap1\n        /* \"contracts/NFTMasterChef.sol\":19173:19242  address(token).functionCall(data, \"SafeERC20: low-level call failed\") */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_505:\n        /* \"contracts/NFTMasterChef.sol\":19147:19242  bytes memory returndata = address(token).functionCall(data, \"SafeERC20: low-level call failed\") */\n      swap1\n      pop\n        /* \"contracts/NFTMasterChef.sol\":19277:19278  0 */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":19257:19267  returndata */\n      dup2\n        /* \"contracts/NFTMasterChef.sol\":19257:19274  returndata.length */\n      mload\n        /* \"contracts/NFTMasterChef.sol\":19257:19278  returndata.length > 0 */\n      gt\n        /* \"contracts/NFTMasterChef.sol\":19253:19432  if (returndata.length > 0) {... */\n      iszero\n      tag_507\n      jumpi\n        /* \"contracts/NFTMasterChef.sol\":19354:19364  returndata */\n      dup1\n        /* \"contracts/NFTMasterChef.sol\":19343:19373  abi.decode(returndata, (bool)) */\n      dup1\n      0x20\n      add\n      swap1\n      mload\n      dup2\n      add\n      swap1\n      tag_508\n      swap2\n      swap1\n      tag_509\n      jump\t// in\n    tag_508:\n        /* \"contracts/NFTMasterChef.sol\":19335:19420  require(abi.decode(returndata, (bool)), \"SafeERC20: ERC20 operation did not succeed\") */\n      tag_510\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_511\n      swap1\n      tag_512\n      jump\t// in\n    tag_511:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_510:\n        /* \"contracts/NFTMasterChef.sol\":19253:19432  if (returndata.length > 0) {... */\n    tag_507:\n        /* \"contracts/NFTMasterChef.sol\":18793:19439  {... */\n      pop\n        /* \"contracts/NFTMasterChef.sol\":18723:19439  function _callOptionalReturn(IERC20 token, bytes memory data) private {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/NFTMasterChef.sol\":11566:11795  function functionCall(... */\n    tag_506:\n        /* \"contracts/NFTMasterChef.sol\":11703:11715  bytes memory */\n      0x60\n        /* \"contracts/NFTMasterChef.sol\":11735:11787  functionCallWithValue(target, data, 0, errorMessage) */\n      tag_514\n        /* \"contracts/NFTMasterChef.sol\":11757:11763  target */\n      dup5\n        /* \"contracts/NFTMasterChef.sol\":11765:11769  data */\n      dup5\n        /* \"contracts/NFTMasterChef.sol\":11771:11772  0 */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":11774:11786  errorMessage */\n      dup6\n        /* \"contracts/NFTMasterChef.sol\":11735:11756  functionCallWithValue */\n      tag_515\n        /* \"contracts/NFTMasterChef.sol\":11735:11787  functionCallWithValue(target, data, 0, errorMessage) */\n      jump\t// in\n    tag_514:\n        /* \"contracts/NFTMasterChef.sol\":11728:11787  return functionCallWithValue(target, data, 0, errorMessage) */\n      swap1\n      pop\n        /* \"contracts/NFTMasterChef.sol\":11566:11795  function functionCall(... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/NFTMasterChef.sol\":12686:13196  function functionCallWithValue(... */\n    tag_515:\n        /* \"contracts/NFTMasterChef.sol\":12856:12868  bytes memory */\n      0x60\n        /* \"contracts/NFTMasterChef.sol\":12914:12919  value */\n      dup3\n        /* \"contracts/NFTMasterChef.sol\":12889:12910  address(this).balance */\n      selfbalance\n        /* \"contracts/NFTMasterChef.sol\":12889:12919  address(this).balance >= value */\n      lt\n      iszero\n        /* \"contracts/NFTMasterChef.sol\":12881:12962  require(address(this).balance >= value, \"Address: insufficient balance for call\") */\n      tag_517\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_518\n      swap1\n      tag_519\n      jump\t// in\n    tag_518:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_517:\n        /* \"contracts/NFTMasterChef.sol\":12981:12999  isContract(target) */\n      tag_520\n        /* \"contracts/NFTMasterChef.sol\":12992:12998  target */\n      dup6\n        /* \"contracts/NFTMasterChef.sol\":12981:12991  isContract */\n      tag_521\n        /* \"contracts/NFTMasterChef.sol\":12981:12999  isContract(target) */\n      jump\t// in\n    tag_520:\n        /* \"contracts/NFTMasterChef.sol\":12973:13033  require(isContract(target), \"Address: call to non-contract\") */\n      tag_522\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_523\n      swap1\n      tag_524\n      jump\t// in\n    tag_523:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_522:\n        /* \"contracts/NFTMasterChef.sol\":13047:13059  bool success */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":13061:13084  bytes memory returndata */\n      dup1\n        /* \"contracts/NFTMasterChef.sol\":13088:13094  target */\n      dup7\n        /* \"contracts/NFTMasterChef.sol\":13088:13099  target.call */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/NFTMasterChef.sol\":13107:13112  value */\n      dup6\n        /* \"contracts/NFTMasterChef.sol\":13114:13118  data */\n      dup8\n        /* \"contracts/NFTMasterChef.sol\":13088:13119  target.call{value: value}(data) */\n      mload(0x40)\n      tag_525\n      swap2\n      swap1\n      tag_526\n      jump\t// in\n    tag_525:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_529\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_528)\n    tag_529:\n      0x60\n      swap2\n      pop\n    tag_528:\n      pop\n        /* \"contracts/NFTMasterChef.sol\":13046:13119  (bool success, bytes memory returndata) = target.call{value: value}(data) */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"contracts/NFTMasterChef.sol\":13137:13188  verifyCallResult(success, returndata, errorMessage) */\n      tag_530\n        /* \"contracts/NFTMasterChef.sol\":13154:13161  success */\n      dup3\n        /* \"contracts/NFTMasterChef.sol\":13163:13173  returndata */\n      dup3\n        /* \"contracts/NFTMasterChef.sol\":13175:13187  errorMessage */\n      dup7\n        /* \"contracts/NFTMasterChef.sol\":13137:13153  verifyCallResult */\n      tag_531\n        /* \"contracts/NFTMasterChef.sol\":13137:13188  verifyCallResult(success, returndata, errorMessage) */\n      jump\t// in\n    tag_530:\n        /* \"contracts/NFTMasterChef.sol\":13130:13188  return verifyCallResult(success, returndata, errorMessage) */\n      swap3\n      pop\n      pop\n      pop\n        /* \"contracts/NFTMasterChef.sol\":12686:13196  function functionCallWithValue(... */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/NFTMasterChef.sol\":8821:9147  function isContract(address account) internal view returns (bool) {... */\n    tag_521:\n        /* \"contracts/NFTMasterChef.sol\":8881:8885  bool */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":9138:9139  0 */\n      dup1\n        /* \"contracts/NFTMasterChef.sol\":9116:9123  account */\n      dup3\n        /* \"contracts/NFTMasterChef.sol\":9116:9135  account.code.length */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      extcodesize\n        /* \"contracts/NFTMasterChef.sol\":9116:9139  account.code.length > 0 */\n      gt\n        /* \"contracts/NFTMasterChef.sol\":9109:9139  return account.code.length > 0 */\n      swap1\n      pop\n        /* \"contracts/NFTMasterChef.sol\":8821:9147  function isContract(address account) internal view returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/NFTMasterChef.sol\":15372:16084  function verifyCallResult(... */\n    tag_531:\n        /* \"contracts/NFTMasterChef.sol\":15522:15534  bytes memory */\n      0x60\n        /* \"contracts/NFTMasterChef.sol\":15551:15558  success */\n      dup4\n        /* \"contracts/NFTMasterChef.sol\":15547:16077  if (success) {... */\n      iszero\n      tag_534\n      jumpi\n        /* \"contracts/NFTMasterChef.sol\":15582:15592  returndata */\n      dup3\n        /* \"contracts/NFTMasterChef.sol\":15575:15592  return returndata */\n      swap1\n      pop\n      jump(tag_533)\n        /* \"contracts/NFTMasterChef.sol\":15547:16077  if (success) {... */\n    tag_534:\n        /* \"contracts/NFTMasterChef.sol\":15716:15717  0 */\n      0x00\n        /* \"contracts/NFTMasterChef.sol\":15696:15706  returndata */\n      dup4\n        /* \"contracts/NFTMasterChef.sol\":15696:15713  returndata.length */\n      mload\n        /* \"contracts/NFTMasterChef.sol\":15696:15717  returndata.length > 0 */\n      gt\n        /* \"contracts/NFTMasterChef.sol\":15692:16066  if (returndata.length > 0) {... */\n      iszero\n      tag_536\n      jumpi\n        /* \"contracts/NFTMasterChef.sol\":15894:15904  returndata */\n      dup3\n        /* \"contracts/NFTMasterChef.sol\":15888:15905  mload(returndata) */\n      mload\n        /* \"contracts/NFTMasterChef.sol\":15955:15970  returndata_size */\n      dup1\n        /* \"contracts/NFTMasterChef.sol\":15942:15952  returndata */\n      dup5\n        /* \"contracts/NFTMasterChef.sol\":15938:15940  32 */\n      0x20\n        /* \"contracts/NFTMasterChef.sol\":15934:15953  add(32, returndata) */\n      add\n        /* \"contracts/NFTMasterChef.sol\":15927:15971  revert(add(32, returndata), returndata_size) */\n      revert\n        /* \"contracts/NFTMasterChef.sol\":15692:16066  if (returndata.length > 0) {... */\n    tag_536:\n        /* \"contracts/NFTMasterChef.sol\":16037:16049  errorMessage */\n      dup2\n        /* \"contracts/NFTMasterChef.sol\":16030:16050  revert(errorMessage) */\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_538\n      swap2\n      swap1\n      tag_497\n      jump\t// in\n    tag_538:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/NFTMasterChef.sol\":15372:16084  function verifyCallResult(... */\n    tag_533:\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:84   */\n    tag_539:\n        /* \"#utility.yul\":44:51   */\n      0x00\n        /* \"#utility.yul\":73:78   */\n      dup2\n        /* \"#utility.yul\":62:78   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:84   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":90:208   */\n    tag_540:\n        /* \"#utility.yul\":177:201   */\n      tag_616\n        /* \"#utility.yul\":195:200   */\n      dup2\n        /* \"#utility.yul\":177:201   */\n      tag_539\n      jump\t// in\n    tag_616:\n        /* \"#utility.yul\":172:175   */\n      dup3\n        /* \"#utility.yul\":165:202   */\n      mstore\n        /* \"#utility.yul\":90:208   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":214:436   */\n    tag_47:\n        /* \"#utility.yul\":307:311   */\n      0x00\n        /* \"#utility.yul\":345:347   */\n      0x20\n        /* \"#utility.yul\":334:343   */\n      dup3\n        /* \"#utility.yul\":330:348   */\n      add\n        /* \"#utility.yul\":322:348   */\n      swap1\n      pop\n        /* \"#utility.yul\":358:429   */\n      tag_618\n        /* \"#utility.yul\":426:427   */\n      0x00\n        /* \"#utility.yul\":415:424   */\n      dup4\n        /* \"#utility.yul\":411:428   */\n      add\n        /* \"#utility.yul\":402:408   */\n      dup5\n        /* \"#utility.yul\":358:429   */\n      tag_540\n      jump\t// in\n    tag_618:\n        /* \"#utility.yul\":214:436   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":523:640   */\n    tag_542:\n        /* \"#utility.yul\":632:633   */\n      0x00\n        /* \"#utility.yul\":629:630   */\n      dup1\n        /* \"#utility.yul\":622:634   */\n      revert\n        /* \"#utility.yul\":769:891   */\n    tag_544:\n        /* \"#utility.yul\":842:866   */\n      tag_623\n        /* \"#utility.yul\":860:865   */\n      dup2\n        /* \"#utility.yul\":842:866   */\n      tag_539\n      jump\t// in\n    tag_623:\n        /* \"#utility.yul\":835:840   */\n      dup2\n        /* \"#utility.yul\":832:867   */\n      eq\n        /* \"#utility.yul\":822:885   */\n      tag_624\n      jumpi\n        /* \"#utility.yul\":881:882   */\n      0x00\n        /* \"#utility.yul\":878:879   */\n      dup1\n        /* \"#utility.yul\":871:883   */\n      revert\n        /* \"#utility.yul\":822:885   */\n    tag_624:\n        /* \"#utility.yul\":769:891   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":897:1036   */\n    tag_545:\n        /* \"#utility.yul\":943:948   */\n      0x00\n        /* \"#utility.yul\":981:987   */\n      dup2\n        /* \"#utility.yul\":968:988   */\n      calldataload\n        /* \"#utility.yul\":959:988   */\n      swap1\n      pop\n        /* \"#utility.yul\":997:1030   */\n      tag_626\n        /* \"#utility.yul\":1024:1029   */\n      dup2\n        /* \"#utility.yul\":997:1030   */\n      tag_544\n      jump\t// in\n    tag_626:\n        /* \"#utility.yul\":897:1036   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1042:1371   */\n    tag_50:\n        /* \"#utility.yul\":1101:1107   */\n      0x00\n        /* \"#utility.yul\":1150:1152   */\n      0x20\n        /* \"#utility.yul\":1138:1147   */\n      dup3\n        /* \"#utility.yul\":1129:1136   */\n      dup5\n        /* \"#utility.yul\":1125:1148   */\n      sub\n        /* \"#utility.yul\":1121:1153   */\n      slt\n        /* \"#utility.yul\":1118:1237   */\n      iszero\n      tag_628\n      jumpi\n        /* \"#utility.yul\":1156:1235   */\n      tag_629\n      tag_542\n      jump\t// in\n    tag_629:\n        /* \"#utility.yul\":1118:1237   */\n    tag_628:\n        /* \"#utility.yul\":1276:1277   */\n      0x00\n        /* \"#utility.yul\":1301:1354   */\n      tag_630\n        /* \"#utility.yul\":1346:1353   */\n      dup5\n        /* \"#utility.yul\":1337:1343   */\n      dup3\n        /* \"#utility.yul\":1326:1335   */\n      dup6\n        /* \"#utility.yul\":1322:1344   */\n      add\n        /* \"#utility.yul\":1301:1354   */\n      tag_545\n      jump\t// in\n    tag_630:\n        /* \"#utility.yul\":1291:1354   */\n      swap2\n      pop\n        /* \"#utility.yul\":1247:1364   */\n      pop\n        /* \"#utility.yul\":1042:1371   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1377:1503   */\n    tag_546:\n        /* \"#utility.yul\":1414:1421   */\n      0x00\n        /* \"#utility.yul\":1454:1496   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":1447:1452   */\n      dup3\n        /* \"#utility.yul\":1443:1497   */\n      and\n        /* \"#utility.yul\":1432:1497   */\n      swap1\n      pop\n        /* \"#utility.yul\":1377:1503   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1509:1569   */\n    tag_547:\n        /* \"#utility.yul\":1537:1540   */\n      0x00\n        /* \"#utility.yul\":1558:1563   */\n      dup2\n        /* \"#utility.yul\":1551:1563   */\n      swap1\n      pop\n        /* \"#utility.yul\":1509:1569   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1575:1717   */\n    tag_548:\n        /* \"#utility.yul\":1625:1634   */\n      0x00\n        /* \"#utility.yul\":1658:1711   */\n      tag_634\n        /* \"#utility.yul\":1676:1710   */\n      tag_635\n        /* \"#utility.yul\":1685:1709   */\n      tag_636\n        /* \"#utility.yul\":1703:1708   */\n      dup5\n        /* \"#utility.yul\":1685:1709   */\n      tag_546\n      jump\t// in\n    tag_636:\n        /* \"#utility.yul\":1676:1710   */\n      tag_547\n      jump\t// in\n    tag_635:\n        /* \"#utility.yul\":1658:1711   */\n      tag_546\n      jump\t// in\n    tag_634:\n        /* \"#utility.yul\":1645:1711   */\n      swap1\n      pop\n        /* \"#utility.yul\":1575:1717   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1723:1849   */\n    tag_549:\n        /* \"#utility.yul\":1773:1782   */\n      0x00\n        /* \"#utility.yul\":1806:1843   */\n      tag_638\n        /* \"#utility.yul\":1837:1842   */\n      dup3\n        /* \"#utility.yul\":1806:1843   */\n      tag_548\n      jump\t// in\n    tag_638:\n        /* \"#utility.yul\":1793:1843   */\n      swap1\n      pop\n        /* \"#utility.yul\":1723:1849   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1855:1995   */\n    tag_550:\n        /* \"#utility.yul\":1919:1928   */\n      0x00\n        /* \"#utility.yul\":1952:1989   */\n      tag_640\n        /* \"#utility.yul\":1983:1988   */\n      dup3\n        /* \"#utility.yul\":1952:1989   */\n      tag_549\n      jump\t// in\n    tag_640:\n        /* \"#utility.yul\":1939:1989   */\n      swap1\n      pop\n        /* \"#utility.yul\":1855:1995   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2001:2160   */\n    tag_551:\n        /* \"#utility.yul\":2102:2153   */\n      tag_642\n        /* \"#utility.yul\":2147:2152   */\n      dup2\n        /* \"#utility.yul\":2102:2153   */\n      tag_550\n      jump\t// in\n    tag_642:\n        /* \"#utility.yul\":2097:2100   */\n      dup3\n        /* \"#utility.yul\":2090:2154   */\n      mstore\n        /* \"#utility.yul\":2001:2160   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2166:2747   */\n    tag_56:\n        /* \"#utility.yul\":2357:2361   */\n      0x00\n        /* \"#utility.yul\":2395:2398   */\n      0x80\n        /* \"#utility.yul\":2384:2393   */\n      dup3\n        /* \"#utility.yul\":2380:2399   */\n      add\n        /* \"#utility.yul\":2372:2399   */\n      swap1\n      pop\n        /* \"#utility.yul\":2409:2494   */\n      tag_644\n        /* \"#utility.yul\":2491:2492   */\n      0x00\n        /* \"#utility.yul\":2480:2489   */\n      dup4\n        /* \"#utility.yul\":2476:2493   */\n      add\n        /* \"#utility.yul\":2467:2473   */\n      dup8\n        /* \"#utility.yul\":2409:2494   */\n      tag_551\n      jump\t// in\n    tag_644:\n        /* \"#utility.yul\":2504:2576   */\n      tag_645\n        /* \"#utility.yul\":2572:2574   */\n      0x20\n        /* \"#utility.yul\":2561:2570   */\n      dup4\n        /* \"#utility.yul\":2557:2575   */\n      add\n        /* \"#utility.yul\":2548:2554   */\n      dup7\n        /* \"#utility.yul\":2504:2576   */\n      tag_540\n      jump\t// in\n    tag_645:\n        /* \"#utility.yul\":2586:2658   */\n      tag_646\n        /* \"#utility.yul\":2654:2656   */\n      0x40\n        /* \"#utility.yul\":2643:2652   */\n      dup4\n        /* \"#utility.yul\":2639:2657   */\n      add\n        /* \"#utility.yul\":2630:2636   */\n      dup6\n        /* \"#utility.yul\":2586:2658   */\n      tag_540\n      jump\t// in\n    tag_646:\n        /* \"#utility.yul\":2668:2740   */\n      tag_647\n        /* \"#utility.yul\":2736:2738   */\n      0x60\n        /* \"#utility.yul\":2725:2734   */\n      dup4\n        /* \"#utility.yul\":2721:2739   */\n      add\n        /* \"#utility.yul\":2712:2718   */\n      dup5\n        /* \"#utility.yul\":2668:2740   */\n      tag_540\n      jump\t// in\n    tag_647:\n        /* \"#utility.yul\":2166:2747   */\n      swap6\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2753:3227   */\n    tag_62:\n        /* \"#utility.yul\":2821:2827   */\n      0x00\n        /* \"#utility.yul\":2829:2835   */\n      dup1\n        /* \"#utility.yul\":2878:2880   */\n      0x40\n        /* \"#utility.yul\":2866:2875   */\n      dup4\n        /* \"#utility.yul\":2857:2864   */\n      dup6\n        /* \"#utility.yul\":2853:2876   */\n      sub\n        /* \"#utility.yul\":2849:2881   */\n      slt\n        /* \"#utility.yul\":2846:2965   */\n      iszero\n      tag_649\n      jumpi\n        /* \"#utility.yul\":2884:2963   */\n      tag_650\n      tag_542\n      jump\t// in\n    tag_650:\n        /* \"#utility.yul\":2846:2965   */\n    tag_649:\n        /* \"#utility.yul\":3004:3005   */\n      0x00\n        /* \"#utility.yul\":3029:3082   */\n      tag_651\n        /* \"#utility.yul\":3074:3081   */\n      dup6\n        /* \"#utility.yul\":3065:3071   */\n      dup3\n        /* \"#utility.yul\":3054:3063   */\n      dup7\n        /* \"#utility.yul\":3050:3072   */\n      add\n        /* \"#utility.yul\":3029:3082   */\n      tag_545\n      jump\t// in\n    tag_651:\n        /* \"#utility.yul\":3019:3082   */\n      swap3\n      pop\n        /* \"#utility.yul\":2975:3092   */\n      pop\n        /* \"#utility.yul\":3131:3133   */\n      0x20\n        /* \"#utility.yul\":3157:3210   */\n      tag_652\n        /* \"#utility.yul\":3202:3209   */\n      dup6\n        /* \"#utility.yul\":3193:3199   */\n      dup3\n        /* \"#utility.yul\":3182:3191   */\n      dup7\n        /* \"#utility.yul\":3178:3200   */\n      add\n        /* \"#utility.yul\":3157:3210   */\n      tag_545\n      jump\t// in\n    tag_652:\n        /* \"#utility.yul\":3147:3210   */\n      swap2\n      pop\n        /* \"#utility.yul\":3102:3220   */\n      pop\n        /* \"#utility.yul\":2753:3227   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3233:3329   */\n    tag_552:\n        /* \"#utility.yul\":3270:3277   */\n      0x00\n        /* \"#utility.yul\":3299:3323   */\n      tag_654\n        /* \"#utility.yul\":3317:3322   */\n      dup3\n        /* \"#utility.yul\":3299:3323   */\n      tag_546\n      jump\t// in\n    tag_654:\n        /* \"#utility.yul\":3288:3323   */\n      swap1\n      pop\n        /* \"#utility.yul\":3233:3329   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3335:3445   */\n    tag_553:\n        /* \"#utility.yul\":3386:3393   */\n      0x00\n        /* \"#utility.yul\":3415:3439   */\n      tag_656\n        /* \"#utility.yul\":3433:3438   */\n      dup3\n        /* \"#utility.yul\":3415:3439   */\n      tag_552\n      jump\t// in\n    tag_656:\n        /* \"#utility.yul\":3404:3439   */\n      swap1\n      pop\n        /* \"#utility.yul\":3335:3445   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3451:3601   */\n    tag_554:\n        /* \"#utility.yul\":3538:3576   */\n      tag_658\n        /* \"#utility.yul\":3570:3575   */\n      dup2\n        /* \"#utility.yul\":3538:3576   */\n      tag_553\n      jump\t// in\n    tag_658:\n        /* \"#utility.yul\":3531:3536   */\n      dup2\n        /* \"#utility.yul\":3528:3577   */\n      eq\n        /* \"#utility.yul\":3518:3595   */\n      tag_659\n      jumpi\n        /* \"#utility.yul\":3591:3592   */\n      0x00\n        /* \"#utility.yul\":3588:3589   */\n      dup1\n        /* \"#utility.yul\":3581:3593   */\n      revert\n        /* \"#utility.yul\":3518:3595   */\n    tag_659:\n        /* \"#utility.yul\":3451:3601   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3607:3774   */\n    tag_555:\n        /* \"#utility.yul\":3667:3672   */\n      0x00\n        /* \"#utility.yul\":3705:3711   */\n      dup2\n        /* \"#utility.yul\":3692:3712   */\n      calldataload\n        /* \"#utility.yul\":3683:3712   */\n      swap1\n      pop\n        /* \"#utility.yul\":3721:3768   */\n      tag_661\n        /* \"#utility.yul\":3762:3767   */\n      dup2\n        /* \"#utility.yul\":3721:3768   */\n      tag_554\n      jump\t// in\n    tag_661:\n        /* \"#utility.yul\":3607:3774   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3780:3870   */\n    tag_556:\n        /* \"#utility.yul\":3814:3821   */\n      0x00\n        /* \"#utility.yul\":3857:3862   */\n      dup2\n        /* \"#utility.yul\":3850:3863   */\n      iszero\n        /* \"#utility.yul\":3843:3864   */\n      iszero\n        /* \"#utility.yul\":3832:3864   */\n      swap1\n      pop\n        /* \"#utility.yul\":3780:3870   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3876:3992   */\n    tag_557:\n        /* \"#utility.yul\":3946:3967   */\n      tag_664\n        /* \"#utility.yul\":3961:3966   */\n      dup2\n        /* \"#utility.yul\":3946:3967   */\n      tag_556\n      jump\t// in\n    tag_664:\n        /* \"#utility.yul\":3939:3944   */\n      dup2\n        /* \"#utility.yul\":3936:3968   */\n      eq\n        /* \"#utility.yul\":3926:3986   */\n      tag_665\n      jumpi\n        /* \"#utility.yul\":3982:3983   */\n      0x00\n        /* \"#utility.yul\":3979:3980   */\n      dup1\n        /* \"#utility.yul\":3972:3984   */\n      revert\n        /* \"#utility.yul\":3926:3986   */\n    tag_665:\n        /* \"#utility.yul\":3876:3992   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3998:4131   */\n    tag_558:\n        /* \"#utility.yul\":4041:4046   */\n      0x00\n        /* \"#utility.yul\":4079:4085   */\n      dup2\n        /* \"#utility.yul\":4066:4086   */\n      calldataload\n        /* \"#utility.yul\":4057:4086   */\n      swap1\n      pop\n        /* \"#utility.yul\":4095:4125   */\n      tag_667\n        /* \"#utility.yul\":4119:4124   */\n      dup2\n        /* \"#utility.yul\":4095:4125   */\n      tag_557\n      jump\t// in\n    tag_667:\n        /* \"#utility.yul\":3998:4131   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4137:4778   */\n    tag_66:\n        /* \"#utility.yul\":4225:4231   */\n      0x00\n        /* \"#utility.yul\":4233:4239   */\n      dup1\n        /* \"#utility.yul\":4241:4247   */\n      0x00\n        /* \"#utility.yul\":4290:4292   */\n      0x60\n        /* \"#utility.yul\":4278:4287   */\n      dup5\n        /* \"#utility.yul\":4269:4276   */\n      dup7\n        /* \"#utility.yul\":4265:4288   */\n      sub\n        /* \"#utility.yul\":4261:4293   */\n      slt\n        /* \"#utility.yul\":4258:4377   */\n      iszero\n      tag_669\n      jumpi\n        /* \"#utility.yul\":4296:4375   */\n      tag_670\n      tag_542\n      jump\t// in\n    tag_670:\n        /* \"#utility.yul\":4258:4377   */\n    tag_669:\n        /* \"#utility.yul\":4416:4417   */\n      0x00\n        /* \"#utility.yul\":4441:4494   */\n      tag_671\n        /* \"#utility.yul\":4486:4493   */\n      dup7\n        /* \"#utility.yul\":4477:4483   */\n      dup3\n        /* \"#utility.yul\":4466:4475   */\n      dup8\n        /* \"#utility.yul\":4462:4484   */\n      add\n        /* \"#utility.yul\":4441:4494   */\n      tag_545\n      jump\t// in\n    tag_671:\n        /* \"#utility.yul\":4431:4494   */\n      swap4\n      pop\n        /* \"#utility.yul\":4387:4504   */\n      pop\n        /* \"#utility.yul\":4543:4545   */\n      0x20\n        /* \"#utility.yul\":4569:4636   */\n      tag_672\n        /* \"#utility.yul\":4628:4635   */\n      dup7\n        /* \"#utility.yul\":4619:4625   */\n      dup3\n        /* \"#utility.yul\":4608:4617   */\n      dup8\n        /* \"#utility.yul\":4604:4626   */\n      add\n        /* \"#utility.yul\":4569:4636   */\n      tag_555\n      jump\t// in\n    tag_672:\n        /* \"#utility.yul\":4559:4636   */\n      swap3\n      pop\n        /* \"#utility.yul\":4514:4646   */\n      pop\n        /* \"#utility.yul\":4685:4687   */\n      0x40\n        /* \"#utility.yul\":4711:4761   */\n      tag_673\n        /* \"#utility.yul\":4753:4760   */\n      dup7\n        /* \"#utility.yul\":4744:4750   */\n      dup3\n        /* \"#utility.yul\":4733:4742   */\n      dup8\n        /* \"#utility.yul\":4729:4751   */\n      add\n        /* \"#utility.yul\":4711:4761   */\n      tag_558\n      jump\t// in\n    tag_673:\n        /* \"#utility.yul\":4701:4761   */\n      swap2\n      pop\n        /* \"#utility.yul\":4656:4771   */\n      pop\n        /* \"#utility.yul\":4137:4778   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":4784:4901   */\n    tag_559:\n        /* \"#utility.yul\":4842:4849   */\n      0x00\n        /* \"#utility.yul\":4871:4895   */\n      tag_675\n        /* \"#utility.yul\":4889:4894   */\n      dup3\n        /* \"#utility.yul\":4871:4895   */\n      tag_552\n      jump\t// in\n    tag_675:\n        /* \"#utility.yul\":4860:4895   */\n      swap1\n      pop\n        /* \"#utility.yul\":4784:4901   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4907:5071   */\n    tag_560:\n        /* \"#utility.yul\":5001:5046   */\n      tag_677\n        /* \"#utility.yul\":5040:5045   */\n      dup2\n        /* \"#utility.yul\":5001:5046   */\n      tag_559\n      jump\t// in\n    tag_677:\n        /* \"#utility.yul\":4994:4999   */\n      dup2\n        /* \"#utility.yul\":4991:5047   */\n      eq\n        /* \"#utility.yul\":4981:5065   */\n      tag_678\n      jumpi\n        /* \"#utility.yul\":5061:5062   */\n      0x00\n        /* \"#utility.yul\":5058:5059   */\n      dup1\n        /* \"#utility.yul\":5051:5063   */\n      revert\n        /* \"#utility.yul\":4981:5065   */\n    tag_678:\n        /* \"#utility.yul\":4907:5071   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5077:5258   */\n    tag_561:\n        /* \"#utility.yul\":5144:5149   */\n      0x00\n        /* \"#utility.yul\":5182:5188   */\n      dup2\n        /* \"#utility.yul\":5169:5189   */\n      calldataload\n        /* \"#utility.yul\":5160:5189   */\n      swap1\n      pop\n        /* \"#utility.yul\":5198:5252   */\n      tag_680\n        /* \"#utility.yul\":5246:5251   */\n      dup2\n        /* \"#utility.yul\":5198:5252   */\n      tag_560\n      jump\t// in\n    tag_680:\n        /* \"#utility.yul\":5077:5258   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5264:5635   */\n    tag_70:\n        /* \"#utility.yul\":5344:5350   */\n      0x00\n        /* \"#utility.yul\":5393:5395   */\n      0x20\n        /* \"#utility.yul\":5381:5390   */\n      dup3\n        /* \"#utility.yul\":5372:5379   */\n      dup5\n        /* \"#utility.yul\":5368:5391   */\n      sub\n        /* \"#utility.yul\":5364:5396   */\n      slt\n        /* \"#utility.yul\":5361:5480   */\n      iszero\n      tag_682\n      jumpi\n        /* \"#utility.yul\":5399:5478   */\n      tag_683\n      tag_542\n      jump\t// in\n    tag_683:\n        /* \"#utility.yul\":5361:5480   */\n    tag_682:\n        /* \"#utility.yul\":5519:5520   */\n      0x00\n        /* \"#utility.yul\":5544:5618   */\n      tag_684\n        /* \"#utility.yul\":5610:5617   */\n      dup5\n        /* \"#utility.yul\":5601:5607   */\n      dup3\n        /* \"#utility.yul\":5590:5599   */\n      dup6\n        /* \"#utility.yul\":5586:5608   */\n      add\n        /* \"#utility.yul\":5544:5618   */\n      tag_561\n      jump\t// in\n    tag_684:\n        /* \"#utility.yul\":5534:5618   */\n      swap2\n      pop\n        /* \"#utility.yul\":5490:5628   */\n      pop\n        /* \"#utility.yul\":5264:5635   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5641:5752   */\n    tag_562:\n        /* \"#utility.yul\":5693:5700   */\n      0x00\n        /* \"#utility.yul\":5722:5746   */\n      tag_686\n        /* \"#utility.yul\":5740:5745   */\n      dup3\n        /* \"#utility.yul\":5722:5746   */\n      tag_552\n      jump\t// in\n    tag_686:\n        /* \"#utility.yul\":5711:5746   */\n      swap1\n      pop\n        /* \"#utility.yul\":5641:5752   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5758:5910   */\n    tag_563:\n        /* \"#utility.yul\":5846:5885   */\n      tag_688\n        /* \"#utility.yul\":5879:5884   */\n      dup2\n        /* \"#utility.yul\":5846:5885   */\n      tag_562\n      jump\t// in\n    tag_688:\n        /* \"#utility.yul\":5839:5844   */\n      dup2\n        /* \"#utility.yul\":5836:5886   */\n      eq\n        /* \"#utility.yul\":5826:5904   */\n      tag_689\n      jumpi\n        /* \"#utility.yul\":5900:5901   */\n      0x00\n        /* \"#utility.yul\":5897:5898   */\n      dup1\n        /* \"#utility.yul\":5890:5902   */\n      revert\n        /* \"#utility.yul\":5826:5904   */\n    tag_689:\n        /* \"#utility.yul\":5758:5910   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5916:6085   */\n    tag_564:\n        /* \"#utility.yul\":5977:5982   */\n      0x00\n        /* \"#utility.yul\":6015:6021   */\n      dup2\n        /* \"#utility.yul\":6002:6022   */\n      calldataload\n        /* \"#utility.yul\":5993:6022   */\n      swap1\n      pop\n        /* \"#utility.yul\":6031:6079   */\n      tag_691\n        /* \"#utility.yul\":6073:6078   */\n      dup2\n        /* \"#utility.yul\":6031:6079   */\n      tag_563\n      jump\t// in\n    tag_691:\n        /* \"#utility.yul\":5916:6085   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6091:6595   */\n    tag_89:\n        /* \"#utility.yul\":6174:6180   */\n      0x00\n        /* \"#utility.yul\":6182:6188   */\n      dup1\n        /* \"#utility.yul\":6231:6233   */\n      0x40\n        /* \"#utility.yul\":6219:6228   */\n      dup4\n        /* \"#utility.yul\":6210:6217   */\n      dup6\n        /* \"#utility.yul\":6206:6229   */\n      sub\n        /* \"#utility.yul\":6202:6234   */\n      slt\n        /* \"#utility.yul\":6199:6318   */\n      iszero\n      tag_693\n      jumpi\n        /* \"#utility.yul\":6237:6316   */\n      tag_694\n      tag_542\n      jump\t// in\n    tag_694:\n        /* \"#utility.yul\":6199:6318   */\n    tag_693:\n        /* \"#utility.yul\":6357:6358   */\n      0x00\n        /* \"#utility.yul\":6382:6450   */\n      tag_695\n        /* \"#utility.yul\":6442:6449   */\n      dup6\n        /* \"#utility.yul\":6433:6439   */\n      dup3\n        /* \"#utility.yul\":6422:6431   */\n      dup7\n        /* \"#utility.yul\":6418:6440   */\n      add\n        /* \"#utility.yul\":6382:6450   */\n      tag_564\n      jump\t// in\n    tag_695:\n        /* \"#utility.yul\":6372:6450   */\n      swap3\n      pop\n        /* \"#utility.yul\":6328:6460   */\n      pop\n        /* \"#utility.yul\":6499:6501   */\n      0x20\n        /* \"#utility.yul\":6525:6578   */\n      tag_696\n        /* \"#utility.yul\":6570:6577   */\n      dup6\n        /* \"#utility.yul\":6561:6567   */\n      dup3\n        /* \"#utility.yul\":6550:6559   */\n      dup7\n        /* \"#utility.yul\":6546:6568   */\n      add\n        /* \"#utility.yul\":6525:6578   */\n      tag_545\n      jump\t// in\n    tag_696:\n        /* \"#utility.yul\":6515:6578   */\n      swap2\n      pop\n        /* \"#utility.yul\":6470:6588   */\n      pop\n        /* \"#utility.yul\":6091:6595   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6601:6742   */\n    tag_565:\n        /* \"#utility.yul\":6666:6675   */\n      0x00\n        /* \"#utility.yul\":6699:6736   */\n      tag_698\n        /* \"#utility.yul\":6730:6735   */\n      dup3\n        /* \"#utility.yul\":6699:6736   */\n      tag_549\n      jump\t// in\n    tag_698:\n        /* \"#utility.yul\":6686:6736   */\n      swap1\n      pop\n        /* \"#utility.yul\":6601:6742   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6748:6909   */\n    tag_566:\n        /* \"#utility.yul\":6850:6902   */\n      tag_700\n        /* \"#utility.yul\":6896:6901   */\n      dup2\n        /* \"#utility.yul\":6850:6902   */\n      tag_565\n      jump\t// in\n    tag_700:\n        /* \"#utility.yul\":6845:6848   */\n      dup3\n        /* \"#utility.yul\":6838:6903   */\n      mstore\n        /* \"#utility.yul\":6748:6909   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6915:7277   */\n    tag_107:\n        /* \"#utility.yul\":7051:7055   */\n      0x00\n        /* \"#utility.yul\":7089:7091   */\n      0x40\n        /* \"#utility.yul\":7078:7087   */\n      dup3\n        /* \"#utility.yul\":7074:7092   */\n      add\n        /* \"#utility.yul\":7066:7092   */\n      swap1\n      pop\n        /* \"#utility.yul\":7102:7188   */\n      tag_702\n        /* \"#utility.yul\":7185:7186   */\n      0x00\n        /* \"#utility.yul\":7174:7183   */\n      dup4\n        /* \"#utility.yul\":7170:7187   */\n      add\n        /* \"#utility.yul\":7161:7167   */\n      dup6\n        /* \"#utility.yul\":7102:7188   */\n      tag_566\n      jump\t// in\n    tag_702:\n        /* \"#utility.yul\":7198:7270   */\n      tag_703\n        /* \"#utility.yul\":7266:7268   */\n      0x20\n        /* \"#utility.yul\":7255:7264   */\n      dup4\n        /* \"#utility.yul\":7251:7269   */\n      add\n        /* \"#utility.yul\":7242:7248   */\n      dup5\n        /* \"#utility.yul\":7198:7270   */\n      tag_540\n      jump\t// in\n    tag_703:\n        /* \"#utility.yul\":6915:7277   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7283:7896   */\n    tag_112:\n        /* \"#utility.yul\":7357:7363   */\n      0x00\n        /* \"#utility.yul\":7365:7371   */\n      dup1\n        /* \"#utility.yul\":7373:7379   */\n      0x00\n        /* \"#utility.yul\":7422:7424   */\n      0x60\n        /* \"#utility.yul\":7410:7419   */\n      dup5\n        /* \"#utility.yul\":7401:7408   */\n      dup7\n        /* \"#utility.yul\":7397:7420   */\n      sub\n        /* \"#utility.yul\":7393:7425   */\n      slt\n        /* \"#utility.yul\":7390:7509   */\n      iszero\n      tag_705\n      jumpi\n        /* \"#utility.yul\":7428:7507   */\n      tag_706\n      tag_542\n      jump\t// in\n    tag_706:\n        /* \"#utility.yul\":7390:7509   */\n    tag_705:\n        /* \"#utility.yul\":7548:7549   */\n      0x00\n        /* \"#utility.yul\":7573:7626   */\n      tag_707\n        /* \"#utility.yul\":7618:7625   */\n      dup7\n        /* \"#utility.yul\":7609:7615   */\n      dup3\n        /* \"#utility.yul\":7598:7607   */\n      dup8\n        /* \"#utility.yul\":7594:7616   */\n      add\n        /* \"#utility.yul\":7573:7626   */\n      tag_545\n      jump\t// in\n    tag_707:\n        /* \"#utility.yul\":7563:7626   */\n      swap4\n      pop\n        /* \"#utility.yul\":7519:7636   */\n      pop\n        /* \"#utility.yul\":7675:7677   */\n      0x20\n        /* \"#utility.yul\":7701:7754   */\n      tag_708\n        /* \"#utility.yul\":7746:7753   */\n      dup7\n        /* \"#utility.yul\":7737:7743   */\n      dup3\n        /* \"#utility.yul\":7726:7735   */\n      dup8\n        /* \"#utility.yul\":7722:7744   */\n      add\n        /* \"#utility.yul\":7701:7754   */\n      tag_545\n      jump\t// in\n    tag_708:\n        /* \"#utility.yul\":7691:7754   */\n      swap3\n      pop\n        /* \"#utility.yul\":7646:7764   */\n      pop\n        /* \"#utility.yul\":7803:7805   */\n      0x40\n        /* \"#utility.yul\":7829:7879   */\n      tag_709\n        /* \"#utility.yul\":7871:7878   */\n      dup7\n        /* \"#utility.yul\":7862:7868   */\n      dup3\n        /* \"#utility.yul\":7851:7860   */\n      dup8\n        /* \"#utility.yul\":7847:7869   */\n      add\n        /* \"#utility.yul\":7829:7879   */\n      tag_558\n      jump\t// in\n    tag_709:\n        /* \"#utility.yul\":7819:7879   */\n      swap2\n      pop\n        /* \"#utility.yul\":7774:7889   */\n      pop\n        /* \"#utility.yul\":7283:7896   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":7902:8049   */\n    tag_567:\n        /* \"#utility.yul\":7973:7982   */\n      0x00\n        /* \"#utility.yul\":8006:8043   */\n      tag_711\n        /* \"#utility.yul\":8037:8042   */\n      dup3\n        /* \"#utility.yul\":8006:8043   */\n      tag_549\n      jump\t// in\n    tag_711:\n        /* \"#utility.yul\":7993:8043   */\n      swap1\n      pop\n        /* \"#utility.yul\":7902:8049   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8055:8228   */\n    tag_568:\n        /* \"#utility.yul\":8163:8221   */\n      tag_713\n        /* \"#utility.yul\":8215:8220   */\n      dup2\n        /* \"#utility.yul\":8163:8221   */\n      tag_567\n      jump\t// in\n    tag_713:\n        /* \"#utility.yul\":8158:8161   */\n      dup3\n        /* \"#utility.yul\":8151:8222   */\n      mstore\n        /* \"#utility.yul\":8055:8228   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8234:8498   */\n    tag_119:\n        /* \"#utility.yul\":8348:8352   */\n      0x00\n        /* \"#utility.yul\":8386:8388   */\n      0x20\n        /* \"#utility.yul\":8375:8384   */\n      dup3\n        /* \"#utility.yul\":8371:8389   */\n      add\n        /* \"#utility.yul\":8363:8389   */\n      swap1\n      pop\n        /* \"#utility.yul\":8399:8491   */\n      tag_715\n        /* \"#utility.yul\":8488:8489   */\n      0x00\n        /* \"#utility.yul\":8477:8486   */\n      dup4\n        /* \"#utility.yul\":8473:8490   */\n      add\n        /* \"#utility.yul\":8464:8470   */\n      dup5\n        /* \"#utility.yul\":8399:8491   */\n      tag_568\n      jump\t// in\n    tag_715:\n        /* \"#utility.yul\":8234:8498   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8504:8626   */\n    tag_569:\n        /* \"#utility.yul\":8577:8601   */\n      tag_717\n        /* \"#utility.yul\":8595:8600   */\n      dup2\n        /* \"#utility.yul\":8577:8601   */\n      tag_552\n      jump\t// in\n    tag_717:\n        /* \"#utility.yul\":8570:8575   */\n      dup2\n        /* \"#utility.yul\":8567:8602   */\n      eq\n        /* \"#utility.yul\":8557:8620   */\n      tag_718\n      jumpi\n        /* \"#utility.yul\":8616:8617   */\n      0x00\n        /* \"#utility.yul\":8613:8614   */\n      dup1\n        /* \"#utility.yul\":8606:8618   */\n      revert\n        /* \"#utility.yul\":8557:8620   */\n    tag_718:\n        /* \"#utility.yul\":8504:8626   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8632:8771   */\n    tag_570:\n        /* \"#utility.yul\":8678:8683   */\n      0x00\n        /* \"#utility.yul\":8716:8722   */\n      dup2\n        /* \"#utility.yul\":8703:8723   */\n      calldataload\n        /* \"#utility.yul\":8694:8723   */\n      swap1\n      pop\n        /* \"#utility.yul\":8732:8765   */\n      tag_720\n        /* \"#utility.yul\":8759:8764   */\n      dup2\n        /* \"#utility.yul\":8732:8765   */\n      tag_569\n      jump\t// in\n    tag_720:\n        /* \"#utility.yul\":8632:8771   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8777:9106   */\n    tag_125:\n        /* \"#utility.yul\":8836:8842   */\n      0x00\n        /* \"#utility.yul\":8885:8887   */\n      0x20\n        /* \"#utility.yul\":8873:8882   */\n      dup3\n        /* \"#utility.yul\":8864:8871   */\n      dup5\n        /* \"#utility.yul\":8860:8883   */\n      sub\n        /* \"#utility.yul\":8856:8888   */\n      slt\n        /* \"#utility.yul\":8853:8972   */\n      iszero\n      tag_722\n      jumpi\n        /* \"#utility.yul\":8891:8970   */\n      tag_723\n      tag_542\n      jump\t// in\n    tag_723:\n        /* \"#utility.yul\":8853:8972   */\n    tag_722:\n        /* \"#utility.yul\":9011:9012   */\n      0x00\n        /* \"#utility.yul\":9036:9089   */\n      tag_724\n        /* \"#utility.yul\":9081:9088   */\n      dup5\n        /* \"#utility.yul\":9072:9078   */\n      dup3\n        /* \"#utility.yul\":9061:9070   */\n      dup6\n        /* \"#utility.yul\":9057:9079   */\n      add\n        /* \"#utility.yul\":9036:9089   */\n      tag_570\n      jump\t// in\n    tag_724:\n        /* \"#utility.yul\":9026:9089   */\n      swap2\n      pop\n        /* \"#utility.yul\":8982:9099   */\n      pop\n        /* \"#utility.yul\":8777:9106   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9112:9230   */\n    tag_571:\n        /* \"#utility.yul\":9199:9223   */\n      tag_726\n        /* \"#utility.yul\":9217:9222   */\n      dup2\n        /* \"#utility.yul\":9199:9223   */\n      tag_552\n      jump\t// in\n    tag_726:\n        /* \"#utility.yul\":9194:9197   */\n      dup3\n        /* \"#utility.yul\":9187:9224   */\n      mstore\n        /* \"#utility.yul\":9112:9230   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9236:9458   */\n    tag_131:\n        /* \"#utility.yul\":9329:9333   */\n      0x00\n        /* \"#utility.yul\":9367:9369   */\n      0x20\n        /* \"#utility.yul\":9356:9365   */\n      dup3\n        /* \"#utility.yul\":9352:9370   */\n      add\n        /* \"#utility.yul\":9344:9370   */\n      swap1\n      pop\n        /* \"#utility.yul\":9380:9451   */\n      tag_728\n        /* \"#utility.yul\":9448:9449   */\n      0x00\n        /* \"#utility.yul\":9437:9446   */\n      dup4\n        /* \"#utility.yul\":9433:9450   */\n      add\n        /* \"#utility.yul\":9424:9430   */\n      dup5\n        /* \"#utility.yul\":9380:9451   */\n      tag_571\n      jump\t// in\n    tag_728:\n        /* \"#utility.yul\":9236:9458   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9464:9938   */\n    tag_138:\n        /* \"#utility.yul\":9532:9538   */\n      0x00\n        /* \"#utility.yul\":9540:9546   */\n      dup1\n        /* \"#utility.yul\":9589:9591   */\n      0x40\n        /* \"#utility.yul\":9577:9586   */\n      dup4\n        /* \"#utility.yul\":9568:9575   */\n      dup6\n        /* \"#utility.yul\":9564:9587   */\n      sub\n        /* \"#utility.yul\":9560:9592   */\n      slt\n        /* \"#utility.yul\":9557:9676   */\n      iszero\n      tag_730\n      jumpi\n        /* \"#utility.yul\":9595:9674   */\n      tag_731\n      tag_542\n      jump\t// in\n    tag_731:\n        /* \"#utility.yul\":9557:9676   */\n    tag_730:\n        /* \"#utility.yul\":9715:9716   */\n      0x00\n        /* \"#utility.yul\":9740:9793   */\n      tag_732\n        /* \"#utility.yul\":9785:9792   */\n      dup6\n        /* \"#utility.yul\":9776:9782   */\n      dup3\n        /* \"#utility.yul\":9765:9774   */\n      dup7\n        /* \"#utility.yul\":9761:9783   */\n      add\n        /* \"#utility.yul\":9740:9793   */\n      tag_545\n      jump\t// in\n    tag_732:\n        /* \"#utility.yul\":9730:9793   */\n      swap3\n      pop\n        /* \"#utility.yul\":9686:9803   */\n      pop\n        /* \"#utility.yul\":9842:9844   */\n      0x20\n        /* \"#utility.yul\":9868:9921   */\n      tag_733\n        /* \"#utility.yul\":9913:9920   */\n      dup6\n        /* \"#utility.yul\":9904:9910   */\n      dup3\n        /* \"#utility.yul\":9893:9902   */\n      dup7\n        /* \"#utility.yul\":9889:9911   */\n      add\n        /* \"#utility.yul\":9868:9921   */\n      tag_570\n      jump\t// in\n    tag_733:\n        /* \"#utility.yul\":9858:9921   */\n      swap2\n      pop\n        /* \"#utility.yul\":9813:9931   */\n      pop\n        /* \"#utility.yul\":9464:9938   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9944:10276   */\n    tag_141:\n        /* \"#utility.yul\":10065:10069   */\n      0x00\n        /* \"#utility.yul\":10103:10105   */\n      0x40\n        /* \"#utility.yul\":10092:10101   */\n      dup3\n        /* \"#utility.yul\":10088:10106   */\n      add\n        /* \"#utility.yul\":10080:10106   */\n      swap1\n      pop\n        /* \"#utility.yul\":10116:10187   */\n      tag_735\n        /* \"#utility.yul\":10184:10185   */\n      0x00\n        /* \"#utility.yul\":10173:10182   */\n      dup4\n        /* \"#utility.yul\":10169:10186   */\n      add\n        /* \"#utility.yul\":10160:10166   */\n      dup6\n        /* \"#utility.yul\":10116:10187   */\n      tag_540\n      jump\t// in\n    tag_735:\n        /* \"#utility.yul\":10197:10269   */\n      tag_736\n        /* \"#utility.yul\":10265:10267   */\n      0x20\n        /* \"#utility.yul\":10254:10263   */\n      dup4\n        /* \"#utility.yul\":10250:10268   */\n      add\n        /* \"#utility.yul\":10241:10247   */\n      dup5\n        /* \"#utility.yul\":10197:10269   */\n      tag_540\n      jump\t// in\n    tag_736:\n        /* \"#utility.yul\":9944:10276   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10282:10532   */\n    tag_145:\n        /* \"#utility.yul\":10389:10393   */\n      0x00\n        /* \"#utility.yul\":10427:10429   */\n      0x20\n        /* \"#utility.yul\":10416:10425   */\n      dup3\n        /* \"#utility.yul\":10412:10430   */\n      add\n        /* \"#utility.yul\":10404:10430   */\n      swap1\n      pop\n        /* \"#utility.yul\":10440:10525   */\n      tag_738\n        /* \"#utility.yul\":10522:10523   */\n      0x00\n        /* \"#utility.yul\":10511:10520   */\n      dup4\n        /* \"#utility.yul\":10507:10524   */\n      add\n        /* \"#utility.yul\":10498:10504   */\n      dup5\n        /* \"#utility.yul\":10440:10525   */\n      tag_551\n      jump\t// in\n    tag_738:\n        /* \"#utility.yul\":10282:10532   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10538:10718   */\n    tag_170:\n        /* \"#utility.yul\":10586:10663   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":10583:10584   */\n      0x00\n        /* \"#utility.yul\":10576:10664   */\n      mstore\n        /* \"#utility.yul\":10683:10687   */\n      0x32\n        /* \"#utility.yul\":10680:10681   */\n      0x04\n        /* \"#utility.yul\":10673:10688   */\n      mstore\n        /* \"#utility.yul\":10707:10711   */\n      0x24\n        /* \"#utility.yul\":10704:10705   */\n      0x00\n        /* \"#utility.yul\":10697:10712   */\n      revert\n        /* \"#utility.yul\":10724:10893   */\n    tag_572:\n        /* \"#utility.yul\":10808:10819   */\n      0x00\n        /* \"#utility.yul\":10842:10848   */\n      dup3\n        /* \"#utility.yul\":10837:10840   */\n      dup3\n        /* \"#utility.yul\":10830:10849   */\n      mstore\n        /* \"#utility.yul\":10882:10886   */\n      0x20\n        /* \"#utility.yul\":10877:10880   */\n      dup3\n        /* \"#utility.yul\":10873:10887   */\n      add\n        /* \"#utility.yul\":10858:10887   */\n      swap1\n      pop\n        /* \"#utility.yul\":10724:10893   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10899:11067   */\n    tag_573:\n        /* \"#utility.yul\":11039:11059   */\n      0x77697468647261773a206e6f7420676f6f640000000000000000000000000000\n        /* \"#utility.yul\":11035:11036   */\n      0x00\n        /* \"#utility.yul\":11027:11033   */\n      dup3\n        /* \"#utility.yul\":11023:11037   */\n      add\n        /* \"#utility.yul\":11016:11060   */\n      mstore\n        /* \"#utility.yul\":10899:11067   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11073:11439   */\n    tag_574:\n        /* \"#utility.yul\":11215:11218   */\n      0x00\n        /* \"#utility.yul\":11236:11303   */\n      tag_743\n        /* \"#utility.yul\":11300:11302   */\n      0x12\n        /* \"#utility.yul\":11295:11298   */\n      dup4\n        /* \"#utility.yul\":11236:11303   */\n      tag_572\n      jump\t// in\n    tag_743:\n        /* \"#utility.yul\":11229:11303   */\n      swap2\n      pop\n        /* \"#utility.yul\":11312:11405   */\n      tag_744\n        /* \"#utility.yul\":11401:11404   */\n      dup3\n        /* \"#utility.yul\":11312:11405   */\n      tag_573\n      jump\t// in\n    tag_744:\n        /* \"#utility.yul\":11430:11432   */\n      0x20\n        /* \"#utility.yul\":11425:11428   */\n      dup3\n        /* \"#utility.yul\":11421:11433   */\n      add\n        /* \"#utility.yul\":11414:11433   */\n      swap1\n      pop\n        /* \"#utility.yul\":11073:11439   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11445:11864   */\n    tag_174:\n        /* \"#utility.yul\":11611:11615   */\n      0x00\n        /* \"#utility.yul\":11649:11651   */\n      0x20\n        /* \"#utility.yul\":11638:11647   */\n      dup3\n        /* \"#utility.yul\":11634:11652   */\n      add\n        /* \"#utility.yul\":11626:11652   */\n      swap1\n      pop\n        /* \"#utility.yul\":11698:11707   */\n      dup2\n        /* \"#utility.yul\":11692:11696   */\n      dup2\n        /* \"#utility.yul\":11688:11708   */\n      sub\n        /* \"#utility.yul\":11684:11685   */\n      0x00\n        /* \"#utility.yul\":11673:11682   */\n      dup4\n        /* \"#utility.yul\":11669:11686   */\n      add\n        /* \"#utility.yul\":11662:11709   */\n      mstore\n        /* \"#utility.yul\":11726:11857   */\n      tag_746\n        /* \"#utility.yul\":11852:11856   */\n      dup2\n        /* \"#utility.yul\":11726:11857   */\n      tag_574\n      jump\t// in\n    tag_746:\n        /* \"#utility.yul\":11718:11857   */\n      swap1\n      pop\n        /* \"#utility.yul\":11445:11864   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11870:12013   */\n    tag_575:\n        /* \"#utility.yul\":11927:11932   */\n      0x00\n        /* \"#utility.yul\":11958:11964   */\n      dup2\n        /* \"#utility.yul\":11952:11965   */\n      mload\n        /* \"#utility.yul\":11943:11965   */\n      swap1\n      pop\n        /* \"#utility.yul\":11974:12007   */\n      tag_748\n        /* \"#utility.yul\":12001:12006   */\n      dup2\n        /* \"#utility.yul\":11974:12007   */\n      tag_544\n      jump\t// in\n    tag_748:\n        /* \"#utility.yul\":11870:12013   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12019:12370   */\n    tag_202:\n        /* \"#utility.yul\":12089:12095   */\n      0x00\n        /* \"#utility.yul\":12138:12140   */\n      0x20\n        /* \"#utility.yul\":12126:12135   */\n      dup3\n        /* \"#utility.yul\":12117:12124   */\n      dup5\n        /* \"#utility.yul\":12113:12136   */\n      sub\n        /* \"#utility.yul\":12109:12141   */\n      slt\n        /* \"#utility.yul\":12106:12225   */\n      iszero\n      tag_750\n      jumpi\n        /* \"#utility.yul\":12144:12223   */\n      tag_751\n      tag_542\n      jump\t// in\n    tag_751:\n        /* \"#utility.yul\":12106:12225   */\n    tag_750:\n        /* \"#utility.yul\":12264:12265   */\n      0x00\n        /* \"#utility.yul\":12289:12353   */\n      tag_752\n        /* \"#utility.yul\":12345:12352   */\n      dup5\n        /* \"#utility.yul\":12336:12342   */\n      dup3\n        /* \"#utility.yul\":12325:12334   */\n      dup6\n        /* \"#utility.yul\":12321:12343   */\n      add\n        /* \"#utility.yul\":12289:12353   */\n      tag_575\n      jump\t// in\n    tag_752:\n        /* \"#utility.yul\":12279:12353   */\n      swap2\n      pop\n        /* \"#utility.yul\":12235:12363   */\n      pop\n        /* \"#utility.yul\":12019:12370   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12376:12545   */\n    tag_576:\n        /* \"#utility.yul\":12516:12537   */\n      0x506f776572206973206e6f7420656e6f75676800000000000000000000000000\n        /* \"#utility.yul\":12512:12513   */\n      0x00\n        /* \"#utility.yul\":12504:12510   */\n      dup3\n        /* \"#utility.yul\":12500:12514   */\n      add\n        /* \"#utility.yul\":12493:12538   */\n      mstore\n        /* \"#utility.yul\":12376:12545   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12551:12917   */\n    tag_577:\n        /* \"#utility.yul\":12693:12696   */\n      0x00\n        /* \"#utility.yul\":12714:12781   */\n      tag_755\n        /* \"#utility.yul\":12778:12780   */\n      0x13\n        /* \"#utility.yul\":12773:12776   */\n      dup4\n        /* \"#utility.yul\":12714:12781   */\n      tag_572\n      jump\t// in\n    tag_755:\n        /* \"#utility.yul\":12707:12781   */\n      swap2\n      pop\n        /* \"#utility.yul\":12790:12883   */\n      tag_756\n        /* \"#utility.yul\":12879:12882   */\n      dup3\n        /* \"#utility.yul\":12790:12883   */\n      tag_576\n      jump\t// in\n    tag_756:\n        /* \"#utility.yul\":12908:12910   */\n      0x20\n        /* \"#utility.yul\":12903:12906   */\n      dup3\n        /* \"#utility.yul\":12899:12911   */\n      add\n        /* \"#utility.yul\":12892:12911   */\n      swap1\n      pop\n        /* \"#utility.yul\":12551:12917   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12923:13342   */\n    tag_226:\n        /* \"#utility.yul\":13089:13093   */\n      0x00\n        /* \"#utility.yul\":13127:13129   */\n      0x20\n        /* \"#utility.yul\":13116:13125   */\n      dup3\n        /* \"#utility.yul\":13112:13130   */\n      add\n        /* \"#utility.yul\":13104:13130   */\n      swap1\n      pop\n        /* \"#utility.yul\":13176:13185   */\n      dup2\n        /* \"#utility.yul\":13170:13174   */\n      dup2\n        /* \"#utility.yul\":13166:13186   */\n      sub\n        /* \"#utility.yul\":13162:13163   */\n      0x00\n        /* \"#utility.yul\":13151:13160   */\n      dup4\n        /* \"#utility.yul\":13147:13164   */\n      add\n        /* \"#utility.yul\":13140:13187   */\n      mstore\n        /* \"#utility.yul\":13204:13335   */\n      tag_758\n        /* \"#utility.yul\":13330:13334   */\n      dup2\n        /* \"#utility.yul\":13204:13335   */\n      tag_577\n      jump\t// in\n    tag_758:\n        /* \"#utility.yul\":13196:13335   */\n      swap1\n      pop\n        /* \"#utility.yul\":12923:13342   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13348:13530   */\n    tag_578:\n        /* \"#utility.yul\":13488:13522   */\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n        /* \"#utility.yul\":13484:13485   */\n      0x00\n        /* \"#utility.yul\":13476:13482   */\n      dup3\n        /* \"#utility.yul\":13472:13486   */\n      add\n        /* \"#utility.yul\":13465:13523   */\n      mstore\n        /* \"#utility.yul\":13348:13530   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13536:13902   */\n    tag_579:\n        /* \"#utility.yul\":13678:13681   */\n      0x00\n        /* \"#utility.yul\":13699:13766   */\n      tag_761\n        /* \"#utility.yul\":13763:13765   */\n      0x20\n        /* \"#utility.yul\":13758:13761   */\n      dup4\n        /* \"#utility.yul\":13699:13766   */\n      tag_572\n      jump\t// in\n    tag_761:\n        /* \"#utility.yul\":13692:13766   */\n      swap2\n      pop\n        /* \"#utility.yul\":13775:13868   */\n      tag_762\n        /* \"#utility.yul\":13864:13867   */\n      dup3\n        /* \"#utility.yul\":13775:13868   */\n      tag_578\n      jump\t// in\n    tag_762:\n        /* \"#utility.yul\":13893:13895   */\n      0x20\n        /* \"#utility.yul\":13888:13891   */\n      dup3\n        /* \"#utility.yul\":13884:13896   */\n      add\n        /* \"#utility.yul\":13877:13896   */\n      swap1\n      pop\n        /* \"#utility.yul\":13536:13902   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13908:14327   */\n    tag_238:\n        /* \"#utility.yul\":14074:14078   */\n      0x00\n        /* \"#utility.yul\":14112:14114   */\n      0x20\n        /* \"#utility.yul\":14101:14110   */\n      dup3\n        /* \"#utility.yul\":14097:14115   */\n      add\n        /* \"#utility.yul\":14089:14115   */\n      swap1\n      pop\n        /* \"#utility.yul\":14161:14170   */\n      dup2\n        /* \"#utility.yul\":14155:14159   */\n      dup2\n        /* \"#utility.yul\":14151:14171   */\n      sub\n        /* \"#utility.yul\":14147:14148   */\n      0x00\n        /* \"#utility.yul\":14136:14145   */\n      dup4\n        /* \"#utility.yul\":14132:14149   */\n      add\n        /* \"#utility.yul\":14125:14172   */\n      mstore\n        /* \"#utility.yul\":14189:14320   */\n      tag_764\n        /* \"#utility.yul\":14315:14319   */\n      dup2\n        /* \"#utility.yul\":14189:14320   */\n      tag_579\n      jump\t// in\n    tag_764:\n        /* \"#utility.yul\":14181:14320   */\n      swap1\n      pop\n        /* \"#utility.yul\":13908:14327   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14333:14510   */\n    tag_580:\n        /* \"#utility.yul\":14473:14502   */\n      0x776974686472617720506f77657220627920756e7374616b696e670000000000\n        /* \"#utility.yul\":14469:14470   */\n      0x00\n        /* \"#utility.yul\":14461:14467   */\n      dup3\n        /* \"#utility.yul\":14457:14471   */\n      add\n        /* \"#utility.yul\":14450:14503   */\n      mstore\n        /* \"#utility.yul\":14333:14510   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14516:14882   */\n    tag_581:\n        /* \"#utility.yul\":14658:14661   */\n      0x00\n        /* \"#utility.yul\":14679:14746   */\n      tag_767\n        /* \"#utility.yul\":14743:14745   */\n      0x1b\n        /* \"#utility.yul\":14738:14741   */\n      dup4\n        /* \"#utility.yul\":14679:14746   */\n      tag_572\n      jump\t// in\n    tag_767:\n        /* \"#utility.yul\":14672:14746   */\n      swap2\n      pop\n        /* \"#utility.yul\":14755:14848   */\n      tag_768\n        /* \"#utility.yul\":14844:14847   */\n      dup3\n        /* \"#utility.yul\":14755:14848   */\n      tag_580\n      jump\t// in\n    tag_768:\n        /* \"#utility.yul\":14873:14875   */\n      0x20\n        /* \"#utility.yul\":14868:14871   */\n      dup3\n        /* \"#utility.yul\":14864:14876   */\n      add\n        /* \"#utility.yul\":14857:14876   */\n      swap1\n      pop\n        /* \"#utility.yul\":14516:14882   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14888:15307   */\n    tag_279:\n        /* \"#utility.yul\":15054:15058   */\n      0x00\n        /* \"#utility.yul\":15092:15094   */\n      0x20\n        /* \"#utility.yul\":15081:15090   */\n      dup3\n        /* \"#utility.yul\":15077:15095   */\n      add\n        /* \"#utility.yul\":15069:15095   */\n      swap1\n      pop\n        /* \"#utility.yul\":15141:15150   */\n      dup2\n        /* \"#utility.yul\":15135:15139   */\n      dup2\n        /* \"#utility.yul\":15131:15151   */\n      sub\n        /* \"#utility.yul\":15127:15128   */\n      0x00\n        /* \"#utility.yul\":15116:15125   */\n      dup4\n        /* \"#utility.yul\":15112:15129   */\n      add\n        /* \"#utility.yul\":15105:15152   */\n      mstore\n        /* \"#utility.yul\":15169:15300   */\n      tag_770\n        /* \"#utility.yul\":15295:15299   */\n      dup2\n        /* \"#utility.yul\":15169:15300   */\n      tag_581\n      jump\t// in\n    tag_770:\n        /* \"#utility.yul\":15161:15300   */\n      swap1\n      pop\n        /* \"#utility.yul\":14888:15307   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15313:15483   */\n    tag_582:\n        /* \"#utility.yul\":15453:15475   */\n      0x6d6967726174653a206e6f206d69677261746f72000000000000000000000000\n        /* \"#utility.yul\":15449:15450   */\n      0x00\n        /* \"#utility.yul\":15441:15447   */\n      dup3\n        /* \"#utility.yul\":15437:15451   */\n      add\n        /* \"#utility.yul\":15430:15476   */\n      mstore\n        /* \"#utility.yul\":15313:15483   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15489:15855   */\n    tag_583:\n        /* \"#utility.yul\":15631:15634   */\n      0x00\n        /* \"#utility.yul\":15652:15719   */\n      tag_773\n        /* \"#utility.yul\":15716:15718   */\n      0x14\n        /* \"#utility.yul\":15711:15714   */\n      dup4\n        /* \"#utility.yul\":15652:15719   */\n      tag_572\n      jump\t// in\n    tag_773:\n        /* \"#utility.yul\":15645:15719   */\n      swap2\n      pop\n        /* \"#utility.yul\":15728:15821   */\n      tag_774\n        /* \"#utility.yul\":15817:15820   */\n      dup3\n        /* \"#utility.yul\":15728:15821   */\n      tag_582\n      jump\t// in\n    tag_774:\n        /* \"#utility.yul\":15846:15848   */\n      0x20\n        /* \"#utility.yul\":15841:15844   */\n      dup3\n        /* \"#utility.yul\":15837:15849   */\n      add\n        /* \"#utility.yul\":15830:15849   */\n      swap1\n      pop\n        /* \"#utility.yul\":15489:15855   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15861:16280   */\n    tag_299:\n        /* \"#utility.yul\":16027:16031   */\n      0x00\n        /* \"#utility.yul\":16065:16067   */\n      0x20\n        /* \"#utility.yul\":16054:16063   */\n      dup3\n        /* \"#utility.yul\":16050:16068   */\n      add\n        /* \"#utility.yul\":16042:16068   */\n      swap1\n      pop\n        /* \"#utility.yul\":16114:16123   */\n      dup2\n        /* \"#utility.yul\":16108:16112   */\n      dup2\n        /* \"#utility.yul\":16104:16124   */\n      sub\n        /* \"#utility.yul\":16100:16101   */\n      0x00\n        /* \"#utility.yul\":16089:16098   */\n      dup4\n        /* \"#utility.yul\":16085:16102   */\n      add\n        /* \"#utility.yul\":16078:16125   */\n      mstore\n        /* \"#utility.yul\":16142:16273   */\n      tag_776\n        /* \"#utility.yul\":16268:16272   */\n      dup2\n        /* \"#utility.yul\":16142:16273   */\n      tag_583\n      jump\t// in\n    tag_776:\n        /* \"#utility.yul\":16134:16273   */\n      swap1\n      pop\n        /* \"#utility.yul\":15861:16280   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16286:16457   */\n    tag_584:\n        /* \"#utility.yul\":16357:16362   */\n      0x00\n        /* \"#utility.yul\":16388:16394   */\n      dup2\n        /* \"#utility.yul\":16382:16395   */\n      mload\n        /* \"#utility.yul\":16373:16395   */\n      swap1\n      pop\n        /* \"#utility.yul\":16404:16451   */\n      tag_778\n        /* \"#utility.yul\":16445:16450   */\n      dup2\n        /* \"#utility.yul\":16404:16451   */\n      tag_554\n      jump\t// in\n    tag_778:\n        /* \"#utility.yul\":16286:16457   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16463:16842   */\n    tag_313:\n        /* \"#utility.yul\":16547:16553   */\n      0x00\n        /* \"#utility.yul\":16596:16598   */\n      0x20\n        /* \"#utility.yul\":16584:16593   */\n      dup3\n        /* \"#utility.yul\":16575:16582   */\n      dup5\n        /* \"#utility.yul\":16571:16594   */\n      sub\n        /* \"#utility.yul\":16567:16599   */\n      slt\n        /* \"#utility.yul\":16564:16683   */\n      iszero\n      tag_780\n      jumpi\n        /* \"#utility.yul\":16602:16681   */\n      tag_781\n      tag_542\n      jump\t// in\n    tag_781:\n        /* \"#utility.yul\":16564:16683   */\n    tag_780:\n        /* \"#utility.yul\":16722:16723   */\n      0x00\n        /* \"#utility.yul\":16747:16825   */\n      tag_782\n        /* \"#utility.yul\":16817:16824   */\n      dup5\n        /* \"#utility.yul\":16808:16814   */\n      dup3\n        /* \"#utility.yul\":16797:16806   */\n      dup6\n        /* \"#utility.yul\":16793:16815   */\n      add\n        /* \"#utility.yul\":16747:16825   */\n      tag_584\n      jump\t// in\n    tag_782:\n        /* \"#utility.yul\":16737:16825   */\n      swap2\n      pop\n        /* \"#utility.yul\":16693:16835   */\n      pop\n        /* \"#utility.yul\":16463:16842   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16848:17010   */\n    tag_585:\n        /* \"#utility.yul\":16988:17002   */\n      0x6d6967726174653a206261640000000000000000000000000000000000000000\n        /* \"#utility.yul\":16984:16985   */\n      0x00\n        /* \"#utility.yul\":16976:16982   */\n      dup3\n        /* \"#utility.yul\":16972:16986   */\n      add\n        /* \"#utility.yul\":16965:17003   */\n      mstore\n        /* \"#utility.yul\":16848:17010   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17016:17382   */\n    tag_586:\n        /* \"#utility.yul\":17158:17161   */\n      0x00\n        /* \"#utility.yul\":17179:17246   */\n      tag_785\n        /* \"#utility.yul\":17243:17245   */\n      0x0c\n        /* \"#utility.yul\":17238:17241   */\n      dup4\n        /* \"#utility.yul\":17179:17246   */\n      tag_572\n      jump\t// in\n    tag_785:\n        /* \"#utility.yul\":17172:17246   */\n      swap2\n      pop\n        /* \"#utility.yul\":17255:17348   */\n      tag_786\n        /* \"#utility.yul\":17344:17347   */\n      dup3\n        /* \"#utility.yul\":17255:17348   */\n      tag_585\n      jump\t// in\n    tag_786:\n        /* \"#utility.yul\":17373:17375   */\n      0x20\n        /* \"#utility.yul\":17368:17371   */\n      dup3\n        /* \"#utility.yul\":17364:17376   */\n      add\n        /* \"#utility.yul\":17357:17376   */\n      swap1\n      pop\n        /* \"#utility.yul\":17016:17382   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17388:17807   */\n    tag_320:\n        /* \"#utility.yul\":17554:17558   */\n      0x00\n        /* \"#utility.yul\":17592:17594   */\n      0x20\n        /* \"#utility.yul\":17581:17590   */\n      dup3\n        /* \"#utility.yul\":17577:17595   */\n      add\n        /* \"#utility.yul\":17569:17595   */\n      swap1\n      pop\n        /* \"#utility.yul\":17641:17650   */\n      dup2\n        /* \"#utility.yul\":17635:17639   */\n      dup2\n        /* \"#utility.yul\":17631:17651   */\n      sub\n        /* \"#utility.yul\":17627:17628   */\n      0x00\n        /* \"#utility.yul\":17616:17625   */\n      dup4\n        /* \"#utility.yul\":17612:17629   */\n      add\n        /* \"#utility.yul\":17605:17652   */\n      mstore\n        /* \"#utility.yul\":17669:17800   */\n      tag_788\n        /* \"#utility.yul\":17795:17799   */\n      dup2\n        /* \"#utility.yul\":17669:17800   */\n      tag_586\n      jump\t// in\n    tag_788:\n        /* \"#utility.yul\":17661:17800   */\n      swap1\n      pop\n        /* \"#utility.yul\":17388:17807   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17813:17993   */\n    tag_587:\n        /* \"#utility.yul\":17861:17938   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":17858:17859   */\n      0x00\n        /* \"#utility.yul\":17851:17939   */\n      mstore\n        /* \"#utility.yul\":17958:17962   */\n      0x11\n        /* \"#utility.yul\":17955:17956   */\n      0x04\n        /* \"#utility.yul\":17948:17963   */\n      mstore\n        /* \"#utility.yul\":17982:17986   */\n      0x24\n        /* \"#utility.yul\":17979:17980   */\n      0x00\n        /* \"#utility.yul\":17972:17987   */\n      revert\n        /* \"#utility.yul\":17999:18232   */\n    tag_365:\n        /* \"#utility.yul\":18038:18041   */\n      0x00\n        /* \"#utility.yul\":18061:18085   */\n      tag_791\n        /* \"#utility.yul\":18079:18084   */\n      dup3\n        /* \"#utility.yul\":18061:18085   */\n      tag_539\n      jump\t// in\n    tag_791:\n        /* \"#utility.yul\":18052:18085   */\n      swap2\n      pop\n        /* \"#utility.yul\":18107:18173   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":18100:18105   */\n      dup3\n        /* \"#utility.yul\":18097:18174   */\n      sub\n        /* \"#utility.yul\":18094:18197   */\n      tag_792\n      jumpi\n        /* \"#utility.yul\":18177:18195   */\n      tag_793\n      tag_587\n      jump\t// in\n    tag_793:\n        /* \"#utility.yul\":18094:18197   */\n    tag_792:\n        /* \"#utility.yul\":18224:18225   */\n      0x01\n        /* \"#utility.yul\":18217:18222   */\n      dup3\n        /* \"#utility.yul\":18213:18226   */\n      add\n        /* \"#utility.yul\":18206:18226   */\n      swap1\n      pop\n        /* \"#utility.yul\":17999:18232   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18238:18412   */\n    tag_588:\n        /* \"#utility.yul\":18378:18404   */\n      0x6465706f73697420506f776572206279207374616b696e670000000000000000\n        /* \"#utility.yul\":18374:18375   */\n      0x00\n        /* \"#utility.yul\":18366:18372   */\n      dup3\n        /* \"#utility.yul\":18362:18376   */\n      add\n        /* \"#utility.yul\":18355:18405   */\n      mstore\n        /* \"#utility.yul\":18238:18412   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18418:18784   */\n    tag_589:\n        /* \"#utility.yul\":18560:18563   */\n      0x00\n        /* \"#utility.yul\":18581:18648   */\n      tag_796\n        /* \"#utility.yul\":18645:18647   */\n      0x18\n        /* \"#utility.yul\":18640:18643   */\n      dup4\n        /* \"#utility.yul\":18581:18648   */\n      tag_572\n      jump\t// in\n    tag_796:\n        /* \"#utility.yul\":18574:18648   */\n      swap2\n      pop\n        /* \"#utility.yul\":18657:18750   */\n      tag_797\n        /* \"#utility.yul\":18746:18749   */\n      dup3\n        /* \"#utility.yul\":18657:18750   */\n      tag_588\n      jump\t// in\n    tag_797:\n        /* \"#utility.yul\":18775:18777   */\n      0x20\n        /* \"#utility.yul\":18770:18773   */\n      dup3\n        /* \"#utility.yul\":18766:18778   */\n      add\n        /* \"#utility.yul\":18759:18778   */\n      swap1\n      pop\n        /* \"#utility.yul\":18418:18784   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18790:19209   */\n    tag_404:\n        /* \"#utility.yul\":18956:18960   */\n      0x00\n        /* \"#utility.yul\":18994:18996   */\n      0x20\n        /* \"#utility.yul\":18983:18992   */\n      dup3\n        /* \"#utility.yul\":18979:18997   */\n      add\n        /* \"#utility.yul\":18971:18997   */\n      swap1\n      pop\n        /* \"#utility.yul\":19043:19052   */\n      dup2\n        /* \"#utility.yul\":19037:19041   */\n      dup2\n        /* \"#utility.yul\":19033:19053   */\n      sub\n        /* \"#utility.yul\":19029:19030   */\n      0x00\n        /* \"#utility.yul\":19018:19027   */\n      dup4\n        /* \"#utility.yul\":19014:19031   */\n      add\n        /* \"#utility.yul\":19007:19054   */\n      mstore\n        /* \"#utility.yul\":19071:19202   */\n      tag_799\n        /* \"#utility.yul\":19197:19201   */\n      dup2\n        /* \"#utility.yul\":19071:19202   */\n      tag_589\n      jump\t// in\n    tag_799:\n        /* \"#utility.yul\":19063:19202   */\n      swap1\n      pop\n        /* \"#utility.yul\":18790:19209   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19215:19440   */\n    tag_590:\n        /* \"#utility.yul\":19355:19389   */\n      0x4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061\n        /* \"#utility.yul\":19351:19352   */\n      0x00\n        /* \"#utility.yul\":19343:19349   */\n      dup3\n        /* \"#utility.yul\":19339:19353   */\n      add\n        /* \"#utility.yul\":19332:19390   */\n      mstore\n        /* \"#utility.yul\":19424:19432   */\n      0x6464726573730000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":19419:19421   */\n      0x20\n        /* \"#utility.yul\":19411:19417   */\n      dup3\n        /* \"#utility.yul\":19407:19422   */\n      add\n        /* \"#utility.yul\":19400:19433   */\n      mstore\n        /* \"#utility.yul\":19215:19440   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19446:19812   */\n    tag_591:\n        /* \"#utility.yul\":19588:19591   */\n      0x00\n        /* \"#utility.yul\":19609:19676   */\n      tag_802\n        /* \"#utility.yul\":19673:19675   */\n      0x26\n        /* \"#utility.yul\":19668:19671   */\n      dup4\n        /* \"#utility.yul\":19609:19676   */\n      tag_572\n      jump\t// in\n    tag_802:\n        /* \"#utility.yul\":19602:19676   */\n      swap2\n      pop\n        /* \"#utility.yul\":19685:19778   */\n      tag_803\n        /* \"#utility.yul\":19774:19777   */\n      dup3\n        /* \"#utility.yul\":19685:19778   */\n      tag_590\n      jump\t// in\n    tag_803:\n        /* \"#utility.yul\":19803:19805   */\n      0x40\n        /* \"#utility.yul\":19798:19801   */\n      dup3\n        /* \"#utility.yul\":19794:19806   */\n      add\n        /* \"#utility.yul\":19787:19806   */\n      swap1\n      pop\n        /* \"#utility.yul\":19446:19812   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19818:20237   */\n    tag_428:\n        /* \"#utility.yul\":19984:19988   */\n      0x00\n        /* \"#utility.yul\":20022:20024   */\n      0x20\n        /* \"#utility.yul\":20011:20020   */\n      dup3\n        /* \"#utility.yul\":20007:20025   */\n      add\n        /* \"#utility.yul\":19999:20025   */\n      swap1\n      pop\n        /* \"#utility.yul\":20071:20080   */\n      dup2\n        /* \"#utility.yul\":20065:20069   */\n      dup2\n        /* \"#utility.yul\":20061:20081   */\n      sub\n        /* \"#utility.yul\":20057:20058   */\n      0x00\n        /* \"#utility.yul\":20046:20055   */\n      dup4\n        /* \"#utility.yul\":20042:20059   */\n      add\n        /* \"#utility.yul\":20035:20082   */\n      mstore\n        /* \"#utility.yul\":20099:20230   */\n      tag_805\n        /* \"#utility.yul\":20225:20229   */\n      dup2\n        /* \"#utility.yul\":20099:20230   */\n      tag_591\n      jump\t// in\n    tag_805:\n        /* \"#utility.yul\":20091:20230   */\n      swap1\n      pop\n        /* \"#utility.yul\":19818:20237   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20243:20591   */\n    tag_453:\n        /* \"#utility.yul\":20283:20290   */\n      0x00\n        /* \"#utility.yul\":20306:20326   */\n      tag_807\n        /* \"#utility.yul\":20324:20325   */\n      dup3\n        /* \"#utility.yul\":20306:20326   */\n      tag_539\n      jump\t// in\n    tag_807:\n        /* \"#utility.yul\":20301:20326   */\n      swap2\n      pop\n        /* \"#utility.yul\":20340:20360   */\n      tag_808\n        /* \"#utility.yul\":20358:20359   */\n      dup4\n        /* \"#utility.yul\":20340:20360   */\n      tag_539\n      jump\t// in\n    tag_808:\n        /* \"#utility.yul\":20335:20360   */\n      swap3\n      pop\n        /* \"#utility.yul\":20528:20529   */\n      dup2\n        /* \"#utility.yul\":20460:20526   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":20456:20530   */\n      div\n        /* \"#utility.yul\":20453:20454   */\n      dup4\n        /* \"#utility.yul\":20450:20531   */\n      gt\n        /* \"#utility.yul\":20445:20446   */\n      dup3\n        /* \"#utility.yul\":20438:20447   */\n      iszero\n        /* \"#utility.yul\":20431:20448   */\n      iszero\n        /* \"#utility.yul\":20427:20532   */\n      and\n        /* \"#utility.yul\":20424:20555   */\n      iszero\n      tag_809\n      jumpi\n        /* \"#utility.yul\":20535:20553   */\n      tag_810\n      tag_587\n      jump\t// in\n    tag_810:\n        /* \"#utility.yul\":20424:20555   */\n    tag_809:\n        /* \"#utility.yul\":20583:20584   */\n      dup3\n        /* \"#utility.yul\":20580:20581   */\n      dup3\n        /* \"#utility.yul\":20576:20585   */\n      mul\n        /* \"#utility.yul\":20565:20585   */\n      swap1\n      pop\n        /* \"#utility.yul\":20243:20591   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20597:20777   */\n    tag_592:\n        /* \"#utility.yul\":20645:20722   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":20642:20643   */\n      0x00\n        /* \"#utility.yul\":20635:20723   */\n      mstore\n        /* \"#utility.yul\":20742:20746   */\n      0x12\n        /* \"#utility.yul\":20739:20740   */\n      0x04\n        /* \"#utility.yul\":20732:20747   */\n      mstore\n        /* \"#utility.yul\":20766:20770   */\n      0x24\n        /* \"#utility.yul\":20763:20764   */\n      0x00\n        /* \"#utility.yul\":20756:20771   */\n      revert\n        /* \"#utility.yul\":20783:20968   */\n    tag_455:\n        /* \"#utility.yul\":20823:20824   */\n      0x00\n        /* \"#utility.yul\":20840:20860   */\n      tag_813\n        /* \"#utility.yul\":20858:20859   */\n      dup3\n        /* \"#utility.yul\":20840:20860   */\n      tag_539\n      jump\t// in\n    tag_813:\n        /* \"#utility.yul\":20835:20860   */\n      swap2\n      pop\n        /* \"#utility.yul\":20874:20894   */\n      tag_814\n        /* \"#utility.yul\":20892:20893   */\n      dup4\n        /* \"#utility.yul\":20874:20894   */\n      tag_539\n      jump\t// in\n    tag_814:\n        /* \"#utility.yul\":20869:20894   */\n      swap3\n      pop\n        /* \"#utility.yul\":20913:20914   */\n      dup3\n        /* \"#utility.yul\":20903:20938   */\n      tag_815\n      jumpi\n        /* \"#utility.yul\":20918:20936   */\n      tag_816\n      tag_592\n      jump\t// in\n    tag_816:\n        /* \"#utility.yul\":20903:20938   */\n    tag_815:\n        /* \"#utility.yul\":20960:20961   */\n      dup3\n        /* \"#utility.yul\":20957:20958   */\n      dup3\n        /* \"#utility.yul\":20953:20962   */\n      div\n        /* \"#utility.yul\":20948:20962   */\n      swap1\n      pop\n        /* \"#utility.yul\":20783:20968   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20974:21194   */\n    tag_593:\n        /* \"#utility.yul\":21114:21148   */\n      0x536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f\n        /* \"#utility.yul\":21110:21111   */\n      0x00\n        /* \"#utility.yul\":21102:21108   */\n      dup3\n        /* \"#utility.yul\":21098:21112   */\n      add\n        /* \"#utility.yul\":21091:21149   */\n      mstore\n        /* \"#utility.yul\":21183:21186   */\n      0x7700000000000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":21178:21180   */\n      0x20\n        /* \"#utility.yul\":21170:21176   */\n      dup3\n        /* \"#utility.yul\":21166:21181   */\n      add\n        /* \"#utility.yul\":21159:21187   */\n      mstore\n        /* \"#utility.yul\":20974:21194   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21200:21566   */\n    tag_594:\n        /* \"#utility.yul\":21342:21345   */\n      0x00\n        /* \"#utility.yul\":21363:21430   */\n      tag_819\n        /* \"#utility.yul\":21427:21429   */\n      0x21\n        /* \"#utility.yul\":21422:21425   */\n      dup4\n        /* \"#utility.yul\":21363:21430   */\n      tag_572\n      jump\t// in\n    tag_819:\n        /* \"#utility.yul\":21356:21430   */\n      swap2\n      pop\n        /* \"#utility.yul\":21439:21532   */\n      tag_820\n        /* \"#utility.yul\":21528:21531   */\n      dup3\n        /* \"#utility.yul\":21439:21532   */\n      tag_593\n      jump\t// in\n    tag_820:\n        /* \"#utility.yul\":21557:21559   */\n      0x40\n        /* \"#utility.yul\":21552:21555   */\n      dup3\n        /* \"#utility.yul\":21548:21560   */\n      add\n        /* \"#utility.yul\":21541:21560   */\n      swap1\n      pop\n        /* \"#utility.yul\":21200:21566   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21572:21991   */\n    tag_458:\n        /* \"#utility.yul\":21738:21742   */\n      0x00\n        /* \"#utility.yul\":21776:21778   */\n      0x20\n        /* \"#utility.yul\":21765:21774   */\n      dup3\n        /* \"#utility.yul\":21761:21779   */\n      add\n        /* \"#utility.yul\":21753:21779   */\n      swap1\n      pop\n        /* \"#utility.yul\":21825:21834   */\n      dup2\n        /* \"#utility.yul\":21819:21823   */\n      dup2\n        /* \"#utility.yul\":21815:21835   */\n      sub\n        /* \"#utility.yul\":21811:21812   */\n      0x00\n        /* \"#utility.yul\":21800:21809   */\n      dup4\n        /* \"#utility.yul\":21796:21813   */\n      add\n        /* \"#utility.yul\":21789:21836   */\n      mstore\n        /* \"#utility.yul\":21853:21984   */\n      tag_822\n        /* \"#utility.yul\":21979:21983   */\n      dup2\n        /* \"#utility.yul\":21853:21984   */\n      tag_594\n      jump\t// in\n    tag_822:\n        /* \"#utility.yul\":21845:21984   */\n      swap1\n      pop\n        /* \"#utility.yul\":21572:21991   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21997:22302   */\n    tag_467:\n        /* \"#utility.yul\":22037:22040   */\n      0x00\n        /* \"#utility.yul\":22056:22076   */\n      tag_824\n        /* \"#utility.yul\":22074:22075   */\n      dup3\n        /* \"#utility.yul\":22056:22076   */\n      tag_539\n      jump\t// in\n    tag_824:\n        /* \"#utility.yul\":22051:22076   */\n      swap2\n      pop\n        /* \"#utility.yul\":22090:22110   */\n      tag_825\n        /* \"#utility.yul\":22108:22109   */\n      dup4\n        /* \"#utility.yul\":22090:22110   */\n      tag_539\n      jump\t// in\n    tag_825:\n        /* \"#utility.yul\":22085:22110   */\n      swap3\n      pop\n        /* \"#utility.yul\":22244:22245   */\n      dup3\n        /* \"#utility.yul\":22176:22242   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":22172:22246   */\n      sub\n        /* \"#utility.yul\":22169:22170   */\n      dup3\n        /* \"#utility.yul\":22166:22247   */\n      gt\n        /* \"#utility.yul\":22163:22270   */\n      iszero\n      tag_826\n      jumpi\n        /* \"#utility.yul\":22250:22268   */\n      tag_827\n      tag_587\n      jump\t// in\n    tag_827:\n        /* \"#utility.yul\":22163:22270   */\n    tag_826:\n        /* \"#utility.yul\":22294:22295   */\n      dup3\n        /* \"#utility.yul\":22291:22292   */\n      dup3\n        /* \"#utility.yul\":22287:22296   */\n      add\n        /* \"#utility.yul\":22280:22296   */\n      swap1\n      pop\n        /* \"#utility.yul\":21997:22302   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22308:22485   */\n    tag_595:\n        /* \"#utility.yul\":22448:22477   */\n      0x536166654d6174683a206164646974696f6e206f766572666c6f770000000000\n        /* \"#utility.yul\":22444:22445   */\n      0x00\n        /* \"#utility.yul\":22436:22442   */\n      dup3\n        /* \"#utility.yul\":22432:22446   */\n      add\n        /* \"#utility.yul\":22425:22478   */\n      mstore\n        /* \"#utility.yul\":22308:22485   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22491:22857   */\n    tag_596:\n        /* \"#utility.yul\":22633:22636   */\n      0x00\n        /* \"#utility.yul\":22654:22721   */\n      tag_830\n        /* \"#utility.yul\":22718:22720   */\n      0x1b\n        /* \"#utility.yul\":22713:22716   */\n      dup4\n        /* \"#utility.yul\":22654:22721   */\n      tag_572\n      jump\t// in\n    tag_830:\n        /* \"#utility.yul\":22647:22721   */\n      swap2\n      pop\n        /* \"#utility.yul\":22730:22823   */\n      tag_831\n        /* \"#utility.yul\":22819:22822   */\n      dup3\n        /* \"#utility.yul\":22730:22823   */\n      tag_595\n      jump\t// in\n    tag_831:\n        /* \"#utility.yul\":22848:22850   */\n      0x20\n        /* \"#utility.yul\":22843:22846   */\n      dup3\n        /* \"#utility.yul\":22839:22851   */\n      add\n        /* \"#utility.yul\":22832:22851   */\n      swap1\n      pop\n        /* \"#utility.yul\":22491:22857   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22863:23282   */\n    tag_470:\n        /* \"#utility.yul\":23029:23033   */\n      0x00\n        /* \"#utility.yul\":23067:23069   */\n      0x20\n        /* \"#utility.yul\":23056:23065   */\n      dup3\n        /* \"#utility.yul\":23052:23070   */\n      add\n        /* \"#utility.yul\":23044:23070   */\n      swap1\n      pop\n        /* \"#utility.yul\":23116:23125   */\n      dup2\n        /* \"#utility.yul\":23110:23114   */\n      dup2\n        /* \"#utility.yul\":23106:23126   */\n      sub\n        /* \"#utility.yul\":23102:23103   */\n      0x00\n        /* \"#utility.yul\":23091:23100   */\n      dup4\n        /* \"#utility.yul\":23087:23104   */\n      add\n        /* \"#utility.yul\":23080:23127   */\n      mstore\n        /* \"#utility.yul\":23144:23275   */\n      tag_833\n        /* \"#utility.yul\":23270:23274   */\n      dup2\n        /* \"#utility.yul\":23144:23275   */\n      tag_596\n      jump\t// in\n    tag_833:\n        /* \"#utility.yul\":23136:23275   */\n      swap1\n      pop\n        /* \"#utility.yul\":22863:23282   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23288:23620   */\n    tag_474:\n        /* \"#utility.yul\":23409:23413   */\n      0x00\n        /* \"#utility.yul\":23447:23449   */\n      0x40\n        /* \"#utility.yul\":23436:23445   */\n      dup3\n        /* \"#utility.yul\":23432:23450   */\n      add\n        /* \"#utility.yul\":23424:23450   */\n      swap1\n      pop\n        /* \"#utility.yul\":23460:23531   */\n      tag_835\n        /* \"#utility.yul\":23528:23529   */\n      0x00\n        /* \"#utility.yul\":23517:23526   */\n      dup4\n        /* \"#utility.yul\":23513:23530   */\n      add\n        /* \"#utility.yul\":23504:23510   */\n      dup6\n        /* \"#utility.yul\":23460:23531   */\n      tag_571\n      jump\t// in\n    tag_835:\n        /* \"#utility.yul\":23541:23613   */\n      tag_836\n        /* \"#utility.yul\":23609:23611   */\n      0x20\n        /* \"#utility.yul\":23598:23607   */\n      dup4\n        /* \"#utility.yul\":23594:23612   */\n      add\n        /* \"#utility.yul\":23585:23591   */\n      dup5\n        /* \"#utility.yul\":23541:23613   */\n      tag_540\n      jump\t// in\n    tag_836:\n        /* \"#utility.yul\":23288:23620   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23626:24068   */\n    tag_480:\n        /* \"#utility.yul\":23775:23779   */\n      0x00\n        /* \"#utility.yul\":23813:23815   */\n      0x60\n        /* \"#utility.yul\":23802:23811   */\n      dup3\n        /* \"#utility.yul\":23798:23816   */\n      add\n        /* \"#utility.yul\":23790:23816   */\n      swap1\n      pop\n        /* \"#utility.yul\":23826:23897   */\n      tag_838\n        /* \"#utility.yul\":23894:23895   */\n      0x00\n        /* \"#utility.yul\":23883:23892   */\n      dup4\n        /* \"#utility.yul\":23879:23896   */\n      add\n        /* \"#utility.yul\":23870:23876   */\n      dup7\n        /* \"#utility.yul\":23826:23897   */\n      tag_571\n      jump\t// in\n    tag_838:\n        /* \"#utility.yul\":23907:23979   */\n      tag_839\n        /* \"#utility.yul\":23975:23977   */\n      0x20\n        /* \"#utility.yul\":23964:23973   */\n      dup4\n        /* \"#utility.yul\":23960:23978   */\n      add\n        /* \"#utility.yul\":23951:23957   */\n      dup6\n        /* \"#utility.yul\":23907:23979   */\n      tag_571\n      jump\t// in\n    tag_839:\n        /* \"#utility.yul\":23989:24061   */\n      tag_840\n        /* \"#utility.yul\":24057:24059   */\n      0x40\n        /* \"#utility.yul\":24046:24055   */\n      dup4\n        /* \"#utility.yul\":24042:24060   */\n      add\n        /* \"#utility.yul\":24033:24039   */\n      dup5\n        /* \"#utility.yul\":23989:24061   */\n      tag_540\n      jump\t// in\n    tag_840:\n        /* \"#utility.yul\":23626:24068   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24074:24406   */\n    tag_484:\n        /* \"#utility.yul\":24195:24199   */\n      0x00\n        /* \"#utility.yul\":24233:24235   */\n      0x40\n        /* \"#utility.yul\":24222:24231   */\n      dup3\n        /* \"#utility.yul\":24218:24236   */\n      add\n        /* \"#utility.yul\":24210:24236   */\n      swap1\n      pop\n        /* \"#utility.yul\":24246:24317   */\n      tag_842\n        /* \"#utility.yul\":24314:24315   */\n      0x00\n        /* \"#utility.yul\":24303:24312   */\n      dup4\n        /* \"#utility.yul\":24299:24316   */\n      add\n        /* \"#utility.yul\":24290:24296   */\n      dup6\n        /* \"#utility.yul\":24246:24317   */\n      tag_571\n      jump\t// in\n    tag_842:\n        /* \"#utility.yul\":24327:24399   */\n      tag_843\n        /* \"#utility.yul\":24395:24397   */\n      0x20\n        /* \"#utility.yul\":24384:24393   */\n      dup4\n        /* \"#utility.yul\":24380:24398   */\n      add\n        /* \"#utility.yul\":24371:24377   */\n      dup5\n        /* \"#utility.yul\":24327:24399   */\n      tag_571\n      jump\t// in\n    tag_843:\n        /* \"#utility.yul\":24074:24406   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24412:24653   */\n    tag_597:\n        /* \"#utility.yul\":24552:24586   */\n      0x5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f\n        /* \"#utility.yul\":24548:24549   */\n      0x00\n        /* \"#utility.yul\":24540:24546   */\n      dup3\n        /* \"#utility.yul\":24536:24550   */\n      add\n        /* \"#utility.yul\":24529:24587   */\n      mstore\n        /* \"#utility.yul\":24621:24645   */\n      0x20746f206e6f6e2d7a65726f20616c6c6f77616e636500000000000000000000\n        /* \"#utility.yul\":24616:24618   */\n      0x20\n        /* \"#utility.yul\":24608:24614   */\n      dup3\n        /* \"#utility.yul\":24604:24619   */\n      add\n        /* \"#utility.yul\":24597:24646   */\n      mstore\n        /* \"#utility.yul\":24412:24653   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24659:25025   */\n    tag_598:\n        /* \"#utility.yul\":24801:24804   */\n      0x00\n        /* \"#utility.yul\":24822:24889   */\n      tag_846\n        /* \"#utility.yul\":24886:24888   */\n      0x36\n        /* \"#utility.yul\":24881:24884   */\n      dup4\n        /* \"#utility.yul\":24822:24889   */\n      tag_572\n      jump\t// in\n    tag_846:\n        /* \"#utility.yul\":24815:24889   */\n      swap2\n      pop\n        /* \"#utility.yul\":24898:24991   */\n      tag_847\n        /* \"#utility.yul\":24987:24990   */\n      dup3\n        /* \"#utility.yul\":24898:24991   */\n      tag_597\n      jump\t// in\n    tag_847:\n        /* \"#utility.yul\":25016:25018   */\n      0x40\n        /* \"#utility.yul\":25011:25014   */\n      dup3\n        /* \"#utility.yul\":25007:25019   */\n      add\n        /* \"#utility.yul\":25000:25019   */\n      swap1\n      pop\n        /* \"#utility.yul\":24659:25025   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":25031:25450   */\n    tag_490:\n        /* \"#utility.yul\":25197:25201   */\n      0x00\n        /* \"#utility.yul\":25235:25237   */\n      0x20\n        /* \"#utility.yul\":25224:25233   */\n      dup3\n        /* \"#utility.yul\":25220:25238   */\n      add\n        /* \"#utility.yul\":25212:25238   */\n      swap1\n      pop\n        /* \"#utility.yul\":25284:25293   */\n      dup2\n        /* \"#utility.yul\":25278:25282   */\n      dup2\n        /* \"#utility.yul\":25274:25294   */\n      sub\n        /* \"#utility.yul\":25270:25271   */\n      0x00\n        /* \"#utility.yul\":25259:25268   */\n      dup4\n        /* \"#utility.yul\":25255:25272   */\n      add\n        /* \"#utility.yul\":25248:25295   */\n      mstore\n        /* \"#utility.yul\":25312:25443   */\n      tag_849\n        /* \"#utility.yul\":25438:25442   */\n      dup2\n        /* \"#utility.yul\":25312:25443   */\n      tag_598\n      jump\t// in\n    tag_849:\n        /* \"#utility.yul\":25304:25443   */\n      swap1\n      pop\n        /* \"#utility.yul\":25031:25450   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":25456:25555   */\n    tag_599:\n        /* \"#utility.yul\":25508:25514   */\n      0x00\n        /* \"#utility.yul\":25542:25547   */\n      dup2\n        /* \"#utility.yul\":25536:25548   */\n      mload\n        /* \"#utility.yul\":25526:25548   */\n      swap1\n      pop\n        /* \"#utility.yul\":25456:25555   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":25561:25868   */\n    tag_600:\n        /* \"#utility.yul\":25629:25630   */\n      0x00\n        /* \"#utility.yul\":25639:25752   */\n    tag_852:\n        /* \"#utility.yul\":25653:25659   */\n      dup4\n        /* \"#utility.yul\":25650:25651   */\n      dup2\n        /* \"#utility.yul\":25647:25660   */\n      lt\n        /* \"#utility.yul\":25639:25752   */\n      iszero\n      tag_854\n      jumpi\n        /* \"#utility.yul\":25738:25739   */\n      dup1\n        /* \"#utility.yul\":25733:25736   */\n      dup3\n        /* \"#utility.yul\":25729:25740   */\n      add\n        /* \"#utility.yul\":25723:25741   */\n      mload\n        /* \"#utility.yul\":25719:25720   */\n      dup2\n        /* \"#utility.yul\":25714:25717   */\n      dup5\n        /* \"#utility.yul\":25710:25721   */\n      add\n        /* \"#utility.yul\":25703:25742   */\n      mstore\n        /* \"#utility.yul\":25675:25677   */\n      0x20\n        /* \"#utility.yul\":25672:25673   */\n      dup2\n        /* \"#utility.yul\":25668:25678   */\n      add\n        /* \"#utility.yul\":25663:25678   */\n      swap1\n      pop\n        /* \"#utility.yul\":25639:25752   */\n      jump(tag_852)\n    tag_854:\n        /* \"#utility.yul\":25770:25776   */\n      dup4\n        /* \"#utility.yul\":25767:25768   */\n      dup2\n        /* \"#utility.yul\":25764:25777   */\n      gt\n        /* \"#utility.yul\":25761:25862   */\n      iszero\n      tag_855\n      jumpi\n        /* \"#utility.yul\":25850:25851   */\n      0x00\n        /* \"#utility.yul\":25841:25847   */\n      dup5\n        /* \"#utility.yul\":25836:25839   */\n      dup5\n        /* \"#utility.yul\":25832:25848   */\n      add\n        /* \"#utility.yul\":25825:25852   */\n      mstore\n        /* \"#utility.yul\":25761:25862   */\n    tag_855:\n        /* \"#utility.yul\":25610:25868   */\n      pop\n        /* \"#utility.yul\":25561:25868   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":25874:25976   */\n    tag_601:\n        /* \"#utility.yul\":25915:25921   */\n      0x00\n        /* \"#utility.yul\":25966:25968   */\n      0x1f\n        /* \"#utility.yul\":25962:25969   */\n      not\n        /* \"#utility.yul\":25957:25959   */\n      0x1f\n        /* \"#utility.yul\":25950:25955   */\n      dup4\n        /* \"#utility.yul\":25946:25960   */\n      add\n        /* \"#utility.yul\":25942:25970   */\n      and\n        /* \"#utility.yul\":25932:25970   */\n      swap1\n      pop\n        /* \"#utility.yul\":25874:25976   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":25982:26346   */\n    tag_602:\n        /* \"#utility.yul\":26070:26073   */\n      0x00\n        /* \"#utility.yul\":26098:26137   */\n      tag_858\n        /* \"#utility.yul\":26131:26136   */\n      dup3\n        /* \"#utility.yul\":26098:26137   */\n      tag_599\n      jump\t// in\n    tag_858:\n        /* \"#utility.yul\":26153:26224   */\n      tag_859\n        /* \"#utility.yul\":26217:26223   */\n      dup2\n        /* \"#utility.yul\":26212:26215   */\n      dup6\n        /* \"#utility.yul\":26153:26224   */\n      tag_572\n      jump\t// in\n    tag_859:\n        /* \"#utility.yul\":26146:26224   */\n      swap4\n      pop\n        /* \"#utility.yul\":26233:26285   */\n      tag_860\n        /* \"#utility.yul\":26278:26284   */\n      dup2\n        /* \"#utility.yul\":26273:26276   */\n      dup6\n        /* \"#utility.yul\":26266:26270   */\n      0x20\n        /* \"#utility.yul\":26259:26264   */\n      dup7\n        /* \"#utility.yul\":26255:26271   */\n      add\n        /* \"#utility.yul\":26233:26285   */\n      tag_600\n      jump\t// in\n    tag_860:\n        /* \"#utility.yul\":26310:26339   */\n      tag_861\n        /* \"#utility.yul\":26332:26338   */\n      dup2\n        /* \"#utility.yul\":26310:26339   */\n      tag_601\n      jump\t// in\n    tag_861:\n        /* \"#utility.yul\":26305:26308   */\n      dup5\n        /* \"#utility.yul\":26301:26340   */\n      add\n        /* \"#utility.yul\":26294:26340   */\n      swap2\n      pop\n        /* \"#utility.yul\":26074:26346   */\n      pop\n        /* \"#utility.yul\":25982:26346   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":26352:26665   */\n    tag_497:\n        /* \"#utility.yul\":26465:26469   */\n      0x00\n        /* \"#utility.yul\":26503:26505   */\n      0x20\n        /* \"#utility.yul\":26492:26501   */\n      dup3\n        /* \"#utility.yul\":26488:26506   */\n      add\n        /* \"#utility.yul\":26480:26506   */\n      swap1\n      pop\n        /* \"#utility.yul\":26552:26561   */\n      dup2\n        /* \"#utility.yul\":26546:26550   */\n      dup2\n        /* \"#utility.yul\":26542:26562   */\n      sub\n        /* \"#utility.yul\":26538:26539   */\n      0x00\n        /* \"#utility.yul\":26527:26536   */\n      dup4\n        /* \"#utility.yul\":26523:26540   */\n      add\n        /* \"#utility.yul\":26516:26563   */\n      mstore\n        /* \"#utility.yul\":26580:26658   */\n      tag_863\n        /* \"#utility.yul\":26653:26657   */\n      dup2\n        /* \"#utility.yul\":26644:26650   */\n      dup5\n        /* \"#utility.yul\":26580:26658   */\n      tag_602\n      jump\t// in\n    tag_863:\n        /* \"#utility.yul\":26572:26658   */\n      swap1\n      pop\n        /* \"#utility.yul\":26352:26665   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":26671:26862   */\n    tag_503:\n        /* \"#utility.yul\":26711:26715   */\n      0x00\n        /* \"#utility.yul\":26731:26751   */\n      tag_865\n        /* \"#utility.yul\":26749:26750   */\n      dup3\n        /* \"#utility.yul\":26731:26751   */\n      tag_539\n      jump\t// in\n    tag_865:\n        /* \"#utility.yul\":26726:26751   */\n      swap2\n      pop\n        /* \"#utility.yul\":26765:26785   */\n      tag_866\n        /* \"#utility.yul\":26783:26784   */\n      dup4\n        /* \"#utility.yul\":26765:26785   */\n      tag_539\n      jump\t// in\n    tag_866:\n        /* \"#utility.yul\":26760:26785   */\n      swap3\n      pop\n        /* \"#utility.yul\":26804:26805   */\n      dup3\n        /* \"#utility.yul\":26801:26802   */\n      dup3\n        /* \"#utility.yul\":26798:26806   */\n      lt\n        /* \"#utility.yul\":26795:26829   */\n      iszero\n      tag_867\n      jumpi\n        /* \"#utility.yul\":26809:26827   */\n      tag_868\n      tag_587\n      jump\t// in\n    tag_868:\n        /* \"#utility.yul\":26795:26829   */\n    tag_867:\n        /* \"#utility.yul\":26854:26855   */\n      dup3\n        /* \"#utility.yul\":26851:26852   */\n      dup3\n        /* \"#utility.yul\":26847:26856   */\n      sub\n        /* \"#utility.yul\":26839:26856   */\n      swap1\n      pop\n        /* \"#utility.yul\":26671:26862   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":26868:27005   */\n    tag_603:\n        /* \"#utility.yul\":26922:26927   */\n      0x00\n        /* \"#utility.yul\":26953:26959   */\n      dup2\n        /* \"#utility.yul\":26947:26960   */\n      mload\n        /* \"#utility.yul\":26938:26960   */\n      swap1\n      pop\n        /* \"#utility.yul\":26969:26999   */\n      tag_870\n        /* \"#utility.yul\":26993:26998   */\n      dup2\n        /* \"#utility.yul\":26969:26999   */\n      tag_557\n      jump\t// in\n    tag_870:\n        /* \"#utility.yul\":26868:27005   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":27011:27356   */\n    tag_509:\n        /* \"#utility.yul\":27078:27084   */\n      0x00\n        /* \"#utility.yul\":27127:27129   */\n      0x20\n        /* \"#utility.yul\":27115:27124   */\n      dup3\n        /* \"#utility.yul\":27106:27113   */\n      dup5\n        /* \"#utility.yul\":27102:27125   */\n      sub\n        /* \"#utility.yul\":27098:27130   */\n      slt\n        /* \"#utility.yul\":27095:27214   */\n      iszero\n      tag_872\n      jumpi\n        /* \"#utility.yul\":27133:27212   */\n      tag_873\n      tag_542\n      jump\t// in\n    tag_873:\n        /* \"#utility.yul\":27095:27214   */\n    tag_872:\n        /* \"#utility.yul\":27253:27254   */\n      0x00\n        /* \"#utility.yul\":27278:27339   */\n      tag_874\n        /* \"#utility.yul\":27331:27338   */\n      dup5\n        /* \"#utility.yul\":27322:27328   */\n      dup3\n        /* \"#utility.yul\":27311:27320   */\n      dup6\n        /* \"#utility.yul\":27307:27329   */\n      add\n        /* \"#utility.yul\":27278:27339   */\n      tag_603\n      jump\t// in\n    tag_874:\n        /* \"#utility.yul\":27268:27339   */\n      swap2\n      pop\n        /* \"#utility.yul\":27224:27349   */\n      pop\n        /* \"#utility.yul\":27011:27356   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":27362:27591   */\n    tag_604:\n        /* \"#utility.yul\":27502:27536   */\n      0x5361666545524332303a204552433230206f7065726174696f6e20646964206e\n        /* \"#utility.yul\":27498:27499   */\n      0x00\n        /* \"#utility.yul\":27490:27496   */\n      dup3\n        /* \"#utility.yul\":27486:27500   */\n      add\n        /* \"#utility.yul\":27479:27537   */\n      mstore\n        /* \"#utility.yul\":27571:27583   */\n      0x6f74207375636365656400000000000000000000000000000000000000000000\n        /* \"#utility.yul\":27566:27568   */\n      0x20\n        /* \"#utility.yul\":27558:27564   */\n      dup3\n        /* \"#utility.yul\":27554:27569   */\n      add\n        /* \"#utility.yul\":27547:27584   */\n      mstore\n        /* \"#utility.yul\":27362:27591   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":27597:27963   */\n    tag_605:\n        /* \"#utility.yul\":27739:27742   */\n      0x00\n        /* \"#utility.yul\":27760:27827   */\n      tag_877\n        /* \"#utility.yul\":27824:27826   */\n      0x2a\n        /* \"#utility.yul\":27819:27822   */\n      dup4\n        /* \"#utility.yul\":27760:27827   */\n      tag_572\n      jump\t// in\n    tag_877:\n        /* \"#utility.yul\":27753:27827   */\n      swap2\n      pop\n        /* \"#utility.yul\":27836:27929   */\n      tag_878\n        /* \"#utility.yul\":27925:27928   */\n      dup3\n        /* \"#utility.yul\":27836:27929   */\n      tag_604\n      jump\t// in\n    tag_878:\n        /* \"#utility.yul\":27954:27956   */\n      0x40\n        /* \"#utility.yul\":27949:27952   */\n      dup3\n        /* \"#utility.yul\":27945:27957   */\n      add\n        /* \"#utility.yul\":27938:27957   */\n      swap1\n      pop\n        /* \"#utility.yul\":27597:27963   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":27969:28388   */\n    tag_512:\n        /* \"#utility.yul\":28135:28139   */\n      0x00\n        /* \"#utility.yul\":28173:28175   */\n      0x20\n        /* \"#utility.yul\":28162:28171   */\n      dup3\n        /* \"#utility.yul\":28158:28176   */\n      add\n        /* \"#utility.yul\":28150:28176   */\n      swap1\n      pop\n        /* \"#utility.yul\":28222:28231   */\n      dup2\n        /* \"#utility.yul\":28216:28220   */\n      dup2\n        /* \"#utility.yul\":28212:28232   */\n      sub\n        /* \"#utility.yul\":28208:28209   */\n      0x00\n        /* \"#utility.yul\":28197:28206   */\n      dup4\n        /* \"#utility.yul\":28193:28210   */\n      add\n        /* \"#utility.yul\":28186:28233   */\n      mstore\n        /* \"#utility.yul\":28250:28381   */\n      tag_880\n        /* \"#utility.yul\":28376:28380   */\n      dup2\n        /* \"#utility.yul\":28250:28381   */\n      tag_605\n      jump\t// in\n    tag_880:\n        /* \"#utility.yul\":28242:28381   */\n      swap1\n      pop\n        /* \"#utility.yul\":27969:28388   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":28394:28619   */\n    tag_606:\n        /* \"#utility.yul\":28534:28568   */\n      0x416464726573733a20696e73756666696369656e742062616c616e636520666f\n        /* \"#utility.yul\":28530:28531   */\n      0x00\n        /* \"#utility.yul\":28522:28528   */\n      dup3\n        /* \"#utility.yul\":28518:28532   */\n      add\n        /* \"#utility.yul\":28511:28569   */\n      mstore\n        /* \"#utility.yul\":28603:28611   */\n      0x722063616c6c0000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":28598:28600   */\n      0x20\n        /* \"#utility.yul\":28590:28596   */\n      dup3\n        /* \"#utility.yul\":28586:28601   */\n      add\n        /* \"#utility.yul\":28579:28612   */\n      mstore\n        /* \"#utility.yul\":28394:28619   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":28625:28991   */\n    tag_607:\n        /* \"#utility.yul\":28767:28770   */\n      0x00\n        /* \"#utility.yul\":28788:28855   */\n      tag_883\n        /* \"#utility.yul\":28852:28854   */\n      0x26\n        /* \"#utility.yul\":28847:28850   */\n      dup4\n        /* \"#utility.yul\":28788:28855   */\n      tag_572\n      jump\t// in\n    tag_883:\n        /* \"#utility.yul\":28781:28855   */\n      swap2\n      pop\n        /* \"#utility.yul\":28864:28957   */\n      tag_884\n        /* \"#utility.yul\":28953:28956   */\n      dup3\n        /* \"#utility.yul\":28864:28957   */\n      tag_606\n      jump\t// in\n    tag_884:\n        /* \"#utility.yul\":28982:28984   */\n      0x40\n        /* \"#utility.yul\":28977:28980   */\n      dup3\n        /* \"#utility.yul\":28973:28985   */\n      add\n        /* \"#utility.yul\":28966:28985   */\n      swap1\n      pop\n        /* \"#utility.yul\":28625:28991   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":28997:29416   */\n    tag_519:\n        /* \"#utility.yul\":29163:29167   */\n      0x00\n        /* \"#utility.yul\":29201:29203   */\n      0x20\n        /* \"#utility.yul\":29190:29199   */\n      dup3\n        /* \"#utility.yul\":29186:29204   */\n      add\n        /* \"#utility.yul\":29178:29204   */\n      swap1\n      pop\n        /* \"#utility.yul\":29250:29259   */\n      dup2\n        /* \"#utility.yul\":29244:29248   */\n      dup2\n        /* \"#utility.yul\":29240:29260   */\n      sub\n        /* \"#utility.yul\":29236:29237   */\n      0x00\n        /* \"#utility.yul\":29225:29234   */\n      dup4\n        /* \"#utility.yul\":29221:29238   */\n      add\n        /* \"#utility.yul\":29214:29261   */\n      mstore\n        /* \"#utility.yul\":29278:29409   */\n      tag_886\n        /* \"#utility.yul\":29404:29408   */\n      dup2\n        /* \"#utility.yul\":29278:29409   */\n      tag_607\n      jump\t// in\n    tag_886:\n        /* \"#utility.yul\":29270:29409   */\n      swap1\n      pop\n        /* \"#utility.yul\":28997:29416   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":29422:29601   */\n    tag_608:\n        /* \"#utility.yul\":29562:29593   */\n      0x416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000\n        /* \"#utility.yul\":29558:29559   */\n      0x00\n        /* \"#utility.yul\":29550:29556   */\n      dup3\n        /* \"#utility.yul\":29546:29560   */\n      add\n        /* \"#utility.yul\":29539:29594   */\n      mstore\n        /* \"#utility.yul\":29422:29601   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":29607:29973   */\n    tag_609:\n        /* \"#utility.yul\":29749:29752   */\n      0x00\n        /* \"#utility.yul\":29770:29837   */\n      tag_889\n        /* \"#utility.yul\":29834:29836   */\n      0x1d\n        /* \"#utility.yul\":29829:29832   */\n      dup4\n        /* \"#utility.yul\":29770:29837   */\n      tag_572\n      jump\t// in\n    tag_889:\n        /* \"#utility.yul\":29763:29837   */\n      swap2\n      pop\n        /* \"#utility.yul\":29846:29939   */\n      tag_890\n        /* \"#utility.yul\":29935:29938   */\n      dup3\n        /* \"#utility.yul\":29846:29939   */\n      tag_608\n      jump\t// in\n    tag_890:\n        /* \"#utility.yul\":29964:29966   */\n      0x20\n        /* \"#utility.yul\":29959:29962   */\n      dup3\n        /* \"#utility.yul\":29955:29967   */\n      add\n        /* \"#utility.yul\":29948:29967   */\n      swap1\n      pop\n        /* \"#utility.yul\":29607:29973   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":29979:30398   */\n    tag_524:\n        /* \"#utility.yul\":30145:30149   */\n      0x00\n        /* \"#utility.yul\":30183:30185   */\n      0x20\n        /* \"#utility.yul\":30172:30181   */\n      dup3\n        /* \"#utility.yul\":30168:30186   */\n      add\n        /* \"#utility.yul\":30160:30186   */\n      swap1\n      pop\n        /* \"#utility.yul\":30232:30241   */\n      dup2\n        /* \"#utility.yul\":30226:30230   */\n      dup2\n        /* \"#utility.yul\":30222:30242   */\n      sub\n        /* \"#utility.yul\":30218:30219   */\n      0x00\n        /* \"#utility.yul\":30207:30216   */\n      dup4\n        /* \"#utility.yul\":30203:30220   */\n      add\n        /* \"#utility.yul\":30196:30243   */\n      mstore\n        /* \"#utility.yul\":30260:30391   */\n      tag_892\n        /* \"#utility.yul\":30386:30390   */\n      dup2\n        /* \"#utility.yul\":30260:30391   */\n      tag_609\n      jump\t// in\n    tag_892:\n        /* \"#utility.yul\":30252:30391   */\n      swap1\n      pop\n        /* \"#utility.yul\":29979:30398   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":30404:30502   */\n    tag_610:\n        /* \"#utility.yul\":30455:30461   */\n      0x00\n        /* \"#utility.yul\":30489:30494   */\n      dup2\n        /* \"#utility.yul\":30483:30495   */\n      mload\n        /* \"#utility.yul\":30473:30495   */\n      swap1\n      pop\n        /* \"#utility.yul\":30404:30502   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":30508:30655   */\n    tag_611:\n        /* \"#utility.yul\":30609:30620   */\n      0x00\n        /* \"#utility.yul\":30646:30649   */\n      dup2\n        /* \"#utility.yul\":30631:30649   */\n      swap1\n      pop\n        /* \"#utility.yul\":30508:30655   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":30661:31034   */\n    tag_612:\n        /* \"#utility.yul\":30765:30768   */\n      0x00\n        /* \"#utility.yul\":30793:30831   */\n      tag_896\n        /* \"#utility.yul\":30825:30830   */\n      dup3\n        /* \"#utility.yul\":30793:30831   */\n      tag_610\n      jump\t// in\n    tag_896:\n        /* \"#utility.yul\":30847:30935   */\n      tag_897\n        /* \"#utility.yul\":30928:30934   */\n      dup2\n        /* \"#utility.yul\":30923:30926   */\n      dup6\n        /* \"#utility.yul\":30847:30935   */\n      tag_611\n      jump\t// in\n    tag_897:\n        /* \"#utility.yul\":30840:30935   */\n      swap4\n      pop\n        /* \"#utility.yul\":30944:30996   */\n      tag_898\n        /* \"#utility.yul\":30989:30995   */\n      dup2\n        /* \"#utility.yul\":30984:30987   */\n      dup6\n        /* \"#utility.yul\":30977:30981   */\n      0x20\n        /* \"#utility.yul\":30970:30975   */\n      dup7\n        /* \"#utility.yul\":30966:30982   */\n      add\n        /* \"#utility.yul\":30944:30996   */\n      tag_600\n      jump\t// in\n    tag_898:\n        /* \"#utility.yul\":31021:31027   */\n      dup1\n        /* \"#utility.yul\":31016:31019   */\n      dup5\n        /* \"#utility.yul\":31012:31028   */\n      add\n        /* \"#utility.yul\":31005:31028   */\n      swap2\n      pop\n        /* \"#utility.yul\":30769:31034   */\n      pop\n        /* \"#utility.yul\":30661:31034   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":31040:31311   */\n    tag_526:\n        /* \"#utility.yul\":31170:31173   */\n      0x00\n        /* \"#utility.yul\":31192:31285   */\n      tag_900\n        /* \"#utility.yul\":31281:31284   */\n      dup3\n        /* \"#utility.yul\":31272:31278   */\n      dup5\n        /* \"#utility.yul\":31192:31285   */\n      tag_612\n      jump\t// in\n    tag_900:\n        /* \"#utility.yul\":31185:31285   */\n      swap2\n      pop\n        /* \"#utility.yul\":31302:31305   */\n      dup2\n        /* \"#utility.yul\":31295:31305   */\n      swap1\n      pop\n        /* \"#utility.yul\":31040:31311   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220247c71767ca2691bbf499941bc34a7325a3d199df45cca4cbd28118b5744739564736f6c634300080f0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_1068": {
									"entryPoint": null,
									"id": 1068,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_836": {
									"entryPoint": null,
									"id": 836,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_806": {
									"entryPoint": 500,
									"id": 806,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_916": {
									"entryPoint": 508,
									"id": 916,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 856,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_contract$_IERC20_$286_fromMemory": {
									"entryPoint": 807,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 915,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_contract$_IERC20_$286t_addresst_uint256t_uint256_fromMemory": {
									"entryPoint": 938,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 4
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 741,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_contract$_IERC20_$286": {
									"entryPoint": 761,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 709,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 879,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 704,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 830,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_contract$_IERC20_$286": {
									"entryPoint": 781,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 889,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:2505:1",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "47:35:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "57:19:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "73:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "67:9:1"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:1"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "40:6:1",
														"type": ""
													}
												],
												"src": "7:75:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "177:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "194:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "197:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "187:12:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "187:12:1"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "300:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "317:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "320:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "310:12:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "310:12:1"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "379:81:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "389:65:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "411:42:1",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "400:54:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "361:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "371:7:1",
														"type": ""
													}
												],
												"src": "334:126:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "511:51:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "521:35:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "532:24:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "493:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "503:7:1",
														"type": ""
													}
												],
												"src": "466:96:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "627:51:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "637:35:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "666:5:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "648:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "648:24:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "637:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_contract$_IERC20_$286",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "609:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "619:7:1",
														"type": ""
													}
												],
												"src": "568:110:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "741:93:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "812:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "821:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "824:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "814:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "814:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "814:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "764:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "803:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_contract$_IERC20_$286",
																					"nodeType": "YulIdentifier",
																					"src": "771:31:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "771:38:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "761:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "761:49:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "754:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "754:57:1"
															},
															"nodeType": "YulIf",
															"src": "751:77:1"
														}
													]
												},
												"name": "validator_revert_t_contract$_IERC20_$286",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "734:5:1",
														"type": ""
													}
												],
												"src": "684:150:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "917:94:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "927:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "942:6:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "936:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "936:13:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "927:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "999:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_contract$_IERC20_$286",
																	"nodeType": "YulIdentifier",
																	"src": "958:40:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "958:47:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "958:47:1"
														}
													]
												},
												"name": "abi_decode_t_contract$_IERC20_$286_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "895:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "903:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "911:5:1",
														"type": ""
													}
												],
												"src": "840:171:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1060:79:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1117:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1126:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1129:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1119:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1119:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1119:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1083:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "1108:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "1090:17:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1090:24:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "1080:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1080:35:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1073:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1073:43:1"
															},
															"nodeType": "YulIf",
															"src": "1070:63:1"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1053:5:1",
														"type": ""
													}
												],
												"src": "1017:122:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1208:80:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1218:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1233:6:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1227:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1227:13:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "1218:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1276:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "1249:26:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1249:33:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1249:33:1"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "1186:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1194:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1202:5:1",
														"type": ""
													}
												],
												"src": "1145:143:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1339:32:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1349:16:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "1360:5:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1349:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1321:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1331:7:1",
														"type": ""
													}
												],
												"src": "1294:77:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1420:79:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1477:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1486:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1489:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1479:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1479:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1479:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1443:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "1468:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "1450:17:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1450:24:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "1440:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1440:35:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1433:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1433:43:1"
															},
															"nodeType": "YulIf",
															"src": "1430:63:1"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1413:5:1",
														"type": ""
													}
												],
												"src": "1377:122:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1568:80:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1578:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1593:6:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1587:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1587:13:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "1578:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1636:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "1609:26:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1609:33:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1609:33:1"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "1546:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1554:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1562:5:1",
														"type": ""
													}
												],
												"src": "1505:143:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1796:706:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1843:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "1845:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1845:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1845:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1817:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1826:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1813:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1813:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1838:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1809:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1809:33:1"
															},
															"nodeType": "YulIf",
															"src": "1806:120:1"
														},
														{
															"nodeType": "YulBlock",
															"src": "1936:142:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1951:15:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1965:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1955:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1980:88:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2040:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2051:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2036:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2036:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2060:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_contract$_IERC20_$286_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "1990:45:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1990:78:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1980:6:1"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "2088:129:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2103:16:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2117:2:1",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2107:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2133:74:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2179:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2190:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2175:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2175:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2199:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "2143:31:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2143:64:1"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "2133:6:1"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "2227:129:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2242:16:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2256:2:1",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2246:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2272:74:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2318:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2329:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2314:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2314:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2338:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "2282:31:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2282:64:1"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "2272:6:1"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "2366:129:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2381:16:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2395:2:1",
																		"type": "",
																		"value": "96"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2385:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2411:74:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2457:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2468:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2453:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2453:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2477:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "2421:31:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2421:64:1"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nodeType": "YulIdentifier",
																			"src": "2411:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_contract$_IERC20_$286t_addresst_uint256t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1742:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1753:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1765:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1773:6:1",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "1781:6:1",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "1789:6:1",
														"type": ""
													}
												],
												"src": "1654:848:1"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_contract$_IERC20_$286(value) -> cleaned {\n        cleaned := cleanup_t_address(value)\n    }\n\n    function validator_revert_t_contract$_IERC20_$286(value) {\n        if iszero(eq(value, cleanup_t_contract$_IERC20_$286(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_contract$_IERC20_$286_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_contract$_IERC20_$286(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_contract$_IERC20_$286t_addresst_uint256t_uint256_fromMemory(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 128) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_contract$_IERC20_$286_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n}\n",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "6080604052600160055560006009553480156200001b57600080fd5b50604051620044b6380380620044b68339818101604052810190620000419190620003aa565b6200006162000055620001f460201b60201c565b620001fc60201b60201c565b83600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555082600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508160048190555080600a8190555060076040518060800160405280600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016103e88152602001600a5481526020016000815250908060018154018082558091505060019003906000526020600020906004020160009091909190915060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160010155604082015181600201556060820151816003015550506103e8600981905550505050506200041c565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620002f282620002c5565b9050919050565b60006200030682620002e5565b9050919050565b6200031881620002f9565b81146200032457600080fd5b50565b60008151905062000338816200030d565b92915050565b6200034981620002e5565b81146200035557600080fd5b50565b60008151905062000369816200033e565b92915050565b6000819050919050565b62000384816200036f565b81146200039057600080fd5b50565b600081519050620003a48162000379565b92915050565b60008060008060808587031215620003c757620003c6620002c0565b5b6000620003d78782880162000327565b9450506020620003ea8782880162000358565b9350506040620003fd8782880162000393565b9250506060620004108782880162000393565b91505092959194509250565b61408a806200042c6000396000f3fe608060405234801561001057600080fd5b50600436106102065760003560e01c806361c1b7241161011a5780638dbb1e3a116100ad578063d209db8c1161007c578063d209db8c1461058c578063d49e77cd146105bc578063e2bbb158146105da578063f2fde38b146105f6578063f3239ab51461061257610206565b80638dbb1e3a146104f157806393f1a40b14610521578063cb3cba5514610552578063d0d41fe11461057057610206565b80637cd07e47116100e95780637cd07e47146104675780638aa28550146104855780638c51793b146104a35780638da5cb5b146104d357610206565b806361c1b72414610406578063630b5ba11461043757806364482f7914610441578063715018a61461045d57610206565b806341441d3b1161019d5780634ea2813c1161016c5780634ea2813c1461037857806351eb05a6146103945780635312ea8e146103b05780635990c569146103cc5780635ffe6146146103ea57610206565b806341441d3b14610306578063441a3e7014610322578063454b06081461033e57806348cd4cb11461035a57610206565b80631d5fbd87116101d95780631d5fbd87146102965780631eaaa045146102b257806323cf3118146102ce5780633df7aff3146102ea57610206565b8063081e3eda1461020b5780631058d281146102295780631526fe271461024557806317caf6f114610278575b600080fd5b610213610642565b604051610220919061303b565b60405180910390f35b610243600480360381019061023e9190613087565b61064f565b005b61025f600480360381019061025a9190613087565b61090e565b60405161026f9493929190613133565b60405180910390f35b61028061096e565b60405161028d919061303b565b60405180910390f35b6102b060048036038101906102ab9190613178565b610974565b005b6102cc60048036038101906102c79190613240565b610df8565b005b6102e860048036038101906102e391906132d1565b610f85565b005b61030460048036038101906102ff9190613087565b611045565b005b610320600480360381019061031b9190613087565b6110cb565b005b61033c60048036038101906103379190613178565b611353565b005b61035860048036038101906103539190613087565b611649565b005b61036261199b565b60405161036f919061303b565b60405180910390f35b610392600480360381019061038d919061333c565b6119a1565b005b6103ae60048036038101906103a99190613087565b611aca565b005b6103ca60048036038101906103c59190613087565b611c69565b005b6103d4611da2565b6040516103e1919061303b565b60405180910390f35b61040460048036038101906103ff9190613087565b611da8565b005b610420600480360381019061041b9190613087565b611e2e565b60405161042e92919061339d565b60405180910390f35b61043f611e82565b005b61045b600480360381019061045691906133c6565b611eb5565b005b610465611fc1565b005b61046f612049565b60405161047c919061343a565b60405180910390f35b61048d61206f565b60405161049a919061303b565b60405180910390f35b6104bd60048036038101906104b89190613481565b612075565b6040516104ca919061303b565b60405180910390f35b6104db6120be565b6040516104e891906134bd565b60405180910390f35b61050b60048036038101906105069190613178565b6120e7565b604051610518919061303b565b60405180910390f35b61053b600480360381019061053691906134d8565b612118565b604051610549929190613518565b60405180910390f35b61055a612149565b6040516105679190613541565b60405180910390f35b61058a60048036038101906105859190613481565b61216f565b005b6105a660048036038101906105a19190613481565b61222f565b6040516105b3919061303b565b60405180910390f35b6105c4612247565b6040516105d191906134bd565b60405180910390f35b6105f460048036038101906105ef9190613178565b61226d565b005b610610600480360381019061060b9190613481565b61252c565b005b61062c600480360381019061062791906134d8565b612623565b604051610639919061303b565b60405180910390f35b6000600780549050905090565b600060076000815481106106665761066561355c565b5b9060005260206000209060040201905060006008600080815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002090508281600001541015610711576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610708906135e8565b60405180910390fd5b61071b6000611aca565b6000610765826001015461075764e8d4a510006107498760030154876000015461284890919063ffffffff16565b6128c290919063ffffffff16565b61290c90919063ffffffff16565b90506000811115610806576107c281600b60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461295690919063ffffffff16565b600b60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505b600084111561087e5761082684836000015461290c90919063ffffffff16565b826000018190555061087d33858560000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166129b49092919063ffffffff16565b5b6108b064e8d4a510006108a28560030154856000015461284890919063ffffffff16565b6128c290919063ffffffff16565b826001018190555060003373ffffffffffffffffffffffffffffffffffffffff167ff279e6a1f5e320cca91135676d9cb6e44ca8a08c0b88342bcdb1144f6511b56886604051610900919061303b565b60405180910390a350505050565b6007818154811061091e57600080fd5b90600052602060002090600402016000915090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060010154908060020154908060030154905084565b60095481565b60006007828154811061098a5761098961355c565b5b9060005260206000209060040201905060006008600084815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020905060008260030154905060008360000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401610a5691906134bd565b602060405180830381865afa158015610a73573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a97919061361d565b9050836002015443118015610aad575060008114155b15610b48576000610ac28560020154436120e7565b90506000610b05600954610af78860010154610ae96004548761284890919063ffffffff16565b61284890919063ffffffff16565b6128c290919063ffffffff16565b9050610b43610b3484610b2664e8d4a510008561284890919063ffffffff16565b6128c290919063ffffffff16565b8561295690919063ffffffff16565b935050505b6000610b8e8460010154610b8064e8d4a51000610b7287896000015461284890919063ffffffff16565b6128c290919063ffffffff16565b61290c90919063ffffffff16565b9050600060018881548110610ba657610ba561355c565b5b906000526020600020906002020190506000610c0a600b60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020548461295690919063ffffffff16565b90508160010154811115610c405760008803610c2b57610c2a600061064f565b5b60008814610c3f57610c3e886000611353565b5b5b600b60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054826001015410610cc5576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610cbc90613696565b60405180910390fd5b610d1b8260010154600b60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461290c90919063ffffffff16565b600b60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166317e5883c336040518263ffffffff1660e01b8152600401610dbb91906134bd565b600060405180830381600087803b158015610dd557600080fd5b505af1158015610de9573d6000803e3d6000fd5b50505050505050505050505050565b610e00612a3a565b73ffffffffffffffffffffffffffffffffffffffff16610e1e6120be565b73ffffffffffffffffffffffffffffffffffffffff1614610e74576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e6b90613702565b60405180910390fd5b8015610e8357610e82611e82565b5b6000600a544311610e9657600a54610e98565b435b9050610eaf8460095461295690919063ffffffff16565b600981905550600760405180608001604052808573ffffffffffffffffffffffffffffffffffffffff1681526020018681526020018381526020016000815250908060018154018082558091505060019003906000526020600020906004020160009091909190915060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550602082015181600101556040820151816002015560608201518160030155505050505050565b610f8d612a3a565b73ffffffffffffffffffffffffffffffffffffffff16610fab6120be565b73ffffffffffffffffffffffffffffffffffffffff1614611001576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ff890613702565b60405180910390fd5b80600660006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b61104d612a3a565b73ffffffffffffffffffffffffffffffffffffffff1661106b6120be565b73ffffffffffffffffffffffffffffffffffffffff16146110c1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016110b890613702565b60405180910390fd5b8060048190555050565b600060076000815481106110e2576110e161355c565b5b9060005260206000209060040201905060006008600080815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002090506111506000611aca565b60008160000154111561124a5760006111a7826001015461119964e8d4a5100061118b8760030154876000015461284890919063ffffffff16565b6128c290919063ffffffff16565b61290c90919063ffffffff16565b905060008111156112485761120481600b60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461295690919063ffffffff16565b600b60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505b505b60008311156112c4576112a43330858560000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16612a42909392919063ffffffff16565b6112bb83826000015461295690919063ffffffff16565b81600001819055505b6112f664e8d4a510006112e88460030154846000015461284890919063ffffffff16565b6128c290919063ffffffff16565b816001018190555060003373ffffffffffffffffffffffffffffffffffffffff167f90890809c654f11d6e72a28fa60149770a0d11ec6c92319d6ceb2bb0a4ea1a1585604051611346919061303b565b60405180910390a3505050565b60008203611396576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161138d9061376e565b60405180910390fd5b6000600783815481106113ac576113ab61355c565b5b9060005260206000209060040201905060006008600085815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002090508281600001541015611457576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161144e906135e8565b60405180910390fd5b61146084611aca565b60006114aa826001015461149c64e8d4a5100061148e8760030154876000015461284890919063ffffffff16565b6128c290919063ffffffff16565b61290c90919063ffffffff16565b9050600081111561154b5761150781600b60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461295690919063ffffffff16565b600b60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505b61156284836000015461290c90919063ffffffff16565b826000018190555061159c64e8d4a5100061158e8560030154856000015461284890919063ffffffff16565b6128c290919063ffffffff16565b82600101819055506115f333858560000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166129b49092919063ffffffff16565b843373ffffffffffffffffffffffffffffffffffffffff167ff279e6a1f5e320cca91135676d9cb6e44ca8a08c0b88342bcdb1144f6511b5688660405161163a919061303b565b60405180910390a35050505050565b600073ffffffffffffffffffffffffffffffffffffffff16600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16036116da576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016116d1906137da565b60405180910390fd5b6000600782815481106116f0576116ef61355c565b5b9060005260206000209060040201905060008160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905060008173ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b815260040161176491906134bd565b602060405180830381865afa158015611781573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906117a5919061361d565b90506117f4600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16828473ffffffffffffffffffffffffffffffffffffffff16612acb9092919063ffffffff16565b6000600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663ce5494bb846040518263ffffffff1660e01b81526004016118519190613541565b6020604051808303816000875af1158015611870573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611894919061380f565b90508073ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016118cf91906134bd565b602060405180830381865afa1580156118ec573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611910919061361d565b8214611951576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161194890613888565b60405180910390fd5b808460000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050505050565b600a5481565b6119a9612a3a565b73ffffffffffffffffffffffffffffffffffffffff166119c76120be565b73ffffffffffffffffffffffffffffffffffffffff1614611a1d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611a1490613702565b60405180910390fd5b600160405180604001604052808473ffffffffffffffffffffffffffffffffffffffff16815260200183815250908060018154018082558091505060019003906000526020600020906002020160009091909190915060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506020820151816001015550505050565b600060078281548110611ae057611adf61355c565b5b9060005260206000209060040201905080600201544311611b015750611c66565b60008160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401611b6091906134bd565b602060405180830381865afa158015611b7d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611ba1919061361d565b905060008111611bbb574382600201819055505050611c66565b6000611bcb8360020154436120e7565b90506000611c0e600954611c008660010154611bf26004548761284890919063ffffffff16565b61284890919063ffffffff16565b6128c290919063ffffffff16565b9050611c50611c3d84611c2f64e8d4a510008561284890919063ffffffff16565b6128c290919063ffffffff16565b856003015461295690919063ffffffff16565b8460030181905550438460020181905550505050505b50565b600060078281548110611c7f57611c7e61355c565b5b9060005260206000209060040201905060006008600084815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000209050611d363382600001548460000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166129b49092919063ffffffff16565b823373ffffffffffffffffffffffffffffffffffffffff167fbb757047c2b5f3974fe26b7c10f732e7bce710b0952a71082702781e62ae05958360000154604051611d81919061303b565b60405180910390a36000816000018190555060008160010181905550505050565b60045481565b611db0612a3a565b73ffffffffffffffffffffffffffffffffffffffff16611dce6120be565b73ffffffffffffffffffffffffffffffffffffffff1614611e24576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611e1b90613702565b60405180910390fd5b8060058190555050565b60018181548110611e3e57600080fd5b90600052602060002090600202016000915090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060010154905082565b6000600780549050905060005b81811015611eb157611ea081611aca565b80611eaa906138d7565b9050611e8f565b5050565b611ebd612a3a565b73ffffffffffffffffffffffffffffffffffffffff16611edb6120be565b73ffffffffffffffffffffffffffffffffffffffff1614611f31576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611f2890613702565b60405180910390fd5b8015611f4057611f3f611e82565b5b611f8c82611f7e60078681548110611f5b57611f5a61355c565b5b90600052602060002090600402016001015460095461290c90919063ffffffff16565b61295690919063ffffffff16565b6009819055508160078481548110611fa757611fa661355c565b5b906000526020600020906004020160010181905550505050565b611fc9612a3a565b73ffffffffffffffffffffffffffffffffffffffff16611fe76120be565b73ffffffffffffffffffffffffffffffffffffffff161461203d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161203490613702565b60405180910390fd5b6120476000612c1a565b565b600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60055481565b6000600b60008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000612110600554612102858561290c90919063ffffffff16565b61284890919063ffffffff16565b905092915050565b6008602052816000526040600020602052806000526040600020600091509150508060000154908060010154905082565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b612177612a3a565b73ffffffffffffffffffffffffffffffffffffffff166121956120be565b73ffffffffffffffffffffffffffffffffffffffff16146121eb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016121e290613702565b60405180910390fd5b80600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600b6020528060005260406000206000915090505481565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600082036122b0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016122a79061396b565b60405180910390fd5b6000600783815481106122c6576122c561355c565b5b9060005260206000209060040201905060006008600085815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020905061233384611aca565b60008160000154111561242d57600061238a826001015461237c64e8d4a5100061236e8760030154876000015461284890919063ffffffff16565b6128c290919063ffffffff16565b61290c90919063ffffffff16565b9050600081111561242b576123e781600b60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461295690919063ffffffff16565b600b60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505b505b61247e3330858560000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16612a42909392919063ffffffff16565b61249583826000015461295690919063ffffffff16565b81600001819055506124cf64e8d4a510006124c18460030154846000015461284890919063ffffffff16565b6128c290919063ffffffff16565b8160010181905550833373ffffffffffffffffffffffffffffffffffffffff167f90890809c654f11d6e72a28fa60149770a0d11ec6c92319d6ceb2bb0a4ea1a158560405161251e919061303b565b60405180910390a350505050565b612534612a3a565b73ffffffffffffffffffffffffffffffffffffffff166125526120be565b73ffffffffffffffffffffffffffffffffffffffff16146125a8576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161259f90613702565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603612617576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161260e906139fd565b60405180910390fd5b61262081612c1a565b50565b6000806007848154811061263a5761263961355c565b5b9060005260206000209060040201905060006008600086815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020905060008260030154905060008360000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b815260040161270691906134bd565b602060405180830381865afa158015612723573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612747919061361d565b905083600201544311801561275d575060008114155b156127f85760006127728560020154436120e7565b905060006127b56009546127a788600101546127996004548761284890919063ffffffff16565b61284890919063ffffffff16565b6128c290919063ffffffff16565b90506127f36127e4846127d664e8d4a510008561284890919063ffffffff16565b6128c290919063ffffffff16565b8561295690919063ffffffff16565b935050505b61283c836001015461282e64e8d4a5100061282086886000015461284890919063ffffffff16565b6128c290919063ffffffff16565b61290c90919063ffffffff16565b94505050505092915050565b600080830361285a57600090506128bc565b600082846128689190613a1d565b90508284826128779190613aa6565b146128b7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016128ae90613b49565b60405180910390fd5b809150505b92915050565b600061290483836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f000000000000815250612cde565b905092915050565b600061294e83836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250612d41565b905092915050565b60008082846129659190613b69565b9050838110156129aa576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016129a190613c0b565b60405180910390fd5b8091505092915050565b612a358363a9059cbb60e01b84846040516024016129d3929190613c2b565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050612da5565b505050565b600033905090565b612ac5846323b872dd60e01b858585604051602401612a6393929190613c54565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050612da5565b50505050565b6000811480612b55575060008373ffffffffffffffffffffffffffffffffffffffff1663dd62ed3e30856040518363ffffffff1660e01b8152600401612b12929190613c8b565b602060405180830381865afa158015612b2f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612b53919061361d565b145b612b94576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612b8b90613d26565b60405180910390fd5b612c158363095ea7b360e01b8484604051602401612bb3929190613c2b565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050612da5565b505050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b60008083118290612d25576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612d1c9190613dce565b60405180910390fd5b5060008385612d349190613aa6565b9050809150509392505050565b6000838311158290612d89576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612d809190613dce565b60405180910390fd5b5060008385612d989190613df0565b9050809150509392505050565b6000612e07826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65648152508573ffffffffffffffffffffffffffffffffffffffff16612e6c9092919063ffffffff16565b9050600081511115612e675780806020019051810190612e279190613e39565b612e66576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612e5d90613ed8565b60405180910390fd5b5b505050565b6060612e7b8484600085612e84565b90509392505050565b606082471015612ec9576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612ec090613f6a565b60405180910390fd5b612ed285612f98565b612f11576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612f0890613fd6565b60405180910390fd5b6000808673ffffffffffffffffffffffffffffffffffffffff168587604051612f3a919061403d565b60006040518083038185875af1925050503d8060008114612f77576040519150601f19603f3d011682016040523d82523d6000602084013e612f7c565b606091505b5091509150612f8c828286612fbb565b92505050949350505050565b6000808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b60608315612fcb5782905061301b565b600083511115612fde5782518084602001fd5b816040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016130129190613dce565b60405180910390fd5b9392505050565b6000819050919050565b61303581613022565b82525050565b6000602082019050613050600083018461302c565b92915050565b600080fd5b61306481613022565b811461306f57600080fd5b50565b6000813590506130818161305b565b92915050565b60006020828403121561309d5761309c613056565b5b60006130ab84828501613072565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60006130f96130f46130ef846130b4565b6130d4565b6130b4565b9050919050565b600061310b826130de565b9050919050565b600061311d82613100565b9050919050565b61312d81613112565b82525050565b60006080820190506131486000830187613124565b613155602083018661302c565b613162604083018561302c565b61316f606083018461302c565b95945050505050565b6000806040838503121561318f5761318e613056565b5b600061319d85828601613072565b92505060206131ae85828601613072565b9150509250929050565b60006131c3826130b4565b9050919050565b60006131d5826131b8565b9050919050565b6131e5816131ca565b81146131f057600080fd5b50565b600081359050613202816131dc565b92915050565b60008115159050919050565b61321d81613208565b811461322857600080fd5b50565b60008135905061323a81613214565b92915050565b60008060006060848603121561325957613258613056565b5b600061326786828701613072565b9350506020613278868287016131f3565b92505060406132898682870161322b565b9150509250925092565b600061329e826131b8565b9050919050565b6132ae81613293565b81146132b957600080fd5b50565b6000813590506132cb816132a5565b92915050565b6000602082840312156132e7576132e6613056565b5b60006132f5848285016132bc565b91505092915050565b6000613309826131b8565b9050919050565b613319816132fe565b811461332457600080fd5b50565b60008135905061333681613310565b92915050565b6000806040838503121561335357613352613056565b5b600061336185828601613327565b925050602061337285828601613072565b9150509250929050565b600061338782613100565b9050919050565b6133978161337c565b82525050565b60006040820190506133b2600083018561338e565b6133bf602083018461302c565b9392505050565b6000806000606084860312156133df576133de613056565b5b60006133ed86828701613072565b93505060206133fe86828701613072565b925050604061340f8682870161322b565b9150509250925092565b600061342482613100565b9050919050565b61343481613419565b82525050565b600060208201905061344f600083018461342b565b92915050565b61345e816131b8565b811461346957600080fd5b50565b60008135905061347b81613455565b92915050565b60006020828403121561349757613496613056565b5b60006134a58482850161346c565b91505092915050565b6134b7816131b8565b82525050565b60006020820190506134d260008301846134ae565b92915050565b600080604083850312156134ef576134ee613056565b5b60006134fd85828601613072565b925050602061350e8582860161346c565b9150509250929050565b600060408201905061352d600083018561302c565b61353a602083018461302c565b9392505050565b60006020820190506135566000830184613124565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600082825260208201905092915050565b7f77697468647261773a206e6f7420676f6f640000000000000000000000000000600082015250565b60006135d260128361358b565b91506135dd8261359c565b602082019050919050565b60006020820190508181036000830152613601816135c5565b9050919050565b6000815190506136178161305b565b92915050565b60006020828403121561363357613632613056565b5b600061364184828501613608565b91505092915050565b7f506f776572206973206e6f7420656e6f75676800000000000000000000000000600082015250565b600061368060138361358b565b915061368b8261364a565b602082019050919050565b600060208201905081810360008301526136af81613673565b9050919050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b60006136ec60208361358b565b91506136f7826136b6565b602082019050919050565b6000602082019050818103600083015261371b816136df565b9050919050565b7f776974686472617720506f77657220627920756e7374616b696e670000000000600082015250565b6000613758601b8361358b565b915061376382613722565b602082019050919050565b600060208201905081810360008301526137878161374b565b9050919050565b7f6d6967726174653a206e6f206d69677261746f72000000000000000000000000600082015250565b60006137c460148361358b565b91506137cf8261378e565b602082019050919050565b600060208201905081810360008301526137f3816137b7565b9050919050565b600081519050613809816131dc565b92915050565b60006020828403121561382557613824613056565b5b6000613833848285016137fa565b91505092915050565b7f6d6967726174653a206261640000000000000000000000000000000000000000600082015250565b6000613872600c8361358b565b915061387d8261383c565b602082019050919050565b600060208201905081810360008301526138a181613865565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006138e282613022565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203613914576139136138a8565b5b600182019050919050565b7f6465706f73697420506f776572206279207374616b696e670000000000000000600082015250565b600061395560188361358b565b91506139608261391f565b602082019050919050565b6000602082019050818103600083015261398481613948565b9050919050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b60006139e760268361358b565b91506139f28261398b565b604082019050919050565b60006020820190508181036000830152613a16816139da565b9050919050565b6000613a2882613022565b9150613a3383613022565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615613a6c57613a6b6138a8565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000613ab182613022565b9150613abc83613022565b925082613acc57613acb613a77565b5b828204905092915050565b7f536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f60008201527f7700000000000000000000000000000000000000000000000000000000000000602082015250565b6000613b3360218361358b565b9150613b3e82613ad7565b604082019050919050565b60006020820190508181036000830152613b6281613b26565b9050919050565b6000613b7482613022565b9150613b7f83613022565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115613bb457613bb36138a8565b5b828201905092915050565b7f536166654d6174683a206164646974696f6e206f766572666c6f770000000000600082015250565b6000613bf5601b8361358b565b9150613c0082613bbf565b602082019050919050565b60006020820190508181036000830152613c2481613be8565b9050919050565b6000604082019050613c4060008301856134ae565b613c4d602083018461302c565b9392505050565b6000606082019050613c6960008301866134ae565b613c7660208301856134ae565b613c83604083018461302c565b949350505050565b6000604082019050613ca060008301856134ae565b613cad60208301846134ae565b9392505050565b7f5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f60008201527f20746f206e6f6e2d7a65726f20616c6c6f77616e636500000000000000000000602082015250565b6000613d1060368361358b565b9150613d1b82613cb4565b604082019050919050565b60006020820190508181036000830152613d3f81613d03565b9050919050565b600081519050919050565b60005b83811015613d6f578082015181840152602081019050613d54565b83811115613d7e576000848401525b50505050565b6000601f19601f8301169050919050565b6000613da082613d46565b613daa818561358b565b9350613dba818560208601613d51565b613dc381613d84565b840191505092915050565b60006020820190508181036000830152613de88184613d95565b905092915050565b6000613dfb82613022565b9150613e0683613022565b925082821015613e1957613e186138a8565b5b828203905092915050565b600081519050613e3381613214565b92915050565b600060208284031215613e4f57613e4e613056565b5b6000613e5d84828501613e24565b91505092915050565b7f5361666545524332303a204552433230206f7065726174696f6e20646964206e60008201527f6f74207375636365656400000000000000000000000000000000000000000000602082015250565b6000613ec2602a8361358b565b9150613ecd82613e66565b604082019050919050565b60006020820190508181036000830152613ef181613eb5565b9050919050565b7f416464726573733a20696e73756666696369656e742062616c616e636520666f60008201527f722063616c6c0000000000000000000000000000000000000000000000000000602082015250565b6000613f5460268361358b565b9150613f5f82613ef8565b604082019050919050565b60006020820190508181036000830152613f8381613f47565b9050919050565b7f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000600082015250565b6000613fc0601d8361358b565b9150613fcb82613f8a565b602082019050919050565b60006020820190508181036000830152613fef81613fb3565b9050919050565b600081519050919050565b600081905092915050565b600061401782613ff6565b6140218185614001565b9350614031818560208601613d51565b80840191505092915050565b6000614049828461400c565b91508190509291505056fea2646970667358221220247c71767ca2691bbf499941bc34a7325a3d199df45cca4cbd28118b5744739564736f6c634300080f0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x1 PUSH1 0x5 SSTORE PUSH1 0x0 PUSH1 0x9 SSTORE CALLVALUE DUP1 ISZERO PUSH3 0x1B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x44B6 CODESIZE SUB DUP1 PUSH3 0x44B6 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x41 SWAP2 SWAP1 PUSH3 0x3AA JUMP JUMPDEST PUSH3 0x61 PUSH3 0x55 PUSH3 0x1F4 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0x1FC PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST DUP4 PUSH1 0x2 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP3 PUSH1 0x3 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH1 0x4 DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0xA DUP2 SWAP1 SSTORE POP PUSH1 0x7 PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x3E8 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0xA SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE POP SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x4 MUL ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD SSTORE POP POP PUSH2 0x3E8 PUSH1 0x9 DUP2 SWAP1 SSTORE POP POP POP POP POP PUSH3 0x41C JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x2F2 DUP3 PUSH3 0x2C5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x306 DUP3 PUSH3 0x2E5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x318 DUP2 PUSH3 0x2F9 JUMP JUMPDEST DUP2 EQ PUSH3 0x324 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x338 DUP2 PUSH3 0x30D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH3 0x349 DUP2 PUSH3 0x2E5 JUMP JUMPDEST DUP2 EQ PUSH3 0x355 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x369 DUP2 PUSH3 0x33E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x384 DUP2 PUSH3 0x36F JUMP JUMPDEST DUP2 EQ PUSH3 0x390 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x3A4 DUP2 PUSH3 0x379 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH3 0x3C7 JUMPI PUSH3 0x3C6 PUSH3 0x2C0 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH3 0x3D7 DUP8 DUP3 DUP9 ADD PUSH3 0x327 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH3 0x3EA DUP8 DUP3 DUP9 ADD PUSH3 0x358 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH3 0x3FD DUP8 DUP3 DUP9 ADD PUSH3 0x393 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 PUSH3 0x410 DUP8 DUP3 DUP9 ADD PUSH3 0x393 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH2 0x408A DUP1 PUSH3 0x42C PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x206 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x61C1B724 GT PUSH2 0x11A JUMPI DUP1 PUSH4 0x8DBB1E3A GT PUSH2 0xAD JUMPI DUP1 PUSH4 0xD209DB8C GT PUSH2 0x7C JUMPI DUP1 PUSH4 0xD209DB8C EQ PUSH2 0x58C JUMPI DUP1 PUSH4 0xD49E77CD EQ PUSH2 0x5BC JUMPI DUP1 PUSH4 0xE2BBB158 EQ PUSH2 0x5DA JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x5F6 JUMPI DUP1 PUSH4 0xF3239AB5 EQ PUSH2 0x612 JUMPI PUSH2 0x206 JUMP JUMPDEST DUP1 PUSH4 0x8DBB1E3A EQ PUSH2 0x4F1 JUMPI DUP1 PUSH4 0x93F1A40B EQ PUSH2 0x521 JUMPI DUP1 PUSH4 0xCB3CBA55 EQ PUSH2 0x552 JUMPI DUP1 PUSH4 0xD0D41FE1 EQ PUSH2 0x570 JUMPI PUSH2 0x206 JUMP JUMPDEST DUP1 PUSH4 0x7CD07E47 GT PUSH2 0xE9 JUMPI DUP1 PUSH4 0x7CD07E47 EQ PUSH2 0x467 JUMPI DUP1 PUSH4 0x8AA28550 EQ PUSH2 0x485 JUMPI DUP1 PUSH4 0x8C51793B EQ PUSH2 0x4A3 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x4D3 JUMPI PUSH2 0x206 JUMP JUMPDEST DUP1 PUSH4 0x61C1B724 EQ PUSH2 0x406 JUMPI DUP1 PUSH4 0x630B5BA1 EQ PUSH2 0x437 JUMPI DUP1 PUSH4 0x64482F79 EQ PUSH2 0x441 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x45D JUMPI PUSH2 0x206 JUMP JUMPDEST DUP1 PUSH4 0x41441D3B GT PUSH2 0x19D JUMPI DUP1 PUSH4 0x4EA2813C GT PUSH2 0x16C JUMPI DUP1 PUSH4 0x4EA2813C EQ PUSH2 0x378 JUMPI DUP1 PUSH4 0x51EB05A6 EQ PUSH2 0x394 JUMPI DUP1 PUSH4 0x5312EA8E EQ PUSH2 0x3B0 JUMPI DUP1 PUSH4 0x5990C569 EQ PUSH2 0x3CC JUMPI DUP1 PUSH4 0x5FFE6146 EQ PUSH2 0x3EA JUMPI PUSH2 0x206 JUMP JUMPDEST DUP1 PUSH4 0x41441D3B EQ PUSH2 0x306 JUMPI DUP1 PUSH4 0x441A3E70 EQ PUSH2 0x322 JUMPI DUP1 PUSH4 0x454B0608 EQ PUSH2 0x33E JUMPI DUP1 PUSH4 0x48CD4CB1 EQ PUSH2 0x35A JUMPI PUSH2 0x206 JUMP JUMPDEST DUP1 PUSH4 0x1D5FBD87 GT PUSH2 0x1D9 JUMPI DUP1 PUSH4 0x1D5FBD87 EQ PUSH2 0x296 JUMPI DUP1 PUSH4 0x1EAAA045 EQ PUSH2 0x2B2 JUMPI DUP1 PUSH4 0x23CF3118 EQ PUSH2 0x2CE JUMPI DUP1 PUSH4 0x3DF7AFF3 EQ PUSH2 0x2EA JUMPI PUSH2 0x206 JUMP JUMPDEST DUP1 PUSH4 0x81E3EDA EQ PUSH2 0x20B JUMPI DUP1 PUSH4 0x1058D281 EQ PUSH2 0x229 JUMPI DUP1 PUSH4 0x1526FE27 EQ PUSH2 0x245 JUMPI DUP1 PUSH4 0x17CAF6F1 EQ PUSH2 0x278 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x213 PUSH2 0x642 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x220 SWAP2 SWAP1 PUSH2 0x303B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x243 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x23E SWAP2 SWAP1 PUSH2 0x3087 JUMP JUMPDEST PUSH2 0x64F JUMP JUMPDEST STOP JUMPDEST PUSH2 0x25F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x25A SWAP2 SWAP1 PUSH2 0x3087 JUMP JUMPDEST PUSH2 0x90E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x26F SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3133 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x280 PUSH2 0x96E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x28D SWAP2 SWAP1 PUSH2 0x303B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2B0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2AB SWAP2 SWAP1 PUSH2 0x3178 JUMP JUMPDEST PUSH2 0x974 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2CC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2C7 SWAP2 SWAP1 PUSH2 0x3240 JUMP JUMPDEST PUSH2 0xDF8 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2E8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2E3 SWAP2 SWAP1 PUSH2 0x32D1 JUMP JUMPDEST PUSH2 0xF85 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x304 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2FF SWAP2 SWAP1 PUSH2 0x3087 JUMP JUMPDEST PUSH2 0x1045 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x320 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x31B SWAP2 SWAP1 PUSH2 0x3087 JUMP JUMPDEST PUSH2 0x10CB JUMP JUMPDEST STOP JUMPDEST PUSH2 0x33C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x337 SWAP2 SWAP1 PUSH2 0x3178 JUMP JUMPDEST PUSH2 0x1353 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x358 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x353 SWAP2 SWAP1 PUSH2 0x3087 JUMP JUMPDEST PUSH2 0x1649 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x362 PUSH2 0x199B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x36F SWAP2 SWAP1 PUSH2 0x303B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x392 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x38D SWAP2 SWAP1 PUSH2 0x333C JUMP JUMPDEST PUSH2 0x19A1 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3AE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3A9 SWAP2 SWAP1 PUSH2 0x3087 JUMP JUMPDEST PUSH2 0x1ACA JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3CA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3C5 SWAP2 SWAP1 PUSH2 0x3087 JUMP JUMPDEST PUSH2 0x1C69 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3D4 PUSH2 0x1DA2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3E1 SWAP2 SWAP1 PUSH2 0x303B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x404 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3FF SWAP2 SWAP1 PUSH2 0x3087 JUMP JUMPDEST PUSH2 0x1DA8 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x420 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x41B SWAP2 SWAP1 PUSH2 0x3087 JUMP JUMPDEST PUSH2 0x1E2E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x42E SWAP3 SWAP2 SWAP1 PUSH2 0x339D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x43F PUSH2 0x1E82 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x45B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x456 SWAP2 SWAP1 PUSH2 0x33C6 JUMP JUMPDEST PUSH2 0x1EB5 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x465 PUSH2 0x1FC1 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x46F PUSH2 0x2049 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x47C SWAP2 SWAP1 PUSH2 0x343A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x48D PUSH2 0x206F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x49A SWAP2 SWAP1 PUSH2 0x303B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4BD PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4B8 SWAP2 SWAP1 PUSH2 0x3481 JUMP JUMPDEST PUSH2 0x2075 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4CA SWAP2 SWAP1 PUSH2 0x303B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4DB PUSH2 0x20BE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4E8 SWAP2 SWAP1 PUSH2 0x34BD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x50B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x506 SWAP2 SWAP1 PUSH2 0x3178 JUMP JUMPDEST PUSH2 0x20E7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x518 SWAP2 SWAP1 PUSH2 0x303B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x53B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x536 SWAP2 SWAP1 PUSH2 0x34D8 JUMP JUMPDEST PUSH2 0x2118 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x549 SWAP3 SWAP2 SWAP1 PUSH2 0x3518 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x55A PUSH2 0x2149 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x567 SWAP2 SWAP1 PUSH2 0x3541 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x58A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x585 SWAP2 SWAP1 PUSH2 0x3481 JUMP JUMPDEST PUSH2 0x216F JUMP JUMPDEST STOP JUMPDEST PUSH2 0x5A6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5A1 SWAP2 SWAP1 PUSH2 0x3481 JUMP JUMPDEST PUSH2 0x222F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5B3 SWAP2 SWAP1 PUSH2 0x303B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x5C4 PUSH2 0x2247 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5D1 SWAP2 SWAP1 PUSH2 0x34BD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x5F4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5EF SWAP2 SWAP1 PUSH2 0x3178 JUMP JUMPDEST PUSH2 0x226D JUMP JUMPDEST STOP JUMPDEST PUSH2 0x610 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x60B SWAP2 SWAP1 PUSH2 0x3481 JUMP JUMPDEST PUSH2 0x252C JUMP JUMPDEST STOP JUMPDEST PUSH2 0x62C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x627 SWAP2 SWAP1 PUSH2 0x34D8 JUMP JUMPDEST PUSH2 0x2623 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x639 SWAP2 SWAP1 PUSH2 0x303B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH1 0x7 DUP1 SLOAD SWAP1 POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 DUP2 SLOAD DUP2 LT PUSH2 0x666 JUMPI PUSH2 0x665 PUSH2 0x355C JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x4 MUL ADD SWAP1 POP PUSH1 0x0 PUSH1 0x8 PUSH1 0x0 DUP1 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP DUP3 DUP2 PUSH1 0x0 ADD SLOAD LT ISZERO PUSH2 0x711 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x708 SWAP1 PUSH2 0x35E8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x71B PUSH1 0x0 PUSH2 0x1ACA JUMP JUMPDEST PUSH1 0x0 PUSH2 0x765 DUP3 PUSH1 0x1 ADD SLOAD PUSH2 0x757 PUSH5 0xE8D4A51000 PUSH2 0x749 DUP8 PUSH1 0x3 ADD SLOAD DUP8 PUSH1 0x0 ADD SLOAD PUSH2 0x2848 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x28C2 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x290C SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 GT ISZERO PUSH2 0x806 JUMPI PUSH2 0x7C2 DUP2 PUSH1 0xB PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x2956 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0xB PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP JUMPDEST PUSH1 0x0 DUP5 GT ISZERO PUSH2 0x87E JUMPI PUSH2 0x826 DUP5 DUP4 PUSH1 0x0 ADD SLOAD PUSH2 0x290C SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP3 PUSH1 0x0 ADD DUP2 SWAP1 SSTORE POP PUSH2 0x87D CALLER DUP6 DUP6 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x29B4 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST JUMPDEST PUSH2 0x8B0 PUSH5 0xE8D4A51000 PUSH2 0x8A2 DUP6 PUSH1 0x3 ADD SLOAD DUP6 PUSH1 0x0 ADD SLOAD PUSH2 0x2848 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x28C2 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP3 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xF279E6A1F5E320CCA91135676D9CB6E44CA8A08C0B88342BCDB1144F6511B568 DUP7 PUSH1 0x40 MLOAD PUSH2 0x900 SWAP2 SWAP1 PUSH2 0x303B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH1 0x7 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x91E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x4 MUL ADD PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 DUP1 PUSH1 0x2 ADD SLOAD SWAP1 DUP1 PUSH1 0x3 ADD SLOAD SWAP1 POP DUP5 JUMP JUMPDEST PUSH1 0x9 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x7 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x98A JUMPI PUSH2 0x989 PUSH2 0x355C JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x4 MUL ADD SWAP1 POP PUSH1 0x0 PUSH1 0x8 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP PUSH1 0x0 DUP3 PUSH1 0x3 ADD SLOAD SWAP1 POP PUSH1 0x0 DUP4 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA56 SWAP2 SWAP1 PUSH2 0x34BD JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xA73 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xA97 SWAP2 SWAP1 PUSH2 0x361D JUMP JUMPDEST SWAP1 POP DUP4 PUSH1 0x2 ADD SLOAD NUMBER GT DUP1 ISZERO PUSH2 0xAAD JUMPI POP PUSH1 0x0 DUP2 EQ ISZERO JUMPDEST ISZERO PUSH2 0xB48 JUMPI PUSH1 0x0 PUSH2 0xAC2 DUP6 PUSH1 0x2 ADD SLOAD NUMBER PUSH2 0x20E7 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xB05 PUSH1 0x9 SLOAD PUSH2 0xAF7 DUP9 PUSH1 0x1 ADD SLOAD PUSH2 0xAE9 PUSH1 0x4 SLOAD DUP8 PUSH2 0x2848 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x2848 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x28C2 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0xB43 PUSH2 0xB34 DUP5 PUSH2 0xB26 PUSH5 0xE8D4A51000 DUP6 PUSH2 0x2848 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x28C2 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP6 PUSH2 0x2956 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP4 POP POP POP JUMPDEST PUSH1 0x0 PUSH2 0xB8E DUP5 PUSH1 0x1 ADD SLOAD PUSH2 0xB80 PUSH5 0xE8D4A51000 PUSH2 0xB72 DUP8 DUP10 PUSH1 0x0 ADD SLOAD PUSH2 0x2848 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x28C2 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x290C SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x1 DUP9 DUP2 SLOAD DUP2 LT PUSH2 0xBA6 JUMPI PUSH2 0xBA5 PUSH2 0x355C JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD SWAP1 POP PUSH1 0x0 PUSH2 0xC0A PUSH1 0xB PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD DUP5 PUSH2 0x2956 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP DUP2 PUSH1 0x1 ADD SLOAD DUP2 GT ISZERO PUSH2 0xC40 JUMPI PUSH1 0x0 DUP9 SUB PUSH2 0xC2B JUMPI PUSH2 0xC2A PUSH1 0x0 PUSH2 0x64F JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP9 EQ PUSH2 0xC3F JUMPI PUSH2 0xC3E DUP9 PUSH1 0x0 PUSH2 0x1353 JUMP JUMPDEST JUMPDEST JUMPDEST PUSH1 0xB PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD DUP3 PUSH1 0x1 ADD SLOAD LT PUSH2 0xCC5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCBC SWAP1 PUSH2 0x3696 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xD1B DUP3 PUSH1 0x1 ADD SLOAD PUSH1 0xB PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x290C SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0xB PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x17E5883C CALLER PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xDBB SWAP2 SWAP1 PUSH2 0x34BD JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xDD5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xDE9 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0xE00 PUSH2 0x2A3A JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xE1E PUSH2 0x20BE JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xE74 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE6B SWAP1 PUSH2 0x3702 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 ISZERO PUSH2 0xE83 JUMPI PUSH2 0xE82 PUSH2 0x1E82 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH1 0xA SLOAD NUMBER GT PUSH2 0xE96 JUMPI PUSH1 0xA SLOAD PUSH2 0xE98 JUMP JUMPDEST NUMBER JUMPDEST SWAP1 POP PUSH2 0xEAF DUP5 PUSH1 0x9 SLOAD PUSH2 0x2956 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x9 DUP2 SWAP1 SSTORE POP PUSH1 0x7 PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP7 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE POP SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x4 MUL ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD SSTORE POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0xF8D PUSH2 0x2A3A JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xFAB PUSH2 0x20BE JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1001 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFF8 SWAP1 PUSH2 0x3702 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x6 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH2 0x104D PUSH2 0x2A3A JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x106B PUSH2 0x20BE JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x10C1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x10B8 SWAP1 PUSH2 0x3702 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x4 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 DUP2 SLOAD DUP2 LT PUSH2 0x10E2 JUMPI PUSH2 0x10E1 PUSH2 0x355C JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x4 MUL ADD SWAP1 POP PUSH1 0x0 PUSH1 0x8 PUSH1 0x0 DUP1 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP PUSH2 0x1150 PUSH1 0x0 PUSH2 0x1ACA JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 ADD SLOAD GT ISZERO PUSH2 0x124A JUMPI PUSH1 0x0 PUSH2 0x11A7 DUP3 PUSH1 0x1 ADD SLOAD PUSH2 0x1199 PUSH5 0xE8D4A51000 PUSH2 0x118B DUP8 PUSH1 0x3 ADD SLOAD DUP8 PUSH1 0x0 ADD SLOAD PUSH2 0x2848 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x28C2 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x290C SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 GT ISZERO PUSH2 0x1248 JUMPI PUSH2 0x1204 DUP2 PUSH1 0xB PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x2956 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0xB PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP JUMPDEST POP JUMPDEST PUSH1 0x0 DUP4 GT ISZERO PUSH2 0x12C4 JUMPI PUSH2 0x12A4 CALLER ADDRESS DUP6 DUP6 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x2A42 SWAP1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x12BB DUP4 DUP3 PUSH1 0x0 ADD SLOAD PUSH2 0x2956 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP2 PUSH1 0x0 ADD DUP2 SWAP1 SSTORE POP JUMPDEST PUSH2 0x12F6 PUSH5 0xE8D4A51000 PUSH2 0x12E8 DUP5 PUSH1 0x3 ADD SLOAD DUP5 PUSH1 0x0 ADD SLOAD PUSH2 0x2848 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x28C2 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP2 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x90890809C654F11D6E72A28FA60149770A0D11EC6C92319D6CEB2BB0A4EA1A15 DUP6 PUSH1 0x40 MLOAD PUSH2 0x1346 SWAP2 SWAP1 PUSH2 0x303B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 SUB PUSH2 0x1396 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x138D SWAP1 PUSH2 0x376E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x7 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x13AC JUMPI PUSH2 0x13AB PUSH2 0x355C JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x4 MUL ADD SWAP1 POP PUSH1 0x0 PUSH1 0x8 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP DUP3 DUP2 PUSH1 0x0 ADD SLOAD LT ISZERO PUSH2 0x1457 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x144E SWAP1 PUSH2 0x35E8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1460 DUP5 PUSH2 0x1ACA JUMP JUMPDEST PUSH1 0x0 PUSH2 0x14AA DUP3 PUSH1 0x1 ADD SLOAD PUSH2 0x149C PUSH5 0xE8D4A51000 PUSH2 0x148E DUP8 PUSH1 0x3 ADD SLOAD DUP8 PUSH1 0x0 ADD SLOAD PUSH2 0x2848 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x28C2 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x290C SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 GT ISZERO PUSH2 0x154B JUMPI PUSH2 0x1507 DUP2 PUSH1 0xB PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x2956 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0xB PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP JUMPDEST PUSH2 0x1562 DUP5 DUP4 PUSH1 0x0 ADD SLOAD PUSH2 0x290C SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP3 PUSH1 0x0 ADD DUP2 SWAP1 SSTORE POP PUSH2 0x159C PUSH5 0xE8D4A51000 PUSH2 0x158E DUP6 PUSH1 0x3 ADD SLOAD DUP6 PUSH1 0x0 ADD SLOAD PUSH2 0x2848 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x28C2 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP3 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP PUSH2 0x15F3 CALLER DUP6 DUP6 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x29B4 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP5 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xF279E6A1F5E320CCA91135676D9CB6E44CA8A08C0B88342BCDB1144F6511B568 DUP7 PUSH1 0x40 MLOAD PUSH2 0x163A SWAP2 SWAP1 PUSH2 0x303B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x6 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x16DA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x16D1 SWAP1 PUSH2 0x37DA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x7 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x16F0 JUMPI PUSH2 0x16EF PUSH2 0x355C JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x4 MUL ADD SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH1 0x0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1764 SWAP2 SWAP1 PUSH2 0x34BD JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1781 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x17A5 SWAP2 SWAP1 PUSH2 0x361D JUMP JUMPDEST SWAP1 POP PUSH2 0x17F4 PUSH1 0x6 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x2ACB SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xCE5494BB DUP5 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1851 SWAP2 SWAP1 PUSH2 0x3541 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1870 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1894 SWAP2 SWAP1 PUSH2 0x380F JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x18CF SWAP2 SWAP1 PUSH2 0x34BD JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x18EC JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1910 SWAP2 SWAP1 PUSH2 0x361D JUMP JUMPDEST DUP3 EQ PUSH2 0x1951 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1948 SWAP1 PUSH2 0x3888 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 DUP5 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0xA SLOAD DUP2 JUMP JUMPDEST PUSH2 0x19A9 PUSH2 0x2A3A JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x19C7 PUSH2 0x20BE JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1A1D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1A14 SWAP1 PUSH2 0x3702 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE POP SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x7 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x1AE0 JUMPI PUSH2 0x1ADF PUSH2 0x355C JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x4 MUL ADD SWAP1 POP DUP1 PUSH1 0x2 ADD SLOAD NUMBER GT PUSH2 0x1B01 JUMPI POP PUSH2 0x1C66 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1B60 SWAP2 SWAP1 PUSH2 0x34BD JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1B7D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1BA1 SWAP2 SWAP1 PUSH2 0x361D JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 GT PUSH2 0x1BBB JUMPI NUMBER DUP3 PUSH1 0x2 ADD DUP2 SWAP1 SSTORE POP POP POP PUSH2 0x1C66 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1BCB DUP4 PUSH1 0x2 ADD SLOAD NUMBER PUSH2 0x20E7 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1C0E PUSH1 0x9 SLOAD PUSH2 0x1C00 DUP7 PUSH1 0x1 ADD SLOAD PUSH2 0x1BF2 PUSH1 0x4 SLOAD DUP8 PUSH2 0x2848 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x2848 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x28C2 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0x1C50 PUSH2 0x1C3D DUP5 PUSH2 0x1C2F PUSH5 0xE8D4A51000 DUP6 PUSH2 0x2848 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x28C2 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP6 PUSH1 0x3 ADD SLOAD PUSH2 0x2956 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP5 PUSH1 0x3 ADD DUP2 SWAP1 SSTORE POP NUMBER DUP5 PUSH1 0x2 ADD DUP2 SWAP1 SSTORE POP POP POP POP POP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x7 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x1C7F JUMPI PUSH2 0x1C7E PUSH2 0x355C JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x4 MUL ADD SWAP1 POP PUSH1 0x0 PUSH1 0x8 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP PUSH2 0x1D36 CALLER DUP3 PUSH1 0x0 ADD SLOAD DUP5 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x29B4 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP3 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xBB757047C2B5F3974FE26B7C10F732E7BCE710B0952A71082702781E62AE0595 DUP4 PUSH1 0x0 ADD SLOAD PUSH1 0x40 MLOAD PUSH2 0x1D81 SWAP2 SWAP1 PUSH2 0x303B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x0 DUP2 PUSH1 0x0 ADD DUP2 SWAP1 SSTORE POP PUSH1 0x0 DUP2 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x1DB0 PUSH2 0x2A3A JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1DCE PUSH2 0x20BE JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1E24 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1E1B SWAP1 PUSH2 0x3702 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x5 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x1E3E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 POP DUP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x7 DUP1 SLOAD SWAP1 POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1EB1 JUMPI PUSH2 0x1EA0 DUP2 PUSH2 0x1ACA JUMP JUMPDEST DUP1 PUSH2 0x1EAA SWAP1 PUSH2 0x38D7 JUMP JUMPDEST SWAP1 POP PUSH2 0x1E8F JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x1EBD PUSH2 0x2A3A JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1EDB PUSH2 0x20BE JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1F31 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1F28 SWAP1 PUSH2 0x3702 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 ISZERO PUSH2 0x1F40 JUMPI PUSH2 0x1F3F PUSH2 0x1E82 JUMP JUMPDEST JUMPDEST PUSH2 0x1F8C DUP3 PUSH2 0x1F7E PUSH1 0x7 DUP7 DUP2 SLOAD DUP2 LT PUSH2 0x1F5B JUMPI PUSH2 0x1F5A PUSH2 0x355C JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x4 MUL ADD PUSH1 0x1 ADD SLOAD PUSH1 0x9 SLOAD PUSH2 0x290C SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x2956 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x9 DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x7 DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x1FA7 JUMPI PUSH2 0x1FA6 PUSH2 0x355C JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x4 MUL ADD PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP POP POP POP JUMP JUMPDEST PUSH2 0x1FC9 PUSH2 0x2A3A JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1FE7 PUSH2 0x20BE JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x203D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2034 SWAP1 PUSH2 0x3702 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x2047 PUSH1 0x0 PUSH2 0x2C1A JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x6 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xB PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2110 PUSH1 0x5 SLOAD PUSH2 0x2102 DUP6 DUP6 PUSH2 0x290C SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x2848 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x8 PUSH1 0x20 MSTORE DUP2 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP2 POP POP DUP1 PUSH1 0x0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 POP DUP3 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0x2177 PUSH2 0x2A3A JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x2195 PUSH2 0x20BE JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x21EB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x21E2 SWAP1 PUSH2 0x3702 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x3 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0xB PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP3 SUB PUSH2 0x22B0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x22A7 SWAP1 PUSH2 0x396B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x7 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x22C6 JUMPI PUSH2 0x22C5 PUSH2 0x355C JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x4 MUL ADD SWAP1 POP PUSH1 0x0 PUSH1 0x8 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP PUSH2 0x2333 DUP5 PUSH2 0x1ACA JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 ADD SLOAD GT ISZERO PUSH2 0x242D JUMPI PUSH1 0x0 PUSH2 0x238A DUP3 PUSH1 0x1 ADD SLOAD PUSH2 0x237C PUSH5 0xE8D4A51000 PUSH2 0x236E DUP8 PUSH1 0x3 ADD SLOAD DUP8 PUSH1 0x0 ADD SLOAD PUSH2 0x2848 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x28C2 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x290C SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 GT ISZERO PUSH2 0x242B JUMPI PUSH2 0x23E7 DUP2 PUSH1 0xB PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x2956 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0xB PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP JUMPDEST POP JUMPDEST PUSH2 0x247E CALLER ADDRESS DUP6 DUP6 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x2A42 SWAP1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x2495 DUP4 DUP3 PUSH1 0x0 ADD SLOAD PUSH2 0x2956 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP2 PUSH1 0x0 ADD DUP2 SWAP1 SSTORE POP PUSH2 0x24CF PUSH5 0xE8D4A51000 PUSH2 0x24C1 DUP5 PUSH1 0x3 ADD SLOAD DUP5 PUSH1 0x0 ADD SLOAD PUSH2 0x2848 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x28C2 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP2 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP DUP4 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x90890809C654F11D6E72A28FA60149770A0D11EC6C92319D6CEB2BB0A4EA1A15 DUP6 PUSH1 0x40 MLOAD PUSH2 0x251E SWAP2 SWAP1 PUSH2 0x303B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH2 0x2534 PUSH2 0x2A3A JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x2552 PUSH2 0x20BE JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x25A8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x259F SWAP1 PUSH2 0x3702 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x2617 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x260E SWAP1 PUSH2 0x39FD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x2620 DUP2 PUSH2 0x2C1A JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x7 DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x263A JUMPI PUSH2 0x2639 PUSH2 0x355C JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x4 MUL ADD SWAP1 POP PUSH1 0x0 PUSH1 0x8 PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP PUSH1 0x0 DUP3 PUSH1 0x3 ADD SLOAD SWAP1 POP PUSH1 0x0 DUP4 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2706 SWAP2 SWAP1 PUSH2 0x34BD JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2723 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2747 SWAP2 SWAP1 PUSH2 0x361D JUMP JUMPDEST SWAP1 POP DUP4 PUSH1 0x2 ADD SLOAD NUMBER GT DUP1 ISZERO PUSH2 0x275D JUMPI POP PUSH1 0x0 DUP2 EQ ISZERO JUMPDEST ISZERO PUSH2 0x27F8 JUMPI PUSH1 0x0 PUSH2 0x2772 DUP6 PUSH1 0x2 ADD SLOAD NUMBER PUSH2 0x20E7 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x27B5 PUSH1 0x9 SLOAD PUSH2 0x27A7 DUP9 PUSH1 0x1 ADD SLOAD PUSH2 0x2799 PUSH1 0x4 SLOAD DUP8 PUSH2 0x2848 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x2848 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x28C2 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0x27F3 PUSH2 0x27E4 DUP5 PUSH2 0x27D6 PUSH5 0xE8D4A51000 DUP6 PUSH2 0x2848 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x28C2 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP6 PUSH2 0x2956 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP4 POP POP POP JUMPDEST PUSH2 0x283C DUP4 PUSH1 0x1 ADD SLOAD PUSH2 0x282E PUSH5 0xE8D4A51000 PUSH2 0x2820 DUP7 DUP9 PUSH1 0x0 ADD SLOAD PUSH2 0x2848 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x28C2 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x290C SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP5 POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 SUB PUSH2 0x285A JUMPI PUSH1 0x0 SWAP1 POP PUSH2 0x28BC JUMP JUMPDEST PUSH1 0x0 DUP3 DUP5 PUSH2 0x2868 SWAP2 SWAP1 PUSH2 0x3A1D JUMP JUMPDEST SWAP1 POP DUP3 DUP5 DUP3 PUSH2 0x2877 SWAP2 SWAP1 PUSH2 0x3AA6 JUMP JUMPDEST EQ PUSH2 0x28B7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x28AE SWAP1 PUSH2 0x3B49 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2904 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1A DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x536166654D6174683A206469766973696F6E206279207A65726F000000000000 DUP2 MSTORE POP PUSH2 0x2CDE JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x294E DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1E DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x536166654D6174683A207375627472616374696F6E206F766572666C6F770000 DUP2 MSTORE POP PUSH2 0x2D41 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 DUP5 PUSH2 0x2965 SWAP2 SWAP1 PUSH2 0x3B69 JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x29AA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x29A1 SWAP1 PUSH2 0x3C0B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2A35 DUP4 PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP5 DUP5 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x29D3 SWAP3 SWAP2 SWAP1 PUSH2 0x3C2B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x2DA5 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x2AC5 DUP5 PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP6 DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x2A63 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3C54 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x2DA5 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 EQ DUP1 PUSH2 0x2B55 JUMPI POP PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xDD62ED3E ADDRESS DUP6 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2B12 SWAP3 SWAP2 SWAP1 PUSH2 0x3C8B JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2B2F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2B53 SWAP2 SWAP1 PUSH2 0x361D JUMP JUMPDEST EQ JUMPDEST PUSH2 0x2B94 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2B8B SWAP1 PUSH2 0x3D26 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x2C15 DUP4 PUSH4 0x95EA7B3 PUSH1 0xE0 SHL DUP5 DUP5 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x2BB3 SWAP3 SWAP2 SWAP1 PUSH2 0x3C2B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x2DA5 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 GT DUP3 SWAP1 PUSH2 0x2D25 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2D1C SWAP2 SWAP1 PUSH2 0x3DCE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x0 DUP4 DUP6 PUSH2 0x2D34 SWAP2 SWAP1 PUSH2 0x3AA6 JUMP JUMPDEST SWAP1 POP DUP1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP4 DUP4 GT ISZERO DUP3 SWAP1 PUSH2 0x2D89 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2D80 SWAP2 SWAP1 PUSH2 0x3DCE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x0 DUP4 DUP6 PUSH2 0x2D98 SWAP2 SWAP1 PUSH2 0x3DF0 JUMP JUMPDEST SWAP1 POP DUP1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2E07 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564 DUP2 MSTORE POP DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x2E6C SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD GT ISZERO PUSH2 0x2E67 JUMPI DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x2E27 SWAP2 SWAP1 PUSH2 0x3E39 JUMP JUMPDEST PUSH2 0x2E66 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2E5D SWAP1 PUSH2 0x3ED8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x2E7B DUP5 DUP5 PUSH1 0x0 DUP6 PUSH2 0x2E84 JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 SELFBALANCE LT ISZERO PUSH2 0x2EC9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2EC0 SWAP1 PUSH2 0x3F6A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x2ED2 DUP6 PUSH2 0x2F98 JUMP JUMPDEST PUSH2 0x2F11 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2F08 SWAP1 PUSH2 0x3FD6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 DUP8 PUSH1 0x40 MLOAD PUSH2 0x2F3A SWAP2 SWAP1 PUSH2 0x403D JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x2F77 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x2F7C JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x2F8C DUP3 DUP3 DUP7 PUSH2 0x2FBB JUMP JUMPDEST SWAP3 POP POP POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0x2FCB JUMPI DUP3 SWAP1 POP PUSH2 0x301B JUMP JUMPDEST PUSH1 0x0 DUP4 MLOAD GT ISZERO PUSH2 0x2FDE JUMPI DUP3 MLOAD DUP1 DUP5 PUSH1 0x20 ADD REVERT JUMPDEST DUP2 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3012 SWAP2 SWAP1 PUSH2 0x3DCE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3035 DUP2 PUSH2 0x3022 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x3050 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x302C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x3064 DUP2 PUSH2 0x3022 JUMP JUMPDEST DUP2 EQ PUSH2 0x306F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x3081 DUP2 PUSH2 0x305B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x309D JUMPI PUSH2 0x309C PUSH2 0x3056 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x30AB DUP5 DUP3 DUP6 ADD PUSH2 0x3072 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x30F9 PUSH2 0x30F4 PUSH2 0x30EF DUP5 PUSH2 0x30B4 JUMP JUMPDEST PUSH2 0x30D4 JUMP JUMPDEST PUSH2 0x30B4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x310B DUP3 PUSH2 0x30DE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x311D DUP3 PUSH2 0x3100 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x312D DUP2 PUSH2 0x3112 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x3148 PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x3124 JUMP JUMPDEST PUSH2 0x3155 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x302C JUMP JUMPDEST PUSH2 0x3162 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x302C JUMP JUMPDEST PUSH2 0x316F PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x302C JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x318F JUMPI PUSH2 0x318E PUSH2 0x3056 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x319D DUP6 DUP3 DUP7 ADD PUSH2 0x3072 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x31AE DUP6 DUP3 DUP7 ADD PUSH2 0x3072 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x31C3 DUP3 PUSH2 0x30B4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x31D5 DUP3 PUSH2 0x31B8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x31E5 DUP2 PUSH2 0x31CA JUMP JUMPDEST DUP2 EQ PUSH2 0x31F0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x3202 DUP2 PUSH2 0x31DC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x321D DUP2 PUSH2 0x3208 JUMP JUMPDEST DUP2 EQ PUSH2 0x3228 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x323A DUP2 PUSH2 0x3214 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x3259 JUMPI PUSH2 0x3258 PUSH2 0x3056 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3267 DUP7 DUP3 DUP8 ADD PUSH2 0x3072 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x3278 DUP7 DUP3 DUP8 ADD PUSH2 0x31F3 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x3289 DUP7 DUP3 DUP8 ADD PUSH2 0x322B JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x329E DUP3 PUSH2 0x31B8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x32AE DUP2 PUSH2 0x3293 JUMP JUMPDEST DUP2 EQ PUSH2 0x32B9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x32CB DUP2 PUSH2 0x32A5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x32E7 JUMPI PUSH2 0x32E6 PUSH2 0x3056 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x32F5 DUP5 DUP3 DUP6 ADD PUSH2 0x32BC JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3309 DUP3 PUSH2 0x31B8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3319 DUP2 PUSH2 0x32FE JUMP JUMPDEST DUP2 EQ PUSH2 0x3324 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x3336 DUP2 PUSH2 0x3310 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x3353 JUMPI PUSH2 0x3352 PUSH2 0x3056 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3361 DUP6 DUP3 DUP7 ADD PUSH2 0x3327 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x3372 DUP6 DUP3 DUP7 ADD PUSH2 0x3072 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3387 DUP3 PUSH2 0x3100 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3397 DUP2 PUSH2 0x337C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x33B2 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x338E JUMP JUMPDEST PUSH2 0x33BF PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x302C JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x33DF JUMPI PUSH2 0x33DE PUSH2 0x3056 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x33ED DUP7 DUP3 DUP8 ADD PUSH2 0x3072 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x33FE DUP7 DUP3 DUP8 ADD PUSH2 0x3072 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x340F DUP7 DUP3 DUP8 ADD PUSH2 0x322B JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3424 DUP3 PUSH2 0x3100 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3434 DUP2 PUSH2 0x3419 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x344F PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x342B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x345E DUP2 PUSH2 0x31B8 JUMP JUMPDEST DUP2 EQ PUSH2 0x3469 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x347B DUP2 PUSH2 0x3455 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3497 JUMPI PUSH2 0x3496 PUSH2 0x3056 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x34A5 DUP5 DUP3 DUP6 ADD PUSH2 0x346C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x34B7 DUP2 PUSH2 0x31B8 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x34D2 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x34AE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x34EF JUMPI PUSH2 0x34EE PUSH2 0x3056 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x34FD DUP6 DUP3 DUP7 ADD PUSH2 0x3072 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x350E DUP6 DUP3 DUP7 ADD PUSH2 0x346C JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x352D PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x302C JUMP JUMPDEST PUSH2 0x353A PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x302C JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x3556 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x3124 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x77697468647261773A206E6F7420676F6F640000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x35D2 PUSH1 0x12 DUP4 PUSH2 0x358B JUMP JUMPDEST SWAP2 POP PUSH2 0x35DD DUP3 PUSH2 0x359C JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3601 DUP2 PUSH2 0x35C5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x3617 DUP2 PUSH2 0x305B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3633 JUMPI PUSH2 0x3632 PUSH2 0x3056 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3641 DUP5 DUP3 DUP6 ADD PUSH2 0x3608 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x506F776572206973206E6F7420656E6F75676800000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3680 PUSH1 0x13 DUP4 PUSH2 0x358B JUMP JUMPDEST SWAP2 POP PUSH2 0x368B DUP3 PUSH2 0x364A JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x36AF DUP2 PUSH2 0x3673 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x36EC PUSH1 0x20 DUP4 PUSH2 0x358B JUMP JUMPDEST SWAP2 POP PUSH2 0x36F7 DUP3 PUSH2 0x36B6 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x371B DUP2 PUSH2 0x36DF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x776974686472617720506F77657220627920756E7374616B696E670000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3758 PUSH1 0x1B DUP4 PUSH2 0x358B JUMP JUMPDEST SWAP2 POP PUSH2 0x3763 DUP3 PUSH2 0x3722 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3787 DUP2 PUSH2 0x374B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x6D6967726174653A206E6F206D69677261746F72000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x37C4 PUSH1 0x14 DUP4 PUSH2 0x358B JUMP JUMPDEST SWAP2 POP PUSH2 0x37CF DUP3 PUSH2 0x378E JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x37F3 DUP2 PUSH2 0x37B7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x3809 DUP2 PUSH2 0x31DC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3825 JUMPI PUSH2 0x3824 PUSH2 0x3056 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3833 DUP5 DUP3 DUP6 ADD PUSH2 0x37FA JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x6D6967726174653A206261640000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3872 PUSH1 0xC DUP4 PUSH2 0x358B JUMP JUMPDEST SWAP2 POP PUSH2 0x387D DUP3 PUSH2 0x383C JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x38A1 DUP2 PUSH2 0x3865 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x38E2 DUP3 PUSH2 0x3022 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x3914 JUMPI PUSH2 0x3913 PUSH2 0x38A8 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x6465706F73697420506F776572206279207374616B696E670000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3955 PUSH1 0x18 DUP4 PUSH2 0x358B JUMP JUMPDEST SWAP2 POP PUSH2 0x3960 DUP3 PUSH2 0x391F JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3984 DUP2 PUSH2 0x3948 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x39E7 PUSH1 0x26 DUP4 PUSH2 0x358B JUMP JUMPDEST SWAP2 POP PUSH2 0x39F2 DUP3 PUSH2 0x398B JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3A16 DUP2 PUSH2 0x39DA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3A28 DUP3 PUSH2 0x3022 JUMP JUMPDEST SWAP2 POP PUSH2 0x3A33 DUP4 PUSH2 0x3022 JUMP JUMPDEST SWAP3 POP DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x3A6C JUMPI PUSH2 0x3A6B PUSH2 0x38A8 JUMP JUMPDEST JUMPDEST DUP3 DUP3 MUL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x3AB1 DUP3 PUSH2 0x3022 JUMP JUMPDEST SWAP2 POP PUSH2 0x3ABC DUP4 PUSH2 0x3022 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x3ACC JUMPI PUSH2 0x3ACB PUSH2 0x3A77 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x536166654D6174683A206D756C7469706C69636174696F6E206F766572666C6F PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7700000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3B33 PUSH1 0x21 DUP4 PUSH2 0x358B JUMP JUMPDEST SWAP2 POP PUSH2 0x3B3E DUP3 PUSH2 0x3AD7 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3B62 DUP2 PUSH2 0x3B26 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3B74 DUP3 PUSH2 0x3022 JUMP JUMPDEST SWAP2 POP PUSH2 0x3B7F DUP4 PUSH2 0x3022 JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x3BB4 JUMPI PUSH2 0x3BB3 PUSH2 0x38A8 JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3BF5 PUSH1 0x1B DUP4 PUSH2 0x358B JUMP JUMPDEST SWAP2 POP PUSH2 0x3C00 DUP3 PUSH2 0x3BBF JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3C24 DUP2 PUSH2 0x3BE8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x3C40 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x34AE JUMP JUMPDEST PUSH2 0x3C4D PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x302C JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x3C69 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x34AE JUMP JUMPDEST PUSH2 0x3C76 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x34AE JUMP JUMPDEST PUSH2 0x3C83 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x302C JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x3CA0 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x34AE JUMP JUMPDEST PUSH2 0x3CAD PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x34AE JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x5361666545524332303A20617070726F76652066726F6D206E6F6E2D7A65726F PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x20746F206E6F6E2D7A65726F20616C6C6F77616E636500000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3D10 PUSH1 0x36 DUP4 PUSH2 0x358B JUMP JUMPDEST SWAP2 POP PUSH2 0x3D1B DUP3 PUSH2 0x3CB4 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3D3F DUP2 PUSH2 0x3D03 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x3D6F JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x3D54 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x3D7E JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3DA0 DUP3 PUSH2 0x3D46 JUMP JUMPDEST PUSH2 0x3DAA DUP2 DUP6 PUSH2 0x358B JUMP JUMPDEST SWAP4 POP PUSH2 0x3DBA DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x3D51 JUMP JUMPDEST PUSH2 0x3DC3 DUP2 PUSH2 0x3D84 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3DE8 DUP2 DUP5 PUSH2 0x3D95 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3DFB DUP3 PUSH2 0x3022 JUMP JUMPDEST SWAP2 POP PUSH2 0x3E06 DUP4 PUSH2 0x3022 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0x3E19 JUMPI PUSH2 0x3E18 PUSH2 0x38A8 JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x3E33 DUP2 PUSH2 0x3214 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3E4F JUMPI PUSH2 0x3E4E PUSH2 0x3056 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3E5D DUP5 DUP3 DUP6 ADD PUSH2 0x3E24 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x5361666545524332303A204552433230206F7065726174696F6E20646964206E PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6F74207375636365656400000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3EC2 PUSH1 0x2A DUP4 PUSH2 0x358B JUMP JUMPDEST SWAP2 POP PUSH2 0x3ECD DUP3 PUSH2 0x3E66 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3EF1 DUP2 PUSH2 0x3EB5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x416464726573733A20696E73756666696369656E742062616C616E636520666F PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x722063616C6C0000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3F54 PUSH1 0x26 DUP4 PUSH2 0x358B JUMP JUMPDEST SWAP2 POP PUSH2 0x3F5F DUP3 PUSH2 0x3EF8 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3F83 DUP2 PUSH2 0x3F47 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3FC0 PUSH1 0x1D DUP4 PUSH2 0x358B JUMP JUMPDEST SWAP2 POP PUSH2 0x3FCB DUP3 PUSH2 0x3F8A JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3FEF DUP2 PUSH2 0x3FB3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4017 DUP3 PUSH2 0x3FF6 JUMP JUMPDEST PUSH2 0x4021 DUP2 DUP6 PUSH2 0x4001 JUMP JUMPDEST SWAP4 POP PUSH2 0x4031 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x3D51 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4049 DUP3 DUP5 PUSH2 0x400C JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x24 PUSH29 0x71767CA2691BBF499941BC34A7325A3D199DF45CCA4CBD28118B574473 SWAP6 PUSH5 0x736F6C6343 STOP ADDMOD 0xF STOP CALLER ",
							"sourceMap": "22111:12975:0:-:0;;;23824:1;23790:35;;24267:1;24234:34;;24700:518;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;19984:32;20003:12;:10;;;:12;;:::i;:::-;19984:18;;;:32;;:::i;:::-;24848:4;24842:3;;:10;;;;;;;;;;;;;;;;;;24873:8;24863:7;;:18;;;;;;;;;;;;;;;;;;24908:14;24892:13;:30;;;;24946:11;24933:10;:24;;;;25003:8;25017:155;;;;;;;;25050:3;;;;;;;;;;;25017:155;;;;;;25080:4;25017:155;;;;25116:10;;25017:155;;;;25159:1;25017:155;;;25003:170;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;25204:4;25186:15;:22;;;;24700:518;;;;22111:12975;;19479:98;19532:7;19559:10;19552:17;;19479:98;:::o;21375:191::-;21449:16;21468:6;;;;;;;;;;;21449:25;;21494:8;21485:6;;:17;;;;;;;;;;;;;;;;;;21549:8;21518:40;;21539:8;21518:40;;;;;;;;;;;;21438:128;21375:191;:::o;88:117:1:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:110::-;619:7;648:24;666:5;648:24;:::i;:::-;637:35;;568:110;;;:::o;684:150::-;771:38;803:5;771:38;:::i;:::-;764:5;761:49;751:77;;824:1;821;814:12;751:77;684:150;:::o;840:171::-;911:5;942:6;936:13;927:22;;958:47;999:5;958:47;:::i;:::-;840:171;;;;:::o;1017:122::-;1090:24;1108:5;1090:24;:::i;:::-;1083:5;1080:35;1070:63;;1129:1;1126;1119:12;1070:63;1017:122;:::o;1145:143::-;1202:5;1233:6;1227:13;1218:22;;1249:33;1276:5;1249:33;:::i;:::-;1145:143;;;;:::o;1294:77::-;1331:7;1360:5;1349:16;;1294:77;;;:::o;1377:122::-;1450:24;1468:5;1450:24;:::i;:::-;1443:5;1440:35;1430:63;;1489:1;1486;1479:12;1430:63;1377:122;:::o;1505:143::-;1562:5;1593:6;1587:13;1578:22;;1609:33;1636:5;1609:33;:::i;:::-;1505:143;;;;:::o;1654:848::-;1765:6;1773;1781;1789;1838:3;1826:9;1817:7;1813:23;1809:33;1806:120;;;1845:79;;:::i;:::-;1806:120;1965:1;1990:78;2060:7;2051:6;2040:9;2036:22;1990:78;:::i;:::-;1980:88;;1936:142;2117:2;2143:64;2199:7;2190:6;2179:9;2175:22;2143:64;:::i;:::-;2133:74;;2088:129;2256:2;2282:64;2338:7;2329:6;2318:9;2314:22;2282:64;:::i;:::-;2272:74;;2227:129;2395:2;2421:64;2477:7;2468:6;2457:9;2453:22;2421:64;:::i;:::-;2411:74;;2366:129;1654:848;;;;;;;:::o;22111:12975:0:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@BONUS_MULTIPLIER_977": {
									"entryPoint": 8303,
									"id": 977,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@DDT_970": {
									"entryPoint": 8521,
									"id": 970,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@PowerPerBlock_974": {
									"entryPoint": 7586,
									"id": 974,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_callOptionalReturn_796": {
									"entryPoint": 11685,
									"id": 796,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_msgSender_806": {
									"entryPoint": 10810,
									"id": 806,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_916": {
									"entryPoint": 11290,
									"id": 916,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@addNFT_1100": {
									"entryPoint": 6561,
									"id": 1100,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@add_1348": {
									"entryPoint": 3576,
									"id": 1348,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@add_27": {
									"entryPoint": 10582,
									"id": 27,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@claimNFTReward_1279": {
									"entryPoint": 2420,
									"id": 1279,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@deposit_1838": {
									"entryPoint": 8813,
									"id": 1838,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@devaddr_972": {
									"entryPoint": 8775,
									"id": 972,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@div_124": {
									"entryPoint": 10434,
									"id": 124,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@div_152": {
									"entryPoint": 11486,
									"id": 152,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@emergencyWithdraw_2264": {
									"entryPoint": 7273,
									"id": 2264,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@enterStaking_2089": {
									"entryPoint": 4299,
									"id": 2089,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@functionCallWithValue_442": {
									"entryPoint": 11908,
									"id": 442,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"@functionCall_372": {
									"entryPoint": 11884,
									"id": 372,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@getMultiplier_1496": {
									"entryPoint": 8423,
									"id": 1496,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@getPowerBalance_1080": {
									"entryPoint": 8309,
									"id": 1080,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@isContract_301": {
									"entryPoint": 12184,
									"id": 301,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@leaveStaking_2207": {
									"entryPoint": 1615,
									"id": 2207,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@massUpdatePools_1623": {
									"entryPoint": 7810,
									"id": 1623,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@migrate_1478": {
									"entryPoint": 5705,
									"id": 1478,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@migrator_980": {
									"entryPoint": 8265,
									"id": 980,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@mul_107": {
									"entryPoint": 10312,
									"id": 107,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@nftsInfo_967": {
									"entryPoint": 7726,
									"id": 967,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@owner_845": {
									"entryPoint": 8382,
									"id": 845,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@pendingPower_1598": {
									"entryPoint": 9763,
									"id": 1598,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@poolInfo_984": {
									"entryPoint": 2318,
									"id": 984,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@poolLength_1300": {
									"entryPoint": 1602,
									"id": 1300,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@powerBalance_1000": {
									"entryPoint": 8751,
									"id": 1000,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@renounceOwnership_873": {
									"entryPoint": 8129,
									"id": 873,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@safeApprove_674": {
									"entryPoint": 10955,
									"id": 674,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@safeTransferFrom_630": {
									"entryPoint": 10818,
									"id": 630,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@safeTransfer_604": {
									"entryPoint": 10676,
									"id": 604,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@setDevAddress_2276": {
									"entryPoint": 8559,
									"id": 2276,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@setMigrator_1399": {
									"entryPoint": 3973,
									"id": 1399,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@set_1386": {
									"entryPoint": 7861,
									"id": 1386,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@startBlock_996": {
									"entryPoint": 6555,
									"id": 996,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@sub_44": {
									"entryPoint": 10508,
									"id": 44,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@sub_72": {
									"entryPoint": 11585,
									"id": 72,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@totalAllocPoint_994": {
									"entryPoint": 2414,
									"id": 994,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@transferOwnership_896": {
									"entryPoint": 9516,
									"id": 896,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@updateMultiplier_1291": {
									"entryPoint": 7592,
									"id": 1291,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@updatePool_1714": {
									"entryPoint": 6858,
									"id": 1714,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@updatePowerPerBlock_2288": {
									"entryPoint": 4165,
									"id": 2288,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@userInfo_991": {
									"entryPoint": 8472,
									"id": 991,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@verifyCallResult_577": {
									"entryPoint": 12219,
									"id": 577,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@withdraw_1960": {
									"entryPoint": 4947,
									"id": 1960,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 13420,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool": {
									"entryPoint": 12843,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool_fromMemory": {
									"entryPoint": 15908,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_contract$_IERC20_$286": {
									"entryPoint": 12787,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_contract$_IERC20_$286_fromMemory": {
									"entryPoint": 14330,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_contract$_IERC721_$933": {
									"entryPoint": 13095,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_contract$_IMigratorChef_$927": {
									"entryPoint": 12988,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 12402,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 13832,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 13441,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 15929,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_contract$_IERC20_$286_fromMemory": {
									"entryPoint": 14351,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_contract$_IERC721_$933t_uint256": {
									"entryPoint": 13116,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_contract$_IMigratorChef_$927": {
									"entryPoint": 13009,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 12423,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256_fromMemory": {
									"entryPoint": 13853,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256t_address": {
									"entryPoint": 13528,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_uint256t_contract$_IERC20_$286t_bool": {
									"entryPoint": 12864,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_uint256t_uint256": {
									"entryPoint": 12664,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_uint256t_uint256t_bool": {
									"entryPoint": 13254,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 13486,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 16396,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_contract$_IERC20_$286_to_t_address_fromStack": {
									"entryPoint": 12580,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_contract$_IERC721_$933_to_t_address_fromStack": {
									"entryPoint": 13198,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_contract$_IMigratorChef_$927_to_t_address_fromStack": {
									"entryPoint": 13355,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 15765,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 14810,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_2802e724701dc68a9a3726c72d44a6e6756fa09a3efd95f836f437d22954c406_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 13939,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_2af9ac489fdfd3845a7a7fd4a89fb65b5b2a06bf8679b70fd9b405dd9a5bbd5f_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 14155,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 15336,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 16199,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_8997113db37475c3d966d2b1151c847dca6ccea70a4d4a2b46d60e92c3a8e108_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 14664,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 15142,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 14047,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 16307,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_d09049ba12a4b0d32c8152176161276998fb1529c6184e3c4227161fe99644df_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 13765,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 16053,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_ed1ac0ecd515e3d8f412b4c0ca319587a2238640d669089c98335a92c60abee8_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 14437,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 15619,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_f2b78d14701a493fa40394b414840abc22dde75251115d332366fec4d94c3445_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 14263,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 12332,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 16445,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 13501,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed": {
									"entryPoint": 15499,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 15444,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 15403,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_IERC20_$286__to_t_address__fromStack_reversed": {
									"entryPoint": 13633,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_IERC20_$286_t_uint256_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 12595,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_IERC721_$933_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 13213,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_IMigratorChef_$927__to_t_address__fromStack_reversed": {
									"entryPoint": 13370,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 15822,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 14845,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_2802e724701dc68a9a3726c72d44a6e6756fa09a3efd95f836f437d22954c406__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 13974,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_2af9ac489fdfd3845a7a7fd4a89fb65b5b2a06bf8679b70fd9b405dd9a5bbd5f__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 14190,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 15371,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 16234,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_8997113db37475c3d966d2b1151c847dca6ccea70a4d4a2b46d60e92c3a8e108__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 14699,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 15177,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 14082,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 16342,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_d09049ba12a4b0d32c8152176161276998fb1529c6184e3c4227161fe99644df__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 13800,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 16088,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_ed1ac0ecd515e3d8f412b4c0ca319587a2238640d669089c98335a92c60abee8__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 14472,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 15654,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_f2b78d14701a493fa40394b414840abc22dde75251115d332366fec4d94c3445__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 14298,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 12347,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 13592,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_length_t_bytes_memory_ptr": {
									"entryPoint": 16374,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 15686,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 16385,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 13707,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 15209,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 15014,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 14877,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 15856,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 12728,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 12808,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_contract$_IERC20_$286": {
									"entryPoint": 12746,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_contract$_IERC721_$933": {
									"entryPoint": 13054,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_contract$_IMigratorChef_$927": {
									"entryPoint": 12947,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 12468,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 12322,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_contract$_IERC20_$286_to_t_address": {
									"entryPoint": 12562,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_contract$_IERC721_$933_to_t_address": {
									"entryPoint": 13180,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_contract$_IMigratorChef_$927_to_t_address": {
									"entryPoint": 13337,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_address": {
									"entryPoint": 12544,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_uint160": {
									"entryPoint": 12510,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_memory_to_memory": {
									"entryPoint": 15697,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"identity": {
									"entryPoint": 12500,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"increment_t_uint256": {
									"entryPoint": 14551,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 14504,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 14967,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 13660,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 12374,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 15748,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe": {
									"entryPoint": 14731,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_2802e724701dc68a9a3726c72d44a6e6756fa09a3efd95f836f437d22954c406": {
									"entryPoint": 13898,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_2af9ac489fdfd3845a7a7fd4a89fb65b5b2a06bf8679b70fd9b405dd9a5bbd5f": {
									"entryPoint": 14114,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a": {
									"entryPoint": 15295,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c": {
									"entryPoint": 16120,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_8997113db37475c3d966d2b1151c847dca6ccea70a4d4a2b46d60e92c3a8e108": {
									"entryPoint": 14623,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3": {
									"entryPoint": 15063,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe": {
									"entryPoint": 14006,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad": {
									"entryPoint": 16266,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_d09049ba12a4b0d32c8152176161276998fb1529c6184e3c4227161fe99644df": {
									"entryPoint": 13724,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd": {
									"entryPoint": 15974,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_ed1ac0ecd515e3d8f412b4c0ca319587a2238640d669089c98335a92c60abee8": {
									"entryPoint": 14396,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25": {
									"entryPoint": 15540,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_f2b78d14701a493fa40394b414840abc22dde75251115d332366fec4d94c3445": {
									"entryPoint": 14222,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 13397,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 12820,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_contract$_IERC20_$286": {
									"entryPoint": 12764,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_contract$_IERC721_$933": {
									"entryPoint": 13072,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_contract$_IMigratorChef_$927": {
									"entryPoint": 12965,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 12379,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:31314:1",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "52:32:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "62:16:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "73:5:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "62:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "34:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "44:7:1",
														"type": ""
													}
												],
												"src": "7:77:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "155:53:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "172:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "195:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "177:17:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "177:24:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "165:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "165:37:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "165:37:1"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "143:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "150:3:1",
														"type": ""
													}
												],
												"src": "90:118:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "312:124:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "322:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "334:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "345:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "330:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "330:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "322:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "402:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "415:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "426:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "411:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "411:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "358:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "358:71:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "358:71:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "284:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "296:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "307:4:1",
														"type": ""
													}
												],
												"src": "214:222:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "482:35:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "492:19:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "508:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "502:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "502:9:1"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "492:6:1"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "475:6:1",
														"type": ""
													}
												],
												"src": "442:75:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "612:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "629:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "632:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "622:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "622:12:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "622:12:1"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "523:117:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "735:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "752:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "755:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "745:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "745:12:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "745:12:1"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "646:117:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "812:79:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "869:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "878:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "881:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "871:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "871:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "871:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "835:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "860:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "842:17:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "842:24:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "832:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "832:35:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "825:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "825:43:1"
															},
															"nodeType": "YulIf",
															"src": "822:63:1"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "805:5:1",
														"type": ""
													}
												],
												"src": "769:122:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "949:87:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "959:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "981:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "968:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "968:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "959:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1024:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "997:26:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "997:33:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "997:33:1"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "927:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "935:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "943:5:1",
														"type": ""
													}
												],
												"src": "897:139:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1108:263:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1154:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "1156:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1156:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1156:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1129:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1138:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1125:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1125:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1150:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1121:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1121:32:1"
															},
															"nodeType": "YulIf",
															"src": "1118:119:1"
														},
														{
															"nodeType": "YulBlock",
															"src": "1247:117:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1262:15:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1276:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1266:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1291:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1326:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1337:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1322:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1322:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1346:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "1301:20:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1301:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1291:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1078:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1089:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1101:6:1",
														"type": ""
													}
												],
												"src": "1042:329:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1422:81:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1432:65:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1447:5:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1454:42:1",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "1443:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1443:54:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1432:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1404:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1414:7:1",
														"type": ""
													}
												],
												"src": "1377:126:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1541:28:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1551:12:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "1558:5:1"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "1551:3:1"
																}
															]
														}
													]
												},
												"name": "identity",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1527:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "1537:3:1",
														"type": ""
													}
												],
												"src": "1509:60:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1635:82:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1645:66:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "1703:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint160",
																					"nodeType": "YulIdentifier",
																					"src": "1685:17:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1685:24:1"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nodeType": "YulIdentifier",
																			"src": "1676:8:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1676:34:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "1658:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1658:53:1"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "1645:9:1"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1615:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "1625:9:1",
														"type": ""
													}
												],
												"src": "1575:142:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1783:66:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1793:50:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1837:5:1"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "1806:30:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1806:37:1"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "1793:9:1"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1763:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "1773:9:1",
														"type": ""
													}
												],
												"src": "1723:126:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1929:66:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1939:50:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1983:5:1"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "1952:30:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1952:37:1"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "1939:9:1"
																}
															]
														}
													]
												},
												"name": "convert_t_contract$_IERC20_$286_to_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1909:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "1919:9:1",
														"type": ""
													}
												],
												"src": "1855:140:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2080:80:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2097:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2147:5:1"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_contract$_IERC20_$286_to_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "2102:44:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2102:51:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2090:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2090:64:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2090:64:1"
														}
													]
												},
												"name": "abi_encode_t_contract$_IERC20_$286_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2068:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2075:3:1",
														"type": ""
													}
												],
												"src": "2001:159:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2362:385:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2372:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2384:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2395:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2380:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2380:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2372:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "2467:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2480:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2491:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2476:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2476:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_contract$_IERC20_$286_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2409:57:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2409:85:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2409:85:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "2548:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2561:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2572:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2557:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2557:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2504:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2504:72:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2504:72:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "2630:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2643:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2654:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2639:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2639:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2586:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2586:72:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2586:72:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "2712:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2725:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2736:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2721:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2721:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2668:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2668:72:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2668:72:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IERC20_$286_t_uint256_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2310:9:1",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "2322:6:1",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "2330:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2338:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2346:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2357:4:1",
														"type": ""
													}
												],
												"src": "2166:581:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2836:391:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2882:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "2884:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2884:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2884:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2857:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2866:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2853:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2853:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2878:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2849:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2849:32:1"
															},
															"nodeType": "YulIf",
															"src": "2846:119:1"
														},
														{
															"nodeType": "YulBlock",
															"src": "2975:117:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2990:15:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3004:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2994:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3019:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3054:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3065:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3050:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3050:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3074:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "3029:20:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3029:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "3019:6:1"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "3102:118:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3117:16:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3131:2:1",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3121:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3147:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3182:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3193:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3178:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3178:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3202:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "3157:20:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3157:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "3147:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2798:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2809:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2821:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2829:6:1",
														"type": ""
													}
												],
												"src": "2753:474:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3278:51:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3288:35:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3317:5:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "3299:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3299:24:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "3288:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3260:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "3270:7:1",
														"type": ""
													}
												],
												"src": "3233:96:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3394:51:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3404:35:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3433:5:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "3415:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3415:24:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "3404:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_contract$_IERC20_$286",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3376:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "3386:7:1",
														"type": ""
													}
												],
												"src": "3335:110:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3508:93:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3579:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3588:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3591:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3581:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3581:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3581:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3531:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "3570:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_contract$_IERC20_$286",
																					"nodeType": "YulIdentifier",
																					"src": "3538:31:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3538:38:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "3528:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3528:49:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "3521:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3521:57:1"
															},
															"nodeType": "YulIf",
															"src": "3518:77:1"
														}
													]
												},
												"name": "validator_revert_t_contract$_IERC20_$286",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3501:5:1",
														"type": ""
													}
												],
												"src": "3451:150:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3673:101:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3683:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "3705:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3692:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3692:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "3683:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3762:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_contract$_IERC20_$286",
																	"nodeType": "YulIdentifier",
																	"src": "3721:40:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3721:47:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3721:47:1"
														}
													]
												},
												"name": "abi_decode_t_contract$_IERC20_$286",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "3651:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3659:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3667:5:1",
														"type": ""
													}
												],
												"src": "3607:167:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3822:48:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3832:32:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3857:5:1"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "3850:6:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3850:13:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "3843:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3843:21:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "3832:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3804:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "3814:7:1",
														"type": ""
													}
												],
												"src": "3780:90:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3916:76:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3970:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3979:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3982:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3972:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3972:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3972:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3939:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "3961:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nodeType": "YulIdentifier",
																					"src": "3946:14:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3946:21:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "3936:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3936:32:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "3929:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3929:40:1"
															},
															"nodeType": "YulIf",
															"src": "3926:60:1"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3909:5:1",
														"type": ""
													}
												],
												"src": "3876:116:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4047:84:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4057:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "4079:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "4066:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4066:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "4057:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "4119:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nodeType": "YulIdentifier",
																	"src": "4095:23:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4095:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4095:30:1"
														}
													]
												},
												"name": "abi_decode_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "4025:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "4033:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4041:5:1",
														"type": ""
													}
												],
												"src": "3998:133:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4248:530:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4294:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "4296:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4296:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4296:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4269:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4278:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4265:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4265:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4290:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "4261:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4261:32:1"
															},
															"nodeType": "YulIf",
															"src": "4258:119:1"
														},
														{
															"nodeType": "YulBlock",
															"src": "4387:117:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4402:15:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4416:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "4406:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4431:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4466:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4477:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4462:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4462:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4486:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "4441:20:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4441:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "4431:6:1"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "4514:132:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4529:16:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4543:2:1",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "4533:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4559:77:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4608:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4619:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4604:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4604:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4628:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_contract$_IERC20_$286",
																			"nodeType": "YulIdentifier",
																			"src": "4569:34:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4569:67:1"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "4559:6:1"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "4656:115:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4671:16:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4685:2:1",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "4675:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4701:60:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4733:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4744:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4729:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4729:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4753:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "4711:17:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4711:50:1"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "4701:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_contract$_IERC20_$286t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4202:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "4213:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4225:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "4233:6:1",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "4241:6:1",
														"type": ""
													}
												],
												"src": "4137:641:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4850:51:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4860:35:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "4889:5:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "4871:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4871:24:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "4860:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_contract$_IMigratorChef_$927",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4832:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "4842:7:1",
														"type": ""
													}
												],
												"src": "4784:117:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4971:100:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5049:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5058:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5061:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5051:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5051:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5051:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "4994:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "5040:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_contract$_IMigratorChef_$927",
																					"nodeType": "YulIdentifier",
																					"src": "5001:38:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5001:45:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "4991:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4991:56:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "4984:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4984:64:1"
															},
															"nodeType": "YulIf",
															"src": "4981:84:1"
														}
													]
												},
												"name": "validator_revert_t_contract$_IMigratorChef_$927",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4964:5:1",
														"type": ""
													}
												],
												"src": "4907:164:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5150:108:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5160:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "5182:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "5169:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5169:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "5160:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "5246:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_contract$_IMigratorChef_$927",
																	"nodeType": "YulIdentifier",
																	"src": "5198:47:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5198:54:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5198:54:1"
														}
													]
												},
												"name": "abi_decode_t_contract$_IMigratorChef_$927",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "5128:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "5136:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5144:5:1",
														"type": ""
													}
												],
												"src": "5077:181:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5351:284:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5397:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "5399:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5399:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5399:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5372:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5381:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5368:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5368:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5393:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "5364:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5364:32:1"
															},
															"nodeType": "YulIf",
															"src": "5361:119:1"
														},
														{
															"nodeType": "YulBlock",
															"src": "5490:138:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "5505:15:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5519:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "5509:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "5534:84:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "5590:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "5601:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5586:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5586:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5610:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_contract$_IMigratorChef_$927",
																			"nodeType": "YulIdentifier",
																			"src": "5544:41:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5544:74:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "5534:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_contract$_IMigratorChef_$927",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5321:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "5332:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5344:6:1",
														"type": ""
													}
												],
												"src": "5264:371:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5701:51:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5711:35:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "5740:5:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "5722:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5722:24:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "5711:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_contract$_IERC721_$933",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5683:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "5693:7:1",
														"type": ""
													}
												],
												"src": "5641:111:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5816:94:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5888:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5897:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5900:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5890:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5890:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5890:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "5839:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "5879:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_contract$_IERC721_$933",
																					"nodeType": "YulIdentifier",
																					"src": "5846:32:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5846:39:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "5836:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5836:50:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "5829:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5829:58:1"
															},
															"nodeType": "YulIf",
															"src": "5826:78:1"
														}
													]
												},
												"name": "validator_revert_t_contract$_IERC721_$933",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5809:5:1",
														"type": ""
													}
												],
												"src": "5758:152:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5983:102:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5993:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "6015:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "6002:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6002:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "5993:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "6073:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_contract$_IERC721_$933",
																	"nodeType": "YulIdentifier",
																	"src": "6031:41:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6031:48:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6031:48:1"
														}
													]
												},
												"name": "abi_decode_t_contract$_IERC721_$933",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "5961:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "5969:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5977:5:1",
														"type": ""
													}
												],
												"src": "5916:169:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6189:406:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6235:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "6237:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6237:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6237:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6210:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6219:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "6206:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6206:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6231:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "6202:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6202:32:1"
															},
															"nodeType": "YulIf",
															"src": "6199:119:1"
														},
														{
															"nodeType": "YulBlock",
															"src": "6328:132:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "6343:15:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6357:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "6347:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "6372:78:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "6422:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "6433:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "6418:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6418:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6442:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_contract$_IERC721_$933",
																			"nodeType": "YulIdentifier",
																			"src": "6382:35:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6382:68:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "6372:6:1"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "6470:118:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "6485:16:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6499:2:1",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "6489:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "6515:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "6550:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "6561:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "6546:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6546:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6570:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "6525:20:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6525:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "6515:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_contract$_IERC721_$933t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6151:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "6162:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6174:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "6182:6:1",
														"type": ""
													}
												],
												"src": "6091:504:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6676:66:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6686:50:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "6730:5:1"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "6699:30:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6699:37:1"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "6686:9:1"
																}
															]
														}
													]
												},
												"name": "convert_t_contract$_IERC721_$933_to_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6656:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "6666:9:1",
														"type": ""
													}
												],
												"src": "6601:141:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6828:81:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6845:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "6896:5:1"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_contract$_IERC721_$933_to_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "6850:45:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6850:52:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6838:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6838:65:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6838:65:1"
														}
													]
												},
												"name": "abi_encode_t_contract$_IERC721_$933_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6816:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "6823:3:1",
														"type": ""
													}
												],
												"src": "6748:161:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7056:221:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7066:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7078:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7089:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7074:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7074:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7066:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "7161:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7174:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7185:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7170:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7170:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_contract$_IERC721_$933_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7102:58:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7102:86:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7102:86:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "7242:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7255:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7266:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7251:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7251:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7198:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7198:72:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7198:72:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IERC721_$933_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7020:9:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "7032:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "7040:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7051:4:1",
														"type": ""
													}
												],
												"src": "6915:362:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7380:516:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7426:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "7428:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7428:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7428:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "7401:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7410:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "7397:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7397:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7422:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "7393:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7393:32:1"
															},
															"nodeType": "YulIf",
															"src": "7390:119:1"
														},
														{
															"nodeType": "YulBlock",
															"src": "7519:117:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "7534:15:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7548:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "7538:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "7563:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "7598:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "7609:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "7594:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7594:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "7618:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "7573:20:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7573:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "7563:6:1"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "7646:118:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "7661:16:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7675:2:1",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "7665:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "7691:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "7726:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "7737:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "7722:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7722:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "7746:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "7701:20:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7701:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "7691:6:1"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "7774:115:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "7789:16:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7803:2:1",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "7793:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "7819:60:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "7851:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "7862:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "7847:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7847:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "7871:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "7829:17:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7829:50:1"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "7819:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_uint256t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7334:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "7345:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "7357:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "7365:6:1",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "7373:6:1",
														"type": ""
													}
												],
												"src": "7283:613:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7983:66:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7993:50:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "8037:5:1"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "8006:30:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8006:37:1"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "7993:9:1"
																}
															]
														}
													]
												},
												"name": "convert_t_contract$_IMigratorChef_$927_to_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "7963:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "7973:9:1",
														"type": ""
													}
												],
												"src": "7902:147:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8141:87:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8158:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "8215:5:1"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_contract$_IMigratorChef_$927_to_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "8163:51:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8163:58:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8151:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8151:71:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8151:71:1"
														}
													]
												},
												"name": "abi_encode_t_contract$_IMigratorChef_$927_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "8129:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "8136:3:1",
														"type": ""
													}
												],
												"src": "8055:173:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8353:145:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8363:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8375:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8386:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8371:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8371:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8363:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "8464:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8477:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8488:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8473:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8473:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_contract$_IMigratorChef_$927_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8399:64:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8399:92:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8399:92:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IMigratorChef_$927__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8325:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "8337:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8348:4:1",
														"type": ""
													}
												],
												"src": "8234:264:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8547:79:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8604:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8613:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8616:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "8606:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8606:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8606:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "8570:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "8595:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "8577:17:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "8577:24:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "8567:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8567:35:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "8560:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8560:43:1"
															},
															"nodeType": "YulIf",
															"src": "8557:63:1"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "8540:5:1",
														"type": ""
													}
												],
												"src": "8504:122:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8684:87:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8694:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "8716:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "8703:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8703:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "8694:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "8759:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "8732:26:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8732:33:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8732:33:1"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "8662:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "8670:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "8678:5:1",
														"type": ""
													}
												],
												"src": "8632:139:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8843:263:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8889:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "8891:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8891:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8891:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "8864:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8873:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "8860:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8860:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8885:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "8856:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8856:32:1"
															},
															"nodeType": "YulIf",
															"src": "8853:119:1"
														},
														{
															"nodeType": "YulBlock",
															"src": "8982:117:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "8997:15:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9011:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "9001:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "9026:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "9061:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "9072:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "9057:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9057:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "9081:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "9036:20:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9036:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "9026:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8813:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "8824:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "8836:6:1",
														"type": ""
													}
												],
												"src": "8777:329:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9177:53:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9194:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "9217:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "9199:17:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9199:24:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9187:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9187:37:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9187:37:1"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "9165:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "9172:3:1",
														"type": ""
													}
												],
												"src": "9112:118:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9334:124:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9344:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9356:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9367:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9352:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9352:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9344:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "9424:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9437:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9448:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9433:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9433:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "9380:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9380:71:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9380:71:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9306:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "9318:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9329:4:1",
														"type": ""
													}
												],
												"src": "9236:222:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9547:391:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "9593:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "9595:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9595:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9595:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "9568:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9577:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "9564:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9564:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9589:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "9560:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9560:32:1"
															},
															"nodeType": "YulIf",
															"src": "9557:119:1"
														},
														{
															"nodeType": "YulBlock",
															"src": "9686:117:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "9701:15:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9715:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "9705:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "9730:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "9765:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "9776:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "9761:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9761:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "9785:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "9740:20:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9740:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "9730:6:1"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "9813:118:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "9828:16:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9842:2:1",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "9832:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "9858:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "9893:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "9904:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "9889:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9889:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "9913:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "9868:20:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9868:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "9858:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9509:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "9520:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "9532:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "9540:6:1",
														"type": ""
													}
												],
												"src": "9464:474:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10070:206:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10080:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10092:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10103:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10088:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10088:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10080:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "10160:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10173:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10184:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10169:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10169:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "10116:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10116:71:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10116:71:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "10241:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10254:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10265:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10250:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10250:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "10197:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10197:72:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10197:72:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10034:9:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "10046:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "10054:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "10065:4:1",
														"type": ""
													}
												],
												"src": "9944:332:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10394:138:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10404:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10416:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10427:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10412:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10412:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10404:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "10498:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10511:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10522:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10507:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10507:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_contract$_IERC20_$286_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "10440:57:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10440:85:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10440:85:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IERC20_$286__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10366:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "10378:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "10389:4:1",
														"type": ""
													}
												],
												"src": "10282:250:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10566:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10583:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10586:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10576:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10576:88:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10576:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10680:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10683:4:1",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10673:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10673:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10673:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10704:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10707:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "10697:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10697:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10697:15:1"
														}
													]
												},
												"name": "panic_error_0x32",
												"nodeType": "YulFunctionDefinition",
												"src": "10538:180:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10820:73:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10837:3:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "10842:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10830:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10830:19:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10830:19:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10858:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10877:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10882:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10873:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10873:14:1"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "10858:11:1"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "10792:3:1",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "10797:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "10808:11:1",
														"type": ""
													}
												],
												"src": "10724:169:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11005:62:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "11027:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11035:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11023:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11023:14:1"
																	},
																	{
																		"hexValue": "77697468647261773a206e6f7420676f6f64",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "11039:20:1",
																		"type": "",
																		"value": "withdraw: not good"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11016:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11016:44:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11016:44:1"
														}
													]
												},
												"name": "store_literal_in_memory_d09049ba12a4b0d32c8152176161276998fb1529c6184e3c4227161fe99644df",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "10997:6:1",
														"type": ""
													}
												],
												"src": "10899:168:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11219:220:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11229:74:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11295:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11300:2:1",
																		"type": "",
																		"value": "18"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "11236:58:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11236:67:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "11229:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11401:3:1"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_d09049ba12a4b0d32c8152176161276998fb1529c6184e3c4227161fe99644df",
																	"nodeType": "YulIdentifier",
																	"src": "11312:88:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11312:93:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11312:93:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11414:19:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11425:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11430:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11421:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11421:12:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "11414:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_d09049ba12a4b0d32c8152176161276998fb1529c6184e3c4227161fe99644df_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "11207:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "11215:3:1",
														"type": ""
													}
												],
												"src": "11073:366:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11616:248:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11626:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11638:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11649:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11634:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11634:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11626:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11673:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11684:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11669:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11669:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "11692:4:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11698:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "11688:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11688:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11662:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11662:47:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11662:47:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11718:139:1",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "11852:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_d09049ba12a4b0d32c8152176161276998fb1529c6184e3c4227161fe99644df_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "11726:124:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11726:131:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11718:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_d09049ba12a4b0d32c8152176161276998fb1529c6184e3c4227161fe99644df__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11596:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "11611:4:1",
														"type": ""
													}
												],
												"src": "11445:419:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11933:80:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11943:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "11958:6:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "11952:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11952:13:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "11943:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "12001:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "11974:26:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11974:33:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11974:33:1"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "11911:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "11919:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "11927:5:1",
														"type": ""
													}
												],
												"src": "11870:143:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12096:274:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "12142:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "12144:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "12144:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "12144:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "12117:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12126:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "12113:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12113:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12138:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "12109:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12109:32:1"
															},
															"nodeType": "YulIf",
															"src": "12106:119:1"
														},
														{
															"nodeType": "YulBlock",
															"src": "12235:128:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "12250:15:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12264:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "12254:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "12279:74:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "12325:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "12336:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "12321:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "12321:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "12345:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "12289:31:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12289:64:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "12279:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "12066:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "12077:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "12089:6:1",
														"type": ""
													}
												],
												"src": "12019:351:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12482:63:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "12504:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12512:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12500:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12500:14:1"
																	},
																	{
																		"hexValue": "506f776572206973206e6f7420656e6f756768",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12516:21:1",
																		"type": "",
																		"value": "Power is not enough"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12493:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12493:45:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12493:45:1"
														}
													]
												},
												"name": "store_literal_in_memory_2802e724701dc68a9a3726c72d44a6e6756fa09a3efd95f836f437d22954c406",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "12474:6:1",
														"type": ""
													}
												],
												"src": "12376:169:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12697:220:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12707:74:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "12773:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12778:2:1",
																		"type": "",
																		"value": "19"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "12714:58:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12714:67:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "12707:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "12879:3:1"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_2802e724701dc68a9a3726c72d44a6e6756fa09a3efd95f836f437d22954c406",
																	"nodeType": "YulIdentifier",
																	"src": "12790:88:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12790:93:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12790:93:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12892:19:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "12903:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12908:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12899:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12899:12:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "12892:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_2802e724701dc68a9a3726c72d44a6e6756fa09a3efd95f836f437d22954c406_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "12685:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "12693:3:1",
														"type": ""
													}
												],
												"src": "12551:366:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13094:248:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13104:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13116:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13127:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13112:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13112:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13104:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13151:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13162:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13147:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13147:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "13170:4:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13176:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "13166:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13166:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13140:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13140:47:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13140:47:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13196:139:1",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "13330:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_2802e724701dc68a9a3726c72d44a6e6756fa09a3efd95f836f437d22954c406_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "13204:124:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13204:131:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13196:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_2802e724701dc68a9a3726c72d44a6e6756fa09a3efd95f836f437d22954c406__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "13074:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "13089:4:1",
														"type": ""
													}
												],
												"src": "12923:419:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13454:76:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "13476:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13484:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13472:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13472:14:1"
																	},
																	{
																		"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "13488:34:1",
																		"type": "",
																		"value": "Ownable: caller is not the owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13465:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13465:58:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13465:58:1"
														}
													]
												},
												"name": "store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "13446:6:1",
														"type": ""
													}
												],
												"src": "13348:182:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13682:220:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13692:74:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "13758:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13763:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "13699:58:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13699:67:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "13692:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "13864:3:1"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																	"nodeType": "YulIdentifier",
																	"src": "13775:88:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13775:93:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13775:93:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13877:19:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "13888:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13893:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13884:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13884:12:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "13877:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "13670:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "13678:3:1",
														"type": ""
													}
												],
												"src": "13536:366:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14079:248:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "14089:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "14101:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14112:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14097:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14097:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "14089:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14136:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14147:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14132:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14132:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "14155:4:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14161:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "14151:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14151:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14125:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14125:47:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14125:47:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14181:139:1",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "14315:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "14189:124:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14189:131:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "14181:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "14059:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "14074:4:1",
														"type": ""
													}
												],
												"src": "13908:419:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14439:71:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "14461:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14469:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14457:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14457:14:1"
																	},
																	{
																		"hexValue": "776974686472617720506f77657220627920756e7374616b696e67",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "14473:29:1",
																		"type": "",
																		"value": "withdraw Power by unstaking"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14450:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14450:53:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14450:53:1"
														}
													]
												},
												"name": "store_literal_in_memory_2af9ac489fdfd3845a7a7fd4a89fb65b5b2a06bf8679b70fd9b405dd9a5bbd5f",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "14431:6:1",
														"type": ""
													}
												],
												"src": "14333:177:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14662:220:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "14672:74:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "14738:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14743:2:1",
																		"type": "",
																		"value": "27"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "14679:58:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14679:67:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "14672:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "14844:3:1"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_2af9ac489fdfd3845a7a7fd4a89fb65b5b2a06bf8679b70fd9b405dd9a5bbd5f",
																	"nodeType": "YulIdentifier",
																	"src": "14755:88:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14755:93:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14755:93:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14857:19:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "14868:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14873:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14864:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14864:12:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "14857:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_2af9ac489fdfd3845a7a7fd4a89fb65b5b2a06bf8679b70fd9b405dd9a5bbd5f_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "14650:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "14658:3:1",
														"type": ""
													}
												],
												"src": "14516:366:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15059:248:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "15069:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "15081:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15092:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "15077:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "15077:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "15069:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15116:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15127:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15112:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15112:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "15135:4:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15141:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "15131:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15131:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15105:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "15105:47:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15105:47:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "15161:139:1",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "15295:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_2af9ac489fdfd3845a7a7fd4a89fb65b5b2a06bf8679b70fd9b405dd9a5bbd5f_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "15169:124:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "15169:131:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "15161:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_2af9ac489fdfd3845a7a7fd4a89fb65b5b2a06bf8679b70fd9b405dd9a5bbd5f__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "15039:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "15054:4:1",
														"type": ""
													}
												],
												"src": "14888:419:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15419:64:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "15441:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15449:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15437:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15437:14:1"
																	},
																	{
																		"hexValue": "6d6967726174653a206e6f206d69677261746f72",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "15453:22:1",
																		"type": "",
																		"value": "migrate: no migrator"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15430:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "15430:46:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15430:46:1"
														}
													]
												},
												"name": "store_literal_in_memory_f2b78d14701a493fa40394b414840abc22dde75251115d332366fec4d94c3445",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "15411:6:1",
														"type": ""
													}
												],
												"src": "15313:170:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15635:220:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "15645:74:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "15711:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15716:2:1",
																		"type": "",
																		"value": "20"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "15652:58:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "15652:67:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "15645:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "15817:3:1"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_f2b78d14701a493fa40394b414840abc22dde75251115d332366fec4d94c3445",
																	"nodeType": "YulIdentifier",
																	"src": "15728:88:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "15728:93:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15728:93:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "15830:19:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "15841:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15846:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "15837:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "15837:12:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "15830:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_f2b78d14701a493fa40394b414840abc22dde75251115d332366fec4d94c3445_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "15623:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "15631:3:1",
														"type": ""
													}
												],
												"src": "15489:366:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16032:248:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "16042:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "16054:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16065:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "16050:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "16050:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "16042:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16089:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16100:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16085:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16085:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "16108:4:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16114:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "16104:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16104:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16078:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "16078:47:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16078:47:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "16134:139:1",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "16268:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_f2b78d14701a493fa40394b414840abc22dde75251115d332366fec4d94c3445_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "16142:124:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "16142:131:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "16134:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_f2b78d14701a493fa40394b414840abc22dde75251115d332366fec4d94c3445__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "16012:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "16027:4:1",
														"type": ""
													}
												],
												"src": "15861:419:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16363:94:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "16373:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "16388:6:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "16382:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "16382:13:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "16373:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "16445:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_contract$_IERC20_$286",
																	"nodeType": "YulIdentifier",
																	"src": "16404:40:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "16404:47:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16404:47:1"
														}
													]
												},
												"name": "abi_decode_t_contract$_IERC20_$286_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "16341:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "16349:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "16357:5:1",
														"type": ""
													}
												],
												"src": "16286:171:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16554:288:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "16600:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "16602:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "16602:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "16602:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "16575:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16584:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "16571:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16571:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16596:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "16567:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "16567:32:1"
															},
															"nodeType": "YulIf",
															"src": "16564:119:1"
														},
														{
															"nodeType": "YulBlock",
															"src": "16693:142:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "16708:15:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16722:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "16712:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "16737:88:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "16797:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "16808:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "16793:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "16793:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "16817:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_contract$_IERC20_$286_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "16747:45:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16747:78:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "16737:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_contract$_IERC20_$286_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "16524:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "16535:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "16547:6:1",
														"type": ""
													}
												],
												"src": "16463:379:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16954:56:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "16976:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16984:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16972:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16972:14:1"
																	},
																	{
																		"hexValue": "6d6967726174653a20626164",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "16988:14:1",
																		"type": "",
																		"value": "migrate: bad"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16965:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "16965:38:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16965:38:1"
														}
													]
												},
												"name": "store_literal_in_memory_ed1ac0ecd515e3d8f412b4c0ca319587a2238640d669089c98335a92c60abee8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "16946:6:1",
														"type": ""
													}
												],
												"src": "16848:162:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17162:220:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "17172:74:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "17238:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17243:2:1",
																		"type": "",
																		"value": "12"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "17179:58:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "17179:67:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "17172:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "17344:3:1"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_ed1ac0ecd515e3d8f412b4c0ca319587a2238640d669089c98335a92c60abee8",
																	"nodeType": "YulIdentifier",
																	"src": "17255:88:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "17255:93:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17255:93:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "17357:19:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "17368:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17373:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "17364:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "17364:12:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "17357:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_ed1ac0ecd515e3d8f412b4c0ca319587a2238640d669089c98335a92c60abee8_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "17150:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "17158:3:1",
														"type": ""
													}
												],
												"src": "17016:366:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17559:248:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "17569:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "17581:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17592:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "17577:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "17577:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "17569:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "17616:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17627:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17612:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17612:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "17635:4:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "17641:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "17631:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17631:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17605:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "17605:47:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17605:47:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "17661:139:1",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "17795:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_ed1ac0ecd515e3d8f412b4c0ca319587a2238640d669089c98335a92c60abee8_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "17669:124:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "17669:131:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "17661:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ed1ac0ecd515e3d8f412b4c0ca319587a2238640d669089c98335a92c60abee8__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "17539:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "17554:4:1",
														"type": ""
													}
												],
												"src": "17388:419:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17841:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17858:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17861:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17851:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "17851:88:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17851:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17955:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17958:4:1",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17948:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "17948:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17948:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17979:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17982:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "17972:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "17972:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17972:15:1"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "17813:180:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18042:190:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "18052:33:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "18079:5:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "18061:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "18061:24:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "18052:5:1"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "18175:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "18177:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "18177:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "18177:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "18100:5:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18107:66:1",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "18097:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "18097:77:1"
															},
															"nodeType": "YulIf",
															"src": "18094:103:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "18206:20:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "18217:5:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18224:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "18213:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "18213:13:1"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "18206:3:1"
																}
															]
														}
													]
												},
												"name": "increment_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "18028:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "18038:3:1",
														"type": ""
													}
												],
												"src": "17999:233:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18344:68:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "18366:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "18374:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "18362:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18362:14:1"
																	},
																	{
																		"hexValue": "6465706f73697420506f776572206279207374616b696e67",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "18378:26:1",
																		"type": "",
																		"value": "deposit Power by staking"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "18355:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "18355:50:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18355:50:1"
														}
													]
												},
												"name": "store_literal_in_memory_8997113db37475c3d966d2b1151c847dca6ccea70a4d4a2b46d60e92c3a8e108",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "18336:6:1",
														"type": ""
													}
												],
												"src": "18238:174:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18564:220:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "18574:74:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "18640:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18645:2:1",
																		"type": "",
																		"value": "24"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "18581:58:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "18581:67:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "18574:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "18746:3:1"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_8997113db37475c3d966d2b1151c847dca6ccea70a4d4a2b46d60e92c3a8e108",
																	"nodeType": "YulIdentifier",
																	"src": "18657:88:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "18657:93:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18657:93:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "18759:19:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "18770:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18775:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "18766:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "18766:12:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "18759:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_8997113db37475c3d966d2b1151c847dca6ccea70a4d4a2b46d60e92c3a8e108_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "18552:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "18560:3:1",
														"type": ""
													}
												],
												"src": "18418:366:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18961:248:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "18971:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "18983:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18994:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "18979:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "18979:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "18971:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "19018:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "19029:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "19014:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19014:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "19037:4:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "19043:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "19033:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19033:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "19007:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "19007:47:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19007:47:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "19063:139:1",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "19197:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_8997113db37475c3d966d2b1151c847dca6ccea70a4d4a2b46d60e92c3a8e108_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "19071:124:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "19071:131:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "19063:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_8997113db37475c3d966d2b1151c847dca6ccea70a4d4a2b46d60e92c3a8e108__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "18941:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "18956:4:1",
														"type": ""
													}
												],
												"src": "18790:419:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "19321:119:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "19343:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "19351:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "19339:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19339:14:1"
																	},
																	{
																		"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "19355:34:1",
																		"type": "",
																		"value": "Ownable: new owner is the zero a"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "19332:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "19332:58:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19332:58:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "19411:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "19419:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "19407:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19407:15:1"
																	},
																	{
																		"hexValue": "646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "19424:8:1",
																		"type": "",
																		"value": "ddress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "19400:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "19400:33:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19400:33:1"
														}
													]
												},
												"name": "store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "19313:6:1",
														"type": ""
													}
												],
												"src": "19215:225:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "19592:220:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "19602:74:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "19668:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19673:2:1",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "19609:58:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "19609:67:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "19602:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "19774:3:1"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																	"nodeType": "YulIdentifier",
																	"src": "19685:88:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "19685:93:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19685:93:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "19787:19:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "19798:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19803:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "19794:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "19794:12:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "19787:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "19580:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "19588:3:1",
														"type": ""
													}
												],
												"src": "19446:366:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "19989:248:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "19999:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "20011:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20022:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "20007:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "20007:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "19999:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "20046:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "20057:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "20042:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20042:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "20065:4:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "20071:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "20061:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20061:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "20035:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "20035:47:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "20035:47:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "20091:139:1",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "20225:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "20099:124:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "20099:131:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "20091:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "19969:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "19984:4:1",
														"type": ""
													}
												],
												"src": "19818:419:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "20291:300:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "20301:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "20324:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "20306:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "20306:20:1"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "20301:1:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "20335:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "20358:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "20340:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "20340:20:1"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "20335:1:1"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "20533:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "20535:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "20535:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "20535:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "20445:1:1"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "20438:6:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "20438:9:1"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "20431:6:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20431:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "20453:1:1"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "20460:66:1",
																						"type": "",
																						"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																					},
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "20528:1:1"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nodeType": "YulIdentifier",
																					"src": "20456:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "20456:74:1"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "20450:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20450:81:1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "20427:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "20427:105:1"
															},
															"nodeType": "YulIf",
															"src": "20424:131:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "20565:20:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "20580:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "20583:1:1"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "20576:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "20576:9:1"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nodeType": "YulIdentifier",
																	"src": "20565:7:1"
																}
															]
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "20274:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "20277:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nodeType": "YulTypedName",
														"src": "20283:7:1",
														"type": ""
													}
												],
												"src": "20243:348:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "20625:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20642:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20645:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "20635:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "20635:88:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "20635:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20739:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20742:4:1",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "20732:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "20732:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "20732:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20763:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20766:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "20756:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "20756:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "20756:15:1"
														}
													]
												},
												"name": "panic_error_0x12",
												"nodeType": "YulFunctionDefinition",
												"src": "20597:180:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "20825:143:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "20835:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "20858:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "20840:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "20840:20:1"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "20835:1:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "20869:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "20892:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "20874:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "20874:20:1"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "20869:1:1"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "20916:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nodeType": "YulIdentifier",
																				"src": "20918:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "20918:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "20918:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "20913:1:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "20906:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "20906:9:1"
															},
															"nodeType": "YulIf",
															"src": "20903:35:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "20948:14:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "20957:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "20960:1:1"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "20953:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "20953:9:1"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "20948:1:1"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "20814:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "20817:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "20823:1:1",
														"type": ""
													}
												],
												"src": "20783:185:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "21080:114:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "21102:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "21110:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "21098:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "21098:14:1"
																	},
																	{
																		"hexValue": "536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "21114:34:1",
																		"type": "",
																		"value": "SafeMath: multiplication overflo"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "21091:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "21091:58:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "21091:58:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "21170:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "21178:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "21166:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "21166:15:1"
																	},
																	{
																		"hexValue": "77",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "21183:3:1",
																		"type": "",
																		"value": "w"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "21159:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "21159:28:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "21159:28:1"
														}
													]
												},
												"name": "store_literal_in_memory_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "21072:6:1",
														"type": ""
													}
												],
												"src": "20974:220:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "21346:220:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "21356:74:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "21422:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21427:2:1",
																		"type": "",
																		"value": "33"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "21363:58:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "21363:67:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "21356:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "21528:3:1"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3",
																	"nodeType": "YulIdentifier",
																	"src": "21439:88:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "21439:93:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "21439:93:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "21541:19:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "21552:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21557:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "21548:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "21548:12:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "21541:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "21334:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "21342:3:1",
														"type": ""
													}
												],
												"src": "21200:366:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "21743:248:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "21753:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "21765:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21776:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "21761:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "21761:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "21753:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "21800:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "21811:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "21796:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "21796:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "21819:4:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "21825:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "21815:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "21815:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "21789:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "21789:47:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "21789:47:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "21845:139:1",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "21979:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "21853:124:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "21853:131:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "21845:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "21723:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "21738:4:1",
														"type": ""
													}
												],
												"src": "21572:419:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "22041:261:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "22051:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "22074:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "22056:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "22056:20:1"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "22051:1:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "22085:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "22108:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "22090:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "22090:20:1"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "22085:1:1"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "22248:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "22250:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "22250:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "22250:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "22169:1:1"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "22176:66:1",
																				"type": "",
																				"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																			},
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "22244:1:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "22172:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "22172:74:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "22166:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "22166:81:1"
															},
															"nodeType": "YulIf",
															"src": "22163:107:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "22280:16:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "22291:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "22294:1:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "22287:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "22287:9:1"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "22280:3:1"
																}
															]
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "22028:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "22031:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "22037:3:1",
														"type": ""
													}
												],
												"src": "21997:305:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "22414:71:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "22436:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "22444:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "22432:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "22432:14:1"
																	},
																	{
																		"hexValue": "536166654d6174683a206164646974696f6e206f766572666c6f77",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "22448:29:1",
																		"type": "",
																		"value": "SafeMath: addition overflow"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "22425:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "22425:53:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "22425:53:1"
														}
													]
												},
												"name": "store_literal_in_memory_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "22406:6:1",
														"type": ""
													}
												],
												"src": "22308:177:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "22637:220:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "22647:74:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "22713:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "22718:2:1",
																		"type": "",
																		"value": "27"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "22654:58:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "22654:67:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "22647:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "22819:3:1"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a",
																	"nodeType": "YulIdentifier",
																	"src": "22730:88:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "22730:93:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "22730:93:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "22832:19:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "22843:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "22848:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "22839:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "22839:12:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "22832:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "22625:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "22633:3:1",
														"type": ""
													}
												],
												"src": "22491:366:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "23034:248:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "23044:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "23056:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "23067:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "23052:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "23052:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "23044:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "23091:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "23102:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "23087:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "23087:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "23110:4:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "23116:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "23106:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "23106:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "23080:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "23080:47:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "23080:47:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "23136:139:1",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "23270:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "23144:124:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "23144:131:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "23136:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "23014:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "23029:4:1",
														"type": ""
													}
												],
												"src": "22863:419:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "23414:206:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "23424:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "23436:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "23447:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "23432:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "23432:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "23424:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "23504:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "23517:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "23528:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "23513:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "23513:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "23460:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "23460:71:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "23460:71:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "23585:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "23598:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "23609:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "23594:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "23594:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "23541:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "23541:72:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "23541:72:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "23378:9:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "23390:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "23398:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "23409:4:1",
														"type": ""
													}
												],
												"src": "23288:332:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "23780:288:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "23790:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "23802:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "23813:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "23798:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "23798:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "23790:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "23870:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "23883:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "23894:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "23879:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "23879:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "23826:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "23826:71:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "23826:71:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "23951:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "23964:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "23975:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "23960:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "23960:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "23907:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "23907:72:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "23907:72:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "24033:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "24046:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "24057:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "24042:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "24042:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "23989:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "23989:72:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "23989:72:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "23736:9:1",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "23748:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "23756:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "23764:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "23775:4:1",
														"type": ""
													}
												],
												"src": "23626:442:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "24200:206:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "24210:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "24222:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "24233:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "24218:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "24218:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "24210:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "24290:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "24303:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "24314:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "24299:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "24299:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "24246:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "24246:71:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "24246:71:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "24371:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "24384:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "24395:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "24380:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "24380:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "24327:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "24327:72:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "24327:72:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "24164:9:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "24176:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "24184:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "24195:4:1",
														"type": ""
													}
												],
												"src": "24074:332:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "24518:135:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "24540:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "24548:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "24536:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "24536:14:1"
																	},
																	{
																		"hexValue": "5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "24552:34:1",
																		"type": "",
																		"value": "SafeERC20: approve from non-zero"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "24529:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "24529:58:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "24529:58:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "24608:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "24616:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "24604:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "24604:15:1"
																	},
																	{
																		"hexValue": "20746f206e6f6e2d7a65726f20616c6c6f77616e6365",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "24621:24:1",
																		"type": "",
																		"value": " to non-zero allowance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "24597:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "24597:49:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "24597:49:1"
														}
													]
												},
												"name": "store_literal_in_memory_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "24510:6:1",
														"type": ""
													}
												],
												"src": "24412:241:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "24805:220:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "24815:74:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "24881:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "24886:2:1",
																		"type": "",
																		"value": "54"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "24822:58:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "24822:67:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "24815:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "24987:3:1"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25",
																	"nodeType": "YulIdentifier",
																	"src": "24898:88:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "24898:93:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "24898:93:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "25000:19:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "25011:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "25016:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "25007:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "25007:12:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "25000:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "24793:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "24801:3:1",
														"type": ""
													}
												],
												"src": "24659:366:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "25202:248:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "25212:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "25224:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "25235:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "25220:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "25220:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "25212:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "25259:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "25270:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "25255:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "25255:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "25278:4:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "25284:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "25274:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "25274:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "25248:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "25248:47:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "25248:47:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "25304:139:1",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "25438:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "25312:124:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "25312:131:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "25304:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "25182:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "25197:4:1",
														"type": ""
													}
												],
												"src": "25031:419:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "25515:40:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "25526:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "25542:5:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "25536:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "25536:12:1"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "25526:6:1"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "25498:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "25508:6:1",
														"type": ""
													}
												],
												"src": "25456:99:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "25610:258:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "25620:10:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "25629:1:1",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "25624:1:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "25689:63:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "25714:3:1"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "25719:1:1"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "25710:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "25710:11:1"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nodeType": "YulIdentifier",
																									"src": "25733:3:1"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "25738:1:1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "25729:3:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "25729:11:1"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "25723:5:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "25723:18:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "25703:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "25703:39:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "25703:39:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "25650:1:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "25653:6:1"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "25647:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "25647:13:1"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "25661:19:1",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "25663:15:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "25672:1:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "25675:2:1",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "25668:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "25668:10:1"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "25663:1:1"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "25643:3:1",
																"statements": []
															},
															"src": "25639:113:1"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "25786:76:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "25836:3:1"
																						},
																						{
																							"name": "length",
																							"nodeType": "YulIdentifier",
																							"src": "25841:6:1"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "25832:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "25832:16:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "25850:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "25825:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "25825:27:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "25825:27:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "25767:1:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "25770:6:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "25764:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "25764:13:1"
															},
															"nodeType": "YulIf",
															"src": "25761:101:1"
														}
													]
												},
												"name": "copy_memory_to_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "25592:3:1",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "25597:3:1",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "25602:6:1",
														"type": ""
													}
												],
												"src": "25561:307:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "25922:54:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "25932:38:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "25950:5:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "25957:2:1",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "25946:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "25946:14:1"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "25966:2:1",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "25962:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "25962:7:1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "25942:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "25942:28:1"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "25932:6:1"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "25905:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "25915:6:1",
														"type": ""
													}
												],
												"src": "25874:102:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "26074:272:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "26084:53:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "26131:5:1"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "26098:32:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "26098:39:1"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "26088:6:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "26146:78:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "26212:3:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "26217:6:1"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "26153:58:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "26153:71:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "26146:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "26259:5:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "26266:4:1",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "26255:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "26255:16:1"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "26273:3:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "26278:6:1"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "26233:21:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "26233:52:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "26233:52:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "26294:46:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "26305:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "26332:6:1"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "26310:21:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "26310:29:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "26301:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "26301:39:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "26294:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "26055:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "26062:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "26070:3:1",
														"type": ""
													}
												],
												"src": "25982:364:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "26470:195:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "26480:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "26492:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "26503:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "26488:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "26488:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "26480:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "26527:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "26538:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "26523:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "26523:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "26546:4:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "26552:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "26542:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "26542:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "26516:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "26516:47:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "26516:47:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "26572:86:1",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "26644:6:1"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "26653:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "26580:63:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "26580:78:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "26572:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "26442:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "26454:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "26465:4:1",
														"type": ""
													}
												],
												"src": "26352:313:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "26716:146:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "26726:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "26749:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "26731:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "26731:20:1"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "26726:1:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "26760:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "26783:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "26765:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "26765:20:1"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "26760:1:1"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "26807:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "26809:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "26809:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "26809:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "26801:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "26804:1:1"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "26798:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "26798:8:1"
															},
															"nodeType": "YulIf",
															"src": "26795:34:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "26839:17:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "26851:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "26854:1:1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "26847:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "26847:9:1"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "26839:4:1"
																}
															]
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "26702:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "26705:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "26711:4:1",
														"type": ""
													}
												],
												"src": "26671:191:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "26928:77:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "26938:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "26953:6:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "26947:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "26947:13:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "26938:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "26993:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nodeType": "YulIdentifier",
																	"src": "26969:23:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "26969:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "26969:30:1"
														}
													]
												},
												"name": "abi_decode_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "26906:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "26914:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "26922:5:1",
														"type": ""
													}
												],
												"src": "26868:137:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "27085:271:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "27131:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "27133:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "27133:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "27133:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "27106:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "27115:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "27102:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "27102:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "27127:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "27098:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "27098:32:1"
															},
															"nodeType": "YulIf",
															"src": "27095:119:1"
														},
														{
															"nodeType": "YulBlock",
															"src": "27224:125:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "27239:15:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "27253:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "27243:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "27268:71:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "27311:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "27322:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "27307:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "27307:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "27331:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "27278:28:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "27278:61:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "27268:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "27055:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "27066:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "27078:6:1",
														"type": ""
													}
												],
												"src": "27011:345:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "27468:123:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "27490:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "27498:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "27486:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "27486:14:1"
																	},
																	{
																		"hexValue": "5361666545524332303a204552433230206f7065726174696f6e20646964206e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "27502:34:1",
																		"type": "",
																		"value": "SafeERC20: ERC20 operation did n"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "27479:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "27479:58:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "27479:58:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "27558:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "27566:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "27554:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "27554:15:1"
																	},
																	{
																		"hexValue": "6f742073756363656564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "27571:12:1",
																		"type": "",
																		"value": "ot succeed"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "27547:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "27547:37:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "27547:37:1"
														}
													]
												},
												"name": "store_literal_in_memory_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "27460:6:1",
														"type": ""
													}
												],
												"src": "27362:229:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "27743:220:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "27753:74:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "27819:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "27824:2:1",
																		"type": "",
																		"value": "42"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "27760:58:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "27760:67:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "27753:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "27925:3:1"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd",
																	"nodeType": "YulIdentifier",
																	"src": "27836:88:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "27836:93:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "27836:93:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "27938:19:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "27949:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "27954:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "27945:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "27945:12:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "27938:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "27731:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "27739:3:1",
														"type": ""
													}
												],
												"src": "27597:366:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "28140:248:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "28150:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "28162:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "28173:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "28158:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "28158:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "28150:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "28197:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "28208:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "28193:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "28193:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "28216:4:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "28222:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "28212:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "28212:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "28186:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "28186:47:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "28186:47:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "28242:139:1",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "28376:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "28250:124:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "28250:131:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "28242:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "28120:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "28135:4:1",
														"type": ""
													}
												],
												"src": "27969:419:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "28500:119:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "28522:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "28530:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "28518:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "28518:14:1"
																	},
																	{
																		"hexValue": "416464726573733a20696e73756666696369656e742062616c616e636520666f",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "28534:34:1",
																		"type": "",
																		"value": "Address: insufficient balance fo"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "28511:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "28511:58:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "28511:58:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "28590:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "28598:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "28586:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "28586:15:1"
																	},
																	{
																		"hexValue": "722063616c6c",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "28603:8:1",
																		"type": "",
																		"value": "r call"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "28579:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "28579:33:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "28579:33:1"
														}
													]
												},
												"name": "store_literal_in_memory_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "28492:6:1",
														"type": ""
													}
												],
												"src": "28394:225:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "28771:220:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "28781:74:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "28847:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "28852:2:1",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "28788:58:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "28788:67:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "28781:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "28953:3:1"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																	"nodeType": "YulIdentifier",
																	"src": "28864:88:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "28864:93:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "28864:93:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "28966:19:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "28977:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "28982:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "28973:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "28973:12:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "28966:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "28759:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "28767:3:1",
														"type": ""
													}
												],
												"src": "28625:366:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "29168:248:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "29178:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "29190:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "29201:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "29186:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "29186:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "29178:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "29225:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "29236:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "29221:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "29221:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "29244:4:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "29250:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "29240:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "29240:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "29214:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "29214:47:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "29214:47:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "29270:139:1",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "29404:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "29278:124:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "29278:131:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "29270:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "29148:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "29163:4:1",
														"type": ""
													}
												],
												"src": "28997:419:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "29528:73:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "29550:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "29558:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "29546:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "29546:14:1"
																	},
																	{
																		"hexValue": "416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "29562:31:1",
																		"type": "",
																		"value": "Address: call to non-contract"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "29539:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "29539:55:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "29539:55:1"
														}
													]
												},
												"name": "store_literal_in_memory_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "29520:6:1",
														"type": ""
													}
												],
												"src": "29422:179:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "29753:220:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "29763:74:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "29829:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "29834:2:1",
																		"type": "",
																		"value": "29"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "29770:58:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "29770:67:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "29763:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "29935:3:1"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																	"nodeType": "YulIdentifier",
																	"src": "29846:88:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "29846:93:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "29846:93:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "29948:19:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "29959:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "29964:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "29955:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "29955:12:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "29948:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "29741:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "29749:3:1",
														"type": ""
													}
												],
												"src": "29607:366:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "30150:248:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "30160:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "30172:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "30183:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "30168:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "30168:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "30160:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "30207:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "30218:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "30203:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "30203:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "30226:4:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "30232:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "30222:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "30222:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "30196:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "30196:47:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "30196:47:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "30252:139:1",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "30386:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "30260:124:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "30260:131:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "30252:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "30130:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "30145:4:1",
														"type": ""
													}
												],
												"src": "29979:419:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "30462:40:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "30473:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "30489:5:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "30483:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "30483:12:1"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "30473:6:1"
																}
															]
														}
													]
												},
												"name": "array_length_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "30445:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "30455:6:1",
														"type": ""
													}
												],
												"src": "30404:98:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "30621:34:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "30631:18:1",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "30646:3:1"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "30631:11:1"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "30593:3:1",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "30598:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "30609:11:1",
														"type": ""
													}
												],
												"src": "30508:147:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "30769:265:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "30779:52:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "30825:5:1"
																	}
																],
																"functionName": {
																	"name": "array_length_t_bytes_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "30793:31:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "30793:38:1"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "30783:6:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "30840:95:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "30923:3:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "30928:6:1"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "30847:75:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "30847:88:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "30840:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "30970:5:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "30977:4:1",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "30966:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "30966:16:1"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "30984:3:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "30989:6:1"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "30944:21:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "30944:52:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "30944:52:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "31005:23:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "31016:3:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "31021:6:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "31012:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "31012:16:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "31005:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "30750:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "30757:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "30765:3:1",
														"type": ""
													}
												],
												"src": "30661:373:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "31174:137:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "31185:100:1",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "31272:6:1"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "31281:3:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "31192:79:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "31192:93:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "31185:3:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "31295:10:1",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "31302:3:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "31295:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "31153:3:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "31159:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "31170:3:1",
														"type": ""
													}
												],
												"src": "31040:271:1"
											}
										]
									},
									"contents": "{\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint160_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(identity(cleanup_t_uint160(value)))\n    }\n\n    function convert_t_uint160_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_IERC20_$286_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_IERC20_$286_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_IERC20_$286_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_contract$_IERC20_$286_t_uint256_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_contract$_IERC20_$286_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n    }\n\n    function abi_decode_tuple_t_uint256t_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_contract$_IERC20_$286(value) -> cleaned {\n        cleaned := cleanup_t_address(value)\n    }\n\n    function validator_revert_t_contract$_IERC20_$286(value) {\n        if iszero(eq(value, cleanup_t_contract$_IERC20_$286(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_contract$_IERC20_$286(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_contract$_IERC20_$286(value)\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_uint256t_contract$_IERC20_$286t_bool(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_contract$_IERC20_$286(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_bool(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_contract$_IMigratorChef_$927(value) -> cleaned {\n        cleaned := cleanup_t_address(value)\n    }\n\n    function validator_revert_t_contract$_IMigratorChef_$927(value) {\n        if iszero(eq(value, cleanup_t_contract$_IMigratorChef_$927(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_contract$_IMigratorChef_$927(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_contract$_IMigratorChef_$927(value)\n    }\n\n    function abi_decode_tuple_t_contract$_IMigratorChef_$927(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_contract$_IMigratorChef_$927(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_contract$_IERC721_$933(value) -> cleaned {\n        cleaned := cleanup_t_address(value)\n    }\n\n    function validator_revert_t_contract$_IERC721_$933(value) {\n        if iszero(eq(value, cleanup_t_contract$_IERC721_$933(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_contract$_IERC721_$933(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_contract$_IERC721_$933(value)\n    }\n\n    function abi_decode_tuple_t_contract$_IERC721_$933t_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_contract$_IERC721_$933(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function convert_t_contract$_IERC721_$933_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_IERC721_$933_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_IERC721_$933_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_contract$_IERC721_$933_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_contract$_IERC721_$933_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_decode_tuple_t_uint256t_uint256t_bool(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_bool(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function convert_t_contract$_IMigratorChef_$927_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_IMigratorChef_$927_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_IMigratorChef_$927_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_contract$_IMigratorChef_$927__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_IMigratorChef_$927_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_uint256t_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_contract$_IERC20_$286__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_IERC20_$286_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_d09049ba12a4b0d32c8152176161276998fb1529c6184e3c4227161fe99644df(memPtr) {\n\n        mstore(add(memPtr, 0), \"withdraw: not good\")\n\n    }\n\n    function abi_encode_t_stringliteral_d09049ba12a4b0d32c8152176161276998fb1529c6184e3c4227161fe99644df_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 18)\n        store_literal_in_memory_d09049ba12a4b0d32c8152176161276998fb1529c6184e3c4227161fe99644df(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_d09049ba12a4b0d32c8152176161276998fb1529c6184e3c4227161fe99644df__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_d09049ba12a4b0d32c8152176161276998fb1529c6184e3c4227161fe99644df_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function store_literal_in_memory_2802e724701dc68a9a3726c72d44a6e6756fa09a3efd95f836f437d22954c406(memPtr) {\n\n        mstore(add(memPtr, 0), \"Power is not enough\")\n\n    }\n\n    function abi_encode_t_stringliteral_2802e724701dc68a9a3726c72d44a6e6756fa09a3efd95f836f437d22954c406_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 19)\n        store_literal_in_memory_2802e724701dc68a9a3726c72d44a6e6756fa09a3efd95f836f437d22954c406(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_2802e724701dc68a9a3726c72d44a6e6756fa09a3efd95f836f437d22954c406__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_2802e724701dc68a9a3726c72d44a6e6756fa09a3efd95f836f437d22954c406_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: caller is not the owner\")\n\n    }\n\n    function abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 32)\n        store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_2af9ac489fdfd3845a7a7fd4a89fb65b5b2a06bf8679b70fd9b405dd9a5bbd5f(memPtr) {\n\n        mstore(add(memPtr, 0), \"withdraw Power by unstaking\")\n\n    }\n\n    function abi_encode_t_stringliteral_2af9ac489fdfd3845a7a7fd4a89fb65b5b2a06bf8679b70fd9b405dd9a5bbd5f_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 27)\n        store_literal_in_memory_2af9ac489fdfd3845a7a7fd4a89fb65b5b2a06bf8679b70fd9b405dd9a5bbd5f(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_2af9ac489fdfd3845a7a7fd4a89fb65b5b2a06bf8679b70fd9b405dd9a5bbd5f__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_2af9ac489fdfd3845a7a7fd4a89fb65b5b2a06bf8679b70fd9b405dd9a5bbd5f_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_f2b78d14701a493fa40394b414840abc22dde75251115d332366fec4d94c3445(memPtr) {\n\n        mstore(add(memPtr, 0), \"migrate: no migrator\")\n\n    }\n\n    function abi_encode_t_stringliteral_f2b78d14701a493fa40394b414840abc22dde75251115d332366fec4d94c3445_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 20)\n        store_literal_in_memory_f2b78d14701a493fa40394b414840abc22dde75251115d332366fec4d94c3445(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_f2b78d14701a493fa40394b414840abc22dde75251115d332366fec4d94c3445__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_f2b78d14701a493fa40394b414840abc22dde75251115d332366fec4d94c3445_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_decode_t_contract$_IERC20_$286_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_contract$_IERC20_$286(value)\n    }\n\n    function abi_decode_tuple_t_contract$_IERC20_$286_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_contract$_IERC20_$286_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function store_literal_in_memory_ed1ac0ecd515e3d8f412b4c0ca319587a2238640d669089c98335a92c60abee8(memPtr) {\n\n        mstore(add(memPtr, 0), \"migrate: bad\")\n\n    }\n\n    function abi_encode_t_stringliteral_ed1ac0ecd515e3d8f412b4c0ca319587a2238640d669089c98335a92c60abee8_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 12)\n        store_literal_in_memory_ed1ac0ecd515e3d8f412b4c0ca319587a2238640d669089c98335a92c60abee8(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_ed1ac0ecd515e3d8f412b4c0ca319587a2238640d669089c98335a92c60abee8__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_ed1ac0ecd515e3d8f412b4c0ca319587a2238640d669089c98335a92c60abee8_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function increment_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n    function store_literal_in_memory_8997113db37475c3d966d2b1151c847dca6ccea70a4d4a2b46d60e92c3a8e108(memPtr) {\n\n        mstore(add(memPtr, 0), \"deposit Power by staking\")\n\n    }\n\n    function abi_encode_t_stringliteral_8997113db37475c3d966d2b1151c847dca6ccea70a4d4a2b46d60e92c3a8e108_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 24)\n        store_literal_in_memory_8997113db37475c3d966d2b1151c847dca6ccea70a4d4a2b46d60e92c3a8e108(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_8997113db37475c3d966d2b1151c847dca6ccea70a4d4a2b46d60e92c3a8e108__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_8997113db37475c3d966d2b1151c847dca6ccea70a4d4a2b46d60e92c3a8e108_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: new owner is the zero a\")\n\n        mstore(add(memPtr, 32), \"ddress\")\n\n    }\n\n    function abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x != 0 and y > (maxValue / x)\n        if and(iszero(iszero(x)), gt(y, div(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, x))) { panic_error_0x11() }\n\n        product := mul(x, y)\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function store_literal_in_memory_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3(memPtr) {\n\n        mstore(add(memPtr, 0), \"SafeMath: multiplication overflo\")\n\n        mstore(add(memPtr, 32), \"w\")\n\n    }\n\n    function abi_encode_t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 33)\n        store_literal_in_memory_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x > (maxValue - y)\n        if gt(x, sub(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, y)) { panic_error_0x11() }\n\n        sum := add(x, y)\n    }\n\n    function store_literal_in_memory_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a(memPtr) {\n\n        mstore(add(memPtr, 0), \"SafeMath: addition overflow\")\n\n    }\n\n    function abi_encode_t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 27)\n        store_literal_in_memory_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function store_literal_in_memory_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25(memPtr) {\n\n        mstore(add(memPtr, 0), \"SafeERC20: approve from non-zero\")\n\n        mstore(add(memPtr, 32), \" to non-zero allowance\")\n\n    }\n\n    function abi_encode_t_stringliteral_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 54)\n        store_literal_in_memory_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function copy_memory_to_memory(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length)\n        {\n            // clear end\n            mstore(add(dst, length), 0)\n        }\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        if lt(x, y) { panic_error_0x11() }\n\n        diff := sub(x, y)\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function store_literal_in_memory_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd(memPtr) {\n\n        mstore(add(memPtr, 0), \"SafeERC20: ERC20 operation did n\")\n\n        mstore(add(memPtr, 32), \"ot succeed\")\n\n    }\n\n    function abi_encode_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 42)\n        store_literal_in_memory_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c(memPtr) {\n\n        mstore(add(memPtr, 0), \"Address: insufficient balance fo\")\n\n        mstore(add(memPtr, 32), \"r call\")\n\n    }\n\n    function abi_encode_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad(memPtr) {\n\n        mstore(add(memPtr, 0), \"Address: call to non-contract\")\n\n    }\n\n    function abi_encode_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 29)\n        store_literal_in_memory_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, length)\n    }\n\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value0) -> end {\n\n        pos := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        end := pos\n    }\n\n}\n",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106102065760003560e01c806361c1b7241161011a5780638dbb1e3a116100ad578063d209db8c1161007c578063d209db8c1461058c578063d49e77cd146105bc578063e2bbb158146105da578063f2fde38b146105f6578063f3239ab51461061257610206565b80638dbb1e3a146104f157806393f1a40b14610521578063cb3cba5514610552578063d0d41fe11461057057610206565b80637cd07e47116100e95780637cd07e47146104675780638aa28550146104855780638c51793b146104a35780638da5cb5b146104d357610206565b806361c1b72414610406578063630b5ba11461043757806364482f7914610441578063715018a61461045d57610206565b806341441d3b1161019d5780634ea2813c1161016c5780634ea2813c1461037857806351eb05a6146103945780635312ea8e146103b05780635990c569146103cc5780635ffe6146146103ea57610206565b806341441d3b14610306578063441a3e7014610322578063454b06081461033e57806348cd4cb11461035a57610206565b80631d5fbd87116101d95780631d5fbd87146102965780631eaaa045146102b257806323cf3118146102ce5780633df7aff3146102ea57610206565b8063081e3eda1461020b5780631058d281146102295780631526fe271461024557806317caf6f114610278575b600080fd5b610213610642565b604051610220919061303b565b60405180910390f35b610243600480360381019061023e9190613087565b61064f565b005b61025f600480360381019061025a9190613087565b61090e565b60405161026f9493929190613133565b60405180910390f35b61028061096e565b60405161028d919061303b565b60405180910390f35b6102b060048036038101906102ab9190613178565b610974565b005b6102cc60048036038101906102c79190613240565b610df8565b005b6102e860048036038101906102e391906132d1565b610f85565b005b61030460048036038101906102ff9190613087565b611045565b005b610320600480360381019061031b9190613087565b6110cb565b005b61033c60048036038101906103379190613178565b611353565b005b61035860048036038101906103539190613087565b611649565b005b61036261199b565b60405161036f919061303b565b60405180910390f35b610392600480360381019061038d919061333c565b6119a1565b005b6103ae60048036038101906103a99190613087565b611aca565b005b6103ca60048036038101906103c59190613087565b611c69565b005b6103d4611da2565b6040516103e1919061303b565b60405180910390f35b61040460048036038101906103ff9190613087565b611da8565b005b610420600480360381019061041b9190613087565b611e2e565b60405161042e92919061339d565b60405180910390f35b61043f611e82565b005b61045b600480360381019061045691906133c6565b611eb5565b005b610465611fc1565b005b61046f612049565b60405161047c919061343a565b60405180910390f35b61048d61206f565b60405161049a919061303b565b60405180910390f35b6104bd60048036038101906104b89190613481565b612075565b6040516104ca919061303b565b60405180910390f35b6104db6120be565b6040516104e891906134bd565b60405180910390f35b61050b60048036038101906105069190613178565b6120e7565b604051610518919061303b565b60405180910390f35b61053b600480360381019061053691906134d8565b612118565b604051610549929190613518565b60405180910390f35b61055a612149565b6040516105679190613541565b60405180910390f35b61058a60048036038101906105859190613481565b61216f565b005b6105a660048036038101906105a19190613481565b61222f565b6040516105b3919061303b565b60405180910390f35b6105c4612247565b6040516105d191906134bd565b60405180910390f35b6105f460048036038101906105ef9190613178565b61226d565b005b610610600480360381019061060b9190613481565b61252c565b005b61062c600480360381019061062791906134d8565b612623565b604051610639919061303b565b60405180910390f35b6000600780549050905090565b600060076000815481106106665761066561355c565b5b9060005260206000209060040201905060006008600080815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002090508281600001541015610711576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610708906135e8565b60405180910390fd5b61071b6000611aca565b6000610765826001015461075764e8d4a510006107498760030154876000015461284890919063ffffffff16565b6128c290919063ffffffff16565b61290c90919063ffffffff16565b90506000811115610806576107c281600b60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461295690919063ffffffff16565b600b60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505b600084111561087e5761082684836000015461290c90919063ffffffff16565b826000018190555061087d33858560000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166129b49092919063ffffffff16565b5b6108b064e8d4a510006108a28560030154856000015461284890919063ffffffff16565b6128c290919063ffffffff16565b826001018190555060003373ffffffffffffffffffffffffffffffffffffffff167ff279e6a1f5e320cca91135676d9cb6e44ca8a08c0b88342bcdb1144f6511b56886604051610900919061303b565b60405180910390a350505050565b6007818154811061091e57600080fd5b90600052602060002090600402016000915090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060010154908060020154908060030154905084565b60095481565b60006007828154811061098a5761098961355c565b5b9060005260206000209060040201905060006008600084815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020905060008260030154905060008360000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401610a5691906134bd565b602060405180830381865afa158015610a73573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a97919061361d565b9050836002015443118015610aad575060008114155b15610b48576000610ac28560020154436120e7565b90506000610b05600954610af78860010154610ae96004548761284890919063ffffffff16565b61284890919063ffffffff16565b6128c290919063ffffffff16565b9050610b43610b3484610b2664e8d4a510008561284890919063ffffffff16565b6128c290919063ffffffff16565b8561295690919063ffffffff16565b935050505b6000610b8e8460010154610b8064e8d4a51000610b7287896000015461284890919063ffffffff16565b6128c290919063ffffffff16565b61290c90919063ffffffff16565b9050600060018881548110610ba657610ba561355c565b5b906000526020600020906002020190506000610c0a600b60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020548461295690919063ffffffff16565b90508160010154811115610c405760008803610c2b57610c2a600061064f565b5b60008814610c3f57610c3e886000611353565b5b5b600b60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054826001015410610cc5576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610cbc90613696565b60405180910390fd5b610d1b8260010154600b60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461290c90919063ffffffff16565b600b60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166317e5883c336040518263ffffffff1660e01b8152600401610dbb91906134bd565b600060405180830381600087803b158015610dd557600080fd5b505af1158015610de9573d6000803e3d6000fd5b50505050505050505050505050565b610e00612a3a565b73ffffffffffffffffffffffffffffffffffffffff16610e1e6120be565b73ffffffffffffffffffffffffffffffffffffffff1614610e74576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e6b90613702565b60405180910390fd5b8015610e8357610e82611e82565b5b6000600a544311610e9657600a54610e98565b435b9050610eaf8460095461295690919063ffffffff16565b600981905550600760405180608001604052808573ffffffffffffffffffffffffffffffffffffffff1681526020018681526020018381526020016000815250908060018154018082558091505060019003906000526020600020906004020160009091909190915060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550602082015181600101556040820151816002015560608201518160030155505050505050565b610f8d612a3a565b73ffffffffffffffffffffffffffffffffffffffff16610fab6120be565b73ffffffffffffffffffffffffffffffffffffffff1614611001576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ff890613702565b60405180910390fd5b80600660006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b61104d612a3a565b73ffffffffffffffffffffffffffffffffffffffff1661106b6120be565b73ffffffffffffffffffffffffffffffffffffffff16146110c1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016110b890613702565b60405180910390fd5b8060048190555050565b600060076000815481106110e2576110e161355c565b5b9060005260206000209060040201905060006008600080815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002090506111506000611aca565b60008160000154111561124a5760006111a7826001015461119964e8d4a5100061118b8760030154876000015461284890919063ffffffff16565b6128c290919063ffffffff16565b61290c90919063ffffffff16565b905060008111156112485761120481600b60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461295690919063ffffffff16565b600b60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505b505b60008311156112c4576112a43330858560000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16612a42909392919063ffffffff16565b6112bb83826000015461295690919063ffffffff16565b81600001819055505b6112f664e8d4a510006112e88460030154846000015461284890919063ffffffff16565b6128c290919063ffffffff16565b816001018190555060003373ffffffffffffffffffffffffffffffffffffffff167f90890809c654f11d6e72a28fa60149770a0d11ec6c92319d6ceb2bb0a4ea1a1585604051611346919061303b565b60405180910390a3505050565b60008203611396576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161138d9061376e565b60405180910390fd5b6000600783815481106113ac576113ab61355c565b5b9060005260206000209060040201905060006008600085815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002090508281600001541015611457576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161144e906135e8565b60405180910390fd5b61146084611aca565b60006114aa826001015461149c64e8d4a5100061148e8760030154876000015461284890919063ffffffff16565b6128c290919063ffffffff16565b61290c90919063ffffffff16565b9050600081111561154b5761150781600b60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461295690919063ffffffff16565b600b60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505b61156284836000015461290c90919063ffffffff16565b826000018190555061159c64e8d4a5100061158e8560030154856000015461284890919063ffffffff16565b6128c290919063ffffffff16565b82600101819055506115f333858560000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166129b49092919063ffffffff16565b843373ffffffffffffffffffffffffffffffffffffffff167ff279e6a1f5e320cca91135676d9cb6e44ca8a08c0b88342bcdb1144f6511b5688660405161163a919061303b565b60405180910390a35050505050565b600073ffffffffffffffffffffffffffffffffffffffff16600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16036116da576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016116d1906137da565b60405180910390fd5b6000600782815481106116f0576116ef61355c565b5b9060005260206000209060040201905060008160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905060008173ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b815260040161176491906134bd565b602060405180830381865afa158015611781573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906117a5919061361d565b90506117f4600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16828473ffffffffffffffffffffffffffffffffffffffff16612acb9092919063ffffffff16565b6000600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663ce5494bb846040518263ffffffff1660e01b81526004016118519190613541565b6020604051808303816000875af1158015611870573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611894919061380f565b90508073ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016118cf91906134bd565b602060405180830381865afa1580156118ec573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611910919061361d565b8214611951576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161194890613888565b60405180910390fd5b808460000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050505050565b600a5481565b6119a9612a3a565b73ffffffffffffffffffffffffffffffffffffffff166119c76120be565b73ffffffffffffffffffffffffffffffffffffffff1614611a1d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611a1490613702565b60405180910390fd5b600160405180604001604052808473ffffffffffffffffffffffffffffffffffffffff16815260200183815250908060018154018082558091505060019003906000526020600020906002020160009091909190915060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506020820151816001015550505050565b600060078281548110611ae057611adf61355c565b5b9060005260206000209060040201905080600201544311611b015750611c66565b60008160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401611b6091906134bd565b602060405180830381865afa158015611b7d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611ba1919061361d565b905060008111611bbb574382600201819055505050611c66565b6000611bcb8360020154436120e7565b90506000611c0e600954611c008660010154611bf26004548761284890919063ffffffff16565b61284890919063ffffffff16565b6128c290919063ffffffff16565b9050611c50611c3d84611c2f64e8d4a510008561284890919063ffffffff16565b6128c290919063ffffffff16565b856003015461295690919063ffffffff16565b8460030181905550438460020181905550505050505b50565b600060078281548110611c7f57611c7e61355c565b5b9060005260206000209060040201905060006008600084815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000209050611d363382600001548460000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166129b49092919063ffffffff16565b823373ffffffffffffffffffffffffffffffffffffffff167fbb757047c2b5f3974fe26b7c10f732e7bce710b0952a71082702781e62ae05958360000154604051611d81919061303b565b60405180910390a36000816000018190555060008160010181905550505050565b60045481565b611db0612a3a565b73ffffffffffffffffffffffffffffffffffffffff16611dce6120be565b73ffffffffffffffffffffffffffffffffffffffff1614611e24576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611e1b90613702565b60405180910390fd5b8060058190555050565b60018181548110611e3e57600080fd5b90600052602060002090600202016000915090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060010154905082565b6000600780549050905060005b81811015611eb157611ea081611aca565b80611eaa906138d7565b9050611e8f565b5050565b611ebd612a3a565b73ffffffffffffffffffffffffffffffffffffffff16611edb6120be565b73ffffffffffffffffffffffffffffffffffffffff1614611f31576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611f2890613702565b60405180910390fd5b8015611f4057611f3f611e82565b5b611f8c82611f7e60078681548110611f5b57611f5a61355c565b5b90600052602060002090600402016001015460095461290c90919063ffffffff16565b61295690919063ffffffff16565b6009819055508160078481548110611fa757611fa661355c565b5b906000526020600020906004020160010181905550505050565b611fc9612a3a565b73ffffffffffffffffffffffffffffffffffffffff16611fe76120be565b73ffffffffffffffffffffffffffffffffffffffff161461203d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161203490613702565b60405180910390fd5b6120476000612c1a565b565b600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60055481565b6000600b60008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000612110600554612102858561290c90919063ffffffff16565b61284890919063ffffffff16565b905092915050565b6008602052816000526040600020602052806000526040600020600091509150508060000154908060010154905082565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b612177612a3a565b73ffffffffffffffffffffffffffffffffffffffff166121956120be565b73ffffffffffffffffffffffffffffffffffffffff16146121eb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016121e290613702565b60405180910390fd5b80600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600b6020528060005260406000206000915090505481565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600082036122b0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016122a79061396b565b60405180910390fd5b6000600783815481106122c6576122c561355c565b5b9060005260206000209060040201905060006008600085815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020905061233384611aca565b60008160000154111561242d57600061238a826001015461237c64e8d4a5100061236e8760030154876000015461284890919063ffffffff16565b6128c290919063ffffffff16565b61290c90919063ffffffff16565b9050600081111561242b576123e781600b60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461295690919063ffffffff16565b600b60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505b505b61247e3330858560000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16612a42909392919063ffffffff16565b61249583826000015461295690919063ffffffff16565b81600001819055506124cf64e8d4a510006124c18460030154846000015461284890919063ffffffff16565b6128c290919063ffffffff16565b8160010181905550833373ffffffffffffffffffffffffffffffffffffffff167f90890809c654f11d6e72a28fa60149770a0d11ec6c92319d6ceb2bb0a4ea1a158560405161251e919061303b565b60405180910390a350505050565b612534612a3a565b73ffffffffffffffffffffffffffffffffffffffff166125526120be565b73ffffffffffffffffffffffffffffffffffffffff16146125a8576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161259f90613702565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603612617576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161260e906139fd565b60405180910390fd5b61262081612c1a565b50565b6000806007848154811061263a5761263961355c565b5b9060005260206000209060040201905060006008600086815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020905060008260030154905060008360000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b815260040161270691906134bd565b602060405180830381865afa158015612723573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612747919061361d565b905083600201544311801561275d575060008114155b156127f85760006127728560020154436120e7565b905060006127b56009546127a788600101546127996004548761284890919063ffffffff16565b61284890919063ffffffff16565b6128c290919063ffffffff16565b90506127f36127e4846127d664e8d4a510008561284890919063ffffffff16565b6128c290919063ffffffff16565b8561295690919063ffffffff16565b935050505b61283c836001015461282e64e8d4a5100061282086886000015461284890919063ffffffff16565b6128c290919063ffffffff16565b61290c90919063ffffffff16565b94505050505092915050565b600080830361285a57600090506128bc565b600082846128689190613a1d565b90508284826128779190613aa6565b146128b7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016128ae90613b49565b60405180910390fd5b809150505b92915050565b600061290483836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f000000000000815250612cde565b905092915050565b600061294e83836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250612d41565b905092915050565b60008082846129659190613b69565b9050838110156129aa576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016129a190613c0b565b60405180910390fd5b8091505092915050565b612a358363a9059cbb60e01b84846040516024016129d3929190613c2b565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050612da5565b505050565b600033905090565b612ac5846323b872dd60e01b858585604051602401612a6393929190613c54565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050612da5565b50505050565b6000811480612b55575060008373ffffffffffffffffffffffffffffffffffffffff1663dd62ed3e30856040518363ffffffff1660e01b8152600401612b12929190613c8b565b602060405180830381865afa158015612b2f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612b53919061361d565b145b612b94576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612b8b90613d26565b60405180910390fd5b612c158363095ea7b360e01b8484604051602401612bb3929190613c2b565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050612da5565b505050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b60008083118290612d25576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612d1c9190613dce565b60405180910390fd5b5060008385612d349190613aa6565b9050809150509392505050565b6000838311158290612d89576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612d809190613dce565b60405180910390fd5b5060008385612d989190613df0565b9050809150509392505050565b6000612e07826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65648152508573ffffffffffffffffffffffffffffffffffffffff16612e6c9092919063ffffffff16565b9050600081511115612e675780806020019051810190612e279190613e39565b612e66576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612e5d90613ed8565b60405180910390fd5b5b505050565b6060612e7b8484600085612e84565b90509392505050565b606082471015612ec9576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612ec090613f6a565b60405180910390fd5b612ed285612f98565b612f11576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612f0890613fd6565b60405180910390fd5b6000808673ffffffffffffffffffffffffffffffffffffffff168587604051612f3a919061403d565b60006040518083038185875af1925050503d8060008114612f77576040519150601f19603f3d011682016040523d82523d6000602084013e612f7c565b606091505b5091509150612f8c828286612fbb565b92505050949350505050565b6000808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b60608315612fcb5782905061301b565b600083511115612fde5782518084602001fd5b816040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016130129190613dce565b60405180910390fd5b9392505050565b6000819050919050565b61303581613022565b82525050565b6000602082019050613050600083018461302c565b92915050565b600080fd5b61306481613022565b811461306f57600080fd5b50565b6000813590506130818161305b565b92915050565b60006020828403121561309d5761309c613056565b5b60006130ab84828501613072565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60006130f96130f46130ef846130b4565b6130d4565b6130b4565b9050919050565b600061310b826130de565b9050919050565b600061311d82613100565b9050919050565b61312d81613112565b82525050565b60006080820190506131486000830187613124565b613155602083018661302c565b613162604083018561302c565b61316f606083018461302c565b95945050505050565b6000806040838503121561318f5761318e613056565b5b600061319d85828601613072565b92505060206131ae85828601613072565b9150509250929050565b60006131c3826130b4565b9050919050565b60006131d5826131b8565b9050919050565b6131e5816131ca565b81146131f057600080fd5b50565b600081359050613202816131dc565b92915050565b60008115159050919050565b61321d81613208565b811461322857600080fd5b50565b60008135905061323a81613214565b92915050565b60008060006060848603121561325957613258613056565b5b600061326786828701613072565b9350506020613278868287016131f3565b92505060406132898682870161322b565b9150509250925092565b600061329e826131b8565b9050919050565b6132ae81613293565b81146132b957600080fd5b50565b6000813590506132cb816132a5565b92915050565b6000602082840312156132e7576132e6613056565b5b60006132f5848285016132bc565b91505092915050565b6000613309826131b8565b9050919050565b613319816132fe565b811461332457600080fd5b50565b60008135905061333681613310565b92915050565b6000806040838503121561335357613352613056565b5b600061336185828601613327565b925050602061337285828601613072565b9150509250929050565b600061338782613100565b9050919050565b6133978161337c565b82525050565b60006040820190506133b2600083018561338e565b6133bf602083018461302c565b9392505050565b6000806000606084860312156133df576133de613056565b5b60006133ed86828701613072565b93505060206133fe86828701613072565b925050604061340f8682870161322b565b9150509250925092565b600061342482613100565b9050919050565b61343481613419565b82525050565b600060208201905061344f600083018461342b565b92915050565b61345e816131b8565b811461346957600080fd5b50565b60008135905061347b81613455565b92915050565b60006020828403121561349757613496613056565b5b60006134a58482850161346c565b91505092915050565b6134b7816131b8565b82525050565b60006020820190506134d260008301846134ae565b92915050565b600080604083850312156134ef576134ee613056565b5b60006134fd85828601613072565b925050602061350e8582860161346c565b9150509250929050565b600060408201905061352d600083018561302c565b61353a602083018461302c565b9392505050565b60006020820190506135566000830184613124565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600082825260208201905092915050565b7f77697468647261773a206e6f7420676f6f640000000000000000000000000000600082015250565b60006135d260128361358b565b91506135dd8261359c565b602082019050919050565b60006020820190508181036000830152613601816135c5565b9050919050565b6000815190506136178161305b565b92915050565b60006020828403121561363357613632613056565b5b600061364184828501613608565b91505092915050565b7f506f776572206973206e6f7420656e6f75676800000000000000000000000000600082015250565b600061368060138361358b565b915061368b8261364a565b602082019050919050565b600060208201905081810360008301526136af81613673565b9050919050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b60006136ec60208361358b565b91506136f7826136b6565b602082019050919050565b6000602082019050818103600083015261371b816136df565b9050919050565b7f776974686472617720506f77657220627920756e7374616b696e670000000000600082015250565b6000613758601b8361358b565b915061376382613722565b602082019050919050565b600060208201905081810360008301526137878161374b565b9050919050565b7f6d6967726174653a206e6f206d69677261746f72000000000000000000000000600082015250565b60006137c460148361358b565b91506137cf8261378e565b602082019050919050565b600060208201905081810360008301526137f3816137b7565b9050919050565b600081519050613809816131dc565b92915050565b60006020828403121561382557613824613056565b5b6000613833848285016137fa565b91505092915050565b7f6d6967726174653a206261640000000000000000000000000000000000000000600082015250565b6000613872600c8361358b565b915061387d8261383c565b602082019050919050565b600060208201905081810360008301526138a181613865565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006138e282613022565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203613914576139136138a8565b5b600182019050919050565b7f6465706f73697420506f776572206279207374616b696e670000000000000000600082015250565b600061395560188361358b565b91506139608261391f565b602082019050919050565b6000602082019050818103600083015261398481613948565b9050919050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b60006139e760268361358b565b91506139f28261398b565b604082019050919050565b60006020820190508181036000830152613a16816139da565b9050919050565b6000613a2882613022565b9150613a3383613022565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615613a6c57613a6b6138a8565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000613ab182613022565b9150613abc83613022565b925082613acc57613acb613a77565b5b828204905092915050565b7f536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f60008201527f7700000000000000000000000000000000000000000000000000000000000000602082015250565b6000613b3360218361358b565b9150613b3e82613ad7565b604082019050919050565b60006020820190508181036000830152613b6281613b26565b9050919050565b6000613b7482613022565b9150613b7f83613022565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115613bb457613bb36138a8565b5b828201905092915050565b7f536166654d6174683a206164646974696f6e206f766572666c6f770000000000600082015250565b6000613bf5601b8361358b565b9150613c0082613bbf565b602082019050919050565b60006020820190508181036000830152613c2481613be8565b9050919050565b6000604082019050613c4060008301856134ae565b613c4d602083018461302c565b9392505050565b6000606082019050613c6960008301866134ae565b613c7660208301856134ae565b613c83604083018461302c565b949350505050565b6000604082019050613ca060008301856134ae565b613cad60208301846134ae565b9392505050565b7f5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f60008201527f20746f206e6f6e2d7a65726f20616c6c6f77616e636500000000000000000000602082015250565b6000613d1060368361358b565b9150613d1b82613cb4565b604082019050919050565b60006020820190508181036000830152613d3f81613d03565b9050919050565b600081519050919050565b60005b83811015613d6f578082015181840152602081019050613d54565b83811115613d7e576000848401525b50505050565b6000601f19601f8301169050919050565b6000613da082613d46565b613daa818561358b565b9350613dba818560208601613d51565b613dc381613d84565b840191505092915050565b60006020820190508181036000830152613de88184613d95565b905092915050565b6000613dfb82613022565b9150613e0683613022565b925082821015613e1957613e186138a8565b5b828203905092915050565b600081519050613e3381613214565b92915050565b600060208284031215613e4f57613e4e613056565b5b6000613e5d84828501613e24565b91505092915050565b7f5361666545524332303a204552433230206f7065726174696f6e20646964206e60008201527f6f74207375636365656400000000000000000000000000000000000000000000602082015250565b6000613ec2602a8361358b565b9150613ecd82613e66565b604082019050919050565b60006020820190508181036000830152613ef181613eb5565b9050919050565b7f416464726573733a20696e73756666696369656e742062616c616e636520666f60008201527f722063616c6c0000000000000000000000000000000000000000000000000000602082015250565b6000613f5460268361358b565b9150613f5f82613ef8565b604082019050919050565b60006020820190508181036000830152613f8381613f47565b9050919050565b7f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000600082015250565b6000613fc0601d8361358b565b9150613fcb82613f8a565b602082019050919050565b60006020820190508181036000830152613fef81613fb3565b9050919050565b600081519050919050565b600081905092915050565b600061401782613ff6565b6140218185614001565b9350614031818560208601613d51565b80840191505092915050565b6000614049828461400c565b91508190509291505056fea2646970667358221220247c71767ca2691bbf499941bc34a7325a3d199df45cca4cbd28118b5744739564736f6c634300080f0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x206 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x61C1B724 GT PUSH2 0x11A JUMPI DUP1 PUSH4 0x8DBB1E3A GT PUSH2 0xAD JUMPI DUP1 PUSH4 0xD209DB8C GT PUSH2 0x7C JUMPI DUP1 PUSH4 0xD209DB8C EQ PUSH2 0x58C JUMPI DUP1 PUSH4 0xD49E77CD EQ PUSH2 0x5BC JUMPI DUP1 PUSH4 0xE2BBB158 EQ PUSH2 0x5DA JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x5F6 JUMPI DUP1 PUSH4 0xF3239AB5 EQ PUSH2 0x612 JUMPI PUSH2 0x206 JUMP JUMPDEST DUP1 PUSH4 0x8DBB1E3A EQ PUSH2 0x4F1 JUMPI DUP1 PUSH4 0x93F1A40B EQ PUSH2 0x521 JUMPI DUP1 PUSH4 0xCB3CBA55 EQ PUSH2 0x552 JUMPI DUP1 PUSH4 0xD0D41FE1 EQ PUSH2 0x570 JUMPI PUSH2 0x206 JUMP JUMPDEST DUP1 PUSH4 0x7CD07E47 GT PUSH2 0xE9 JUMPI DUP1 PUSH4 0x7CD07E47 EQ PUSH2 0x467 JUMPI DUP1 PUSH4 0x8AA28550 EQ PUSH2 0x485 JUMPI DUP1 PUSH4 0x8C51793B EQ PUSH2 0x4A3 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x4D3 JUMPI PUSH2 0x206 JUMP JUMPDEST DUP1 PUSH4 0x61C1B724 EQ PUSH2 0x406 JUMPI DUP1 PUSH4 0x630B5BA1 EQ PUSH2 0x437 JUMPI DUP1 PUSH4 0x64482F79 EQ PUSH2 0x441 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x45D JUMPI PUSH2 0x206 JUMP JUMPDEST DUP1 PUSH4 0x41441D3B GT PUSH2 0x19D JUMPI DUP1 PUSH4 0x4EA2813C GT PUSH2 0x16C JUMPI DUP1 PUSH4 0x4EA2813C EQ PUSH2 0x378 JUMPI DUP1 PUSH4 0x51EB05A6 EQ PUSH2 0x394 JUMPI DUP1 PUSH4 0x5312EA8E EQ PUSH2 0x3B0 JUMPI DUP1 PUSH4 0x5990C569 EQ PUSH2 0x3CC JUMPI DUP1 PUSH4 0x5FFE6146 EQ PUSH2 0x3EA JUMPI PUSH2 0x206 JUMP JUMPDEST DUP1 PUSH4 0x41441D3B EQ PUSH2 0x306 JUMPI DUP1 PUSH4 0x441A3E70 EQ PUSH2 0x322 JUMPI DUP1 PUSH4 0x454B0608 EQ PUSH2 0x33E JUMPI DUP1 PUSH4 0x48CD4CB1 EQ PUSH2 0x35A JUMPI PUSH2 0x206 JUMP JUMPDEST DUP1 PUSH4 0x1D5FBD87 GT PUSH2 0x1D9 JUMPI DUP1 PUSH4 0x1D5FBD87 EQ PUSH2 0x296 JUMPI DUP1 PUSH4 0x1EAAA045 EQ PUSH2 0x2B2 JUMPI DUP1 PUSH4 0x23CF3118 EQ PUSH2 0x2CE JUMPI DUP1 PUSH4 0x3DF7AFF3 EQ PUSH2 0x2EA JUMPI PUSH2 0x206 JUMP JUMPDEST DUP1 PUSH4 0x81E3EDA EQ PUSH2 0x20B JUMPI DUP1 PUSH4 0x1058D281 EQ PUSH2 0x229 JUMPI DUP1 PUSH4 0x1526FE27 EQ PUSH2 0x245 JUMPI DUP1 PUSH4 0x17CAF6F1 EQ PUSH2 0x278 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x213 PUSH2 0x642 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x220 SWAP2 SWAP1 PUSH2 0x303B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x243 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x23E SWAP2 SWAP1 PUSH2 0x3087 JUMP JUMPDEST PUSH2 0x64F JUMP JUMPDEST STOP JUMPDEST PUSH2 0x25F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x25A SWAP2 SWAP1 PUSH2 0x3087 JUMP JUMPDEST PUSH2 0x90E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x26F SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3133 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x280 PUSH2 0x96E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x28D SWAP2 SWAP1 PUSH2 0x303B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2B0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2AB SWAP2 SWAP1 PUSH2 0x3178 JUMP JUMPDEST PUSH2 0x974 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2CC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2C7 SWAP2 SWAP1 PUSH2 0x3240 JUMP JUMPDEST PUSH2 0xDF8 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2E8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2E3 SWAP2 SWAP1 PUSH2 0x32D1 JUMP JUMPDEST PUSH2 0xF85 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x304 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2FF SWAP2 SWAP1 PUSH2 0x3087 JUMP JUMPDEST PUSH2 0x1045 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x320 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x31B SWAP2 SWAP1 PUSH2 0x3087 JUMP JUMPDEST PUSH2 0x10CB JUMP JUMPDEST STOP JUMPDEST PUSH2 0x33C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x337 SWAP2 SWAP1 PUSH2 0x3178 JUMP JUMPDEST PUSH2 0x1353 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x358 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x353 SWAP2 SWAP1 PUSH2 0x3087 JUMP JUMPDEST PUSH2 0x1649 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x362 PUSH2 0x199B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x36F SWAP2 SWAP1 PUSH2 0x303B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x392 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x38D SWAP2 SWAP1 PUSH2 0x333C JUMP JUMPDEST PUSH2 0x19A1 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3AE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3A9 SWAP2 SWAP1 PUSH2 0x3087 JUMP JUMPDEST PUSH2 0x1ACA JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3CA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3C5 SWAP2 SWAP1 PUSH2 0x3087 JUMP JUMPDEST PUSH2 0x1C69 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3D4 PUSH2 0x1DA2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3E1 SWAP2 SWAP1 PUSH2 0x303B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x404 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3FF SWAP2 SWAP1 PUSH2 0x3087 JUMP JUMPDEST PUSH2 0x1DA8 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x420 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x41B SWAP2 SWAP1 PUSH2 0x3087 JUMP JUMPDEST PUSH2 0x1E2E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x42E SWAP3 SWAP2 SWAP1 PUSH2 0x339D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x43F PUSH2 0x1E82 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x45B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x456 SWAP2 SWAP1 PUSH2 0x33C6 JUMP JUMPDEST PUSH2 0x1EB5 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x465 PUSH2 0x1FC1 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x46F PUSH2 0x2049 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x47C SWAP2 SWAP1 PUSH2 0x343A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x48D PUSH2 0x206F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x49A SWAP2 SWAP1 PUSH2 0x303B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4BD PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4B8 SWAP2 SWAP1 PUSH2 0x3481 JUMP JUMPDEST PUSH2 0x2075 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4CA SWAP2 SWAP1 PUSH2 0x303B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4DB PUSH2 0x20BE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4E8 SWAP2 SWAP1 PUSH2 0x34BD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x50B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x506 SWAP2 SWAP1 PUSH2 0x3178 JUMP JUMPDEST PUSH2 0x20E7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x518 SWAP2 SWAP1 PUSH2 0x303B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x53B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x536 SWAP2 SWAP1 PUSH2 0x34D8 JUMP JUMPDEST PUSH2 0x2118 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x549 SWAP3 SWAP2 SWAP1 PUSH2 0x3518 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x55A PUSH2 0x2149 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x567 SWAP2 SWAP1 PUSH2 0x3541 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x58A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x585 SWAP2 SWAP1 PUSH2 0x3481 JUMP JUMPDEST PUSH2 0x216F JUMP JUMPDEST STOP JUMPDEST PUSH2 0x5A6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5A1 SWAP2 SWAP1 PUSH2 0x3481 JUMP JUMPDEST PUSH2 0x222F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5B3 SWAP2 SWAP1 PUSH2 0x303B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x5C4 PUSH2 0x2247 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5D1 SWAP2 SWAP1 PUSH2 0x34BD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x5F4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5EF SWAP2 SWAP1 PUSH2 0x3178 JUMP JUMPDEST PUSH2 0x226D JUMP JUMPDEST STOP JUMPDEST PUSH2 0x610 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x60B SWAP2 SWAP1 PUSH2 0x3481 JUMP JUMPDEST PUSH2 0x252C JUMP JUMPDEST STOP JUMPDEST PUSH2 0x62C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x627 SWAP2 SWAP1 PUSH2 0x34D8 JUMP JUMPDEST PUSH2 0x2623 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x639 SWAP2 SWAP1 PUSH2 0x303B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH1 0x7 DUP1 SLOAD SWAP1 POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 DUP2 SLOAD DUP2 LT PUSH2 0x666 JUMPI PUSH2 0x665 PUSH2 0x355C JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x4 MUL ADD SWAP1 POP PUSH1 0x0 PUSH1 0x8 PUSH1 0x0 DUP1 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP DUP3 DUP2 PUSH1 0x0 ADD SLOAD LT ISZERO PUSH2 0x711 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x708 SWAP1 PUSH2 0x35E8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x71B PUSH1 0x0 PUSH2 0x1ACA JUMP JUMPDEST PUSH1 0x0 PUSH2 0x765 DUP3 PUSH1 0x1 ADD SLOAD PUSH2 0x757 PUSH5 0xE8D4A51000 PUSH2 0x749 DUP8 PUSH1 0x3 ADD SLOAD DUP8 PUSH1 0x0 ADD SLOAD PUSH2 0x2848 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x28C2 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x290C SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 GT ISZERO PUSH2 0x806 JUMPI PUSH2 0x7C2 DUP2 PUSH1 0xB PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x2956 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0xB PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP JUMPDEST PUSH1 0x0 DUP5 GT ISZERO PUSH2 0x87E JUMPI PUSH2 0x826 DUP5 DUP4 PUSH1 0x0 ADD SLOAD PUSH2 0x290C SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP3 PUSH1 0x0 ADD DUP2 SWAP1 SSTORE POP PUSH2 0x87D CALLER DUP6 DUP6 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x29B4 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST JUMPDEST PUSH2 0x8B0 PUSH5 0xE8D4A51000 PUSH2 0x8A2 DUP6 PUSH1 0x3 ADD SLOAD DUP6 PUSH1 0x0 ADD SLOAD PUSH2 0x2848 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x28C2 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP3 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xF279E6A1F5E320CCA91135676D9CB6E44CA8A08C0B88342BCDB1144F6511B568 DUP7 PUSH1 0x40 MLOAD PUSH2 0x900 SWAP2 SWAP1 PUSH2 0x303B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH1 0x7 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x91E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x4 MUL ADD PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 DUP1 PUSH1 0x2 ADD SLOAD SWAP1 DUP1 PUSH1 0x3 ADD SLOAD SWAP1 POP DUP5 JUMP JUMPDEST PUSH1 0x9 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x7 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x98A JUMPI PUSH2 0x989 PUSH2 0x355C JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x4 MUL ADD SWAP1 POP PUSH1 0x0 PUSH1 0x8 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP PUSH1 0x0 DUP3 PUSH1 0x3 ADD SLOAD SWAP1 POP PUSH1 0x0 DUP4 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA56 SWAP2 SWAP1 PUSH2 0x34BD JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xA73 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xA97 SWAP2 SWAP1 PUSH2 0x361D JUMP JUMPDEST SWAP1 POP DUP4 PUSH1 0x2 ADD SLOAD NUMBER GT DUP1 ISZERO PUSH2 0xAAD JUMPI POP PUSH1 0x0 DUP2 EQ ISZERO JUMPDEST ISZERO PUSH2 0xB48 JUMPI PUSH1 0x0 PUSH2 0xAC2 DUP6 PUSH1 0x2 ADD SLOAD NUMBER PUSH2 0x20E7 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xB05 PUSH1 0x9 SLOAD PUSH2 0xAF7 DUP9 PUSH1 0x1 ADD SLOAD PUSH2 0xAE9 PUSH1 0x4 SLOAD DUP8 PUSH2 0x2848 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x2848 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x28C2 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0xB43 PUSH2 0xB34 DUP5 PUSH2 0xB26 PUSH5 0xE8D4A51000 DUP6 PUSH2 0x2848 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x28C2 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP6 PUSH2 0x2956 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP4 POP POP POP JUMPDEST PUSH1 0x0 PUSH2 0xB8E DUP5 PUSH1 0x1 ADD SLOAD PUSH2 0xB80 PUSH5 0xE8D4A51000 PUSH2 0xB72 DUP8 DUP10 PUSH1 0x0 ADD SLOAD PUSH2 0x2848 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x28C2 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x290C SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x1 DUP9 DUP2 SLOAD DUP2 LT PUSH2 0xBA6 JUMPI PUSH2 0xBA5 PUSH2 0x355C JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD SWAP1 POP PUSH1 0x0 PUSH2 0xC0A PUSH1 0xB PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD DUP5 PUSH2 0x2956 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP DUP2 PUSH1 0x1 ADD SLOAD DUP2 GT ISZERO PUSH2 0xC40 JUMPI PUSH1 0x0 DUP9 SUB PUSH2 0xC2B JUMPI PUSH2 0xC2A PUSH1 0x0 PUSH2 0x64F JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP9 EQ PUSH2 0xC3F JUMPI PUSH2 0xC3E DUP9 PUSH1 0x0 PUSH2 0x1353 JUMP JUMPDEST JUMPDEST JUMPDEST PUSH1 0xB PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD DUP3 PUSH1 0x1 ADD SLOAD LT PUSH2 0xCC5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCBC SWAP1 PUSH2 0x3696 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xD1B DUP3 PUSH1 0x1 ADD SLOAD PUSH1 0xB PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x290C SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0xB PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x17E5883C CALLER PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xDBB SWAP2 SWAP1 PUSH2 0x34BD JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xDD5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xDE9 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0xE00 PUSH2 0x2A3A JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xE1E PUSH2 0x20BE JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xE74 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE6B SWAP1 PUSH2 0x3702 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 ISZERO PUSH2 0xE83 JUMPI PUSH2 0xE82 PUSH2 0x1E82 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH1 0xA SLOAD NUMBER GT PUSH2 0xE96 JUMPI PUSH1 0xA SLOAD PUSH2 0xE98 JUMP JUMPDEST NUMBER JUMPDEST SWAP1 POP PUSH2 0xEAF DUP5 PUSH1 0x9 SLOAD PUSH2 0x2956 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x9 DUP2 SWAP1 SSTORE POP PUSH1 0x7 PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP7 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE POP SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x4 MUL ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD SSTORE POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0xF8D PUSH2 0x2A3A JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xFAB PUSH2 0x20BE JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1001 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFF8 SWAP1 PUSH2 0x3702 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x6 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH2 0x104D PUSH2 0x2A3A JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x106B PUSH2 0x20BE JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x10C1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x10B8 SWAP1 PUSH2 0x3702 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x4 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 DUP2 SLOAD DUP2 LT PUSH2 0x10E2 JUMPI PUSH2 0x10E1 PUSH2 0x355C JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x4 MUL ADD SWAP1 POP PUSH1 0x0 PUSH1 0x8 PUSH1 0x0 DUP1 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP PUSH2 0x1150 PUSH1 0x0 PUSH2 0x1ACA JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 ADD SLOAD GT ISZERO PUSH2 0x124A JUMPI PUSH1 0x0 PUSH2 0x11A7 DUP3 PUSH1 0x1 ADD SLOAD PUSH2 0x1199 PUSH5 0xE8D4A51000 PUSH2 0x118B DUP8 PUSH1 0x3 ADD SLOAD DUP8 PUSH1 0x0 ADD SLOAD PUSH2 0x2848 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x28C2 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x290C SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 GT ISZERO PUSH2 0x1248 JUMPI PUSH2 0x1204 DUP2 PUSH1 0xB PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x2956 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0xB PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP JUMPDEST POP JUMPDEST PUSH1 0x0 DUP4 GT ISZERO PUSH2 0x12C4 JUMPI PUSH2 0x12A4 CALLER ADDRESS DUP6 DUP6 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x2A42 SWAP1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x12BB DUP4 DUP3 PUSH1 0x0 ADD SLOAD PUSH2 0x2956 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP2 PUSH1 0x0 ADD DUP2 SWAP1 SSTORE POP JUMPDEST PUSH2 0x12F6 PUSH5 0xE8D4A51000 PUSH2 0x12E8 DUP5 PUSH1 0x3 ADD SLOAD DUP5 PUSH1 0x0 ADD SLOAD PUSH2 0x2848 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x28C2 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP2 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x90890809C654F11D6E72A28FA60149770A0D11EC6C92319D6CEB2BB0A4EA1A15 DUP6 PUSH1 0x40 MLOAD PUSH2 0x1346 SWAP2 SWAP1 PUSH2 0x303B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 SUB PUSH2 0x1396 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x138D SWAP1 PUSH2 0x376E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x7 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x13AC JUMPI PUSH2 0x13AB PUSH2 0x355C JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x4 MUL ADD SWAP1 POP PUSH1 0x0 PUSH1 0x8 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP DUP3 DUP2 PUSH1 0x0 ADD SLOAD LT ISZERO PUSH2 0x1457 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x144E SWAP1 PUSH2 0x35E8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1460 DUP5 PUSH2 0x1ACA JUMP JUMPDEST PUSH1 0x0 PUSH2 0x14AA DUP3 PUSH1 0x1 ADD SLOAD PUSH2 0x149C PUSH5 0xE8D4A51000 PUSH2 0x148E DUP8 PUSH1 0x3 ADD SLOAD DUP8 PUSH1 0x0 ADD SLOAD PUSH2 0x2848 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x28C2 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x290C SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 GT ISZERO PUSH2 0x154B JUMPI PUSH2 0x1507 DUP2 PUSH1 0xB PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x2956 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0xB PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP JUMPDEST PUSH2 0x1562 DUP5 DUP4 PUSH1 0x0 ADD SLOAD PUSH2 0x290C SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP3 PUSH1 0x0 ADD DUP2 SWAP1 SSTORE POP PUSH2 0x159C PUSH5 0xE8D4A51000 PUSH2 0x158E DUP6 PUSH1 0x3 ADD SLOAD DUP6 PUSH1 0x0 ADD SLOAD PUSH2 0x2848 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x28C2 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP3 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP PUSH2 0x15F3 CALLER DUP6 DUP6 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x29B4 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP5 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xF279E6A1F5E320CCA91135676D9CB6E44CA8A08C0B88342BCDB1144F6511B568 DUP7 PUSH1 0x40 MLOAD PUSH2 0x163A SWAP2 SWAP1 PUSH2 0x303B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x6 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x16DA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x16D1 SWAP1 PUSH2 0x37DA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x7 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x16F0 JUMPI PUSH2 0x16EF PUSH2 0x355C JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x4 MUL ADD SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH1 0x0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1764 SWAP2 SWAP1 PUSH2 0x34BD JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1781 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x17A5 SWAP2 SWAP1 PUSH2 0x361D JUMP JUMPDEST SWAP1 POP PUSH2 0x17F4 PUSH1 0x6 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x2ACB SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xCE5494BB DUP5 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1851 SWAP2 SWAP1 PUSH2 0x3541 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1870 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1894 SWAP2 SWAP1 PUSH2 0x380F JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x18CF SWAP2 SWAP1 PUSH2 0x34BD JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x18EC JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1910 SWAP2 SWAP1 PUSH2 0x361D JUMP JUMPDEST DUP3 EQ PUSH2 0x1951 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1948 SWAP1 PUSH2 0x3888 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 DUP5 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0xA SLOAD DUP2 JUMP JUMPDEST PUSH2 0x19A9 PUSH2 0x2A3A JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x19C7 PUSH2 0x20BE JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1A1D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1A14 SWAP1 PUSH2 0x3702 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE POP SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x7 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x1AE0 JUMPI PUSH2 0x1ADF PUSH2 0x355C JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x4 MUL ADD SWAP1 POP DUP1 PUSH1 0x2 ADD SLOAD NUMBER GT PUSH2 0x1B01 JUMPI POP PUSH2 0x1C66 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1B60 SWAP2 SWAP1 PUSH2 0x34BD JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1B7D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1BA1 SWAP2 SWAP1 PUSH2 0x361D JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 GT PUSH2 0x1BBB JUMPI NUMBER DUP3 PUSH1 0x2 ADD DUP2 SWAP1 SSTORE POP POP POP PUSH2 0x1C66 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1BCB DUP4 PUSH1 0x2 ADD SLOAD NUMBER PUSH2 0x20E7 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1C0E PUSH1 0x9 SLOAD PUSH2 0x1C00 DUP7 PUSH1 0x1 ADD SLOAD PUSH2 0x1BF2 PUSH1 0x4 SLOAD DUP8 PUSH2 0x2848 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x2848 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x28C2 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0x1C50 PUSH2 0x1C3D DUP5 PUSH2 0x1C2F PUSH5 0xE8D4A51000 DUP6 PUSH2 0x2848 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x28C2 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP6 PUSH1 0x3 ADD SLOAD PUSH2 0x2956 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP5 PUSH1 0x3 ADD DUP2 SWAP1 SSTORE POP NUMBER DUP5 PUSH1 0x2 ADD DUP2 SWAP1 SSTORE POP POP POP POP POP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x7 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x1C7F JUMPI PUSH2 0x1C7E PUSH2 0x355C JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x4 MUL ADD SWAP1 POP PUSH1 0x0 PUSH1 0x8 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP PUSH2 0x1D36 CALLER DUP3 PUSH1 0x0 ADD SLOAD DUP5 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x29B4 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP3 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xBB757047C2B5F3974FE26B7C10F732E7BCE710B0952A71082702781E62AE0595 DUP4 PUSH1 0x0 ADD SLOAD PUSH1 0x40 MLOAD PUSH2 0x1D81 SWAP2 SWAP1 PUSH2 0x303B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x0 DUP2 PUSH1 0x0 ADD DUP2 SWAP1 SSTORE POP PUSH1 0x0 DUP2 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x1DB0 PUSH2 0x2A3A JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1DCE PUSH2 0x20BE JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1E24 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1E1B SWAP1 PUSH2 0x3702 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x5 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x1E3E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 POP DUP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x7 DUP1 SLOAD SWAP1 POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1EB1 JUMPI PUSH2 0x1EA0 DUP2 PUSH2 0x1ACA JUMP JUMPDEST DUP1 PUSH2 0x1EAA SWAP1 PUSH2 0x38D7 JUMP JUMPDEST SWAP1 POP PUSH2 0x1E8F JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x1EBD PUSH2 0x2A3A JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1EDB PUSH2 0x20BE JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1F31 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1F28 SWAP1 PUSH2 0x3702 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 ISZERO PUSH2 0x1F40 JUMPI PUSH2 0x1F3F PUSH2 0x1E82 JUMP JUMPDEST JUMPDEST PUSH2 0x1F8C DUP3 PUSH2 0x1F7E PUSH1 0x7 DUP7 DUP2 SLOAD DUP2 LT PUSH2 0x1F5B JUMPI PUSH2 0x1F5A PUSH2 0x355C JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x4 MUL ADD PUSH1 0x1 ADD SLOAD PUSH1 0x9 SLOAD PUSH2 0x290C SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x2956 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x9 DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x7 DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x1FA7 JUMPI PUSH2 0x1FA6 PUSH2 0x355C JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x4 MUL ADD PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP POP POP POP JUMP JUMPDEST PUSH2 0x1FC9 PUSH2 0x2A3A JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1FE7 PUSH2 0x20BE JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x203D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2034 SWAP1 PUSH2 0x3702 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x2047 PUSH1 0x0 PUSH2 0x2C1A JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x6 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xB PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2110 PUSH1 0x5 SLOAD PUSH2 0x2102 DUP6 DUP6 PUSH2 0x290C SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x2848 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x8 PUSH1 0x20 MSTORE DUP2 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP2 POP POP DUP1 PUSH1 0x0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 POP DUP3 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0x2177 PUSH2 0x2A3A JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x2195 PUSH2 0x20BE JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x21EB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x21E2 SWAP1 PUSH2 0x3702 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x3 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0xB PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP3 SUB PUSH2 0x22B0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x22A7 SWAP1 PUSH2 0x396B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x7 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x22C6 JUMPI PUSH2 0x22C5 PUSH2 0x355C JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x4 MUL ADD SWAP1 POP PUSH1 0x0 PUSH1 0x8 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP PUSH2 0x2333 DUP5 PUSH2 0x1ACA JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 ADD SLOAD GT ISZERO PUSH2 0x242D JUMPI PUSH1 0x0 PUSH2 0x238A DUP3 PUSH1 0x1 ADD SLOAD PUSH2 0x237C PUSH5 0xE8D4A51000 PUSH2 0x236E DUP8 PUSH1 0x3 ADD SLOAD DUP8 PUSH1 0x0 ADD SLOAD PUSH2 0x2848 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x28C2 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x290C SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 GT ISZERO PUSH2 0x242B JUMPI PUSH2 0x23E7 DUP2 PUSH1 0xB PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x2956 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0xB PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP JUMPDEST POP JUMPDEST PUSH2 0x247E CALLER ADDRESS DUP6 DUP6 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x2A42 SWAP1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x2495 DUP4 DUP3 PUSH1 0x0 ADD SLOAD PUSH2 0x2956 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP2 PUSH1 0x0 ADD DUP2 SWAP1 SSTORE POP PUSH2 0x24CF PUSH5 0xE8D4A51000 PUSH2 0x24C1 DUP5 PUSH1 0x3 ADD SLOAD DUP5 PUSH1 0x0 ADD SLOAD PUSH2 0x2848 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x28C2 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP2 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP DUP4 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x90890809C654F11D6E72A28FA60149770A0D11EC6C92319D6CEB2BB0A4EA1A15 DUP6 PUSH1 0x40 MLOAD PUSH2 0x251E SWAP2 SWAP1 PUSH2 0x303B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH2 0x2534 PUSH2 0x2A3A JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x2552 PUSH2 0x20BE JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x25A8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x259F SWAP1 PUSH2 0x3702 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x2617 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x260E SWAP1 PUSH2 0x39FD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x2620 DUP2 PUSH2 0x2C1A JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x7 DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x263A JUMPI PUSH2 0x2639 PUSH2 0x355C JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x4 MUL ADD SWAP1 POP PUSH1 0x0 PUSH1 0x8 PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP PUSH1 0x0 DUP3 PUSH1 0x3 ADD SLOAD SWAP1 POP PUSH1 0x0 DUP4 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2706 SWAP2 SWAP1 PUSH2 0x34BD JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2723 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2747 SWAP2 SWAP1 PUSH2 0x361D JUMP JUMPDEST SWAP1 POP DUP4 PUSH1 0x2 ADD SLOAD NUMBER GT DUP1 ISZERO PUSH2 0x275D JUMPI POP PUSH1 0x0 DUP2 EQ ISZERO JUMPDEST ISZERO PUSH2 0x27F8 JUMPI PUSH1 0x0 PUSH2 0x2772 DUP6 PUSH1 0x2 ADD SLOAD NUMBER PUSH2 0x20E7 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x27B5 PUSH1 0x9 SLOAD PUSH2 0x27A7 DUP9 PUSH1 0x1 ADD SLOAD PUSH2 0x2799 PUSH1 0x4 SLOAD DUP8 PUSH2 0x2848 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x2848 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x28C2 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0x27F3 PUSH2 0x27E4 DUP5 PUSH2 0x27D6 PUSH5 0xE8D4A51000 DUP6 PUSH2 0x2848 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x28C2 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP6 PUSH2 0x2956 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP4 POP POP POP JUMPDEST PUSH2 0x283C DUP4 PUSH1 0x1 ADD SLOAD PUSH2 0x282E PUSH5 0xE8D4A51000 PUSH2 0x2820 DUP7 DUP9 PUSH1 0x0 ADD SLOAD PUSH2 0x2848 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x28C2 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x290C SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP5 POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 SUB PUSH2 0x285A JUMPI PUSH1 0x0 SWAP1 POP PUSH2 0x28BC JUMP JUMPDEST PUSH1 0x0 DUP3 DUP5 PUSH2 0x2868 SWAP2 SWAP1 PUSH2 0x3A1D JUMP JUMPDEST SWAP1 POP DUP3 DUP5 DUP3 PUSH2 0x2877 SWAP2 SWAP1 PUSH2 0x3AA6 JUMP JUMPDEST EQ PUSH2 0x28B7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x28AE SWAP1 PUSH2 0x3B49 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2904 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1A DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x536166654D6174683A206469766973696F6E206279207A65726F000000000000 DUP2 MSTORE POP PUSH2 0x2CDE JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x294E DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1E DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x536166654D6174683A207375627472616374696F6E206F766572666C6F770000 DUP2 MSTORE POP PUSH2 0x2D41 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 DUP5 PUSH2 0x2965 SWAP2 SWAP1 PUSH2 0x3B69 JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x29AA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x29A1 SWAP1 PUSH2 0x3C0B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2A35 DUP4 PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP5 DUP5 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x29D3 SWAP3 SWAP2 SWAP1 PUSH2 0x3C2B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x2DA5 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x2AC5 DUP5 PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP6 DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x2A63 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3C54 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x2DA5 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 EQ DUP1 PUSH2 0x2B55 JUMPI POP PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xDD62ED3E ADDRESS DUP6 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2B12 SWAP3 SWAP2 SWAP1 PUSH2 0x3C8B JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2B2F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2B53 SWAP2 SWAP1 PUSH2 0x361D JUMP JUMPDEST EQ JUMPDEST PUSH2 0x2B94 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2B8B SWAP1 PUSH2 0x3D26 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x2C15 DUP4 PUSH4 0x95EA7B3 PUSH1 0xE0 SHL DUP5 DUP5 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x2BB3 SWAP3 SWAP2 SWAP1 PUSH2 0x3C2B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x2DA5 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 GT DUP3 SWAP1 PUSH2 0x2D25 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2D1C SWAP2 SWAP1 PUSH2 0x3DCE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x0 DUP4 DUP6 PUSH2 0x2D34 SWAP2 SWAP1 PUSH2 0x3AA6 JUMP JUMPDEST SWAP1 POP DUP1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP4 DUP4 GT ISZERO DUP3 SWAP1 PUSH2 0x2D89 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2D80 SWAP2 SWAP1 PUSH2 0x3DCE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x0 DUP4 DUP6 PUSH2 0x2D98 SWAP2 SWAP1 PUSH2 0x3DF0 JUMP JUMPDEST SWAP1 POP DUP1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2E07 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564 DUP2 MSTORE POP DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x2E6C SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD GT ISZERO PUSH2 0x2E67 JUMPI DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x2E27 SWAP2 SWAP1 PUSH2 0x3E39 JUMP JUMPDEST PUSH2 0x2E66 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2E5D SWAP1 PUSH2 0x3ED8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x2E7B DUP5 DUP5 PUSH1 0x0 DUP6 PUSH2 0x2E84 JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 SELFBALANCE LT ISZERO PUSH2 0x2EC9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2EC0 SWAP1 PUSH2 0x3F6A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x2ED2 DUP6 PUSH2 0x2F98 JUMP JUMPDEST PUSH2 0x2F11 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2F08 SWAP1 PUSH2 0x3FD6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 DUP8 PUSH1 0x40 MLOAD PUSH2 0x2F3A SWAP2 SWAP1 PUSH2 0x403D JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x2F77 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x2F7C JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x2F8C DUP3 DUP3 DUP7 PUSH2 0x2FBB JUMP JUMPDEST SWAP3 POP POP POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0x2FCB JUMPI DUP3 SWAP1 POP PUSH2 0x301B JUMP JUMPDEST PUSH1 0x0 DUP4 MLOAD GT ISZERO PUSH2 0x2FDE JUMPI DUP3 MLOAD DUP1 DUP5 PUSH1 0x20 ADD REVERT JUMPDEST DUP2 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3012 SWAP2 SWAP1 PUSH2 0x3DCE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3035 DUP2 PUSH2 0x3022 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x3050 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x302C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x3064 DUP2 PUSH2 0x3022 JUMP JUMPDEST DUP2 EQ PUSH2 0x306F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x3081 DUP2 PUSH2 0x305B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x309D JUMPI PUSH2 0x309C PUSH2 0x3056 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x30AB DUP5 DUP3 DUP6 ADD PUSH2 0x3072 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x30F9 PUSH2 0x30F4 PUSH2 0x30EF DUP5 PUSH2 0x30B4 JUMP JUMPDEST PUSH2 0x30D4 JUMP JUMPDEST PUSH2 0x30B4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x310B DUP3 PUSH2 0x30DE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x311D DUP3 PUSH2 0x3100 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x312D DUP2 PUSH2 0x3112 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x3148 PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x3124 JUMP JUMPDEST PUSH2 0x3155 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x302C JUMP JUMPDEST PUSH2 0x3162 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x302C JUMP JUMPDEST PUSH2 0x316F PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x302C JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x318F JUMPI PUSH2 0x318E PUSH2 0x3056 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x319D DUP6 DUP3 DUP7 ADD PUSH2 0x3072 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x31AE DUP6 DUP3 DUP7 ADD PUSH2 0x3072 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x31C3 DUP3 PUSH2 0x30B4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x31D5 DUP3 PUSH2 0x31B8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x31E5 DUP2 PUSH2 0x31CA JUMP JUMPDEST DUP2 EQ PUSH2 0x31F0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x3202 DUP2 PUSH2 0x31DC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x321D DUP2 PUSH2 0x3208 JUMP JUMPDEST DUP2 EQ PUSH2 0x3228 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x323A DUP2 PUSH2 0x3214 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x3259 JUMPI PUSH2 0x3258 PUSH2 0x3056 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3267 DUP7 DUP3 DUP8 ADD PUSH2 0x3072 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x3278 DUP7 DUP3 DUP8 ADD PUSH2 0x31F3 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x3289 DUP7 DUP3 DUP8 ADD PUSH2 0x322B JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x329E DUP3 PUSH2 0x31B8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x32AE DUP2 PUSH2 0x3293 JUMP JUMPDEST DUP2 EQ PUSH2 0x32B9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x32CB DUP2 PUSH2 0x32A5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x32E7 JUMPI PUSH2 0x32E6 PUSH2 0x3056 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x32F5 DUP5 DUP3 DUP6 ADD PUSH2 0x32BC JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3309 DUP3 PUSH2 0x31B8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3319 DUP2 PUSH2 0x32FE JUMP JUMPDEST DUP2 EQ PUSH2 0x3324 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x3336 DUP2 PUSH2 0x3310 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x3353 JUMPI PUSH2 0x3352 PUSH2 0x3056 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3361 DUP6 DUP3 DUP7 ADD PUSH2 0x3327 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x3372 DUP6 DUP3 DUP7 ADD PUSH2 0x3072 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3387 DUP3 PUSH2 0x3100 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3397 DUP2 PUSH2 0x337C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x33B2 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x338E JUMP JUMPDEST PUSH2 0x33BF PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x302C JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x33DF JUMPI PUSH2 0x33DE PUSH2 0x3056 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x33ED DUP7 DUP3 DUP8 ADD PUSH2 0x3072 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x33FE DUP7 DUP3 DUP8 ADD PUSH2 0x3072 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x340F DUP7 DUP3 DUP8 ADD PUSH2 0x322B JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3424 DUP3 PUSH2 0x3100 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3434 DUP2 PUSH2 0x3419 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x344F PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x342B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x345E DUP2 PUSH2 0x31B8 JUMP JUMPDEST DUP2 EQ PUSH2 0x3469 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x347B DUP2 PUSH2 0x3455 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3497 JUMPI PUSH2 0x3496 PUSH2 0x3056 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x34A5 DUP5 DUP3 DUP6 ADD PUSH2 0x346C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x34B7 DUP2 PUSH2 0x31B8 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x34D2 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x34AE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x34EF JUMPI PUSH2 0x34EE PUSH2 0x3056 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x34FD DUP6 DUP3 DUP7 ADD PUSH2 0x3072 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x350E DUP6 DUP3 DUP7 ADD PUSH2 0x346C JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x352D PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x302C JUMP JUMPDEST PUSH2 0x353A PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x302C JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x3556 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x3124 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x77697468647261773A206E6F7420676F6F640000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x35D2 PUSH1 0x12 DUP4 PUSH2 0x358B JUMP JUMPDEST SWAP2 POP PUSH2 0x35DD DUP3 PUSH2 0x359C JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3601 DUP2 PUSH2 0x35C5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x3617 DUP2 PUSH2 0x305B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3633 JUMPI PUSH2 0x3632 PUSH2 0x3056 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3641 DUP5 DUP3 DUP6 ADD PUSH2 0x3608 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x506F776572206973206E6F7420656E6F75676800000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3680 PUSH1 0x13 DUP4 PUSH2 0x358B JUMP JUMPDEST SWAP2 POP PUSH2 0x368B DUP3 PUSH2 0x364A JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x36AF DUP2 PUSH2 0x3673 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x36EC PUSH1 0x20 DUP4 PUSH2 0x358B JUMP JUMPDEST SWAP2 POP PUSH2 0x36F7 DUP3 PUSH2 0x36B6 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x371B DUP2 PUSH2 0x36DF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x776974686472617720506F77657220627920756E7374616B696E670000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3758 PUSH1 0x1B DUP4 PUSH2 0x358B JUMP JUMPDEST SWAP2 POP PUSH2 0x3763 DUP3 PUSH2 0x3722 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3787 DUP2 PUSH2 0x374B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x6D6967726174653A206E6F206D69677261746F72000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x37C4 PUSH1 0x14 DUP4 PUSH2 0x358B JUMP JUMPDEST SWAP2 POP PUSH2 0x37CF DUP3 PUSH2 0x378E JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x37F3 DUP2 PUSH2 0x37B7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x3809 DUP2 PUSH2 0x31DC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3825 JUMPI PUSH2 0x3824 PUSH2 0x3056 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3833 DUP5 DUP3 DUP6 ADD PUSH2 0x37FA JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x6D6967726174653A206261640000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3872 PUSH1 0xC DUP4 PUSH2 0x358B JUMP JUMPDEST SWAP2 POP PUSH2 0x387D DUP3 PUSH2 0x383C JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x38A1 DUP2 PUSH2 0x3865 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x38E2 DUP3 PUSH2 0x3022 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x3914 JUMPI PUSH2 0x3913 PUSH2 0x38A8 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x6465706F73697420506F776572206279207374616B696E670000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3955 PUSH1 0x18 DUP4 PUSH2 0x358B JUMP JUMPDEST SWAP2 POP PUSH2 0x3960 DUP3 PUSH2 0x391F JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3984 DUP2 PUSH2 0x3948 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x39E7 PUSH1 0x26 DUP4 PUSH2 0x358B JUMP JUMPDEST SWAP2 POP PUSH2 0x39F2 DUP3 PUSH2 0x398B JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3A16 DUP2 PUSH2 0x39DA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3A28 DUP3 PUSH2 0x3022 JUMP JUMPDEST SWAP2 POP PUSH2 0x3A33 DUP4 PUSH2 0x3022 JUMP JUMPDEST SWAP3 POP DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x3A6C JUMPI PUSH2 0x3A6B PUSH2 0x38A8 JUMP JUMPDEST JUMPDEST DUP3 DUP3 MUL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x3AB1 DUP3 PUSH2 0x3022 JUMP JUMPDEST SWAP2 POP PUSH2 0x3ABC DUP4 PUSH2 0x3022 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x3ACC JUMPI PUSH2 0x3ACB PUSH2 0x3A77 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x536166654D6174683A206D756C7469706C69636174696F6E206F766572666C6F PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7700000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3B33 PUSH1 0x21 DUP4 PUSH2 0x358B JUMP JUMPDEST SWAP2 POP PUSH2 0x3B3E DUP3 PUSH2 0x3AD7 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3B62 DUP2 PUSH2 0x3B26 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3B74 DUP3 PUSH2 0x3022 JUMP JUMPDEST SWAP2 POP PUSH2 0x3B7F DUP4 PUSH2 0x3022 JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x3BB4 JUMPI PUSH2 0x3BB3 PUSH2 0x38A8 JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3BF5 PUSH1 0x1B DUP4 PUSH2 0x358B JUMP JUMPDEST SWAP2 POP PUSH2 0x3C00 DUP3 PUSH2 0x3BBF JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3C24 DUP2 PUSH2 0x3BE8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x3C40 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x34AE JUMP JUMPDEST PUSH2 0x3C4D PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x302C JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x3C69 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x34AE JUMP JUMPDEST PUSH2 0x3C76 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x34AE JUMP JUMPDEST PUSH2 0x3C83 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x302C JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x3CA0 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x34AE JUMP JUMPDEST PUSH2 0x3CAD PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x34AE JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x5361666545524332303A20617070726F76652066726F6D206E6F6E2D7A65726F PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x20746F206E6F6E2D7A65726F20616C6C6F77616E636500000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3D10 PUSH1 0x36 DUP4 PUSH2 0x358B JUMP JUMPDEST SWAP2 POP PUSH2 0x3D1B DUP3 PUSH2 0x3CB4 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3D3F DUP2 PUSH2 0x3D03 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x3D6F JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x3D54 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x3D7E JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3DA0 DUP3 PUSH2 0x3D46 JUMP JUMPDEST PUSH2 0x3DAA DUP2 DUP6 PUSH2 0x358B JUMP JUMPDEST SWAP4 POP PUSH2 0x3DBA DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x3D51 JUMP JUMPDEST PUSH2 0x3DC3 DUP2 PUSH2 0x3D84 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3DE8 DUP2 DUP5 PUSH2 0x3D95 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3DFB DUP3 PUSH2 0x3022 JUMP JUMPDEST SWAP2 POP PUSH2 0x3E06 DUP4 PUSH2 0x3022 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0x3E19 JUMPI PUSH2 0x3E18 PUSH2 0x38A8 JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x3E33 DUP2 PUSH2 0x3214 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3E4F JUMPI PUSH2 0x3E4E PUSH2 0x3056 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3E5D DUP5 DUP3 DUP6 ADD PUSH2 0x3E24 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x5361666545524332303A204552433230206F7065726174696F6E20646964206E PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6F74207375636365656400000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3EC2 PUSH1 0x2A DUP4 PUSH2 0x358B JUMP JUMPDEST SWAP2 POP PUSH2 0x3ECD DUP3 PUSH2 0x3E66 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3EF1 DUP2 PUSH2 0x3EB5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x416464726573733A20696E73756666696369656E742062616C616E636520666F PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x722063616C6C0000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3F54 PUSH1 0x26 DUP4 PUSH2 0x358B JUMP JUMPDEST SWAP2 POP PUSH2 0x3F5F DUP3 PUSH2 0x3EF8 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3F83 DUP2 PUSH2 0x3F47 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3FC0 PUSH1 0x1D DUP4 PUSH2 0x358B JUMP JUMPDEST SWAP2 POP PUSH2 0x3FCB DUP3 PUSH2 0x3F8A JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3FEF DUP2 PUSH2 0x3FB3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4017 DUP3 PUSH2 0x3FF6 JUMP JUMPDEST PUSH2 0x4021 DUP2 DUP6 PUSH2 0x4001 JUMP JUMPDEST SWAP4 POP PUSH2 0x4031 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x3D51 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4049 DUP3 DUP5 PUSH2 0x400C JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x24 PUSH29 0x71767CA2691BBF499941BC34A7325A3D199DF45CCA4CBD28118B574473 SWAP6 PUSH5 0x736F6C6343 STOP ADDMOD 0xF STOP CALLER ",
							"sourceMap": "22111:12975:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;26973:95;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;33679:747;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;23993:26;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;24234:34;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;25566:1268;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;27237:560;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;28275:102;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;34974:109;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;32830:797;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;31990:787;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;28500:491;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;24326:25;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;25352:206;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;30382:690;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;34505:356;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;23707:28;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;26842:123;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;23533:26;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;30126:180;;;:::i;:::-;;27894:305;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;20756:103;;;:::i;:::-;;23930:29;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;23790:35;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;25226:118;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;20105:87;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;29067:144;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;24075:64;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;23593:17;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;34873:95;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;24360:47;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;23638:22;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;31142:796;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;21014:201;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;29276:767;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;26973:95;27018:7;27045:8;:15;;;;27038:22;;26973:95;:::o;33679:747::-;33736:21;33760:8;33769:1;33760:11;;;;;;;;:::i;:::-;;;;;;;;;;;;33736:35;;33782:21;33806:8;:11;33815:1;33806:11;;;;;;;;;;;:23;33818:10;33806:23;;;;;;;;;;;;;;;33782:47;;33863:7;33848:4;:11;;;:22;;33840:53;;;;;;;;;;;;:::i;:::-;;;;;;;;;33904:13;33915:1;33904:10;:13::i;:::-;33928:15;33946:69;33999:4;:15;;;33946:48;33989:4;33946:38;33962:4;:21;;;33946:4;:11;;;:15;;:38;;;;:::i;:::-;:42;;:48;;;;:::i;:::-;:52;;:69;;;;:::i;:::-;33928:87;;34039:1;34029:7;:11;34026:107;;;34084:37;34113:7;34084:12;:24;34097:10;34084:24;;;;;;;;;;;;;;;;:28;;:37;;;;:::i;:::-;34057:12;:24;34070:10;34057:24;;;;;;;;;;;;;;;:64;;;;34026:107;34156:1;34146:7;:11;34143:151;;;34188:24;34204:7;34188:4;:11;;;:15;;:24;;;;:::i;:::-;34174:4;:11;;:38;;;;34227:55;34261:10;34274:7;34227:4;:12;;;;;;;;;;;;:25;;;;:55;;;;;:::i;:::-;34143:151;34322:48;34365:4;34322:38;34338:4;:21;;;34322:4;:11;;;:15;;:38;;;;:::i;:::-;:42;;:48;;;;:::i;:::-;34304:4;:15;;:66;;;;34407:1;34395:10;34386:32;;;34410:7;34386:32;;;;;;:::i;:::-;;;;;;;;33725:701;;;33679:747;:::o;23993:26::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;24234:34::-;;;;:::o;25566:1268::-;25637:21;25661:8;25670:4;25661:14;;;;;;;;:::i;:::-;;;;;;;;;;;;25637:38;;25686:21;25710:8;:14;25719:4;25710:14;;;;;;;;;;;:26;25725:10;25710:26;;;;;;;;;;;;;;;25686:50;;25747:24;25774:4;:21;;;25747:48;;25806:16;25825:4;:12;;;;;;;;;;;;:22;;;25856:4;25825:37;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;25806:56;;25892:4;:20;;;25877:12;:35;:52;;;;;25928:1;25916:8;:13;;25877:52;25873:354;;;25946:18;25967:49;25981:4;:20;;;26003:12;25967:13;:49::i;:::-;25946:70;;26031:19;26053:71;26108:15;;26053:50;26087:4;:15;;;26053:29;26068:13;;26053:10;:14;;:29;;;;:::i;:::-;:33;;:50;;;;:::i;:::-;:54;;:71;;;;:::i;:::-;26031:93;;26158:57;26179:35;26205:8;26179:21;26195:4;26179:11;:15;;:21;;;;:::i;:::-;:25;;:35;;;;:::i;:::-;26158:16;:20;;:57;;;;:::i;:::-;26139:76;;25931:296;;25873:354;26237:15;26255:64;26303:4;:15;;;26255:43;26293:4;26255:33;26271:16;26255:4;:11;;;:15;;:33;;;;:::i;:::-;:37;;:43;;;;:::i;:::-;:47;;:64;;;;:::i;:::-;26237:82;;26330:20;26353:8;26362:5;26353:15;;;;;;;;:::i;:::-;;;;;;;;;;;;26330:38;;26379:13;26395:37;26407:12;:24;26420:10;26407:24;;;;;;;;;;;;;;;;26395:7;:11;;:37;;;;:::i;:::-;26379:53;;26454:3;:9;;;26446:5;:17;26443:188;;;26490:1;26482:4;:9;26479:63;;26511:15;26524:1;26511:12;:15::i;:::-;26479:63;26567:1;26559:4;:9;26556:64;;26588:16;26597:4;26602:1;26588:8;:16::i;:::-;26556:64;26443:188;26661:12;:24;26674:10;26661:24;;;;;;;;;;;;;;;;26649:3;:9;;;:36;26641:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;26747:39;26776:3;:9;;;26747:12;:24;26760:10;26747:24;;;;;;;;;;;;;;;;:28;;:39;;;;:::i;:::-;26720:12;:24;26733:10;26720:24;;;;;;;;;;;;;;;:66;;;;26797:3;:7;;;;;;;;;;;;:17;;;26815:10;26797:29;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;25626:1208;;;;;;;25566:1268;;:::o;27237:560::-;20336:12;:10;:12::i;:::-;20325:23;;:7;:5;:7::i;:::-;:23;;;20317:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;27340:11:::1;27336:61;;;27368:17;:15;:17::i;:::-;27336:61;27407:23;27448:10;;27433:12;:25;:53;;27476:10;;27433:53;;;27461:12;27433:53;27407:79;;27515:32;27535:11;27515:15;;:19;;:32;;;;:::i;:::-;27497:15;:50;;;;27558:8;27586:192;;;;;;;;27623:8;27586:192;;;;;;27662:11;27586:192;;;;27709:15;27586:192;;;;27761:1;27586:192;;::::0;27558:231:::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;27325:472;27237:560:::0;;;:::o;28275:102::-;20336:12;:10;:12::i;:::-;20325:23;;:7;:5;:7::i;:::-;:23;;;20317:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;28360:9:::1;28349:8;;:20;;;;;;;;;;;;;;;;;;28275:102:::0;:::o;34974:109::-;20336:12;:10;:12::i;:::-;20325:23;;:7;:5;:7::i;:::-;:23;;;20317:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;35066:9:::1;35050:13;:25;;;;34974:109:::0;:::o;32830:797::-;32887:21;32911:8;32920:1;32911:11;;;;;;;;:::i;:::-;;;;;;;;;;;;32887:35;;32933:21;32957:8;:11;32966:1;32957:11;;;;;;;;;;;:32;32977:10;32957:32;;;;;;;;;;;;;;;32933:56;;33010:13;33021:1;33010:10;:13::i;:::-;33052:1;33038:4;:11;;;:15;33034:282;;;33070:15;33088:69;33141:4;:15;;;33088:48;33131:4;33088:38;33104:4;:21;;;33088:4;:11;;;:15;;:38;;;;:::i;:::-;:42;;:48;;;;:::i;:::-;:52;;:69;;;;:::i;:::-;33070:87;;33185:1;33175:7;:11;33172:133;;;33243:46;33281:7;33243:12;:33;33264:10;33243:33;;;;;;;;;;;;;;;;:37;;:46;;;;:::i;:::-;33207:12;:33;33228:10;33207:33;;;;;;;;;;;;;;;:82;;;;33172:133;33055:261;33034:282;33339:1;33329:7;:11;33326:170;;;33357:74;33395:10;33416:4;33423:7;33357:4;:12;;;;;;;;;;;;:29;;;;:74;;;;;;:::i;:::-;33460:24;33476:7;33460:4;:11;;;:15;;:24;;;;:::i;:::-;33446:4;:11;;:38;;;;33326:170;33524:48;33567:4;33524:38;33540:4;:21;;;33524:4;:11;;;:15;;:38;;;;:::i;:::-;:42;;:48;;;;:::i;:::-;33506:4;:15;;:66;;;;33608:1;33596:10;33588:31;;;33611:7;33588:31;;;;;;:::i;:::-;;;;;;;;32876:751;;32830:797;:::o;31990:787::-;32076:1;32068:4;:9;32059:50;;;;;;;;;;;;:::i;:::-;;;;;;;;;32122:21;32146:8;32155:4;32146:14;;;;;;;;:::i;:::-;;;;;;;;;;;;32122:38;;32171:21;32195:8;:14;32204:4;32195:14;;;;;;;;;;;:26;32210:10;32195:26;;;;;;;;;;;;;;;32171:50;;32255:7;32240:4;:11;;;:22;;32232:53;;;;;;;;;;;;:::i;:::-;;;;;;;;;32296:16;32307:4;32296:10;:16::i;:::-;32323:15;32341:69;32394:4;:15;;;32341:48;32384:4;32341:38;32357:4;:21;;;32341:4;:11;;;:15;;:38;;;;:::i;:::-;:42;;:48;;;;:::i;:::-;:52;;:69;;;;:::i;:::-;32323:87;;32434:1;32424:7;:11;32421:106;;;32478:37;32507:7;32478:12;:24;32491:10;32478:24;;;;;;;;;;;;;;;;:28;;:37;;;;:::i;:::-;32451:12;:24;32464:10;32451:24;;;;;;;;;;;;;;;:64;;;;32421:106;32551:24;32567:7;32551:4;:11;;;:15;;:24;;;;:::i;:::-;32537:4;:11;;:38;;;;32604:48;32647:4;32604:38;32620:4;:21;;;32604:4;:11;;;:15;;:38;;;;:::i;:::-;:42;;:48;;;;:::i;:::-;32586:4;:15;;:66;;;;32663:55;32697:10;32710:7;32663:4;:12;;;;;;;;;;;;:25;;;;:55;;;;;:::i;:::-;32755:4;32743:10;32734:35;;;32761:7;32734:35;;;;;;:::i;:::-;;;;;;;;32046:731;;;31990:787;;:::o;28500:491::-;28586:1;28557:31;;28565:8;;;;;;;;;;;28557:31;;;28549:64;;;;;;;;;;;;:::i;:::-;;;;;;;;;28624:21;28648:8;28657:4;28648:14;;;;;;;;:::i;:::-;;;;;;;;;;;;28624:38;;28673:14;28690:4;:12;;;;;;;;;;;;28673:29;;28713:11;28727:7;:17;;;28753:4;28727:32;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;28713:46;;28770:43;28798:8;;;;;;;;;;;28809:3;28770:7;:19;;;;:43;;;;;:::i;:::-;28824:17;28844:8;;;;;;;;;;;:16;;;28861:7;28844:25;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;28824:45;;28895:10;:20;;;28924:4;28895:35;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;28888:3;:42;28880:67;;;;;;;;;;;;:::i;:::-;;;;;;;;;28973:10;28958:4;:12;;;:25;;;;;;;;;;;;;;;;;;28538:453;;;;28500:491;:::o;24326:25::-;;;;:::o;25352:206::-;20336:12;:10;:12::i;:::-;20325:23;;:7;:5;:7::i;:::-;:23;;;20317:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;25426:8:::1;25454:85;;;;;;;;25487:4;25454:85;;;;;;25517:6;25454:85;;::::0;25426:124:::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;25352:206:::0;;:::o;30382:690::-;30434:21;30458:8;30467:4;30458:14;;;;;;;;:::i;:::-;;;;;;;;;;;;30434:38;;30503:4;:20;;;30487:12;:36;30483:75;;30540:7;;;30483:75;30568:16;30587:4;:12;;;;;;;;;;;;:22;;;30618:4;30587:37;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;30568:56;;30651:1;30639:8;:13;30635:102;;30692:12;30669:4;:20;;:35;;;;30719:7;;;;30635:102;30747:18;30768:49;30782:4;:20;;;30804:12;30768:13;:49::i;:::-;30747:70;;30828:19;30850:71;30905:15;;30850:50;30884:4;:15;;;30850:29;30865:13;;30850:10;:14;;:29;;;;:::i;:::-;:33;;:50;;;;:::i;:::-;:54;;:71;;;;:::i;:::-;30828:93;;30956:62;30982:35;31008:8;30982:21;30998:4;30982:11;:15;;:21;;;;:::i;:::-;:25;;:35;;;;:::i;:::-;30956:4;:21;;;:25;;:62;;;;:::i;:::-;30932:4;:21;;:86;;;;31052:12;31029:4;:20;;:35;;;;30423:649;;;;30382:690;;:::o;34505:356::-;34564:21;34588:8;34597:4;34588:14;;;;;;;;:::i;:::-;;;;;;;;;;;;34564:38;;34613:21;34637:8;:14;34646:4;34637:14;;;;;;;;;;;:26;34652:10;34637:26;;;;;;;;;;;;;;;34613:50;;34674:59;34708:10;34721:4;:11;;;34674:4;:12;;;;;;;;;;;;:25;;;;:59;;;;;:::i;:::-;34779:4;34767:10;34749:48;;;34785:4;:11;;;34749:48;;;;;;:::i;:::-;;;;;;;;34822:1;34808:4;:11;;:15;;;;34852:1;34834:4;:15;;:19;;;;34553:308;;34505:356;:::o;23707:28::-;;;;:::o;26842:123::-;20336:12;:10;:12::i;:::-;20325:23;;:7;:5;:7::i;:::-;:23;;;20317:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;26941:16:::1;26922;:35;;;;26842:123:::0;:::o;23533:26::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;30126:180::-;30171:14;30188:8;:15;;;;30171:32;;30219:11;30214:85;30242:6;30236:3;:12;30214:85;;;30272:15;30283:3;30272:10;:15::i;:::-;30250:5;;;;:::i;:::-;;;30214:85;;;;30160:146;30126:180::o;27894:305::-;20336:12;:10;:12::i;:::-;20325:23;;:7;:5;:7::i;:::-;:23;;;20317:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;27993:11:::1;27989:61;;;28021:17;:15;:17::i;:::-;27989:61;28078:63;28129:11;28078:46;28098:8;28107:4;28098:14;;;;;;;;:::i;:::-;;;;;;;;;;;;:25;;;28078:15;;:19;;:46;;;;:::i;:::-;:50;;:63;;;;:::i;:::-;28060:15;:81;;;;28180:11;28152:8;28161:4;28152:14;;;;;;;;:::i;:::-;;;;;;;;;;;;:25;;:39;;;;27894:305:::0;;;:::o;20756:103::-;20336:12;:10;:12::i;:::-;20325:23;;:7;:5;:7::i;:::-;:23;;;20317:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;20821:30:::1;20848:1;20821:18;:30::i;:::-;20756:103::o:0;23930:29::-;;;;;;;;;;;;;:::o;23790:35::-;;;;:::o;25226:118::-;25288:7;25315:12;:21;25328:7;25315:21;;;;;;;;;;;;;;;;25308:28;;25226:118;;;:::o;20105:87::-;20151:7;20178:6;;;;;;;;;;;20171:13;;20105:87;:::o;29067:144::-;29139:7;29167:36;29186:16;;29167:14;29175:5;29167:3;:7;;:14;;;;:::i;:::-;:18;;:36;;;;:::i;:::-;29160:43;;29067:144;;;;:::o;24075:64::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;23593:17::-;;;;;;;;;;;;;:::o;34873:95::-;20336:12;:10;:12::i;:::-;20325:23;;:7;:5;:7::i;:::-;:23;;;20317:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;34952:8:::1;34942:7;;:18;;;;;;;;;;;;;;;;;;34873:95:::0;:::o;24360:47::-;;;;;;;;;;;;;;;;;:::o;23638:22::-;;;;;;;;;;;;;:::o;31142:796::-;31227:1;31219:4;:9;31210:47;;;;;;;;;;;;:::i;:::-;;;;;;;;;31270:21;31294:8;31303:4;31294:14;;;;;;;;:::i;:::-;;;;;;;;;;;;31270:38;;31319:21;31343:8;:14;31352:4;31343:14;;;;;;;;;;;:26;31358:10;31343:26;;;;;;;;;;;;;;;31319:50;;31380:16;31391:4;31380:10;:16::i;:::-;31425:1;31411:4;:11;;;:15;31407:263;;;31443:15;31461:69;31514:4;:15;;;31461:48;31504:4;31461:38;31477:4;:21;;;31461:4;:11;;;:15;;:38;;;;:::i;:::-;:42;;:48;;;;:::i;:::-;:52;;:69;;;;:::i;:::-;31443:87;;31558:1;31548:7;:11;31545:114;;;31606:37;31635:7;31606:12;:24;31619:10;31606:24;;;;;;;;;;;;;;;;:28;;:37;;;;:::i;:::-;31579:12;:24;31592:10;31579:24;;;;;;;;;;;;;;;:64;;;;31545:114;31428:242;31407:263;31680:74;31718:10;31739:4;31746:7;31680:4;:12;;;;;;;;;;;;:29;;;;:74;;;;;;:::i;:::-;31779:24;31795:7;31779:4;:11;;;:15;;:24;;;;:::i;:::-;31765:4;:11;;:38;;;;31832:48;31875:4;31832:38;31848:4;:21;;;31832:4;:11;;;:15;;:38;;;;:::i;:::-;:42;;:48;;;;:::i;:::-;31814:4;:15;;:66;;;;31916:4;31904:10;31896:34;;;31922:7;31896:34;;;;;;:::i;:::-;;;;;;;;31197:741;;31142:796;;:::o;21014:201::-;20336:12;:10;:12::i;:::-;20325:23;;:7;:5;:7::i;:::-;:23;;;20317:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;21123:1:::1;21103:22;;:8;:22;;::::0;21095:73:::1;;;;;;;;;;;;:::i;:::-;;;;;;;;;21179:28;21198:8;21179:18;:28::i;:::-;21014:201:::0;:::o;29276:767::-;29350:7;29369:21;29393:8;29402:4;29393:14;;;;;;;;:::i;:::-;;;;;;;;;;;;29369:38;;29418:21;29442:8;:14;29451:4;29442:14;;;;;;;;;;;:21;29457:5;29442:21;;;;;;;;;;;;;;;29418:45;;29474:24;29501:4;:21;;;29474:48;;29533:16;29552:4;:12;;;;;;;;;;;;:22;;;29583:4;29552:37;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;29533:56;;29619:4;:20;;;29604:12;:35;:52;;;;;29655:1;29643:8;:13;;29604:52;29600:354;;;29673:18;29694:49;29708:4;:20;;;29730:12;29694:13;:49::i;:::-;29673:70;;29758:19;29780:71;29835:15;;29780:50;29814:4;:15;;;29780:29;29795:13;;29780:10;:14;;:29;;;;:::i;:::-;:33;;:50;;;;:::i;:::-;:54;;:71;;;;:::i;:::-;29758:93;;29885:57;29906:35;29932:8;29906:21;29922:4;29906:11;:15;;:21;;;;:::i;:::-;:25;;:35;;;;:::i;:::-;29885:16;:20;;:57;;;;:::i;:::-;29866:76;;29658:296;;29600:354;29971:64;30019:4;:15;;;29971:43;30009:4;29971:33;29987:16;29971:4;:11;;;:15;;:33;;;;:::i;:::-;:37;;:43;;;;:::i;:::-;:47;;:64;;;;:::i;:::-;29964:71;;;;;;29276:767;;;;:::o;1757:471::-;1815:7;2065:1;2060;:6;2056:47;;2090:1;2083:8;;;;2056:47;2115:9;2131:1;2127;:5;;;;:::i;:::-;2115:17;;2160:1;2155;2151;:5;;;;:::i;:::-;:10;2143:56;;;;;;;;;;;;:::i;:::-;;;;;;;;;2219:1;2212:8;;;1757:471;;;;;:::o;2696:132::-;2754:7;2781:39;2785:1;2788;2781:39;;;;;;;;;;;;;;;;;:3;:39::i;:::-;2774:46;;2696:132;;;;:::o;841:136::-;899:7;926:43;930:1;933;926:43;;;;;;;;;;;;;;;;;:3;:43::i;:::-;919:50;;841:136;;;;:::o;385:181::-;443:7;463:9;479:1;475;:5;;;;:::i;:::-;463:17;;504:1;499;:6;;491:46;;;;;;;;;;;;:::i;:::-;;;;;;;;;557:1;550:8;;;385:181;;;;:::o;16150:211::-;16267:86;16287:5;16317:23;;;16342:2;16346:5;16294:58;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;16267:19;:86::i;:::-;16150:211;;;:::o;19479:98::-;19532:7;19559:10;19552:17;;19479:98;:::o;16369:248::-;16513:96;16533:5;16563:27;;;16592:4;16598:2;16602:5;16540:68;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;16513:19;:96::i;:::-;16369:248;;;;:::o;16886:616::-;17259:1;17250:5;:10;17249:62;;;;17309:1;17266:5;:15;;;17290:4;17297:7;17266:39;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:44;17249:62;17227:166;;;;;;;;;;;;:::i;:::-;;;;;;;;;17404:90;17424:5;17454:22;;;17478:7;17487:5;17431:62;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;17404:19;:90::i;:::-;16886:616;;;:::o;21375:191::-;21449:16;21468:6;;;;;;;;;;;21449:25;;21494:8;21485:6;;:17;;;;;;;;;;;;;;;;;;21549:8;21518:40;;21539:8;21518:40;;;;;;;;;;;;21438:128;21375:191;:::o;3358:345::-;3444:7;3543:1;3539;:5;3546:12;3531:28;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;3570:9;3586:1;3582;:5;;;;:::i;:::-;3570:17;;3694:1;3687:8;;;3358:345;;;;;:::o;1314:192::-;1400:7;1433:1;1428;:6;;1436:12;1420:29;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;1460:9;1476:1;1472;:5;;;;:::i;:::-;1460:17;;1497:1;1490:8;;;1314:192;;;;;:::o;18723:716::-;19147:23;19173:69;19201:4;19173:69;;;;;;;;;;;;;;;;;19181:5;19173:27;;;;:69;;;;;:::i;:::-;19147:95;;19277:1;19257:10;:17;:21;19253:179;;;19354:10;19343:30;;;;;;;;;;;;:::i;:::-;19335:85;;;;;;;;;;;;:::i;:::-;;;;;;;;;19253:179;18793:646;18723:716;;:::o;11566:229::-;11703:12;11735:52;11757:6;11765:4;11771:1;11774:12;11735:21;:52::i;:::-;11728:59;;11566:229;;;;;:::o;12686:510::-;12856:12;12914:5;12889:21;:30;;12881:81;;;;;;;;;;;;:::i;:::-;;;;;;;;;12981:18;12992:6;12981:10;:18::i;:::-;12973:60;;;;;;;;;;;;:::i;:::-;;;;;;;;;13047:12;13061:23;13088:6;:11;;13107:5;13114:4;13088:31;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13046:73;;;;13137:51;13154:7;13163:10;13175:12;13137:16;:51::i;:::-;13130:58;;;;12686:510;;;;;;:::o;8821:326::-;8881:4;9138:1;9116:7;:19;;;:23;9109:30;;8821:326;;;:::o;15372:712::-;15522:12;15551:7;15547:530;;;15582:10;15575:17;;;;15547:530;15716:1;15696:10;:17;:21;15692:374;;;15894:10;15888:17;15955:15;15942:10;15938:2;15934:19;15927:44;15692:374;16037:12;16030:20;;;;;;;;;;;:::i;:::-;;;;;;;;15372:712;;;;;;:::o;7:77:1:-;44:7;73:5;62:16;;7:77;;;:::o;90:118::-;177:24;195:5;177:24;:::i;:::-;172:3;165:37;90:118;;:::o;214:222::-;307:4;345:2;334:9;330:18;322:26;;358:71;426:1;415:9;411:17;402:6;358:71;:::i;:::-;214:222;;;;:::o;523:117::-;632:1;629;622:12;769:122;842:24;860:5;842:24;:::i;:::-;835:5;832:35;822:63;;881:1;878;871:12;822:63;769:122;:::o;897:139::-;943:5;981:6;968:20;959:29;;997:33;1024:5;997:33;:::i;:::-;897:139;;;;:::o;1042:329::-;1101:6;1150:2;1138:9;1129:7;1125:23;1121:32;1118:119;;;1156:79;;:::i;:::-;1118:119;1276:1;1301:53;1346:7;1337:6;1326:9;1322:22;1301:53;:::i;:::-;1291:63;;1247:117;1042:329;;;;:::o;1377:126::-;1414:7;1454:42;1447:5;1443:54;1432:65;;1377:126;;;:::o;1509:60::-;1537:3;1558:5;1551:12;;1509:60;;;:::o;1575:142::-;1625:9;1658:53;1676:34;1685:24;1703:5;1685:24;:::i;:::-;1676:34;:::i;:::-;1658:53;:::i;:::-;1645:66;;1575:142;;;:::o;1723:126::-;1773:9;1806:37;1837:5;1806:37;:::i;:::-;1793:50;;1723:126;;;:::o;1855:140::-;1919:9;1952:37;1983:5;1952:37;:::i;:::-;1939:50;;1855:140;;;:::o;2001:159::-;2102:51;2147:5;2102:51;:::i;:::-;2097:3;2090:64;2001:159;;:::o;2166:581::-;2357:4;2395:3;2384:9;2380:19;2372:27;;2409:85;2491:1;2480:9;2476:17;2467:6;2409:85;:::i;:::-;2504:72;2572:2;2561:9;2557:18;2548:6;2504:72;:::i;:::-;2586;2654:2;2643:9;2639:18;2630:6;2586:72;:::i;:::-;2668;2736:2;2725:9;2721:18;2712:6;2668:72;:::i;:::-;2166:581;;;;;;;:::o;2753:474::-;2821:6;2829;2878:2;2866:9;2857:7;2853:23;2849:32;2846:119;;;2884:79;;:::i;:::-;2846:119;3004:1;3029:53;3074:7;3065:6;3054:9;3050:22;3029:53;:::i;:::-;3019:63;;2975:117;3131:2;3157:53;3202:7;3193:6;3182:9;3178:22;3157:53;:::i;:::-;3147:63;;3102:118;2753:474;;;;;:::o;3233:96::-;3270:7;3299:24;3317:5;3299:24;:::i;:::-;3288:35;;3233:96;;;:::o;3335:110::-;3386:7;3415:24;3433:5;3415:24;:::i;:::-;3404:35;;3335:110;;;:::o;3451:150::-;3538:38;3570:5;3538:38;:::i;:::-;3531:5;3528:49;3518:77;;3591:1;3588;3581:12;3518:77;3451:150;:::o;3607:167::-;3667:5;3705:6;3692:20;3683:29;;3721:47;3762:5;3721:47;:::i;:::-;3607:167;;;;:::o;3780:90::-;3814:7;3857:5;3850:13;3843:21;3832:32;;3780:90;;;:::o;3876:116::-;3946:21;3961:5;3946:21;:::i;:::-;3939:5;3936:32;3926:60;;3982:1;3979;3972:12;3926:60;3876:116;:::o;3998:133::-;4041:5;4079:6;4066:20;4057:29;;4095:30;4119:5;4095:30;:::i;:::-;3998:133;;;;:::o;4137:641::-;4225:6;4233;4241;4290:2;4278:9;4269:7;4265:23;4261:32;4258:119;;;4296:79;;:::i;:::-;4258:119;4416:1;4441:53;4486:7;4477:6;4466:9;4462:22;4441:53;:::i;:::-;4431:63;;4387:117;4543:2;4569:67;4628:7;4619:6;4608:9;4604:22;4569:67;:::i;:::-;4559:77;;4514:132;4685:2;4711:50;4753:7;4744:6;4733:9;4729:22;4711:50;:::i;:::-;4701:60;;4656:115;4137:641;;;;;:::o;4784:117::-;4842:7;4871:24;4889:5;4871:24;:::i;:::-;4860:35;;4784:117;;;:::o;4907:164::-;5001:45;5040:5;5001:45;:::i;:::-;4994:5;4991:56;4981:84;;5061:1;5058;5051:12;4981:84;4907:164;:::o;5077:181::-;5144:5;5182:6;5169:20;5160:29;;5198:54;5246:5;5198:54;:::i;:::-;5077:181;;;;:::o;5264:371::-;5344:6;5393:2;5381:9;5372:7;5368:23;5364:32;5361:119;;;5399:79;;:::i;:::-;5361:119;5519:1;5544:74;5610:7;5601:6;5590:9;5586:22;5544:74;:::i;:::-;5534:84;;5490:138;5264:371;;;;:::o;5641:111::-;5693:7;5722:24;5740:5;5722:24;:::i;:::-;5711:35;;5641:111;;;:::o;5758:152::-;5846:39;5879:5;5846:39;:::i;:::-;5839:5;5836:50;5826:78;;5900:1;5897;5890:12;5826:78;5758:152;:::o;5916:169::-;5977:5;6015:6;6002:20;5993:29;;6031:48;6073:5;6031:48;:::i;:::-;5916:169;;;;:::o;6091:504::-;6174:6;6182;6231:2;6219:9;6210:7;6206:23;6202:32;6199:119;;;6237:79;;:::i;:::-;6199:119;6357:1;6382:68;6442:7;6433:6;6422:9;6418:22;6382:68;:::i;:::-;6372:78;;6328:132;6499:2;6525:53;6570:7;6561:6;6550:9;6546:22;6525:53;:::i;:::-;6515:63;;6470:118;6091:504;;;;;:::o;6601:141::-;6666:9;6699:37;6730:5;6699:37;:::i;:::-;6686:50;;6601:141;;;:::o;6748:161::-;6850:52;6896:5;6850:52;:::i;:::-;6845:3;6838:65;6748:161;;:::o;6915:362::-;7051:4;7089:2;7078:9;7074:18;7066:26;;7102:86;7185:1;7174:9;7170:17;7161:6;7102:86;:::i;:::-;7198:72;7266:2;7255:9;7251:18;7242:6;7198:72;:::i;:::-;6915:362;;;;;:::o;7283:613::-;7357:6;7365;7373;7422:2;7410:9;7401:7;7397:23;7393:32;7390:119;;;7428:79;;:::i;:::-;7390:119;7548:1;7573:53;7618:7;7609:6;7598:9;7594:22;7573:53;:::i;:::-;7563:63;;7519:117;7675:2;7701:53;7746:7;7737:6;7726:9;7722:22;7701:53;:::i;:::-;7691:63;;7646:118;7803:2;7829:50;7871:7;7862:6;7851:9;7847:22;7829:50;:::i;:::-;7819:60;;7774:115;7283:613;;;;;:::o;7902:147::-;7973:9;8006:37;8037:5;8006:37;:::i;:::-;7993:50;;7902:147;;;:::o;8055:173::-;8163:58;8215:5;8163:58;:::i;:::-;8158:3;8151:71;8055:173;;:::o;8234:264::-;8348:4;8386:2;8375:9;8371:18;8363:26;;8399:92;8488:1;8477:9;8473:17;8464:6;8399:92;:::i;:::-;8234:264;;;;:::o;8504:122::-;8577:24;8595:5;8577:24;:::i;:::-;8570:5;8567:35;8557:63;;8616:1;8613;8606:12;8557:63;8504:122;:::o;8632:139::-;8678:5;8716:6;8703:20;8694:29;;8732:33;8759:5;8732:33;:::i;:::-;8632:139;;;;:::o;8777:329::-;8836:6;8885:2;8873:9;8864:7;8860:23;8856:32;8853:119;;;8891:79;;:::i;:::-;8853:119;9011:1;9036:53;9081:7;9072:6;9061:9;9057:22;9036:53;:::i;:::-;9026:63;;8982:117;8777:329;;;;:::o;9112:118::-;9199:24;9217:5;9199:24;:::i;:::-;9194:3;9187:37;9112:118;;:::o;9236:222::-;9329:4;9367:2;9356:9;9352:18;9344:26;;9380:71;9448:1;9437:9;9433:17;9424:6;9380:71;:::i;:::-;9236:222;;;;:::o;9464:474::-;9532:6;9540;9589:2;9577:9;9568:7;9564:23;9560:32;9557:119;;;9595:79;;:::i;:::-;9557:119;9715:1;9740:53;9785:7;9776:6;9765:9;9761:22;9740:53;:::i;:::-;9730:63;;9686:117;9842:2;9868:53;9913:7;9904:6;9893:9;9889:22;9868:53;:::i;:::-;9858:63;;9813:118;9464:474;;;;;:::o;9944:332::-;10065:4;10103:2;10092:9;10088:18;10080:26;;10116:71;10184:1;10173:9;10169:17;10160:6;10116:71;:::i;:::-;10197:72;10265:2;10254:9;10250:18;10241:6;10197:72;:::i;:::-;9944:332;;;;;:::o;10282:250::-;10389:4;10427:2;10416:9;10412:18;10404:26;;10440:85;10522:1;10511:9;10507:17;10498:6;10440:85;:::i;:::-;10282:250;;;;:::o;10538:180::-;10586:77;10583:1;10576:88;10683:4;10680:1;10673:15;10707:4;10704:1;10697:15;10724:169;10808:11;10842:6;10837:3;10830:19;10882:4;10877:3;10873:14;10858:29;;10724:169;;;;:::o;10899:168::-;11039:20;11035:1;11027:6;11023:14;11016:44;10899:168;:::o;11073:366::-;11215:3;11236:67;11300:2;11295:3;11236:67;:::i;:::-;11229:74;;11312:93;11401:3;11312:93;:::i;:::-;11430:2;11425:3;11421:12;11414:19;;11073:366;;;:::o;11445:419::-;11611:4;11649:2;11638:9;11634:18;11626:26;;11698:9;11692:4;11688:20;11684:1;11673:9;11669:17;11662:47;11726:131;11852:4;11726:131;:::i;:::-;11718:139;;11445:419;;;:::o;11870:143::-;11927:5;11958:6;11952:13;11943:22;;11974:33;12001:5;11974:33;:::i;:::-;11870:143;;;;:::o;12019:351::-;12089:6;12138:2;12126:9;12117:7;12113:23;12109:32;12106:119;;;12144:79;;:::i;:::-;12106:119;12264:1;12289:64;12345:7;12336:6;12325:9;12321:22;12289:64;:::i;:::-;12279:74;;12235:128;12019:351;;;;:::o;12376:169::-;12516:21;12512:1;12504:6;12500:14;12493:45;12376:169;:::o;12551:366::-;12693:3;12714:67;12778:2;12773:3;12714:67;:::i;:::-;12707:74;;12790:93;12879:3;12790:93;:::i;:::-;12908:2;12903:3;12899:12;12892:19;;12551:366;;;:::o;12923:419::-;13089:4;13127:2;13116:9;13112:18;13104:26;;13176:9;13170:4;13166:20;13162:1;13151:9;13147:17;13140:47;13204:131;13330:4;13204:131;:::i;:::-;13196:139;;12923:419;;;:::o;13348:182::-;13488:34;13484:1;13476:6;13472:14;13465:58;13348:182;:::o;13536:366::-;13678:3;13699:67;13763:2;13758:3;13699:67;:::i;:::-;13692:74;;13775:93;13864:3;13775:93;:::i;:::-;13893:2;13888:3;13884:12;13877:19;;13536:366;;;:::o;13908:419::-;14074:4;14112:2;14101:9;14097:18;14089:26;;14161:9;14155:4;14151:20;14147:1;14136:9;14132:17;14125:47;14189:131;14315:4;14189:131;:::i;:::-;14181:139;;13908:419;;;:::o;14333:177::-;14473:29;14469:1;14461:6;14457:14;14450:53;14333:177;:::o;14516:366::-;14658:3;14679:67;14743:2;14738:3;14679:67;:::i;:::-;14672:74;;14755:93;14844:3;14755:93;:::i;:::-;14873:2;14868:3;14864:12;14857:19;;14516:366;;;:::o;14888:419::-;15054:4;15092:2;15081:9;15077:18;15069:26;;15141:9;15135:4;15131:20;15127:1;15116:9;15112:17;15105:47;15169:131;15295:4;15169:131;:::i;:::-;15161:139;;14888:419;;;:::o;15313:170::-;15453:22;15449:1;15441:6;15437:14;15430:46;15313:170;:::o;15489:366::-;15631:3;15652:67;15716:2;15711:3;15652:67;:::i;:::-;15645:74;;15728:93;15817:3;15728:93;:::i;:::-;15846:2;15841:3;15837:12;15830:19;;15489:366;;;:::o;15861:419::-;16027:4;16065:2;16054:9;16050:18;16042:26;;16114:9;16108:4;16104:20;16100:1;16089:9;16085:17;16078:47;16142:131;16268:4;16142:131;:::i;:::-;16134:139;;15861:419;;;:::o;16286:171::-;16357:5;16388:6;16382:13;16373:22;;16404:47;16445:5;16404:47;:::i;:::-;16286:171;;;;:::o;16463:379::-;16547:6;16596:2;16584:9;16575:7;16571:23;16567:32;16564:119;;;16602:79;;:::i;:::-;16564:119;16722:1;16747:78;16817:7;16808:6;16797:9;16793:22;16747:78;:::i;:::-;16737:88;;16693:142;16463:379;;;;:::o;16848:162::-;16988:14;16984:1;16976:6;16972:14;16965:38;16848:162;:::o;17016:366::-;17158:3;17179:67;17243:2;17238:3;17179:67;:::i;:::-;17172:74;;17255:93;17344:3;17255:93;:::i;:::-;17373:2;17368:3;17364:12;17357:19;;17016:366;;;:::o;17388:419::-;17554:4;17592:2;17581:9;17577:18;17569:26;;17641:9;17635:4;17631:20;17627:1;17616:9;17612:17;17605:47;17669:131;17795:4;17669:131;:::i;:::-;17661:139;;17388:419;;;:::o;17813:180::-;17861:77;17858:1;17851:88;17958:4;17955:1;17948:15;17982:4;17979:1;17972:15;17999:233;18038:3;18061:24;18079:5;18061:24;:::i;:::-;18052:33;;18107:66;18100:5;18097:77;18094:103;;18177:18;;:::i;:::-;18094:103;18224:1;18217:5;18213:13;18206:20;;17999:233;;;:::o;18238:174::-;18378:26;18374:1;18366:6;18362:14;18355:50;18238:174;:::o;18418:366::-;18560:3;18581:67;18645:2;18640:3;18581:67;:::i;:::-;18574:74;;18657:93;18746:3;18657:93;:::i;:::-;18775:2;18770:3;18766:12;18759:19;;18418:366;;;:::o;18790:419::-;18956:4;18994:2;18983:9;18979:18;18971:26;;19043:9;19037:4;19033:20;19029:1;19018:9;19014:17;19007:47;19071:131;19197:4;19071:131;:::i;:::-;19063:139;;18790:419;;;:::o;19215:225::-;19355:34;19351:1;19343:6;19339:14;19332:58;19424:8;19419:2;19411:6;19407:15;19400:33;19215:225;:::o;19446:366::-;19588:3;19609:67;19673:2;19668:3;19609:67;:::i;:::-;19602:74;;19685:93;19774:3;19685:93;:::i;:::-;19803:2;19798:3;19794:12;19787:19;;19446:366;;;:::o;19818:419::-;19984:4;20022:2;20011:9;20007:18;19999:26;;20071:9;20065:4;20061:20;20057:1;20046:9;20042:17;20035:47;20099:131;20225:4;20099:131;:::i;:::-;20091:139;;19818:419;;;:::o;20243:348::-;20283:7;20306:20;20324:1;20306:20;:::i;:::-;20301:25;;20340:20;20358:1;20340:20;:::i;:::-;20335:25;;20528:1;20460:66;20456:74;20453:1;20450:81;20445:1;20438:9;20431:17;20427:105;20424:131;;;20535:18;;:::i;:::-;20424:131;20583:1;20580;20576:9;20565:20;;20243:348;;;;:::o;20597:180::-;20645:77;20642:1;20635:88;20742:4;20739:1;20732:15;20766:4;20763:1;20756:15;20783:185;20823:1;20840:20;20858:1;20840:20;:::i;:::-;20835:25;;20874:20;20892:1;20874:20;:::i;:::-;20869:25;;20913:1;20903:35;;20918:18;;:::i;:::-;20903:35;20960:1;20957;20953:9;20948:14;;20783:185;;;;:::o;20974:220::-;21114:34;21110:1;21102:6;21098:14;21091:58;21183:3;21178:2;21170:6;21166:15;21159:28;20974:220;:::o;21200:366::-;21342:3;21363:67;21427:2;21422:3;21363:67;:::i;:::-;21356:74;;21439:93;21528:3;21439:93;:::i;:::-;21557:2;21552:3;21548:12;21541:19;;21200:366;;;:::o;21572:419::-;21738:4;21776:2;21765:9;21761:18;21753:26;;21825:9;21819:4;21815:20;21811:1;21800:9;21796:17;21789:47;21853:131;21979:4;21853:131;:::i;:::-;21845:139;;21572:419;;;:::o;21997:305::-;22037:3;22056:20;22074:1;22056:20;:::i;:::-;22051:25;;22090:20;22108:1;22090:20;:::i;:::-;22085:25;;22244:1;22176:66;22172:74;22169:1;22166:81;22163:107;;;22250:18;;:::i;:::-;22163:107;22294:1;22291;22287:9;22280:16;;21997:305;;;;:::o;22308:177::-;22448:29;22444:1;22436:6;22432:14;22425:53;22308:177;:::o;22491:366::-;22633:3;22654:67;22718:2;22713:3;22654:67;:::i;:::-;22647:74;;22730:93;22819:3;22730:93;:::i;:::-;22848:2;22843:3;22839:12;22832:19;;22491:366;;;:::o;22863:419::-;23029:4;23067:2;23056:9;23052:18;23044:26;;23116:9;23110:4;23106:20;23102:1;23091:9;23087:17;23080:47;23144:131;23270:4;23144:131;:::i;:::-;23136:139;;22863:419;;;:::o;23288:332::-;23409:4;23447:2;23436:9;23432:18;23424:26;;23460:71;23528:1;23517:9;23513:17;23504:6;23460:71;:::i;:::-;23541:72;23609:2;23598:9;23594:18;23585:6;23541:72;:::i;:::-;23288:332;;;;;:::o;23626:442::-;23775:4;23813:2;23802:9;23798:18;23790:26;;23826:71;23894:1;23883:9;23879:17;23870:6;23826:71;:::i;:::-;23907:72;23975:2;23964:9;23960:18;23951:6;23907:72;:::i;:::-;23989;24057:2;24046:9;24042:18;24033:6;23989:72;:::i;:::-;23626:442;;;;;;:::o;24074:332::-;24195:4;24233:2;24222:9;24218:18;24210:26;;24246:71;24314:1;24303:9;24299:17;24290:6;24246:71;:::i;:::-;24327:72;24395:2;24384:9;24380:18;24371:6;24327:72;:::i;:::-;24074:332;;;;;:::o;24412:241::-;24552:34;24548:1;24540:6;24536:14;24529:58;24621:24;24616:2;24608:6;24604:15;24597:49;24412:241;:::o;24659:366::-;24801:3;24822:67;24886:2;24881:3;24822:67;:::i;:::-;24815:74;;24898:93;24987:3;24898:93;:::i;:::-;25016:2;25011:3;25007:12;25000:19;;24659:366;;;:::o;25031:419::-;25197:4;25235:2;25224:9;25220:18;25212:26;;25284:9;25278:4;25274:20;25270:1;25259:9;25255:17;25248:47;25312:131;25438:4;25312:131;:::i;:::-;25304:139;;25031:419;;;:::o;25456:99::-;25508:6;25542:5;25536:12;25526:22;;25456:99;;;:::o;25561:307::-;25629:1;25639:113;25653:6;25650:1;25647:13;25639:113;;;25738:1;25733:3;25729:11;25723:18;25719:1;25714:3;25710:11;25703:39;25675:2;25672:1;25668:10;25663:15;;25639:113;;;25770:6;25767:1;25764:13;25761:101;;;25850:1;25841:6;25836:3;25832:16;25825:27;25761:101;25610:258;25561:307;;;:::o;25874:102::-;25915:6;25966:2;25962:7;25957:2;25950:5;25946:14;25942:28;25932:38;;25874:102;;;:::o;25982:364::-;26070:3;26098:39;26131:5;26098:39;:::i;:::-;26153:71;26217:6;26212:3;26153:71;:::i;:::-;26146:78;;26233:52;26278:6;26273:3;26266:4;26259:5;26255:16;26233:52;:::i;:::-;26310:29;26332:6;26310:29;:::i;:::-;26305:3;26301:39;26294:46;;26074:272;25982:364;;;;:::o;26352:313::-;26465:4;26503:2;26492:9;26488:18;26480:26;;26552:9;26546:4;26542:20;26538:1;26527:9;26523:17;26516:47;26580:78;26653:4;26644:6;26580:78;:::i;:::-;26572:86;;26352:313;;;;:::o;26671:191::-;26711:4;26731:20;26749:1;26731:20;:::i;:::-;26726:25;;26765:20;26783:1;26765:20;:::i;:::-;26760:25;;26804:1;26801;26798:8;26795:34;;;26809:18;;:::i;:::-;26795:34;26854:1;26851;26847:9;26839:17;;26671:191;;;;:::o;26868:137::-;26922:5;26953:6;26947:13;26938:22;;26969:30;26993:5;26969:30;:::i;:::-;26868:137;;;;:::o;27011:345::-;27078:6;27127:2;27115:9;27106:7;27102:23;27098:32;27095:119;;;27133:79;;:::i;:::-;27095:119;27253:1;27278:61;27331:7;27322:6;27311:9;27307:22;27278:61;:::i;:::-;27268:71;;27224:125;27011:345;;;;:::o;27362:229::-;27502:34;27498:1;27490:6;27486:14;27479:58;27571:12;27566:2;27558:6;27554:15;27547:37;27362:229;:::o;27597:366::-;27739:3;27760:67;27824:2;27819:3;27760:67;:::i;:::-;27753:74;;27836:93;27925:3;27836:93;:::i;:::-;27954:2;27949:3;27945:12;27938:19;;27597:366;;;:::o;27969:419::-;28135:4;28173:2;28162:9;28158:18;28150:26;;28222:9;28216:4;28212:20;28208:1;28197:9;28193:17;28186:47;28250:131;28376:4;28250:131;:::i;:::-;28242:139;;27969:419;;;:::o;28394:225::-;28534:34;28530:1;28522:6;28518:14;28511:58;28603:8;28598:2;28590:6;28586:15;28579:33;28394:225;:::o;28625:366::-;28767:3;28788:67;28852:2;28847:3;28788:67;:::i;:::-;28781:74;;28864:93;28953:3;28864:93;:::i;:::-;28982:2;28977:3;28973:12;28966:19;;28625:366;;;:::o;28997:419::-;29163:4;29201:2;29190:9;29186:18;29178:26;;29250:9;29244:4;29240:20;29236:1;29225:9;29221:17;29214:47;29278:131;29404:4;29278:131;:::i;:::-;29270:139;;28997:419;;;:::o;29422:179::-;29562:31;29558:1;29550:6;29546:14;29539:55;29422:179;:::o;29607:366::-;29749:3;29770:67;29834:2;29829:3;29770:67;:::i;:::-;29763:74;;29846:93;29935:3;29846:93;:::i;:::-;29964:2;29959:3;29955:12;29948:19;;29607:366;;;:::o;29979:419::-;30145:4;30183:2;30172:9;30168:18;30160:26;;30232:9;30226:4;30222:20;30218:1;30207:9;30203:17;30196:47;30260:131;30386:4;30260:131;:::i;:::-;30252:139;;29979:419;;;:::o;30404:98::-;30455:6;30489:5;30483:12;30473:22;;30404:98;;;:::o;30508:147::-;30609:11;30646:3;30631:18;;30508:147;;;;:::o;30661:373::-;30765:3;30793:38;30825:5;30793:38;:::i;:::-;30847:88;30928:6;30923:3;30847:88;:::i;:::-;30840:95;;30944:52;30989:6;30984:3;30977:4;30970:5;30966:16;30944:52;:::i;:::-;31021:6;31016:3;31012:16;31005:23;;30769:265;30661:373;;;;:::o;31040:271::-;31170:3;31192:93;31281:3;31272:6;31192:93;:::i;:::-;31185:100;;31302:3;31295:10;;31040:271;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "3304400",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"BONUS_MULTIPLIER()": "2496",
								"DDT()": "infinite",
								"PowerPerBlock()": "2540",
								"add(uint256,address,bool)": "infinite",
								"addNFT(address,uint256)": "73759",
								"claimNFTReward(uint256,uint256)": "infinite",
								"deposit(uint256,uint256)": "infinite",
								"devaddr()": "2580",
								"emergencyWithdraw(uint256)": "infinite",
								"enterStaking(uint256)": "infinite",
								"getMultiplier(uint256,uint256)": "infinite",
								"getPowerBalance(address)": "2930",
								"leaveStaking(uint256)": "infinite",
								"massUpdatePools()": "infinite",
								"migrate(uint256)": "infinite",
								"migrator()": "infinite",
								"nftsInfo(uint256)": "infinite",
								"owner()": "2633",
								"pendingPower(uint256,address)": "infinite",
								"poolInfo(uint256)": "infinite",
								"poolLength()": "2492",
								"powerBalance(address)": "2858",
								"renounceOwnership()": "30486",
								"set(uint256,uint256,bool)": "infinite",
								"setDevAddress(address)": "27073",
								"setMigrator(address)": "27095",
								"startBlock()": "2541",
								"totalAllocPoint()": "2542",
								"transferOwnership(address)": "30830",
								"updateMultiplier(uint256)": "24893",
								"updatePool(uint256)": "infinite",
								"updatePowerPerBlock(uint256)": "24872",
								"userInfo(uint256,address)": "infinite",
								"withdraw(uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 22111,
									"end": 35086,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 22111,
									"end": 35086,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 22111,
									"end": 35086,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 23824,
									"end": 23825,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 23790,
									"end": 23825,
									"name": "PUSH",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 23790,
									"end": 23825,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 24267,
									"end": 24268,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 24234,
									"end": 24268,
									"name": "PUSH",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 24234,
									"end": 24268,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 24700,
									"end": 25218,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 24700,
									"end": 25218,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 24700,
									"end": 25218,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 24700,
									"end": 25218,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 24700,
									"end": 25218,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 24700,
									"end": 25218,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 24700,
									"end": 25218,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 24700,
									"end": 25218,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 24700,
									"end": 25218,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 24700,
									"end": 25218,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 24700,
									"end": 25218,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 24700,
									"end": 25218,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 24700,
									"end": 25218,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 24700,
									"end": 25218,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 24700,
									"end": 25218,
									"name": "CODESIZE",
									"source": 0
								},
								{
									"begin": 24700,
									"end": 25218,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 24700,
									"end": 25218,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 24700,
									"end": 25218,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 24700,
									"end": 25218,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 24700,
									"end": 25218,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 24700,
									"end": 25218,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 24700,
									"end": 25218,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 24700,
									"end": 25218,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 24700,
									"end": 25218,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 24700,
									"end": 25218,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 24700,
									"end": 25218,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 24700,
									"end": 25218,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 24700,
									"end": 25218,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 24700,
									"end": 25218,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 24700,
									"end": 25218,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 24700,
									"end": 25218,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 24700,
									"end": 25218,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 24700,
									"end": 25218,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 24700,
									"end": 25218,
									"name": "tag",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 24700,
									"end": 25218,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 19984,
									"end": 20016,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 20003,
									"end": 20015,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 20003,
									"end": 20013,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 20003,
									"end": 20013,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 20003,
									"end": 20013,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 20003,
									"end": 20015,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 20003,
									"end": 20015,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 20003,
									"end": 20015,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 20003,
									"end": 20015,
									"name": "tag",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 20003,
									"end": 20015,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 19984,
									"end": 20002,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 19984,
									"end": 20002,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 19984,
									"end": 20002,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 19984,
									"end": 20016,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 19984,
									"end": 20016,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 19984,
									"end": 20016,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 19984,
									"end": 20016,
									"name": "tag",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 19984,
									"end": 20016,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 24848,
									"end": 24852,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 24842,
									"end": 24845,
									"name": "PUSH",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 24842,
									"end": 24845,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 24842,
									"end": 24852,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 24842,
									"end": 24852,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 24842,
									"end": 24852,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 24842,
									"end": 24852,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 24842,
									"end": 24852,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 24842,
									"end": 24852,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 24842,
									"end": 24852,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 24842,
									"end": 24852,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 24842,
									"end": 24852,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 24842,
									"end": 24852,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 24842,
									"end": 24852,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 24842,
									"end": 24852,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 24842,
									"end": 24852,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 24842,
									"end": 24852,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 24842,
									"end": 24852,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 24842,
									"end": 24852,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 24842,
									"end": 24852,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 24842,
									"end": 24852,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 24873,
									"end": 24881,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 24863,
									"end": 24870,
									"name": "PUSH",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 24863,
									"end": 24870,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 24863,
									"end": 24881,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 24863,
									"end": 24881,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 24863,
									"end": 24881,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 24863,
									"end": 24881,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 24863,
									"end": 24881,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 24863,
									"end": 24881,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 24863,
									"end": 24881,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 24863,
									"end": 24881,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 24863,
									"end": 24881,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 24863,
									"end": 24881,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 24863,
									"end": 24881,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 24863,
									"end": 24881,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 24863,
									"end": 24881,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 24863,
									"end": 24881,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 24863,
									"end": 24881,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 24863,
									"end": 24881,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 24863,
									"end": 24881,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 24863,
									"end": 24881,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 24908,
									"end": 24922,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 24892,
									"end": 24905,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 24892,
									"end": 24922,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 24892,
									"end": 24922,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 24892,
									"end": 24922,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 24892,
									"end": 24922,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 24946,
									"end": 24957,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 24933,
									"end": 24943,
									"name": "PUSH",
									"source": 0,
									"value": "A"
								},
								{
									"begin": 24933,
									"end": 24957,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 24933,
									"end": 24957,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 24933,
									"end": 24957,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 24933,
									"end": 24957,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 25003,
									"end": 25011,
									"name": "PUSH",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 25017,
									"end": 25172,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 25017,
									"end": 25172,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 25017,
									"end": 25172,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 25017,
									"end": 25172,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 25017,
									"end": 25172,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 25017,
									"end": 25172,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 25017,
									"end": 25172,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 25017,
									"end": 25172,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 25050,
									"end": 25053,
									"name": "PUSH",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 25050,
									"end": 25053,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 25050,
									"end": 25053,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 25050,
									"end": 25053,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 25050,
									"end": 25053,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 25050,
									"end": 25053,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 25050,
									"end": 25053,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 25050,
									"end": 25053,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 25050,
									"end": 25053,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 25050,
									"end": 25053,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 25050,
									"end": 25053,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 25017,
									"end": 25172,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 25017,
									"end": 25172,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 25017,
									"end": 25172,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 25017,
									"end": 25172,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 25017,
									"end": 25172,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 25017,
									"end": 25172,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 25080,
									"end": 25084,
									"name": "PUSH",
									"source": 0,
									"value": "3E8"
								},
								{
									"begin": 25017,
									"end": 25172,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 25017,
									"end": 25172,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 25017,
									"end": 25172,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 25017,
									"end": 25172,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 25116,
									"end": 25126,
									"name": "PUSH",
									"source": 0,
									"value": "A"
								},
								{
									"begin": 25116,
									"end": 25126,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 25017,
									"end": 25172,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 25017,
									"end": 25172,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 25017,
									"end": 25172,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 25017,
									"end": 25172,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 25159,
									"end": 25160,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 25017,
									"end": 25172,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 25017,
									"end": 25172,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 25017,
									"end": 25172,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 25003,
									"end": 25173,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 25003,
									"end": 25173,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 25003,
									"end": 25173,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 25003,
									"end": 25173,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 25003,
									"end": 25173,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 25003,
									"end": 25173,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 25003,
									"end": 25173,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 25003,
									"end": 25173,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 25003,
									"end": 25173,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 25003,
									"end": 25173,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 25003,
									"end": 25173,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 25003,
									"end": 25173,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 25003,
									"end": 25173,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 25003,
									"end": 25173,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 25003,
									"end": 25173,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 25003,
									"end": 25173,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 25003,
									"end": 25173,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 25003,
									"end": 25173,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 25003,
									"end": 25173,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 25003,
									"end": 25173,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 25003,
									"end": 25173,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 25003,
									"end": 25173,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 25003,
									"end": 25173,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 25003,
									"end": 25173,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 25003,
									"end": 25173,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 25003,
									"end": 25173,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 25003,
									"end": 25173,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 25003,
									"end": 25173,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 25003,
									"end": 25173,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 25003,
									"end": 25173,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 25003,
									"end": 25173,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 25003,
									"end": 25173,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 25003,
									"end": 25173,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 25003,
									"end": 25173,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 25003,
									"end": 25173,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 25003,
									"end": 25173,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 25003,
									"end": 25173,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 25003,
									"end": 25173,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 25003,
									"end": 25173,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 25003,
									"end": 25173,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 25003,
									"end": 25173,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 25003,
									"end": 25173,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 25003,
									"end": 25173,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 25003,
									"end": 25173,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 25003,
									"end": 25173,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 25003,
									"end": 25173,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 25003,
									"end": 25173,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 25003,
									"end": 25173,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 25003,
									"end": 25173,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 25003,
									"end": 25173,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 25003,
									"end": 25173,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 25003,
									"end": 25173,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 25003,
									"end": 25173,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 25003,
									"end": 25173,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 25003,
									"end": 25173,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 25003,
									"end": 25173,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 25003,
									"end": 25173,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 25003,
									"end": 25173,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 25003,
									"end": 25173,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 25003,
									"end": 25173,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 25003,
									"end": 25173,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 25003,
									"end": 25173,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 25003,
									"end": 25173,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 25003,
									"end": 25173,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 25003,
									"end": 25173,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 25003,
									"end": 25173,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 25003,
									"end": 25173,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 25003,
									"end": 25173,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 25003,
									"end": 25173,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 25003,
									"end": 25173,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 25003,
									"end": 25173,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 25003,
									"end": 25173,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 25003,
									"end": 25173,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 25003,
									"end": 25173,
									"name": "PUSH",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 25003,
									"end": 25173,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 25003,
									"end": 25173,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 25003,
									"end": 25173,
									"name": "PUSH",
									"source": 0,
									"value": "60"
								},
								{
									"begin": 25003,
									"end": 25173,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 25003,
									"end": 25173,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 25003,
									"end": 25173,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 25003,
									"end": 25173,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 25003,
									"end": 25173,
									"name": "PUSH",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 25003,
									"end": 25173,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 25003,
									"end": 25173,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 25003,
									"end": 25173,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 25003,
									"end": 25173,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 25204,
									"end": 25208,
									"name": "PUSH",
									"source": 0,
									"value": "3E8"
								},
								{
									"begin": 25186,
									"end": 25201,
									"name": "PUSH",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 25186,
									"end": 25208,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 25186,
									"end": 25208,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 25186,
									"end": 25208,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 25186,
									"end": 25208,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 24700,
									"end": 25218,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 24700,
									"end": 25218,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 24700,
									"end": 25218,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 24700,
									"end": 25218,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 22111,
									"end": 35086,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 22111,
									"end": 35086,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 19479,
									"end": 19577,
									"name": "tag",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 19479,
									"end": 19577,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 19532,
									"end": 19539,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 19559,
									"end": 19569,
									"name": "CALLER",
									"source": 0
								},
								{
									"begin": 19552,
									"end": 19569,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 19552,
									"end": 19569,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 19479,
									"end": 19577,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 19479,
									"end": 19577,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 21375,
									"end": 21566,
									"name": "tag",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 21375,
									"end": 21566,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 21449,
									"end": 21465,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 21468,
									"end": 21474,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 21468,
									"end": 21474,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 21468,
									"end": 21474,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 21468,
									"end": 21474,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 21468,
									"end": 21474,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 21468,
									"end": 21474,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 21468,
									"end": 21474,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 21468,
									"end": 21474,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 21468,
									"end": 21474,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 21468,
									"end": 21474,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 21468,
									"end": 21474,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 21449,
									"end": 21474,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 21449,
									"end": 21474,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 21494,
									"end": 21502,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 21485,
									"end": 21491,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 21485,
									"end": 21491,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 21485,
									"end": 21502,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 21485,
									"end": 21502,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 21485,
									"end": 21502,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 21485,
									"end": 21502,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 21485,
									"end": 21502,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 21485,
									"end": 21502,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 21485,
									"end": 21502,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 21485,
									"end": 21502,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 21485,
									"end": 21502,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 21485,
									"end": 21502,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 21485,
									"end": 21502,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 21485,
									"end": 21502,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 21485,
									"end": 21502,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 21485,
									"end": 21502,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 21485,
									"end": 21502,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 21485,
									"end": 21502,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 21485,
									"end": 21502,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 21485,
									"end": 21502,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 21549,
									"end": 21557,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 21518,
									"end": 21558,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 21518,
									"end": 21558,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 21539,
									"end": 21547,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 21518,
									"end": 21558,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 21518,
									"end": 21558,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 21518,
									"end": 21558,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 21518,
									"end": 21558,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 21518,
									"end": 21558,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 21518,
									"end": 21558,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 21518,
									"end": 21558,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 21518,
									"end": 21558,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 21518,
									"end": 21558,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 21518,
									"end": 21558,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 21518,
									"end": 21558,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 21518,
									"end": 21558,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 21438,
									"end": 21566,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 21375,
									"end": 21566,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 21375,
									"end": 21566,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 1,
									"value": "17"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 334,
									"end": 460,
									"name": "tag",
									"source": 1,
									"value": "19"
								},
								{
									"begin": 334,
									"end": 460,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 371,
									"end": 378,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 453,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 404,
									"end": 409,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 400,
									"end": 454,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 389,
									"end": 454,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 389,
									"end": 454,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 334,
									"end": 460,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 334,
									"end": 460,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 466,
									"end": 562,
									"name": "tag",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 466,
									"end": 562,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 503,
									"end": 510,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "35"
								},
								{
									"begin": 550,
									"end": 555,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "19"
								},
								{
									"begin": 532,
									"end": 556,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 532,
									"end": 556,
									"name": "tag",
									"source": 1,
									"value": "35"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 521,
									"end": 556,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 521,
									"end": 556,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 466,
									"end": 562,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 466,
									"end": 562,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 568,
									"end": 678,
									"name": "tag",
									"source": 1,
									"value": "21"
								},
								{
									"begin": 568,
									"end": 678,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 619,
									"end": 626,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 648,
									"end": 672,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "37"
								},
								{
									"begin": 666,
									"end": 671,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 648,
									"end": 672,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 648,
									"end": 672,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 648,
									"end": 672,
									"name": "tag",
									"source": 1,
									"value": "37"
								},
								{
									"begin": 648,
									"end": 672,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 637,
									"end": 672,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 637,
									"end": 672,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 568,
									"end": 678,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 568,
									"end": 678,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 568,
									"end": 678,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 568,
									"end": 678,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 684,
									"end": 834,
									"name": "tag",
									"source": 1,
									"value": "22"
								},
								{
									"begin": 684,
									"end": 834,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 771,
									"end": 809,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "39"
								},
								{
									"begin": 803,
									"end": 808,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 771,
									"end": 809,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "21"
								},
								{
									"begin": 771,
									"end": 809,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 771,
									"end": 809,
									"name": "tag",
									"source": 1,
									"value": "39"
								},
								{
									"begin": 771,
									"end": 809,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 764,
									"end": 769,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 761,
									"end": 810,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 751,
									"end": 828,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 751,
									"end": 828,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 824,
									"end": 825,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 821,
									"end": 822,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 814,
									"end": 826,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 751,
									"end": 828,
									"name": "tag",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 751,
									"end": 828,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 684,
									"end": 834,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 684,
									"end": 834,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 840,
									"end": 1011,
									"name": "tag",
									"source": 1,
									"value": "23"
								},
								{
									"begin": 840,
									"end": 1011,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 911,
									"end": 916,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 942,
									"end": 948,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 936,
									"end": 949,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 927,
									"end": 949,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 927,
									"end": 949,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 958,
									"end": 1005,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "42"
								},
								{
									"begin": 999,
									"end": 1004,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 958,
									"end": 1005,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "22"
								},
								{
									"begin": 958,
									"end": 1005,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 958,
									"end": 1005,
									"name": "tag",
									"source": 1,
									"value": "42"
								},
								{
									"begin": 958,
									"end": 1005,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 840,
									"end": 1011,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 840,
									"end": 1011,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 840,
									"end": 1011,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 840,
									"end": 1011,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 840,
									"end": 1011,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1017,
									"end": 1139,
									"name": "tag",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 1017,
									"end": 1139,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1090,
									"end": 1114,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "44"
								},
								{
									"begin": 1108,
									"end": 1113,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1090,
									"end": 1114,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1090,
									"end": 1114,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1090,
									"end": 1114,
									"name": "tag",
									"source": 1,
									"value": "44"
								},
								{
									"begin": 1090,
									"end": 1114,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1083,
									"end": 1088,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1080,
									"end": 1115,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 1070,
									"end": 1133,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "45"
								},
								{
									"begin": 1070,
									"end": 1133,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1129,
									"end": 1130,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1126,
									"end": 1127,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1119,
									"end": 1131,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 1070,
									"end": 1133,
									"name": "tag",
									"source": 1,
									"value": "45"
								},
								{
									"begin": 1070,
									"end": 1133,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1017,
									"end": 1139,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1017,
									"end": 1139,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1145,
									"end": 1288,
									"name": "tag",
									"source": 1,
									"value": "25"
								},
								{
									"begin": 1145,
									"end": 1288,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1202,
									"end": 1207,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1233,
									"end": 1239,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1227,
									"end": 1240,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 1218,
									"end": 1240,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1218,
									"end": 1240,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1249,
									"end": 1282,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "47"
								},
								{
									"begin": 1276,
									"end": 1281,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1249,
									"end": 1282,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 1249,
									"end": 1282,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1249,
									"end": 1282,
									"name": "tag",
									"source": 1,
									"value": "47"
								},
								{
									"begin": 1249,
									"end": 1282,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1145,
									"end": 1288,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 1145,
									"end": 1288,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1145,
									"end": 1288,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1145,
									"end": 1288,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1145,
									"end": 1288,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1294,
									"end": 1371,
									"name": "tag",
									"source": 1,
									"value": "26"
								},
								{
									"begin": 1294,
									"end": 1371,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1331,
									"end": 1338,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1360,
									"end": 1365,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1349,
									"end": 1365,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1349,
									"end": 1365,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1294,
									"end": 1371,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1294,
									"end": 1371,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1294,
									"end": 1371,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1294,
									"end": 1371,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1377,
									"end": 1499,
									"name": "tag",
									"source": 1,
									"value": "27"
								},
								{
									"begin": 1377,
									"end": 1499,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1450,
									"end": 1474,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "50"
								},
								{
									"begin": 1468,
									"end": 1473,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1450,
									"end": 1474,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "26"
								},
								{
									"begin": 1450,
									"end": 1474,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1450,
									"end": 1474,
									"name": "tag",
									"source": 1,
									"value": "50"
								},
								{
									"begin": 1450,
									"end": 1474,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1443,
									"end": 1448,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1440,
									"end": 1475,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 1430,
									"end": 1493,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "51"
								},
								{
									"begin": 1430,
									"end": 1493,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1489,
									"end": 1490,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1486,
									"end": 1487,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1479,
									"end": 1491,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 1430,
									"end": 1493,
									"name": "tag",
									"source": 1,
									"value": "51"
								},
								{
									"begin": 1430,
									"end": 1493,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1377,
									"end": 1499,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1377,
									"end": 1499,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1505,
									"end": 1648,
									"name": "tag",
									"source": 1,
									"value": "28"
								},
								{
									"begin": 1505,
									"end": 1648,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1562,
									"end": 1567,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1593,
									"end": 1599,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1587,
									"end": 1600,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 1578,
									"end": 1600,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1578,
									"end": 1600,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1609,
									"end": 1642,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "53"
								},
								{
									"begin": 1636,
									"end": 1641,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1609,
									"end": 1642,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "27"
								},
								{
									"begin": 1609,
									"end": 1642,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1609,
									"end": 1642,
									"name": "tag",
									"source": 1,
									"value": "53"
								},
								{
									"begin": 1609,
									"end": 1642,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1505,
									"end": 1648,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 1505,
									"end": 1648,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1505,
									"end": 1648,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1505,
									"end": 1648,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1505,
									"end": 1648,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1654,
									"end": 2502,
									"name": "tag",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 1654,
									"end": 2502,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1765,
									"end": 1771,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1773,
									"end": 1779,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1781,
									"end": 1787,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1789,
									"end": 1795,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1838,
									"end": 1841,
									"name": "PUSH",
									"source": 1,
									"value": "80"
								},
								{
									"begin": 1826,
									"end": 1835,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 1817,
									"end": 1824,
									"name": "DUP8",
									"source": 1
								},
								{
									"begin": 1813,
									"end": 1836,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 1809,
									"end": 1842,
									"name": "SLT",
									"source": 1
								},
								{
									"begin": 1806,
									"end": 1926,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 1806,
									"end": 1926,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "55"
								},
								{
									"begin": 1806,
									"end": 1926,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1845,
									"end": 1924,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "56"
								},
								{
									"begin": 1845,
									"end": 1924,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "17"
								},
								{
									"begin": 1845,
									"end": 1924,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1845,
									"end": 1924,
									"name": "tag",
									"source": 1,
									"value": "56"
								},
								{
									"begin": 1845,
									"end": 1924,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1806,
									"end": 1926,
									"name": "tag",
									"source": 1,
									"value": "55"
								},
								{
									"begin": 1806,
									"end": 1926,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1965,
									"end": 1966,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1990,
									"end": 2068,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "57"
								},
								{
									"begin": 2060,
									"end": 2067,
									"name": "DUP8",
									"source": 1
								},
								{
									"begin": 2051,
									"end": 2057,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 2040,
									"end": 2049,
									"name": "DUP9",
									"source": 1
								},
								{
									"begin": 2036,
									"end": 2058,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1990,
									"end": 2068,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "23"
								},
								{
									"begin": 1990,
									"end": 2068,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1990,
									"end": 2068,
									"name": "tag",
									"source": 1,
									"value": "57"
								},
								{
									"begin": 1990,
									"end": 2068,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1980,
									"end": 2068,
									"name": "SWAP5",
									"source": 1
								},
								{
									"begin": 1980,
									"end": 2068,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1936,
									"end": 2078,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2117,
									"end": 2119,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 2143,
									"end": 2207,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "58"
								},
								{
									"begin": 2199,
									"end": 2206,
									"name": "DUP8",
									"source": 1
								},
								{
									"begin": 2190,
									"end": 2196,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 2179,
									"end": 2188,
									"name": "DUP9",
									"source": 1
								},
								{
									"begin": 2175,
									"end": 2197,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2143,
									"end": 2207,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "25"
								},
								{
									"begin": 2143,
									"end": 2207,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2143,
									"end": 2207,
									"name": "tag",
									"source": 1,
									"value": "58"
								},
								{
									"begin": 2143,
									"end": 2207,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2133,
									"end": 2207,
									"name": "SWAP4",
									"source": 1
								},
								{
									"begin": 2133,
									"end": 2207,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2088,
									"end": 2217,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2256,
									"end": 2258,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 2282,
									"end": 2346,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "59"
								},
								{
									"begin": 2338,
									"end": 2345,
									"name": "DUP8",
									"source": 1
								},
								{
									"begin": 2329,
									"end": 2335,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 2318,
									"end": 2327,
									"name": "DUP9",
									"source": 1
								},
								{
									"begin": 2314,
									"end": 2336,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2282,
									"end": 2346,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "28"
								},
								{
									"begin": 2282,
									"end": 2346,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2282,
									"end": 2346,
									"name": "tag",
									"source": 1,
									"value": "59"
								},
								{
									"begin": 2282,
									"end": 2346,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2272,
									"end": 2346,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 2272,
									"end": 2346,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2227,
									"end": 2356,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2395,
									"end": 2397,
									"name": "PUSH",
									"source": 1,
									"value": "60"
								},
								{
									"begin": 2421,
									"end": 2485,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "60"
								},
								{
									"begin": 2477,
									"end": 2484,
									"name": "DUP8",
									"source": 1
								},
								{
									"begin": 2468,
									"end": 2474,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 2457,
									"end": 2466,
									"name": "DUP9",
									"source": 1
								},
								{
									"begin": 2453,
									"end": 2475,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2421,
									"end": 2485,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "28"
								},
								{
									"begin": 2421,
									"end": 2485,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2421,
									"end": 2485,
									"name": "tag",
									"source": 1,
									"value": "60"
								},
								{
									"begin": 2421,
									"end": 2485,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2411,
									"end": 2485,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 2411,
									"end": 2485,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2366,
									"end": 2495,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1654,
									"end": 2502,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 1654,
									"end": 2502,
									"name": "SWAP6",
									"source": 1
								},
								{
									"begin": 1654,
									"end": 2502,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1654,
									"end": 2502,
									"name": "SWAP5",
									"source": 1
								},
								{
									"begin": 1654,
									"end": 2502,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1654,
									"end": 2502,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 1654,
									"end": 2502,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1654,
									"end": 2502,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 22111,
									"end": 35086,
									"name": "tag",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 22111,
									"end": 35086,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 22111,
									"end": 35086,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 22111,
									"end": 35086,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 22111,
									"end": 35086,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 22111,
									"end": 35086,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 22111,
									"end": 35086,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 22111,
									"end": 35086,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 22111,
									"end": 35086,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220247c71767ca2691bbf499941bc34a7325a3d199df45cca4cbd28118b5744739564736f6c634300080f0033",
									".code": [
										{
											"begin": 22111,
											"end": 35086,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 22111,
											"end": 35086,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 22111,
											"end": 35086,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 35086,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 35086,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 35086,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 35086,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 22111,
											"end": 35086,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 35086,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 22111,
											"end": 35086,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 35086,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 35086,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 22111,
											"end": 35086,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 35086,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 35086,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 22111,
											"end": 35086,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 35086,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 35086,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 22111,
											"end": 35086,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 35086,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 22111,
											"end": 35086,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 35086,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 22111,
											"end": 35086,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 35086,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 35086,
											"name": "PUSH",
											"source": 0,
											"value": "61C1B724"
										},
										{
											"begin": 22111,
											"end": 35086,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 35086,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 22111,
											"end": 35086,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 35086,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 35086,
											"name": "PUSH",
											"source": 0,
											"value": "8DBB1E3A"
										},
										{
											"begin": 22111,
											"end": 35086,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 35086,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 22111,
											"end": 35086,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 35086,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 35086,
											"name": "PUSH",
											"source": 0,
											"value": "D209DB8C"
										},
										{
											"begin": 22111,
											"end": 35086,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 35086,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 22111,
											"end": 35086,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 35086,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 35086,
											"name": "PUSH",
											"source": 0,
											"value": "D209DB8C"
										},
										{
											"begin": 22111,
											"end": 35086,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 35086,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 22111,
											"end": 35086,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 35086,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 35086,
											"name": "PUSH",
											"source": 0,
											"value": "D49E77CD"
										},
										{
											"begin": 22111,
											"end": 35086,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 35086,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 22111,
											"end": 35086,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 35086,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 35086,
											"name": "PUSH",
											"source": 0,
											"value": "E2BBB158"
										},
										{
											"begin": 22111,
											"end": 35086,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 35086,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 22111,
											"end": 35086,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 35086,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 35086,
											"name": "PUSH",
											"source": 0,
											"value": "F2FDE38B"
										},
										{
											"begin": 22111,
											"end": 35086,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 35086,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 22111,
											"end": 35086,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 35086,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 35086,
											"name": "PUSH",
											"source": 0,
											"value": "F3239AB5"
										},
										{
											"begin": 22111,
											"end": 35086,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 35086,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 22111,
											"end": 35086,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 35086,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 22111,
											"end": 35086,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 35086,
											"name": "tag",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 22111,
											"end": 35086,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 35086,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 35086,
											"name": "PUSH",
											"source": 0,
											"value": "8DBB1E3A"
										},
										{
											"begin": 22111,
											"end": 35086,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 35086,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 22111,
											"end": 35086,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 35086,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 35086,
											"name": "PUSH",
											"source": 0,
											"value": "93F1A40B"
										},
										{
											"begin": 22111,
											"end": 35086,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 35086,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 22111,
											"end": 35086,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 35086,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 35086,
											"name": "PUSH",
											"source": 0,
											"value": "CB3CBA55"
										},
										{
											"begin": 22111,
											"end": 35086,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 35086,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 22111,
											"end": 35086,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 35086,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 35086,
											"name": "PUSH",
											"source": 0,
											"value": "D0D41FE1"
										},
										{
											"begin": 22111,
											"end": 35086,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 35086,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 22111,
											"end": 35086,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 35086,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 22111,
											"end": 35086,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 35086,
											"name": "tag",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 22111,
											"end": 35086,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 35086,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 35086,
											"name": "PUSH",
											"source": 0,
											"value": "7CD07E47"
										},
										{
											"begin": 22111,
											"end": 35086,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 35086,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 22111,
											"end": 35086,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 35086,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 35086,
											"name": "PUSH",
											"source": 0,
											"value": "7CD07E47"
										},
										{
											"begin": 22111,
											"end": 35086,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 35086,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 22111,
											"end": 35086,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 35086,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 35086,
											"name": "PUSH",
											"source": 0,
											"value": "8AA28550"
										},
										{
											"begin": 22111,
											"end": 35086,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 35086,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 22111,
											"end": 35086,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 35086,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 35086,
											"name": "PUSH",
											"source": 0,
											"value": "8C51793B"
										},
										{
											"begin": 22111,
											"end": 35086,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 35086,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 22111,
											"end": 35086,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 35086,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 35086,
											"name": "PUSH",
											"source": 0,
											"value": "8DA5CB5B"
										},
										{
											"begin": 22111,
											"end": 35086,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 35086,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 22111,
											"end": 35086,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 35086,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 22111,
											"end": 35086,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 35086,
											"name": "tag",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 22111,
											"end": 35086,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 35086,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 35086,
											"name": "PUSH",
											"source": 0,
											"value": "61C1B724"
										},
										{
											"begin": 22111,
											"end": 35086,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 35086,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 22111,
											"end": 35086,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 35086,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 35086,
											"name": "PUSH",
											"source": 0,
											"value": "630B5BA1"
										},
										{
											"begin": 22111,
											"end": 35086,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 35086,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 22111,
											"end": 35086,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 35086,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 35086,
											"name": "PUSH",
											"source": 0,
											"value": "64482F79"
										},
										{
											"begin": 22111,
											"end": 35086,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 35086,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 22111,
											"end": 35086,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 35086,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 35086,
											"name": "PUSH",
											"source": 0,
											"value": "715018A6"
										},
										{
											"begin": 22111,
											"end": 35086,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 35086,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 22111,
											"end": 35086,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 35086,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 22111,
											"end": 35086,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 35086,
											"name": "tag",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 22111,
											"end": 35086,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 35086,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 35086,
											"name": "PUSH",
											"source": 0,
											"value": "41441D3B"
										},
										{
											"begin": 22111,
											"end": 35086,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 35086,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 22111,
											"end": 35086,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 35086,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 35086,
											"name": "PUSH",
											"source": 0,
											"value": "4EA2813C"
										},
										{
											"begin": 22111,
											"end": 35086,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 35086,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 22111,
											"end": 35086,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 35086,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 35086,
											"name": "PUSH",
											"source": 0,
											"value": "4EA2813C"
										},
										{
											"begin": 22111,
											"end": 35086,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 35086,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 22111,
											"end": 35086,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 35086,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 35086,
											"name": "PUSH",
											"source": 0,
											"value": "51EB05A6"
										},
										{
											"begin": 22111,
											"end": 35086,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 35086,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 22111,
											"end": 35086,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 35086,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 35086,
											"name": "PUSH",
											"source": 0,
											"value": "5312EA8E"
										},
										{
											"begin": 22111,
											"end": 35086,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 35086,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 22111,
											"end": 35086,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 35086,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 35086,
											"name": "PUSH",
											"source": 0,
											"value": "5990C569"
										},
										{
											"begin": 22111,
											"end": 35086,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 35086,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 22111,
											"end": 35086,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 35086,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 35086,
											"name": "PUSH",
											"source": 0,
											"value": "5FFE6146"
										},
										{
											"begin": 22111,
											"end": 35086,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 35086,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 22111,
											"end": 35086,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 35086,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 22111,
											"end": 35086,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 35086,
											"name": "tag",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 22111,
											"end": 35086,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 35086,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 35086,
											"name": "PUSH",
											"source": 0,
											"value": "41441D3B"
										},
										{
											"begin": 22111,
											"end": 35086,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 35086,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 22111,
											"end": 35086,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 35086,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 35086,
											"name": "PUSH",
											"source": 0,
											"value": "441A3E70"
										},
										{
											"begin": 22111,
											"end": 35086,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 35086,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 22111,
											"end": 35086,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 35086,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 35086,
											"name": "PUSH",
											"source": 0,
											"value": "454B0608"
										},
										{
											"begin": 22111,
											"end": 35086,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 35086,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 22111,
											"end": 35086,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 35086,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 35086,
											"name": "PUSH",
											"source": 0,
											"value": "48CD4CB1"
										},
										{
											"begin": 22111,
											"end": 35086,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 35086,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 22111,
											"end": 35086,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 35086,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 22111,
											"end": 35086,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 35086,
											"name": "tag",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 22111,
											"end": 35086,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 35086,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 35086,
											"name": "PUSH",
											"source": 0,
											"value": "1D5FBD87"
										},
										{
											"begin": 22111,
											"end": 35086,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 35086,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 22111,
											"end": 35086,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 35086,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 35086,
											"name": "PUSH",
											"source": 0,
											"value": "1D5FBD87"
										},
										{
											"begin": 22111,
											"end": 35086,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 35086,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 22111,
											"end": 35086,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 35086,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 35086,
											"name": "PUSH",
											"source": 0,
											"value": "1EAAA045"
										},
										{
											"begin": 22111,
											"end": 35086,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 35086,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 22111,
											"end": 35086,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 35086,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 35086,
											"name": "PUSH",
											"source": 0,
											"value": "23CF3118"
										},
										{
											"begin": 22111,
											"end": 35086,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 35086,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 22111,
											"end": 35086,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 35086,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 35086,
											"name": "PUSH",
											"source": 0,
											"value": "3DF7AFF3"
										},
										{
											"begin": 22111,
											"end": 35086,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 35086,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 22111,
											"end": 35086,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 35086,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 22111,
											"end": 35086,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 35086,
											"name": "tag",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 22111,
											"end": 35086,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 35086,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 35086,
											"name": "PUSH",
											"source": 0,
											"value": "81E3EDA"
										},
										{
											"begin": 22111,
											"end": 35086,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 35086,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 22111,
											"end": 35086,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 35086,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 35086,
											"name": "PUSH",
											"source": 0,
											"value": "1058D281"
										},
										{
											"begin": 22111,
											"end": 35086,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 35086,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 22111,
											"end": 35086,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 35086,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 35086,
											"name": "PUSH",
											"source": 0,
											"value": "1526FE27"
										},
										{
											"begin": 22111,
											"end": 35086,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 35086,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 22111,
											"end": 35086,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 35086,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 35086,
											"name": "PUSH",
											"source": 0,
											"value": "17CAF6F1"
										},
										{
											"begin": 22111,
											"end": 35086,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 35086,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 22111,
											"end": 35086,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 35086,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 22111,
											"end": 35086,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 35086,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 22111,
											"end": 35086,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22111,
											"end": 35086,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 26973,
											"end": 27068,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 26973,
											"end": 27068,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26973,
											"end": 27068,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 26973,
											"end": 27068,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 26973,
											"end": 27068,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 26973,
											"end": 27068,
											"name": "tag",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 26973,
											"end": 27068,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26973,
											"end": 27068,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 26973,
											"end": 27068,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 26973,
											"end": 27068,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 26973,
											"end": 27068,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 26973,
											"end": 27068,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26973,
											"end": 27068,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 26973,
											"end": 27068,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 26973,
											"end": 27068,
											"name": "tag",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 26973,
											"end": 27068,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26973,
											"end": 27068,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 26973,
											"end": 27068,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 26973,
											"end": 27068,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26973,
											"end": 27068,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 26973,
											"end": 27068,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 26973,
											"end": 27068,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26973,
											"end": 27068,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 33679,
											"end": 34426,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 33679,
											"end": 34426,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33679,
											"end": 34426,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 33679,
											"end": 34426,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 33679,
											"end": 34426,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 33679,
											"end": 34426,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 33679,
											"end": 34426,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 33679,
											"end": 34426,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 33679,
											"end": 34426,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 33679,
											"end": 34426,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33679,
											"end": 34426,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 33679,
											"end": 34426,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 33679,
											"end": 34426,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33679,
											"end": 34426,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 33679,
											"end": 34426,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 33679,
											"end": 34426,
											"name": "tag",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 33679,
											"end": 34426,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33679,
											"end": 34426,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 33679,
											"end": 34426,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 33679,
											"end": 34426,
											"name": "tag",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 33679,
											"end": 34426,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33679,
											"end": 34426,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 23993,
											"end": 24019,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 23993,
											"end": 24019,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23993,
											"end": 24019,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 23993,
											"end": 24019,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 23993,
											"end": 24019,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23993,
											"end": 24019,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 23993,
											"end": 24019,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 23993,
											"end": 24019,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23993,
											"end": 24019,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 23993,
											"end": 24019,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23993,
											"end": 24019,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 23993,
											"end": 24019,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 23993,
											"end": 24019,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23993,
											"end": 24019,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 23993,
											"end": 24019,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 23993,
											"end": 24019,
											"name": "tag",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 23993,
											"end": 24019,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23993,
											"end": 24019,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 23993,
											"end": 24019,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 23993,
											"end": 24019,
											"name": "tag",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 23993,
											"end": 24019,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23993,
											"end": 24019,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 23993,
											"end": 24019,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 23993,
											"end": 24019,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 23993,
											"end": 24019,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 23993,
											"end": 24019,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 23993,
											"end": 24019,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 23993,
											"end": 24019,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 23993,
											"end": 24019,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23993,
											"end": 24019,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 23993,
											"end": 24019,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 23993,
											"end": 24019,
											"name": "tag",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 23993,
											"end": 24019,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23993,
											"end": 24019,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 23993,
											"end": 24019,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 23993,
											"end": 24019,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23993,
											"end": 24019,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 23993,
											"end": 24019,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 23993,
											"end": 24019,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23993,
											"end": 24019,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 24234,
											"end": 24268,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 24234,
											"end": 24268,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24234,
											"end": 24268,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 24234,
											"end": 24268,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 24234,
											"end": 24268,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 24234,
											"end": 24268,
											"name": "tag",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 24234,
											"end": 24268,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24234,
											"end": 24268,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 24234,
											"end": 24268,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 24234,
											"end": 24268,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 24234,
											"end": 24268,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 24234,
											"end": 24268,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24234,
											"end": 24268,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 24234,
											"end": 24268,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 24234,
											"end": 24268,
											"name": "tag",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 24234,
											"end": 24268,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24234,
											"end": 24268,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 24234,
											"end": 24268,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 24234,
											"end": 24268,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24234,
											"end": 24268,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 24234,
											"end": 24268,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 24234,
											"end": 24268,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24234,
											"end": 24268,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 25566,
											"end": 26834,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 25566,
											"end": 26834,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25566,
											"end": 26834,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 25566,
											"end": 26834,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 25566,
											"end": 26834,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25566,
											"end": 26834,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 25566,
											"end": 26834,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 25566,
											"end": 26834,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25566,
											"end": 26834,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 25566,
											"end": 26834,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25566,
											"end": 26834,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 25566,
											"end": 26834,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 25566,
											"end": 26834,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25566,
											"end": 26834,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 25566,
											"end": 26834,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 25566,
											"end": 26834,
											"name": "tag",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 25566,
											"end": 26834,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25566,
											"end": 26834,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 25566,
											"end": 26834,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 25566,
											"end": 26834,
											"name": "tag",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 25566,
											"end": 26834,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25566,
											"end": 26834,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 27237,
											"end": 27797,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 27237,
											"end": 27797,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27237,
											"end": 27797,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 27237,
											"end": 27797,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 27237,
											"end": 27797,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27237,
											"end": 27797,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 27237,
											"end": 27797,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 27237,
											"end": 27797,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27237,
											"end": 27797,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 27237,
											"end": 27797,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27237,
											"end": 27797,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 27237,
											"end": 27797,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 27237,
											"end": 27797,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27237,
											"end": 27797,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 27237,
											"end": 27797,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 27237,
											"end": 27797,
											"name": "tag",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 27237,
											"end": 27797,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27237,
											"end": 27797,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 27237,
											"end": 27797,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 27237,
											"end": 27797,
											"name": "tag",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 27237,
											"end": 27797,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27237,
											"end": 27797,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 28275,
											"end": 28377,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 28275,
											"end": 28377,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28275,
											"end": 28377,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 28275,
											"end": 28377,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 28275,
											"end": 28377,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28275,
											"end": 28377,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 28275,
											"end": 28377,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 28275,
											"end": 28377,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28275,
											"end": 28377,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 28275,
											"end": 28377,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28275,
											"end": 28377,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 28275,
											"end": 28377,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 28275,
											"end": 28377,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28275,
											"end": 28377,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 28275,
											"end": 28377,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 28275,
											"end": 28377,
											"name": "tag",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 28275,
											"end": 28377,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28275,
											"end": 28377,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 28275,
											"end": 28377,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 28275,
											"end": 28377,
											"name": "tag",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 28275,
											"end": 28377,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28275,
											"end": 28377,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 34974,
											"end": 35083,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 34974,
											"end": 35083,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34974,
											"end": 35083,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 34974,
											"end": 35083,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 34974,
											"end": 35083,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 34974,
											"end": 35083,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 34974,
											"end": 35083,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 34974,
											"end": 35083,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34974,
											"end": 35083,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 34974,
											"end": 35083,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34974,
											"end": 35083,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 34974,
											"end": 35083,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 34974,
											"end": 35083,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34974,
											"end": 35083,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 34974,
											"end": 35083,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 34974,
											"end": 35083,
											"name": "tag",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 34974,
											"end": 35083,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34974,
											"end": 35083,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 34974,
											"end": 35083,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 34974,
											"end": 35083,
											"name": "tag",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 34974,
											"end": 35083,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34974,
											"end": 35083,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 32830,
											"end": 33627,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 32830,
											"end": 33627,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32830,
											"end": 33627,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 32830,
											"end": 33627,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 32830,
											"end": 33627,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 32830,
											"end": 33627,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 32830,
											"end": 33627,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 32830,
											"end": 33627,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32830,
											"end": 33627,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 32830,
											"end": 33627,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32830,
											"end": 33627,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 32830,
											"end": 33627,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 32830,
											"end": 33627,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32830,
											"end": 33627,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 32830,
											"end": 33627,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 32830,
											"end": 33627,
											"name": "tag",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 32830,
											"end": 33627,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32830,
											"end": 33627,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 32830,
											"end": 33627,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 32830,
											"end": 33627,
											"name": "tag",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 32830,
											"end": 33627,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32830,
											"end": 33627,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 31990,
											"end": 32777,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 31990,
											"end": 32777,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31990,
											"end": 32777,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 31990,
											"end": 32777,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 31990,
											"end": 32777,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 31990,
											"end": 32777,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 31990,
											"end": 32777,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 31990,
											"end": 32777,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31990,
											"end": 32777,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 31990,
											"end": 32777,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31990,
											"end": 32777,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 31990,
											"end": 32777,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 31990,
											"end": 32777,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31990,
											"end": 32777,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 31990,
											"end": 32777,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 31990,
											"end": 32777,
											"name": "tag",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 31990,
											"end": 32777,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31990,
											"end": 32777,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 31990,
											"end": 32777,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 31990,
											"end": 32777,
											"name": "tag",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 31990,
											"end": 32777,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31990,
											"end": 32777,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 28500,
											"end": 28991,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 28500,
											"end": 28991,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28500,
											"end": 28991,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 28500,
											"end": 28991,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 28500,
											"end": 28991,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28500,
											"end": 28991,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 28500,
											"end": 28991,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 28500,
											"end": 28991,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28500,
											"end": 28991,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 28500,
											"end": 28991,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28500,
											"end": 28991,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 28500,
											"end": 28991,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 28500,
											"end": 28991,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28500,
											"end": 28991,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 28500,
											"end": 28991,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 28500,
											"end": 28991,
											"name": "tag",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 28500,
											"end": 28991,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28500,
											"end": 28991,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 28500,
											"end": 28991,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 28500,
											"end": 28991,
											"name": "tag",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 28500,
											"end": 28991,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28500,
											"end": 28991,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 24326,
											"end": 24351,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 24326,
											"end": 24351,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24326,
											"end": 24351,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 24326,
											"end": 24351,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 24326,
											"end": 24351,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 24326,
											"end": 24351,
											"name": "tag",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 24326,
											"end": 24351,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24326,
											"end": 24351,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 24326,
											"end": 24351,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 24326,
											"end": 24351,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 24326,
											"end": 24351,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 24326,
											"end": 24351,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24326,
											"end": 24351,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 24326,
											"end": 24351,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 24326,
											"end": 24351,
											"name": "tag",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 24326,
											"end": 24351,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24326,
											"end": 24351,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 24326,
											"end": 24351,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 24326,
											"end": 24351,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24326,
											"end": 24351,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 24326,
											"end": 24351,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 24326,
											"end": 24351,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24326,
											"end": 24351,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 25352,
											"end": 25558,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 25352,
											"end": 25558,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25352,
											"end": 25558,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 25352,
											"end": 25558,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 25352,
											"end": 25558,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25352,
											"end": 25558,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 25352,
											"end": 25558,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 25352,
											"end": 25558,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25352,
											"end": 25558,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 25352,
											"end": 25558,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25352,
											"end": 25558,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 25352,
											"end": 25558,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 25352,
											"end": 25558,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25352,
											"end": 25558,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 25352,
											"end": 25558,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 25352,
											"end": 25558,
											"name": "tag",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 25352,
											"end": 25558,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25352,
											"end": 25558,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 25352,
											"end": 25558,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 25352,
											"end": 25558,
											"name": "tag",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 25352,
											"end": 25558,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25352,
											"end": 25558,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 30382,
											"end": 31072,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 30382,
											"end": 31072,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30382,
											"end": 31072,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 30382,
											"end": 31072,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 30382,
											"end": 31072,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 30382,
											"end": 31072,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 30382,
											"end": 31072,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 30382,
											"end": 31072,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30382,
											"end": 31072,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 30382,
											"end": 31072,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30382,
											"end": 31072,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 30382,
											"end": 31072,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 30382,
											"end": 31072,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30382,
											"end": 31072,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 30382,
											"end": 31072,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 30382,
											"end": 31072,
											"name": "tag",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 30382,
											"end": 31072,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30382,
											"end": 31072,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 30382,
											"end": 31072,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 30382,
											"end": 31072,
											"name": "tag",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 30382,
											"end": 31072,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30382,
											"end": 31072,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 34505,
											"end": 34861,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 34505,
											"end": 34861,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34505,
											"end": 34861,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 34505,
											"end": 34861,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 34505,
											"end": 34861,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 34505,
											"end": 34861,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 34505,
											"end": 34861,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 34505,
											"end": 34861,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34505,
											"end": 34861,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 34505,
											"end": 34861,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34505,
											"end": 34861,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 34505,
											"end": 34861,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 34505,
											"end": 34861,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34505,
											"end": 34861,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 34505,
											"end": 34861,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 34505,
											"end": 34861,
											"name": "tag",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 34505,
											"end": 34861,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34505,
											"end": 34861,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 34505,
											"end": 34861,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 34505,
											"end": 34861,
											"name": "tag",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 34505,
											"end": 34861,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34505,
											"end": 34861,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 23707,
											"end": 23735,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 23707,
											"end": 23735,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23707,
											"end": 23735,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 23707,
											"end": 23735,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 23707,
											"end": 23735,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 23707,
											"end": 23735,
											"name": "tag",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 23707,
											"end": 23735,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23707,
											"end": 23735,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 23707,
											"end": 23735,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 23707,
											"end": 23735,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 23707,
											"end": 23735,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 23707,
											"end": 23735,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23707,
											"end": 23735,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 23707,
											"end": 23735,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 23707,
											"end": 23735,
											"name": "tag",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 23707,
											"end": 23735,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23707,
											"end": 23735,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 23707,
											"end": 23735,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 23707,
											"end": 23735,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23707,
											"end": 23735,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 23707,
											"end": 23735,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 23707,
											"end": 23735,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23707,
											"end": 23735,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 26842,
											"end": 26965,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 26842,
											"end": 26965,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26842,
											"end": 26965,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 26842,
											"end": 26965,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 26842,
											"end": 26965,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26842,
											"end": 26965,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 26842,
											"end": 26965,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 26842,
											"end": 26965,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26842,
											"end": 26965,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 26842,
											"end": 26965,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26842,
											"end": 26965,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 26842,
											"end": 26965,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 26842,
											"end": 26965,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26842,
											"end": 26965,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 26842,
											"end": 26965,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 26842,
											"end": 26965,
											"name": "tag",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 26842,
											"end": 26965,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26842,
											"end": 26965,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 26842,
											"end": 26965,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 26842,
											"end": 26965,
											"name": "tag",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 26842,
											"end": 26965,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26842,
											"end": 26965,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 23533,
											"end": 23559,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 23533,
											"end": 23559,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23533,
											"end": 23559,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 23533,
											"end": 23559,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 23533,
											"end": 23559,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23533,
											"end": 23559,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 23533,
											"end": 23559,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 23533,
											"end": 23559,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23533,
											"end": 23559,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 23533,
											"end": 23559,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23533,
											"end": 23559,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 23533,
											"end": 23559,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 23533,
											"end": 23559,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23533,
											"end": 23559,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 23533,
											"end": 23559,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 23533,
											"end": 23559,
											"name": "tag",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 23533,
											"end": 23559,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23533,
											"end": 23559,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 23533,
											"end": 23559,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 23533,
											"end": 23559,
											"name": "tag",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 23533,
											"end": 23559,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23533,
											"end": 23559,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 23533,
											"end": 23559,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 23533,
											"end": 23559,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 23533,
											"end": 23559,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 23533,
											"end": 23559,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 23533,
											"end": 23559,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23533,
											"end": 23559,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 23533,
											"end": 23559,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 23533,
											"end": 23559,
											"name": "tag",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 23533,
											"end": 23559,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23533,
											"end": 23559,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 23533,
											"end": 23559,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 23533,
											"end": 23559,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23533,
											"end": 23559,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 23533,
											"end": 23559,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 23533,
											"end": 23559,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23533,
											"end": 23559,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 30126,
											"end": 30306,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 30126,
											"end": 30306,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30126,
											"end": 30306,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 30126,
											"end": 30306,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 30126,
											"end": 30306,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 30126,
											"end": 30306,
											"name": "tag",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 30126,
											"end": 30306,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30126,
											"end": 30306,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 27894,
											"end": 28199,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 27894,
											"end": 28199,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27894,
											"end": 28199,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 27894,
											"end": 28199,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 27894,
											"end": 28199,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27894,
											"end": 28199,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 27894,
											"end": 28199,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 27894,
											"end": 28199,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27894,
											"end": 28199,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 27894,
											"end": 28199,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27894,
											"end": 28199,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 27894,
											"end": 28199,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 27894,
											"end": 28199,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27894,
											"end": 28199,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 27894,
											"end": 28199,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 27894,
											"end": 28199,
											"name": "tag",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 27894,
											"end": 28199,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27894,
											"end": 28199,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 27894,
											"end": 28199,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 27894,
											"end": 28199,
											"name": "tag",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 27894,
											"end": 28199,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27894,
											"end": 28199,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 20756,
											"end": 20859,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 20756,
											"end": 20859,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20756,
											"end": 20859,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 20756,
											"end": 20859,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 20756,
											"end": 20859,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 20756,
											"end": 20859,
											"name": "tag",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 20756,
											"end": 20859,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20756,
											"end": 20859,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 23930,
											"end": 23959,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 23930,
											"end": 23959,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23930,
											"end": 23959,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 23930,
											"end": 23959,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 23930,
											"end": 23959,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 23930,
											"end": 23959,
											"name": "tag",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 23930,
											"end": 23959,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23930,
											"end": 23959,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 23930,
											"end": 23959,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 23930,
											"end": 23959,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 23930,
											"end": 23959,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 23930,
											"end": 23959,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23930,
											"end": 23959,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 23930,
											"end": 23959,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 23930,
											"end": 23959,
											"name": "tag",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 23930,
											"end": 23959,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23930,
											"end": 23959,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 23930,
											"end": 23959,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 23930,
											"end": 23959,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23930,
											"end": 23959,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 23930,
											"end": 23959,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 23930,
											"end": 23959,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23930,
											"end": 23959,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 23790,
											"end": 23825,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 23790,
											"end": 23825,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23790,
											"end": 23825,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 23790,
											"end": 23825,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 23790,
											"end": 23825,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 23790,
											"end": 23825,
											"name": "tag",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 23790,
											"end": 23825,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23790,
											"end": 23825,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 23790,
											"end": 23825,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 23790,
											"end": 23825,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 23790,
											"end": 23825,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 23790,
											"end": 23825,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23790,
											"end": 23825,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 23790,
											"end": 23825,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 23790,
											"end": 23825,
											"name": "tag",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 23790,
											"end": 23825,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23790,
											"end": 23825,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 23790,
											"end": 23825,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 23790,
											"end": 23825,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23790,
											"end": 23825,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 23790,
											"end": 23825,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 23790,
											"end": 23825,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23790,
											"end": 23825,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 25226,
											"end": 25344,
											"name": "tag",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 25226,
											"end": 25344,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25226,
											"end": 25344,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 25226,
											"end": 25344,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 25226,
											"end": 25344,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25226,
											"end": 25344,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 25226,
											"end": 25344,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 25226,
											"end": 25344,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25226,
											"end": 25344,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 25226,
											"end": 25344,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25226,
											"end": 25344,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 25226,
											"end": 25344,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 25226,
											"end": 25344,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25226,
											"end": 25344,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 25226,
											"end": 25344,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 25226,
											"end": 25344,
											"name": "tag",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 25226,
											"end": 25344,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25226,
											"end": 25344,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 25226,
											"end": 25344,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 25226,
											"end": 25344,
											"name": "tag",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 25226,
											"end": 25344,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25226,
											"end": 25344,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 25226,
											"end": 25344,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 25226,
											"end": 25344,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 25226,
											"end": 25344,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 25226,
											"end": 25344,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25226,
											"end": 25344,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 25226,
											"end": 25344,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 25226,
											"end": 25344,
											"name": "tag",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 25226,
											"end": 25344,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25226,
											"end": 25344,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 25226,
											"end": 25344,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 25226,
											"end": 25344,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25226,
											"end": 25344,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 25226,
											"end": 25344,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 25226,
											"end": 25344,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25226,
											"end": 25344,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 20105,
											"end": 20192,
											"name": "tag",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 20105,
											"end": 20192,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20105,
											"end": 20192,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 20105,
											"end": 20192,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 20105,
											"end": 20192,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 20105,
											"end": 20192,
											"name": "tag",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 20105,
											"end": 20192,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20105,
											"end": 20192,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 20105,
											"end": 20192,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 20105,
											"end": 20192,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 20105,
											"end": 20192,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 20105,
											"end": 20192,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20105,
											"end": 20192,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 20105,
											"end": 20192,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 20105,
											"end": 20192,
											"name": "tag",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 20105,
											"end": 20192,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20105,
											"end": 20192,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 20105,
											"end": 20192,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 20105,
											"end": 20192,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20105,
											"end": 20192,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 20105,
											"end": 20192,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 20105,
											"end": 20192,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20105,
											"end": 20192,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 29067,
											"end": 29211,
											"name": "tag",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 29067,
											"end": 29211,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29067,
											"end": 29211,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 29067,
											"end": 29211,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 29067,
											"end": 29211,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29067,
											"end": 29211,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 29067,
											"end": 29211,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 29067,
											"end": 29211,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29067,
											"end": 29211,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 29067,
											"end": 29211,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29067,
											"end": 29211,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 29067,
											"end": 29211,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 29067,
											"end": 29211,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29067,
											"end": 29211,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 29067,
											"end": 29211,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 29067,
											"end": 29211,
											"name": "tag",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 29067,
											"end": 29211,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29067,
											"end": 29211,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 29067,
											"end": 29211,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 29067,
											"end": 29211,
											"name": "tag",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 29067,
											"end": 29211,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29067,
											"end": 29211,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 29067,
											"end": 29211,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 29067,
											"end": 29211,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 29067,
											"end": 29211,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 29067,
											"end": 29211,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29067,
											"end": 29211,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 29067,
											"end": 29211,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 29067,
											"end": 29211,
											"name": "tag",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 29067,
											"end": 29211,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29067,
											"end": 29211,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 29067,
											"end": 29211,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 29067,
											"end": 29211,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29067,
											"end": 29211,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 29067,
											"end": 29211,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 29067,
											"end": 29211,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29067,
											"end": 29211,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 24075,
											"end": 24139,
											"name": "tag",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 24075,
											"end": 24139,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24075,
											"end": 24139,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 24075,
											"end": 24139,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 24075,
											"end": 24139,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24075,
											"end": 24139,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 24075,
											"end": 24139,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 24075,
											"end": 24139,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24075,
											"end": 24139,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 24075,
											"end": 24139,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24075,
											"end": 24139,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 24075,
											"end": 24139,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 24075,
											"end": 24139,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24075,
											"end": 24139,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 24075,
											"end": 24139,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 24075,
											"end": 24139,
											"name": "tag",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 24075,
											"end": 24139,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24075,
											"end": 24139,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 24075,
											"end": 24139,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 24075,
											"end": 24139,
											"name": "tag",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 24075,
											"end": 24139,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24075,
											"end": 24139,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 24075,
											"end": 24139,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 24075,
											"end": 24139,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 24075,
											"end": 24139,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 24075,
											"end": 24139,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 24075,
											"end": 24139,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24075,
											"end": 24139,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 24075,
											"end": 24139,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 24075,
											"end": 24139,
											"name": "tag",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 24075,
											"end": 24139,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24075,
											"end": 24139,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 24075,
											"end": 24139,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 24075,
											"end": 24139,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24075,
											"end": 24139,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 24075,
											"end": 24139,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 24075,
											"end": 24139,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24075,
											"end": 24139,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 23593,
											"end": 23610,
											"name": "tag",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 23593,
											"end": 23610,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23593,
											"end": 23610,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 23593,
											"end": 23610,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 23593,
											"end": 23610,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 23593,
											"end": 23610,
											"name": "tag",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 23593,
											"end": 23610,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23593,
											"end": 23610,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 23593,
											"end": 23610,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 23593,
											"end": 23610,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 23593,
											"end": 23610,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 23593,
											"end": 23610,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23593,
											"end": 23610,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 23593,
											"end": 23610,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 23593,
											"end": 23610,
											"name": "tag",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 23593,
											"end": 23610,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23593,
											"end": 23610,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 23593,
											"end": 23610,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 23593,
											"end": 23610,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23593,
											"end": 23610,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 23593,
											"end": 23610,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 23593,
											"end": 23610,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23593,
											"end": 23610,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 34873,
											"end": 34968,
											"name": "tag",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 34873,
											"end": 34968,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34873,
											"end": 34968,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 34873,
											"end": 34968,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 34873,
											"end": 34968,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 34873,
											"end": 34968,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 34873,
											"end": 34968,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 34873,
											"end": 34968,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34873,
											"end": 34968,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 34873,
											"end": 34968,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34873,
											"end": 34968,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 34873,
											"end": 34968,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 34873,
											"end": 34968,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34873,
											"end": 34968,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 34873,
											"end": 34968,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 34873,
											"end": 34968,
											"name": "tag",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 34873,
											"end": 34968,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34873,
											"end": 34968,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "148"
										},
										{
											"begin": 34873,
											"end": 34968,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 34873,
											"end": 34968,
											"name": "tag",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 34873,
											"end": 34968,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34873,
											"end": 34968,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 24360,
											"end": 24407,
											"name": "tag",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 24360,
											"end": 24407,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24360,
											"end": 24407,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 24360,
											"end": 24407,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 24360,
											"end": 24407,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24360,
											"end": 24407,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 24360,
											"end": 24407,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 24360,
											"end": 24407,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24360,
											"end": 24407,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 24360,
											"end": 24407,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24360,
											"end": 24407,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 24360,
											"end": 24407,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 24360,
											"end": 24407,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24360,
											"end": 24407,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 24360,
											"end": 24407,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 24360,
											"end": 24407,
											"name": "tag",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 24360,
											"end": 24407,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24360,
											"end": 24407,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 24360,
											"end": 24407,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 24360,
											"end": 24407,
											"name": "tag",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 24360,
											"end": 24407,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24360,
											"end": 24407,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 24360,
											"end": 24407,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 24360,
											"end": 24407,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "152"
										},
										{
											"begin": 24360,
											"end": 24407,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 24360,
											"end": 24407,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24360,
											"end": 24407,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 24360,
											"end": 24407,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 24360,
											"end": 24407,
											"name": "tag",
											"source": 0,
											"value": "152"
										},
										{
											"begin": 24360,
											"end": 24407,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24360,
											"end": 24407,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 24360,
											"end": 24407,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 24360,
											"end": 24407,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24360,
											"end": 24407,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 24360,
											"end": 24407,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 24360,
											"end": 24407,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24360,
											"end": 24407,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 23638,
											"end": 23660,
											"name": "tag",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 23638,
											"end": 23660,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23638,
											"end": 23660,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "153"
										},
										{
											"begin": 23638,
											"end": 23660,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 23638,
											"end": 23660,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 23638,
											"end": 23660,
											"name": "tag",
											"source": 0,
											"value": "153"
										},
										{
											"begin": 23638,
											"end": 23660,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23638,
											"end": 23660,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 23638,
											"end": 23660,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 23638,
											"end": 23660,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 23638,
											"end": 23660,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 23638,
											"end": 23660,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23638,
											"end": 23660,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 23638,
											"end": 23660,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 23638,
											"end": 23660,
											"name": "tag",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 23638,
											"end": 23660,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23638,
											"end": 23660,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 23638,
											"end": 23660,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 23638,
											"end": 23660,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23638,
											"end": 23660,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 23638,
											"end": 23660,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 23638,
											"end": 23660,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23638,
											"end": 23660,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 31142,
											"end": 31938,
											"name": "tag",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 31142,
											"end": 31938,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31142,
											"end": 31938,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "156"
										},
										{
											"begin": 31142,
											"end": 31938,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 31142,
											"end": 31938,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 31142,
											"end": 31938,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 31142,
											"end": 31938,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 31142,
											"end": 31938,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31142,
											"end": 31938,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 31142,
											"end": 31938,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31142,
											"end": 31938,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 31142,
											"end": 31938,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 31142,
											"end": 31938,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31142,
											"end": 31938,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 31142,
											"end": 31938,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 31142,
											"end": 31938,
											"name": "tag",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 31142,
											"end": 31938,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31142,
											"end": 31938,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "158"
										},
										{
											"begin": 31142,
											"end": 31938,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 31142,
											"end": 31938,
											"name": "tag",
											"source": 0,
											"value": "156"
										},
										{
											"begin": 31142,
											"end": 31938,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31142,
											"end": 31938,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 21014,
											"end": 21215,
											"name": "tag",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 21014,
											"end": 21215,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21014,
											"end": 21215,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 21014,
											"end": 21215,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 21014,
											"end": 21215,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21014,
											"end": 21215,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 21014,
											"end": 21215,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 21014,
											"end": 21215,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21014,
											"end": 21215,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 21014,
											"end": 21215,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21014,
											"end": 21215,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 21014,
											"end": 21215,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 21014,
											"end": 21215,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21014,
											"end": 21215,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 21014,
											"end": 21215,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 21014,
											"end": 21215,
											"name": "tag",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 21014,
											"end": 21215,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21014,
											"end": 21215,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 21014,
											"end": 21215,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 21014,
											"end": 21215,
											"name": "tag",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 21014,
											"end": 21215,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21014,
											"end": 21215,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 29276,
											"end": 30043,
											"name": "tag",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 29276,
											"end": 30043,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29276,
											"end": 30043,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "162"
										},
										{
											"begin": 29276,
											"end": 30043,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 29276,
											"end": 30043,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29276,
											"end": 30043,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 29276,
											"end": 30043,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 29276,
											"end": 30043,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29276,
											"end": 30043,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 29276,
											"end": 30043,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29276,
											"end": 30043,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "163"
										},
										{
											"begin": 29276,
											"end": 30043,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 29276,
											"end": 30043,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29276,
											"end": 30043,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 29276,
											"end": 30043,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 29276,
											"end": 30043,
											"name": "tag",
											"source": 0,
											"value": "163"
										},
										{
											"begin": 29276,
											"end": 30043,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29276,
											"end": 30043,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "164"
										},
										{
											"begin": 29276,
											"end": 30043,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 29276,
											"end": 30043,
											"name": "tag",
											"source": 0,
											"value": "162"
										},
										{
											"begin": 29276,
											"end": 30043,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29276,
											"end": 30043,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 29276,
											"end": 30043,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 29276,
											"end": 30043,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "165"
										},
										{
											"begin": 29276,
											"end": 30043,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 29276,
											"end": 30043,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29276,
											"end": 30043,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 29276,
											"end": 30043,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 29276,
											"end": 30043,
											"name": "tag",
											"source": 0,
											"value": "165"
										},
										{
											"begin": 29276,
											"end": 30043,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29276,
											"end": 30043,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 29276,
											"end": 30043,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 29276,
											"end": 30043,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29276,
											"end": 30043,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 29276,
											"end": 30043,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 29276,
											"end": 30043,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29276,
											"end": 30043,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 26973,
											"end": 27068,
											"name": "tag",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 26973,
											"end": 27068,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27018,
											"end": 27025,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 27045,
											"end": 27053,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 27045,
											"end": 27060,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27045,
											"end": 27060,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 27045,
											"end": 27060,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27045,
											"end": 27060,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 27038,
											"end": 27060,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27038,
											"end": 27060,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 26973,
											"end": 27068,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26973,
											"end": 27068,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 33679,
											"end": 34426,
											"name": "tag",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 33679,
											"end": 34426,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33736,
											"end": 33757,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 33760,
											"end": 33768,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 33769,
											"end": 33770,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 33760,
											"end": 33771,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 33760,
											"end": 33771,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 33760,
											"end": 33771,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 33760,
											"end": 33771,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 33760,
											"end": 33771,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 33760,
											"end": 33771,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 33760,
											"end": 33771,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "169"
										},
										{
											"begin": 33760,
											"end": 33771,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "170"
										},
										{
											"begin": 33760,
											"end": 33771,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 33760,
											"end": 33771,
											"name": "tag",
											"source": 0,
											"value": "169"
										},
										{
											"begin": 33760,
											"end": 33771,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33760,
											"end": 33771,
											"name": "tag",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 33760,
											"end": 33771,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33760,
											"end": 33771,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33760,
											"end": 33771,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 33760,
											"end": 33771,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 33760,
											"end": 33771,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 33760,
											"end": 33771,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 33760,
											"end": 33771,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 33760,
											"end": 33771,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33760,
											"end": 33771,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 33760,
											"end": 33771,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 33760,
											"end": 33771,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 33736,
											"end": 33771,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33736,
											"end": 33771,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 33782,
											"end": 33803,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 33806,
											"end": 33814,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 33806,
											"end": 33817,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 33815,
											"end": 33816,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 33806,
											"end": 33817,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 33806,
											"end": 33817,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 33806,
											"end": 33817,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 33806,
											"end": 33817,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 33806,
											"end": 33817,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33806,
											"end": 33817,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 33806,
											"end": 33817,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 33806,
											"end": 33817,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 33806,
											"end": 33817,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 33806,
											"end": 33817,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 33806,
											"end": 33817,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 33806,
											"end": 33829,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 33818,
											"end": 33828,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 33806,
											"end": 33829,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 33806,
											"end": 33829,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 33806,
											"end": 33829,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 33806,
											"end": 33829,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 33806,
											"end": 33829,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 33806,
											"end": 33829,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 33806,
											"end": 33829,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 33806,
											"end": 33829,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 33806,
											"end": 33829,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33806,
											"end": 33829,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 33806,
											"end": 33829,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 33806,
											"end": 33829,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 33806,
											"end": 33829,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 33806,
											"end": 33829,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 33806,
											"end": 33829,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 33782,
											"end": 33829,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33782,
											"end": 33829,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 33863,
											"end": 33870,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 33848,
											"end": 33852,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 33848,
											"end": 33859,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 33848,
											"end": 33859,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 33848,
											"end": 33859,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 33848,
											"end": 33870,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 33848,
											"end": 33870,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 33840,
											"end": 33893,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "172"
										},
										{
											"begin": 33840,
											"end": 33893,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 33840,
											"end": 33893,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 33840,
											"end": 33893,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 33840,
											"end": 33893,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 33840,
											"end": 33893,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 33840,
											"end": 33893,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 33840,
											"end": 33893,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 33840,
											"end": 33893,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 33840,
											"end": 33893,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "173"
										},
										{
											"begin": 33840,
											"end": 33893,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33840,
											"end": 33893,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "174"
										},
										{
											"begin": 33840,
											"end": 33893,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 33840,
											"end": 33893,
											"name": "tag",
											"source": 0,
											"value": "173"
										},
										{
											"begin": 33840,
											"end": 33893,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33840,
											"end": 33893,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 33840,
											"end": 33893,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 33840,
											"end": 33893,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 33840,
											"end": 33893,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 33840,
											"end": 33893,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 33840,
											"end": 33893,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33840,
											"end": 33893,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 33840,
											"end": 33893,
											"name": "tag",
											"source": 0,
											"value": "172"
										},
										{
											"begin": 33840,
											"end": 33893,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33904,
											"end": 33917,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "175"
										},
										{
											"begin": 33915,
											"end": 33916,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 33904,
											"end": 33914,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 33904,
											"end": 33917,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 33904,
											"end": 33917,
											"name": "tag",
											"source": 0,
											"value": "175"
										},
										{
											"begin": 33904,
											"end": 33917,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33928,
											"end": 33943,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 33946,
											"end": 34015,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 33999,
											"end": 34003,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 33999,
											"end": 34014,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 33999,
											"end": 34014,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 33999,
											"end": 34014,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 33946,
											"end": 33994,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "177"
										},
										{
											"begin": 33989,
											"end": 33993,
											"name": "PUSH",
											"source": 0,
											"value": "E8D4A51000"
										},
										{
											"begin": 33946,
											"end": 33984,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 33962,
											"end": 33966,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 33962,
											"end": 33983,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 33962,
											"end": 33983,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 33962,
											"end": 33983,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 33946,
											"end": 33950,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 33946,
											"end": 33957,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 33946,
											"end": 33957,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 33946,
											"end": 33957,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 33946,
											"end": 33961,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "179"
										},
										{
											"begin": 33946,
											"end": 33961,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33946,
											"end": 33984,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 33946,
											"end": 33984,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33946,
											"end": 33984,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 33946,
											"end": 33984,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 33946,
											"end": 33984,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 33946,
											"end": 33984,
											"name": "tag",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 33946,
											"end": 33984,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33946,
											"end": 33988,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "180"
										},
										{
											"begin": 33946,
											"end": 33988,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33946,
											"end": 33994,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 33946,
											"end": 33994,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33946,
											"end": 33994,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 33946,
											"end": 33994,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 33946,
											"end": 33994,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 33946,
											"end": 33994,
											"name": "tag",
											"source": 0,
											"value": "177"
										},
										{
											"begin": 33946,
											"end": 33994,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33946,
											"end": 33998,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "181"
										},
										{
											"begin": 33946,
											"end": 33998,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33946,
											"end": 34015,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 33946,
											"end": 34015,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33946,
											"end": 34015,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 33946,
											"end": 34015,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 33946,
											"end": 34015,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 33946,
											"end": 34015,
											"name": "tag",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 33946,
											"end": 34015,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33928,
											"end": 34015,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33928,
											"end": 34015,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 34039,
											"end": 34040,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 34029,
											"end": 34036,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34029,
											"end": 34040,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 34026,
											"end": 34133,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 34026,
											"end": 34133,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "182"
										},
										{
											"begin": 34026,
											"end": 34133,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 34084,
											"end": 34121,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "183"
										},
										{
											"begin": 34113,
											"end": 34120,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34084,
											"end": 34096,
											"name": "PUSH",
											"source": 0,
											"value": "B"
										},
										{
											"begin": 34084,
											"end": 34108,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 34097,
											"end": 34107,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 34084,
											"end": 34108,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 34084,
											"end": 34108,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 34084,
											"end": 34108,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 34084,
											"end": 34108,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 34084,
											"end": 34108,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34084,
											"end": 34108,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 34084,
											"end": 34108,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 34084,
											"end": 34108,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 34084,
											"end": 34108,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34084,
											"end": 34108,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34084,
											"end": 34108,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 34084,
											"end": 34108,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 34084,
											"end": 34108,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 34084,
											"end": 34108,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 34084,
											"end": 34108,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 34084,
											"end": 34108,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 34084,
											"end": 34112,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "184"
										},
										{
											"begin": 34084,
											"end": 34112,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34084,
											"end": 34121,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 34084,
											"end": 34121,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34084,
											"end": 34121,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 34084,
											"end": 34121,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 34084,
											"end": 34121,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 34084,
											"end": 34121,
											"name": "tag",
											"source": 0,
											"value": "183"
										},
										{
											"begin": 34084,
											"end": 34121,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34057,
											"end": 34069,
											"name": "PUSH",
											"source": 0,
											"value": "B"
										},
										{
											"begin": 34057,
											"end": 34081,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 34070,
											"end": 34080,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 34057,
											"end": 34081,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 34057,
											"end": 34081,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 34057,
											"end": 34081,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 34057,
											"end": 34081,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 34057,
											"end": 34081,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34057,
											"end": 34081,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 34057,
											"end": 34081,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 34057,
											"end": 34081,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 34057,
											"end": 34081,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34057,
											"end": 34081,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34057,
											"end": 34081,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 34057,
											"end": 34081,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 34057,
											"end": 34081,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 34057,
											"end": 34081,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 34057,
											"end": 34081,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 34057,
											"end": 34121,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34057,
											"end": 34121,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34057,
											"end": 34121,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 34057,
											"end": 34121,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 34026,
											"end": 34133,
											"name": "tag",
											"source": 0,
											"value": "182"
										},
										{
											"begin": 34026,
											"end": 34133,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34156,
											"end": 34157,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 34146,
											"end": 34153,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 34146,
											"end": 34157,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 34143,
											"end": 34294,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 34143,
											"end": 34294,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "185"
										},
										{
											"begin": 34143,
											"end": 34294,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 34188,
											"end": 34212,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "186"
										},
										{
											"begin": 34204,
											"end": 34211,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 34188,
											"end": 34192,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 34188,
											"end": 34199,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 34188,
											"end": 34199,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 34188,
											"end": 34199,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 34188,
											"end": 34203,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "181"
										},
										{
											"begin": 34188,
											"end": 34203,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34188,
											"end": 34212,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 34188,
											"end": 34212,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34188,
											"end": 34212,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 34188,
											"end": 34212,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 34188,
											"end": 34212,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 34188,
											"end": 34212,
											"name": "tag",
											"source": 0,
											"value": "186"
										},
										{
											"begin": 34188,
											"end": 34212,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34174,
											"end": 34178,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 34174,
											"end": 34185,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 34174,
											"end": 34185,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 34174,
											"end": 34212,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34174,
											"end": 34212,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34174,
											"end": 34212,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 34174,
											"end": 34212,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 34227,
											"end": 34282,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "187"
										},
										{
											"begin": 34261,
											"end": 34271,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 34274,
											"end": 34281,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 34227,
											"end": 34231,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 34227,
											"end": 34239,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 34227,
											"end": 34239,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 34227,
											"end": 34239,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 34227,
											"end": 34239,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34227,
											"end": 34239,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 34227,
											"end": 34239,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34227,
											"end": 34239,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 34227,
											"end": 34239,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 34227,
											"end": 34239,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34227,
											"end": 34239,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 34227,
											"end": 34239,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 34227,
											"end": 34239,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 34227,
											"end": 34252,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 34227,
											"end": 34252,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 34227,
											"end": 34252,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "188"
										},
										{
											"begin": 34227,
											"end": 34252,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34227,
											"end": 34282,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 34227,
											"end": 34282,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 34227,
											"end": 34282,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34227,
											"end": 34282,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 34227,
											"end": 34282,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 34227,
											"end": 34282,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 34227,
											"end": 34282,
											"name": "tag",
											"source": 0,
											"value": "187"
										},
										{
											"begin": 34227,
											"end": 34282,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34143,
											"end": 34294,
											"name": "tag",
											"source": 0,
											"value": "185"
										},
										{
											"begin": 34143,
											"end": 34294,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34322,
											"end": 34370,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "189"
										},
										{
											"begin": 34365,
											"end": 34369,
											"name": "PUSH",
											"source": 0,
											"value": "E8D4A51000"
										},
										{
											"begin": 34322,
											"end": 34360,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "190"
										},
										{
											"begin": 34338,
											"end": 34342,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 34338,
											"end": 34359,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 34338,
											"end": 34359,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 34338,
											"end": 34359,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 34322,
											"end": 34326,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 34322,
											"end": 34333,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 34322,
											"end": 34333,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 34322,
											"end": 34333,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 34322,
											"end": 34337,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "179"
										},
										{
											"begin": 34322,
											"end": 34337,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34322,
											"end": 34360,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 34322,
											"end": 34360,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34322,
											"end": 34360,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 34322,
											"end": 34360,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 34322,
											"end": 34360,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 34322,
											"end": 34360,
											"name": "tag",
											"source": 0,
											"value": "190"
										},
										{
											"begin": 34322,
											"end": 34360,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34322,
											"end": 34364,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "180"
										},
										{
											"begin": 34322,
											"end": 34364,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34322,
											"end": 34370,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 34322,
											"end": 34370,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34322,
											"end": 34370,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 34322,
											"end": 34370,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 34322,
											"end": 34370,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 34322,
											"end": 34370,
											"name": "tag",
											"source": 0,
											"value": "189"
										},
										{
											"begin": 34322,
											"end": 34370,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34304,
											"end": 34308,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 34304,
											"end": 34319,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 34304,
											"end": 34319,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 34304,
											"end": 34370,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34304,
											"end": 34370,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34304,
											"end": 34370,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 34304,
											"end": 34370,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 34407,
											"end": 34408,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 34395,
											"end": 34405,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 34386,
											"end": 34418,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 34386,
											"end": 34418,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 34386,
											"end": 34418,
											"name": "PUSH",
											"source": 0,
											"value": "F279E6A1F5E320CCA91135676D9CB6E44CA8A08C0B88342BCDB1144F6511B568"
										},
										{
											"begin": 34410,
											"end": 34417,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 34386,
											"end": 34418,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 34386,
											"end": 34418,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 34386,
											"end": 34418,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "191"
										},
										{
											"begin": 34386,
											"end": 34418,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 34386,
											"end": 34418,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34386,
											"end": 34418,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 34386,
											"end": 34418,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 34386,
											"end": 34418,
											"name": "tag",
											"source": 0,
											"value": "191"
										},
										{
											"begin": 34386,
											"end": 34418,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34386,
											"end": 34418,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 34386,
											"end": 34418,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 34386,
											"end": 34418,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 34386,
											"end": 34418,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 34386,
											"end": 34418,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 34386,
											"end": 34418,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34386,
											"end": 34418,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 33725,
											"end": 34426,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 33725,
											"end": 34426,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 33725,
											"end": 34426,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 33679,
											"end": 34426,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 33679,
											"end": 34426,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 23993,
											"end": 24019,
											"name": "tag",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 23993,
											"end": 24019,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23993,
											"end": 24019,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 23993,
											"end": 24019,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23993,
											"end": 24019,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23993,
											"end": 24019,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 23993,
											"end": 24019,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23993,
											"end": 24019,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 23993,
											"end": 24019,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "192"
										},
										{
											"begin": 23993,
											"end": 24019,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 23993,
											"end": 24019,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 23993,
											"end": 24019,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23993,
											"end": 24019,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 23993,
											"end": 24019,
											"name": "tag",
											"source": 0,
											"value": "192"
										},
										{
											"begin": 23993,
											"end": 24019,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23993,
											"end": 24019,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23993,
											"end": 24019,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 23993,
											"end": 24019,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 23993,
											"end": 24019,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 23993,
											"end": 24019,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 23993,
											"end": 24019,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 23993,
											"end": 24019,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23993,
											"end": 24019,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 23993,
											"end": 24019,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 23993,
											"end": 24019,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 23993,
											"end": 24019,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 23993,
											"end": 24019,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 23993,
											"end": 24019,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 23993,
											"end": 24019,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23993,
											"end": 24019,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 23993,
											"end": 24019,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23993,
											"end": 24019,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 23993,
											"end": 24019,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 23993,
											"end": 24019,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 23993,
											"end": 24019,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23993,
											"end": 24019,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 23993,
											"end": 24019,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23993,
											"end": 24019,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 23993,
											"end": 24019,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 23993,
											"end": 24019,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23993,
											"end": 24019,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 23993,
											"end": 24019,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 23993,
											"end": 24019,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 23993,
											"end": 24019,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23993,
											"end": 24019,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23993,
											"end": 24019,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 23993,
											"end": 24019,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 23993,
											"end": 24019,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 23993,
											"end": 24019,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23993,
											"end": 24019,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23993,
											"end": 24019,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 23993,
											"end": 24019,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 23993,
											"end": 24019,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 23993,
											"end": 24019,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23993,
											"end": 24019,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23993,
											"end": 24019,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 23993,
											"end": 24019,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 23993,
											"end": 24019,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 23993,
											"end": 24019,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23993,
											"end": 24019,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 23993,
											"end": 24019,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 23993,
											"end": 24019,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 24234,
											"end": 24268,
											"name": "tag",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 24234,
											"end": 24268,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24234,
											"end": 24268,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 24234,
											"end": 24268,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 24234,
											"end": 24268,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24234,
											"end": 24268,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 25566,
											"end": 26834,
											"name": "tag",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 25566,
											"end": 26834,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25637,
											"end": 25658,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 25661,
											"end": 25669,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 25670,
											"end": 25674,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 25661,
											"end": 25675,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25661,
											"end": 25675,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 25661,
											"end": 25675,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25661,
											"end": 25675,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 25661,
											"end": 25675,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "195"
										},
										{
											"begin": 25661,
											"end": 25675,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 25661,
											"end": 25675,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "196"
										},
										{
											"begin": 25661,
											"end": 25675,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "170"
										},
										{
											"begin": 25661,
											"end": 25675,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 25661,
											"end": 25675,
											"name": "tag",
											"source": 0,
											"value": "196"
										},
										{
											"begin": 25661,
											"end": 25675,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25661,
											"end": 25675,
											"name": "tag",
											"source": 0,
											"value": "195"
										},
										{
											"begin": 25661,
											"end": 25675,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25661,
											"end": 25675,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25661,
											"end": 25675,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 25661,
											"end": 25675,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 25661,
											"end": 25675,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 25661,
											"end": 25675,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 25661,
											"end": 25675,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 25661,
											"end": 25675,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25661,
											"end": 25675,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 25661,
											"end": 25675,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 25661,
											"end": 25675,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 25637,
											"end": 25675,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25637,
											"end": 25675,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25686,
											"end": 25707,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 25710,
											"end": 25718,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 25710,
											"end": 25724,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 25719,
											"end": 25723,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 25710,
											"end": 25724,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25710,
											"end": 25724,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 25710,
											"end": 25724,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 25710,
											"end": 25724,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 25710,
											"end": 25724,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25710,
											"end": 25724,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25710,
											"end": 25724,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 25710,
											"end": 25724,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 25710,
											"end": 25724,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 25710,
											"end": 25724,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 25710,
											"end": 25724,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 25710,
											"end": 25736,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 25725,
											"end": 25735,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 25710,
											"end": 25736,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 25710,
											"end": 25736,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 25710,
											"end": 25736,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 25710,
											"end": 25736,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 25710,
											"end": 25736,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25710,
											"end": 25736,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 25710,
											"end": 25736,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 25710,
											"end": 25736,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 25710,
											"end": 25736,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25710,
											"end": 25736,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25710,
											"end": 25736,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 25710,
											"end": 25736,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 25710,
											"end": 25736,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 25710,
											"end": 25736,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 25710,
											"end": 25736,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 25686,
											"end": 25736,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25686,
											"end": 25736,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25747,
											"end": 25771,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 25774,
											"end": 25778,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 25774,
											"end": 25795,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 25774,
											"end": 25795,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 25774,
											"end": 25795,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 25747,
											"end": 25795,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25747,
											"end": 25795,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25806,
											"end": 25822,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 25825,
											"end": 25829,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 25825,
											"end": 25837,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 25825,
											"end": 25837,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 25825,
											"end": 25837,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 25825,
											"end": 25837,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25825,
											"end": 25837,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 25825,
											"end": 25837,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25825,
											"end": 25837,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 25825,
											"end": 25837,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 25825,
											"end": 25837,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25825,
											"end": 25837,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 25825,
											"end": 25837,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 25825,
											"end": 25837,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 25825,
											"end": 25847,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 25825,
											"end": 25847,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 25825,
											"end": 25847,
											"name": "PUSH",
											"source": 0,
											"value": "70A08231"
										},
										{
											"begin": 25856,
											"end": 25860,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 25825,
											"end": 25862,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 25825,
											"end": 25862,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 25825,
											"end": 25862,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 25825,
											"end": 25862,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 25825,
											"end": 25862,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 25825,
											"end": 25862,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 25825,
											"end": 25862,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 25825,
											"end": 25862,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25825,
											"end": 25862,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 25825,
											"end": 25862,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 25825,
											"end": 25862,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 25825,
											"end": 25862,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "198"
										},
										{
											"begin": 25825,
											"end": 25862,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 25825,
											"end": 25862,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25825,
											"end": 25862,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 25825,
											"end": 25862,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 25825,
											"end": 25862,
											"name": "tag",
											"source": 0,
											"value": "198"
										},
										{
											"begin": 25825,
											"end": 25862,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25825,
											"end": 25862,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 25825,
											"end": 25862,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 25825,
											"end": 25862,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 25825,
											"end": 25862,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25825,
											"end": 25862,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 25825,
											"end": 25862,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 25825,
											"end": 25862,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25825,
											"end": 25862,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 25825,
											"end": 25862,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 25825,
											"end": 25862,
											"name": "STATICCALL",
											"source": 0
										},
										{
											"begin": 25825,
											"end": 25862,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 25825,
											"end": 25862,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25825,
											"end": 25862,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 25825,
											"end": 25862,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "200"
										},
										{
											"begin": 25825,
											"end": 25862,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 25825,
											"end": 25862,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 25825,
											"end": 25862,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 25825,
											"end": 25862,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25825,
											"end": 25862,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 25825,
											"end": 25862,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 25825,
											"end": 25862,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 25825,
											"end": 25862,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 25825,
											"end": 25862,
											"name": "tag",
											"source": 0,
											"value": "200"
										},
										{
											"begin": 25825,
											"end": 25862,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25825,
											"end": 25862,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25825,
											"end": 25862,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25825,
											"end": 25862,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25825,
											"end": 25862,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25825,
											"end": 25862,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 25825,
											"end": 25862,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 25825,
											"end": 25862,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 25825,
											"end": 25862,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 25825,
											"end": 25862,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 25825,
											"end": 25862,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 25825,
											"end": 25862,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 25825,
											"end": 25862,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 25825,
											"end": 25862,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 25825,
											"end": 25862,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 25825,
											"end": 25862,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 25825,
											"end": 25862,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25825,
											"end": 25862,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 25825,
											"end": 25862,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 25825,
											"end": 25862,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25825,
											"end": 25862,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25825,
											"end": 25862,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 25825,
											"end": 25862,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25825,
											"end": 25862,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "201"
										},
										{
											"begin": 25825,
											"end": 25862,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 25825,
											"end": 25862,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25825,
											"end": 25862,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "202"
										},
										{
											"begin": 25825,
											"end": 25862,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 25825,
											"end": 25862,
											"name": "tag",
											"source": 0,
											"value": "201"
										},
										{
											"begin": 25825,
											"end": 25862,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25806,
											"end": 25862,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25806,
											"end": 25862,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25892,
											"end": 25896,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 25892,
											"end": 25912,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 25892,
											"end": 25912,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 25892,
											"end": 25912,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 25877,
											"end": 25889,
											"name": "NUMBER",
											"source": 0
										},
										{
											"begin": 25877,
											"end": 25912,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 25877,
											"end": 25929,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25877,
											"end": 25929,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 25877,
											"end": 25929,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "203"
										},
										{
											"begin": 25877,
											"end": 25929,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 25877,
											"end": 25929,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25928,
											"end": 25929,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 25916,
											"end": 25924,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25916,
											"end": 25929,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 25916,
											"end": 25929,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 25877,
											"end": 25929,
											"name": "tag",
											"source": 0,
											"value": "203"
										},
										{
											"begin": 25877,
											"end": 25929,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25873,
											"end": 26227,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 25873,
											"end": 26227,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "204"
										},
										{
											"begin": 25873,
											"end": 26227,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 25946,
											"end": 25964,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 25967,
											"end": 26016,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "205"
										},
										{
											"begin": 25981,
											"end": 25985,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 25981,
											"end": 26001,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 25981,
											"end": 26001,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 25981,
											"end": 26001,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 26003,
											"end": 26015,
											"name": "NUMBER",
											"source": 0
										},
										{
											"begin": 25967,
											"end": 25980,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 25967,
											"end": 26016,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 25967,
											"end": 26016,
											"name": "tag",
											"source": 0,
											"value": "205"
										},
										{
											"begin": 25967,
											"end": 26016,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25946,
											"end": 26016,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25946,
											"end": 26016,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 26031,
											"end": 26050,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 26053,
											"end": 26124,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "206"
										},
										{
											"begin": 26108,
											"end": 26123,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 26108,
											"end": 26123,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 26053,
											"end": 26103,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "207"
										},
										{
											"begin": 26087,
											"end": 26091,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 26087,
											"end": 26102,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 26087,
											"end": 26102,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 26087,
											"end": 26102,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 26053,
											"end": 26082,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "208"
										},
										{
											"begin": 26068,
											"end": 26081,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 26068,
											"end": 26081,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 26053,
											"end": 26063,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 26053,
											"end": 26067,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "179"
										},
										{
											"begin": 26053,
											"end": 26067,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26053,
											"end": 26082,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 26053,
											"end": 26082,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26053,
											"end": 26082,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 26053,
											"end": 26082,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 26053,
											"end": 26082,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 26053,
											"end": 26082,
											"name": "tag",
											"source": 0,
											"value": "208"
										},
										{
											"begin": 26053,
											"end": 26082,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26053,
											"end": 26086,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "179"
										},
										{
											"begin": 26053,
											"end": 26086,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26053,
											"end": 26103,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 26053,
											"end": 26103,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26053,
											"end": 26103,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 26053,
											"end": 26103,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 26053,
											"end": 26103,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 26053,
											"end": 26103,
											"name": "tag",
											"source": 0,
											"value": "207"
										},
										{
											"begin": 26053,
											"end": 26103,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26053,
											"end": 26107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "180"
										},
										{
											"begin": 26053,
											"end": 26107,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26053,
											"end": 26124,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 26053,
											"end": 26124,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26053,
											"end": 26124,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 26053,
											"end": 26124,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 26053,
											"end": 26124,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 26053,
											"end": 26124,
											"name": "tag",
											"source": 0,
											"value": "206"
										},
										{
											"begin": 26053,
											"end": 26124,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26031,
											"end": 26124,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26031,
											"end": 26124,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 26158,
											"end": 26215,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "209"
										},
										{
											"begin": 26179,
											"end": 26214,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "210"
										},
										{
											"begin": 26205,
											"end": 26213,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 26179,
											"end": 26200,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "211"
										},
										{
											"begin": 26195,
											"end": 26199,
											"name": "PUSH",
											"source": 0,
											"value": "E8D4A51000"
										},
										{
											"begin": 26179,
											"end": 26190,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 26179,
											"end": 26194,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "179"
										},
										{
											"begin": 26179,
											"end": 26194,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26179,
											"end": 26200,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 26179,
											"end": 26200,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26179,
											"end": 26200,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 26179,
											"end": 26200,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 26179,
											"end": 26200,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 26179,
											"end": 26200,
											"name": "tag",
											"source": 0,
											"value": "211"
										},
										{
											"begin": 26179,
											"end": 26200,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26179,
											"end": 26204,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "180"
										},
										{
											"begin": 26179,
											"end": 26204,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26179,
											"end": 26214,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 26179,
											"end": 26214,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26179,
											"end": 26214,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 26179,
											"end": 26214,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 26179,
											"end": 26214,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 26179,
											"end": 26214,
											"name": "tag",
											"source": 0,
											"value": "210"
										},
										{
											"begin": 26179,
											"end": 26214,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26158,
											"end": 26174,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 26158,
											"end": 26178,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "184"
										},
										{
											"begin": 26158,
											"end": 26178,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26158,
											"end": 26215,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 26158,
											"end": 26215,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26158,
											"end": 26215,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 26158,
											"end": 26215,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 26158,
											"end": 26215,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 26158,
											"end": 26215,
											"name": "tag",
											"source": 0,
											"value": "209"
										},
										{
											"begin": 26158,
											"end": 26215,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26139,
											"end": 26215,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 26139,
											"end": 26215,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25931,
											"end": 26227,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25931,
											"end": 26227,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25873,
											"end": 26227,
											"name": "tag",
											"source": 0,
											"value": "204"
										},
										{
											"begin": 25873,
											"end": 26227,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26237,
											"end": 26252,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 26255,
											"end": 26319,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "212"
										},
										{
											"begin": 26303,
											"end": 26307,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 26303,
											"end": 26318,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 26303,
											"end": 26318,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 26303,
											"end": 26318,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 26255,
											"end": 26298,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "213"
										},
										{
											"begin": 26293,
											"end": 26297,
											"name": "PUSH",
											"source": 0,
											"value": "E8D4A51000"
										},
										{
											"begin": 26255,
											"end": 26288,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "214"
										},
										{
											"begin": 26271,
											"end": 26287,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 26255,
											"end": 26259,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 26255,
											"end": 26266,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 26255,
											"end": 26266,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 26255,
											"end": 26266,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 26255,
											"end": 26270,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "179"
										},
										{
											"begin": 26255,
											"end": 26270,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26255,
											"end": 26288,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 26255,
											"end": 26288,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26255,
											"end": 26288,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 26255,
											"end": 26288,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 26255,
											"end": 26288,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 26255,
											"end": 26288,
											"name": "tag",
											"source": 0,
											"value": "214"
										},
										{
											"begin": 26255,
											"end": 26288,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26255,
											"end": 26292,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "180"
										},
										{
											"begin": 26255,
											"end": 26292,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26255,
											"end": 26298,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 26255,
											"end": 26298,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26255,
											"end": 26298,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 26255,
											"end": 26298,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 26255,
											"end": 26298,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 26255,
											"end": 26298,
											"name": "tag",
											"source": 0,
											"value": "213"
										},
										{
											"begin": 26255,
											"end": 26298,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26255,
											"end": 26302,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "181"
										},
										{
											"begin": 26255,
											"end": 26302,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26255,
											"end": 26319,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 26255,
											"end": 26319,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26255,
											"end": 26319,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 26255,
											"end": 26319,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 26255,
											"end": 26319,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 26255,
											"end": 26319,
											"name": "tag",
											"source": 0,
											"value": "212"
										},
										{
											"begin": 26255,
											"end": 26319,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26237,
											"end": 26319,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26237,
											"end": 26319,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 26330,
											"end": 26350,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 26353,
											"end": 26361,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 26362,
											"end": 26367,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 26353,
											"end": 26368,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26353,
											"end": 26368,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 26353,
											"end": 26368,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26353,
											"end": 26368,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 26353,
											"end": 26368,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "215"
										},
										{
											"begin": 26353,
											"end": 26368,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 26353,
											"end": 26368,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "216"
										},
										{
											"begin": 26353,
											"end": 26368,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "170"
										},
										{
											"begin": 26353,
											"end": 26368,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 26353,
											"end": 26368,
											"name": "tag",
											"source": 0,
											"value": "216"
										},
										{
											"begin": 26353,
											"end": 26368,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26353,
											"end": 26368,
											"name": "tag",
											"source": 0,
											"value": "215"
										},
										{
											"begin": 26353,
											"end": 26368,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26353,
											"end": 26368,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26353,
											"end": 26368,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 26353,
											"end": 26368,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 26353,
											"end": 26368,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 26353,
											"end": 26368,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 26353,
											"end": 26368,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 26353,
											"end": 26368,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26353,
											"end": 26368,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 26353,
											"end": 26368,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 26353,
											"end": 26368,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 26330,
											"end": 26368,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26330,
											"end": 26368,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 26379,
											"end": 26392,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 26395,
											"end": 26432,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "218"
										},
										{
											"begin": 26407,
											"end": 26419,
											"name": "PUSH",
											"source": 0,
											"value": "B"
										},
										{
											"begin": 26407,
											"end": 26431,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 26420,
											"end": 26430,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 26407,
											"end": 26431,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 26407,
											"end": 26431,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 26407,
											"end": 26431,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 26407,
											"end": 26431,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 26407,
											"end": 26431,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26407,
											"end": 26431,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 26407,
											"end": 26431,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 26407,
											"end": 26431,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 26407,
											"end": 26431,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26407,
											"end": 26431,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26407,
											"end": 26431,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 26407,
											"end": 26431,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 26407,
											"end": 26431,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 26407,
											"end": 26431,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 26407,
											"end": 26431,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 26407,
											"end": 26431,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 26395,
											"end": 26402,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 26395,
											"end": 26406,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "184"
										},
										{
											"begin": 26395,
											"end": 26406,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26395,
											"end": 26432,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 26395,
											"end": 26432,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26395,
											"end": 26432,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 26395,
											"end": 26432,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 26395,
											"end": 26432,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 26395,
											"end": 26432,
											"name": "tag",
											"source": 0,
											"value": "218"
										},
										{
											"begin": 26395,
											"end": 26432,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26379,
											"end": 26432,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26379,
											"end": 26432,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 26454,
											"end": 26457,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26454,
											"end": 26463,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 26454,
											"end": 26463,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 26454,
											"end": 26463,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 26446,
											"end": 26451,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26446,
											"end": 26463,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 26443,
											"end": 26631,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 26443,
											"end": 26631,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "219"
										},
										{
											"begin": 26443,
											"end": 26631,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 26490,
											"end": 26491,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 26482,
											"end": 26486,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 26482,
											"end": 26491,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 26479,
											"end": 26542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "220"
										},
										{
											"begin": 26479,
											"end": 26542,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 26511,
											"end": 26526,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "221"
										},
										{
											"begin": 26524,
											"end": 26525,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 26511,
											"end": 26523,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 26511,
											"end": 26526,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 26511,
											"end": 26526,
											"name": "tag",
											"source": 0,
											"value": "221"
										},
										{
											"begin": 26511,
											"end": 26526,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26479,
											"end": 26542,
											"name": "tag",
											"source": 0,
											"value": "220"
										},
										{
											"begin": 26479,
											"end": 26542,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26567,
											"end": 26568,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 26559,
											"end": 26563,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 26559,
											"end": 26568,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 26556,
											"end": 26620,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "222"
										},
										{
											"begin": 26556,
											"end": 26620,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 26588,
											"end": 26604,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "223"
										},
										{
											"begin": 26597,
											"end": 26601,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 26602,
											"end": 26603,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 26588,
											"end": 26596,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 26588,
											"end": 26604,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 26588,
											"end": 26604,
											"name": "tag",
											"source": 0,
											"value": "223"
										},
										{
											"begin": 26588,
											"end": 26604,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26556,
											"end": 26620,
											"name": "tag",
											"source": 0,
											"value": "222"
										},
										{
											"begin": 26556,
											"end": 26620,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26443,
											"end": 26631,
											"name": "tag",
											"source": 0,
											"value": "219"
										},
										{
											"begin": 26443,
											"end": 26631,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26661,
											"end": 26673,
											"name": "PUSH",
											"source": 0,
											"value": "B"
										},
										{
											"begin": 26661,
											"end": 26685,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 26674,
											"end": 26684,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 26661,
											"end": 26685,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 26661,
											"end": 26685,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 26661,
											"end": 26685,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 26661,
											"end": 26685,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 26661,
											"end": 26685,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26661,
											"end": 26685,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 26661,
											"end": 26685,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 26661,
											"end": 26685,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 26661,
											"end": 26685,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26661,
											"end": 26685,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26661,
											"end": 26685,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 26661,
											"end": 26685,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 26661,
											"end": 26685,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 26661,
											"end": 26685,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 26661,
											"end": 26685,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 26661,
											"end": 26685,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 26649,
											"end": 26652,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 26649,
											"end": 26658,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 26649,
											"end": 26658,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 26649,
											"end": 26658,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 26649,
											"end": 26685,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 26641,
											"end": 26709,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "224"
										},
										{
											"begin": 26641,
											"end": 26709,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 26641,
											"end": 26709,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 26641,
											"end": 26709,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 26641,
											"end": 26709,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 26641,
											"end": 26709,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26641,
											"end": 26709,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 26641,
											"end": 26709,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 26641,
											"end": 26709,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 26641,
											"end": 26709,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "225"
										},
										{
											"begin": 26641,
											"end": 26709,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26641,
											"end": 26709,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "226"
										},
										{
											"begin": 26641,
											"end": 26709,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 26641,
											"end": 26709,
											"name": "tag",
											"source": 0,
											"value": "225"
										},
										{
											"begin": 26641,
											"end": 26709,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26641,
											"end": 26709,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 26641,
											"end": 26709,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 26641,
											"end": 26709,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26641,
											"end": 26709,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 26641,
											"end": 26709,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 26641,
											"end": 26709,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26641,
											"end": 26709,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 26641,
											"end": 26709,
											"name": "tag",
											"source": 0,
											"value": "224"
										},
										{
											"begin": 26641,
											"end": 26709,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26747,
											"end": 26786,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "227"
										},
										{
											"begin": 26776,
											"end": 26779,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 26776,
											"end": 26785,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 26776,
											"end": 26785,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 26776,
											"end": 26785,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 26747,
											"end": 26759,
											"name": "PUSH",
											"source": 0,
											"value": "B"
										},
										{
											"begin": 26747,
											"end": 26771,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 26760,
											"end": 26770,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 26747,
											"end": 26771,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 26747,
											"end": 26771,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 26747,
											"end": 26771,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 26747,
											"end": 26771,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 26747,
											"end": 26771,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26747,
											"end": 26771,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 26747,
											"end": 26771,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 26747,
											"end": 26771,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 26747,
											"end": 26771,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26747,
											"end": 26771,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26747,
											"end": 26771,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 26747,
											"end": 26771,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 26747,
											"end": 26771,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 26747,
											"end": 26771,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 26747,
											"end": 26771,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 26747,
											"end": 26771,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 26747,
											"end": 26775,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "181"
										},
										{
											"begin": 26747,
											"end": 26775,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26747,
											"end": 26786,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 26747,
											"end": 26786,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26747,
											"end": 26786,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 26747,
											"end": 26786,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 26747,
											"end": 26786,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 26747,
											"end": 26786,
											"name": "tag",
											"source": 0,
											"value": "227"
										},
										{
											"begin": 26747,
											"end": 26786,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26720,
											"end": 26732,
											"name": "PUSH",
											"source": 0,
											"value": "B"
										},
										{
											"begin": 26720,
											"end": 26744,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 26733,
											"end": 26743,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 26720,
											"end": 26744,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 26720,
											"end": 26744,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 26720,
											"end": 26744,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 26720,
											"end": 26744,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 26720,
											"end": 26744,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26720,
											"end": 26744,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 26720,
											"end": 26744,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 26720,
											"end": 26744,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 26720,
											"end": 26744,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26720,
											"end": 26744,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26720,
											"end": 26744,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 26720,
											"end": 26744,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 26720,
											"end": 26744,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 26720,
											"end": 26744,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 26720,
											"end": 26744,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 26720,
											"end": 26786,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26720,
											"end": 26786,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26720,
											"end": 26786,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 26720,
											"end": 26786,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 26797,
											"end": 26800,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26797,
											"end": 26804,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 26797,
											"end": 26804,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 26797,
											"end": 26804,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 26797,
											"end": 26804,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26797,
											"end": 26804,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 26797,
											"end": 26804,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26797,
											"end": 26804,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 26797,
											"end": 26804,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 26797,
											"end": 26804,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26797,
											"end": 26804,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 26797,
											"end": 26804,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 26797,
											"end": 26804,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 26797,
											"end": 26814,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 26797,
											"end": 26814,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 26797,
											"end": 26814,
											"name": "PUSH",
											"source": 0,
											"value": "17E5883C"
										},
										{
											"begin": 26815,
											"end": 26825,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 26797,
											"end": 26826,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 26797,
											"end": 26826,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 26797,
											"end": 26826,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 26797,
											"end": 26826,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 26797,
											"end": 26826,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 26797,
											"end": 26826,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 26797,
											"end": 26826,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 26797,
											"end": 26826,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26797,
											"end": 26826,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 26797,
											"end": 26826,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 26797,
											"end": 26826,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 26797,
											"end": 26826,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "228"
										},
										{
											"begin": 26797,
											"end": 26826,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 26797,
											"end": 26826,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26797,
											"end": 26826,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 26797,
											"end": 26826,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 26797,
											"end": 26826,
											"name": "tag",
											"source": 0,
											"value": "228"
										},
										{
											"begin": 26797,
											"end": 26826,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26797,
											"end": 26826,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 26797,
											"end": 26826,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 26797,
											"end": 26826,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 26797,
											"end": 26826,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26797,
											"end": 26826,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 26797,
											"end": 26826,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 26797,
											"end": 26826,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26797,
											"end": 26826,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 26797,
											"end": 26826,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 26797,
											"end": 26826,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26797,
											"end": 26826,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 26797,
											"end": 26826,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 26797,
											"end": 26826,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26797,
											"end": 26826,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 26797,
											"end": 26826,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "229"
										},
										{
											"begin": 26797,
											"end": 26826,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 26797,
											"end": 26826,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 26797,
											"end": 26826,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26797,
											"end": 26826,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 26797,
											"end": 26826,
											"name": "tag",
											"source": 0,
											"value": "229"
										},
										{
											"begin": 26797,
											"end": 26826,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26797,
											"end": 26826,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 26797,
											"end": 26826,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 26797,
											"end": 26826,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 26797,
											"end": 26826,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 26797,
											"end": 26826,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26797,
											"end": 26826,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 26797,
											"end": 26826,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "231"
										},
										{
											"begin": 26797,
											"end": 26826,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 26797,
											"end": 26826,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 26797,
											"end": 26826,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 26797,
											"end": 26826,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26797,
											"end": 26826,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 26797,
											"end": 26826,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 26797,
											"end": 26826,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 26797,
											"end": 26826,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 26797,
											"end": 26826,
											"name": "tag",
											"source": 0,
											"value": "231"
										},
										{
											"begin": 26797,
											"end": 26826,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26797,
											"end": 26826,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 26797,
											"end": 26826,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 26797,
											"end": 26826,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 26797,
											"end": 26826,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25626,
											"end": 26834,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25626,
											"end": 26834,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25626,
											"end": 26834,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25626,
											"end": 26834,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25626,
											"end": 26834,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25626,
											"end": 26834,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25626,
											"end": 26834,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25566,
											"end": 26834,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25566,
											"end": 26834,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25566,
											"end": 26834,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 27237,
											"end": 27797,
											"name": "tag",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 27237,
											"end": 27797,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20336,
											"end": 20348,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "233"
										},
										{
											"begin": 20336,
											"end": 20346,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "234"
										},
										{
											"begin": 20336,
											"end": 20348,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 20336,
											"end": 20348,
											"name": "tag",
											"source": 0,
											"value": "233"
										},
										{
											"begin": 20336,
											"end": 20348,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20325,
											"end": 20348,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 20325,
											"end": 20348,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20325,
											"end": 20332,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "235"
										},
										{
											"begin": 20325,
											"end": 20330,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 20325,
											"end": 20332,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 20325,
											"end": 20332,
											"name": "tag",
											"source": 0,
											"value": "235"
										},
										{
											"begin": 20325,
											"end": 20332,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20325,
											"end": 20348,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 20325,
											"end": 20348,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20325,
											"end": 20348,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "236"
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "237"
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "238"
										},
										{
											"begin": 20317,
											"end": 20385,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "tag",
											"source": 0,
											"value": "237"
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "tag",
											"source": 0,
											"value": "236"
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27340,
											"end": 27351,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27336,
											"end": 27397,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 27336,
											"end": 27397,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "240"
										},
										{
											"begin": 27336,
											"end": 27397,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 27368,
											"end": 27385,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "241"
										},
										{
											"begin": 27368,
											"end": 27383,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 27368,
											"end": 27385,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 27368,
											"end": 27385,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "241"
										},
										{
											"begin": 27368,
											"end": 27385,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27336,
											"end": 27397,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "240"
										},
										{
											"begin": 27336,
											"end": 27397,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27407,
											"end": 27430,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 27448,
											"end": 27458,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 27448,
											"end": 27458,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 27433,
											"end": 27445,
											"modifierDepth": 1,
											"name": "NUMBER",
											"source": 0
										},
										{
											"begin": 27433,
											"end": 27458,
											"modifierDepth": 1,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 27433,
											"end": 27486,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "242"
										},
										{
											"begin": 27433,
											"end": 27486,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 27476,
											"end": 27486,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 27476,
											"end": 27486,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 27433,
											"end": 27486,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "243"
										},
										{
											"begin": 27433,
											"end": 27486,
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 27433,
											"end": 27486,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "242"
										},
										{
											"begin": 27433,
											"end": 27486,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27461,
											"end": 27473,
											"modifierDepth": 1,
											"name": "NUMBER",
											"source": 0
										},
										{
											"begin": 27433,
											"end": 27486,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "243"
										},
										{
											"begin": 27433,
											"end": 27486,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27407,
											"end": 27486,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27407,
											"end": 27486,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 27515,
											"end": 27547,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "244"
										},
										{
											"begin": 27535,
											"end": 27546,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 27515,
											"end": 27530,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 27515,
											"end": 27530,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 27515,
											"end": 27534,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "184"
										},
										{
											"begin": 27515,
											"end": 27534,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27515,
											"end": 27547,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 27515,
											"end": 27547,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27515,
											"end": 27547,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 27515,
											"end": 27547,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 27515,
											"end": 27547,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 27515,
											"end": 27547,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "244"
										},
										{
											"begin": 27515,
											"end": 27547,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27497,
											"end": 27512,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 27497,
											"end": 27547,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27497,
											"end": 27547,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27497,
											"end": 27547,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 27497,
											"end": 27547,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 27558,
											"end": 27566,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 27586,
											"end": 27778,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 27586,
											"end": 27778,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 27586,
											"end": 27778,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27586,
											"end": 27778,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 27586,
											"end": 27778,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 27586,
											"end": 27778,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 27586,
											"end": 27778,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 27586,
											"end": 27778,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27623,
											"end": 27631,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 27586,
											"end": 27778,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 27586,
											"end": 27778,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 27586,
											"end": 27778,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27586,
											"end": 27778,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 27586,
											"end": 27778,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 27586,
											"end": 27778,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 27662,
											"end": 27673,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 27586,
											"end": 27778,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27586,
											"end": 27778,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 27586,
											"end": 27778,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 27586,
											"end": 27778,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 27709,
											"end": 27724,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 27586,
											"end": 27778,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27586,
											"end": 27778,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 27586,
											"end": 27778,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 27586,
											"end": 27778,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 27761,
											"end": 27762,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 27586,
											"end": 27778,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27586,
											"end": 27778,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 27586,
											"end": 27778,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 27558,
											"end": 27789,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27558,
											"end": 27789,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27558,
											"end": 27789,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 27558,
											"end": 27789,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27558,
											"end": 27789,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 27558,
											"end": 27789,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 27558,
											"end": 27789,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27558,
											"end": 27789,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 27558,
											"end": 27789,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 27558,
											"end": 27789,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27558,
											"end": 27789,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 27558,
											"end": 27789,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 27558,
											"end": 27789,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 27558,
											"end": 27789,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 27558,
											"end": 27789,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27558,
											"end": 27789,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 27558,
											"end": 27789,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27558,
											"end": 27789,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 27558,
											"end": 27789,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 27558,
											"end": 27789,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 27558,
											"end": 27789,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 27558,
											"end": 27789,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 27558,
											"end": 27789,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27558,
											"end": 27789,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 27558,
											"end": 27789,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 27558,
											"end": 27789,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 27558,
											"end": 27789,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 27558,
											"end": 27789,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27558,
											"end": 27789,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 27558,
											"end": 27789,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27558,
											"end": 27789,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 27558,
											"end": 27789,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27558,
											"end": 27789,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 27558,
											"end": 27789,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 27558,
											"end": 27789,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 27558,
											"end": 27789,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 27558,
											"end": 27789,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 27558,
											"end": 27789,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 27558,
											"end": 27789,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27558,
											"end": 27789,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 27558,
											"end": 27789,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 27558,
											"end": 27789,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 27558,
											"end": 27789,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 27558,
											"end": 27789,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 27558,
											"end": 27789,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27558,
											"end": 27789,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 27558,
											"end": 27789,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27558,
											"end": 27789,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 27558,
											"end": 27789,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 27558,
											"end": 27789,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 27558,
											"end": 27789,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 27558,
											"end": 27789,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27558,
											"end": 27789,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 27558,
											"end": 27789,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 27558,
											"end": 27789,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 27558,
											"end": 27789,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 27558,
											"end": 27789,
											"modifierDepth": 1,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 27558,
											"end": 27789,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27558,
											"end": 27789,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 27558,
											"end": 27789,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 27558,
											"end": 27789,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 27558,
											"end": 27789,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 27558,
											"end": 27789,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 27558,
											"end": 27789,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 27558,
											"end": 27789,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27558,
											"end": 27789,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 27558,
											"end": 27789,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 27558,
											"end": 27789,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 27558,
											"end": 27789,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 27558,
											"end": 27789,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 27558,
											"end": 27789,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 27558,
											"end": 27789,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 27558,
											"end": 27789,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27558,
											"end": 27789,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 27558,
											"end": 27789,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 27558,
											"end": 27789,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 27558,
											"end": 27789,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 27558,
											"end": 27789,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 27558,
											"end": 27789,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 27558,
											"end": 27789,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 27558,
											"end": 27789,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27558,
											"end": 27789,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 27558,
											"end": 27789,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 27558,
											"end": 27789,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 27558,
											"end": 27789,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 27558,
											"end": 27789,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 27325,
											"end": 27797,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 27237,
											"end": 27797,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 27237,
											"end": 27797,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 27237,
											"end": 27797,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 27237,
											"end": 27797,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 28275,
											"end": 28377,
											"name": "tag",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 28275,
											"end": 28377,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20336,
											"end": 20348,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "247"
										},
										{
											"begin": 20336,
											"end": 20346,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "234"
										},
										{
											"begin": 20336,
											"end": 20348,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 20336,
											"end": 20348,
											"name": "tag",
											"source": 0,
											"value": "247"
										},
										{
											"begin": 20336,
											"end": 20348,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20325,
											"end": 20348,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 20325,
											"end": 20348,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20325,
											"end": 20332,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "248"
										},
										{
											"begin": 20325,
											"end": 20330,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 20325,
											"end": 20332,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 20325,
											"end": 20332,
											"name": "tag",
											"source": 0,
											"value": "248"
										},
										{
											"begin": 20325,
											"end": 20332,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20325,
											"end": 20348,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 20325,
											"end": 20348,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20325,
											"end": 20348,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "249"
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "250"
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "238"
										},
										{
											"begin": 20317,
											"end": 20385,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "tag",
											"source": 0,
											"value": "250"
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "tag",
											"source": 0,
											"value": "249"
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28360,
											"end": 28369,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28349,
											"end": 28357,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 28349,
											"end": 28357,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 28349,
											"end": 28369,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 28349,
											"end": 28369,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 28349,
											"end": 28369,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28349,
											"end": 28369,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 28349,
											"end": 28369,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28349,
											"end": 28369,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 28349,
											"end": 28369,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 28349,
											"end": 28369,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 28349,
											"end": 28369,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 28349,
											"end": 28369,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28349,
											"end": 28369,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 28349,
											"end": 28369,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 28349,
											"end": 28369,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 28349,
											"end": 28369,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 28349,
											"end": 28369,
											"modifierDepth": 1,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 28349,
											"end": 28369,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28349,
											"end": 28369,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 28349,
											"end": 28369,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 28275,
											"end": 28377,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 28275,
											"end": 28377,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 34974,
											"end": 35083,
											"name": "tag",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 34974,
											"end": 35083,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20336,
											"end": 20348,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "253"
										},
										{
											"begin": 20336,
											"end": 20346,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "234"
										},
										{
											"begin": 20336,
											"end": 20348,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 20336,
											"end": 20348,
											"name": "tag",
											"source": 0,
											"value": "253"
										},
										{
											"begin": 20336,
											"end": 20348,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20325,
											"end": 20348,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 20325,
											"end": 20348,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20325,
											"end": 20332,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "254"
										},
										{
											"begin": 20325,
											"end": 20330,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 20325,
											"end": 20332,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 20325,
											"end": 20332,
											"name": "tag",
											"source": 0,
											"value": "254"
										},
										{
											"begin": 20325,
											"end": 20332,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20325,
											"end": 20348,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 20325,
											"end": 20348,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20325,
											"end": 20348,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "255"
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "256"
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "238"
										},
										{
											"begin": 20317,
											"end": 20385,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "tag",
											"source": 0,
											"value": "256"
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "tag",
											"source": 0,
											"value": "255"
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35066,
											"end": 35075,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 35050,
											"end": 35063,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 35050,
											"end": 35075,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 35050,
											"end": 35075,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35050,
											"end": 35075,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 35050,
											"end": 35075,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 34974,
											"end": 35083,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 34974,
											"end": 35083,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 32830,
											"end": 33627,
											"name": "tag",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 32830,
											"end": 33627,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32887,
											"end": 32908,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 32911,
											"end": 32919,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 32920,
											"end": 32921,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 32911,
											"end": 32922,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32911,
											"end": 32922,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 32911,
											"end": 32922,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32911,
											"end": 32922,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 32911,
											"end": 32922,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "259"
										},
										{
											"begin": 32911,
											"end": 32922,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 32911,
											"end": 32922,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "260"
										},
										{
											"begin": 32911,
											"end": 32922,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "170"
										},
										{
											"begin": 32911,
											"end": 32922,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 32911,
											"end": 32922,
											"name": "tag",
											"source": 0,
											"value": "260"
										},
										{
											"begin": 32911,
											"end": 32922,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32911,
											"end": 32922,
											"name": "tag",
											"source": 0,
											"value": "259"
										},
										{
											"begin": 32911,
											"end": 32922,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32911,
											"end": 32922,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32911,
											"end": 32922,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 32911,
											"end": 32922,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 32911,
											"end": 32922,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 32911,
											"end": 32922,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 32911,
											"end": 32922,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 32911,
											"end": 32922,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32911,
											"end": 32922,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 32911,
											"end": 32922,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 32911,
											"end": 32922,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 32887,
											"end": 32922,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32887,
											"end": 32922,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 32933,
											"end": 32954,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 32957,
											"end": 32965,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 32957,
											"end": 32968,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 32966,
											"end": 32967,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 32957,
											"end": 32968,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32957,
											"end": 32968,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 32957,
											"end": 32968,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 32957,
											"end": 32968,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 32957,
											"end": 32968,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32957,
											"end": 32968,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32957,
											"end": 32968,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 32957,
											"end": 32968,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 32957,
											"end": 32968,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 32957,
											"end": 32968,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 32957,
											"end": 32968,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 32957,
											"end": 32989,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 32977,
											"end": 32987,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 32957,
											"end": 32989,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 32957,
											"end": 32989,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 32957,
											"end": 32989,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 32957,
											"end": 32989,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 32957,
											"end": 32989,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32957,
											"end": 32989,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 32957,
											"end": 32989,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 32957,
											"end": 32989,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 32957,
											"end": 32989,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32957,
											"end": 32989,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32957,
											"end": 32989,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 32957,
											"end": 32989,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 32957,
											"end": 32989,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 32957,
											"end": 32989,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 32957,
											"end": 32989,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 32933,
											"end": 32989,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32933,
											"end": 32989,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 33010,
											"end": 33023,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "262"
										},
										{
											"begin": 33021,
											"end": 33022,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 33010,
											"end": 33020,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 33010,
											"end": 33023,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 33010,
											"end": 33023,
											"name": "tag",
											"source": 0,
											"value": "262"
										},
										{
											"begin": 33010,
											"end": 33023,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33052,
											"end": 33053,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 33038,
											"end": 33042,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 33038,
											"end": 33049,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 33038,
											"end": 33049,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 33038,
											"end": 33049,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 33038,
											"end": 33053,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 33034,
											"end": 33316,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 33034,
											"end": 33316,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "263"
										},
										{
											"begin": 33034,
											"end": 33316,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 33070,
											"end": 33085,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 33088,
											"end": 33157,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "264"
										},
										{
											"begin": 33141,
											"end": 33145,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 33141,
											"end": 33156,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 33141,
											"end": 33156,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 33141,
											"end": 33156,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 33088,
											"end": 33136,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "265"
										},
										{
											"begin": 33131,
											"end": 33135,
											"name": "PUSH",
											"source": 0,
											"value": "E8D4A51000"
										},
										{
											"begin": 33088,
											"end": 33126,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "266"
										},
										{
											"begin": 33104,
											"end": 33108,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 33104,
											"end": 33125,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 33104,
											"end": 33125,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 33104,
											"end": 33125,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 33088,
											"end": 33092,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 33088,
											"end": 33099,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 33088,
											"end": 33099,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 33088,
											"end": 33099,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 33088,
											"end": 33103,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "179"
										},
										{
											"begin": 33088,
											"end": 33103,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33088,
											"end": 33126,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 33088,
											"end": 33126,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33088,
											"end": 33126,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 33088,
											"end": 33126,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 33088,
											"end": 33126,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 33088,
											"end": 33126,
											"name": "tag",
											"source": 0,
											"value": "266"
										},
										{
											"begin": 33088,
											"end": 33126,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33088,
											"end": 33130,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "180"
										},
										{
											"begin": 33088,
											"end": 33130,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33088,
											"end": 33136,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 33088,
											"end": 33136,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33088,
											"end": 33136,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 33088,
											"end": 33136,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 33088,
											"end": 33136,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 33088,
											"end": 33136,
											"name": "tag",
											"source": 0,
											"value": "265"
										},
										{
											"begin": 33088,
											"end": 33136,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33088,
											"end": 33140,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "181"
										},
										{
											"begin": 33088,
											"end": 33140,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33088,
											"end": 33157,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 33088,
											"end": 33157,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33088,
											"end": 33157,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 33088,
											"end": 33157,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 33088,
											"end": 33157,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 33088,
											"end": 33157,
											"name": "tag",
											"source": 0,
											"value": "264"
										},
										{
											"begin": 33088,
											"end": 33157,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33070,
											"end": 33157,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33070,
											"end": 33157,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 33185,
											"end": 33186,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 33175,
											"end": 33182,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 33175,
											"end": 33186,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 33172,
											"end": 33305,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 33172,
											"end": 33305,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "267"
										},
										{
											"begin": 33172,
											"end": 33305,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 33243,
											"end": 33289,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "268"
										},
										{
											"begin": 33281,
											"end": 33288,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 33243,
											"end": 33255,
											"name": "PUSH",
											"source": 0,
											"value": "B"
										},
										{
											"begin": 33243,
											"end": 33276,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 33264,
											"end": 33274,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 33243,
											"end": 33276,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 33243,
											"end": 33276,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 33243,
											"end": 33276,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 33243,
											"end": 33276,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 33243,
											"end": 33276,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 33243,
											"end": 33276,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 33243,
											"end": 33276,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 33243,
											"end": 33276,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 33243,
											"end": 33276,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33243,
											"end": 33276,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 33243,
											"end": 33276,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 33243,
											"end": 33276,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 33243,
											"end": 33276,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 33243,
											"end": 33276,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 33243,
											"end": 33276,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 33243,
											"end": 33276,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 33243,
											"end": 33280,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "184"
										},
										{
											"begin": 33243,
											"end": 33280,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33243,
											"end": 33289,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 33243,
											"end": 33289,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33243,
											"end": 33289,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 33243,
											"end": 33289,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 33243,
											"end": 33289,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 33243,
											"end": 33289,
											"name": "tag",
											"source": 0,
											"value": "268"
										},
										{
											"begin": 33243,
											"end": 33289,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33207,
											"end": 33219,
											"name": "PUSH",
											"source": 0,
											"value": "B"
										},
										{
											"begin": 33207,
											"end": 33240,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 33228,
											"end": 33238,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 33207,
											"end": 33240,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 33207,
											"end": 33240,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 33207,
											"end": 33240,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 33207,
											"end": 33240,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 33207,
											"end": 33240,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 33207,
											"end": 33240,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 33207,
											"end": 33240,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 33207,
											"end": 33240,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 33207,
											"end": 33240,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33207,
											"end": 33240,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 33207,
											"end": 33240,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 33207,
											"end": 33240,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 33207,
											"end": 33240,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 33207,
											"end": 33240,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 33207,
											"end": 33240,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 33207,
											"end": 33289,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 33207,
											"end": 33289,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33207,
											"end": 33289,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 33207,
											"end": 33289,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 33172,
											"end": 33305,
											"name": "tag",
											"source": 0,
											"value": "267"
										},
										{
											"begin": 33172,
											"end": 33305,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33055,
											"end": 33316,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 33034,
											"end": 33316,
											"name": "tag",
											"source": 0,
											"value": "263"
										},
										{
											"begin": 33034,
											"end": 33316,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33339,
											"end": 33340,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 33329,
											"end": 33336,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 33329,
											"end": 33340,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 33326,
											"end": 33496,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 33326,
											"end": 33496,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "269"
										},
										{
											"begin": 33326,
											"end": 33496,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 33357,
											"end": 33431,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "270"
										},
										{
											"begin": 33395,
											"end": 33405,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 33416,
											"end": 33420,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 33423,
											"end": 33430,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 33357,
											"end": 33361,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 33357,
											"end": 33369,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 33357,
											"end": 33369,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 33357,
											"end": 33369,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 33357,
											"end": 33369,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33357,
											"end": 33369,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 33357,
											"end": 33369,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33357,
											"end": 33369,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 33357,
											"end": 33369,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 33357,
											"end": 33369,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33357,
											"end": 33369,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 33357,
											"end": 33369,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 33357,
											"end": 33369,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 33357,
											"end": 33386,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 33357,
											"end": 33386,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 33357,
											"end": 33386,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "271"
										},
										{
											"begin": 33357,
											"end": 33386,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33357,
											"end": 33431,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 33357,
											"end": 33431,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 33357,
											"end": 33431,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 33357,
											"end": 33431,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33357,
											"end": 33431,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 33357,
											"end": 33431,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 33357,
											"end": 33431,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 33357,
											"end": 33431,
											"name": "tag",
											"source": 0,
											"value": "270"
										},
										{
											"begin": 33357,
											"end": 33431,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33460,
											"end": 33484,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "272"
										},
										{
											"begin": 33476,
											"end": 33483,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 33460,
											"end": 33464,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 33460,
											"end": 33471,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 33460,
											"end": 33471,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 33460,
											"end": 33471,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 33460,
											"end": 33475,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "184"
										},
										{
											"begin": 33460,
											"end": 33475,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33460,
											"end": 33484,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 33460,
											"end": 33484,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33460,
											"end": 33484,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 33460,
											"end": 33484,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 33460,
											"end": 33484,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 33460,
											"end": 33484,
											"name": "tag",
											"source": 0,
											"value": "272"
										},
										{
											"begin": 33460,
											"end": 33484,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33446,
											"end": 33450,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 33446,
											"end": 33457,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 33446,
											"end": 33457,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 33446,
											"end": 33484,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 33446,
											"end": 33484,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33446,
											"end": 33484,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 33446,
											"end": 33484,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 33326,
											"end": 33496,
											"name": "tag",
											"source": 0,
											"value": "269"
										},
										{
											"begin": 33326,
											"end": 33496,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33524,
											"end": 33572,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "273"
										},
										{
											"begin": 33567,
											"end": 33571,
											"name": "PUSH",
											"source": 0,
											"value": "E8D4A51000"
										},
										{
											"begin": 33524,
											"end": 33562,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "274"
										},
										{
											"begin": 33540,
											"end": 33544,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 33540,
											"end": 33561,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 33540,
											"end": 33561,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 33540,
											"end": 33561,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 33524,
											"end": 33528,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 33524,
											"end": 33535,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 33524,
											"end": 33535,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 33524,
											"end": 33535,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 33524,
											"end": 33539,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "179"
										},
										{
											"begin": 33524,
											"end": 33539,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33524,
											"end": 33562,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 33524,
											"end": 33562,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33524,
											"end": 33562,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 33524,
											"end": 33562,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 33524,
											"end": 33562,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 33524,
											"end": 33562,
											"name": "tag",
											"source": 0,
											"value": "274"
										},
										{
											"begin": 33524,
											"end": 33562,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33524,
											"end": 33566,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "180"
										},
										{
											"begin": 33524,
											"end": 33566,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33524,
											"end": 33572,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 33524,
											"end": 33572,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33524,
											"end": 33572,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 33524,
											"end": 33572,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 33524,
											"end": 33572,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 33524,
											"end": 33572,
											"name": "tag",
											"source": 0,
											"value": "273"
										},
										{
											"begin": 33524,
											"end": 33572,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33506,
											"end": 33510,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 33506,
											"end": 33521,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 33506,
											"end": 33521,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 33506,
											"end": 33572,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 33506,
											"end": 33572,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33506,
											"end": 33572,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 33506,
											"end": 33572,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 33608,
											"end": 33609,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 33596,
											"end": 33606,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 33588,
											"end": 33619,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 33588,
											"end": 33619,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 33588,
											"end": 33619,
											"name": "PUSH",
											"source": 0,
											"value": "90890809C654F11D6E72A28FA60149770A0D11EC6C92319D6CEB2BB0A4EA1A15"
										},
										{
											"begin": 33611,
											"end": 33618,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 33588,
											"end": 33619,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 33588,
											"end": 33619,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 33588,
											"end": 33619,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "275"
										},
										{
											"begin": 33588,
											"end": 33619,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 33588,
											"end": 33619,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33588,
											"end": 33619,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 33588,
											"end": 33619,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 33588,
											"end": 33619,
											"name": "tag",
											"source": 0,
											"value": "275"
										},
										{
											"begin": 33588,
											"end": 33619,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33588,
											"end": 33619,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 33588,
											"end": 33619,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 33588,
											"end": 33619,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 33588,
											"end": 33619,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 33588,
											"end": 33619,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 33588,
											"end": 33619,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33588,
											"end": 33619,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 32876,
											"end": 33627,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 32876,
											"end": 33627,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 32830,
											"end": 33627,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 32830,
											"end": 33627,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 31990,
											"end": 32777,
											"name": "tag",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 31990,
											"end": 32777,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32076,
											"end": 32077,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 32068,
											"end": 32072,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 32068,
											"end": 32077,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 32059,
											"end": 32109,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "277"
										},
										{
											"begin": 32059,
											"end": 32109,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 32059,
											"end": 32109,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 32059,
											"end": 32109,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 32059,
											"end": 32109,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 32059,
											"end": 32109,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32059,
											"end": 32109,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 32059,
											"end": 32109,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 32059,
											"end": 32109,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 32059,
											"end": 32109,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "278"
										},
										{
											"begin": 32059,
											"end": 32109,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32059,
											"end": 32109,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "279"
										},
										{
											"begin": 32059,
											"end": 32109,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 32059,
											"end": 32109,
											"name": "tag",
											"source": 0,
											"value": "278"
										},
										{
											"begin": 32059,
											"end": 32109,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32059,
											"end": 32109,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 32059,
											"end": 32109,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 32059,
											"end": 32109,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 32059,
											"end": 32109,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 32059,
											"end": 32109,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 32059,
											"end": 32109,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32059,
											"end": 32109,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 32059,
											"end": 32109,
											"name": "tag",
											"source": 0,
											"value": "277"
										},
										{
											"begin": 32059,
											"end": 32109,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32122,
											"end": 32143,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 32146,
											"end": 32154,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 32155,
											"end": 32159,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 32146,
											"end": 32160,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32146,
											"end": 32160,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 32146,
											"end": 32160,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32146,
											"end": 32160,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 32146,
											"end": 32160,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "280"
										},
										{
											"begin": 32146,
											"end": 32160,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 32146,
											"end": 32160,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "281"
										},
										{
											"begin": 32146,
											"end": 32160,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "170"
										},
										{
											"begin": 32146,
											"end": 32160,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 32146,
											"end": 32160,
											"name": "tag",
											"source": 0,
											"value": "281"
										},
										{
											"begin": 32146,
											"end": 32160,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32146,
											"end": 32160,
											"name": "tag",
											"source": 0,
											"value": "280"
										},
										{
											"begin": 32146,
											"end": 32160,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32146,
											"end": 32160,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32146,
											"end": 32160,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 32146,
											"end": 32160,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 32146,
											"end": 32160,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 32146,
											"end": 32160,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 32146,
											"end": 32160,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 32146,
											"end": 32160,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32146,
											"end": 32160,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 32146,
											"end": 32160,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 32146,
											"end": 32160,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 32122,
											"end": 32160,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32122,
											"end": 32160,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 32171,
											"end": 32192,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 32195,
											"end": 32203,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 32195,
											"end": 32209,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 32204,
											"end": 32208,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 32195,
											"end": 32209,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32195,
											"end": 32209,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 32195,
											"end": 32209,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 32195,
											"end": 32209,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 32195,
											"end": 32209,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32195,
											"end": 32209,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32195,
											"end": 32209,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 32195,
											"end": 32209,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 32195,
											"end": 32209,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 32195,
											"end": 32209,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 32195,
											"end": 32209,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 32195,
											"end": 32221,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 32210,
											"end": 32220,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 32195,
											"end": 32221,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 32195,
											"end": 32221,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 32195,
											"end": 32221,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 32195,
											"end": 32221,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 32195,
											"end": 32221,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32195,
											"end": 32221,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 32195,
											"end": 32221,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 32195,
											"end": 32221,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 32195,
											"end": 32221,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32195,
											"end": 32221,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32195,
											"end": 32221,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 32195,
											"end": 32221,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 32195,
											"end": 32221,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 32195,
											"end": 32221,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 32195,
											"end": 32221,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 32171,
											"end": 32221,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32171,
											"end": 32221,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 32255,
											"end": 32262,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 32240,
											"end": 32244,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32240,
											"end": 32251,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 32240,
											"end": 32251,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 32240,
											"end": 32251,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 32240,
											"end": 32262,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 32240,
											"end": 32262,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 32232,
											"end": 32285,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "283"
										},
										{
											"begin": 32232,
											"end": 32285,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 32232,
											"end": 32285,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 32232,
											"end": 32285,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 32232,
											"end": 32285,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 32232,
											"end": 32285,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32232,
											"end": 32285,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 32232,
											"end": 32285,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 32232,
											"end": 32285,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 32232,
											"end": 32285,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "284"
										},
										{
											"begin": 32232,
											"end": 32285,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32232,
											"end": 32285,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "174"
										},
										{
											"begin": 32232,
											"end": 32285,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 32232,
											"end": 32285,
											"name": "tag",
											"source": 0,
											"value": "284"
										},
										{
											"begin": 32232,
											"end": 32285,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32232,
											"end": 32285,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 32232,
											"end": 32285,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 32232,
											"end": 32285,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 32232,
											"end": 32285,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 32232,
											"end": 32285,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 32232,
											"end": 32285,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32232,
											"end": 32285,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 32232,
											"end": 32285,
											"name": "tag",
											"source": 0,
											"value": "283"
										},
										{
											"begin": 32232,
											"end": 32285,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32296,
											"end": 32312,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "285"
										},
										{
											"begin": 32307,
											"end": 32311,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 32296,
											"end": 32306,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 32296,
											"end": 32312,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 32296,
											"end": 32312,
											"name": "tag",
											"source": 0,
											"value": "285"
										},
										{
											"begin": 32296,
											"end": 32312,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32323,
											"end": 32338,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 32341,
											"end": 32410,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "286"
										},
										{
											"begin": 32394,
											"end": 32398,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 32394,
											"end": 32409,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 32394,
											"end": 32409,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 32394,
											"end": 32409,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 32341,
											"end": 32389,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "287"
										},
										{
											"begin": 32384,
											"end": 32388,
											"name": "PUSH",
											"source": 0,
											"value": "E8D4A51000"
										},
										{
											"begin": 32341,
											"end": 32379,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "288"
										},
										{
											"begin": 32357,
											"end": 32361,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 32357,
											"end": 32378,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 32357,
											"end": 32378,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 32357,
											"end": 32378,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 32341,
											"end": 32345,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 32341,
											"end": 32352,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 32341,
											"end": 32352,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 32341,
											"end": 32352,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 32341,
											"end": 32356,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "179"
										},
										{
											"begin": 32341,
											"end": 32356,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32341,
											"end": 32379,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 32341,
											"end": 32379,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32341,
											"end": 32379,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 32341,
											"end": 32379,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 32341,
											"end": 32379,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 32341,
											"end": 32379,
											"name": "tag",
											"source": 0,
											"value": "288"
										},
										{
											"begin": 32341,
											"end": 32379,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32341,
											"end": 32383,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "180"
										},
										{
											"begin": 32341,
											"end": 32383,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32341,
											"end": 32389,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 32341,
											"end": 32389,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32341,
											"end": 32389,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 32341,
											"end": 32389,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 32341,
											"end": 32389,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 32341,
											"end": 32389,
											"name": "tag",
											"source": 0,
											"value": "287"
										},
										{
											"begin": 32341,
											"end": 32389,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32341,
											"end": 32393,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "181"
										},
										{
											"begin": 32341,
											"end": 32393,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32341,
											"end": 32410,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 32341,
											"end": 32410,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32341,
											"end": 32410,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 32341,
											"end": 32410,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 32341,
											"end": 32410,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 32341,
											"end": 32410,
											"name": "tag",
											"source": 0,
											"value": "286"
										},
										{
											"begin": 32341,
											"end": 32410,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32323,
											"end": 32410,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32323,
											"end": 32410,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 32434,
											"end": 32435,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 32424,
											"end": 32431,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32424,
											"end": 32435,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 32421,
											"end": 32527,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 32421,
											"end": 32527,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "289"
										},
										{
											"begin": 32421,
											"end": 32527,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 32478,
											"end": 32515,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "290"
										},
										{
											"begin": 32507,
											"end": 32514,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32478,
											"end": 32490,
											"name": "PUSH",
											"source": 0,
											"value": "B"
										},
										{
											"begin": 32478,
											"end": 32502,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 32491,
											"end": 32501,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 32478,
											"end": 32502,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 32478,
											"end": 32502,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 32478,
											"end": 32502,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 32478,
											"end": 32502,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 32478,
											"end": 32502,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32478,
											"end": 32502,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 32478,
											"end": 32502,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 32478,
											"end": 32502,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 32478,
											"end": 32502,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32478,
											"end": 32502,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32478,
											"end": 32502,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 32478,
											"end": 32502,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 32478,
											"end": 32502,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 32478,
											"end": 32502,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 32478,
											"end": 32502,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 32478,
											"end": 32502,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 32478,
											"end": 32506,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "184"
										},
										{
											"begin": 32478,
											"end": 32506,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32478,
											"end": 32515,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 32478,
											"end": 32515,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32478,
											"end": 32515,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 32478,
											"end": 32515,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 32478,
											"end": 32515,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 32478,
											"end": 32515,
											"name": "tag",
											"source": 0,
											"value": "290"
										},
										{
											"begin": 32478,
											"end": 32515,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32451,
											"end": 32463,
											"name": "PUSH",
											"source": 0,
											"value": "B"
										},
										{
											"begin": 32451,
											"end": 32475,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 32464,
											"end": 32474,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 32451,
											"end": 32475,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 32451,
											"end": 32475,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 32451,
											"end": 32475,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 32451,
											"end": 32475,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 32451,
											"end": 32475,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32451,
											"end": 32475,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 32451,
											"end": 32475,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 32451,
											"end": 32475,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 32451,
											"end": 32475,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32451,
											"end": 32475,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32451,
											"end": 32475,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 32451,
											"end": 32475,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 32451,
											"end": 32475,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 32451,
											"end": 32475,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 32451,
											"end": 32475,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 32451,
											"end": 32515,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32451,
											"end": 32515,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32451,
											"end": 32515,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 32451,
											"end": 32515,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 32421,
											"end": 32527,
											"name": "tag",
											"source": 0,
											"value": "289"
										},
										{
											"begin": 32421,
											"end": 32527,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32551,
											"end": 32575,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "291"
										},
										{
											"begin": 32567,
											"end": 32574,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 32551,
											"end": 32555,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 32551,
											"end": 32562,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 32551,
											"end": 32562,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 32551,
											"end": 32562,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 32551,
											"end": 32566,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "181"
										},
										{
											"begin": 32551,
											"end": 32566,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32551,
											"end": 32575,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 32551,
											"end": 32575,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32551,
											"end": 32575,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 32551,
											"end": 32575,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 32551,
											"end": 32575,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 32551,
											"end": 32575,
											"name": "tag",
											"source": 0,
											"value": "291"
										},
										{
											"begin": 32551,
											"end": 32575,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32537,
											"end": 32541,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 32537,
											"end": 32548,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 32537,
											"end": 32548,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 32537,
											"end": 32575,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32537,
											"end": 32575,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32537,
											"end": 32575,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 32537,
											"end": 32575,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 32604,
											"end": 32652,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "292"
										},
										{
											"begin": 32647,
											"end": 32651,
											"name": "PUSH",
											"source": 0,
											"value": "E8D4A51000"
										},
										{
											"begin": 32604,
											"end": 32642,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "293"
										},
										{
											"begin": 32620,
											"end": 32624,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 32620,
											"end": 32641,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 32620,
											"end": 32641,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 32620,
											"end": 32641,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 32604,
											"end": 32608,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 32604,
											"end": 32615,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 32604,
											"end": 32615,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 32604,
											"end": 32615,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 32604,
											"end": 32619,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "179"
										},
										{
											"begin": 32604,
											"end": 32619,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32604,
											"end": 32642,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 32604,
											"end": 32642,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32604,
											"end": 32642,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 32604,
											"end": 32642,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 32604,
											"end": 32642,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 32604,
											"end": 32642,
											"name": "tag",
											"source": 0,
											"value": "293"
										},
										{
											"begin": 32604,
											"end": 32642,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32604,
											"end": 32646,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "180"
										},
										{
											"begin": 32604,
											"end": 32646,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32604,
											"end": 32652,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 32604,
											"end": 32652,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32604,
											"end": 32652,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 32604,
											"end": 32652,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 32604,
											"end": 32652,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 32604,
											"end": 32652,
											"name": "tag",
											"source": 0,
											"value": "292"
										},
										{
											"begin": 32604,
											"end": 32652,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32586,
											"end": 32590,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 32586,
											"end": 32601,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 32586,
											"end": 32601,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 32586,
											"end": 32652,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32586,
											"end": 32652,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32586,
											"end": 32652,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 32586,
											"end": 32652,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 32663,
											"end": 32718,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "294"
										},
										{
											"begin": 32697,
											"end": 32707,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 32710,
											"end": 32717,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 32663,
											"end": 32667,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 32663,
											"end": 32675,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 32663,
											"end": 32675,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 32663,
											"end": 32675,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 32663,
											"end": 32675,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32663,
											"end": 32675,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 32663,
											"end": 32675,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32663,
											"end": 32675,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 32663,
											"end": 32675,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 32663,
											"end": 32675,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32663,
											"end": 32675,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 32663,
											"end": 32675,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 32663,
											"end": 32675,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 32663,
											"end": 32688,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 32663,
											"end": 32688,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 32663,
											"end": 32688,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "188"
										},
										{
											"begin": 32663,
											"end": 32688,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32663,
											"end": 32718,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 32663,
											"end": 32718,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 32663,
											"end": 32718,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32663,
											"end": 32718,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 32663,
											"end": 32718,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 32663,
											"end": 32718,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 32663,
											"end": 32718,
											"name": "tag",
											"source": 0,
											"value": "294"
										},
										{
											"begin": 32663,
											"end": 32718,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32755,
											"end": 32759,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 32743,
											"end": 32753,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 32734,
											"end": 32769,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 32734,
											"end": 32769,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 32734,
											"end": 32769,
											"name": "PUSH",
											"source": 0,
											"value": "F279E6A1F5E320CCA91135676D9CB6E44CA8A08C0B88342BCDB1144F6511B568"
										},
										{
											"begin": 32761,
											"end": 32768,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 32734,
											"end": 32769,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 32734,
											"end": 32769,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 32734,
											"end": 32769,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "295"
										},
										{
											"begin": 32734,
											"end": 32769,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 32734,
											"end": 32769,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32734,
											"end": 32769,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 32734,
											"end": 32769,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 32734,
											"end": 32769,
											"name": "tag",
											"source": 0,
											"value": "295"
										},
										{
											"begin": 32734,
											"end": 32769,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32734,
											"end": 32769,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 32734,
											"end": 32769,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 32734,
											"end": 32769,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 32734,
											"end": 32769,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 32734,
											"end": 32769,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 32734,
											"end": 32769,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32734,
											"end": 32769,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 32046,
											"end": 32777,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 32046,
											"end": 32777,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 32046,
											"end": 32777,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 31990,
											"end": 32777,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 31990,
											"end": 32777,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 31990,
											"end": 32777,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 28500,
											"end": 28991,
											"name": "tag",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 28500,
											"end": 28991,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28586,
											"end": 28587,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 28557,
											"end": 28588,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 28557,
											"end": 28588,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 28565,
											"end": 28573,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 28565,
											"end": 28573,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 28565,
											"end": 28573,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28565,
											"end": 28573,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 28565,
											"end": 28573,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28565,
											"end": 28573,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 28565,
											"end": 28573,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 28565,
											"end": 28573,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28565,
											"end": 28573,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 28565,
											"end": 28573,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 28565,
											"end": 28573,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 28557,
											"end": 28588,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 28557,
											"end": 28588,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 28557,
											"end": 28588,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 28549,
											"end": 28613,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "297"
										},
										{
											"begin": 28549,
											"end": 28613,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28549,
											"end": 28613,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 28549,
											"end": 28613,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 28549,
											"end": 28613,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 28549,
											"end": 28613,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28549,
											"end": 28613,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 28549,
											"end": 28613,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 28549,
											"end": 28613,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 28549,
											"end": 28613,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "298"
										},
										{
											"begin": 28549,
											"end": 28613,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28549,
											"end": 28613,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "299"
										},
										{
											"begin": 28549,
											"end": 28613,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 28549,
											"end": 28613,
											"name": "tag",
											"source": 0,
											"value": "298"
										},
										{
											"begin": 28549,
											"end": 28613,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28549,
											"end": 28613,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 28549,
											"end": 28613,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 28549,
											"end": 28613,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28549,
											"end": 28613,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 28549,
											"end": 28613,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 28549,
											"end": 28613,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28549,
											"end": 28613,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 28549,
											"end": 28613,
											"name": "tag",
											"source": 0,
											"value": "297"
										},
										{
											"begin": 28549,
											"end": 28613,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28624,
											"end": 28645,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 28648,
											"end": 28656,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 28657,
											"end": 28661,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 28648,
											"end": 28662,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28648,
											"end": 28662,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 28648,
											"end": 28662,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28648,
											"end": 28662,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 28648,
											"end": 28662,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "300"
										},
										{
											"begin": 28648,
											"end": 28662,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28648,
											"end": 28662,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "301"
										},
										{
											"begin": 28648,
											"end": 28662,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "170"
										},
										{
											"begin": 28648,
											"end": 28662,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 28648,
											"end": 28662,
											"name": "tag",
											"source": 0,
											"value": "301"
										},
										{
											"begin": 28648,
											"end": 28662,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28648,
											"end": 28662,
											"name": "tag",
											"source": 0,
											"value": "300"
										},
										{
											"begin": 28648,
											"end": 28662,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28648,
											"end": 28662,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28648,
											"end": 28662,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 28648,
											"end": 28662,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 28648,
											"end": 28662,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 28648,
											"end": 28662,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 28648,
											"end": 28662,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 28648,
											"end": 28662,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28648,
											"end": 28662,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 28648,
											"end": 28662,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 28648,
											"end": 28662,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 28624,
											"end": 28662,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28624,
											"end": 28662,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 28673,
											"end": 28687,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 28690,
											"end": 28694,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28690,
											"end": 28702,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 28690,
											"end": 28702,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 28690,
											"end": 28702,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 28690,
											"end": 28702,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28690,
											"end": 28702,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 28690,
											"end": 28702,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28690,
											"end": 28702,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 28690,
											"end": 28702,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 28690,
											"end": 28702,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28690,
											"end": 28702,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 28690,
											"end": 28702,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 28690,
											"end": 28702,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 28673,
											"end": 28702,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28673,
											"end": 28702,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 28713,
											"end": 28724,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 28727,
											"end": 28734,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28727,
											"end": 28744,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 28727,
											"end": 28744,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 28727,
											"end": 28744,
											"name": "PUSH",
											"source": 0,
											"value": "70A08231"
										},
										{
											"begin": 28753,
											"end": 28757,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 28727,
											"end": 28759,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 28727,
											"end": 28759,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 28727,
											"end": 28759,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 28727,
											"end": 28759,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 28727,
											"end": 28759,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 28727,
											"end": 28759,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 28727,
											"end": 28759,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 28727,
											"end": 28759,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28727,
											"end": 28759,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 28727,
											"end": 28759,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 28727,
											"end": 28759,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 28727,
											"end": 28759,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "303"
										},
										{
											"begin": 28727,
											"end": 28759,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 28727,
											"end": 28759,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28727,
											"end": 28759,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 28727,
											"end": 28759,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 28727,
											"end": 28759,
											"name": "tag",
											"source": 0,
											"value": "303"
										},
										{
											"begin": 28727,
											"end": 28759,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28727,
											"end": 28759,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 28727,
											"end": 28759,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 28727,
											"end": 28759,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 28727,
											"end": 28759,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28727,
											"end": 28759,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 28727,
											"end": 28759,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 28727,
											"end": 28759,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28727,
											"end": 28759,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 28727,
											"end": 28759,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 28727,
											"end": 28759,
											"name": "STATICCALL",
											"source": 0
										},
										{
											"begin": 28727,
											"end": 28759,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 28727,
											"end": 28759,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28727,
											"end": 28759,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 28727,
											"end": 28759,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "305"
										},
										{
											"begin": 28727,
											"end": 28759,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28727,
											"end": 28759,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 28727,
											"end": 28759,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 28727,
											"end": 28759,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28727,
											"end": 28759,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 28727,
											"end": 28759,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 28727,
											"end": 28759,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 28727,
											"end": 28759,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 28727,
											"end": 28759,
											"name": "tag",
											"source": 0,
											"value": "305"
										},
										{
											"begin": 28727,
											"end": 28759,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28727,
											"end": 28759,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 28727,
											"end": 28759,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 28727,
											"end": 28759,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 28727,
											"end": 28759,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 28727,
											"end": 28759,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 28727,
											"end": 28759,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 28727,
											"end": 28759,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 28727,
											"end": 28759,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 28727,
											"end": 28759,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 28727,
											"end": 28759,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 28727,
											"end": 28759,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 28727,
											"end": 28759,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 28727,
											"end": 28759,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 28727,
											"end": 28759,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 28727,
											"end": 28759,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 28727,
											"end": 28759,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28727,
											"end": 28759,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 28727,
											"end": 28759,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 28727,
											"end": 28759,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 28727,
											"end": 28759,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28727,
											"end": 28759,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 28727,
											"end": 28759,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28727,
											"end": 28759,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "306"
										},
										{
											"begin": 28727,
											"end": 28759,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 28727,
											"end": 28759,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28727,
											"end": 28759,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "202"
										},
										{
											"begin": 28727,
											"end": 28759,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 28727,
											"end": 28759,
											"name": "tag",
											"source": 0,
											"value": "306"
										},
										{
											"begin": 28727,
											"end": 28759,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28713,
											"end": 28759,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28713,
											"end": 28759,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 28770,
											"end": 28813,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "307"
										},
										{
											"begin": 28798,
											"end": 28806,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 28798,
											"end": 28806,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 28798,
											"end": 28806,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28798,
											"end": 28806,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 28798,
											"end": 28806,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28798,
											"end": 28806,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 28798,
											"end": 28806,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 28798,
											"end": 28806,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28798,
											"end": 28806,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 28798,
											"end": 28806,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 28798,
											"end": 28806,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 28809,
											"end": 28812,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 28770,
											"end": 28777,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 28770,
											"end": 28789,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 28770,
											"end": 28789,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 28770,
											"end": 28789,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "308"
										},
										{
											"begin": 28770,
											"end": 28789,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28770,
											"end": 28813,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 28770,
											"end": 28813,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 28770,
											"end": 28813,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28770,
											"end": 28813,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 28770,
											"end": 28813,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 28770,
											"end": 28813,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 28770,
											"end": 28813,
											"name": "tag",
											"source": 0,
											"value": "307"
										},
										{
											"begin": 28770,
											"end": 28813,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28824,
											"end": 28841,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 28844,
											"end": 28852,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 28844,
											"end": 28852,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 28844,
											"end": 28852,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28844,
											"end": 28852,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 28844,
											"end": 28852,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28844,
											"end": 28852,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 28844,
											"end": 28852,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 28844,
											"end": 28852,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28844,
											"end": 28852,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 28844,
											"end": 28852,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 28844,
											"end": 28852,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 28844,
											"end": 28860,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 28844,
											"end": 28860,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 28844,
											"end": 28860,
											"name": "PUSH",
											"source": 0,
											"value": "CE5494BB"
										},
										{
											"begin": 28861,
											"end": 28868,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 28844,
											"end": 28869,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 28844,
											"end": 28869,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 28844,
											"end": 28869,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 28844,
											"end": 28869,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 28844,
											"end": 28869,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 28844,
											"end": 28869,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 28844,
											"end": 28869,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 28844,
											"end": 28869,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28844,
											"end": 28869,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 28844,
											"end": 28869,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 28844,
											"end": 28869,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 28844,
											"end": 28869,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "309"
										},
										{
											"begin": 28844,
											"end": 28869,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 28844,
											"end": 28869,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28844,
											"end": 28869,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 28844,
											"end": 28869,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 28844,
											"end": 28869,
											"name": "tag",
											"source": 0,
											"value": "309"
										},
										{
											"begin": 28844,
											"end": 28869,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28844,
											"end": 28869,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 28844,
											"end": 28869,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 28844,
											"end": 28869,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 28844,
											"end": 28869,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28844,
											"end": 28869,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 28844,
											"end": 28869,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 28844,
											"end": 28869,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28844,
											"end": 28869,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 28844,
											"end": 28869,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 28844,
											"end": 28869,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 28844,
											"end": 28869,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 28844,
											"end": 28869,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 28844,
											"end": 28869,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28844,
											"end": 28869,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 28844,
											"end": 28869,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "311"
										},
										{
											"begin": 28844,
											"end": 28869,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28844,
											"end": 28869,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 28844,
											"end": 28869,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 28844,
											"end": 28869,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28844,
											"end": 28869,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 28844,
											"end": 28869,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 28844,
											"end": 28869,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 28844,
											"end": 28869,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 28844,
											"end": 28869,
											"name": "tag",
											"source": 0,
											"value": "311"
										},
										{
											"begin": 28844,
											"end": 28869,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28844,
											"end": 28869,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 28844,
											"end": 28869,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 28844,
											"end": 28869,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 28844,
											"end": 28869,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 28844,
											"end": 28869,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 28844,
											"end": 28869,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 28844,
											"end": 28869,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 28844,
											"end": 28869,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 28844,
											"end": 28869,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 28844,
											"end": 28869,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 28844,
											"end": 28869,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 28844,
											"end": 28869,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 28844,
											"end": 28869,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 28844,
											"end": 28869,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 28844,
											"end": 28869,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 28844,
											"end": 28869,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28844,
											"end": 28869,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 28844,
											"end": 28869,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 28844,
											"end": 28869,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 28844,
											"end": 28869,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28844,
											"end": 28869,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 28844,
											"end": 28869,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28844,
											"end": 28869,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "312"
										},
										{
											"begin": 28844,
											"end": 28869,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 28844,
											"end": 28869,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28844,
											"end": 28869,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "313"
										},
										{
											"begin": 28844,
											"end": 28869,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 28844,
											"end": 28869,
											"name": "tag",
											"source": 0,
											"value": "312"
										},
										{
											"begin": 28844,
											"end": 28869,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28824,
											"end": 28869,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28824,
											"end": 28869,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 28895,
											"end": 28905,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28895,
											"end": 28915,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 28895,
											"end": 28915,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 28895,
											"end": 28915,
											"name": "PUSH",
											"source": 0,
											"value": "70A08231"
										},
										{
											"begin": 28924,
											"end": 28928,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 28895,
											"end": 28930,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 28895,
											"end": 28930,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 28895,
											"end": 28930,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 28895,
											"end": 28930,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 28895,
											"end": 28930,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 28895,
											"end": 28930,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 28895,
											"end": 28930,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 28895,
											"end": 28930,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28895,
											"end": 28930,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 28895,
											"end": 28930,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 28895,
											"end": 28930,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 28895,
											"end": 28930,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "314"
										},
										{
											"begin": 28895,
											"end": 28930,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 28895,
											"end": 28930,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28895,
											"end": 28930,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 28895,
											"end": 28930,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 28895,
											"end": 28930,
											"name": "tag",
											"source": 0,
											"value": "314"
										},
										{
											"begin": 28895,
											"end": 28930,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28895,
											"end": 28930,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 28895,
											"end": 28930,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 28895,
											"end": 28930,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 28895,
											"end": 28930,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28895,
											"end": 28930,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 28895,
											"end": 28930,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 28895,
											"end": 28930,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28895,
											"end": 28930,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 28895,
											"end": 28930,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 28895,
											"end": 28930,
											"name": "STATICCALL",
											"source": 0
										},
										{
											"begin": 28895,
											"end": 28930,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 28895,
											"end": 28930,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28895,
											"end": 28930,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 28895,
											"end": 28930,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "316"
										},
										{
											"begin": 28895,
											"end": 28930,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28895,
											"end": 28930,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 28895,
											"end": 28930,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 28895,
											"end": 28930,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28895,
											"end": 28930,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 28895,
											"end": 28930,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 28895,
											"end": 28930,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 28895,
											"end": 28930,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 28895,
											"end": 28930,
											"name": "tag",
											"source": 0,
											"value": "316"
										},
										{
											"begin": 28895,
											"end": 28930,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28895,
											"end": 28930,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 28895,
											"end": 28930,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 28895,
											"end": 28930,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 28895,
											"end": 28930,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 28895,
											"end": 28930,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 28895,
											"end": 28930,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 28895,
											"end": 28930,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 28895,
											"end": 28930,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 28895,
											"end": 28930,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 28895,
											"end": 28930,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 28895,
											"end": 28930,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 28895,
											"end": 28930,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 28895,
											"end": 28930,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 28895,
											"end": 28930,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 28895,
											"end": 28930,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 28895,
											"end": 28930,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28895,
											"end": 28930,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 28895,
											"end": 28930,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 28895,
											"end": 28930,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 28895,
											"end": 28930,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28895,
											"end": 28930,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 28895,
											"end": 28930,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28895,
											"end": 28930,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "317"
										},
										{
											"begin": 28895,
											"end": 28930,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 28895,
											"end": 28930,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28895,
											"end": 28930,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "202"
										},
										{
											"begin": 28895,
											"end": 28930,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 28895,
											"end": 28930,
											"name": "tag",
											"source": 0,
											"value": "317"
										},
										{
											"begin": 28895,
											"end": 28930,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28888,
											"end": 28891,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 28888,
											"end": 28930,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 28880,
											"end": 28947,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "318"
										},
										{
											"begin": 28880,
											"end": 28947,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28880,
											"end": 28947,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 28880,
											"end": 28947,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 28880,
											"end": 28947,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 28880,
											"end": 28947,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28880,
											"end": 28947,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 28880,
											"end": 28947,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 28880,
											"end": 28947,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 28880,
											"end": 28947,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "319"
										},
										{
											"begin": 28880,
											"end": 28947,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28880,
											"end": 28947,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "320"
										},
										{
											"begin": 28880,
											"end": 28947,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 28880,
											"end": 28947,
											"name": "tag",
											"source": 0,
											"value": "319"
										},
										{
											"begin": 28880,
											"end": 28947,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28880,
											"end": 28947,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 28880,
											"end": 28947,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 28880,
											"end": 28947,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28880,
											"end": 28947,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 28880,
											"end": 28947,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 28880,
											"end": 28947,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28880,
											"end": 28947,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 28880,
											"end": 28947,
											"name": "tag",
											"source": 0,
											"value": "318"
										},
										{
											"begin": 28880,
											"end": 28947,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28973,
											"end": 28983,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28958,
											"end": 28962,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 28958,
											"end": 28970,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 28958,
											"end": 28970,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 28958,
											"end": 28970,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 28958,
											"end": 28983,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 28958,
											"end": 28983,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 28958,
											"end": 28983,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28958,
											"end": 28983,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 28958,
											"end": 28983,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28958,
											"end": 28983,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 28958,
											"end": 28983,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 28958,
											"end": 28983,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 28958,
											"end": 28983,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 28958,
											"end": 28983,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28958,
											"end": 28983,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 28958,
											"end": 28983,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 28958,
											"end": 28983,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 28958,
											"end": 28983,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 28958,
											"end": 28983,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 28958,
											"end": 28983,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28958,
											"end": 28983,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 28958,
											"end": 28983,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 28538,
											"end": 28991,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 28538,
											"end": 28991,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 28538,
											"end": 28991,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 28538,
											"end": 28991,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 28500,
											"end": 28991,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 28500,
											"end": 28991,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 24326,
											"end": 24351,
											"name": "tag",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 24326,
											"end": 24351,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24326,
											"end": 24351,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 24326,
											"end": 24351,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 24326,
											"end": 24351,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24326,
											"end": 24351,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 25352,
											"end": 25558,
											"name": "tag",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 25352,
											"end": 25558,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20336,
											"end": 20348,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "322"
										},
										{
											"begin": 20336,
											"end": 20346,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "234"
										},
										{
											"begin": 20336,
											"end": 20348,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 20336,
											"end": 20348,
											"name": "tag",
											"source": 0,
											"value": "322"
										},
										{
											"begin": 20336,
											"end": 20348,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20325,
											"end": 20348,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 20325,
											"end": 20348,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20325,
											"end": 20332,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "323"
										},
										{
											"begin": 20325,
											"end": 20330,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 20325,
											"end": 20332,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 20325,
											"end": 20332,
											"name": "tag",
											"source": 0,
											"value": "323"
										},
										{
											"begin": 20325,
											"end": 20332,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20325,
											"end": 20348,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 20325,
											"end": 20348,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20325,
											"end": 20348,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "324"
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "325"
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "238"
										},
										{
											"begin": 20317,
											"end": 20385,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "tag",
											"source": 0,
											"value": "325"
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "tag",
											"source": 0,
											"value": "324"
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25426,
											"end": 25434,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 25454,
											"end": 25539,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 25454,
											"end": 25539,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 25454,
											"end": 25539,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25454,
											"end": 25539,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 25454,
											"end": 25539,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 25454,
											"end": 25539,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 25454,
											"end": 25539,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 25454,
											"end": 25539,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25487,
											"end": 25491,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 25454,
											"end": 25539,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 25454,
											"end": 25539,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 25454,
											"end": 25539,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25454,
											"end": 25539,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 25454,
											"end": 25539,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 25454,
											"end": 25539,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 25517,
											"end": 25523,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 25454,
											"end": 25539,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25454,
											"end": 25539,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 25454,
											"end": 25539,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25426,
											"end": 25550,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25426,
											"end": 25550,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25426,
											"end": 25550,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 25426,
											"end": 25550,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25426,
											"end": 25550,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 25426,
											"end": 25550,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 25426,
											"end": 25550,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25426,
											"end": 25550,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 25426,
											"end": 25550,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 25426,
											"end": 25550,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25426,
											"end": 25550,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 25426,
											"end": 25550,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25426,
											"end": 25550,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25426,
											"end": 25550,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 25426,
											"end": 25550,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25426,
											"end": 25550,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 25426,
											"end": 25550,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25426,
											"end": 25550,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 25426,
											"end": 25550,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 25426,
											"end": 25550,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 25426,
											"end": 25550,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 25426,
											"end": 25550,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 25426,
											"end": 25550,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25426,
											"end": 25550,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 25426,
											"end": 25550,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 25426,
											"end": 25550,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 25426,
											"end": 25550,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 25426,
											"end": 25550,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25426,
											"end": 25550,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 25426,
											"end": 25550,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25426,
											"end": 25550,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 25426,
											"end": 25550,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25426,
											"end": 25550,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 25426,
											"end": 25550,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25426,
											"end": 25550,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 25426,
											"end": 25550,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 25426,
											"end": 25550,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 25426,
											"end": 25550,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 25426,
											"end": 25550,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25426,
											"end": 25550,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 25426,
											"end": 25550,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 25426,
											"end": 25550,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 25426,
											"end": 25550,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 25426,
											"end": 25550,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 25426,
											"end": 25550,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25426,
											"end": 25550,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 25426,
											"end": 25550,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25426,
											"end": 25550,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 25426,
											"end": 25550,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 25426,
											"end": 25550,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 25426,
											"end": 25550,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 25426,
											"end": 25550,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25426,
											"end": 25550,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 25426,
											"end": 25550,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 25426,
											"end": 25550,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 25426,
											"end": 25550,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 25426,
											"end": 25550,
											"modifierDepth": 1,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 25426,
											"end": 25550,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25426,
											"end": 25550,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 25426,
											"end": 25550,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25426,
											"end": 25550,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 25426,
											"end": 25550,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 25426,
											"end": 25550,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 25426,
											"end": 25550,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 25426,
											"end": 25550,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25426,
											"end": 25550,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 25426,
											"end": 25550,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 25426,
											"end": 25550,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 25426,
											"end": 25550,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25426,
											"end": 25550,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25352,
											"end": 25558,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25352,
											"end": 25558,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25352,
											"end": 25558,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 30382,
											"end": 31072,
											"name": "tag",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 30382,
											"end": 31072,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30434,
											"end": 30455,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 30458,
											"end": 30466,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 30467,
											"end": 30471,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 30458,
											"end": 30472,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30458,
											"end": 30472,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 30458,
											"end": 30472,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30458,
											"end": 30472,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 30458,
											"end": 30472,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "329"
										},
										{
											"begin": 30458,
											"end": 30472,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 30458,
											"end": 30472,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "330"
										},
										{
											"begin": 30458,
											"end": 30472,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "170"
										},
										{
											"begin": 30458,
											"end": 30472,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 30458,
											"end": 30472,
											"name": "tag",
											"source": 0,
											"value": "330"
										},
										{
											"begin": 30458,
											"end": 30472,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30458,
											"end": 30472,
											"name": "tag",
											"source": 0,
											"value": "329"
										},
										{
											"begin": 30458,
											"end": 30472,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30458,
											"end": 30472,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30458,
											"end": 30472,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 30458,
											"end": 30472,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 30458,
											"end": 30472,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 30458,
											"end": 30472,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 30458,
											"end": 30472,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 30458,
											"end": 30472,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30458,
											"end": 30472,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 30458,
											"end": 30472,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 30458,
											"end": 30472,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 30434,
											"end": 30472,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30434,
											"end": 30472,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 30503,
											"end": 30507,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 30503,
											"end": 30523,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 30503,
											"end": 30523,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 30503,
											"end": 30523,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 30487,
											"end": 30499,
											"name": "NUMBER",
											"source": 0
										},
										{
											"begin": 30487,
											"end": 30523,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 30483,
											"end": 30558,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "332"
										},
										{
											"begin": 30483,
											"end": 30558,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 30540,
											"end": 30547,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 30540,
											"end": 30547,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "328"
										},
										{
											"begin": 30540,
											"end": 30547,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 30483,
											"end": 30558,
											"name": "tag",
											"source": 0,
											"value": "332"
										},
										{
											"begin": 30483,
											"end": 30558,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30568,
											"end": 30584,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 30587,
											"end": 30591,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30587,
											"end": 30599,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 30587,
											"end": 30599,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 30587,
											"end": 30599,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 30587,
											"end": 30599,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30587,
											"end": 30599,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 30587,
											"end": 30599,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30587,
											"end": 30599,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 30587,
											"end": 30599,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 30587,
											"end": 30599,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30587,
											"end": 30599,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 30587,
											"end": 30599,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 30587,
											"end": 30599,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 30587,
											"end": 30609,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 30587,
											"end": 30609,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 30587,
											"end": 30609,
											"name": "PUSH",
											"source": 0,
											"value": "70A08231"
										},
										{
											"begin": 30618,
											"end": 30622,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 30587,
											"end": 30624,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 30587,
											"end": 30624,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 30587,
											"end": 30624,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 30587,
											"end": 30624,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 30587,
											"end": 30624,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 30587,
											"end": 30624,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 30587,
											"end": 30624,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 30587,
											"end": 30624,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30587,
											"end": 30624,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 30587,
											"end": 30624,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 30587,
											"end": 30624,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 30587,
											"end": 30624,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "333"
										},
										{
											"begin": 30587,
											"end": 30624,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 30587,
											"end": 30624,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30587,
											"end": 30624,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 30587,
											"end": 30624,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 30587,
											"end": 30624,
											"name": "tag",
											"source": 0,
											"value": "333"
										},
										{
											"begin": 30587,
											"end": 30624,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30587,
											"end": 30624,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 30587,
											"end": 30624,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 30587,
											"end": 30624,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 30587,
											"end": 30624,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 30587,
											"end": 30624,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 30587,
											"end": 30624,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 30587,
											"end": 30624,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30587,
											"end": 30624,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 30587,
											"end": 30624,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 30587,
											"end": 30624,
											"name": "STATICCALL",
											"source": 0
										},
										{
											"begin": 30587,
											"end": 30624,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 30587,
											"end": 30624,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 30587,
											"end": 30624,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 30587,
											"end": 30624,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "335"
										},
										{
											"begin": 30587,
											"end": 30624,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 30587,
											"end": 30624,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 30587,
											"end": 30624,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 30587,
											"end": 30624,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 30587,
											"end": 30624,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 30587,
											"end": 30624,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 30587,
											"end": 30624,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 30587,
											"end": 30624,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 30587,
											"end": 30624,
											"name": "tag",
											"source": 0,
											"value": "335"
										},
										{
											"begin": 30587,
											"end": 30624,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30587,
											"end": 30624,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 30587,
											"end": 30624,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 30587,
											"end": 30624,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 30587,
											"end": 30624,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 30587,
											"end": 30624,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 30587,
											"end": 30624,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 30587,
											"end": 30624,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 30587,
											"end": 30624,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 30587,
											"end": 30624,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 30587,
											"end": 30624,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 30587,
											"end": 30624,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 30587,
											"end": 30624,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 30587,
											"end": 30624,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 30587,
											"end": 30624,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 30587,
											"end": 30624,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 30587,
											"end": 30624,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 30587,
											"end": 30624,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 30587,
											"end": 30624,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 30587,
											"end": 30624,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 30587,
											"end": 30624,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30587,
											"end": 30624,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 30587,
											"end": 30624,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30587,
											"end": 30624,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "336"
										},
										{
											"begin": 30587,
											"end": 30624,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 30587,
											"end": 30624,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30587,
											"end": 30624,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "202"
										},
										{
											"begin": 30587,
											"end": 30624,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 30587,
											"end": 30624,
											"name": "tag",
											"source": 0,
											"value": "336"
										},
										{
											"begin": 30587,
											"end": 30624,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30568,
											"end": 30624,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30568,
											"end": 30624,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 30651,
											"end": 30652,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 30639,
											"end": 30647,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30639,
											"end": 30652,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 30635,
											"end": 30737,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "337"
										},
										{
											"begin": 30635,
											"end": 30737,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 30692,
											"end": 30704,
											"name": "NUMBER",
											"source": 0
										},
										{
											"begin": 30669,
											"end": 30673,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 30669,
											"end": 30689,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 30669,
											"end": 30689,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 30669,
											"end": 30704,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30669,
											"end": 30704,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30669,
											"end": 30704,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 30669,
											"end": 30704,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 30719,
											"end": 30726,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 30719,
											"end": 30726,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 30719,
											"end": 30726,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "328"
										},
										{
											"begin": 30719,
											"end": 30726,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 30635,
											"end": 30737,
											"name": "tag",
											"source": 0,
											"value": "337"
										},
										{
											"begin": 30635,
											"end": 30737,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30747,
											"end": 30765,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 30768,
											"end": 30817,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "338"
										},
										{
											"begin": 30782,
											"end": 30786,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 30782,
											"end": 30802,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 30782,
											"end": 30802,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 30782,
											"end": 30802,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 30804,
											"end": 30816,
											"name": "NUMBER",
											"source": 0
										},
										{
											"begin": 30768,
											"end": 30781,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 30768,
											"end": 30817,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 30768,
											"end": 30817,
											"name": "tag",
											"source": 0,
											"value": "338"
										},
										{
											"begin": 30768,
											"end": 30817,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30747,
											"end": 30817,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30747,
											"end": 30817,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 30828,
											"end": 30847,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 30850,
											"end": 30921,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "339"
										},
										{
											"begin": 30905,
											"end": 30920,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 30905,
											"end": 30920,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 30850,
											"end": 30900,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "340"
										},
										{
											"begin": 30884,
											"end": 30888,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 30884,
											"end": 30899,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 30884,
											"end": 30899,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 30884,
											"end": 30899,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 30850,
											"end": 30879,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "341"
										},
										{
											"begin": 30865,
											"end": 30878,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 30865,
											"end": 30878,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 30850,
											"end": 30860,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 30850,
											"end": 30864,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "179"
										},
										{
											"begin": 30850,
											"end": 30864,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30850,
											"end": 30879,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 30850,
											"end": 30879,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30850,
											"end": 30879,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 30850,
											"end": 30879,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 30850,
											"end": 30879,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 30850,
											"end": 30879,
											"name": "tag",
											"source": 0,
											"value": "341"
										},
										{
											"begin": 30850,
											"end": 30879,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30850,
											"end": 30883,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "179"
										},
										{
											"begin": 30850,
											"end": 30883,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30850,
											"end": 30900,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 30850,
											"end": 30900,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30850,
											"end": 30900,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 30850,
											"end": 30900,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 30850,
											"end": 30900,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 30850,
											"end": 30900,
											"name": "tag",
											"source": 0,
											"value": "340"
										},
										{
											"begin": 30850,
											"end": 30900,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30850,
											"end": 30904,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "180"
										},
										{
											"begin": 30850,
											"end": 30904,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30850,
											"end": 30921,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 30850,
											"end": 30921,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30850,
											"end": 30921,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 30850,
											"end": 30921,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 30850,
											"end": 30921,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 30850,
											"end": 30921,
											"name": "tag",
											"source": 0,
											"value": "339"
										},
										{
											"begin": 30850,
											"end": 30921,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30828,
											"end": 30921,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30828,
											"end": 30921,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 30956,
											"end": 31018,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "342"
										},
										{
											"begin": 30982,
											"end": 31017,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "343"
										},
										{
											"begin": 31008,
											"end": 31016,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 30982,
											"end": 31003,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "344"
										},
										{
											"begin": 30998,
											"end": 31002,
											"name": "PUSH",
											"source": 0,
											"value": "E8D4A51000"
										},
										{
											"begin": 30982,
											"end": 30993,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 30982,
											"end": 30997,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "179"
										},
										{
											"begin": 30982,
											"end": 30997,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30982,
											"end": 31003,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 30982,
											"end": 31003,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30982,
											"end": 31003,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 30982,
											"end": 31003,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 30982,
											"end": 31003,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 30982,
											"end": 31003,
											"name": "tag",
											"source": 0,
											"value": "344"
										},
										{
											"begin": 30982,
											"end": 31003,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30982,
											"end": 31007,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "180"
										},
										{
											"begin": 30982,
											"end": 31007,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30982,
											"end": 31017,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 30982,
											"end": 31017,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30982,
											"end": 31017,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 30982,
											"end": 31017,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 30982,
											"end": 31017,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 30982,
											"end": 31017,
											"name": "tag",
											"source": 0,
											"value": "343"
										},
										{
											"begin": 30982,
											"end": 31017,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30956,
											"end": 30960,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 30956,
											"end": 30977,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 30956,
											"end": 30977,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 30956,
											"end": 30977,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 30956,
											"end": 30981,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "184"
										},
										{
											"begin": 30956,
											"end": 30981,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30956,
											"end": 31018,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 30956,
											"end": 31018,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30956,
											"end": 31018,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 30956,
											"end": 31018,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 30956,
											"end": 31018,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 30956,
											"end": 31018,
											"name": "tag",
											"source": 0,
											"value": "342"
										},
										{
											"begin": 30956,
											"end": 31018,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30932,
											"end": 30936,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 30932,
											"end": 30953,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 30932,
											"end": 30953,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 30932,
											"end": 31018,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30932,
											"end": 31018,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30932,
											"end": 31018,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 30932,
											"end": 31018,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 31052,
											"end": 31064,
											"name": "NUMBER",
											"source": 0
										},
										{
											"begin": 31029,
											"end": 31033,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 31029,
											"end": 31049,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 31029,
											"end": 31049,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 31029,
											"end": 31064,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31029,
											"end": 31064,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31029,
											"end": 31064,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 31029,
											"end": 31064,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 30423,
											"end": 31072,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 30423,
											"end": 31072,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 30423,
											"end": 31072,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 30423,
											"end": 31072,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 30382,
											"end": 31072,
											"name": "tag",
											"source": 0,
											"value": "328"
										},
										{
											"begin": 30382,
											"end": 31072,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30382,
											"end": 31072,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 30382,
											"end": 31072,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 34505,
											"end": 34861,
											"name": "tag",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 34505,
											"end": 34861,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34564,
											"end": 34585,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 34588,
											"end": 34596,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 34597,
											"end": 34601,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 34588,
											"end": 34602,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34588,
											"end": 34602,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 34588,
											"end": 34602,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34588,
											"end": 34602,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 34588,
											"end": 34602,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "346"
										},
										{
											"begin": 34588,
											"end": 34602,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 34588,
											"end": 34602,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "347"
										},
										{
											"begin": 34588,
											"end": 34602,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "170"
										},
										{
											"begin": 34588,
											"end": 34602,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 34588,
											"end": 34602,
											"name": "tag",
											"source": 0,
											"value": "347"
										},
										{
											"begin": 34588,
											"end": 34602,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34588,
											"end": 34602,
											"name": "tag",
											"source": 0,
											"value": "346"
										},
										{
											"begin": 34588,
											"end": 34602,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34588,
											"end": 34602,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34588,
											"end": 34602,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 34588,
											"end": 34602,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 34588,
											"end": 34602,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 34588,
											"end": 34602,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 34588,
											"end": 34602,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 34588,
											"end": 34602,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34588,
											"end": 34602,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 34588,
											"end": 34602,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 34588,
											"end": 34602,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 34564,
											"end": 34602,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34564,
											"end": 34602,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 34613,
											"end": 34634,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 34637,
											"end": 34645,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 34637,
											"end": 34651,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 34646,
											"end": 34650,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 34637,
											"end": 34651,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34637,
											"end": 34651,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 34637,
											"end": 34651,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 34637,
											"end": 34651,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 34637,
											"end": 34651,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34637,
											"end": 34651,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34637,
											"end": 34651,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 34637,
											"end": 34651,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 34637,
											"end": 34651,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 34637,
											"end": 34651,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 34637,
											"end": 34651,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 34637,
											"end": 34663,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 34652,
											"end": 34662,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 34637,
											"end": 34663,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 34637,
											"end": 34663,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 34637,
											"end": 34663,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 34637,
											"end": 34663,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 34637,
											"end": 34663,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34637,
											"end": 34663,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 34637,
											"end": 34663,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 34637,
											"end": 34663,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 34637,
											"end": 34663,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34637,
											"end": 34663,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34637,
											"end": 34663,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 34637,
											"end": 34663,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 34637,
											"end": 34663,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 34637,
											"end": 34663,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 34637,
											"end": 34663,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 34613,
											"end": 34663,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34613,
											"end": 34663,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 34674,
											"end": 34733,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "349"
										},
										{
											"begin": 34708,
											"end": 34718,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 34721,
											"end": 34725,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 34721,
											"end": 34732,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 34721,
											"end": 34732,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 34721,
											"end": 34732,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 34674,
											"end": 34678,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 34674,
											"end": 34686,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 34674,
											"end": 34686,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 34674,
											"end": 34686,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 34674,
											"end": 34686,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34674,
											"end": 34686,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 34674,
											"end": 34686,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34674,
											"end": 34686,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 34674,
											"end": 34686,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 34674,
											"end": 34686,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34674,
											"end": 34686,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 34674,
											"end": 34686,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 34674,
											"end": 34686,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 34674,
											"end": 34699,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 34674,
											"end": 34699,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 34674,
											"end": 34699,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "188"
										},
										{
											"begin": 34674,
											"end": 34699,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34674,
											"end": 34733,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 34674,
											"end": 34733,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 34674,
											"end": 34733,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34674,
											"end": 34733,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 34674,
											"end": 34733,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 34674,
											"end": 34733,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 34674,
											"end": 34733,
											"name": "tag",
											"source": 0,
											"value": "349"
										},
										{
											"begin": 34674,
											"end": 34733,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34779,
											"end": 34783,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 34767,
											"end": 34777,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 34749,
											"end": 34797,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 34749,
											"end": 34797,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 34749,
											"end": 34797,
											"name": "PUSH",
											"source": 0,
											"value": "BB757047C2B5F3974FE26B7C10F732E7BCE710B0952A71082702781E62AE0595"
										},
										{
											"begin": 34785,
											"end": 34789,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 34785,
											"end": 34796,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 34785,
											"end": 34796,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 34785,
											"end": 34796,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 34749,
											"end": 34797,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 34749,
											"end": 34797,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 34749,
											"end": 34797,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "350"
										},
										{
											"begin": 34749,
											"end": 34797,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 34749,
											"end": 34797,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34749,
											"end": 34797,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 34749,
											"end": 34797,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 34749,
											"end": 34797,
											"name": "tag",
											"source": 0,
											"value": "350"
										},
										{
											"begin": 34749,
											"end": 34797,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34749,
											"end": 34797,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 34749,
											"end": 34797,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 34749,
											"end": 34797,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 34749,
											"end": 34797,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 34749,
											"end": 34797,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 34749,
											"end": 34797,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34749,
											"end": 34797,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 34822,
											"end": 34823,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 34808,
											"end": 34812,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34808,
											"end": 34819,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 34808,
											"end": 34819,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 34808,
											"end": 34823,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34808,
											"end": 34823,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34808,
											"end": 34823,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 34808,
											"end": 34823,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 34852,
											"end": 34853,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 34834,
											"end": 34838,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34834,
											"end": 34849,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 34834,
											"end": 34849,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 34834,
											"end": 34853,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34834,
											"end": 34853,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34834,
											"end": 34853,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 34834,
											"end": 34853,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 34553,
											"end": 34861,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 34553,
											"end": 34861,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 34505,
											"end": 34861,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 34505,
											"end": 34861,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 23707,
											"end": 23735,
											"name": "tag",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 23707,
											"end": 23735,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23707,
											"end": 23735,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 23707,
											"end": 23735,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 23707,
											"end": 23735,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23707,
											"end": 23735,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 26842,
											"end": 26965,
											"name": "tag",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 26842,
											"end": 26965,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20336,
											"end": 20348,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "352"
										},
										{
											"begin": 20336,
											"end": 20346,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "234"
										},
										{
											"begin": 20336,
											"end": 20348,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 20336,
											"end": 20348,
											"name": "tag",
											"source": 0,
											"value": "352"
										},
										{
											"begin": 20336,
											"end": 20348,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20325,
											"end": 20348,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 20325,
											"end": 20348,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20325,
											"end": 20332,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "353"
										},
										{
											"begin": 20325,
											"end": 20330,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 20325,
											"end": 20332,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 20325,
											"end": 20332,
											"name": "tag",
											"source": 0,
											"value": "353"
										},
										{
											"begin": 20325,
											"end": 20332,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20325,
											"end": 20348,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 20325,
											"end": 20348,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20325,
											"end": 20348,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "354"
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "355"
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "238"
										},
										{
											"begin": 20317,
											"end": 20385,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "tag",
											"source": 0,
											"value": "355"
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "tag",
											"source": 0,
											"value": "354"
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26941,
											"end": 26957,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26922,
											"end": 26938,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 26922,
											"end": 26957,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26922,
											"end": 26957,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26922,
											"end": 26957,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 26922,
											"end": 26957,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 26842,
											"end": 26965,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 26842,
											"end": 26965,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 23533,
											"end": 23559,
											"name": "tag",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 23533,
											"end": 23559,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23533,
											"end": 23559,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 23533,
											"end": 23559,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23533,
											"end": 23559,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23533,
											"end": 23559,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 23533,
											"end": 23559,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23533,
											"end": 23559,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 23533,
											"end": 23559,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "357"
										},
										{
											"begin": 23533,
											"end": 23559,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 23533,
											"end": 23559,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 23533,
											"end": 23559,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23533,
											"end": 23559,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 23533,
											"end": 23559,
											"name": "tag",
											"source": 0,
											"value": "357"
										},
										{
											"begin": 23533,
											"end": 23559,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23533,
											"end": 23559,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23533,
											"end": 23559,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 23533,
											"end": 23559,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 23533,
											"end": 23559,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 23533,
											"end": 23559,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 23533,
											"end": 23559,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 23533,
											"end": 23559,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23533,
											"end": 23559,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 23533,
											"end": 23559,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 23533,
											"end": 23559,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 23533,
											"end": 23559,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 23533,
											"end": 23559,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 23533,
											"end": 23559,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 23533,
											"end": 23559,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23533,
											"end": 23559,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 23533,
											"end": 23559,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23533,
											"end": 23559,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 23533,
											"end": 23559,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 23533,
											"end": 23559,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 23533,
											"end": 23559,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23533,
											"end": 23559,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 23533,
											"end": 23559,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23533,
											"end": 23559,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 23533,
											"end": 23559,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 23533,
											"end": 23559,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23533,
											"end": 23559,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 23533,
											"end": 23559,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 23533,
											"end": 23559,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 23533,
											"end": 23559,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23533,
											"end": 23559,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23533,
											"end": 23559,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 23533,
											"end": 23559,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 23533,
											"end": 23559,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 23533,
											"end": 23559,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23533,
											"end": 23559,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 23533,
											"end": 23559,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 23533,
											"end": 23559,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 30126,
											"end": 30306,
											"name": "tag",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 30126,
											"end": 30306,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30171,
											"end": 30185,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 30188,
											"end": 30196,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 30188,
											"end": 30203,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 30188,
											"end": 30203,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 30188,
											"end": 30203,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30188,
											"end": 30203,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 30171,
											"end": 30203,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30171,
											"end": 30203,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 30219,
											"end": 30230,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 30214,
											"end": 30299,
											"name": "tag",
											"source": 0,
											"value": "360"
										},
										{
											"begin": 30214,
											"end": 30299,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30242,
											"end": 30248,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30236,
											"end": 30239,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30236,
											"end": 30248,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 30214,
											"end": 30299,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 30214,
											"end": 30299,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "361"
										},
										{
											"begin": 30214,
											"end": 30299,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 30272,
											"end": 30287,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "363"
										},
										{
											"begin": 30283,
											"end": 30286,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30272,
											"end": 30282,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 30272,
											"end": 30287,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 30272,
											"end": 30287,
											"name": "tag",
											"source": 0,
											"value": "363"
										},
										{
											"begin": 30272,
											"end": 30287,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30250,
											"end": 30255,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 30250,
											"end": 30255,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "364"
										},
										{
											"begin": 30250,
											"end": 30255,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30250,
											"end": 30255,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "365"
										},
										{
											"begin": 30250,
											"end": 30255,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 30250,
											"end": 30255,
											"name": "tag",
											"source": 0,
											"value": "364"
										},
										{
											"begin": 30250,
											"end": 30255,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30250,
											"end": 30255,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30250,
											"end": 30255,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 30214,
											"end": 30299,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "360"
										},
										{
											"begin": 30214,
											"end": 30299,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 30214,
											"end": 30299,
											"name": "tag",
											"source": 0,
											"value": "361"
										},
										{
											"begin": 30214,
											"end": 30299,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30214,
											"end": 30299,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 30160,
											"end": 30306,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 30126,
											"end": 30306,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 27894,
											"end": 28199,
											"name": "tag",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 27894,
											"end": 28199,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20336,
											"end": 20348,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "367"
										},
										{
											"begin": 20336,
											"end": 20346,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "234"
										},
										{
											"begin": 20336,
											"end": 20348,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 20336,
											"end": 20348,
											"name": "tag",
											"source": 0,
											"value": "367"
										},
										{
											"begin": 20336,
											"end": 20348,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20325,
											"end": 20348,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 20325,
											"end": 20348,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20325,
											"end": 20332,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "368"
										},
										{
											"begin": 20325,
											"end": 20330,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 20325,
											"end": 20332,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 20325,
											"end": 20332,
											"name": "tag",
											"source": 0,
											"value": "368"
										},
										{
											"begin": 20325,
											"end": 20332,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20325,
											"end": 20348,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 20325,
											"end": 20348,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20325,
											"end": 20348,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "369"
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "370"
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "238"
										},
										{
											"begin": 20317,
											"end": 20385,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "tag",
											"source": 0,
											"value": "370"
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "tag",
											"source": 0,
											"value": "369"
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27993,
											"end": 28004,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27989,
											"end": 28050,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 27989,
											"end": 28050,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "372"
										},
										{
											"begin": 27989,
											"end": 28050,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28021,
											"end": 28038,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "373"
										},
										{
											"begin": 28021,
											"end": 28036,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 28021,
											"end": 28038,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 28021,
											"end": 28038,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "373"
										},
										{
											"begin": 28021,
											"end": 28038,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27989,
											"end": 28050,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "372"
										},
										{
											"begin": 27989,
											"end": 28050,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28078,
											"end": 28141,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "374"
										},
										{
											"begin": 28129,
											"end": 28140,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 28078,
											"end": 28124,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "375"
										},
										{
											"begin": 28098,
											"end": 28106,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 28107,
											"end": 28111,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 28098,
											"end": 28112,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28098,
											"end": 28112,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 28098,
											"end": 28112,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28098,
											"end": 28112,
											"modifierDepth": 1,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 28098,
											"end": 28112,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "376"
										},
										{
											"begin": 28098,
											"end": 28112,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28098,
											"end": 28112,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "377"
										},
										{
											"begin": 28098,
											"end": 28112,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "170"
										},
										{
											"begin": 28098,
											"end": 28112,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 28098,
											"end": 28112,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "377"
										},
										{
											"begin": 28098,
											"end": 28112,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28098,
											"end": 28112,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "376"
										},
										{
											"begin": 28098,
											"end": 28112,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28098,
											"end": 28112,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28098,
											"end": 28112,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 28098,
											"end": 28112,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 28098,
											"end": 28112,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 28098,
											"end": 28112,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 28098,
											"end": 28112,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 28098,
											"end": 28112,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28098,
											"end": 28112,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 28098,
											"end": 28112,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 28098,
											"end": 28112,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 28098,
											"end": 28123,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 28098,
											"end": 28123,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 28098,
											"end": 28123,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 28078,
											"end": 28093,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 28078,
											"end": 28093,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 28078,
											"end": 28097,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "181"
										},
										{
											"begin": 28078,
											"end": 28097,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28078,
											"end": 28124,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 28078,
											"end": 28124,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28078,
											"end": 28124,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 28078,
											"end": 28124,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 28078,
											"end": 28124,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 28078,
											"end": 28124,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "375"
										},
										{
											"begin": 28078,
											"end": 28124,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28078,
											"end": 28128,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "184"
										},
										{
											"begin": 28078,
											"end": 28128,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28078,
											"end": 28141,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 28078,
											"end": 28141,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28078,
											"end": 28141,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 28078,
											"end": 28141,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 28078,
											"end": 28141,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 28078,
											"end": 28141,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "374"
										},
										{
											"begin": 28078,
											"end": 28141,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28060,
											"end": 28075,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 28060,
											"end": 28141,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28060,
											"end": 28141,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28060,
											"end": 28141,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 28060,
											"end": 28141,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 28180,
											"end": 28191,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28152,
											"end": 28160,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 28161,
											"end": 28165,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 28152,
											"end": 28166,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28152,
											"end": 28166,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 28152,
											"end": 28166,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28152,
											"end": 28166,
											"modifierDepth": 1,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 28152,
											"end": 28166,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "379"
										},
										{
											"begin": 28152,
											"end": 28166,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28152,
											"end": 28166,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "380"
										},
										{
											"begin": 28152,
											"end": 28166,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "170"
										},
										{
											"begin": 28152,
											"end": 28166,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 28152,
											"end": 28166,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "380"
										},
										{
											"begin": 28152,
											"end": 28166,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28152,
											"end": 28166,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "379"
										},
										{
											"begin": 28152,
											"end": 28166,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28152,
											"end": 28166,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28152,
											"end": 28166,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 28152,
											"end": 28166,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 28152,
											"end": 28166,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 28152,
											"end": 28166,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 28152,
											"end": 28166,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 28152,
											"end": 28166,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28152,
											"end": 28166,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 28152,
											"end": 28166,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 28152,
											"end": 28166,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 28152,
											"end": 28177,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 28152,
											"end": 28177,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 28152,
											"end": 28191,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28152,
											"end": 28191,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28152,
											"end": 28191,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 28152,
											"end": 28191,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 27894,
											"end": 28199,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 27894,
											"end": 28199,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 27894,
											"end": 28199,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 27894,
											"end": 28199,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 20756,
											"end": 20859,
											"name": "tag",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 20756,
											"end": 20859,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20336,
											"end": 20348,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "383"
										},
										{
											"begin": 20336,
											"end": 20346,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "234"
										},
										{
											"begin": 20336,
											"end": 20348,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 20336,
											"end": 20348,
											"name": "tag",
											"source": 0,
											"value": "383"
										},
										{
											"begin": 20336,
											"end": 20348,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20325,
											"end": 20348,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 20325,
											"end": 20348,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20325,
											"end": 20332,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "384"
										},
										{
											"begin": 20325,
											"end": 20330,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 20325,
											"end": 20332,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 20325,
											"end": 20332,
											"name": "tag",
											"source": 0,
											"value": "384"
										},
										{
											"begin": 20325,
											"end": 20332,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20325,
											"end": 20348,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 20325,
											"end": 20348,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20325,
											"end": 20348,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "385"
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "386"
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "238"
										},
										{
											"begin": 20317,
											"end": 20385,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "tag",
											"source": 0,
											"value": "386"
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "tag",
											"source": 0,
											"value": "385"
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20821,
											"end": 20851,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "388"
										},
										{
											"begin": 20848,
											"end": 20849,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 20821,
											"end": 20839,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "389"
										},
										{
											"begin": 20821,
											"end": 20851,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 20821,
											"end": 20851,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "388"
										},
										{
											"begin": 20821,
											"end": 20851,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20756,
											"end": 20859,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 23930,
											"end": 23959,
											"name": "tag",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 23930,
											"end": 23959,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23930,
											"end": 23959,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 23930,
											"end": 23959,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 23930,
											"end": 23959,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23930,
											"end": 23959,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 23930,
											"end": 23959,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23930,
											"end": 23959,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 23930,
											"end": 23959,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 23930,
											"end": 23959,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23930,
											"end": 23959,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 23930,
											"end": 23959,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 23930,
											"end": 23959,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 23930,
											"end": 23959,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23930,
											"end": 23959,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 23790,
											"end": 23825,
											"name": "tag",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 23790,
											"end": 23825,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23790,
											"end": 23825,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 23790,
											"end": 23825,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 23790,
											"end": 23825,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23790,
											"end": 23825,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 25226,
											"end": 25344,
											"name": "tag",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 25226,
											"end": 25344,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25288,
											"end": 25295,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 25315,
											"end": 25327,
											"name": "PUSH",
											"source": 0,
											"value": "B"
										},
										{
											"begin": 25315,
											"end": 25336,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 25328,
											"end": 25335,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 25315,
											"end": 25336,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 25315,
											"end": 25336,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 25315,
											"end": 25336,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 25315,
											"end": 25336,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 25315,
											"end": 25336,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25315,
											"end": 25336,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 25315,
											"end": 25336,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 25315,
											"end": 25336,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 25315,
											"end": 25336,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25315,
											"end": 25336,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25315,
											"end": 25336,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 25315,
											"end": 25336,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 25315,
											"end": 25336,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 25315,
											"end": 25336,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 25315,
											"end": 25336,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 25315,
											"end": 25336,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 25308,
											"end": 25336,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25308,
											"end": 25336,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25226,
											"end": 25344,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 25226,
											"end": 25344,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25226,
											"end": 25344,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25226,
											"end": 25344,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 20105,
											"end": 20192,
											"name": "tag",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 20105,
											"end": 20192,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20151,
											"end": 20158,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 20178,
											"end": 20184,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20178,
											"end": 20184,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 20178,
											"end": 20184,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20178,
											"end": 20184,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 20178,
											"end": 20184,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20178,
											"end": 20184,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 20178,
											"end": 20184,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 20178,
											"end": 20184,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20178,
											"end": 20184,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 20178,
											"end": 20184,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 20178,
											"end": 20184,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20171,
											"end": 20184,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20171,
											"end": 20184,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20105,
											"end": 20192,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20105,
											"end": 20192,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 29067,
											"end": 29211,
											"name": "tag",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 29067,
											"end": 29211,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29139,
											"end": 29146,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 29167,
											"end": 29203,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "393"
										},
										{
											"begin": 29186,
											"end": 29202,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 29186,
											"end": 29202,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 29167,
											"end": 29181,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "394"
										},
										{
											"begin": 29175,
											"end": 29180,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 29167,
											"end": 29170,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 29167,
											"end": 29174,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "181"
										},
										{
											"begin": 29167,
											"end": 29174,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29167,
											"end": 29181,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 29167,
											"end": 29181,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29167,
											"end": 29181,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 29167,
											"end": 29181,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 29167,
											"end": 29181,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 29167,
											"end": 29181,
											"name": "tag",
											"source": 0,
											"value": "394"
										},
										{
											"begin": 29167,
											"end": 29181,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29167,
											"end": 29185,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "179"
										},
										{
											"begin": 29167,
											"end": 29185,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29167,
											"end": 29203,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 29167,
											"end": 29203,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29167,
											"end": 29203,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 29167,
											"end": 29203,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 29167,
											"end": 29203,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 29167,
											"end": 29203,
											"name": "tag",
											"source": 0,
											"value": "393"
										},
										{
											"begin": 29167,
											"end": 29203,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29160,
											"end": 29203,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29160,
											"end": 29203,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 29067,
											"end": 29211,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 29067,
											"end": 29211,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 29067,
											"end": 29211,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 29067,
											"end": 29211,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 29067,
											"end": 29211,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 24075,
											"end": 24139,
											"name": "tag",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 24075,
											"end": 24139,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24075,
											"end": 24139,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 24075,
											"end": 24139,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 24075,
											"end": 24139,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 24075,
											"end": 24139,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24075,
											"end": 24139,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 24075,
											"end": 24139,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 24075,
											"end": 24139,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 24075,
											"end": 24139,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 24075,
											"end": 24139,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 24075,
											"end": 24139,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 24075,
											"end": 24139,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 24075,
											"end": 24139,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24075,
											"end": 24139,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 24075,
											"end": 24139,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 24075,
											"end": 24139,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 24075,
											"end": 24139,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 24075,
											"end": 24139,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 24075,
											"end": 24139,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 24075,
											"end": 24139,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 24075,
											"end": 24139,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 24075,
											"end": 24139,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 24075,
											"end": 24139,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 24075,
											"end": 24139,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 24075,
											"end": 24139,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24075,
											"end": 24139,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 24075,
											"end": 24139,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 24075,
											"end": 24139,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 24075,
											"end": 24139,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24075,
											"end": 24139,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24075,
											"end": 24139,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 24075,
											"end": 24139,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 24075,
											"end": 24139,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 24075,
											"end": 24139,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24075,
											"end": 24139,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 24075,
											"end": 24139,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 24075,
											"end": 24139,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 23593,
											"end": 23610,
											"name": "tag",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 23593,
											"end": 23610,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23593,
											"end": 23610,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 23593,
											"end": 23610,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 23593,
											"end": 23610,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23593,
											"end": 23610,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 23593,
											"end": 23610,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23593,
											"end": 23610,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 23593,
											"end": 23610,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 23593,
											"end": 23610,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23593,
											"end": 23610,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 23593,
											"end": 23610,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 23593,
											"end": 23610,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 23593,
											"end": 23610,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23593,
											"end": 23610,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 34873,
											"end": 34968,
											"name": "tag",
											"source": 0,
											"value": "148"
										},
										{
											"begin": 34873,
											"end": 34968,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20336,
											"end": 20348,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "396"
										},
										{
											"begin": 20336,
											"end": 20346,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "234"
										},
										{
											"begin": 20336,
											"end": 20348,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 20336,
											"end": 20348,
											"name": "tag",
											"source": 0,
											"value": "396"
										},
										{
											"begin": 20336,
											"end": 20348,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20325,
											"end": 20348,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 20325,
											"end": 20348,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20325,
											"end": 20332,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "397"
										},
										{
											"begin": 20325,
											"end": 20330,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 20325,
											"end": 20332,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 20325,
											"end": 20332,
											"name": "tag",
											"source": 0,
											"value": "397"
										},
										{
											"begin": 20325,
											"end": 20332,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20325,
											"end": 20348,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 20325,
											"end": 20348,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20325,
											"end": 20348,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "398"
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "399"
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "238"
										},
										{
											"begin": 20317,
											"end": 20385,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "tag",
											"source": 0,
											"value": "399"
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "tag",
											"source": 0,
											"value": "398"
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34952,
											"end": 34960,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 34942,
											"end": 34949,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 34942,
											"end": 34949,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 34942,
											"end": 34960,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 34942,
											"end": 34960,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 34942,
											"end": 34960,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34942,
											"end": 34960,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 34942,
											"end": 34960,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34942,
											"end": 34960,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 34942,
											"end": 34960,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 34942,
											"end": 34960,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 34942,
											"end": 34960,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 34942,
											"end": 34960,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34942,
											"end": 34960,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 34942,
											"end": 34960,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 34942,
											"end": 34960,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 34942,
											"end": 34960,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 34942,
											"end": 34960,
											"modifierDepth": 1,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 34942,
											"end": 34960,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34942,
											"end": 34960,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 34942,
											"end": 34960,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 34873,
											"end": 34968,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 34873,
											"end": 34968,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 24360,
											"end": 24407,
											"name": "tag",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 24360,
											"end": 24407,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24360,
											"end": 24407,
											"name": "PUSH",
											"source": 0,
											"value": "B"
										},
										{
											"begin": 24360,
											"end": 24407,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 24360,
											"end": 24407,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 24360,
											"end": 24407,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24360,
											"end": 24407,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 24360,
											"end": 24407,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 24360,
											"end": 24407,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 24360,
											"end": 24407,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 24360,
											"end": 24407,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 24360,
											"end": 24407,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 24360,
											"end": 24407,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 24360,
											"end": 24407,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 24360,
											"end": 24407,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24360,
											"end": 24407,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 24360,
											"end": 24407,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 24360,
											"end": 24407,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24360,
											"end": 24407,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 23638,
											"end": 23660,
											"name": "tag",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 23638,
											"end": 23660,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23638,
											"end": 23660,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 23638,
											"end": 23660,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 23638,
											"end": 23660,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23638,
											"end": 23660,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 23638,
											"end": 23660,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23638,
											"end": 23660,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 23638,
											"end": 23660,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 23638,
											"end": 23660,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23638,
											"end": 23660,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 23638,
											"end": 23660,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 23638,
											"end": 23660,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 23638,
											"end": 23660,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23638,
											"end": 23660,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 31142,
											"end": 31938,
											"name": "tag",
											"source": 0,
											"value": "158"
										},
										{
											"begin": 31142,
											"end": 31938,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31227,
											"end": 31228,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 31219,
											"end": 31223,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 31219,
											"end": 31228,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 31210,
											"end": 31257,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "402"
										},
										{
											"begin": 31210,
											"end": 31257,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 31210,
											"end": 31257,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 31210,
											"end": 31257,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 31210,
											"end": 31257,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 31210,
											"end": 31257,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31210,
											"end": 31257,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 31210,
											"end": 31257,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 31210,
											"end": 31257,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 31210,
											"end": 31257,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "403"
										},
										{
											"begin": 31210,
											"end": 31257,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31210,
											"end": 31257,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "404"
										},
										{
											"begin": 31210,
											"end": 31257,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 31210,
											"end": 31257,
											"name": "tag",
											"source": 0,
											"value": "403"
										},
										{
											"begin": 31210,
											"end": 31257,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31210,
											"end": 31257,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 31210,
											"end": 31257,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 31210,
											"end": 31257,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 31210,
											"end": 31257,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 31210,
											"end": 31257,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 31210,
											"end": 31257,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31210,
											"end": 31257,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 31210,
											"end": 31257,
											"name": "tag",
											"source": 0,
											"value": "402"
										},
										{
											"begin": 31210,
											"end": 31257,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31270,
											"end": 31291,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 31294,
											"end": 31302,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 31303,
											"end": 31307,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 31294,
											"end": 31308,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31294,
											"end": 31308,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 31294,
											"end": 31308,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31294,
											"end": 31308,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 31294,
											"end": 31308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "405"
										},
										{
											"begin": 31294,
											"end": 31308,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 31294,
											"end": 31308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "406"
										},
										{
											"begin": 31294,
											"end": 31308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "170"
										},
										{
											"begin": 31294,
											"end": 31308,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 31294,
											"end": 31308,
											"name": "tag",
											"source": 0,
											"value": "406"
										},
										{
											"begin": 31294,
											"end": 31308,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31294,
											"end": 31308,
											"name": "tag",
											"source": 0,
											"value": "405"
										},
										{
											"begin": 31294,
											"end": 31308,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31294,
											"end": 31308,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31294,
											"end": 31308,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 31294,
											"end": 31308,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 31294,
											"end": 31308,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 31294,
											"end": 31308,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 31294,
											"end": 31308,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 31294,
											"end": 31308,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31294,
											"end": 31308,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 31294,
											"end": 31308,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 31294,
											"end": 31308,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 31270,
											"end": 31308,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31270,
											"end": 31308,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 31319,
											"end": 31340,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 31343,
											"end": 31351,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 31343,
											"end": 31357,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 31352,
											"end": 31356,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 31343,
											"end": 31357,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31343,
											"end": 31357,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 31343,
											"end": 31357,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 31343,
											"end": 31357,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 31343,
											"end": 31357,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31343,
											"end": 31357,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31343,
											"end": 31357,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 31343,
											"end": 31357,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 31343,
											"end": 31357,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 31343,
											"end": 31357,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 31343,
											"end": 31357,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 31343,
											"end": 31369,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 31358,
											"end": 31368,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 31343,
											"end": 31369,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 31343,
											"end": 31369,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 31343,
											"end": 31369,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 31343,
											"end": 31369,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 31343,
											"end": 31369,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31343,
											"end": 31369,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 31343,
											"end": 31369,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 31343,
											"end": 31369,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 31343,
											"end": 31369,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31343,
											"end": 31369,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31343,
											"end": 31369,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 31343,
											"end": 31369,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 31343,
											"end": 31369,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 31343,
											"end": 31369,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 31343,
											"end": 31369,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 31319,
											"end": 31369,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31319,
											"end": 31369,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 31380,
											"end": 31396,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "408"
										},
										{
											"begin": 31391,
											"end": 31395,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 31380,
											"end": 31390,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 31380,
											"end": 31396,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 31380,
											"end": 31396,
											"name": "tag",
											"source": 0,
											"value": "408"
										},
										{
											"begin": 31380,
											"end": 31396,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31425,
											"end": 31426,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 31411,
											"end": 31415,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31411,
											"end": 31422,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 31411,
											"end": 31422,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 31411,
											"end": 31422,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 31411,
											"end": 31426,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 31407,
											"end": 31670,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 31407,
											"end": 31670,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "409"
										},
										{
											"begin": 31407,
											"end": 31670,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 31443,
											"end": 31458,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 31461,
											"end": 31530,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "410"
										},
										{
											"begin": 31514,
											"end": 31518,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 31514,
											"end": 31529,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 31514,
											"end": 31529,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 31514,
											"end": 31529,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 31461,
											"end": 31509,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "411"
										},
										{
											"begin": 31504,
											"end": 31508,
											"name": "PUSH",
											"source": 0,
											"value": "E8D4A51000"
										},
										{
											"begin": 31461,
											"end": 31499,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "412"
										},
										{
											"begin": 31477,
											"end": 31481,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 31477,
											"end": 31498,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 31477,
											"end": 31498,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 31477,
											"end": 31498,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 31461,
											"end": 31465,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 31461,
											"end": 31472,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 31461,
											"end": 31472,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 31461,
											"end": 31472,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 31461,
											"end": 31476,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "179"
										},
										{
											"begin": 31461,
											"end": 31476,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31461,
											"end": 31499,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 31461,
											"end": 31499,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31461,
											"end": 31499,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 31461,
											"end": 31499,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 31461,
											"end": 31499,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 31461,
											"end": 31499,
											"name": "tag",
											"source": 0,
											"value": "412"
										},
										{
											"begin": 31461,
											"end": 31499,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31461,
											"end": 31503,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "180"
										},
										{
											"begin": 31461,
											"end": 31503,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31461,
											"end": 31509,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 31461,
											"end": 31509,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31461,
											"end": 31509,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 31461,
											"end": 31509,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 31461,
											"end": 31509,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 31461,
											"end": 31509,
											"name": "tag",
											"source": 0,
											"value": "411"
										},
										{
											"begin": 31461,
											"end": 31509,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31461,
											"end": 31513,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "181"
										},
										{
											"begin": 31461,
											"end": 31513,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31461,
											"end": 31530,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 31461,
											"end": 31530,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31461,
											"end": 31530,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 31461,
											"end": 31530,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 31461,
											"end": 31530,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 31461,
											"end": 31530,
											"name": "tag",
											"source": 0,
											"value": "410"
										},
										{
											"begin": 31461,
											"end": 31530,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31443,
											"end": 31530,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31443,
											"end": 31530,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 31558,
											"end": 31559,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 31548,
											"end": 31555,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31548,
											"end": 31559,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 31545,
											"end": 31659,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 31545,
											"end": 31659,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "413"
										},
										{
											"begin": 31545,
											"end": 31659,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 31606,
											"end": 31643,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "414"
										},
										{
											"begin": 31635,
											"end": 31642,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31606,
											"end": 31618,
											"name": "PUSH",
											"source": 0,
											"value": "B"
										},
										{
											"begin": 31606,
											"end": 31630,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 31619,
											"end": 31629,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 31606,
											"end": 31630,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 31606,
											"end": 31630,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 31606,
											"end": 31630,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 31606,
											"end": 31630,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 31606,
											"end": 31630,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31606,
											"end": 31630,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 31606,
											"end": 31630,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 31606,
											"end": 31630,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 31606,
											"end": 31630,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31606,
											"end": 31630,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31606,
											"end": 31630,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 31606,
											"end": 31630,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 31606,
											"end": 31630,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 31606,
											"end": 31630,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 31606,
											"end": 31630,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 31606,
											"end": 31630,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 31606,
											"end": 31634,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "184"
										},
										{
											"begin": 31606,
											"end": 31634,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31606,
											"end": 31643,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 31606,
											"end": 31643,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31606,
											"end": 31643,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 31606,
											"end": 31643,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 31606,
											"end": 31643,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 31606,
											"end": 31643,
											"name": "tag",
											"source": 0,
											"value": "414"
										},
										{
											"begin": 31606,
											"end": 31643,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31579,
											"end": 31591,
											"name": "PUSH",
											"source": 0,
											"value": "B"
										},
										{
											"begin": 31579,
											"end": 31603,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 31592,
											"end": 31602,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 31579,
											"end": 31603,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 31579,
											"end": 31603,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 31579,
											"end": 31603,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 31579,
											"end": 31603,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 31579,
											"end": 31603,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31579,
											"end": 31603,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 31579,
											"end": 31603,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 31579,
											"end": 31603,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 31579,
											"end": 31603,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31579,
											"end": 31603,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31579,
											"end": 31603,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 31579,
											"end": 31603,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 31579,
											"end": 31603,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 31579,
											"end": 31603,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 31579,
											"end": 31603,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 31579,
											"end": 31643,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31579,
											"end": 31643,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31579,
											"end": 31643,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 31579,
											"end": 31643,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 31545,
											"end": 31659,
											"name": "tag",
											"source": 0,
											"value": "413"
										},
										{
											"begin": 31545,
											"end": 31659,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31428,
											"end": 31670,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 31407,
											"end": 31670,
											"name": "tag",
											"source": 0,
											"value": "409"
										},
										{
											"begin": 31407,
											"end": 31670,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31680,
											"end": 31754,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "415"
										},
										{
											"begin": 31718,
											"end": 31728,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 31739,
											"end": 31743,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 31746,
											"end": 31753,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 31680,
											"end": 31684,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 31680,
											"end": 31692,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 31680,
											"end": 31692,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 31680,
											"end": 31692,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 31680,
											"end": 31692,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31680,
											"end": 31692,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 31680,
											"end": 31692,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31680,
											"end": 31692,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 31680,
											"end": 31692,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 31680,
											"end": 31692,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31680,
											"end": 31692,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 31680,
											"end": 31692,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 31680,
											"end": 31692,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 31680,
											"end": 31709,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 31680,
											"end": 31709,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 31680,
											"end": 31709,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "271"
										},
										{
											"begin": 31680,
											"end": 31709,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31680,
											"end": 31754,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 31680,
											"end": 31754,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 31680,
											"end": 31754,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 31680,
											"end": 31754,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31680,
											"end": 31754,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 31680,
											"end": 31754,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 31680,
											"end": 31754,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 31680,
											"end": 31754,
											"name": "tag",
											"source": 0,
											"value": "415"
										},
										{
											"begin": 31680,
											"end": 31754,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31779,
											"end": 31803,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "416"
										},
										{
											"begin": 31795,
											"end": 31802,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 31779,
											"end": 31783,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 31779,
											"end": 31790,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 31779,
											"end": 31790,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 31779,
											"end": 31790,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 31779,
											"end": 31794,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "184"
										},
										{
											"begin": 31779,
											"end": 31794,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31779,
											"end": 31803,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 31779,
											"end": 31803,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31779,
											"end": 31803,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 31779,
											"end": 31803,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 31779,
											"end": 31803,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 31779,
											"end": 31803,
											"name": "tag",
											"source": 0,
											"value": "416"
										},
										{
											"begin": 31779,
											"end": 31803,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31765,
											"end": 31769,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31765,
											"end": 31776,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 31765,
											"end": 31776,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 31765,
											"end": 31803,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31765,
											"end": 31803,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31765,
											"end": 31803,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 31765,
											"end": 31803,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 31832,
											"end": 31880,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "417"
										},
										{
											"begin": 31875,
											"end": 31879,
											"name": "PUSH",
											"source": 0,
											"value": "E8D4A51000"
										},
										{
											"begin": 31832,
											"end": 31870,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "418"
										},
										{
											"begin": 31848,
											"end": 31852,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 31848,
											"end": 31869,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 31848,
											"end": 31869,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 31848,
											"end": 31869,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 31832,
											"end": 31836,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 31832,
											"end": 31843,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 31832,
											"end": 31843,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 31832,
											"end": 31843,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 31832,
											"end": 31847,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "179"
										},
										{
											"begin": 31832,
											"end": 31847,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31832,
											"end": 31870,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 31832,
											"end": 31870,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31832,
											"end": 31870,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 31832,
											"end": 31870,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 31832,
											"end": 31870,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 31832,
											"end": 31870,
											"name": "tag",
											"source": 0,
											"value": "418"
										},
										{
											"begin": 31832,
											"end": 31870,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31832,
											"end": 31874,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "180"
										},
										{
											"begin": 31832,
											"end": 31874,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31832,
											"end": 31880,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 31832,
											"end": 31880,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31832,
											"end": 31880,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 31832,
											"end": 31880,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 31832,
											"end": 31880,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 31832,
											"end": 31880,
											"name": "tag",
											"source": 0,
											"value": "417"
										},
										{
											"begin": 31832,
											"end": 31880,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31814,
											"end": 31818,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31814,
											"end": 31829,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 31814,
											"end": 31829,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 31814,
											"end": 31880,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31814,
											"end": 31880,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31814,
											"end": 31880,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 31814,
											"end": 31880,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 31916,
											"end": 31920,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 31904,
											"end": 31914,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 31896,
											"end": 31930,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 31896,
											"end": 31930,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 31896,
											"end": 31930,
											"name": "PUSH",
											"source": 0,
											"value": "90890809C654F11D6E72A28FA60149770A0D11EC6C92319D6CEB2BB0A4EA1A15"
										},
										{
											"begin": 31922,
											"end": 31929,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 31896,
											"end": 31930,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 31896,
											"end": 31930,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 31896,
											"end": 31930,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "419"
										},
										{
											"begin": 31896,
											"end": 31930,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 31896,
											"end": 31930,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31896,
											"end": 31930,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 31896,
											"end": 31930,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 31896,
											"end": 31930,
											"name": "tag",
											"source": 0,
											"value": "419"
										},
										{
											"begin": 31896,
											"end": 31930,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31896,
											"end": 31930,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 31896,
											"end": 31930,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 31896,
											"end": 31930,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 31896,
											"end": 31930,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 31896,
											"end": 31930,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 31896,
											"end": 31930,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31896,
											"end": 31930,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 31197,
											"end": 31938,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 31197,
											"end": 31938,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 31142,
											"end": 31938,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 31142,
											"end": 31938,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 31142,
											"end": 31938,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 21014,
											"end": 21215,
											"name": "tag",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 21014,
											"end": 21215,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20336,
											"end": 20348,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "421"
										},
										{
											"begin": 20336,
											"end": 20346,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "234"
										},
										{
											"begin": 20336,
											"end": 20348,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 20336,
											"end": 20348,
											"name": "tag",
											"source": 0,
											"value": "421"
										},
										{
											"begin": 20336,
											"end": 20348,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20325,
											"end": 20348,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 20325,
											"end": 20348,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20325,
											"end": 20332,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "422"
										},
										{
											"begin": 20325,
											"end": 20330,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 20325,
											"end": 20332,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 20325,
											"end": 20332,
											"name": "tag",
											"source": 0,
											"value": "422"
										},
										{
											"begin": 20325,
											"end": 20332,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20325,
											"end": 20348,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 20325,
											"end": 20348,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20325,
											"end": 20348,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "423"
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "424"
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "238"
										},
										{
											"begin": 20317,
											"end": 20385,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "tag",
											"source": 0,
											"value": "424"
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "tag",
											"source": 0,
											"value": "423"
										},
										{
											"begin": 20317,
											"end": 20385,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21123,
											"end": 21124,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 21103,
											"end": 21125,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 21103,
											"end": 21125,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 21103,
											"end": 21111,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21103,
											"end": 21125,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 21103,
											"end": 21125,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 21103,
											"end": 21125,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 21095,
											"end": 21168,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "426"
										},
										{
											"begin": 21095,
											"end": 21168,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 21095,
											"end": 21168,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 21095,
											"end": 21168,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 21095,
											"end": 21168,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 21095,
											"end": 21168,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21095,
											"end": 21168,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 21095,
											"end": 21168,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 21095,
											"end": 21168,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 21095,
											"end": 21168,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "427"
										},
										{
											"begin": 21095,
											"end": 21168,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21095,
											"end": 21168,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "428"
										},
										{
											"begin": 21095,
											"end": 21168,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 21095,
											"end": 21168,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "427"
										},
										{
											"begin": 21095,
											"end": 21168,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21095,
											"end": 21168,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 21095,
											"end": 21168,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 21095,
											"end": 21168,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21095,
											"end": 21168,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 21095,
											"end": 21168,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 21095,
											"end": 21168,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21095,
											"end": 21168,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 21095,
											"end": 21168,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "426"
										},
										{
											"begin": 21095,
											"end": 21168,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21179,
											"end": 21207,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "429"
										},
										{
											"begin": 21198,
											"end": 21206,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21179,
											"end": 21197,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "389"
										},
										{
											"begin": 21179,
											"end": 21207,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 21179,
											"end": 21207,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "429"
										},
										{
											"begin": 21179,
											"end": 21207,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21014,
											"end": 21215,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21014,
											"end": 21215,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 29276,
											"end": 30043,
											"name": "tag",
											"source": 0,
											"value": "164"
										},
										{
											"begin": 29276,
											"end": 30043,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29350,
											"end": 29357,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 29369,
											"end": 29390,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29393,
											"end": 29401,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 29402,
											"end": 29406,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 29393,
											"end": 29407,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29393,
											"end": 29407,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 29393,
											"end": 29407,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29393,
											"end": 29407,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 29393,
											"end": 29407,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "431"
										},
										{
											"begin": 29393,
											"end": 29407,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 29393,
											"end": 29407,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "432"
										},
										{
											"begin": 29393,
											"end": 29407,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "170"
										},
										{
											"begin": 29393,
											"end": 29407,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 29393,
											"end": 29407,
											"name": "tag",
											"source": 0,
											"value": "432"
										},
										{
											"begin": 29393,
											"end": 29407,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29393,
											"end": 29407,
											"name": "tag",
											"source": 0,
											"value": "431"
										},
										{
											"begin": 29393,
											"end": 29407,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29393,
											"end": 29407,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29393,
											"end": 29407,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 29393,
											"end": 29407,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 29393,
											"end": 29407,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 29393,
											"end": 29407,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 29393,
											"end": 29407,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 29393,
											"end": 29407,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29393,
											"end": 29407,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 29393,
											"end": 29407,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 29393,
											"end": 29407,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 29369,
											"end": 29407,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29369,
											"end": 29407,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 29418,
											"end": 29439,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 29442,
											"end": 29450,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 29442,
											"end": 29456,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 29451,
											"end": 29455,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 29442,
											"end": 29456,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29442,
											"end": 29456,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 29442,
											"end": 29456,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 29442,
											"end": 29456,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 29442,
											"end": 29456,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29442,
											"end": 29456,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29442,
											"end": 29456,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 29442,
											"end": 29456,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 29442,
											"end": 29456,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 29442,
											"end": 29456,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 29442,
											"end": 29456,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 29442,
											"end": 29463,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 29457,
											"end": 29462,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 29442,
											"end": 29463,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 29442,
											"end": 29463,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 29442,
											"end": 29463,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 29442,
											"end": 29463,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 29442,
											"end": 29463,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29442,
											"end": 29463,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 29442,
											"end": 29463,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 29442,
											"end": 29463,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 29442,
											"end": 29463,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29442,
											"end": 29463,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29442,
											"end": 29463,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 29442,
											"end": 29463,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 29442,
											"end": 29463,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 29442,
											"end": 29463,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 29442,
											"end": 29463,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 29418,
											"end": 29463,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29418,
											"end": 29463,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 29474,
											"end": 29498,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 29501,
											"end": 29505,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 29501,
											"end": 29522,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 29501,
											"end": 29522,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 29501,
											"end": 29522,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 29474,
											"end": 29522,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29474,
											"end": 29522,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 29533,
											"end": 29549,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 29552,
											"end": 29556,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 29552,
											"end": 29564,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 29552,
											"end": 29564,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 29552,
											"end": 29564,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 29552,
											"end": 29564,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29552,
											"end": 29564,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 29552,
											"end": 29564,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29552,
											"end": 29564,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 29552,
											"end": 29564,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 29552,
											"end": 29564,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29552,
											"end": 29564,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 29552,
											"end": 29564,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 29552,
											"end": 29564,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 29552,
											"end": 29574,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 29552,
											"end": 29574,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 29552,
											"end": 29574,
											"name": "PUSH",
											"source": 0,
											"value": "70A08231"
										},
										{
											"begin": 29583,
											"end": 29587,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 29552,
											"end": 29589,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 29552,
											"end": 29589,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 29552,
											"end": 29589,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 29552,
											"end": 29589,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 29552,
											"end": 29589,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 29552,
											"end": 29589,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 29552,
											"end": 29589,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 29552,
											"end": 29589,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29552,
											"end": 29589,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 29552,
											"end": 29589,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 29552,
											"end": 29589,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 29552,
											"end": 29589,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "434"
										},
										{
											"begin": 29552,
											"end": 29589,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 29552,
											"end": 29589,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29552,
											"end": 29589,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 29552,
											"end": 29589,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 29552,
											"end": 29589,
											"name": "tag",
											"source": 0,
											"value": "434"
										},
										{
											"begin": 29552,
											"end": 29589,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29552,
											"end": 29589,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 29552,
											"end": 29589,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 29552,
											"end": 29589,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 29552,
											"end": 29589,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29552,
											"end": 29589,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 29552,
											"end": 29589,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 29552,
											"end": 29589,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29552,
											"end": 29589,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 29552,
											"end": 29589,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 29552,
											"end": 29589,
											"name": "STATICCALL",
											"source": 0
										},
										{
											"begin": 29552,
											"end": 29589,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 29552,
											"end": 29589,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29552,
											"end": 29589,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 29552,
											"end": 29589,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "436"
										},
										{
											"begin": 29552,
											"end": 29589,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 29552,
											"end": 29589,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 29552,
											"end": 29589,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 29552,
											"end": 29589,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29552,
											"end": 29589,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 29552,
											"end": 29589,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 29552,
											"end": 29589,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 29552,
											"end": 29589,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 29552,
											"end": 29589,
											"name": "tag",
											"source": 0,
											"value": "436"
										},
										{
											"begin": 29552,
											"end": 29589,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29552,
											"end": 29589,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 29552,
											"end": 29589,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 29552,
											"end": 29589,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 29552,
											"end": 29589,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 29552,
											"end": 29589,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 29552,
											"end": 29589,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 29552,
											"end": 29589,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 29552,
											"end": 29589,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 29552,
											"end": 29589,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 29552,
											"end": 29589,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 29552,
											"end": 29589,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 29552,
											"end": 29589,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 29552,
											"end": 29589,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 29552,
											"end": 29589,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 29552,
											"end": 29589,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 29552,
											"end": 29589,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29552,
											"end": 29589,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 29552,
											"end": 29589,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 29552,
											"end": 29589,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 29552,
											"end": 29589,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29552,
											"end": 29589,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 29552,
											"end": 29589,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29552,
											"end": 29589,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "437"
										},
										{
											"begin": 29552,
											"end": 29589,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 29552,
											"end": 29589,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29552,
											"end": 29589,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "202"
										},
										{
											"begin": 29552,
											"end": 29589,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 29552,
											"end": 29589,
											"name": "tag",
											"source": 0,
											"value": "437"
										},
										{
											"begin": 29552,
											"end": 29589,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29533,
											"end": 29589,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29533,
											"end": 29589,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 29619,
											"end": 29623,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 29619,
											"end": 29639,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 29619,
											"end": 29639,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 29619,
											"end": 29639,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 29604,
											"end": 29616,
											"name": "NUMBER",
											"source": 0
										},
										{
											"begin": 29604,
											"end": 29639,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 29604,
											"end": 29656,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29604,
											"end": 29656,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 29604,
											"end": 29656,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "438"
										},
										{
											"begin": 29604,
											"end": 29656,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 29604,
											"end": 29656,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 29655,
											"end": 29656,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 29643,
											"end": 29651,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29643,
											"end": 29656,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 29643,
											"end": 29656,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 29604,
											"end": 29656,
											"name": "tag",
											"source": 0,
											"value": "438"
										},
										{
											"begin": 29604,
											"end": 29656,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29600,
											"end": 29954,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 29600,
											"end": 29954,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "439"
										},
										{
											"begin": 29600,
											"end": 29954,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 29673,
											"end": 29691,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 29694,
											"end": 29743,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "440"
										},
										{
											"begin": 29708,
											"end": 29712,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 29708,
											"end": 29728,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 29708,
											"end": 29728,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 29708,
											"end": 29728,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 29730,
											"end": 29742,
											"name": "NUMBER",
											"source": 0
										},
										{
											"begin": 29694,
											"end": 29707,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 29694,
											"end": 29743,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 29694,
											"end": 29743,
											"name": "tag",
											"source": 0,
											"value": "440"
										},
										{
											"begin": 29694,
											"end": 29743,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29673,
											"end": 29743,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29673,
											"end": 29743,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 29758,
											"end": 29777,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 29780,
											"end": 29851,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "441"
										},
										{
											"begin": 29835,
											"end": 29850,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 29835,
											"end": 29850,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 29780,
											"end": 29830,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "442"
										},
										{
											"begin": 29814,
											"end": 29818,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 29814,
											"end": 29829,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 29814,
											"end": 29829,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 29814,
											"end": 29829,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 29780,
											"end": 29809,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "443"
										},
										{
											"begin": 29795,
											"end": 29808,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 29795,
											"end": 29808,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 29780,
											"end": 29790,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 29780,
											"end": 29794,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "179"
										},
										{
											"begin": 29780,
											"end": 29794,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29780,
											"end": 29809,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 29780,
											"end": 29809,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29780,
											"end": 29809,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 29780,
											"end": 29809,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 29780,
											"end": 29809,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 29780,
											"end": 29809,
											"name": "tag",
											"source": 0,
											"value": "443"
										},
										{
											"begin": 29780,
											"end": 29809,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29780,
											"end": 29813,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "179"
										},
										{
											"begin": 29780,
											"end": 29813,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29780,
											"end": 29830,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 29780,
											"end": 29830,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29780,
											"end": 29830,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 29780,
											"end": 29830,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 29780,
											"end": 29830,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 29780,
											"end": 29830,
											"name": "tag",
											"source": 0,
											"value": "442"
										},
										{
											"begin": 29780,
											"end": 29830,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29780,
											"end": 29834,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "180"
										},
										{
											"begin": 29780,
											"end": 29834,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29780,
											"end": 29851,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 29780,
											"end": 29851,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29780,
											"end": 29851,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 29780,
											"end": 29851,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 29780,
											"end": 29851,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 29780,
											"end": 29851,
											"name": "tag",
											"source": 0,
											"value": "441"
										},
										{
											"begin": 29780,
											"end": 29851,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29758,
											"end": 29851,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29758,
											"end": 29851,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 29885,
											"end": 29942,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "444"
										},
										{
											"begin": 29906,
											"end": 29941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "445"
										},
										{
											"begin": 29932,
											"end": 29940,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 29906,
											"end": 29927,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "446"
										},
										{
											"begin": 29922,
											"end": 29926,
											"name": "PUSH",
											"source": 0,
											"value": "E8D4A51000"
										},
										{
											"begin": 29906,
											"end": 29917,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 29906,
											"end": 29921,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "179"
										},
										{
											"begin": 29906,
											"end": 29921,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29906,
											"end": 29927,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 29906,
											"end": 29927,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29906,
											"end": 29927,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 29906,
											"end": 29927,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 29906,
											"end": 29927,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 29906,
											"end": 29927,
											"name": "tag",
											"source": 0,
											"value": "446"
										},
										{
											"begin": 29906,
											"end": 29927,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29906,
											"end": 29931,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "180"
										},
										{
											"begin": 29906,
											"end": 29931,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29906,
											"end": 29941,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 29906,
											"end": 29941,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29906,
											"end": 29941,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 29906,
											"end": 29941,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 29906,
											"end": 29941,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 29906,
											"end": 29941,
											"name": "tag",
											"source": 0,
											"value": "445"
										},
										{
											"begin": 29906,
											"end": 29941,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29885,
											"end": 29901,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 29885,
											"end": 29905,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "184"
										},
										{
											"begin": 29885,
											"end": 29905,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29885,
											"end": 29942,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 29885,
											"end": 29942,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29885,
											"end": 29942,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 29885,
											"end": 29942,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 29885,
											"end": 29942,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 29885,
											"end": 29942,
											"name": "tag",
											"source": 0,
											"value": "444"
										},
										{
											"begin": 29885,
											"end": 29942,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29866,
											"end": 29942,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 29866,
											"end": 29942,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 29658,
											"end": 29954,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 29658,
											"end": 29954,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 29600,
											"end": 29954,
											"name": "tag",
											"source": 0,
											"value": "439"
										},
										{
											"begin": 29600,
											"end": 29954,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29971,
											"end": 30035,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "447"
										},
										{
											"begin": 30019,
											"end": 30023,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 30019,
											"end": 30034,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 30019,
											"end": 30034,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 30019,
											"end": 30034,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 29971,
											"end": 30014,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "448"
										},
										{
											"begin": 30009,
											"end": 30013,
											"name": "PUSH",
											"source": 0,
											"value": "E8D4A51000"
										},
										{
											"begin": 29971,
											"end": 30004,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "449"
										},
										{
											"begin": 29987,
											"end": 30003,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 29971,
											"end": 29975,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 29971,
											"end": 29982,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 29971,
											"end": 29982,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 29971,
											"end": 29982,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 29971,
											"end": 29986,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "179"
										},
										{
											"begin": 29971,
											"end": 29986,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29971,
											"end": 30004,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 29971,
											"end": 30004,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29971,
											"end": 30004,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 29971,
											"end": 30004,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 29971,
											"end": 30004,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 29971,
											"end": 30004,
											"name": "tag",
											"source": 0,
											"value": "449"
										},
										{
											"begin": 29971,
											"end": 30004,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29971,
											"end": 30008,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "180"
										},
										{
											"begin": 29971,
											"end": 30008,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29971,
											"end": 30014,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 29971,
											"end": 30014,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29971,
											"end": 30014,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 29971,
											"end": 30014,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 29971,
											"end": 30014,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 29971,
											"end": 30014,
											"name": "tag",
											"source": 0,
											"value": "448"
										},
										{
											"begin": 29971,
											"end": 30014,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29971,
											"end": 30018,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "181"
										},
										{
											"begin": 29971,
											"end": 30018,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29971,
											"end": 30035,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 29971,
											"end": 30035,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29971,
											"end": 30035,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 29971,
											"end": 30035,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 29971,
											"end": 30035,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 29971,
											"end": 30035,
											"name": "tag",
											"source": 0,
											"value": "447"
										},
										{
											"begin": 29971,
											"end": 30035,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29964,
											"end": 30035,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 29964,
											"end": 30035,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 29964,
											"end": 30035,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 29964,
											"end": 30035,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 29964,
											"end": 30035,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 29964,
											"end": 30035,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 29276,
											"end": 30043,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 29276,
											"end": 30043,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 29276,
											"end": 30043,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 29276,
											"end": 30043,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 29276,
											"end": 30043,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1757,
											"end": 2228,
											"name": "tag",
											"source": 0,
											"value": "179"
										},
										{
											"begin": 1757,
											"end": 2228,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1815,
											"end": 1822,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2065,
											"end": 2066,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2060,
											"end": 2061,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2060,
											"end": 2066,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2056,
											"end": 2103,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "451"
										},
										{
											"begin": 2056,
											"end": 2103,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2090,
											"end": 2091,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2083,
											"end": 2091,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2083,
											"end": 2091,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2083,
											"end": 2091,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "450"
										},
										{
											"begin": 2083,
											"end": 2091,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2056,
											"end": 2103,
											"name": "tag",
											"source": 0,
											"value": "451"
										},
										{
											"begin": 2056,
											"end": 2103,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2115,
											"end": 2124,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2131,
											"end": 2132,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2127,
											"end": 2128,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 2127,
											"end": 2132,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "452"
										},
										{
											"begin": 2127,
											"end": 2132,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2127,
											"end": 2132,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2127,
											"end": 2132,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "453"
										},
										{
											"begin": 2127,
											"end": 2132,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2127,
											"end": 2132,
											"name": "tag",
											"source": 0,
											"value": "452"
										},
										{
											"begin": 2127,
											"end": 2132,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2115,
											"end": 2132,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2115,
											"end": 2132,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2160,
											"end": 2161,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2155,
											"end": 2156,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 2151,
											"end": 2152,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2151,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "454"
										},
										{
											"begin": 2151,
											"end": 2156,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2151,
											"end": 2156,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2151,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "455"
										},
										{
											"begin": 2151,
											"end": 2156,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2151,
											"end": 2156,
											"name": "tag",
											"source": 0,
											"value": "454"
										},
										{
											"begin": 2151,
											"end": 2156,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2151,
											"end": 2161,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2143,
											"end": 2199,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "456"
										},
										{
											"begin": 2143,
											"end": 2199,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2143,
											"end": 2199,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2143,
											"end": 2199,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2143,
											"end": 2199,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2143,
											"end": 2199,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2143,
											"end": 2199,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2143,
											"end": 2199,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2143,
											"end": 2199,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2143,
											"end": 2199,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "457"
										},
										{
											"begin": 2143,
											"end": 2199,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2143,
											"end": 2199,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "458"
										},
										{
											"begin": 2143,
											"end": 2199,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2143,
											"end": 2199,
											"name": "tag",
											"source": 0,
											"value": "457"
										},
										{
											"begin": 2143,
											"end": 2199,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2143,
											"end": 2199,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2143,
											"end": 2199,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2143,
											"end": 2199,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2143,
											"end": 2199,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2143,
											"end": 2199,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2143,
											"end": 2199,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2143,
											"end": 2199,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2143,
											"end": 2199,
											"name": "tag",
											"source": 0,
											"value": "456"
										},
										{
											"begin": 2143,
											"end": 2199,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2219,
											"end": 2220,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2212,
											"end": 2220,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2212,
											"end": 2220,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2212,
											"end": 2220,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1757,
											"end": 2228,
											"name": "tag",
											"source": 0,
											"value": "450"
										},
										{
											"begin": 1757,
											"end": 2228,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1757,
											"end": 2228,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 1757,
											"end": 2228,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1757,
											"end": 2228,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1757,
											"end": 2228,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1757,
											"end": 2228,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2696,
											"end": 2828,
											"name": "tag",
											"source": 0,
											"value": "180"
										},
										{
											"begin": 2696,
											"end": 2828,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2754,
											"end": 2761,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2781,
											"end": 2820,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "460"
										},
										{
											"begin": 2785,
											"end": 2786,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2788,
											"end": 2789,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2781,
											"end": 2820,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2781,
											"end": 2820,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2781,
											"end": 2820,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2781,
											"end": 2820,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2781,
											"end": 2820,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2781,
											"end": 2820,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2781,
											"end": 2820,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2781,
											"end": 2820,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2781,
											"end": 2820,
											"name": "PUSH",
											"source": 0,
											"value": "1A"
										},
										{
											"begin": 2781,
											"end": 2820,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2781,
											"end": 2820,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2781,
											"end": 2820,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2781,
											"end": 2820,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2781,
											"end": 2820,
											"name": "PUSH",
											"source": 0,
											"value": "536166654D6174683A206469766973696F6E206279207A65726F000000000000"
										},
										{
											"begin": 2781,
											"end": 2820,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2781,
											"end": 2820,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2781,
											"end": 2820,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2781,
											"end": 2784,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "461"
										},
										{
											"begin": 2781,
											"end": 2820,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2781,
											"end": 2820,
											"name": "tag",
											"source": 0,
											"value": "460"
										},
										{
											"begin": 2781,
											"end": 2820,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2774,
											"end": 2820,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2774,
											"end": 2820,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2696,
											"end": 2828,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2696,
											"end": 2828,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2696,
											"end": 2828,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2696,
											"end": 2828,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2696,
											"end": 2828,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 841,
											"end": 977,
											"name": "tag",
											"source": 0,
											"value": "181"
										},
										{
											"begin": 841,
											"end": 977,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 899,
											"end": 906,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 926,
											"end": 969,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "463"
										},
										{
											"begin": 930,
											"end": 931,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 933,
											"end": 934,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 926,
											"end": 969,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 926,
											"end": 969,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 926,
											"end": 969,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 926,
											"end": 969,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 926,
											"end": 969,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 926,
											"end": 969,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 926,
											"end": 969,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 926,
											"end": 969,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 926,
											"end": 969,
											"name": "PUSH",
											"source": 0,
											"value": "1E"
										},
										{
											"begin": 926,
											"end": 969,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 926,
											"end": 969,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 926,
											"end": 969,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 926,
											"end": 969,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 926,
											"end": 969,
											"name": "PUSH",
											"source": 0,
											"value": "536166654D6174683A207375627472616374696F6E206F766572666C6F770000"
										},
										{
											"begin": 926,
											"end": 969,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 926,
											"end": 969,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 926,
											"end": 969,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 926,
											"end": 929,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "464"
										},
										{
											"begin": 926,
											"end": 969,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 926,
											"end": 969,
											"name": "tag",
											"source": 0,
											"value": "463"
										},
										{
											"begin": 926,
											"end": 969,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 919,
											"end": 969,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 919,
											"end": 969,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 841,
											"end": 977,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 841,
											"end": 977,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 841,
											"end": 977,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 841,
											"end": 977,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 841,
											"end": 977,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 385,
											"end": 566,
											"name": "tag",
											"source": 0,
											"value": "184"
										},
										{
											"begin": 385,
											"end": 566,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 443,
											"end": 450,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 463,
											"end": 472,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 479,
											"end": 480,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 475,
											"end": 476,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 475,
											"end": 480,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "466"
										},
										{
											"begin": 475,
											"end": 480,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 475,
											"end": 480,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 475,
											"end": 480,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "467"
										},
										{
											"begin": 475,
											"end": 480,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 475,
											"end": 480,
											"name": "tag",
											"source": 0,
											"value": "466"
										},
										{
											"begin": 475,
											"end": 480,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 463,
											"end": 480,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 463,
											"end": 480,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 504,
											"end": 505,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 499,
											"end": 500,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 499,
											"end": 505,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 499,
											"end": 505,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 491,
											"end": 537,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "468"
										},
										{
											"begin": 491,
											"end": 537,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 491,
											"end": 537,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 491,
											"end": 537,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 491,
											"end": 537,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 491,
											"end": 537,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 491,
											"end": 537,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 491,
											"end": 537,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 491,
											"end": 537,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 491,
											"end": 537,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "469"
										},
										{
											"begin": 491,
											"end": 537,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 491,
											"end": 537,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "470"
										},
										{
											"begin": 491,
											"end": 537,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 491,
											"end": 537,
											"name": "tag",
											"source": 0,
											"value": "469"
										},
										{
											"begin": 491,
											"end": 537,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 491,
											"end": 537,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 491,
											"end": 537,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 491,
											"end": 537,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 491,
											"end": 537,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 491,
											"end": 537,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 491,
											"end": 537,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 491,
											"end": 537,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 491,
											"end": 537,
											"name": "tag",
											"source": 0,
											"value": "468"
										},
										{
											"begin": 491,
											"end": 537,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 557,
											"end": 558,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 550,
											"end": 558,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 550,
											"end": 558,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 550,
											"end": 558,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 385,
											"end": 566,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 385,
											"end": 566,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 385,
											"end": 566,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 385,
											"end": 566,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 385,
											"end": 566,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 16150,
											"end": 16361,
											"name": "tag",
											"source": 0,
											"value": "188"
										},
										{
											"begin": 16150,
											"end": 16361,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16267,
											"end": 16353,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "472"
										},
										{
											"begin": 16287,
											"end": 16292,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 16317,
											"end": 16340,
											"name": "PUSH",
											"source": 0,
											"value": "A9059CBB"
										},
										{
											"begin": 16317,
											"end": 16340,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 16317,
											"end": 16340,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 16342,
											"end": 16344,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 16346,
											"end": 16351,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 16294,
											"end": 16352,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16294,
											"end": 16352,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 16294,
											"end": 16352,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 16294,
											"end": 16352,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16294,
											"end": 16352,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "473"
										},
										{
											"begin": 16294,
											"end": 16352,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 16294,
											"end": 16352,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 16294,
											"end": 16352,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16294,
											"end": 16352,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "474"
										},
										{
											"begin": 16294,
											"end": 16352,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 16294,
											"end": 16352,
											"name": "tag",
											"source": 0,
											"value": "473"
										},
										{
											"begin": 16294,
											"end": 16352,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16294,
											"end": 16352,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16294,
											"end": 16352,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 16294,
											"end": 16352,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 16294,
											"end": 16352,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16294,
											"end": 16352,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 16294,
											"end": 16352,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 16294,
											"end": 16352,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 16294,
											"end": 16352,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16294,
											"end": 16352,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16294,
											"end": 16352,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16294,
											"end": 16352,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16294,
											"end": 16352,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16294,
											"end": 16352,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16294,
											"end": 16352,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16294,
											"end": 16352,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 16294,
											"end": 16352,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 16294,
											"end": 16352,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 16294,
											"end": 16352,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 16294,
											"end": 16352,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16294,
											"end": 16352,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16294,
											"end": 16352,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 16294,
											"end": 16352,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16294,
											"end": 16352,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 16294,
											"end": 16352,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16294,
											"end": 16352,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 16294,
											"end": 16352,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 16294,
											"end": 16352,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 16294,
											"end": 16352,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 16294,
											"end": 16352,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16294,
											"end": 16352,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16294,
											"end": 16352,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16294,
											"end": 16352,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16294,
											"end": 16352,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16267,
											"end": 16286,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "475"
										},
										{
											"begin": 16267,
											"end": 16353,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 16267,
											"end": 16353,
											"name": "tag",
											"source": 0,
											"value": "472"
										},
										{
											"begin": 16267,
											"end": 16353,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16150,
											"end": 16361,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16150,
											"end": 16361,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16150,
											"end": 16361,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16150,
											"end": 16361,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 19479,
											"end": 19577,
											"name": "tag",
											"source": 0,
											"value": "234"
										},
										{
											"begin": 19479,
											"end": 19577,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19532,
											"end": 19539,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 19559,
											"end": 19569,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 19552,
											"end": 19569,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19552,
											"end": 19569,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 19479,
											"end": 19577,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19479,
											"end": 19577,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 16369,
											"end": 16617,
											"name": "tag",
											"source": 0,
											"value": "271"
										},
										{
											"begin": 16369,
											"end": 16617,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16513,
											"end": 16609,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "478"
										},
										{
											"begin": 16533,
											"end": 16538,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 16563,
											"end": 16590,
											"name": "PUSH",
											"source": 0,
											"value": "23B872DD"
										},
										{
											"begin": 16563,
											"end": 16590,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 16563,
											"end": 16590,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 16592,
											"end": 16596,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 16598,
											"end": 16600,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 16602,
											"end": 16607,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 16540,
											"end": 16608,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16540,
											"end": 16608,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 16540,
											"end": 16608,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 16540,
											"end": 16608,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16540,
											"end": 16608,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "479"
										},
										{
											"begin": 16540,
											"end": 16608,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 16540,
											"end": 16608,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 16540,
											"end": 16608,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 16540,
											"end": 16608,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16540,
											"end": 16608,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "480"
										},
										{
											"begin": 16540,
											"end": 16608,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 16540,
											"end": 16608,
											"name": "tag",
											"source": 0,
											"value": "479"
										},
										{
											"begin": 16540,
											"end": 16608,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16540,
											"end": 16608,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16540,
											"end": 16608,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 16540,
											"end": 16608,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 16540,
											"end": 16608,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16540,
											"end": 16608,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 16540,
											"end": 16608,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 16540,
											"end": 16608,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 16540,
											"end": 16608,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16540,
											"end": 16608,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16540,
											"end": 16608,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16540,
											"end": 16608,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16540,
											"end": 16608,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16540,
											"end": 16608,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16540,
											"end": 16608,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16540,
											"end": 16608,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 16540,
											"end": 16608,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 16540,
											"end": 16608,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 16540,
											"end": 16608,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 16540,
											"end": 16608,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16540,
											"end": 16608,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16540,
											"end": 16608,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 16540,
											"end": 16608,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16540,
											"end": 16608,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 16540,
											"end": 16608,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16540,
											"end": 16608,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 16540,
											"end": 16608,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 16540,
											"end": 16608,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 16540,
											"end": 16608,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 16540,
											"end": 16608,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16540,
											"end": 16608,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16540,
											"end": 16608,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16540,
											"end": 16608,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16540,
											"end": 16608,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16513,
											"end": 16532,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "475"
										},
										{
											"begin": 16513,
											"end": 16609,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 16513,
											"end": 16609,
											"name": "tag",
											"source": 0,
											"value": "478"
										},
										{
											"begin": 16513,
											"end": 16609,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16369,
											"end": 16617,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16369,
											"end": 16617,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16369,
											"end": 16617,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16369,
											"end": 16617,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16369,
											"end": 16617,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 16886,
											"end": 17502,
											"name": "tag",
											"source": 0,
											"value": "308"
										},
										{
											"begin": 16886,
											"end": 17502,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17259,
											"end": 17260,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17250,
											"end": 17255,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17250,
											"end": 17260,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 17249,
											"end": 17311,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17249,
											"end": 17311,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "482"
										},
										{
											"begin": 17249,
											"end": 17311,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 17249,
											"end": 17311,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17309,
											"end": 17310,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17266,
											"end": 17271,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 17266,
											"end": 17281,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17266,
											"end": 17281,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 17266,
											"end": 17281,
											"name": "PUSH",
											"source": 0,
											"value": "DD62ED3E"
										},
										{
											"begin": 17290,
											"end": 17294,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 17297,
											"end": 17304,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 17266,
											"end": 17305,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 17266,
											"end": 17305,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 17266,
											"end": 17305,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 17266,
											"end": 17305,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 17266,
											"end": 17305,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 17266,
											"end": 17305,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 17266,
											"end": 17305,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 17266,
											"end": 17305,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17266,
											"end": 17305,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17266,
											"end": 17305,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 17266,
											"end": 17305,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17266,
											"end": 17305,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "483"
										},
										{
											"begin": 17266,
											"end": 17305,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 17266,
											"end": 17305,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 17266,
											"end": 17305,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17266,
											"end": 17305,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "484"
										},
										{
											"begin": 17266,
											"end": 17305,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 17266,
											"end": 17305,
											"name": "tag",
											"source": 0,
											"value": "483"
										},
										{
											"begin": 17266,
											"end": 17305,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17266,
											"end": 17305,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 17266,
											"end": 17305,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 17266,
											"end": 17305,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 17266,
											"end": 17305,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17266,
											"end": 17305,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 17266,
											"end": 17305,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 17266,
											"end": 17305,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17266,
											"end": 17305,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 17266,
											"end": 17305,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 17266,
											"end": 17305,
											"name": "STATICCALL",
											"source": 0
										},
										{
											"begin": 17266,
											"end": 17305,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 17266,
											"end": 17305,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17266,
											"end": 17305,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 17266,
											"end": 17305,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "486"
										},
										{
											"begin": 17266,
											"end": 17305,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 17266,
											"end": 17305,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 17266,
											"end": 17305,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17266,
											"end": 17305,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17266,
											"end": 17305,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 17266,
											"end": 17305,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 17266,
											"end": 17305,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17266,
											"end": 17305,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 17266,
											"end": 17305,
											"name": "tag",
											"source": 0,
											"value": "486"
										},
										{
											"begin": 17266,
											"end": 17305,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17266,
											"end": 17305,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17266,
											"end": 17305,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17266,
											"end": 17305,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17266,
											"end": 17305,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17266,
											"end": 17305,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 17266,
											"end": 17305,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 17266,
											"end": 17305,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 17266,
											"end": 17305,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 17266,
											"end": 17305,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 17266,
											"end": 17305,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 17266,
											"end": 17305,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 17266,
											"end": 17305,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17266,
											"end": 17305,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 17266,
											"end": 17305,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 17266,
											"end": 17305,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17266,
											"end": 17305,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17266,
											"end": 17305,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 17266,
											"end": 17305,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17266,
											"end": 17305,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17266,
											"end": 17305,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17266,
											"end": 17305,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17266,
											"end": 17305,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17266,
											"end": 17305,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "487"
										},
										{
											"begin": 17266,
											"end": 17305,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 17266,
											"end": 17305,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17266,
											"end": 17305,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "202"
										},
										{
											"begin": 17266,
											"end": 17305,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 17266,
											"end": 17305,
											"name": "tag",
											"source": 0,
											"value": "487"
										},
										{
											"begin": 17266,
											"end": 17305,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17266,
											"end": 17310,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 17249,
											"end": 17311,
											"name": "tag",
											"source": 0,
											"value": "482"
										},
										{
											"begin": 17249,
											"end": 17311,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17227,
											"end": 17393,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "488"
										},
										{
											"begin": 17227,
											"end": 17393,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 17227,
											"end": 17393,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 17227,
											"end": 17393,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 17227,
											"end": 17393,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 17227,
											"end": 17393,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17227,
											"end": 17393,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17227,
											"end": 17393,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 17227,
											"end": 17393,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17227,
											"end": 17393,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "489"
										},
										{
											"begin": 17227,
											"end": 17393,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17227,
											"end": 17393,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "490"
										},
										{
											"begin": 17227,
											"end": 17393,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 17227,
											"end": 17393,
											"name": "tag",
											"source": 0,
											"value": "489"
										},
										{
											"begin": 17227,
											"end": 17393,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17227,
											"end": 17393,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 17227,
											"end": 17393,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 17227,
											"end": 17393,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17227,
											"end": 17393,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 17227,
											"end": 17393,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 17227,
											"end": 17393,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17227,
											"end": 17393,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 17227,
											"end": 17393,
											"name": "tag",
											"source": 0,
											"value": "488"
										},
										{
											"begin": 17227,
											"end": 17393,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17404,
											"end": 17494,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "491"
										},
										{
											"begin": 17424,
											"end": 17429,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 17454,
											"end": 17476,
											"name": "PUSH",
											"source": 0,
											"value": "95EA7B3"
										},
										{
											"begin": 17454,
											"end": 17476,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 17454,
											"end": 17476,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 17478,
											"end": 17485,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 17487,
											"end": 17492,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 17431,
											"end": 17493,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 17431,
											"end": 17493,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 17431,
											"end": 17493,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 17431,
											"end": 17493,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17431,
											"end": 17493,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "492"
										},
										{
											"begin": 17431,
											"end": 17493,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 17431,
											"end": 17493,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 17431,
											"end": 17493,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17431,
											"end": 17493,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "474"
										},
										{
											"begin": 17431,
											"end": 17493,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 17431,
											"end": 17493,
											"name": "tag",
											"source": 0,
											"value": "492"
										},
										{
											"begin": 17431,
											"end": 17493,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17431,
											"end": 17493,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 17431,
											"end": 17493,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 17431,
											"end": 17493,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 17431,
											"end": 17493,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17431,
											"end": 17493,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 17431,
											"end": 17493,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 17431,
											"end": 17493,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 17431,
											"end": 17493,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17431,
											"end": 17493,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17431,
											"end": 17493,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17431,
											"end": 17493,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 17431,
											"end": 17493,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17431,
											"end": 17493,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17431,
											"end": 17493,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17431,
											"end": 17493,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 17431,
											"end": 17493,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 17431,
											"end": 17493,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 17431,
											"end": 17493,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 17431,
											"end": 17493,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17431,
											"end": 17493,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17431,
											"end": 17493,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 17431,
											"end": 17493,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17431,
											"end": 17493,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 17431,
											"end": 17493,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17431,
											"end": 17493,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 17431,
											"end": 17493,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 17431,
											"end": 17493,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 17431,
											"end": 17493,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 17431,
											"end": 17493,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17431,
											"end": 17493,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17431,
											"end": 17493,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17431,
											"end": 17493,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17431,
											"end": 17493,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17404,
											"end": 17423,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "475"
										},
										{
											"begin": 17404,
											"end": 17494,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 17404,
											"end": 17494,
											"name": "tag",
											"source": 0,
											"value": "491"
										},
										{
											"begin": 17404,
											"end": 17494,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16886,
											"end": 17502,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16886,
											"end": 17502,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16886,
											"end": 17502,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16886,
											"end": 17502,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 21375,
											"end": 21566,
											"name": "tag",
											"source": 0,
											"value": "389"
										},
										{
											"begin": 21375,
											"end": 21566,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21449,
											"end": 21465,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 21468,
											"end": 21474,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21468,
											"end": 21474,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 21468,
											"end": 21474,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21468,
											"end": 21474,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 21468,
											"end": 21474,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21468,
											"end": 21474,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 21468,
											"end": 21474,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 21468,
											"end": 21474,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21468,
											"end": 21474,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 21468,
											"end": 21474,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 21468,
											"end": 21474,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 21449,
											"end": 21474,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21449,
											"end": 21474,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21494,
											"end": 21502,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21485,
											"end": 21491,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 21485,
											"end": 21491,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21485,
											"end": 21502,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 21485,
											"end": 21502,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 21485,
											"end": 21502,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21485,
											"end": 21502,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 21485,
											"end": 21502,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21485,
											"end": 21502,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 21485,
											"end": 21502,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 21485,
											"end": 21502,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 21485,
											"end": 21502,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 21485,
											"end": 21502,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21485,
											"end": 21502,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 21485,
											"end": 21502,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 21485,
											"end": 21502,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 21485,
											"end": 21502,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 21485,
											"end": 21502,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 21485,
											"end": 21502,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21485,
											"end": 21502,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 21485,
											"end": 21502,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21549,
											"end": 21557,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21518,
											"end": 21558,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 21518,
											"end": 21558,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 21539,
											"end": 21547,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21518,
											"end": 21558,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 21518,
											"end": 21558,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 21518,
											"end": 21558,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 21518,
											"end": 21558,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 21518,
											"end": 21558,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 21518,
											"end": 21558,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 21518,
											"end": 21558,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 21518,
											"end": 21558,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21518,
											"end": 21558,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 21518,
											"end": 21558,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 21518,
											"end": 21558,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21518,
											"end": 21558,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 21438,
											"end": 21566,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21375,
											"end": 21566,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21375,
											"end": 21566,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3358,
											"end": 3703,
											"name": "tag",
											"source": 0,
											"value": "461"
										},
										{
											"begin": 3358,
											"end": 3703,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3444,
											"end": 3451,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3543,
											"end": 3544,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3539,
											"end": 3540,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3539,
											"end": 3544,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 3546,
											"end": 3558,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3531,
											"end": 3559,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3531,
											"end": 3559,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "495"
										},
										{
											"begin": 3531,
											"end": 3559,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3531,
											"end": 3559,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3531,
											"end": 3559,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3531,
											"end": 3559,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3531,
											"end": 3559,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3531,
											"end": 3559,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3531,
											"end": 3559,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3531,
											"end": 3559,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3531,
											"end": 3559,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "496"
										},
										{
											"begin": 3531,
											"end": 3559,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3531,
											"end": 3559,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3531,
											"end": 3559,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "497"
										},
										{
											"begin": 3531,
											"end": 3559,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3531,
											"end": 3559,
											"name": "tag",
											"source": 0,
											"value": "496"
										},
										{
											"begin": 3531,
											"end": 3559,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3531,
											"end": 3559,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3531,
											"end": 3559,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3531,
											"end": 3559,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3531,
											"end": 3559,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3531,
											"end": 3559,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3531,
											"end": 3559,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3531,
											"end": 3559,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3531,
											"end": 3559,
											"name": "tag",
											"source": 0,
											"value": "495"
										},
										{
											"begin": 3531,
											"end": 3559,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3531,
											"end": 3559,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3570,
											"end": 3579,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3586,
											"end": 3587,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3582,
											"end": 3583,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 3582,
											"end": 3587,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "498"
										},
										{
											"begin": 3582,
											"end": 3587,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3582,
											"end": 3587,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3582,
											"end": 3587,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "455"
										},
										{
											"begin": 3582,
											"end": 3587,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3582,
											"end": 3587,
											"name": "tag",
											"source": 0,
											"value": "498"
										},
										{
											"begin": 3582,
											"end": 3587,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3570,
											"end": 3587,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3570,
											"end": 3587,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3694,
											"end": 3695,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3687,
											"end": 3695,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3687,
											"end": 3695,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3687,
											"end": 3695,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3358,
											"end": 3703,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 3358,
											"end": 3703,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3358,
											"end": 3703,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3358,
											"end": 3703,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3358,
											"end": 3703,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3358,
											"end": 3703,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1314,
											"end": 1506,
											"name": "tag",
											"source": 0,
											"value": "464"
										},
										{
											"begin": 1314,
											"end": 1506,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1400,
											"end": 1407,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1433,
											"end": 1434,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1428,
											"end": 1429,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1428,
											"end": 1434,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 1428,
											"end": 1434,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1436,
											"end": 1448,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1420,
											"end": 1449,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1420,
											"end": 1449,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "500"
										},
										{
											"begin": 1420,
											"end": 1449,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1420,
											"end": 1449,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1420,
											"end": 1449,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1420,
											"end": 1449,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1420,
											"end": 1449,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1420,
											"end": 1449,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1420,
											"end": 1449,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1420,
											"end": 1449,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1420,
											"end": 1449,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "501"
										},
										{
											"begin": 1420,
											"end": 1449,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1420,
											"end": 1449,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1420,
											"end": 1449,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "497"
										},
										{
											"begin": 1420,
											"end": 1449,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1420,
											"end": 1449,
											"name": "tag",
											"source": 0,
											"value": "501"
										},
										{
											"begin": 1420,
											"end": 1449,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1420,
											"end": 1449,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1420,
											"end": 1449,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1420,
											"end": 1449,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1420,
											"end": 1449,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1420,
											"end": 1449,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1420,
											"end": 1449,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1420,
											"end": 1449,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1420,
											"end": 1449,
											"name": "tag",
											"source": 0,
											"value": "500"
										},
										{
											"begin": 1420,
											"end": 1449,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1420,
											"end": 1449,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1460,
											"end": 1469,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1476,
											"end": 1477,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1472,
											"end": 1473,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 1472,
											"end": 1477,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "502"
										},
										{
											"begin": 1472,
											"end": 1477,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1472,
											"end": 1477,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1472,
											"end": 1477,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "503"
										},
										{
											"begin": 1472,
											"end": 1477,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1472,
											"end": 1477,
											"name": "tag",
											"source": 0,
											"value": "502"
										},
										{
											"begin": 1472,
											"end": 1477,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1460,
											"end": 1477,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1460,
											"end": 1477,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1497,
											"end": 1498,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1490,
											"end": 1498,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1490,
											"end": 1498,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1490,
											"end": 1498,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1314,
											"end": 1506,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 1314,
											"end": 1506,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 1314,
											"end": 1506,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1314,
											"end": 1506,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1314,
											"end": 1506,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1314,
											"end": 1506,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 18723,
											"end": 19439,
											"name": "tag",
											"source": 0,
											"value": "475"
										},
										{
											"begin": 18723,
											"end": 19439,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19147,
											"end": 19170,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 19173,
											"end": 19242,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "505"
										},
										{
											"begin": 19201,
											"end": 19205,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 19173,
											"end": 19242,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 19173,
											"end": 19242,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 19173,
											"end": 19242,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19173,
											"end": 19242,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 19173,
											"end": 19242,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 19173,
											"end": 19242,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 19173,
											"end": 19242,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 19173,
											"end": 19242,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19173,
											"end": 19242,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 19173,
											"end": 19242,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19173,
											"end": 19242,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 19173,
											"end": 19242,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 19173,
											"end": 19242,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 19173,
											"end": 19242,
											"name": "PUSH",
											"source": 0,
											"value": "5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564"
										},
										{
											"begin": 19173,
											"end": 19242,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19173,
											"end": 19242,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 19173,
											"end": 19242,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 19181,
											"end": 19186,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 19173,
											"end": 19200,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 19173,
											"end": 19200,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 19173,
											"end": 19200,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "506"
										},
										{
											"begin": 19173,
											"end": 19200,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19173,
											"end": 19242,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 19173,
											"end": 19242,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 19173,
											"end": 19242,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19173,
											"end": 19242,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 19173,
											"end": 19242,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 19173,
											"end": 19242,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 19173,
											"end": 19242,
											"name": "tag",
											"source": 0,
											"value": "505"
										},
										{
											"begin": 19173,
											"end": 19242,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19147,
											"end": 19242,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19147,
											"end": 19242,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 19277,
											"end": 19278,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 19257,
											"end": 19267,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19257,
											"end": 19274,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 19257,
											"end": 19278,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 19253,
											"end": 19432,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 19253,
											"end": 19432,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "507"
										},
										{
											"begin": 19253,
											"end": 19432,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 19354,
											"end": 19364,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19343,
											"end": 19373,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19343,
											"end": 19373,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 19343,
											"end": 19373,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 19343,
											"end": 19373,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19343,
											"end": 19373,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 19343,
											"end": 19373,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19343,
											"end": 19373,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 19343,
											"end": 19373,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19343,
											"end": 19373,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "508"
										},
										{
											"begin": 19343,
											"end": 19373,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 19343,
											"end": 19373,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19343,
											"end": 19373,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "509"
										},
										{
											"begin": 19343,
											"end": 19373,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 19343,
											"end": 19373,
											"name": "tag",
											"source": 0,
											"value": "508"
										},
										{
											"begin": 19343,
											"end": 19373,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19335,
											"end": 19420,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "510"
										},
										{
											"begin": 19335,
											"end": 19420,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 19335,
											"end": 19420,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 19335,
											"end": 19420,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 19335,
											"end": 19420,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 19335,
											"end": 19420,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19335,
											"end": 19420,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 19335,
											"end": 19420,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 19335,
											"end": 19420,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 19335,
											"end": 19420,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "511"
										},
										{
											"begin": 19335,
											"end": 19420,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19335,
											"end": 19420,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "512"
										},
										{
											"begin": 19335,
											"end": 19420,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 19335,
											"end": 19420,
											"name": "tag",
											"source": 0,
											"value": "511"
										},
										{
											"begin": 19335,
											"end": 19420,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19335,
											"end": 19420,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 19335,
											"end": 19420,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 19335,
											"end": 19420,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19335,
											"end": 19420,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 19335,
											"end": 19420,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 19335,
											"end": 19420,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19335,
											"end": 19420,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 19335,
											"end": 19420,
											"name": "tag",
											"source": 0,
											"value": "510"
										},
										{
											"begin": 19335,
											"end": 19420,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19253,
											"end": 19432,
											"name": "tag",
											"source": 0,
											"value": "507"
										},
										{
											"begin": 19253,
											"end": 19432,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18793,
											"end": 19439,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 18723,
											"end": 19439,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 18723,
											"end": 19439,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 18723,
											"end": 19439,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 11566,
											"end": 11795,
											"name": "tag",
											"source": 0,
											"value": "506"
										},
										{
											"begin": 11566,
											"end": 11795,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11703,
											"end": 11715,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 11735,
											"end": 11787,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "514"
										},
										{
											"begin": 11757,
											"end": 11763,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 11765,
											"end": 11769,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 11771,
											"end": 11772,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11774,
											"end": 11786,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 11735,
											"end": 11756,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "515"
										},
										{
											"begin": 11735,
											"end": 11787,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 11735,
											"end": 11787,
											"name": "tag",
											"source": 0,
											"value": "514"
										},
										{
											"begin": 11735,
											"end": 11787,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11728,
											"end": 11787,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11728,
											"end": 11787,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11566,
											"end": 11795,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 11566,
											"end": 11795,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 11566,
											"end": 11795,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11566,
											"end": 11795,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11566,
											"end": 11795,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11566,
											"end": 11795,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 12686,
											"end": 13196,
											"name": "tag",
											"source": 0,
											"value": "515"
										},
										{
											"begin": 12686,
											"end": 13196,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12856,
											"end": 12868,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 12914,
											"end": 12919,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 12889,
											"end": 12910,
											"name": "SELFBALANCE",
											"source": 0
										},
										{
											"begin": 12889,
											"end": 12919,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 12889,
											"end": 12919,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 12881,
											"end": 12962,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "517"
										},
										{
											"begin": 12881,
											"end": 12962,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 12881,
											"end": 12962,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12881,
											"end": 12962,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 12881,
											"end": 12962,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 12881,
											"end": 12962,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12881,
											"end": 12962,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12881,
											"end": 12962,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 12881,
											"end": 12962,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12881,
											"end": 12962,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "518"
										},
										{
											"begin": 12881,
											"end": 12962,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12881,
											"end": 12962,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "519"
										},
										{
											"begin": 12881,
											"end": 12962,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 12881,
											"end": 12962,
											"name": "tag",
											"source": 0,
											"value": "518"
										},
										{
											"begin": 12881,
											"end": 12962,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12881,
											"end": 12962,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12881,
											"end": 12962,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 12881,
											"end": 12962,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12881,
											"end": 12962,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12881,
											"end": 12962,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 12881,
											"end": 12962,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12881,
											"end": 12962,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 12881,
											"end": 12962,
											"name": "tag",
											"source": 0,
											"value": "517"
										},
										{
											"begin": 12881,
											"end": 12962,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12981,
											"end": 12999,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "520"
										},
										{
											"begin": 12992,
											"end": 12998,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 12981,
											"end": 12991,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "521"
										},
										{
											"begin": 12981,
											"end": 12999,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 12981,
											"end": 12999,
											"name": "tag",
											"source": 0,
											"value": "520"
										},
										{
											"begin": 12981,
											"end": 12999,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12973,
											"end": 13033,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "522"
										},
										{
											"begin": 12973,
											"end": 13033,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 12973,
											"end": 13033,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12973,
											"end": 13033,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 12973,
											"end": 13033,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 12973,
											"end": 13033,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12973,
											"end": 13033,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12973,
											"end": 13033,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 12973,
											"end": 13033,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12973,
											"end": 13033,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "523"
										},
										{
											"begin": 12973,
											"end": 13033,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12973,
											"end": 13033,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "524"
										},
										{
											"begin": 12973,
											"end": 13033,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 12973,
											"end": 13033,
											"name": "tag",
											"source": 0,
											"value": "523"
										},
										{
											"begin": 12973,
											"end": 13033,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12973,
											"end": 13033,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12973,
											"end": 13033,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 12973,
											"end": 13033,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12973,
											"end": 13033,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12973,
											"end": 13033,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 12973,
											"end": 13033,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12973,
											"end": 13033,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 12973,
											"end": 13033,
											"name": "tag",
											"source": 0,
											"value": "522"
										},
										{
											"begin": 12973,
											"end": 13033,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13047,
											"end": 13059,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13061,
											"end": 13084,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13088,
											"end": 13094,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 13088,
											"end": 13099,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13088,
											"end": 13099,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 13107,
											"end": 13112,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 13114,
											"end": 13118,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 13088,
											"end": 13119,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13088,
											"end": 13119,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 13088,
											"end": 13119,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "525"
										},
										{
											"begin": 13088,
											"end": 13119,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13088,
											"end": 13119,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13088,
											"end": 13119,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "526"
										},
										{
											"begin": 13088,
											"end": 13119,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13088,
											"end": 13119,
											"name": "tag",
											"source": 0,
											"value": "525"
										},
										{
											"begin": 13088,
											"end": 13119,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13088,
											"end": 13119,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13088,
											"end": 13119,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13088,
											"end": 13119,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 13088,
											"end": 13119,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13088,
											"end": 13119,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 13088,
											"end": 13119,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 13088,
											"end": 13119,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13088,
											"end": 13119,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 13088,
											"end": 13119,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 13088,
											"end": 13119,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 13088,
											"end": 13119,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 13088,
											"end": 13119,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 13088,
											"end": 13119,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13088,
											"end": 13119,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13088,
											"end": 13119,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13088,
											"end": 13119,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 13088,
											"end": 13119,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13088,
											"end": 13119,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13088,
											"end": 13119,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13088,
											"end": 13119,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 13088,
											"end": 13119,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "529"
										},
										{
											"begin": 13088,
											"end": 13119,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 13088,
											"end": 13119,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13088,
											"end": 13119,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 13088,
											"end": 13119,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13088,
											"end": 13119,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13088,
											"end": 13119,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 13088,
											"end": 13119,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 13088,
											"end": 13119,
											"name": "PUSH",
											"source": 0,
											"value": "3F"
										},
										{
											"begin": 13088,
											"end": 13119,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 13088,
											"end": 13119,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13088,
											"end": 13119,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 13088,
											"end": 13119,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 13088,
											"end": 13119,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13088,
											"end": 13119,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13088,
											"end": 13119,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13088,
											"end": 13119,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 13088,
											"end": 13119,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 13088,
											"end": 13119,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13088,
											"end": 13119,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 13088,
											"end": 13119,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13088,
											"end": 13119,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13088,
											"end": 13119,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 13088,
											"end": 13119,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13088,
											"end": 13119,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 13088,
											"end": 13119,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "528"
										},
										{
											"begin": 13088,
											"end": 13119,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13088,
											"end": 13119,
											"name": "tag",
											"source": 0,
											"value": "529"
										},
										{
											"begin": 13088,
											"end": 13119,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13088,
											"end": 13119,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 13088,
											"end": 13119,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13088,
											"end": 13119,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13088,
											"end": 13119,
											"name": "tag",
											"source": 0,
											"value": "528"
										},
										{
											"begin": 13088,
											"end": 13119,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13088,
											"end": 13119,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13046,
											"end": 13119,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13046,
											"end": 13119,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13046,
											"end": 13119,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13046,
											"end": 13119,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13137,
											"end": 13188,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "530"
										},
										{
											"begin": 13154,
											"end": 13161,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 13163,
											"end": 13173,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 13175,
											"end": 13187,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 13137,
											"end": 13153,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "531"
										},
										{
											"begin": 13137,
											"end": 13188,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13137,
											"end": 13188,
											"name": "tag",
											"source": 0,
											"value": "530"
										},
										{
											"begin": 13137,
											"end": 13188,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13130,
											"end": 13188,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 13130,
											"end": 13188,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13130,
											"end": 13188,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13130,
											"end": 13188,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12686,
											"end": 13196,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 12686,
											"end": 13196,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 12686,
											"end": 13196,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12686,
											"end": 13196,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12686,
											"end": 13196,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12686,
											"end": 13196,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12686,
											"end": 13196,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8821,
											"end": 9147,
											"name": "tag",
											"source": 0,
											"value": "521"
										},
										{
											"begin": 8821,
											"end": 9147,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8881,
											"end": 8885,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9138,
											"end": 9139,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9116,
											"end": 9123,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 9116,
											"end": 9135,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9116,
											"end": 9135,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9116,
											"end": 9135,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 9116,
											"end": 9139,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 9109,
											"end": 9139,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9109,
											"end": 9139,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8821,
											"end": 9147,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8821,
											"end": 9147,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8821,
											"end": 9147,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8821,
											"end": 9147,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 15372,
											"end": 16084,
											"name": "tag",
											"source": 0,
											"value": "531"
										},
										{
											"begin": 15372,
											"end": 16084,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15522,
											"end": 15534,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 15551,
											"end": 15558,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 15547,
											"end": 16077,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 15547,
											"end": 16077,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "534"
										},
										{
											"begin": 15547,
											"end": 16077,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 15582,
											"end": 15592,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 15575,
											"end": 15592,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15575,
											"end": 15592,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15575,
											"end": 15592,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "533"
										},
										{
											"begin": 15575,
											"end": 15592,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 15547,
											"end": 16077,
											"name": "tag",
											"source": 0,
											"value": "534"
										},
										{
											"begin": 15547,
											"end": 16077,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15716,
											"end": 15717,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 15696,
											"end": 15706,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 15696,
											"end": 15713,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 15696,
											"end": 15717,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 15692,
											"end": 16066,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 15692,
											"end": 16066,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "536"
										},
										{
											"begin": 15692,
											"end": 16066,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 15894,
											"end": 15904,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 15888,
											"end": 15905,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 15955,
											"end": 15970,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15942,
											"end": 15952,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 15938,
											"end": 15940,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 15934,
											"end": 15953,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15927,
											"end": 15971,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 15692,
											"end": 16066,
											"name": "tag",
											"source": 0,
											"value": "536"
										},
										{
											"begin": 15692,
											"end": 16066,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16037,
											"end": 16049,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16030,
											"end": 16050,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16030,
											"end": 16050,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 16030,
											"end": 16050,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 16030,
											"end": 16050,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16030,
											"end": 16050,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16030,
											"end": 16050,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 16030,
											"end": 16050,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16030,
											"end": 16050,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "538"
										},
										{
											"begin": 16030,
											"end": 16050,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 16030,
											"end": 16050,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16030,
											"end": 16050,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "497"
										},
										{
											"begin": 16030,
											"end": 16050,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 16030,
											"end": 16050,
											"name": "tag",
											"source": 0,
											"value": "538"
										},
										{
											"begin": 16030,
											"end": 16050,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16030,
											"end": 16050,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16030,
											"end": 16050,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 16030,
											"end": 16050,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16030,
											"end": 16050,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 16030,
											"end": 16050,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 16030,
											"end": 16050,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16030,
											"end": 16050,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 15372,
											"end": 16084,
											"name": "tag",
											"source": 0,
											"value": "533"
										},
										{
											"begin": 15372,
											"end": 16084,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15372,
											"end": 16084,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 15372,
											"end": 16084,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 15372,
											"end": 16084,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15372,
											"end": 16084,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15372,
											"end": 16084,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15372,
											"end": 16084,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7,
											"end": 84,
											"name": "tag",
											"source": 1,
											"value": "539"
										},
										{
											"begin": 7,
											"end": 84,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 44,
											"end": 51,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 73,
											"end": 78,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 62,
											"end": 78,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 62,
											"end": 78,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 84,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7,
											"end": 84,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7,
											"end": 84,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 84,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 90,
											"end": 208,
											"name": "tag",
											"source": 1,
											"value": "540"
										},
										{
											"begin": 90,
											"end": 208,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 177,
											"end": 201,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "616"
										},
										{
											"begin": 195,
											"end": 200,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 177,
											"end": 201,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "539"
										},
										{
											"begin": 177,
											"end": 201,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 177,
											"end": 201,
											"name": "tag",
											"source": 1,
											"value": "616"
										},
										{
											"begin": 177,
											"end": 201,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 172,
											"end": 175,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 165,
											"end": 202,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 90,
											"end": 208,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 90,
											"end": 208,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 90,
											"end": 208,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 214,
											"end": 436,
											"name": "tag",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 214,
											"end": 436,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 307,
											"end": 311,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 345,
											"end": 347,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 334,
											"end": 343,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 330,
											"end": 348,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 322,
											"end": 348,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 322,
											"end": 348,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 358,
											"end": 429,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "618"
										},
										{
											"begin": 426,
											"end": 427,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 415,
											"end": 424,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 411,
											"end": 428,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 402,
											"end": 408,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 358,
											"end": 429,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "540"
										},
										{
											"begin": 358,
											"end": 429,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 358,
											"end": 429,
											"name": "tag",
											"source": 1,
											"value": "618"
										},
										{
											"begin": 358,
											"end": 429,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 214,
											"end": 436,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 214,
											"end": 436,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 214,
											"end": 436,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 214,
											"end": 436,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 214,
											"end": 436,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 523,
											"end": 640,
											"name": "tag",
											"source": 1,
											"value": "542"
										},
										{
											"begin": 523,
											"end": 640,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 632,
											"end": 633,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 629,
											"end": 630,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 622,
											"end": 634,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 769,
											"end": 891,
											"name": "tag",
											"source": 1,
											"value": "544"
										},
										{
											"begin": 769,
											"end": 891,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 842,
											"end": 866,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "623"
										},
										{
											"begin": 860,
											"end": 865,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 842,
											"end": 866,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "539"
										},
										{
											"begin": 842,
											"end": 866,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 842,
											"end": 866,
											"name": "tag",
											"source": 1,
											"value": "623"
										},
										{
											"begin": 842,
											"end": 866,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 835,
											"end": 840,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 832,
											"end": 867,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 822,
											"end": 885,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "624"
										},
										{
											"begin": 822,
											"end": 885,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 881,
											"end": 882,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 878,
											"end": 879,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 871,
											"end": 883,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 822,
											"end": 885,
											"name": "tag",
											"source": 1,
											"value": "624"
										},
										{
											"begin": 822,
											"end": 885,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 769,
											"end": 891,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 769,
											"end": 891,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 897,
											"end": 1036,
											"name": "tag",
											"source": 1,
											"value": "545"
										},
										{
											"begin": 897,
											"end": 1036,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 943,
											"end": 948,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 981,
											"end": 987,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 968,
											"end": 988,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 959,
											"end": 988,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 959,
											"end": 988,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 997,
											"end": 1030,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "626"
										},
										{
											"begin": 1024,
											"end": 1029,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 997,
											"end": 1030,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "544"
										},
										{
											"begin": 997,
											"end": 1030,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 997,
											"end": 1030,
											"name": "tag",
											"source": 1,
											"value": "626"
										},
										{
											"begin": 997,
											"end": 1030,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 897,
											"end": 1036,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 897,
											"end": 1036,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 897,
											"end": 1036,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 897,
											"end": 1036,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 897,
											"end": 1036,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1042,
											"end": 1371,
											"name": "tag",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 1042,
											"end": 1371,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1101,
											"end": 1107,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1150,
											"end": 1152,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1138,
											"end": 1147,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1129,
											"end": 1136,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1125,
											"end": 1148,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1121,
											"end": 1153,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 1118,
											"end": 1237,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1118,
											"end": 1237,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "628"
										},
										{
											"begin": 1118,
											"end": 1237,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1156,
											"end": 1235,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "629"
										},
										{
											"begin": 1156,
											"end": 1235,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "542"
										},
										{
											"begin": 1156,
											"end": 1235,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1156,
											"end": 1235,
											"name": "tag",
											"source": 1,
											"value": "629"
										},
										{
											"begin": 1156,
											"end": 1235,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1118,
											"end": 1237,
											"name": "tag",
											"source": 1,
											"value": "628"
										},
										{
											"begin": 1118,
											"end": 1237,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1276,
											"end": 1277,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1301,
											"end": 1354,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "630"
										},
										{
											"begin": 1346,
											"end": 1353,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1337,
											"end": 1343,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1326,
											"end": 1335,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1322,
											"end": 1344,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1301,
											"end": 1354,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "545"
										},
										{
											"begin": 1301,
											"end": 1354,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1301,
											"end": 1354,
											"name": "tag",
											"source": 1,
											"value": "630"
										},
										{
											"begin": 1301,
											"end": 1354,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1291,
											"end": 1354,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1291,
											"end": 1354,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1247,
											"end": 1364,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1042,
											"end": 1371,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1042,
											"end": 1371,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1042,
											"end": 1371,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1042,
											"end": 1371,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1042,
											"end": 1371,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1377,
											"end": 1503,
											"name": "tag",
											"source": 1,
											"value": "546"
										},
										{
											"begin": 1377,
											"end": 1503,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1414,
											"end": 1421,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1454,
											"end": 1496,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1447,
											"end": 1452,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1443,
											"end": 1497,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1432,
											"end": 1497,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1432,
											"end": 1497,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1377,
											"end": 1503,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1377,
											"end": 1503,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1377,
											"end": 1503,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1377,
											"end": 1503,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1509,
											"end": 1569,
											"name": "tag",
											"source": 1,
											"value": "547"
										},
										{
											"begin": 1509,
											"end": 1569,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1537,
											"end": 1540,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1558,
											"end": 1563,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1551,
											"end": 1563,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1551,
											"end": 1563,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1509,
											"end": 1569,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1509,
											"end": 1569,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1509,
											"end": 1569,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1509,
											"end": 1569,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1575,
											"end": 1717,
											"name": "tag",
											"source": 1,
											"value": "548"
										},
										{
											"begin": 1575,
											"end": 1717,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1625,
											"end": 1634,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1658,
											"end": 1711,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "634"
										},
										{
											"begin": 1676,
											"end": 1710,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "635"
										},
										{
											"begin": 1685,
											"end": 1709,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "636"
										},
										{
											"begin": 1703,
											"end": 1708,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1685,
											"end": 1709,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "546"
										},
										{
											"begin": 1685,
											"end": 1709,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1685,
											"end": 1709,
											"name": "tag",
											"source": 1,
											"value": "636"
										},
										{
											"begin": 1685,
											"end": 1709,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1676,
											"end": 1710,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "547"
										},
										{
											"begin": 1676,
											"end": 1710,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1676,
											"end": 1710,
											"name": "tag",
											"source": 1,
											"value": "635"
										},
										{
											"begin": 1676,
											"end": 1710,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1658,
											"end": 1711,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "546"
										},
										{
											"begin": 1658,
											"end": 1711,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1658,
											"end": 1711,
											"name": "tag",
											"source": 1,
											"value": "634"
										},
										{
											"begin": 1658,
											"end": 1711,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1645,
											"end": 1711,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1645,
											"end": 1711,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1575,
											"end": 1717,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1575,
											"end": 1717,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1575,
											"end": 1717,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1575,
											"end": 1717,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1723,
											"end": 1849,
											"name": "tag",
											"source": 1,
											"value": "549"
										},
										{
											"begin": 1723,
											"end": 1849,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1773,
											"end": 1782,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1806,
											"end": 1843,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "638"
										},
										{
											"begin": 1837,
											"end": 1842,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1806,
											"end": 1843,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "548"
										},
										{
											"begin": 1806,
											"end": 1843,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1806,
											"end": 1843,
											"name": "tag",
											"source": 1,
											"value": "638"
										},
										{
											"begin": 1806,
											"end": 1843,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1793,
											"end": 1843,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1793,
											"end": 1843,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1723,
											"end": 1849,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1723,
											"end": 1849,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1723,
											"end": 1849,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1723,
											"end": 1849,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1855,
											"end": 1995,
											"name": "tag",
											"source": 1,
											"value": "550"
										},
										{
											"begin": 1855,
											"end": 1995,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1919,
											"end": 1928,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1952,
											"end": 1989,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "640"
										},
										{
											"begin": 1983,
											"end": 1988,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1952,
											"end": 1989,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "549"
										},
										{
											"begin": 1952,
											"end": 1989,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1952,
											"end": 1989,
											"name": "tag",
											"source": 1,
											"value": "640"
										},
										{
											"begin": 1952,
											"end": 1989,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1939,
											"end": 1989,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1939,
											"end": 1989,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1855,
											"end": 1995,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1855,
											"end": 1995,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1855,
											"end": 1995,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1855,
											"end": 1995,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2001,
											"end": 2160,
											"name": "tag",
											"source": 1,
											"value": "551"
										},
										{
											"begin": 2001,
											"end": 2160,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2102,
											"end": 2153,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "642"
										},
										{
											"begin": 2147,
											"end": 2152,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2102,
											"end": 2153,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "550"
										},
										{
											"begin": 2102,
											"end": 2153,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2102,
											"end": 2153,
											"name": "tag",
											"source": 1,
											"value": "642"
										},
										{
											"begin": 2102,
											"end": 2153,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2097,
											"end": 2100,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2090,
											"end": 2154,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2001,
											"end": 2160,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2001,
											"end": 2160,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2001,
											"end": 2160,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2166,
											"end": 2747,
											"name": "tag",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 2166,
											"end": 2747,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2357,
											"end": 2361,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2395,
											"end": 2398,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 2384,
											"end": 2393,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2380,
											"end": 2399,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2372,
											"end": 2399,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2372,
											"end": 2399,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2409,
											"end": 2494,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "644"
										},
										{
											"begin": 2491,
											"end": 2492,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2480,
											"end": 2489,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2476,
											"end": 2493,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2467,
											"end": 2473,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 2409,
											"end": 2494,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "551"
										},
										{
											"begin": 2409,
											"end": 2494,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2409,
											"end": 2494,
											"name": "tag",
											"source": 1,
											"value": "644"
										},
										{
											"begin": 2409,
											"end": 2494,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2504,
											"end": 2576,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "645"
										},
										{
											"begin": 2572,
											"end": 2574,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2561,
											"end": 2570,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2557,
											"end": 2575,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2548,
											"end": 2554,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 2504,
											"end": 2576,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "540"
										},
										{
											"begin": 2504,
											"end": 2576,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2504,
											"end": 2576,
											"name": "tag",
											"source": 1,
											"value": "645"
										},
										{
											"begin": 2504,
											"end": 2576,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2586,
											"end": 2658,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "646"
										},
										{
											"begin": 2654,
											"end": 2656,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2643,
											"end": 2652,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2639,
											"end": 2657,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2630,
											"end": 2636,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 2586,
											"end": 2658,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "540"
										},
										{
											"begin": 2586,
											"end": 2658,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2586,
											"end": 2658,
											"name": "tag",
											"source": 1,
											"value": "646"
										},
										{
											"begin": 2586,
											"end": 2658,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2668,
											"end": 2740,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "647"
										},
										{
											"begin": 2736,
											"end": 2738,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 2725,
											"end": 2734,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2721,
											"end": 2739,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2712,
											"end": 2718,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2668,
											"end": 2740,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "540"
										},
										{
											"begin": 2668,
											"end": 2740,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2668,
											"end": 2740,
											"name": "tag",
											"source": 1,
											"value": "647"
										},
										{
											"begin": 2668,
											"end": 2740,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2166,
											"end": 2747,
											"name": "SWAP6",
											"source": 1
										},
										{
											"begin": 2166,
											"end": 2747,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 2166,
											"end": 2747,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2166,
											"end": 2747,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2166,
											"end": 2747,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2166,
											"end": 2747,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2166,
											"end": 2747,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2166,
											"end": 2747,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2753,
											"end": 3227,
											"name": "tag",
											"source": 1,
											"value": "62"
										},
										{
											"begin": 2753,
											"end": 3227,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2821,
											"end": 2827,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2829,
											"end": 2835,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2878,
											"end": 2880,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2866,
											"end": 2875,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2857,
											"end": 2864,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 2853,
											"end": 2876,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2849,
											"end": 2881,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 2846,
											"end": 2965,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2846,
											"end": 2965,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "649"
										},
										{
											"begin": 2846,
											"end": 2965,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2884,
											"end": 2963,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "650"
										},
										{
											"begin": 2884,
											"end": 2963,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "542"
										},
										{
											"begin": 2884,
											"end": 2963,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2884,
											"end": 2963,
											"name": "tag",
											"source": 1,
											"value": "650"
										},
										{
											"begin": 2884,
											"end": 2963,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2846,
											"end": 2965,
											"name": "tag",
											"source": 1,
											"value": "649"
										},
										{
											"begin": 2846,
											"end": 2965,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3004,
											"end": 3005,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3029,
											"end": 3082,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "651"
										},
										{
											"begin": 3074,
											"end": 3081,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 3065,
											"end": 3071,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3054,
											"end": 3063,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 3050,
											"end": 3072,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3029,
											"end": 3082,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "545"
										},
										{
											"begin": 3029,
											"end": 3082,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3029,
											"end": 3082,
											"name": "tag",
											"source": 1,
											"value": "651"
										},
										{
											"begin": 3029,
											"end": 3082,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3019,
											"end": 3082,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3019,
											"end": 3082,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2975,
											"end": 3092,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3131,
											"end": 3133,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3157,
											"end": 3210,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "652"
										},
										{
											"begin": 3202,
											"end": 3209,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 3193,
											"end": 3199,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3182,
											"end": 3191,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 3178,
											"end": 3200,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3157,
											"end": 3210,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "545"
										},
										{
											"begin": 3157,
											"end": 3210,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3157,
											"end": 3210,
											"name": "tag",
											"source": 1,
											"value": "652"
										},
										{
											"begin": 3157,
											"end": 3210,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3147,
											"end": 3210,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3147,
											"end": 3210,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3102,
											"end": 3220,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2753,
											"end": 3227,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2753,
											"end": 3227,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2753,
											"end": 3227,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2753,
											"end": 3227,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2753,
											"end": 3227,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2753,
											"end": 3227,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3233,
											"end": 3329,
											"name": "tag",
											"source": 1,
											"value": "552"
										},
										{
											"begin": 3233,
											"end": 3329,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3270,
											"end": 3277,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3299,
											"end": 3323,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "654"
										},
										{
											"begin": 3317,
											"end": 3322,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3299,
											"end": 3323,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "546"
										},
										{
											"begin": 3299,
											"end": 3323,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3299,
											"end": 3323,
											"name": "tag",
											"source": 1,
											"value": "654"
										},
										{
											"begin": 3299,
											"end": 3323,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3288,
											"end": 3323,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3288,
											"end": 3323,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3233,
											"end": 3329,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3233,
											"end": 3329,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3233,
											"end": 3329,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3233,
											"end": 3329,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3335,
											"end": 3445,
											"name": "tag",
											"source": 1,
											"value": "553"
										},
										{
											"begin": 3335,
											"end": 3445,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3386,
											"end": 3393,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3415,
											"end": 3439,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "656"
										},
										{
											"begin": 3433,
											"end": 3438,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3415,
											"end": 3439,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "552"
										},
										{
											"begin": 3415,
											"end": 3439,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3415,
											"end": 3439,
											"name": "tag",
											"source": 1,
											"value": "656"
										},
										{
											"begin": 3415,
											"end": 3439,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3404,
											"end": 3439,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3404,
											"end": 3439,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3335,
											"end": 3445,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3335,
											"end": 3445,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3335,
											"end": 3445,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3335,
											"end": 3445,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3451,
											"end": 3601,
											"name": "tag",
											"source": 1,
											"value": "554"
										},
										{
											"begin": 3451,
											"end": 3601,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3538,
											"end": 3576,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "658"
										},
										{
											"begin": 3570,
											"end": 3575,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3538,
											"end": 3576,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "553"
										},
										{
											"begin": 3538,
											"end": 3576,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3538,
											"end": 3576,
											"name": "tag",
											"source": 1,
											"value": "658"
										},
										{
											"begin": 3538,
											"end": 3576,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3531,
											"end": 3536,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3528,
											"end": 3577,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 3518,
											"end": 3595,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "659"
										},
										{
											"begin": 3518,
											"end": 3595,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3591,
											"end": 3592,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3588,
											"end": 3589,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3581,
											"end": 3593,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 3518,
											"end": 3595,
											"name": "tag",
											"source": 1,
											"value": "659"
										},
										{
											"begin": 3518,
											"end": 3595,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3451,
											"end": 3601,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3451,
											"end": 3601,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3607,
											"end": 3774,
											"name": "tag",
											"source": 1,
											"value": "555"
										},
										{
											"begin": 3607,
											"end": 3774,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3667,
											"end": 3672,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3705,
											"end": 3711,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3692,
											"end": 3712,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 3683,
											"end": 3712,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3683,
											"end": 3712,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3721,
											"end": 3768,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "661"
										},
										{
											"begin": 3762,
											"end": 3767,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3721,
											"end": 3768,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "554"
										},
										{
											"begin": 3721,
											"end": 3768,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3721,
											"end": 3768,
											"name": "tag",
											"source": 1,
											"value": "661"
										},
										{
											"begin": 3721,
											"end": 3768,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3607,
											"end": 3774,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3607,
											"end": 3774,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3607,
											"end": 3774,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3607,
											"end": 3774,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3607,
											"end": 3774,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3780,
											"end": 3870,
											"name": "tag",
											"source": 1,
											"value": "556"
										},
										{
											"begin": 3780,
											"end": 3870,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3814,
											"end": 3821,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3857,
											"end": 3862,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3850,
											"end": 3863,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3843,
											"end": 3864,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3832,
											"end": 3864,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3832,
											"end": 3864,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3780,
											"end": 3870,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3780,
											"end": 3870,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3780,
											"end": 3870,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3780,
											"end": 3870,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3876,
											"end": 3992,
											"name": "tag",
											"source": 1,
											"value": "557"
										},
										{
											"begin": 3876,
											"end": 3992,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3946,
											"end": 3967,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "664"
										},
										{
											"begin": 3961,
											"end": 3966,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3946,
											"end": 3967,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "556"
										},
										{
											"begin": 3946,
											"end": 3967,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3946,
											"end": 3967,
											"name": "tag",
											"source": 1,
											"value": "664"
										},
										{
											"begin": 3946,
											"end": 3967,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3939,
											"end": 3944,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3936,
											"end": 3968,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 3926,
											"end": 3986,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "665"
										},
										{
											"begin": 3926,
											"end": 3986,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3982,
											"end": 3983,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3979,
											"end": 3980,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3972,
											"end": 3984,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 3926,
											"end": 3986,
											"name": "tag",
											"source": 1,
											"value": "665"
										},
										{
											"begin": 3926,
											"end": 3986,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3876,
											"end": 3992,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3876,
											"end": 3992,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3998,
											"end": 4131,
											"name": "tag",
											"source": 1,
											"value": "558"
										},
										{
											"begin": 3998,
											"end": 4131,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4041,
											"end": 4046,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4079,
											"end": 4085,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4066,
											"end": 4086,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 4057,
											"end": 4086,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4057,
											"end": 4086,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4095,
											"end": 4125,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "667"
										},
										{
											"begin": 4119,
											"end": 4124,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4095,
											"end": 4125,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "557"
										},
										{
											"begin": 4095,
											"end": 4125,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4095,
											"end": 4125,
											"name": "tag",
											"source": 1,
											"value": "667"
										},
										{
											"begin": 4095,
											"end": 4125,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3998,
											"end": 4131,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3998,
											"end": 4131,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3998,
											"end": 4131,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3998,
											"end": 4131,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3998,
											"end": 4131,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4137,
											"end": 4778,
											"name": "tag",
											"source": 1,
											"value": "66"
										},
										{
											"begin": 4137,
											"end": 4778,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4225,
											"end": 4231,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4233,
											"end": 4239,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4241,
											"end": 4247,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4290,
											"end": 4292,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 4278,
											"end": 4287,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 4269,
											"end": 4276,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 4265,
											"end": 4288,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4261,
											"end": 4293,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 4258,
											"end": 4377,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4258,
											"end": 4377,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "669"
										},
										{
											"begin": 4258,
											"end": 4377,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4296,
											"end": 4375,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "670"
										},
										{
											"begin": 4296,
											"end": 4375,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "542"
										},
										{
											"begin": 4296,
											"end": 4375,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4296,
											"end": 4375,
											"name": "tag",
											"source": 1,
											"value": "670"
										},
										{
											"begin": 4296,
											"end": 4375,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4258,
											"end": 4377,
											"name": "tag",
											"source": 1,
											"value": "669"
										},
										{
											"begin": 4258,
											"end": 4377,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4416,
											"end": 4417,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4441,
											"end": 4494,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "671"
										},
										{
											"begin": 4486,
											"end": 4493,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 4477,
											"end": 4483,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4466,
											"end": 4475,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 4462,
											"end": 4484,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4441,
											"end": 4494,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "545"
										},
										{
											"begin": 4441,
											"end": 4494,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4441,
											"end": 4494,
											"name": "tag",
											"source": 1,
											"value": "671"
										},
										{
											"begin": 4441,
											"end": 4494,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4431,
											"end": 4494,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 4431,
											"end": 4494,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4387,
											"end": 4504,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4543,
											"end": 4545,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4569,
											"end": 4636,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "672"
										},
										{
											"begin": 4628,
											"end": 4635,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 4619,
											"end": 4625,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4608,
											"end": 4617,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 4604,
											"end": 4626,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4569,
											"end": 4636,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "555"
										},
										{
											"begin": 4569,
											"end": 4636,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4569,
											"end": 4636,
											"name": "tag",
											"source": 1,
											"value": "672"
										},
										{
											"begin": 4569,
											"end": 4636,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4559,
											"end": 4636,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4559,
											"end": 4636,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4514,
											"end": 4646,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4685,
											"end": 4687,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4711,
											"end": 4761,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "673"
										},
										{
											"begin": 4753,
											"end": 4760,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 4744,
											"end": 4750,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4733,
											"end": 4742,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 4729,
											"end": 4751,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4711,
											"end": 4761,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "558"
										},
										{
											"begin": 4711,
											"end": 4761,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4711,
											"end": 4761,
											"name": "tag",
											"source": 1,
											"value": "673"
										},
										{
											"begin": 4711,
											"end": 4761,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4701,
											"end": 4761,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4701,
											"end": 4761,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4656,
											"end": 4771,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4137,
											"end": 4778,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4137,
											"end": 4778,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4137,
											"end": 4778,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4137,
											"end": 4778,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4137,
											"end": 4778,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4137,
											"end": 4778,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4784,
											"end": 4901,
											"name": "tag",
											"source": 1,
											"value": "559"
										},
										{
											"begin": 4784,
											"end": 4901,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4842,
											"end": 4849,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4871,
											"end": 4895,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "675"
										},
										{
											"begin": 4889,
											"end": 4894,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4871,
											"end": 4895,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "552"
										},
										{
											"begin": 4871,
											"end": 4895,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4871,
											"end": 4895,
											"name": "tag",
											"source": 1,
											"value": "675"
										},
										{
											"begin": 4871,
											"end": 4895,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4860,
											"end": 4895,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4860,
											"end": 4895,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4784,
											"end": 4901,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4784,
											"end": 4901,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4784,
											"end": 4901,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4784,
											"end": 4901,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4907,
											"end": 5071,
											"name": "tag",
											"source": 1,
											"value": "560"
										},
										{
											"begin": 4907,
											"end": 5071,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5001,
											"end": 5046,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "677"
										},
										{
											"begin": 5040,
											"end": 5045,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5001,
											"end": 5046,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "559"
										},
										{
											"begin": 5001,
											"end": 5046,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5001,
											"end": 5046,
											"name": "tag",
											"source": 1,
											"value": "677"
										},
										{
											"begin": 5001,
											"end": 5046,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4994,
											"end": 4999,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4991,
											"end": 5047,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 4981,
											"end": 5065,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "678"
										},
										{
											"begin": 4981,
											"end": 5065,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5061,
											"end": 5062,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5058,
											"end": 5059,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5051,
											"end": 5063,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 4981,
											"end": 5065,
											"name": "tag",
											"source": 1,
											"value": "678"
										},
										{
											"begin": 4981,
											"end": 5065,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4907,
											"end": 5071,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4907,
											"end": 5071,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5077,
											"end": 5258,
											"name": "tag",
											"source": 1,
											"value": "561"
										},
										{
											"begin": 5077,
											"end": 5258,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5144,
											"end": 5149,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5182,
											"end": 5188,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5169,
											"end": 5189,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 5160,
											"end": 5189,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5160,
											"end": 5189,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5198,
											"end": 5252,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "680"
										},
										{
											"begin": 5246,
											"end": 5251,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5198,
											"end": 5252,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "560"
										},
										{
											"begin": 5198,
											"end": 5252,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5198,
											"end": 5252,
											"name": "tag",
											"source": 1,
											"value": "680"
										},
										{
											"begin": 5198,
											"end": 5252,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5077,
											"end": 5258,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 5077,
											"end": 5258,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5077,
											"end": 5258,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5077,
											"end": 5258,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5077,
											"end": 5258,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5264,
											"end": 5635,
											"name": "tag",
											"source": 1,
											"value": "70"
										},
										{
											"begin": 5264,
											"end": 5635,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5344,
											"end": 5350,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5393,
											"end": 5395,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5381,
											"end": 5390,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5372,
											"end": 5379,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5368,
											"end": 5391,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5364,
											"end": 5396,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 5361,
											"end": 5480,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5361,
											"end": 5480,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "682"
										},
										{
											"begin": 5361,
											"end": 5480,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5399,
											"end": 5478,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "683"
										},
										{
											"begin": 5399,
											"end": 5478,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "542"
										},
										{
											"begin": 5399,
											"end": 5478,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5399,
											"end": 5478,
											"name": "tag",
											"source": 1,
											"value": "683"
										},
										{
											"begin": 5399,
											"end": 5478,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5361,
											"end": 5480,
											"name": "tag",
											"source": 1,
											"value": "682"
										},
										{
											"begin": 5361,
											"end": 5480,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5519,
											"end": 5520,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5544,
											"end": 5618,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "684"
										},
										{
											"begin": 5610,
											"end": 5617,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5601,
											"end": 5607,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5590,
											"end": 5599,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5586,
											"end": 5608,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5544,
											"end": 5618,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "561"
										},
										{
											"begin": 5544,
											"end": 5618,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5544,
											"end": 5618,
											"name": "tag",
											"source": 1,
											"value": "684"
										},
										{
											"begin": 5544,
											"end": 5618,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5534,
											"end": 5618,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5534,
											"end": 5618,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5490,
											"end": 5628,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5264,
											"end": 5635,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 5264,
											"end": 5635,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5264,
											"end": 5635,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5264,
											"end": 5635,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5264,
											"end": 5635,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5641,
											"end": 5752,
											"name": "tag",
											"source": 1,
											"value": "562"
										},
										{
											"begin": 5641,
											"end": 5752,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5693,
											"end": 5700,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5722,
											"end": 5746,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "686"
										},
										{
											"begin": 5740,
											"end": 5745,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5722,
											"end": 5746,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "552"
										},
										{
											"begin": 5722,
											"end": 5746,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5722,
											"end": 5746,
											"name": "tag",
											"source": 1,
											"value": "686"
										},
										{
											"begin": 5722,
											"end": 5746,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5711,
											"end": 5746,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5711,
											"end": 5746,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5641,
											"end": 5752,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5641,
											"end": 5752,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5641,
											"end": 5752,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5641,
											"end": 5752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5758,
											"end": 5910,
											"name": "tag",
											"source": 1,
											"value": "563"
										},
										{
											"begin": 5758,
											"end": 5910,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5846,
											"end": 5885,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "688"
										},
										{
											"begin": 5879,
											"end": 5884,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5846,
											"end": 5885,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "562"
										},
										{
											"begin": 5846,
											"end": 5885,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5846,
											"end": 5885,
											"name": "tag",
											"source": 1,
											"value": "688"
										},
										{
											"begin": 5846,
											"end": 5885,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5839,
											"end": 5844,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5836,
											"end": 5886,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 5826,
											"end": 5904,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "689"
										},
										{
											"begin": 5826,
											"end": 5904,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5900,
											"end": 5901,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5897,
											"end": 5898,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5890,
											"end": 5902,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 5826,
											"end": 5904,
											"name": "tag",
											"source": 1,
											"value": "689"
										},
										{
											"begin": 5826,
											"end": 5904,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5758,
											"end": 5910,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5758,
											"end": 5910,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5916,
											"end": 6085,
											"name": "tag",
											"source": 1,
											"value": "564"
										},
										{
											"begin": 5916,
											"end": 6085,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5977,
											"end": 5982,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6015,
											"end": 6021,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6002,
											"end": 6022,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 5993,
											"end": 6022,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5993,
											"end": 6022,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6031,
											"end": 6079,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "691"
										},
										{
											"begin": 6073,
											"end": 6078,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6031,
											"end": 6079,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "563"
										},
										{
											"begin": 6031,
											"end": 6079,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6031,
											"end": 6079,
											"name": "tag",
											"source": 1,
											"value": "691"
										},
										{
											"begin": 6031,
											"end": 6079,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5916,
											"end": 6085,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 5916,
											"end": 6085,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5916,
											"end": 6085,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5916,
											"end": 6085,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5916,
											"end": 6085,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6091,
											"end": 6595,
											"name": "tag",
											"source": 1,
											"value": "89"
										},
										{
											"begin": 6091,
											"end": 6595,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6174,
											"end": 6180,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6182,
											"end": 6188,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6231,
											"end": 6233,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6219,
											"end": 6228,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6210,
											"end": 6217,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 6206,
											"end": 6229,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 6202,
											"end": 6234,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 6199,
											"end": 6318,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 6199,
											"end": 6318,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "693"
										},
										{
											"begin": 6199,
											"end": 6318,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6237,
											"end": 6316,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "694"
										},
										{
											"begin": 6237,
											"end": 6316,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "542"
										},
										{
											"begin": 6237,
											"end": 6316,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6237,
											"end": 6316,
											"name": "tag",
											"source": 1,
											"value": "694"
										},
										{
											"begin": 6237,
											"end": 6316,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6199,
											"end": 6318,
											"name": "tag",
											"source": 1,
											"value": "693"
										},
										{
											"begin": 6199,
											"end": 6318,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6357,
											"end": 6358,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6382,
											"end": 6450,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "695"
										},
										{
											"begin": 6442,
											"end": 6449,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 6433,
											"end": 6439,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6422,
											"end": 6431,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 6418,
											"end": 6440,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6382,
											"end": 6450,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "564"
										},
										{
											"begin": 6382,
											"end": 6450,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6382,
											"end": 6450,
											"name": "tag",
											"source": 1,
											"value": "695"
										},
										{
											"begin": 6382,
											"end": 6450,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6372,
											"end": 6450,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 6372,
											"end": 6450,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6328,
											"end": 6460,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6499,
											"end": 6501,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6525,
											"end": 6578,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "696"
										},
										{
											"begin": 6570,
											"end": 6577,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 6561,
											"end": 6567,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6550,
											"end": 6559,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 6546,
											"end": 6568,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6525,
											"end": 6578,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "545"
										},
										{
											"begin": 6525,
											"end": 6578,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6525,
											"end": 6578,
											"name": "tag",
											"source": 1,
											"value": "696"
										},
										{
											"begin": 6525,
											"end": 6578,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6515,
											"end": 6578,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6515,
											"end": 6578,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6470,
											"end": 6588,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6091,
											"end": 6595,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 6091,
											"end": 6595,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6091,
											"end": 6595,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 6091,
											"end": 6595,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6091,
											"end": 6595,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6091,
											"end": 6595,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6601,
											"end": 6742,
											"name": "tag",
											"source": 1,
											"value": "565"
										},
										{
											"begin": 6601,
											"end": 6742,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6666,
											"end": 6675,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6699,
											"end": 6736,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "698"
										},
										{
											"begin": 6730,
											"end": 6735,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6699,
											"end": 6736,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "549"
										},
										{
											"begin": 6699,
											"end": 6736,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6699,
											"end": 6736,
											"name": "tag",
											"source": 1,
											"value": "698"
										},
										{
											"begin": 6699,
											"end": 6736,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6686,
											"end": 6736,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6686,
											"end": 6736,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6601,
											"end": 6742,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6601,
											"end": 6742,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6601,
											"end": 6742,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6601,
											"end": 6742,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6748,
											"end": 6909,
											"name": "tag",
											"source": 1,
											"value": "566"
										},
										{
											"begin": 6748,
											"end": 6909,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6850,
											"end": 6902,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "700"
										},
										{
											"begin": 6896,
											"end": 6901,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6850,
											"end": 6902,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "565"
										},
										{
											"begin": 6850,
											"end": 6902,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6850,
											"end": 6902,
											"name": "tag",
											"source": 1,
											"value": "700"
										},
										{
											"begin": 6850,
											"end": 6902,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6845,
											"end": 6848,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6838,
											"end": 6903,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6748,
											"end": 6909,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6748,
											"end": 6909,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6748,
											"end": 6909,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6915,
											"end": 7277,
											"name": "tag",
											"source": 1,
											"value": "107"
										},
										{
											"begin": 6915,
											"end": 7277,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7051,
											"end": 7055,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7089,
											"end": 7091,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7078,
											"end": 7087,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7074,
											"end": 7092,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7066,
											"end": 7092,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7066,
											"end": 7092,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7102,
											"end": 7188,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "702"
										},
										{
											"begin": 7185,
											"end": 7186,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7174,
											"end": 7183,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7170,
											"end": 7187,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7161,
											"end": 7167,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 7102,
											"end": 7188,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "566"
										},
										{
											"begin": 7102,
											"end": 7188,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7102,
											"end": 7188,
											"name": "tag",
											"source": 1,
											"value": "702"
										},
										{
											"begin": 7102,
											"end": 7188,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7198,
											"end": 7270,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "703"
										},
										{
											"begin": 7266,
											"end": 7268,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7255,
											"end": 7264,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7251,
											"end": 7269,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7242,
											"end": 7248,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 7198,
											"end": 7270,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "540"
										},
										{
											"begin": 7198,
											"end": 7270,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7198,
											"end": 7270,
											"name": "tag",
											"source": 1,
											"value": "703"
										},
										{
											"begin": 7198,
											"end": 7270,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6915,
											"end": 7277,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 6915,
											"end": 7277,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 6915,
											"end": 7277,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6915,
											"end": 7277,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6915,
											"end": 7277,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6915,
											"end": 7277,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7283,
											"end": 7896,
											"name": "tag",
											"source": 1,
											"value": "112"
										},
										{
											"begin": 7283,
											"end": 7896,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7357,
											"end": 7363,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7365,
											"end": 7371,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7373,
											"end": 7379,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7422,
											"end": 7424,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 7410,
											"end": 7419,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 7401,
											"end": 7408,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 7397,
											"end": 7420,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 7393,
											"end": 7425,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 7390,
											"end": 7509,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 7390,
											"end": 7509,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "705"
										},
										{
											"begin": 7390,
											"end": 7509,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7428,
											"end": 7507,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "706"
										},
										{
											"begin": 7428,
											"end": 7507,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "542"
										},
										{
											"begin": 7428,
											"end": 7507,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7428,
											"end": 7507,
											"name": "tag",
											"source": 1,
											"value": "706"
										},
										{
											"begin": 7428,
											"end": 7507,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7390,
											"end": 7509,
											"name": "tag",
											"source": 1,
											"value": "705"
										},
										{
											"begin": 7390,
											"end": 7509,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7548,
											"end": 7549,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7573,
											"end": 7626,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "707"
										},
										{
											"begin": 7618,
											"end": 7625,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 7609,
											"end": 7615,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7598,
											"end": 7607,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 7594,
											"end": 7616,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7573,
											"end": 7626,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "545"
										},
										{
											"begin": 7573,
											"end": 7626,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7573,
											"end": 7626,
											"name": "tag",
											"source": 1,
											"value": "707"
										},
										{
											"begin": 7573,
											"end": 7626,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7563,
											"end": 7626,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 7563,
											"end": 7626,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7519,
											"end": 7636,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7675,
											"end": 7677,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7701,
											"end": 7754,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "708"
										},
										{
											"begin": 7746,
											"end": 7753,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 7737,
											"end": 7743,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7726,
											"end": 7735,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 7722,
											"end": 7744,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7701,
											"end": 7754,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "545"
										},
										{
											"begin": 7701,
											"end": 7754,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7701,
											"end": 7754,
											"name": "tag",
											"source": 1,
											"value": "708"
										},
										{
											"begin": 7701,
											"end": 7754,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7691,
											"end": 7754,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 7691,
											"end": 7754,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7646,
											"end": 7764,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7803,
											"end": 7805,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7829,
											"end": 7879,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "709"
										},
										{
											"begin": 7871,
											"end": 7878,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 7862,
											"end": 7868,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7851,
											"end": 7860,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 7847,
											"end": 7869,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7829,
											"end": 7879,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "558"
										},
										{
											"begin": 7829,
											"end": 7879,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7829,
											"end": 7879,
											"name": "tag",
											"source": 1,
											"value": "709"
										},
										{
											"begin": 7829,
											"end": 7879,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7819,
											"end": 7879,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7819,
											"end": 7879,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7774,
											"end": 7889,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7283,
											"end": 7896,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 7283,
											"end": 7896,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7283,
											"end": 7896,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 7283,
											"end": 7896,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7283,
											"end": 7896,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 7283,
											"end": 7896,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7902,
											"end": 8049,
											"name": "tag",
											"source": 1,
											"value": "567"
										},
										{
											"begin": 7902,
											"end": 8049,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7973,
											"end": 7982,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8006,
											"end": 8043,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "711"
										},
										{
											"begin": 8037,
											"end": 8042,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8006,
											"end": 8043,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "549"
										},
										{
											"begin": 8006,
											"end": 8043,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8006,
											"end": 8043,
											"name": "tag",
											"source": 1,
											"value": "711"
										},
										{
											"begin": 8006,
											"end": 8043,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7993,
											"end": 8043,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7993,
											"end": 8043,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7902,
											"end": 8049,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7902,
											"end": 8049,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7902,
											"end": 8049,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7902,
											"end": 8049,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8055,
											"end": 8228,
											"name": "tag",
											"source": 1,
											"value": "568"
										},
										{
											"begin": 8055,
											"end": 8228,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8163,
											"end": 8221,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "713"
										},
										{
											"begin": 8215,
											"end": 8220,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8163,
											"end": 8221,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "567"
										},
										{
											"begin": 8163,
											"end": 8221,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8163,
											"end": 8221,
											"name": "tag",
											"source": 1,
											"value": "713"
										},
										{
											"begin": 8163,
											"end": 8221,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8158,
											"end": 8161,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8151,
											"end": 8222,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8055,
											"end": 8228,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8055,
											"end": 8228,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8055,
											"end": 8228,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8234,
											"end": 8498,
											"name": "tag",
											"source": 1,
											"value": "119"
										},
										{
											"begin": 8234,
											"end": 8498,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8348,
											"end": 8352,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8386,
											"end": 8388,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 8375,
											"end": 8384,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8371,
											"end": 8389,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8363,
											"end": 8389,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8363,
											"end": 8389,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8399,
											"end": 8491,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "715"
										},
										{
											"begin": 8488,
											"end": 8489,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8477,
											"end": 8486,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 8473,
											"end": 8490,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8464,
											"end": 8470,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 8399,
											"end": 8491,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "568"
										},
										{
											"begin": 8399,
											"end": 8491,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8399,
											"end": 8491,
											"name": "tag",
											"source": 1,
											"value": "715"
										},
										{
											"begin": 8399,
											"end": 8491,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8234,
											"end": 8498,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 8234,
											"end": 8498,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8234,
											"end": 8498,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8234,
											"end": 8498,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8234,
											"end": 8498,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8504,
											"end": 8626,
											"name": "tag",
											"source": 1,
											"value": "569"
										},
										{
											"begin": 8504,
											"end": 8626,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8577,
											"end": 8601,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "717"
										},
										{
											"begin": 8595,
											"end": 8600,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8577,
											"end": 8601,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "552"
										},
										{
											"begin": 8577,
											"end": 8601,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8577,
											"end": 8601,
											"name": "tag",
											"source": 1,
											"value": "717"
										},
										{
											"begin": 8577,
											"end": 8601,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8570,
											"end": 8575,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8567,
											"end": 8602,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 8557,
											"end": 8620,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "718"
										},
										{
											"begin": 8557,
											"end": 8620,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 8616,
											"end": 8617,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8613,
											"end": 8614,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 8606,
											"end": 8618,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 8557,
											"end": 8620,
											"name": "tag",
											"source": 1,
											"value": "718"
										},
										{
											"begin": 8557,
											"end": 8620,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8504,
											"end": 8626,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8504,
											"end": 8626,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8632,
											"end": 8771,
											"name": "tag",
											"source": 1,
											"value": "570"
										},
										{
											"begin": 8632,
											"end": 8771,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8678,
											"end": 8683,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8716,
											"end": 8722,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8703,
											"end": 8723,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 8694,
											"end": 8723,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8694,
											"end": 8723,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8732,
											"end": 8765,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "720"
										},
										{
											"begin": 8759,
											"end": 8764,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8732,
											"end": 8765,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "569"
										},
										{
											"begin": 8732,
											"end": 8765,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8732,
											"end": 8765,
											"name": "tag",
											"source": 1,
											"value": "720"
										},
										{
											"begin": 8732,
											"end": 8765,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8632,
											"end": 8771,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 8632,
											"end": 8771,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8632,
											"end": 8771,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8632,
											"end": 8771,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8632,
											"end": 8771,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8777,
											"end": 9106,
											"name": "tag",
											"source": 1,
											"value": "125"
										},
										{
											"begin": 8777,
											"end": 9106,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8836,
											"end": 8842,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8885,
											"end": 8887,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 8873,
											"end": 8882,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8864,
											"end": 8871,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 8860,
											"end": 8883,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 8856,
											"end": 8888,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 8853,
											"end": 8972,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 8853,
											"end": 8972,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "722"
										},
										{
											"begin": 8853,
											"end": 8972,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 8891,
											"end": 8970,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "723"
										},
										{
											"begin": 8891,
											"end": 8970,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "542"
										},
										{
											"begin": 8891,
											"end": 8970,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8891,
											"end": 8970,
											"name": "tag",
											"source": 1,
											"value": "723"
										},
										{
											"begin": 8891,
											"end": 8970,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8853,
											"end": 8972,
											"name": "tag",
											"source": 1,
											"value": "722"
										},
										{
											"begin": 8853,
											"end": 8972,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9011,
											"end": 9012,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9036,
											"end": 9089,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "724"
										},
										{
											"begin": 9081,
											"end": 9088,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 9072,
											"end": 9078,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9061,
											"end": 9070,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 9057,
											"end": 9079,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9036,
											"end": 9089,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "570"
										},
										{
											"begin": 9036,
											"end": 9089,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9036,
											"end": 9089,
											"name": "tag",
											"source": 1,
											"value": "724"
										},
										{
											"begin": 9036,
											"end": 9089,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9026,
											"end": 9089,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9026,
											"end": 9089,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8982,
											"end": 9099,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8777,
											"end": 9106,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 8777,
											"end": 9106,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8777,
											"end": 9106,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8777,
											"end": 9106,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8777,
											"end": 9106,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9112,
											"end": 9230,
											"name": "tag",
											"source": 1,
											"value": "571"
										},
										{
											"begin": 9112,
											"end": 9230,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9199,
											"end": 9223,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "726"
										},
										{
											"begin": 9217,
											"end": 9222,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9199,
											"end": 9223,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "552"
										},
										{
											"begin": 9199,
											"end": 9223,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9199,
											"end": 9223,
											"name": "tag",
											"source": 1,
											"value": "726"
										},
										{
											"begin": 9199,
											"end": 9223,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9194,
											"end": 9197,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9187,
											"end": 9224,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9112,
											"end": 9230,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9112,
											"end": 9230,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9112,
											"end": 9230,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9236,
											"end": 9458,
											"name": "tag",
											"source": 1,
											"value": "131"
										},
										{
											"begin": 9236,
											"end": 9458,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9329,
											"end": 9333,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9367,
											"end": 9369,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 9356,
											"end": 9365,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9352,
											"end": 9370,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9344,
											"end": 9370,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9344,
											"end": 9370,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9380,
											"end": 9451,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "728"
										},
										{
											"begin": 9448,
											"end": 9449,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9437,
											"end": 9446,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 9433,
											"end": 9450,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9424,
											"end": 9430,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 9380,
											"end": 9451,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "571"
										},
										{
											"begin": 9380,
											"end": 9451,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9380,
											"end": 9451,
											"name": "tag",
											"source": 1,
											"value": "728"
										},
										{
											"begin": 9380,
											"end": 9451,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9236,
											"end": 9458,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 9236,
											"end": 9458,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9236,
											"end": 9458,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9236,
											"end": 9458,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9236,
											"end": 9458,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9464,
											"end": 9938,
											"name": "tag",
											"source": 1,
											"value": "138"
										},
										{
											"begin": 9464,
											"end": 9938,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9532,
											"end": 9538,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9540,
											"end": 9546,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 9589,
											"end": 9591,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 9577,
											"end": 9586,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 9568,
											"end": 9575,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 9564,
											"end": 9587,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 9560,
											"end": 9592,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 9557,
											"end": 9676,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 9557,
											"end": 9676,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "730"
										},
										{
											"begin": 9557,
											"end": 9676,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 9595,
											"end": 9674,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "731"
										},
										{
											"begin": 9595,
											"end": 9674,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "542"
										},
										{
											"begin": 9595,
											"end": 9674,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9595,
											"end": 9674,
											"name": "tag",
											"source": 1,
											"value": "731"
										},
										{
											"begin": 9595,
											"end": 9674,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9557,
											"end": 9676,
											"name": "tag",
											"source": 1,
											"value": "730"
										},
										{
											"begin": 9557,
											"end": 9676,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9715,
											"end": 9716,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9740,
											"end": 9793,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "732"
										},
										{
											"begin": 9785,
											"end": 9792,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 9776,
											"end": 9782,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9765,
											"end": 9774,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 9761,
											"end": 9783,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9740,
											"end": 9793,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "545"
										},
										{
											"begin": 9740,
											"end": 9793,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9740,
											"end": 9793,
											"name": "tag",
											"source": 1,
											"value": "732"
										},
										{
											"begin": 9740,
											"end": 9793,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9730,
											"end": 9793,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 9730,
											"end": 9793,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9686,
											"end": 9803,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9842,
											"end": 9844,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 9868,
											"end": 9921,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "733"
										},
										{
											"begin": 9913,
											"end": 9920,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 9904,
											"end": 9910,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9893,
											"end": 9902,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 9889,
											"end": 9911,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9868,
											"end": 9921,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "570"
										},
										{
											"begin": 9868,
											"end": 9921,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9868,
											"end": 9921,
											"name": "tag",
											"source": 1,
											"value": "733"
										},
										{
											"begin": 9868,
											"end": 9921,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9858,
											"end": 9921,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9858,
											"end": 9921,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9813,
											"end": 9931,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9464,
											"end": 9938,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 9464,
											"end": 9938,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9464,
											"end": 9938,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 9464,
											"end": 9938,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9464,
											"end": 9938,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9464,
											"end": 9938,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9944,
											"end": 10276,
											"name": "tag",
											"source": 1,
											"value": "141"
										},
										{
											"begin": 9944,
											"end": 10276,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10065,
											"end": 10069,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10103,
											"end": 10105,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10092,
											"end": 10101,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10088,
											"end": 10106,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10080,
											"end": 10106,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10080,
											"end": 10106,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10116,
											"end": 10187,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "735"
										},
										{
											"begin": 10184,
											"end": 10185,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10173,
											"end": 10182,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 10169,
											"end": 10186,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10160,
											"end": 10166,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 10116,
											"end": 10187,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "540"
										},
										{
											"begin": 10116,
											"end": 10187,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10116,
											"end": 10187,
											"name": "tag",
											"source": 1,
											"value": "735"
										},
										{
											"begin": 10116,
											"end": 10187,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10197,
											"end": 10269,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "736"
										},
										{
											"begin": 10265,
											"end": 10267,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 10254,
											"end": 10263,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 10250,
											"end": 10268,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10241,
											"end": 10247,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 10197,
											"end": 10269,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "540"
										},
										{
											"begin": 10197,
											"end": 10269,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10197,
											"end": 10269,
											"name": "tag",
											"source": 1,
											"value": "736"
										},
										{
											"begin": 10197,
											"end": 10269,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9944,
											"end": 10276,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 9944,
											"end": 10276,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 9944,
											"end": 10276,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9944,
											"end": 10276,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9944,
											"end": 10276,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9944,
											"end": 10276,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10282,
											"end": 10532,
											"name": "tag",
											"source": 1,
											"value": "145"
										},
										{
											"begin": 10282,
											"end": 10532,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10389,
											"end": 10393,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10427,
											"end": 10429,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 10416,
											"end": 10425,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10412,
											"end": 10430,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10404,
											"end": 10430,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10404,
											"end": 10430,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10440,
											"end": 10525,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "738"
										},
										{
											"begin": 10522,
											"end": 10523,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10511,
											"end": 10520,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 10507,
											"end": 10524,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10498,
											"end": 10504,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 10440,
											"end": 10525,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "551"
										},
										{
											"begin": 10440,
											"end": 10525,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10440,
											"end": 10525,
											"name": "tag",
											"source": 1,
											"value": "738"
										},
										{
											"begin": 10440,
											"end": 10525,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10282,
											"end": 10532,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 10282,
											"end": 10532,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10282,
											"end": 10532,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10282,
											"end": 10532,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10282,
											"end": 10532,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10538,
											"end": 10718,
											"name": "tag",
											"source": 1,
											"value": "170"
										},
										{
											"begin": 10538,
											"end": 10718,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10586,
											"end": 10663,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10583,
											"end": 10584,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10576,
											"end": 10664,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10683,
											"end": 10687,
											"name": "PUSH",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 10680,
											"end": 10681,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 10673,
											"end": 10688,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10707,
											"end": 10711,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 10704,
											"end": 10705,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10697,
											"end": 10712,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 10724,
											"end": 10893,
											"name": "tag",
											"source": 1,
											"value": "572"
										},
										{
											"begin": 10724,
											"end": 10893,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10808,
											"end": 10819,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10842,
											"end": 10848,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10837,
											"end": 10840,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10830,
											"end": 10849,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10882,
											"end": 10886,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 10877,
											"end": 10880,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10873,
											"end": 10887,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10858,
											"end": 10887,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10858,
											"end": 10887,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10724,
											"end": 10893,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 10724,
											"end": 10893,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10724,
											"end": 10893,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10724,
											"end": 10893,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10724,
											"end": 10893,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10899,
											"end": 11067,
											"name": "tag",
											"source": 1,
											"value": "573"
										},
										{
											"begin": 10899,
											"end": 11067,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11039,
											"end": 11059,
											"name": "PUSH",
											"source": 1,
											"value": "77697468647261773A206E6F7420676F6F640000000000000000000000000000"
										},
										{
											"begin": 11035,
											"end": 11036,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11027,
											"end": 11033,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11023,
											"end": 11037,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11016,
											"end": 11060,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10899,
											"end": 11067,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10899,
											"end": 11067,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11073,
											"end": 11439,
											"name": "tag",
											"source": 1,
											"value": "574"
										},
										{
											"begin": 11073,
											"end": 11439,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11215,
											"end": 11218,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11236,
											"end": 11303,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "743"
										},
										{
											"begin": 11300,
											"end": 11302,
											"name": "PUSH",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 11295,
											"end": 11298,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 11236,
											"end": 11303,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "572"
										},
										{
											"begin": 11236,
											"end": 11303,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11236,
											"end": 11303,
											"name": "tag",
											"source": 1,
											"value": "743"
										},
										{
											"begin": 11236,
											"end": 11303,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11229,
											"end": 11303,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 11229,
											"end": 11303,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11312,
											"end": 11405,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "744"
										},
										{
											"begin": 11401,
											"end": 11404,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11312,
											"end": 11405,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "573"
										},
										{
											"begin": 11312,
											"end": 11405,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11312,
											"end": 11405,
											"name": "tag",
											"source": 1,
											"value": "744"
										},
										{
											"begin": 11312,
											"end": 11405,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11430,
											"end": 11432,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 11425,
											"end": 11428,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11421,
											"end": 11433,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11414,
											"end": 11433,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11414,
											"end": 11433,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11073,
											"end": 11439,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 11073,
											"end": 11439,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11073,
											"end": 11439,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11073,
											"end": 11439,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11445,
											"end": 11864,
											"name": "tag",
											"source": 1,
											"value": "174"
										},
										{
											"begin": 11445,
											"end": 11864,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11611,
											"end": 11615,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11649,
											"end": 11651,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 11638,
											"end": 11647,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11634,
											"end": 11652,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11626,
											"end": 11652,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11626,
											"end": 11652,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11698,
											"end": 11707,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11692,
											"end": 11696,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11688,
											"end": 11708,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 11684,
											"end": 11685,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11673,
											"end": 11682,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 11669,
											"end": 11686,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11662,
											"end": 11709,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11726,
											"end": 11857,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "746"
										},
										{
											"begin": 11852,
											"end": 11856,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11726,
											"end": 11857,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "574"
										},
										{
											"begin": 11726,
											"end": 11857,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11726,
											"end": 11857,
											"name": "tag",
											"source": 1,
											"value": "746"
										},
										{
											"begin": 11726,
											"end": 11857,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11718,
											"end": 11857,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11718,
											"end": 11857,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11445,
											"end": 11864,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 11445,
											"end": 11864,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11445,
											"end": 11864,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11445,
											"end": 11864,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11870,
											"end": 12013,
											"name": "tag",
											"source": 1,
											"value": "575"
										},
										{
											"begin": 11870,
											"end": 12013,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11927,
											"end": 11932,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11958,
											"end": 11964,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11952,
											"end": 11965,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 11943,
											"end": 11965,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11943,
											"end": 11965,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11974,
											"end": 12007,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "748"
										},
										{
											"begin": 12001,
											"end": 12006,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11974,
											"end": 12007,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "544"
										},
										{
											"begin": 11974,
											"end": 12007,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11974,
											"end": 12007,
											"name": "tag",
											"source": 1,
											"value": "748"
										},
										{
											"begin": 11974,
											"end": 12007,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11870,
											"end": 12013,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 11870,
											"end": 12013,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 11870,
											"end": 12013,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11870,
											"end": 12013,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11870,
											"end": 12013,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12019,
											"end": 12370,
											"name": "tag",
											"source": 1,
											"value": "202"
										},
										{
											"begin": 12019,
											"end": 12370,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12089,
											"end": 12095,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 12138,
											"end": 12140,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 12126,
											"end": 12135,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12117,
											"end": 12124,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 12113,
											"end": 12136,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 12109,
											"end": 12141,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 12106,
											"end": 12225,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 12106,
											"end": 12225,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "750"
										},
										{
											"begin": 12106,
											"end": 12225,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 12144,
											"end": 12223,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "751"
										},
										{
											"begin": 12144,
											"end": 12223,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "542"
										},
										{
											"begin": 12144,
											"end": 12223,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12144,
											"end": 12223,
											"name": "tag",
											"source": 1,
											"value": "751"
										},
										{
											"begin": 12144,
											"end": 12223,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12106,
											"end": 12225,
											"name": "tag",
											"source": 1,
											"value": "750"
										},
										{
											"begin": 12106,
											"end": 12225,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12264,
											"end": 12265,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 12289,
											"end": 12353,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "752"
										},
										{
											"begin": 12345,
											"end": 12352,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 12336,
											"end": 12342,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12325,
											"end": 12334,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 12321,
											"end": 12343,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12289,
											"end": 12353,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "575"
										},
										{
											"begin": 12289,
											"end": 12353,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12289,
											"end": 12353,
											"name": "tag",
											"source": 1,
											"value": "752"
										},
										{
											"begin": 12289,
											"end": 12353,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12279,
											"end": 12353,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 12279,
											"end": 12353,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12235,
											"end": 12363,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12019,
											"end": 12370,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 12019,
											"end": 12370,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 12019,
											"end": 12370,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12019,
											"end": 12370,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12019,
											"end": 12370,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12376,
											"end": 12545,
											"name": "tag",
											"source": 1,
											"value": "576"
										},
										{
											"begin": 12376,
											"end": 12545,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12516,
											"end": 12537,
											"name": "PUSH",
											"source": 1,
											"value": "506F776572206973206E6F7420656E6F75676800000000000000000000000000"
										},
										{
											"begin": 12512,
											"end": 12513,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 12504,
											"end": 12510,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12500,
											"end": 12514,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12493,
											"end": 12538,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12376,
											"end": 12545,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12376,
											"end": 12545,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12551,
											"end": 12917,
											"name": "tag",
											"source": 1,
											"value": "577"
										},
										{
											"begin": 12551,
											"end": 12917,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12693,
											"end": 12696,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 12714,
											"end": 12781,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "755"
										},
										{
											"begin": 12778,
											"end": 12780,
											"name": "PUSH",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 12773,
											"end": 12776,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 12714,
											"end": 12781,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "572"
										},
										{
											"begin": 12714,
											"end": 12781,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12714,
											"end": 12781,
											"name": "tag",
											"source": 1,
											"value": "755"
										},
										{
											"begin": 12714,
											"end": 12781,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12707,
											"end": 12781,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 12707,
											"end": 12781,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12790,
											"end": 12883,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "756"
										},
										{
											"begin": 12879,
											"end": 12882,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12790,
											"end": 12883,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "576"
										},
										{
											"begin": 12790,
											"end": 12883,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12790,
											"end": 12883,
											"name": "tag",
											"source": 1,
											"value": "756"
										},
										{
											"begin": 12790,
											"end": 12883,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12908,
											"end": 12910,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 12903,
											"end": 12906,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12899,
											"end": 12911,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12892,
											"end": 12911,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12892,
											"end": 12911,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12551,
											"end": 12917,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 12551,
											"end": 12917,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12551,
											"end": 12917,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12551,
											"end": 12917,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12923,
											"end": 13342,
											"name": "tag",
											"source": 1,
											"value": "226"
										},
										{
											"begin": 12923,
											"end": 13342,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13089,
											"end": 13093,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 13127,
											"end": 13129,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 13116,
											"end": 13125,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 13112,
											"end": 13130,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13104,
											"end": 13130,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13104,
											"end": 13130,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13176,
											"end": 13185,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13170,
											"end": 13174,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13166,
											"end": 13186,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 13162,
											"end": 13163,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 13151,
											"end": 13160,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 13147,
											"end": 13164,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13140,
											"end": 13187,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13204,
											"end": 13335,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "758"
										},
										{
											"begin": 13330,
											"end": 13334,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13204,
											"end": 13335,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "577"
										},
										{
											"begin": 13204,
											"end": 13335,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 13204,
											"end": 13335,
											"name": "tag",
											"source": 1,
											"value": "758"
										},
										{
											"begin": 13204,
											"end": 13335,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13196,
											"end": 13335,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13196,
											"end": 13335,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12923,
											"end": 13342,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 12923,
											"end": 13342,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12923,
											"end": 13342,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12923,
											"end": 13342,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 13348,
											"end": 13530,
											"name": "tag",
											"source": 1,
											"value": "578"
										},
										{
											"begin": 13348,
											"end": 13530,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13488,
											"end": 13522,
											"name": "PUSH",
											"source": 1,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 13484,
											"end": 13485,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 13476,
											"end": 13482,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 13472,
											"end": 13486,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13465,
											"end": 13523,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13348,
											"end": 13530,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13348,
											"end": 13530,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 13536,
											"end": 13902,
											"name": "tag",
											"source": 1,
											"value": "579"
										},
										{
											"begin": 13536,
											"end": 13902,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13678,
											"end": 13681,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 13699,
											"end": 13766,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "761"
										},
										{
											"begin": 13763,
											"end": 13765,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 13758,
											"end": 13761,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 13699,
											"end": 13766,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "572"
										},
										{
											"begin": 13699,
											"end": 13766,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 13699,
											"end": 13766,
											"name": "tag",
											"source": 1,
											"value": "761"
										},
										{
											"begin": 13699,
											"end": 13766,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13692,
											"end": 13766,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 13692,
											"end": 13766,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13775,
											"end": 13868,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "762"
										},
										{
											"begin": 13864,
											"end": 13867,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 13775,
											"end": 13868,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "578"
										},
										{
											"begin": 13775,
											"end": 13868,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 13775,
											"end": 13868,
											"name": "tag",
											"source": 1,
											"value": "762"
										},
										{
											"begin": 13775,
											"end": 13868,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13893,
											"end": 13895,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 13888,
											"end": 13891,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 13884,
											"end": 13896,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13877,
											"end": 13896,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13877,
											"end": 13896,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13536,
											"end": 13902,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 13536,
											"end": 13902,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13536,
											"end": 13902,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13536,
											"end": 13902,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 13908,
											"end": 14327,
											"name": "tag",
											"source": 1,
											"value": "238"
										},
										{
											"begin": 13908,
											"end": 14327,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14074,
											"end": 14078,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 14112,
											"end": 14114,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 14101,
											"end": 14110,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 14097,
											"end": 14115,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14089,
											"end": 14115,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14089,
											"end": 14115,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14161,
											"end": 14170,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 14155,
											"end": 14159,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 14151,
											"end": 14171,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 14147,
											"end": 14148,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 14136,
											"end": 14145,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 14132,
											"end": 14149,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14125,
											"end": 14172,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 14189,
											"end": 14320,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "764"
										},
										{
											"begin": 14315,
											"end": 14319,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 14189,
											"end": 14320,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "579"
										},
										{
											"begin": 14189,
											"end": 14320,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 14189,
											"end": 14320,
											"name": "tag",
											"source": 1,
											"value": "764"
										},
										{
											"begin": 14189,
											"end": 14320,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14181,
											"end": 14320,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14181,
											"end": 14320,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13908,
											"end": 14327,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 13908,
											"end": 14327,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13908,
											"end": 14327,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13908,
											"end": 14327,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 14333,
											"end": 14510,
											"name": "tag",
											"source": 1,
											"value": "580"
										},
										{
											"begin": 14333,
											"end": 14510,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14473,
											"end": 14502,
											"name": "PUSH",
											"source": 1,
											"value": "776974686472617720506F77657220627920756E7374616B696E670000000000"
										},
										{
											"begin": 14469,
											"end": 14470,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 14461,
											"end": 14467,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 14457,
											"end": 14471,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14450,
											"end": 14503,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 14333,
											"end": 14510,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14333,
											"end": 14510,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 14516,
											"end": 14882,
											"name": "tag",
											"source": 1,
											"value": "581"
										},
										{
											"begin": 14516,
											"end": 14882,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14658,
											"end": 14661,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 14679,
											"end": 14746,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "767"
										},
										{
											"begin": 14743,
											"end": 14745,
											"name": "PUSH",
											"source": 1,
											"value": "1B"
										},
										{
											"begin": 14738,
											"end": 14741,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 14679,
											"end": 14746,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "572"
										},
										{
											"begin": 14679,
											"end": 14746,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 14679,
											"end": 14746,
											"name": "tag",
											"source": 1,
											"value": "767"
										},
										{
											"begin": 14679,
											"end": 14746,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14672,
											"end": 14746,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 14672,
											"end": 14746,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14755,
											"end": 14848,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "768"
										},
										{
											"begin": 14844,
											"end": 14847,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 14755,
											"end": 14848,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "580"
										},
										{
											"begin": 14755,
											"end": 14848,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 14755,
											"end": 14848,
											"name": "tag",
											"source": 1,
											"value": "768"
										},
										{
											"begin": 14755,
											"end": 14848,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14873,
											"end": 14875,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 14868,
											"end": 14871,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 14864,
											"end": 14876,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14857,
											"end": 14876,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14857,
											"end": 14876,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14516,
											"end": 14882,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 14516,
											"end": 14882,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14516,
											"end": 14882,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14516,
											"end": 14882,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 14888,
											"end": 15307,
											"name": "tag",
											"source": 1,
											"value": "279"
										},
										{
											"begin": 14888,
											"end": 15307,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15054,
											"end": 15058,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 15092,
											"end": 15094,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 15081,
											"end": 15090,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 15077,
											"end": 15095,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15069,
											"end": 15095,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 15069,
											"end": 15095,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15141,
											"end": 15150,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 15135,
											"end": 15139,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 15131,
											"end": 15151,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 15127,
											"end": 15128,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 15116,
											"end": 15125,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 15112,
											"end": 15129,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15105,
											"end": 15152,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 15169,
											"end": 15300,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "770"
										},
										{
											"begin": 15295,
											"end": 15299,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 15169,
											"end": 15300,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "581"
										},
										{
											"begin": 15169,
											"end": 15300,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 15169,
											"end": 15300,
											"name": "tag",
											"source": 1,
											"value": "770"
										},
										{
											"begin": 15169,
											"end": 15300,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15161,
											"end": 15300,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 15161,
											"end": 15300,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14888,
											"end": 15307,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 14888,
											"end": 15307,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14888,
											"end": 15307,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14888,
											"end": 15307,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 15313,
											"end": 15483,
											"name": "tag",
											"source": 1,
											"value": "582"
										},
										{
											"begin": 15313,
											"end": 15483,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15453,
											"end": 15475,
											"name": "PUSH",
											"source": 1,
											"value": "6D6967726174653A206E6F206D69677261746F72000000000000000000000000"
										},
										{
											"begin": 15449,
											"end": 15450,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 15441,
											"end": 15447,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 15437,
											"end": 15451,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15430,
											"end": 15476,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 15313,
											"end": 15483,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15313,
											"end": 15483,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 15489,
											"end": 15855,
											"name": "tag",
											"source": 1,
											"value": "583"
										},
										{
											"begin": 15489,
											"end": 15855,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15631,
											"end": 15634,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 15652,
											"end": 15719,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "773"
										},
										{
											"begin": 15716,
											"end": 15718,
											"name": "PUSH",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 15711,
											"end": 15714,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 15652,
											"end": 15719,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "572"
										},
										{
											"begin": 15652,
											"end": 15719,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 15652,
											"end": 15719,
											"name": "tag",
											"source": 1,
											"value": "773"
										},
										{
											"begin": 15652,
											"end": 15719,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15645,
											"end": 15719,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 15645,
											"end": 15719,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15728,
											"end": 15821,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "774"
										},
										{
											"begin": 15817,
											"end": 15820,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 15728,
											"end": 15821,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "582"
										},
										{
											"begin": 15728,
											"end": 15821,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 15728,
											"end": 15821,
											"name": "tag",
											"source": 1,
											"value": "774"
										},
										{
											"begin": 15728,
											"end": 15821,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15846,
											"end": 15848,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 15841,
											"end": 15844,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 15837,
											"end": 15849,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15830,
											"end": 15849,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 15830,
											"end": 15849,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15489,
											"end": 15855,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 15489,
											"end": 15855,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 15489,
											"end": 15855,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15489,
											"end": 15855,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 15861,
											"end": 16280,
											"name": "tag",
											"source": 1,
											"value": "299"
										},
										{
											"begin": 15861,
											"end": 16280,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 16027,
											"end": 16031,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 16065,
											"end": 16067,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 16054,
											"end": 16063,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 16050,
											"end": 16068,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16042,
											"end": 16068,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 16042,
											"end": 16068,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16114,
											"end": 16123,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 16108,
											"end": 16112,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 16104,
											"end": 16124,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 16100,
											"end": 16101,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 16089,
											"end": 16098,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 16085,
											"end": 16102,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16078,
											"end": 16125,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 16142,
											"end": 16273,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "776"
										},
										{
											"begin": 16268,
											"end": 16272,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 16142,
											"end": 16273,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "583"
										},
										{
											"begin": 16142,
											"end": 16273,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 16142,
											"end": 16273,
											"name": "tag",
											"source": 1,
											"value": "776"
										},
										{
											"begin": 16142,
											"end": 16273,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 16134,
											"end": 16273,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 16134,
											"end": 16273,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15861,
											"end": 16280,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 15861,
											"end": 16280,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 15861,
											"end": 16280,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15861,
											"end": 16280,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 16286,
											"end": 16457,
											"name": "tag",
											"source": 1,
											"value": "584"
										},
										{
											"begin": 16286,
											"end": 16457,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 16357,
											"end": 16362,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 16388,
											"end": 16394,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 16382,
											"end": 16395,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 16373,
											"end": 16395,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 16373,
											"end": 16395,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16404,
											"end": 16451,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "778"
										},
										{
											"begin": 16445,
											"end": 16450,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 16404,
											"end": 16451,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "554"
										},
										{
											"begin": 16404,
											"end": 16451,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 16404,
											"end": 16451,
											"name": "tag",
											"source": 1,
											"value": "778"
										},
										{
											"begin": 16404,
											"end": 16451,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 16286,
											"end": 16457,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 16286,
											"end": 16457,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 16286,
											"end": 16457,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16286,
											"end": 16457,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16286,
											"end": 16457,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 16463,
											"end": 16842,
											"name": "tag",
											"source": 1,
											"value": "313"
										},
										{
											"begin": 16463,
											"end": 16842,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 16547,
											"end": 16553,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 16596,
											"end": 16598,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 16584,
											"end": 16593,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 16575,
											"end": 16582,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 16571,
											"end": 16594,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 16567,
											"end": 16599,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 16564,
											"end": 16683,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 16564,
											"end": 16683,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "780"
										},
										{
											"begin": 16564,
											"end": 16683,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 16602,
											"end": 16681,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "781"
										},
										{
											"begin": 16602,
											"end": 16681,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "542"
										},
										{
											"begin": 16602,
											"end": 16681,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 16602,
											"end": 16681,
											"name": "tag",
											"source": 1,
											"value": "781"
										},
										{
											"begin": 16602,
											"end": 16681,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 16564,
											"end": 16683,
											"name": "tag",
											"source": 1,
											"value": "780"
										},
										{
											"begin": 16564,
											"end": 16683,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 16722,
											"end": 16723,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 16747,
											"end": 16825,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "782"
										},
										{
											"begin": 16817,
											"end": 16824,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 16808,
											"end": 16814,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 16797,
											"end": 16806,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 16793,
											"end": 16815,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16747,
											"end": 16825,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "584"
										},
										{
											"begin": 16747,
											"end": 16825,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 16747,
											"end": 16825,
											"name": "tag",
											"source": 1,
											"value": "782"
										},
										{
											"begin": 16747,
											"end": 16825,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 16737,
											"end": 16825,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 16737,
											"end": 16825,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16693,
											"end": 16835,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16463,
											"end": 16842,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 16463,
											"end": 16842,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 16463,
											"end": 16842,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16463,
											"end": 16842,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16463,
											"end": 16842,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 16848,
											"end": 17010,
											"name": "tag",
											"source": 1,
											"value": "585"
										},
										{
											"begin": 16848,
											"end": 17010,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 16988,
											"end": 17002,
											"name": "PUSH",
											"source": 1,
											"value": "6D6967726174653A206261640000000000000000000000000000000000000000"
										},
										{
											"begin": 16984,
											"end": 16985,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 16976,
											"end": 16982,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 16972,
											"end": 16986,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16965,
											"end": 17003,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 16848,
											"end": 17010,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16848,
											"end": 17010,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 17016,
											"end": 17382,
											"name": "tag",
											"source": 1,
											"value": "586"
										},
										{
											"begin": 17016,
											"end": 17382,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 17158,
											"end": 17161,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 17179,
											"end": 17246,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "785"
										},
										{
											"begin": 17243,
											"end": 17245,
											"name": "PUSH",
											"source": 1,
											"value": "C"
										},
										{
											"begin": 17238,
											"end": 17241,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 17179,
											"end": 17246,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "572"
										},
										{
											"begin": 17179,
											"end": 17246,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 17179,
											"end": 17246,
											"name": "tag",
											"source": 1,
											"value": "785"
										},
										{
											"begin": 17179,
											"end": 17246,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 17172,
											"end": 17246,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 17172,
											"end": 17246,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 17255,
											"end": 17348,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "786"
										},
										{
											"begin": 17344,
											"end": 17347,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 17255,
											"end": 17348,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "585"
										},
										{
											"begin": 17255,
											"end": 17348,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 17255,
											"end": 17348,
											"name": "tag",
											"source": 1,
											"value": "786"
										},
										{
											"begin": 17255,
											"end": 17348,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 17373,
											"end": 17375,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 17368,
											"end": 17371,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 17364,
											"end": 17376,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 17357,
											"end": 17376,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 17357,
											"end": 17376,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 17016,
											"end": 17382,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 17016,
											"end": 17382,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 17016,
											"end": 17382,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 17016,
											"end": 17382,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 17388,
											"end": 17807,
											"name": "tag",
											"source": 1,
											"value": "320"
										},
										{
											"begin": 17388,
											"end": 17807,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 17554,
											"end": 17558,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 17592,
											"end": 17594,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 17581,
											"end": 17590,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 17577,
											"end": 17595,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 17569,
											"end": 17595,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 17569,
											"end": 17595,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 17641,
											"end": 17650,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 17635,
											"end": 17639,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 17631,
											"end": 17651,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 17627,
											"end": 17628,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 17616,
											"end": 17625,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 17612,
											"end": 17629,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 17605,
											"end": 17652,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 17669,
											"end": 17800,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "788"
										},
										{
											"begin": 17795,
											"end": 17799,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 17669,
											"end": 17800,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "586"
										},
										{
											"begin": 17669,
											"end": 17800,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 17669,
											"end": 17800,
											"name": "tag",
											"source": 1,
											"value": "788"
										},
										{
											"begin": 17669,
											"end": 17800,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 17661,
											"end": 17800,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 17661,
											"end": 17800,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 17388,
											"end": 17807,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 17388,
											"end": 17807,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 17388,
											"end": 17807,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 17388,
											"end": 17807,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 17813,
											"end": 17993,
											"name": "tag",
											"source": 1,
											"value": "587"
										},
										{
											"begin": 17813,
											"end": 17993,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 17861,
											"end": 17938,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 17858,
											"end": 17859,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 17851,
											"end": 17939,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 17958,
											"end": 17962,
											"name": "PUSH",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 17955,
											"end": 17956,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 17948,
											"end": 17963,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 17982,
											"end": 17986,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 17979,
											"end": 17980,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 17972,
											"end": 17987,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 17999,
											"end": 18232,
											"name": "tag",
											"source": 1,
											"value": "365"
										},
										{
											"begin": 17999,
											"end": 18232,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 18038,
											"end": 18041,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 18061,
											"end": 18085,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "791"
										},
										{
											"begin": 18079,
											"end": 18084,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 18061,
											"end": 18085,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "539"
										},
										{
											"begin": 18061,
											"end": 18085,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 18061,
											"end": 18085,
											"name": "tag",
											"source": 1,
											"value": "791"
										},
										{
											"begin": 18061,
											"end": 18085,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 18052,
											"end": 18085,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 18052,
											"end": 18085,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 18107,
											"end": 18173,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 18100,
											"end": 18105,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 18097,
											"end": 18174,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 18094,
											"end": 18197,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "792"
										},
										{
											"begin": 18094,
											"end": 18197,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 18177,
											"end": 18195,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "793"
										},
										{
											"begin": 18177,
											"end": 18195,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "587"
										},
										{
											"begin": 18177,
											"end": 18195,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 18177,
											"end": 18195,
											"name": "tag",
											"source": 1,
											"value": "793"
										},
										{
											"begin": 18177,
											"end": 18195,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 18094,
											"end": 18197,
											"name": "tag",
											"source": 1,
											"value": "792"
										},
										{
											"begin": 18094,
											"end": 18197,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 18224,
											"end": 18225,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 18217,
											"end": 18222,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 18213,
											"end": 18226,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 18206,
											"end": 18226,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 18206,
											"end": 18226,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 17999,
											"end": 18232,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 17999,
											"end": 18232,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 17999,
											"end": 18232,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 17999,
											"end": 18232,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 18238,
											"end": 18412,
											"name": "tag",
											"source": 1,
											"value": "588"
										},
										{
											"begin": 18238,
											"end": 18412,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 18378,
											"end": 18404,
											"name": "PUSH",
											"source": 1,
											"value": "6465706F73697420506F776572206279207374616B696E670000000000000000"
										},
										{
											"begin": 18374,
											"end": 18375,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 18366,
											"end": 18372,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 18362,
											"end": 18376,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 18355,
											"end": 18405,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 18238,
											"end": 18412,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 18238,
											"end": 18412,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 18418,
											"end": 18784,
											"name": "tag",
											"source": 1,
											"value": "589"
										},
										{
											"begin": 18418,
											"end": 18784,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 18560,
											"end": 18563,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 18581,
											"end": 18648,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "796"
										},
										{
											"begin": 18645,
											"end": 18647,
											"name": "PUSH",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 18640,
											"end": 18643,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 18581,
											"end": 18648,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "572"
										},
										{
											"begin": 18581,
											"end": 18648,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 18581,
											"end": 18648,
											"name": "tag",
											"source": 1,
											"value": "796"
										},
										{
											"begin": 18581,
											"end": 18648,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 18574,
											"end": 18648,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 18574,
											"end": 18648,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 18657,
											"end": 18750,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "797"
										},
										{
											"begin": 18746,
											"end": 18749,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 18657,
											"end": 18750,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "588"
										},
										{
											"begin": 18657,
											"end": 18750,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 18657,
											"end": 18750,
											"name": "tag",
											"source": 1,
											"value": "797"
										},
										{
											"begin": 18657,
											"end": 18750,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 18775,
											"end": 18777,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 18770,
											"end": 18773,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 18766,
											"end": 18778,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 18759,
											"end": 18778,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 18759,
											"end": 18778,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 18418,
											"end": 18784,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 18418,
											"end": 18784,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 18418,
											"end": 18784,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 18418,
											"end": 18784,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 18790,
											"end": 19209,
											"name": "tag",
											"source": 1,
											"value": "404"
										},
										{
											"begin": 18790,
											"end": 19209,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 18956,
											"end": 18960,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 18994,
											"end": 18996,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 18983,
											"end": 18992,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 18979,
											"end": 18997,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 18971,
											"end": 18997,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 18971,
											"end": 18997,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 19043,
											"end": 19052,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 19037,
											"end": 19041,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 19033,
											"end": 19053,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 19029,
											"end": 19030,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 19018,
											"end": 19027,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 19014,
											"end": 19031,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 19007,
											"end": 19054,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 19071,
											"end": 19202,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "799"
										},
										{
											"begin": 19197,
											"end": 19201,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 19071,
											"end": 19202,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "589"
										},
										{
											"begin": 19071,
											"end": 19202,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 19071,
											"end": 19202,
											"name": "tag",
											"source": 1,
											"value": "799"
										},
										{
											"begin": 19071,
											"end": 19202,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 19063,
											"end": 19202,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 19063,
											"end": 19202,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 18790,
											"end": 19209,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 18790,
											"end": 19209,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 18790,
											"end": 19209,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 18790,
											"end": 19209,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 19215,
											"end": 19440,
											"name": "tag",
											"source": 1,
											"value": "590"
										},
										{
											"begin": 19215,
											"end": 19440,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 19355,
											"end": 19389,
											"name": "PUSH",
											"source": 1,
											"value": "4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
										},
										{
											"begin": 19351,
											"end": 19352,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 19343,
											"end": 19349,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 19339,
											"end": 19353,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 19332,
											"end": 19390,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 19424,
											"end": 19432,
											"name": "PUSH",
											"source": 1,
											"value": "6464726573730000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 19419,
											"end": 19421,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 19411,
											"end": 19417,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 19407,
											"end": 19422,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 19400,
											"end": 19433,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 19215,
											"end": 19440,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 19215,
											"end": 19440,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 19446,
											"end": 19812,
											"name": "tag",
											"source": 1,
											"value": "591"
										},
										{
											"begin": 19446,
											"end": 19812,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 19588,
											"end": 19591,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 19609,
											"end": 19676,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "802"
										},
										{
											"begin": 19673,
											"end": 19675,
											"name": "PUSH",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 19668,
											"end": 19671,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 19609,
											"end": 19676,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "572"
										},
										{
											"begin": 19609,
											"end": 19676,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 19609,
											"end": 19676,
											"name": "tag",
											"source": 1,
											"value": "802"
										},
										{
											"begin": 19609,
											"end": 19676,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 19602,
											"end": 19676,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 19602,
											"end": 19676,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 19685,
											"end": 19778,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "803"
										},
										{
											"begin": 19774,
											"end": 19777,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 19685,
											"end": 19778,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "590"
										},
										{
											"begin": 19685,
											"end": 19778,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 19685,
											"end": 19778,
											"name": "tag",
											"source": 1,
											"value": "803"
										},
										{
											"begin": 19685,
											"end": 19778,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 19803,
											"end": 19805,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 19798,
											"end": 19801,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 19794,
											"end": 19806,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 19787,
											"end": 19806,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 19787,
											"end": 19806,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 19446,
											"end": 19812,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 19446,
											"end": 19812,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 19446,
											"end": 19812,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 19446,
											"end": 19812,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 19818,
											"end": 20237,
											"name": "tag",
											"source": 1,
											"value": "428"
										},
										{
											"begin": 19818,
											"end": 20237,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 19984,
											"end": 19988,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 20022,
											"end": 20024,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 20011,
											"end": 20020,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 20007,
											"end": 20025,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 19999,
											"end": 20025,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 19999,
											"end": 20025,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 20071,
											"end": 20080,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 20065,
											"end": 20069,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 20061,
											"end": 20081,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 20057,
											"end": 20058,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 20046,
											"end": 20055,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 20042,
											"end": 20059,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 20035,
											"end": 20082,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 20099,
											"end": 20230,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "805"
										},
										{
											"begin": 20225,
											"end": 20229,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 20099,
											"end": 20230,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "591"
										},
										{
											"begin": 20099,
											"end": 20230,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 20099,
											"end": 20230,
											"name": "tag",
											"source": 1,
											"value": "805"
										},
										{
											"begin": 20099,
											"end": 20230,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 20091,
											"end": 20230,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 20091,
											"end": 20230,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 19818,
											"end": 20237,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 19818,
											"end": 20237,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 19818,
											"end": 20237,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 19818,
											"end": 20237,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 20243,
											"end": 20591,
											"name": "tag",
											"source": 1,
											"value": "453"
										},
										{
											"begin": 20243,
											"end": 20591,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 20283,
											"end": 20290,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 20306,
											"end": 20326,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "807"
										},
										{
											"begin": 20324,
											"end": 20325,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 20306,
											"end": 20326,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "539"
										},
										{
											"begin": 20306,
											"end": 20326,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 20306,
											"end": 20326,
											"name": "tag",
											"source": 1,
											"value": "807"
										},
										{
											"begin": 20306,
											"end": 20326,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 20301,
											"end": 20326,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 20301,
											"end": 20326,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 20340,
											"end": 20360,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "808"
										},
										{
											"begin": 20358,
											"end": 20359,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 20340,
											"end": 20360,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "539"
										},
										{
											"begin": 20340,
											"end": 20360,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 20340,
											"end": 20360,
											"name": "tag",
											"source": 1,
											"value": "808"
										},
										{
											"begin": 20340,
											"end": 20360,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 20335,
											"end": 20360,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 20335,
											"end": 20360,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 20528,
											"end": 20529,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 20460,
											"end": 20526,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 20456,
											"end": 20530,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 20453,
											"end": 20454,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 20450,
											"end": 20531,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 20445,
											"end": 20446,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 20438,
											"end": 20447,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 20431,
											"end": 20448,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 20427,
											"end": 20532,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 20424,
											"end": 20555,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 20424,
											"end": 20555,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "809"
										},
										{
											"begin": 20424,
											"end": 20555,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 20535,
											"end": 20553,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "810"
										},
										{
											"begin": 20535,
											"end": 20553,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "587"
										},
										{
											"begin": 20535,
											"end": 20553,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 20535,
											"end": 20553,
											"name": "tag",
											"source": 1,
											"value": "810"
										},
										{
											"begin": 20535,
											"end": 20553,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 20424,
											"end": 20555,
											"name": "tag",
											"source": 1,
											"value": "809"
										},
										{
											"begin": 20424,
											"end": 20555,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 20583,
											"end": 20584,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 20580,
											"end": 20581,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 20576,
											"end": 20585,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 20565,
											"end": 20585,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 20565,
											"end": 20585,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 20243,
											"end": 20591,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 20243,
											"end": 20591,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 20243,
											"end": 20591,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 20243,
											"end": 20591,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 20243,
											"end": 20591,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 20597,
											"end": 20777,
											"name": "tag",
											"source": 1,
											"value": "592"
										},
										{
											"begin": 20597,
											"end": 20777,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 20645,
											"end": 20722,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 20642,
											"end": 20643,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 20635,
											"end": 20723,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 20742,
											"end": 20746,
											"name": "PUSH",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 20739,
											"end": 20740,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 20732,
											"end": 20747,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 20766,
											"end": 20770,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 20763,
											"end": 20764,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 20756,
											"end": 20771,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 20783,
											"end": 20968,
											"name": "tag",
											"source": 1,
											"value": "455"
										},
										{
											"begin": 20783,
											"end": 20968,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 20823,
											"end": 20824,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 20840,
											"end": 20860,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "813"
										},
										{
											"begin": 20858,
											"end": 20859,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 20840,
											"end": 20860,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "539"
										},
										{
											"begin": 20840,
											"end": 20860,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 20840,
											"end": 20860,
											"name": "tag",
											"source": 1,
											"value": "813"
										},
										{
											"begin": 20840,
											"end": 20860,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 20835,
											"end": 20860,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 20835,
											"end": 20860,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 20874,
											"end": 20894,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "814"
										},
										{
											"begin": 20892,
											"end": 20893,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 20874,
											"end": 20894,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "539"
										},
										{
											"begin": 20874,
											"end": 20894,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 20874,
											"end": 20894,
											"name": "tag",
											"source": 1,
											"value": "814"
										},
										{
											"begin": 20874,
											"end": 20894,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 20869,
											"end": 20894,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 20869,
											"end": 20894,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 20913,
											"end": 20914,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 20903,
											"end": 20938,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "815"
										},
										{
											"begin": 20903,
											"end": 20938,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 20918,
											"end": 20936,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "816"
										},
										{
											"begin": 20918,
											"end": 20936,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "592"
										},
										{
											"begin": 20918,
											"end": 20936,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 20918,
											"end": 20936,
											"name": "tag",
											"source": 1,
											"value": "816"
										},
										{
											"begin": 20918,
											"end": 20936,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 20903,
											"end": 20938,
											"name": "tag",
											"source": 1,
											"value": "815"
										},
										{
											"begin": 20903,
											"end": 20938,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 20960,
											"end": 20961,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 20957,
											"end": 20958,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 20953,
											"end": 20962,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 20948,
											"end": 20962,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 20948,
											"end": 20962,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 20783,
											"end": 20968,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 20783,
											"end": 20968,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 20783,
											"end": 20968,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 20783,
											"end": 20968,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 20783,
											"end": 20968,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 20974,
											"end": 21194,
											"name": "tag",
											"source": 1,
											"value": "593"
										},
										{
											"begin": 20974,
											"end": 21194,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 21114,
											"end": 21148,
											"name": "PUSH",
											"source": 1,
											"value": "536166654D6174683A206D756C7469706C69636174696F6E206F766572666C6F"
										},
										{
											"begin": 21110,
											"end": 21111,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 21102,
											"end": 21108,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 21098,
											"end": 21112,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 21091,
											"end": 21149,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 21183,
											"end": 21186,
											"name": "PUSH",
											"source": 1,
											"value": "7700000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 21178,
											"end": 21180,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 21170,
											"end": 21176,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 21166,
											"end": 21181,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 21159,
											"end": 21187,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 20974,
											"end": 21194,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 20974,
											"end": 21194,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 21200,
											"end": 21566,
											"name": "tag",
											"source": 1,
											"value": "594"
										},
										{
											"begin": 21200,
											"end": 21566,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 21342,
											"end": 21345,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 21363,
											"end": 21430,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "819"
										},
										{
											"begin": 21427,
											"end": 21429,
											"name": "PUSH",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 21422,
											"end": 21425,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 21363,
											"end": 21430,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "572"
										},
										{
											"begin": 21363,
											"end": 21430,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 21363,
											"end": 21430,
											"name": "tag",
											"source": 1,
											"value": "819"
										},
										{
											"begin": 21363,
											"end": 21430,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 21356,
											"end": 21430,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 21356,
											"end": 21430,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 21439,
											"end": 21532,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "820"
										},
										{
											"begin": 21528,
											"end": 21531,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 21439,
											"end": 21532,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "593"
										},
										{
											"begin": 21439,
											"end": 21532,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 21439,
											"end": 21532,
											"name": "tag",
											"source": 1,
											"value": "820"
										},
										{
											"begin": 21439,
											"end": 21532,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 21557,
											"end": 21559,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 21552,
											"end": 21555,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 21548,
											"end": 21560,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 21541,
											"end": 21560,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 21541,
											"end": 21560,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 21200,
											"end": 21566,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 21200,
											"end": 21566,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 21200,
											"end": 21566,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 21200,
											"end": 21566,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 21572,
											"end": 21991,
											"name": "tag",
											"source": 1,
											"value": "458"
										},
										{
											"begin": 21572,
											"end": 21991,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 21738,
											"end": 21742,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 21776,
											"end": 21778,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 21765,
											"end": 21774,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 21761,
											"end": 21779,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 21753,
											"end": 21779,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 21753,
											"end": 21779,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 21825,
											"end": 21834,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 21819,
											"end": 21823,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 21815,
											"end": 21835,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 21811,
											"end": 21812,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 21800,
											"end": 21809,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 21796,
											"end": 21813,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 21789,
											"end": 21836,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 21853,
											"end": 21984,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "822"
										},
										{
											"begin": 21979,
											"end": 21983,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 21853,
											"end": 21984,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "594"
										},
										{
											"begin": 21853,
											"end": 21984,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 21853,
											"end": 21984,
											"name": "tag",
											"source": 1,
											"value": "822"
										},
										{
											"begin": 21853,
											"end": 21984,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 21845,
											"end": 21984,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 21845,
											"end": 21984,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 21572,
											"end": 21991,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 21572,
											"end": 21991,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 21572,
											"end": 21991,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 21572,
											"end": 21991,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 21997,
											"end": 22302,
											"name": "tag",
											"source": 1,
											"value": "467"
										},
										{
											"begin": 21997,
											"end": 22302,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 22037,
											"end": 22040,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 22056,
											"end": 22076,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "824"
										},
										{
											"begin": 22074,
											"end": 22075,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 22056,
											"end": 22076,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "539"
										},
										{
											"begin": 22056,
											"end": 22076,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 22056,
											"end": 22076,
											"name": "tag",
											"source": 1,
											"value": "824"
										},
										{
											"begin": 22056,
											"end": 22076,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 22051,
											"end": 22076,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 22051,
											"end": 22076,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 22090,
											"end": 22110,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "825"
										},
										{
											"begin": 22108,
											"end": 22109,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 22090,
											"end": 22110,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "539"
										},
										{
											"begin": 22090,
											"end": 22110,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 22090,
											"end": 22110,
											"name": "tag",
											"source": 1,
											"value": "825"
										},
										{
											"begin": 22090,
											"end": 22110,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 22085,
											"end": 22110,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 22085,
											"end": 22110,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 22244,
											"end": 22245,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 22176,
											"end": 22242,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 22172,
											"end": 22246,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 22169,
											"end": 22170,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 22166,
											"end": 22247,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 22163,
											"end": 22270,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 22163,
											"end": 22270,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "826"
										},
										{
											"begin": 22163,
											"end": 22270,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 22250,
											"end": 22268,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "827"
										},
										{
											"begin": 22250,
											"end": 22268,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "587"
										},
										{
											"begin": 22250,
											"end": 22268,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 22250,
											"end": 22268,
											"name": "tag",
											"source": 1,
											"value": "827"
										},
										{
											"begin": 22250,
											"end": 22268,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 22163,
											"end": 22270,
											"name": "tag",
											"source": 1,
											"value": "826"
										},
										{
											"begin": 22163,
											"end": 22270,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 22294,
											"end": 22295,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 22291,
											"end": 22292,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 22287,
											"end": 22296,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 22280,
											"end": 22296,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 22280,
											"end": 22296,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 21997,
											"end": 22302,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 21997,
											"end": 22302,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 21997,
											"end": 22302,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 21997,
											"end": 22302,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 21997,
											"end": 22302,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 22308,
											"end": 22485,
											"name": "tag",
											"source": 1,
											"value": "595"
										},
										{
											"begin": 22308,
											"end": 22485,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 22448,
											"end": 22477,
											"name": "PUSH",
											"source": 1,
											"value": "536166654D6174683A206164646974696F6E206F766572666C6F770000000000"
										},
										{
											"begin": 22444,
											"end": 22445,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 22436,
											"end": 22442,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 22432,
											"end": 22446,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 22425,
											"end": 22478,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 22308,
											"end": 22485,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 22308,
											"end": 22485,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 22491,
											"end": 22857,
											"name": "tag",
											"source": 1,
											"value": "596"
										},
										{
											"begin": 22491,
											"end": 22857,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 22633,
											"end": 22636,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 22654,
											"end": 22721,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "830"
										},
										{
											"begin": 22718,
											"end": 22720,
											"name": "PUSH",
											"source": 1,
											"value": "1B"
										},
										{
											"begin": 22713,
											"end": 22716,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 22654,
											"end": 22721,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "572"
										},
										{
											"begin": 22654,
											"end": 22721,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 22654,
											"end": 22721,
											"name": "tag",
											"source": 1,
											"value": "830"
										},
										{
											"begin": 22654,
											"end": 22721,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 22647,
											"end": 22721,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 22647,
											"end": 22721,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 22730,
											"end": 22823,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "831"
										},
										{
											"begin": 22819,
											"end": 22822,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 22730,
											"end": 22823,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "595"
										},
										{
											"begin": 22730,
											"end": 22823,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 22730,
											"end": 22823,
											"name": "tag",
											"source": 1,
											"value": "831"
										},
										{
											"begin": 22730,
											"end": 22823,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 22848,
											"end": 22850,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 22843,
											"end": 22846,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 22839,
											"end": 22851,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 22832,
											"end": 22851,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 22832,
											"end": 22851,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 22491,
											"end": 22857,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 22491,
											"end": 22857,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 22491,
											"end": 22857,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 22491,
											"end": 22857,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 22863,
											"end": 23282,
											"name": "tag",
											"source": 1,
											"value": "470"
										},
										{
											"begin": 22863,
											"end": 23282,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 23029,
											"end": 23033,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 23067,
											"end": 23069,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 23056,
											"end": 23065,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 23052,
											"end": 23070,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 23044,
											"end": 23070,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 23044,
											"end": 23070,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 23116,
											"end": 23125,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 23110,
											"end": 23114,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 23106,
											"end": 23126,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 23102,
											"end": 23103,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 23091,
											"end": 23100,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 23087,
											"end": 23104,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 23080,
											"end": 23127,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 23144,
											"end": 23275,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "833"
										},
										{
											"begin": 23270,
											"end": 23274,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 23144,
											"end": 23275,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "596"
										},
										{
											"begin": 23144,
											"end": 23275,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 23144,
											"end": 23275,
											"name": "tag",
											"source": 1,
											"value": "833"
										},
										{
											"begin": 23144,
											"end": 23275,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 23136,
											"end": 23275,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 23136,
											"end": 23275,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 22863,
											"end": 23282,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 22863,
											"end": 23282,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 22863,
											"end": 23282,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 22863,
											"end": 23282,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 23288,
											"end": 23620,
											"name": "tag",
											"source": 1,
											"value": "474"
										},
										{
											"begin": 23288,
											"end": 23620,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 23409,
											"end": 23413,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 23447,
											"end": 23449,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 23436,
											"end": 23445,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 23432,
											"end": 23450,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 23424,
											"end": 23450,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 23424,
											"end": 23450,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 23460,
											"end": 23531,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "835"
										},
										{
											"begin": 23528,
											"end": 23529,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 23517,
											"end": 23526,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 23513,
											"end": 23530,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 23504,
											"end": 23510,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 23460,
											"end": 23531,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "571"
										},
										{
											"begin": 23460,
											"end": 23531,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 23460,
											"end": 23531,
											"name": "tag",
											"source": 1,
											"value": "835"
										},
										{
											"begin": 23460,
											"end": 23531,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 23541,
											"end": 23613,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "836"
										},
										{
											"begin": 23609,
											"end": 23611,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 23598,
											"end": 23607,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 23594,
											"end": 23612,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 23585,
											"end": 23591,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 23541,
											"end": 23613,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "540"
										},
										{
											"begin": 23541,
											"end": 23613,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 23541,
											"end": 23613,
											"name": "tag",
											"source": 1,
											"value": "836"
										},
										{
											"begin": 23541,
											"end": 23613,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 23288,
											"end": 23620,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 23288,
											"end": 23620,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 23288,
											"end": 23620,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 23288,
											"end": 23620,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 23288,
											"end": 23620,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 23288,
											"end": 23620,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 23626,
											"end": 24068,
											"name": "tag",
											"source": 1,
											"value": "480"
										},
										{
											"begin": 23626,
											"end": 24068,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 23775,
											"end": 23779,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 23813,
											"end": 23815,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 23802,
											"end": 23811,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 23798,
											"end": 23816,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 23790,
											"end": 23816,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 23790,
											"end": 23816,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 23826,
											"end": 23897,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "838"
										},
										{
											"begin": 23894,
											"end": 23895,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 23883,
											"end": 23892,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 23879,
											"end": 23896,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 23870,
											"end": 23876,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 23826,
											"end": 23897,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "571"
										},
										{
											"begin": 23826,
											"end": 23897,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 23826,
											"end": 23897,
											"name": "tag",
											"source": 1,
											"value": "838"
										},
										{
											"begin": 23826,
											"end": 23897,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 23907,
											"end": 23979,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "839"
										},
										{
											"begin": 23975,
											"end": 23977,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 23964,
											"end": 23973,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 23960,
											"end": 23978,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 23951,
											"end": 23957,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 23907,
											"end": 23979,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "571"
										},
										{
											"begin": 23907,
											"end": 23979,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 23907,
											"end": 23979,
											"name": "tag",
											"source": 1,
											"value": "839"
										},
										{
											"begin": 23907,
											"end": 23979,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 23989,
											"end": 24061,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "840"
										},
										{
											"begin": 24057,
											"end": 24059,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 24046,
											"end": 24055,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 24042,
											"end": 24060,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 24033,
											"end": 24039,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 23989,
											"end": 24061,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "540"
										},
										{
											"begin": 23989,
											"end": 24061,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 23989,
											"end": 24061,
											"name": "tag",
											"source": 1,
											"value": "840"
										},
										{
											"begin": 23989,
											"end": 24061,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 23626,
											"end": 24068,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 23626,
											"end": 24068,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 23626,
											"end": 24068,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 23626,
											"end": 24068,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 23626,
											"end": 24068,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 23626,
											"end": 24068,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 23626,
											"end": 24068,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 24074,
											"end": 24406,
											"name": "tag",
											"source": 1,
											"value": "484"
										},
										{
											"begin": 24074,
											"end": 24406,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 24195,
											"end": 24199,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 24233,
											"end": 24235,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 24222,
											"end": 24231,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 24218,
											"end": 24236,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 24210,
											"end": 24236,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 24210,
											"end": 24236,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 24246,
											"end": 24317,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "842"
										},
										{
											"begin": 24314,
											"end": 24315,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 24303,
											"end": 24312,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 24299,
											"end": 24316,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 24290,
											"end": 24296,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 24246,
											"end": 24317,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "571"
										},
										{
											"begin": 24246,
											"end": 24317,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 24246,
											"end": 24317,
											"name": "tag",
											"source": 1,
											"value": "842"
										},
										{
											"begin": 24246,
											"end": 24317,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 24327,
											"end": 24399,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "843"
										},
										{
											"begin": 24395,
											"end": 24397,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 24384,
											"end": 24393,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 24380,
											"end": 24398,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 24371,
											"end": 24377,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 24327,
											"end": 24399,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "571"
										},
										{
											"begin": 24327,
											"end": 24399,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 24327,
											"end": 24399,
											"name": "tag",
											"source": 1,
											"value": "843"
										},
										{
											"begin": 24327,
											"end": 24399,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 24074,
											"end": 24406,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 24074,
											"end": 24406,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 24074,
											"end": 24406,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 24074,
											"end": 24406,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 24074,
											"end": 24406,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 24074,
											"end": 24406,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 24412,
											"end": 24653,
											"name": "tag",
											"source": 1,
											"value": "597"
										},
										{
											"begin": 24412,
											"end": 24653,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 24552,
											"end": 24586,
											"name": "PUSH",
											"source": 1,
											"value": "5361666545524332303A20617070726F76652066726F6D206E6F6E2D7A65726F"
										},
										{
											"begin": 24548,
											"end": 24549,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 24540,
											"end": 24546,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 24536,
											"end": 24550,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 24529,
											"end": 24587,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 24621,
											"end": 24645,
											"name": "PUSH",
											"source": 1,
											"value": "20746F206E6F6E2D7A65726F20616C6C6F77616E636500000000000000000000"
										},
										{
											"begin": 24616,
											"end": 24618,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 24608,
											"end": 24614,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 24604,
											"end": 24619,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 24597,
											"end": 24646,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 24412,
											"end": 24653,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 24412,
											"end": 24653,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 24659,
											"end": 25025,
											"name": "tag",
											"source": 1,
											"value": "598"
										},
										{
											"begin": 24659,
											"end": 25025,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 24801,
											"end": 24804,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 24822,
											"end": 24889,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "846"
										},
										{
											"begin": 24886,
											"end": 24888,
											"name": "PUSH",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 24881,
											"end": 24884,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 24822,
											"end": 24889,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "572"
										},
										{
											"begin": 24822,
											"end": 24889,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 24822,
											"end": 24889,
											"name": "tag",
											"source": 1,
											"value": "846"
										},
										{
											"begin": 24822,
											"end": 24889,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 24815,
											"end": 24889,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 24815,
											"end": 24889,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 24898,
											"end": 24991,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "847"
										},
										{
											"begin": 24987,
											"end": 24990,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 24898,
											"end": 24991,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "597"
										},
										{
											"begin": 24898,
											"end": 24991,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 24898,
											"end": 24991,
											"name": "tag",
											"source": 1,
											"value": "847"
										},
										{
											"begin": 24898,
											"end": 24991,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 25016,
											"end": 25018,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 25011,
											"end": 25014,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 25007,
											"end": 25019,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 25000,
											"end": 25019,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 25000,
											"end": 25019,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 24659,
											"end": 25025,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 24659,
											"end": 25025,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 24659,
											"end": 25025,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 24659,
											"end": 25025,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 25031,
											"end": 25450,
											"name": "tag",
											"source": 1,
											"value": "490"
										},
										{
											"begin": 25031,
											"end": 25450,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 25197,
											"end": 25201,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 25235,
											"end": 25237,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 25224,
											"end": 25233,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 25220,
											"end": 25238,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 25212,
											"end": 25238,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 25212,
											"end": 25238,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 25284,
											"end": 25293,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 25278,
											"end": 25282,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 25274,
											"end": 25294,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 25270,
											"end": 25271,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 25259,
											"end": 25268,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 25255,
											"end": 25272,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 25248,
											"end": 25295,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 25312,
											"end": 25443,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "849"
										},
										{
											"begin": 25438,
											"end": 25442,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 25312,
											"end": 25443,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "598"
										},
										{
											"begin": 25312,
											"end": 25443,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 25312,
											"end": 25443,
											"name": "tag",
											"source": 1,
											"value": "849"
										},
										{
											"begin": 25312,
											"end": 25443,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 25304,
											"end": 25443,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 25304,
											"end": 25443,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 25031,
											"end": 25450,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 25031,
											"end": 25450,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 25031,
											"end": 25450,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 25031,
											"end": 25450,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 25456,
											"end": 25555,
											"name": "tag",
											"source": 1,
											"value": "599"
										},
										{
											"begin": 25456,
											"end": 25555,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 25508,
											"end": 25514,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 25542,
											"end": 25547,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 25536,
											"end": 25548,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 25526,
											"end": 25548,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 25526,
											"end": 25548,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 25456,
											"end": 25555,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 25456,
											"end": 25555,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 25456,
											"end": 25555,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 25456,
											"end": 25555,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 25561,
											"end": 25868,
											"name": "tag",
											"source": 1,
											"value": "600"
										},
										{
											"begin": 25561,
											"end": 25868,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 25629,
											"end": 25630,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 25639,
											"end": 25752,
											"name": "tag",
											"source": 1,
											"value": "852"
										},
										{
											"begin": 25639,
											"end": 25752,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 25653,
											"end": 25659,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 25650,
											"end": 25651,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 25647,
											"end": 25660,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 25639,
											"end": 25752,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 25639,
											"end": 25752,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "854"
										},
										{
											"begin": 25639,
											"end": 25752,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 25738,
											"end": 25739,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 25733,
											"end": 25736,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 25729,
											"end": 25740,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 25723,
											"end": 25741,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 25719,
											"end": 25720,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 25714,
											"end": 25717,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 25710,
											"end": 25721,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 25703,
											"end": 25742,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 25675,
											"end": 25677,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 25672,
											"end": 25673,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 25668,
											"end": 25678,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 25663,
											"end": 25678,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 25663,
											"end": 25678,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 25639,
											"end": 25752,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "852"
										},
										{
											"begin": 25639,
											"end": 25752,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 25639,
											"end": 25752,
											"name": "tag",
											"source": 1,
											"value": "854"
										},
										{
											"begin": 25639,
											"end": 25752,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 25770,
											"end": 25776,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 25767,
											"end": 25768,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 25764,
											"end": 25777,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 25761,
											"end": 25862,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 25761,
											"end": 25862,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "855"
										},
										{
											"begin": 25761,
											"end": 25862,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 25850,
											"end": 25851,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 25841,
											"end": 25847,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 25836,
											"end": 25839,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 25832,
											"end": 25848,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 25825,
											"end": 25852,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 25761,
											"end": 25862,
											"name": "tag",
											"source": 1,
											"value": "855"
										},
										{
											"begin": 25761,
											"end": 25862,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 25610,
											"end": 25868,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 25561,
											"end": 25868,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 25561,
											"end": 25868,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 25561,
											"end": 25868,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 25561,
											"end": 25868,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 25874,
											"end": 25976,
											"name": "tag",
											"source": 1,
											"value": "601"
										},
										{
											"begin": 25874,
											"end": 25976,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 25915,
											"end": 25921,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 25966,
											"end": 25968,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 25962,
											"end": 25969,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 25957,
											"end": 25959,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 25950,
											"end": 25955,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 25946,
											"end": 25960,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 25942,
											"end": 25970,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 25932,
											"end": 25970,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 25932,
											"end": 25970,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 25874,
											"end": 25976,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 25874,
											"end": 25976,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 25874,
											"end": 25976,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 25874,
											"end": 25976,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 25982,
											"end": 26346,
											"name": "tag",
											"source": 1,
											"value": "602"
										},
										{
											"begin": 25982,
											"end": 26346,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 26070,
											"end": 26073,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 26098,
											"end": 26137,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "858"
										},
										{
											"begin": 26131,
											"end": 26136,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 26098,
											"end": 26137,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "599"
										},
										{
											"begin": 26098,
											"end": 26137,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 26098,
											"end": 26137,
											"name": "tag",
											"source": 1,
											"value": "858"
										},
										{
											"begin": 26098,
											"end": 26137,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 26153,
											"end": 26224,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "859"
										},
										{
											"begin": 26217,
											"end": 26223,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 26212,
											"end": 26215,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 26153,
											"end": 26224,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "572"
										},
										{
											"begin": 26153,
											"end": 26224,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 26153,
											"end": 26224,
											"name": "tag",
											"source": 1,
											"value": "859"
										},
										{
											"begin": 26153,
											"end": 26224,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 26146,
											"end": 26224,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 26146,
											"end": 26224,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 26233,
											"end": 26285,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "860"
										},
										{
											"begin": 26278,
											"end": 26284,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 26273,
											"end": 26276,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 26266,
											"end": 26270,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 26259,
											"end": 26264,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 26255,
											"end": 26271,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 26233,
											"end": 26285,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "600"
										},
										{
											"begin": 26233,
											"end": 26285,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 26233,
											"end": 26285,
											"name": "tag",
											"source": 1,
											"value": "860"
										},
										{
											"begin": 26233,
											"end": 26285,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 26310,
											"end": 26339,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "861"
										},
										{
											"begin": 26332,
											"end": 26338,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 26310,
											"end": 26339,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "601"
										},
										{
											"begin": 26310,
											"end": 26339,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 26310,
											"end": 26339,
											"name": "tag",
											"source": 1,
											"value": "861"
										},
										{
											"begin": 26310,
											"end": 26339,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 26305,
											"end": 26308,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 26301,
											"end": 26340,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 26294,
											"end": 26340,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 26294,
											"end": 26340,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 26074,
											"end": 26346,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 25982,
											"end": 26346,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 25982,
											"end": 26346,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 25982,
											"end": 26346,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 25982,
											"end": 26346,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 25982,
											"end": 26346,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 26352,
											"end": 26665,
											"name": "tag",
											"source": 1,
											"value": "497"
										},
										{
											"begin": 26352,
											"end": 26665,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 26465,
											"end": 26469,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 26503,
											"end": 26505,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 26492,
											"end": 26501,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 26488,
											"end": 26506,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 26480,
											"end": 26506,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 26480,
											"end": 26506,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 26552,
											"end": 26561,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 26546,
											"end": 26550,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 26542,
											"end": 26562,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 26538,
											"end": 26539,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 26527,
											"end": 26536,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 26523,
											"end": 26540,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 26516,
											"end": 26563,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 26580,
											"end": 26658,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "863"
										},
										{
											"begin": 26653,
											"end": 26657,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 26644,
											"end": 26650,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 26580,
											"end": 26658,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "602"
										},
										{
											"begin": 26580,
											"end": 26658,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 26580,
											"end": 26658,
											"name": "tag",
											"source": 1,
											"value": "863"
										},
										{
											"begin": 26580,
											"end": 26658,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 26572,
											"end": 26658,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 26572,
											"end": 26658,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 26352,
											"end": 26665,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 26352,
											"end": 26665,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 26352,
											"end": 26665,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 26352,
											"end": 26665,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 26352,
											"end": 26665,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 26671,
											"end": 26862,
											"name": "tag",
											"source": 1,
											"value": "503"
										},
										{
											"begin": 26671,
											"end": 26862,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 26711,
											"end": 26715,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 26731,
											"end": 26751,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "865"
										},
										{
											"begin": 26749,
											"end": 26750,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 26731,
											"end": 26751,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "539"
										},
										{
											"begin": 26731,
											"end": 26751,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 26731,
											"end": 26751,
											"name": "tag",
											"source": 1,
											"value": "865"
										},
										{
											"begin": 26731,
											"end": 26751,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 26726,
											"end": 26751,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 26726,
											"end": 26751,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 26765,
											"end": 26785,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "866"
										},
										{
											"begin": 26783,
											"end": 26784,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 26765,
											"end": 26785,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "539"
										},
										{
											"begin": 26765,
											"end": 26785,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 26765,
											"end": 26785,
											"name": "tag",
											"source": 1,
											"value": "866"
										},
										{
											"begin": 26765,
											"end": 26785,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 26760,
											"end": 26785,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 26760,
											"end": 26785,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 26804,
											"end": 26805,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 26801,
											"end": 26802,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 26798,
											"end": 26806,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 26795,
											"end": 26829,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 26795,
											"end": 26829,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "867"
										},
										{
											"begin": 26795,
											"end": 26829,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 26809,
											"end": 26827,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "868"
										},
										{
											"begin": 26809,
											"end": 26827,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "587"
										},
										{
											"begin": 26809,
											"end": 26827,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 26809,
											"end": 26827,
											"name": "tag",
											"source": 1,
											"value": "868"
										},
										{
											"begin": 26809,
											"end": 26827,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 26795,
											"end": 26829,
											"name": "tag",
											"source": 1,
											"value": "867"
										},
										{
											"begin": 26795,
											"end": 26829,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 26854,
											"end": 26855,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 26851,
											"end": 26852,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 26847,
											"end": 26856,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 26839,
											"end": 26856,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 26839,
											"end": 26856,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 26671,
											"end": 26862,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 26671,
											"end": 26862,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 26671,
											"end": 26862,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 26671,
											"end": 26862,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 26671,
											"end": 26862,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 26868,
											"end": 27005,
											"name": "tag",
											"source": 1,
											"value": "603"
										},
										{
											"begin": 26868,
											"end": 27005,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 26922,
											"end": 26927,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 26953,
											"end": 26959,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 26947,
											"end": 26960,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 26938,
											"end": 26960,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 26938,
											"end": 26960,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 26969,
											"end": 26999,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "870"
										},
										{
											"begin": 26993,
											"end": 26998,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 26969,
											"end": 26999,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "557"
										},
										{
											"begin": 26969,
											"end": 26999,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 26969,
											"end": 26999,
											"name": "tag",
											"source": 1,
											"value": "870"
										},
										{
											"begin": 26969,
											"end": 26999,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 26868,
											"end": 27005,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 26868,
											"end": 27005,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 26868,
											"end": 27005,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 26868,
											"end": 27005,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 26868,
											"end": 27005,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 27011,
											"end": 27356,
											"name": "tag",
											"source": 1,
											"value": "509"
										},
										{
											"begin": 27011,
											"end": 27356,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 27078,
											"end": 27084,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 27127,
											"end": 27129,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 27115,
											"end": 27124,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 27106,
											"end": 27113,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 27102,
											"end": 27125,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 27098,
											"end": 27130,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 27095,
											"end": 27214,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 27095,
											"end": 27214,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "872"
										},
										{
											"begin": 27095,
											"end": 27214,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 27133,
											"end": 27212,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "873"
										},
										{
											"begin": 27133,
											"end": 27212,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "542"
										},
										{
											"begin": 27133,
											"end": 27212,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 27133,
											"end": 27212,
											"name": "tag",
											"source": 1,
											"value": "873"
										},
										{
											"begin": 27133,
											"end": 27212,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 27095,
											"end": 27214,
											"name": "tag",
											"source": 1,
											"value": "872"
										},
										{
											"begin": 27095,
											"end": 27214,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 27253,
											"end": 27254,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 27278,
											"end": 27339,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "874"
										},
										{
											"begin": 27331,
											"end": 27338,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 27322,
											"end": 27328,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 27311,
											"end": 27320,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 27307,
											"end": 27329,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 27278,
											"end": 27339,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "603"
										},
										{
											"begin": 27278,
											"end": 27339,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 27278,
											"end": 27339,
											"name": "tag",
											"source": 1,
											"value": "874"
										},
										{
											"begin": 27278,
											"end": 27339,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 27268,
											"end": 27339,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 27268,
											"end": 27339,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 27224,
											"end": 27349,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 27011,
											"end": 27356,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 27011,
											"end": 27356,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 27011,
											"end": 27356,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 27011,
											"end": 27356,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 27011,
											"end": 27356,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 27362,
											"end": 27591,
											"name": "tag",
											"source": 1,
											"value": "604"
										},
										{
											"begin": 27362,
											"end": 27591,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 27502,
											"end": 27536,
											"name": "PUSH",
											"source": 1,
											"value": "5361666545524332303A204552433230206F7065726174696F6E20646964206E"
										},
										{
											"begin": 27498,
											"end": 27499,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 27490,
											"end": 27496,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 27486,
											"end": 27500,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 27479,
											"end": 27537,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 27571,
											"end": 27583,
											"name": "PUSH",
											"source": 1,
											"value": "6F74207375636365656400000000000000000000000000000000000000000000"
										},
										{
											"begin": 27566,
											"end": 27568,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 27558,
											"end": 27564,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 27554,
											"end": 27569,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 27547,
											"end": 27584,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 27362,
											"end": 27591,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 27362,
											"end": 27591,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 27597,
											"end": 27963,
											"name": "tag",
											"source": 1,
											"value": "605"
										},
										{
											"begin": 27597,
											"end": 27963,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 27739,
											"end": 27742,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 27760,
											"end": 27827,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "877"
										},
										{
											"begin": 27824,
											"end": 27826,
											"name": "PUSH",
											"source": 1,
											"value": "2A"
										},
										{
											"begin": 27819,
											"end": 27822,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 27760,
											"end": 27827,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "572"
										},
										{
											"begin": 27760,
											"end": 27827,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 27760,
											"end": 27827,
											"name": "tag",
											"source": 1,
											"value": "877"
										},
										{
											"begin": 27760,
											"end": 27827,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 27753,
											"end": 27827,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 27753,
											"end": 27827,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 27836,
											"end": 27929,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "878"
										},
										{
											"begin": 27925,
											"end": 27928,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 27836,
											"end": 27929,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "604"
										},
										{
											"begin": 27836,
											"end": 27929,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 27836,
											"end": 27929,
											"name": "tag",
											"source": 1,
											"value": "878"
										},
										{
											"begin": 27836,
											"end": 27929,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 27954,
											"end": 27956,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 27949,
											"end": 27952,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 27945,
											"end": 27957,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 27938,
											"end": 27957,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 27938,
											"end": 27957,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 27597,
											"end": 27963,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 27597,
											"end": 27963,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 27597,
											"end": 27963,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 27597,
											"end": 27963,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 27969,
											"end": 28388,
											"name": "tag",
											"source": 1,
											"value": "512"
										},
										{
											"begin": 27969,
											"end": 28388,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 28135,
											"end": 28139,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 28173,
											"end": 28175,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 28162,
											"end": 28171,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 28158,
											"end": 28176,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 28150,
											"end": 28176,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 28150,
											"end": 28176,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 28222,
											"end": 28231,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 28216,
											"end": 28220,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 28212,
											"end": 28232,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 28208,
											"end": 28209,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 28197,
											"end": 28206,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 28193,
											"end": 28210,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 28186,
											"end": 28233,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 28250,
											"end": 28381,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "880"
										},
										{
											"begin": 28376,
											"end": 28380,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 28250,
											"end": 28381,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "605"
										},
										{
											"begin": 28250,
											"end": 28381,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 28250,
											"end": 28381,
											"name": "tag",
											"source": 1,
											"value": "880"
										},
										{
											"begin": 28250,
											"end": 28381,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 28242,
											"end": 28381,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 28242,
											"end": 28381,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 27969,
											"end": 28388,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 27969,
											"end": 28388,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 27969,
											"end": 28388,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 27969,
											"end": 28388,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 28394,
											"end": 28619,
											"name": "tag",
											"source": 1,
											"value": "606"
										},
										{
											"begin": 28394,
											"end": 28619,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 28534,
											"end": 28568,
											"name": "PUSH",
											"source": 1,
											"value": "416464726573733A20696E73756666696369656E742062616C616E636520666F"
										},
										{
											"begin": 28530,
											"end": 28531,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 28522,
											"end": 28528,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 28518,
											"end": 28532,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 28511,
											"end": 28569,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 28603,
											"end": 28611,
											"name": "PUSH",
											"source": 1,
											"value": "722063616C6C0000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 28598,
											"end": 28600,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 28590,
											"end": 28596,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 28586,
											"end": 28601,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 28579,
											"end": 28612,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 28394,
											"end": 28619,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 28394,
											"end": 28619,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 28625,
											"end": 28991,
											"name": "tag",
											"source": 1,
											"value": "607"
										},
										{
											"begin": 28625,
											"end": 28991,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 28767,
											"end": 28770,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 28788,
											"end": 28855,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "883"
										},
										{
											"begin": 28852,
											"end": 28854,
											"name": "PUSH",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 28847,
											"end": 28850,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 28788,
											"end": 28855,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "572"
										},
										{
											"begin": 28788,
											"end": 28855,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 28788,
											"end": 28855,
											"name": "tag",
											"source": 1,
											"value": "883"
										},
										{
											"begin": 28788,
											"end": 28855,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 28781,
											"end": 28855,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 28781,
											"end": 28855,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 28864,
											"end": 28957,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "884"
										},
										{
											"begin": 28953,
											"end": 28956,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 28864,
											"end": 28957,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "606"
										},
										{
											"begin": 28864,
											"end": 28957,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 28864,
											"end": 28957,
											"name": "tag",
											"source": 1,
											"value": "884"
										},
										{
											"begin": 28864,
											"end": 28957,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 28982,
											"end": 28984,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 28977,
											"end": 28980,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 28973,
											"end": 28985,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 28966,
											"end": 28985,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 28966,
											"end": 28985,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 28625,
											"end": 28991,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 28625,
											"end": 28991,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 28625,
											"end": 28991,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 28625,
											"end": 28991,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 28997,
											"end": 29416,
											"name": "tag",
											"source": 1,
											"value": "519"
										},
										{
											"begin": 28997,
											"end": 29416,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 29163,
											"end": 29167,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 29201,
											"end": 29203,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 29190,
											"end": 29199,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 29186,
											"end": 29204,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 29178,
											"end": 29204,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 29178,
											"end": 29204,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 29250,
											"end": 29259,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 29244,
											"end": 29248,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 29240,
											"end": 29260,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 29236,
											"end": 29237,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 29225,
											"end": 29234,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 29221,
											"end": 29238,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 29214,
											"end": 29261,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 29278,
											"end": 29409,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "886"
										},
										{
											"begin": 29404,
											"end": 29408,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 29278,
											"end": 29409,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "607"
										},
										{
											"begin": 29278,
											"end": 29409,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 29278,
											"end": 29409,
											"name": "tag",
											"source": 1,
											"value": "886"
										},
										{
											"begin": 29278,
											"end": 29409,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 29270,
											"end": 29409,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 29270,
											"end": 29409,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 28997,
											"end": 29416,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 28997,
											"end": 29416,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 28997,
											"end": 29416,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 28997,
											"end": 29416,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 29422,
											"end": 29601,
											"name": "tag",
											"source": 1,
											"value": "608"
										},
										{
											"begin": 29422,
											"end": 29601,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 29562,
											"end": 29593,
											"name": "PUSH",
											"source": 1,
											"value": "416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000"
										},
										{
											"begin": 29558,
											"end": 29559,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 29550,
											"end": 29556,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 29546,
											"end": 29560,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 29539,
											"end": 29594,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 29422,
											"end": 29601,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 29422,
											"end": 29601,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 29607,
											"end": 29973,
											"name": "tag",
											"source": 1,
											"value": "609"
										},
										{
											"begin": 29607,
											"end": 29973,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 29749,
											"end": 29752,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 29770,
											"end": 29837,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "889"
										},
										{
											"begin": 29834,
											"end": 29836,
											"name": "PUSH",
											"source": 1,
											"value": "1D"
										},
										{
											"begin": 29829,
											"end": 29832,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 29770,
											"end": 29837,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "572"
										},
										{
											"begin": 29770,
											"end": 29837,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 29770,
											"end": 29837,
											"name": "tag",
											"source": 1,
											"value": "889"
										},
										{
											"begin": 29770,
											"end": 29837,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 29763,
											"end": 29837,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 29763,
											"end": 29837,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 29846,
											"end": 29939,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "890"
										},
										{
											"begin": 29935,
											"end": 29938,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 29846,
											"end": 29939,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "608"
										},
										{
											"begin": 29846,
											"end": 29939,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 29846,
											"end": 29939,
											"name": "tag",
											"source": 1,
											"value": "890"
										},
										{
											"begin": 29846,
											"end": 29939,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 29964,
											"end": 29966,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 29959,
											"end": 29962,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 29955,
											"end": 29967,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 29948,
											"end": 29967,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 29948,
											"end": 29967,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 29607,
											"end": 29973,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 29607,
											"end": 29973,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 29607,
											"end": 29973,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 29607,
											"end": 29973,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 29979,
											"end": 30398,
											"name": "tag",
											"source": 1,
											"value": "524"
										},
										{
											"begin": 29979,
											"end": 30398,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 30145,
											"end": 30149,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 30183,
											"end": 30185,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 30172,
											"end": 30181,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 30168,
											"end": 30186,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 30160,
											"end": 30186,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 30160,
											"end": 30186,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 30232,
											"end": 30241,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 30226,
											"end": 30230,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 30222,
											"end": 30242,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 30218,
											"end": 30219,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 30207,
											"end": 30216,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 30203,
											"end": 30220,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 30196,
											"end": 30243,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 30260,
											"end": 30391,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "892"
										},
										{
											"begin": 30386,
											"end": 30390,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 30260,
											"end": 30391,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "609"
										},
										{
											"begin": 30260,
											"end": 30391,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 30260,
											"end": 30391,
											"name": "tag",
											"source": 1,
											"value": "892"
										},
										{
											"begin": 30260,
											"end": 30391,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 30252,
											"end": 30391,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 30252,
											"end": 30391,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 29979,
											"end": 30398,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 29979,
											"end": 30398,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 29979,
											"end": 30398,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 29979,
											"end": 30398,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 30404,
											"end": 30502,
											"name": "tag",
											"source": 1,
											"value": "610"
										},
										{
											"begin": 30404,
											"end": 30502,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 30455,
											"end": 30461,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 30489,
											"end": 30494,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 30483,
											"end": 30495,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 30473,
											"end": 30495,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 30473,
											"end": 30495,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 30404,
											"end": 30502,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 30404,
											"end": 30502,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 30404,
											"end": 30502,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 30404,
											"end": 30502,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 30508,
											"end": 30655,
											"name": "tag",
											"source": 1,
											"value": "611"
										},
										{
											"begin": 30508,
											"end": 30655,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 30609,
											"end": 30620,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 30646,
											"end": 30649,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 30631,
											"end": 30649,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 30631,
											"end": 30649,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 30508,
											"end": 30655,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 30508,
											"end": 30655,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 30508,
											"end": 30655,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 30508,
											"end": 30655,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 30508,
											"end": 30655,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 30661,
											"end": 31034,
											"name": "tag",
											"source": 1,
											"value": "612"
										},
										{
											"begin": 30661,
											"end": 31034,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 30765,
											"end": 30768,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 30793,
											"end": 30831,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "896"
										},
										{
											"begin": 30825,
											"end": 30830,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 30793,
											"end": 30831,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "610"
										},
										{
											"begin": 30793,
											"end": 30831,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 30793,
											"end": 30831,
											"name": "tag",
											"source": 1,
											"value": "896"
										},
										{
											"begin": 30793,
											"end": 30831,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 30847,
											"end": 30935,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "897"
										},
										{
											"begin": 30928,
											"end": 30934,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 30923,
											"end": 30926,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 30847,
											"end": 30935,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "611"
										},
										{
											"begin": 30847,
											"end": 30935,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 30847,
											"end": 30935,
											"name": "tag",
											"source": 1,
											"value": "897"
										},
										{
											"begin": 30847,
											"end": 30935,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 30840,
											"end": 30935,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 30840,
											"end": 30935,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 30944,
											"end": 30996,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "898"
										},
										{
											"begin": 30989,
											"end": 30995,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 30984,
											"end": 30987,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 30977,
											"end": 30981,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 30970,
											"end": 30975,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 30966,
											"end": 30982,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 30944,
											"end": 30996,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "600"
										},
										{
											"begin": 30944,
											"end": 30996,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 30944,
											"end": 30996,
											"name": "tag",
											"source": 1,
											"value": "898"
										},
										{
											"begin": 30944,
											"end": 30996,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 31021,
											"end": 31027,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 31016,
											"end": 31019,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 31012,
											"end": 31028,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 31005,
											"end": 31028,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 31005,
											"end": 31028,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 30769,
											"end": 31034,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 30661,
											"end": 31034,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 30661,
											"end": 31034,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 30661,
											"end": 31034,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 30661,
											"end": 31034,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 30661,
											"end": 31034,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 31040,
											"end": 31311,
											"name": "tag",
											"source": 1,
											"value": "526"
										},
										{
											"begin": 31040,
											"end": 31311,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 31170,
											"end": 31173,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 31192,
											"end": 31285,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "900"
										},
										{
											"begin": 31281,
											"end": 31284,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 31272,
											"end": 31278,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 31192,
											"end": 31285,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "612"
										},
										{
											"begin": 31192,
											"end": 31285,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 31192,
											"end": 31285,
											"name": "tag",
											"source": 1,
											"value": "900"
										},
										{
											"begin": 31192,
											"end": 31285,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 31185,
											"end": 31285,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 31185,
											"end": 31285,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 31302,
											"end": 31305,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 31295,
											"end": 31305,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 31295,
											"end": 31305,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 31040,
											"end": 31311,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 31040,
											"end": 31311,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 31040,
											"end": 31311,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 31040,
											"end": 31311,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 31040,
											"end": 31311,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										}
									]
								}
							},
							"sourceList": [
								"contracts/NFTMasterChef.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"BONUS_MULTIPLIER()": "8aa28550",
							"DDT()": "cb3cba55",
							"PowerPerBlock()": "5990c569",
							"add(uint256,address,bool)": "1eaaa045",
							"addNFT(address,uint256)": "4ea2813c",
							"claimNFTReward(uint256,uint256)": "1d5fbd87",
							"deposit(uint256,uint256)": "e2bbb158",
							"devaddr()": "d49e77cd",
							"emergencyWithdraw(uint256)": "5312ea8e",
							"enterStaking(uint256)": "41441d3b",
							"getMultiplier(uint256,uint256)": "8dbb1e3a",
							"getPowerBalance(address)": "8c51793b",
							"leaveStaking(uint256)": "1058d281",
							"massUpdatePools()": "630b5ba1",
							"migrate(uint256)": "454b0608",
							"migrator()": "7cd07e47",
							"nftsInfo(uint256)": "61c1b724",
							"owner()": "8da5cb5b",
							"pendingPower(uint256,address)": "f3239ab5",
							"poolInfo(uint256)": "1526fe27",
							"poolLength()": "081e3eda",
							"powerBalance(address)": "d209db8c",
							"renounceOwnership()": "715018a6",
							"set(uint256,uint256,bool)": "64482f79",
							"setDevAddress(address)": "d0d41fe1",
							"setMigrator(address)": "23cf3118",
							"startBlock()": "48cd4cb1",
							"totalAllocPoint()": "17caf6f1",
							"transferOwnership(address)": "f2fde38b",
							"updateMultiplier(uint256)": "5ffe6146",
							"updatePool(uint256)": "51eb05a6",
							"updatePowerPerBlock(uint256)": "3df7aff3",
							"userInfo(uint256,address)": "93f1a40b",
							"withdraw(uint256,uint256)": "441a3e70"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"_DDT\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_devaddr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_PowerPerBlock\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_startBlock\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"pid\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Deposit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"pid\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"EmergencyWithdraw\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"pid\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Withdraw\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"BONUS_MULTIPLIER\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"DDT\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PowerPerBlock\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_allocPoint\",\"type\":\"uint256\"},{\"internalType\":\"contract IERC20\",\"name\":\"_lpToken\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_withUpdate\",\"type\":\"bool\"}],\"name\":\"add\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC721\",\"name\":\"_NFT\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_power\",\"type\":\"uint256\"}],\"name\":\"addNFT\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"level\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"}],\"name\":\"claimNFTReward\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"devaddr\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"}],\"name\":\"emergencyWithdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"enterStaking\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_from\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_to\",\"type\":\"uint256\"}],\"name\":\"getMultiplier\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"getPowerBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"leaveStaking\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"massUpdatePools\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"}],\"name\":\"migrate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"migrator\",\"outputs\":[{\"internalType\":\"contract IMigratorChef\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"nftsInfo\",\"outputs\":[{\"internalType\":\"contract IERC721\",\"name\":\"NFT\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"power\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"pendingPower\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"poolInfo\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"lpToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allocPoint\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastRewardBlock\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"accPowerPerShare\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"poolLength\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"powerBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_allocPoint\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"_withUpdate\",\"type\":\"bool\"}],\"name\":\"set\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_devaddr\",\"type\":\"address\"}],\"name\":\"setDevAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IMigratorChef\",\"name\":\"_migrator\",\"type\":\"address\"}],\"name\":\"setMigrator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"startBlock\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalAllocPoint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"multiplierNumber\",\"type\":\"uint256\"}],\"name\":\"updateMultiplier\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"}],\"name\":\"updatePool\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newAmount\",\"type\":\"uint256\"}],\"name\":\"updatePowerPerBlock\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"userInfo\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rewardDebt\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/NFTMasterChef.sol\":\"NFTMasterChef\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/NFTMasterChef.sol\":{\"keccak256\":\"0xcc7485cb48b1db2bf487e44fdfc5cc0444254e4c173c2632fa68c746198f3e96\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3b326ccae9da09650a79b0cc161ab6751fdc819a0317d13acc92660f44a89236\",\"dweb:/ipfs/QmbevPN3gohEgaRvabaxFXTLF6gDLWUG1Tmdj2TTEWTPqw\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 820,
								"contract": "contracts/NFTMasterChef.sol:NFTMasterChef",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 967,
								"contract": "contracts/NFTMasterChef.sol:NFTMasterChef",
								"label": "nftsInfo",
								"offset": 0,
								"slot": "1",
								"type": "t_array(t_struct(NFTsInfo)963_storage)dyn_storage"
							},
							{
								"astId": 970,
								"contract": "contracts/NFTMasterChef.sol:NFTMasterChef",
								"label": "DDT",
								"offset": 0,
								"slot": "2",
								"type": "t_contract(IERC20)286"
							},
							{
								"astId": 972,
								"contract": "contracts/NFTMasterChef.sol:NFTMasterChef",
								"label": "devaddr",
								"offset": 0,
								"slot": "3",
								"type": "t_address"
							},
							{
								"astId": 974,
								"contract": "contracts/NFTMasterChef.sol:NFTMasterChef",
								"label": "PowerPerBlock",
								"offset": 0,
								"slot": "4",
								"type": "t_uint256"
							},
							{
								"astId": 977,
								"contract": "contracts/NFTMasterChef.sol:NFTMasterChef",
								"label": "BONUS_MULTIPLIER",
								"offset": 0,
								"slot": "5",
								"type": "t_uint256"
							},
							{
								"astId": 980,
								"contract": "contracts/NFTMasterChef.sol:NFTMasterChef",
								"label": "migrator",
								"offset": 0,
								"slot": "6",
								"type": "t_contract(IMigratorChef)927"
							},
							{
								"astId": 984,
								"contract": "contracts/NFTMasterChef.sol:NFTMasterChef",
								"label": "poolInfo",
								"offset": 0,
								"slot": "7",
								"type": "t_array(t_struct(PoolInfo)957_storage)dyn_storage"
							},
							{
								"astId": 991,
								"contract": "contracts/NFTMasterChef.sol:NFTMasterChef",
								"label": "userInfo",
								"offset": 0,
								"slot": "8",
								"type": "t_mapping(t_uint256,t_mapping(t_address,t_struct(UserInfo)947_storage))"
							},
							{
								"astId": 994,
								"contract": "contracts/NFTMasterChef.sol:NFTMasterChef",
								"label": "totalAllocPoint",
								"offset": 0,
								"slot": "9",
								"type": "t_uint256"
							},
							{
								"astId": 996,
								"contract": "contracts/NFTMasterChef.sol:NFTMasterChef",
								"label": "startBlock",
								"offset": 0,
								"slot": "10",
								"type": "t_uint256"
							},
							{
								"astId": 1000,
								"contract": "contracts/NFTMasterChef.sol:NFTMasterChef",
								"label": "powerBalance",
								"offset": 0,
								"slot": "11",
								"type": "t_mapping(t_address,t_uint256)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_array(t_struct(NFTsInfo)963_storage)dyn_storage": {
								"base": "t_struct(NFTsInfo)963_storage",
								"encoding": "dynamic_array",
								"label": "struct NFTMasterChef.NFTsInfo[]",
								"numberOfBytes": "32"
							},
							"t_array(t_struct(PoolInfo)957_storage)dyn_storage": {
								"base": "t_struct(PoolInfo)957_storage",
								"encoding": "dynamic_array",
								"label": "struct NFTMasterChef.PoolInfo[]",
								"numberOfBytes": "32"
							},
							"t_contract(IERC20)286": {
								"encoding": "inplace",
								"label": "contract IERC20",
								"numberOfBytes": "20"
							},
							"t_contract(IERC721)933": {
								"encoding": "inplace",
								"label": "contract IERC721",
								"numberOfBytes": "20"
							},
							"t_contract(IMigratorChef)927": {
								"encoding": "inplace",
								"label": "contract IMigratorChef",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_struct(UserInfo)947_storage)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => struct NFTMasterChef.UserInfo)",
								"numberOfBytes": "32",
								"value": "t_struct(UserInfo)947_storage"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_uint256,t_mapping(t_address,t_struct(UserInfo)947_storage))": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => mapping(address => struct NFTMasterChef.UserInfo))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_struct(UserInfo)947_storage)"
							},
							"t_struct(NFTsInfo)963_storage": {
								"encoding": "inplace",
								"label": "struct NFTMasterChef.NFTsInfo",
								"members": [
									{
										"astId": 960,
										"contract": "contracts/NFTMasterChef.sol:NFTMasterChef",
										"label": "NFT",
										"offset": 0,
										"slot": "0",
										"type": "t_contract(IERC721)933"
									},
									{
										"astId": 962,
										"contract": "contracts/NFTMasterChef.sol:NFTMasterChef",
										"label": "power",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "64"
							},
							"t_struct(PoolInfo)957_storage": {
								"encoding": "inplace",
								"label": "struct NFTMasterChef.PoolInfo",
								"members": [
									{
										"astId": 950,
										"contract": "contracts/NFTMasterChef.sol:NFTMasterChef",
										"label": "lpToken",
										"offset": 0,
										"slot": "0",
										"type": "t_contract(IERC20)286"
									},
									{
										"astId": 952,
										"contract": "contracts/NFTMasterChef.sol:NFTMasterChef",
										"label": "allocPoint",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									},
									{
										"astId": 954,
										"contract": "contracts/NFTMasterChef.sol:NFTMasterChef",
										"label": "lastRewardBlock",
										"offset": 0,
										"slot": "2",
										"type": "t_uint256"
									},
									{
										"astId": 956,
										"contract": "contracts/NFTMasterChef.sol:NFTMasterChef",
										"label": "accPowerPerShare",
										"offset": 0,
										"slot": "3",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "128"
							},
							"t_struct(UserInfo)947_storage": {
								"encoding": "inplace",
								"label": "struct NFTMasterChef.UserInfo",
								"members": [
									{
										"astId": 944,
										"contract": "contracts/NFTMasterChef.sol:NFTMasterChef",
										"label": "amount",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									},
									{
										"astId": 946,
										"contract": "contracts/NFTMasterChef.sol:NFTMasterChef",
										"label": "rewardDebt",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "64"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"Ownable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/NFTMasterChef.sol\":\"Ownable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/NFTMasterChef.sol\":{\"keccak256\":\"0xcc7485cb48b1db2bf487e44fdfc5cc0444254e4c173c2632fa68c746198f3e96\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3b326ccae9da09650a79b0cc161ab6751fdc819a0317d13acc92660f44a89236\",\"dweb:/ipfs/QmbevPN3gohEgaRvabaxFXTLF6gDLWUG1Tmdj2TTEWTPqw\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 820,
								"contract": "contracts/NFTMasterChef.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"SafeERC20": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/NFTMasterChef.sol\":16091:19442  library SafeERC20 {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/NFTMasterChef.sol\":16091:19442  library SafeERC20 {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220f221089f8e3fe2ea2b90bc3e057531acba9251e77da89e36d26235344553c6c964736f6c634300080f0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220f221089f8e3fe2ea2b90bc3e057531acba9251e77da89e36d26235344553c6c964736f6c634300080f0033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALLCODE 0x21 ADDMOD SWAP16 DUP15 EXTCODEHASH 0xE2 0xEA 0x2B SWAP1 0xBC RETURNDATACOPY SDIV PUSH22 0x31ACBA9251E77DA89E36D26235344553C6C964736F6C PUSH4 0x4300080F STOP CALLER ",
							"sourceMap": "16091:3351:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220f221089f8e3fe2ea2b90bc3e057531acba9251e77da89e36d26235344553c6c964736f6c634300080f0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALLCODE 0x21 ADDMOD SWAP16 DUP15 EXTCODEHASH 0xE2 0xEA 0x2B SWAP1 0xBC RETURNDATACOPY SDIV PUSH22 0x31ACBA9251E77DA89E36D26235344553C6C964736F6C PUSH4 0x4300080F STOP CALLER ",
							"sourceMap": "16091:3351:0:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"_callOptionalReturn(contract IERC20,bytes memory)": "infinite",
								"safeApprove(contract IERC20,address,uint256)": "infinite",
								"safeDecreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeIncreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeTransfer(contract IERC20,address,uint256)": "infinite",
								"safeTransferFrom(contract IERC20,address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 16091,
									"end": 19442,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 16091,
									"end": 19442,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 16091,
									"end": 19442,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 16091,
									"end": 19442,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 16091,
									"end": 19442,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 16091,
									"end": 19442,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 16091,
									"end": 19442,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 16091,
									"end": 19442,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 16091,
									"end": 19442,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 16091,
									"end": 19442,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 16091,
									"end": 19442,
									"name": "BYTE",
									"source": 0
								},
								{
									"begin": 16091,
									"end": 19442,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 16091,
									"end": 19442,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 16091,
									"end": 19442,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 16091,
									"end": 19442,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 16091,
									"end": 19442,
									"name": "PUSH",
									"source": 0,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 16091,
									"end": 19442,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 16091,
									"end": 19442,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 16091,
									"end": 19442,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 16091,
									"end": 19442,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 16091,
									"end": 19442,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 16091,
									"end": 19442,
									"name": "PUSH",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 16091,
									"end": 19442,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 16091,
									"end": 19442,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 16091,
									"end": 19442,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 16091,
									"end": 19442,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 16091,
									"end": 19442,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 16091,
									"end": 19442,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 16091,
									"end": 19442,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 16091,
									"end": 19442,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 16091,
									"end": 19442,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 16091,
									"end": 19442,
									"name": "MSTORE8",
									"source": 0
								},
								{
									"begin": 16091,
									"end": 19442,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 16091,
									"end": 19442,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 16091,
									"end": 19442,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220f221089f8e3fe2ea2b90bc3e057531acba9251e77da89e36d26235344553c6c964736f6c634300080f0033",
									".code": [
										{
											"begin": 16091,
											"end": 19442,
											"name": "PUSHDEPLOYADDRESS",
											"source": 0
										},
										{
											"begin": 16091,
											"end": 19442,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 16091,
											"end": 19442,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 16091,
											"end": 19442,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 16091,
											"end": 19442,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16091,
											"end": 19442,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16091,
											"end": 19442,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 16091,
											"end": 19442,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16091,
											"end": 19442,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							},
							"sourceList": [
								"contracts/NFTMasterChef.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/NFTMasterChef.sol\":\"SafeERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/NFTMasterChef.sol\":{\"keccak256\":\"0xcc7485cb48b1db2bf487e44fdfc5cc0444254e4c173c2632fa68c746198f3e96\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3b326ccae9da09650a79b0cc161ab6751fdc819a0317d13acc92660f44a89236\",\"dweb:/ipfs/QmbevPN3gohEgaRvabaxFXTLF6gDLWUG1Tmdj2TTEWTPqw\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"SafeMath": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/NFTMasterChef.sol\":130:4978  library SafeMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/NFTMasterChef.sol\":130:4978  library SafeMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220a3998940ff840501fa43448025f6366157a97ff69ed8a216760044872c79747c64736f6c634300080f0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220a3998940ff840501fa43448025f6366157a97ff69ed8a216760044872c79747c64736f6c634300080f0033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 LOG3 SWAP10 DUP10 BLOCKHASH SELFDESTRUCT DUP5 SDIV ADD STATICCALL NUMBER DIFFICULTY DUP1 0x25 0xF6 CALLDATASIZE PUSH2 0x57A9 PUSH32 0xF69ED8A216760044872C79747C64736F6C634300080F00330000000000000000 ",
							"sourceMap": "130:4848:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220a3998940ff840501fa43448025f6366157a97ff69ed8a216760044872c79747c64736f6c634300080f0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 LOG3 SWAP10 DUP10 BLOCKHASH SELFDESTRUCT DUP5 SDIV ADD STATICCALL NUMBER DIFFICULTY DUP1 0x25 0xF6 CALLDATASIZE PUSH2 0x57A9 PUSH32 0xF69ED8A216760044872C79747C64736F6C634300080F00330000000000000000 ",
							"sourceMap": "130:4848:0:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"add(uint256,uint256)": "infinite",
								"div(uint256,uint256)": "infinite",
								"div(uint256,uint256,string memory)": "infinite",
								"mod(uint256,uint256)": "infinite",
								"mod(uint256,uint256,string memory)": "infinite",
								"mul(uint256,uint256)": "infinite",
								"sub(uint256,uint256)": "infinite",
								"sub(uint256,uint256,string memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 130,
									"end": 4978,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 130,
									"end": 4978,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 130,
									"end": 4978,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 130,
									"end": 4978,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 130,
									"end": 4978,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 130,
									"end": 4978,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 130,
									"end": 4978,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 130,
									"end": 4978,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 130,
									"end": 4978,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 130,
									"end": 4978,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 130,
									"end": 4978,
									"name": "BYTE",
									"source": 0
								},
								{
									"begin": 130,
									"end": 4978,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 130,
									"end": 4978,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 130,
									"end": 4978,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 130,
									"end": 4978,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 130,
									"end": 4978,
									"name": "PUSH",
									"source": 0,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 130,
									"end": 4978,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 130,
									"end": 4978,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 130,
									"end": 4978,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 130,
									"end": 4978,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 130,
									"end": 4978,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 130,
									"end": 4978,
									"name": "PUSH",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 130,
									"end": 4978,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 130,
									"end": 4978,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 130,
									"end": 4978,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 130,
									"end": 4978,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 130,
									"end": 4978,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 130,
									"end": 4978,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 130,
									"end": 4978,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 130,
									"end": 4978,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 130,
									"end": 4978,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 130,
									"end": 4978,
									"name": "MSTORE8",
									"source": 0
								},
								{
									"begin": 130,
									"end": 4978,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 130,
									"end": 4978,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 130,
									"end": 4978,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220a3998940ff840501fa43448025f6366157a97ff69ed8a216760044872c79747c64736f6c634300080f0033",
									".code": [
										{
											"begin": 130,
											"end": 4978,
											"name": "PUSHDEPLOYADDRESS",
											"source": 0
										},
										{
											"begin": 130,
											"end": 4978,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 130,
											"end": 4978,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 130,
											"end": 4978,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 130,
											"end": 4978,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 130,
											"end": 4978,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 130,
											"end": 4978,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 130,
											"end": 4978,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 130,
											"end": 4978,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							},
							"sourceList": [
								"contracts/NFTMasterChef.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/NFTMasterChef.sol\":\"SafeMath\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/NFTMasterChef.sol\":{\"keccak256\":\"0xcc7485cb48b1db2bf487e44fdfc5cc0444254e4c173c2632fa68c746198f3e96\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3b326ccae9da09650a79b0cc161ab6751fdc819a0317d13acc92660f44a89236\",\"dweb:/ipfs/QmbevPN3gohEgaRvabaxFXTLF6gDLWUG1Tmdj2TTEWTPqw\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"contracts/NFTMasterChef.sol": {
				"ast": {
					"absolutePath": "contracts/NFTMasterChef.sol",
					"exportedSymbols": {
						"Address": [
							578
						],
						"Context": [
							816
						],
						"IERC20": [
							286
						],
						"IERC721": [
							933
						],
						"IMigratorChef": [
							927
						],
						"NFTMasterChef": [
							2289
						],
						"Ownable": [
							917
						],
						"SafeERC20": [
							797
						],
						"SafeMath": [
							194
						]
					},
					"id": 2290,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "103:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SafeMath",
							"contractDependencies": [],
							"contractKind": "library",
							"fullyImplemented": true,
							"id": 194,
							"linearizedBaseContracts": [
								194
							],
							"name": "SafeMath",
							"nameLocation": "138:8:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 26,
										"nodeType": "Block",
										"src": "452:114:0",
										"statements": [
											{
												"assignments": [
													12
												],
												"declarations": [
													{
														"constant": false,
														"id": 12,
														"mutability": "mutable",
														"name": "c",
														"nameLocation": "471:1:0",
														"nodeType": "VariableDeclaration",
														"scope": 26,
														"src": "463:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 11,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "463:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 16,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 15,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 13,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4,
														"src": "475:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 14,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 6,
														"src": "479:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "475:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "463:17:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 20,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 18,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 12,
																"src": "499:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 19,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4,
																"src": "504:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "499:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "536166654d6174683a206164646974696f6e206f766572666c6f77",
															"id": 21,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "507:29:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a",
																"typeString": "literal_string \"SafeMath: addition overflow\""
															},
															"value": "SafeMath: addition overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a",
																"typeString": "literal_string \"SafeMath: addition overflow\""
															}
														],
														"id": 17,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "491:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 22,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "491:46:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 23,
												"nodeType": "ExpressionStatement",
												"src": "491:46:0"
											},
											{
												"expression": {
													"id": 24,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 12,
													"src": "557:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 10,
												"id": 25,
												"nodeType": "Return",
												"src": "550:8:0"
											}
										]
									},
									"documentation": {
										"id": 2,
										"nodeType": "StructuredDocumentation",
										"src": "154:225:0",
										"text": " @dev Returns the addition of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `+` operator.\n Requirements:\n - Addition cannot overflow."
									},
									"id": 27,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nameLocation": "394:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 7,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "406:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 27,
												"src": "398:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "398:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 6,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "417:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 27,
												"src": "409:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 5,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "409:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "397:22:0"
									},
									"returnParameters": {
										"id": 10,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 9,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 27,
												"src": "443:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 8,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "443:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "442:9:0"
									},
									"scope": 194,
									"src": "385:181:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 43,
										"nodeType": "Block",
										"src": "908:69:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 38,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 30,
															"src": "930:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 39,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 32,
															"src": "933:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "536166654d6174683a207375627472616374696f6e206f766572666c6f77",
															"id": 40,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "936:32:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_50b058e9b5320e58880d88223c9801cd9eecdcf90323d5c2318bc1b6b916e862",
																"typeString": "literal_string \"SafeMath: subtraction overflow\""
															},
															"value": "SafeMath: subtraction overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_50b058e9b5320e58880d88223c9801cd9eecdcf90323d5c2318bc1b6b916e862",
																"typeString": "literal_string \"SafeMath: subtraction overflow\""
															}
														],
														"id": 37,
														"name": "sub",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															44,
															72
														],
														"referencedDeclaration": 72,
														"src": "926:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
														}
													},
													"id": 41,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "926:43:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 36,
												"id": 42,
												"nodeType": "Return",
												"src": "919:50:0"
											}
										]
									},
									"documentation": {
										"id": 28,
										"nodeType": "StructuredDocumentation",
										"src": "574:261:0",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting on\n overflow (when the result is negative).\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 44,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "850:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 33,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 30,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "862:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "854:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 29,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "854:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 32,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "873:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "865:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 31,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "865:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "853:22:0"
									},
									"returnParameters": {
										"id": 36,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 35,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "899:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 34,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "899:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "898:9:0"
									},
									"scope": 194,
									"src": "841:136:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 71,
										"nodeType": "Block",
										"src": "1409:97:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 59,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 57,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 49,
																"src": "1428:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 58,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 47,
																"src": "1433:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1428:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 60,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 51,
															"src": "1436:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 56,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1420:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 61,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1420:29:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 62,
												"nodeType": "ExpressionStatement",
												"src": "1420:29:0"
											},
											{
												"assignments": [
													64
												],
												"declarations": [
													{
														"constant": false,
														"id": 64,
														"mutability": "mutable",
														"name": "c",
														"nameLocation": "1468:1:0",
														"nodeType": "VariableDeclaration",
														"scope": 71,
														"src": "1460:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 63,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1460:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 68,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 67,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 65,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 47,
														"src": "1472:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 66,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 49,
														"src": "1476:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1472:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1460:17:0"
											},
											{
												"expression": {
													"id": 69,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 64,
													"src": "1497:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 55,
												"id": 70,
												"nodeType": "Return",
												"src": "1490:8:0"
											}
										]
									},
									"documentation": {
										"id": 45,
										"nodeType": "StructuredDocumentation",
										"src": "985:323:0",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n overflow (when the result is negative).\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow.\n _Available since v2.4.0._"
									},
									"id": 72,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "1323:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 52,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 47,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1335:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 72,
												"src": "1327:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 46,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1327:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 49,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1346:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 72,
												"src": "1338:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 48,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1338:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 51,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "1363:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 72,
												"src": "1349:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 50,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1349:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1326:50:0"
									},
									"returnParameters": {
										"id": 55,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 54,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 72,
												"src": "1400:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 53,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1400:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1399:9:0"
									},
									"scope": 194,
									"src": "1314:192:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 106,
										"nodeType": "Block",
										"src": "1824:404:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 84,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 82,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 75,
														"src": "2060:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 83,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2065:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2060:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 88,
												"nodeType": "IfStatement",
												"src": "2056:47:0",
												"trueBody": {
													"id": 87,
													"nodeType": "Block",
													"src": "2068:35:0",
													"statements": [
														{
															"expression": {
																"hexValue": "30",
																"id": 85,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2090:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 81,
															"id": 86,
															"nodeType": "Return",
															"src": "2083:8:0"
														}
													]
												}
											},
											{
												"assignments": [
													90
												],
												"declarations": [
													{
														"constant": false,
														"id": 90,
														"mutability": "mutable",
														"name": "c",
														"nameLocation": "2123:1:0",
														"nodeType": "VariableDeclaration",
														"scope": 106,
														"src": "2115:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 89,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2115:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 94,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 93,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 91,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 75,
														"src": "2127:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"id": 92,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 77,
														"src": "2131:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2127:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2115:17:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 100,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 98,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 96,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 90,
																	"src": "2151:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 97,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 75,
																	"src": "2155:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2151:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 99,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 77,
																"src": "2160:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2151:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77",
															"id": 101,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2163:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3",
																"typeString": "literal_string \"SafeMath: multiplication overflow\""
															},
															"value": "SafeMath: multiplication overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3",
																"typeString": "literal_string \"SafeMath: multiplication overflow\""
															}
														],
														"id": 95,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2143:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 102,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2143:56:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 103,
												"nodeType": "ExpressionStatement",
												"src": "2143:56:0"
											},
											{
												"expression": {
													"id": 104,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 90,
													"src": "2219:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 81,
												"id": 105,
												"nodeType": "Return",
												"src": "2212:8:0"
											}
										]
									},
									"documentation": {
										"id": 73,
										"nodeType": "StructuredDocumentation",
										"src": "1514:237:0",
										"text": " @dev Returns the multiplication of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `*` operator.\n Requirements:\n - Multiplication cannot overflow."
									},
									"id": 107,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mul",
									"nameLocation": "1766:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 78,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 75,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1778:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 107,
												"src": "1770:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 74,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1770:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 77,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1789:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 107,
												"src": "1781:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 76,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1781:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1769:22:0"
									},
									"returnParameters": {
										"id": 81,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 80,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 107,
												"src": "1815:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 79,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1815:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1814:9:0"
									},
									"scope": 194,
									"src": "1757:471:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 123,
										"nodeType": "Block",
										"src": "2763:65:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 118,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 110,
															"src": "2785:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 119,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 112,
															"src": "2788:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "536166654d6174683a206469766973696f6e206279207a65726f",
															"id": 120,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2791:28:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5b7cc70dda4dc2143e5adb63bd5d1f349504f461dbdfd9bc76fac1f8ca6d019f",
																"typeString": "literal_string \"SafeMath: division by zero\""
															},
															"value": "SafeMath: division by zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_5b7cc70dda4dc2143e5adb63bd5d1f349504f461dbdfd9bc76fac1f8ca6d019f",
																"typeString": "literal_string \"SafeMath: division by zero\""
															}
														],
														"id": 117,
														"name": "div",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															124,
															152
														],
														"referencedDeclaration": 152,
														"src": "2781:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
														}
													},
													"id": 121,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2781:39:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 116,
												"id": 122,
												"nodeType": "Return",
												"src": "2774:46:0"
											}
										]
									},
									"documentation": {
										"id": 108,
										"nodeType": "StructuredDocumentation",
										"src": "2236:454:0",
										"text": " @dev Returns the integer division of two unsigned integers. Reverts on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 124,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "2705:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 113,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 110,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2717:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 124,
												"src": "2709:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 109,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2709:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 112,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2728:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 124,
												"src": "2720:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 111,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2720:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2708:22:0"
									},
									"returnParameters": {
										"id": 116,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 115,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 124,
												"src": "2754:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 114,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2754:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2753:9:0"
									},
									"scope": 194,
									"src": "2696:132:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 151,
										"nodeType": "Block",
										"src": "3453:250:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 139,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 137,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 129,
																"src": "3539:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 138,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3543:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "3539:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 140,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 131,
															"src": "3546:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 136,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3531:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 141,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3531:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 142,
												"nodeType": "ExpressionStatement",
												"src": "3531:28:0"
											},
											{
												"assignments": [
													144
												],
												"declarations": [
													{
														"constant": false,
														"id": 144,
														"mutability": "mutable",
														"name": "c",
														"nameLocation": "3578:1:0",
														"nodeType": "VariableDeclaration",
														"scope": 151,
														"src": "3570:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 143,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3570:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 148,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 147,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 145,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 127,
														"src": "3582:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 146,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 129,
														"src": "3586:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3582:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3570:17:0"
											},
											{
												"expression": {
													"id": 149,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 144,
													"src": "3694:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 135,
												"id": 150,
												"nodeType": "Return",
												"src": "3687:8:0"
											}
										]
									},
									"documentation": {
										"id": 125,
										"nodeType": "StructuredDocumentation",
										"src": "2836:516:0",
										"text": " @dev Returns the integer division of two unsigned integers. Reverts with custom message on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero.\n _Available since v2.4.0._"
									},
									"id": 152,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "3367:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 132,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 127,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3379:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 152,
												"src": "3371:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 126,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3371:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 129,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3390:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 152,
												"src": "3382:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 128,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3382:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 131,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "3407:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 152,
												"src": "3393:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 130,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3393:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3370:50:0"
									},
									"returnParameters": {
										"id": 135,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 134,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 152,
												"src": "3444:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 133,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3444:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3443:9:0"
									},
									"scope": 194,
									"src": "3358:345:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 168,
										"nodeType": "Block",
										"src": "4227:63:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 163,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 155,
															"src": "4249:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 164,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 157,
															"src": "4252:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "536166654d6174683a206d6f64756c6f206279207a65726f",
															"id": 165,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4255:26:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_726e51f7b81fce0a68f5f214f445e275313b20b1633f08ce954ee39abf8d7832",
																"typeString": "literal_string \"SafeMath: modulo by zero\""
															},
															"value": "SafeMath: modulo by zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_726e51f7b81fce0a68f5f214f445e275313b20b1633f08ce954ee39abf8d7832",
																"typeString": "literal_string \"SafeMath: modulo by zero\""
															}
														],
														"id": 162,
														"name": "mod",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															169,
															193
														],
														"referencedDeclaration": 193,
														"src": "4245:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
														}
													},
													"id": 166,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4245:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 161,
												"id": 167,
												"nodeType": "Return",
												"src": "4238:44:0"
											}
										]
									},
									"documentation": {
										"id": 153,
										"nodeType": "StructuredDocumentation",
										"src": "3711:443:0",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n Reverts when dividing by zero.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 169,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "4169:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 158,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 155,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "4181:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 169,
												"src": "4173:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 154,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4173:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 157,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "4192:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 169,
												"src": "4184:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 156,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4184:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4172:22:0"
									},
									"returnParameters": {
										"id": 161,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 160,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 169,
												"src": "4218:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 159,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4218:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4217:9:0"
									},
									"scope": 194,
									"src": "4160:130:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 192,
										"nodeType": "Block",
										"src": "4904:71:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 184,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 182,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 174,
																"src": "4923:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"hexValue": "30",
																"id": 183,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4928:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "4923:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 185,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 176,
															"src": "4931:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 181,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4915:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 186,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4915:29:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 187,
												"nodeType": "ExpressionStatement",
												"src": "4915:29:0"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 190,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 188,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 172,
														"src": "4962:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"id": 189,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 174,
														"src": "4966:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4962:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 180,
												"id": 191,
												"nodeType": "Return",
												"src": "4955:12:0"
											}
										]
									},
									"documentation": {
										"id": 170,
										"nodeType": "StructuredDocumentation",
										"src": "4298:505:0",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n Reverts with custom message when dividing by zero.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero.\n _Available since v2.4.0._"
									},
									"id": 193,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "4818:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 177,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 172,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "4830:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 193,
												"src": "4822:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 171,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4822:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 174,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "4841:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 193,
												"src": "4833:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 173,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4833:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 176,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "4858:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 193,
												"src": "4844:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 175,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "4844:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4821:50:0"
									},
									"returnParameters": {
										"id": 180,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 179,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 193,
												"src": "4895:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 178,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4895:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4894:9:0"
									},
									"scope": 194,
									"src": "4809:166:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2290,
							"src": "130:4848:0",
							"usedErrors": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 286,
							"linearizedBaseContracts": [
								286
							],
							"name": "IERC20",
							"nameLocation": "4992:6:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 195,
										"nodeType": "StructuredDocumentation",
										"src": "5006:68:0",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 200,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "5089:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 196,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5100:2:0"
									},
									"returnParameters": {
										"id": 199,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 198,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 200,
												"src": "5126:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 197,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5126:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5125:9:0"
									},
									"scope": 286,
									"src": "5080:55:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 201,
										"nodeType": "StructuredDocumentation",
										"src": "5143:74:0",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 208,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "5232:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 204,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 203,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "5250:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 208,
												"src": "5242:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 202,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5242:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5241:17:0"
									},
									"returnParameters": {
										"id": 207,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 206,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 208,
												"src": "5282:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 205,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5282:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5281:9:0"
									},
									"scope": 286,
									"src": "5223:68:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 209,
										"nodeType": "StructuredDocumentation",
										"src": "5299:215:0",
										"text": " @dev Moves `amount` tokens from the caller's account to `recipient`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 218,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "5529:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 214,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 211,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "5546:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 218,
												"src": "5538:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 210,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5538:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 213,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "5565:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 218,
												"src": "5557:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 212,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5557:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5537:35:0"
									},
									"returnParameters": {
										"id": 217,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 216,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 218,
												"src": "5591:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 215,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5591:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5590:6:0"
									},
									"scope": 286,
									"src": "5520:77:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 219,
										"nodeType": "StructuredDocumentation",
										"src": "5605:270:0",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 228,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "5890:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 224,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 221,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "5908:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 228,
												"src": "5900:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 220,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5900:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 223,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "5923:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 228,
												"src": "5915:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 222,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5915:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5899:32:0"
									},
									"returnParameters": {
										"id": 227,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 226,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 228,
												"src": "5955:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 225,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5955:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5954:9:0"
									},
									"scope": 286,
									"src": "5881:83:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 229,
										"nodeType": "StructuredDocumentation",
										"src": "5972:655:0",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 238,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "6642:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 234,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 231,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "6658:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 238,
												"src": "6650:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 230,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6650:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 233,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "6675:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 238,
												"src": "6667:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 232,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6667:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6649:33:0"
									},
									"returnParameters": {
										"id": 237,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 236,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 238,
												"src": "6701:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 235,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6701:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6700:6:0"
									},
									"scope": 286,
									"src": "6633:74:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "40c10f19",
									"id": 247,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "mint",
									"nameLocation": "6724:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 243,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 240,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "6737:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 247,
												"src": "6729:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 239,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6729:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 242,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "6754:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 247,
												"src": "6746:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 241,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6746:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6728:33:0"
									},
									"returnParameters": {
										"id": 246,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 245,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 247,
												"src": "6780:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 244,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6780:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6779:6:0"
									},
									"scope": 286,
									"src": "6715:71:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 248,
										"nodeType": "StructuredDocumentation",
										"src": "6794:304:0",
										"text": " @dev Moves `amount` tokens from `sender` to `recipient` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 259,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "7113:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 255,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 250,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "7144:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 259,
												"src": "7136:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 249,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7136:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 252,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "7169:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 259,
												"src": "7161:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 251,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7161:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 254,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "7197:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 259,
												"src": "7189:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 253,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7189:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7125:85:0"
									},
									"returnParameters": {
										"id": 258,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 257,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 259,
												"src": "7229:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 256,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7229:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7228:6:0"
									},
									"scope": 286,
									"src": "7104:131:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 260,
										"nodeType": "StructuredDocumentation",
										"src": "7243:163:0",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 268,
									"name": "Transfer",
									"nameLocation": "7418:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 267,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 262,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "7443:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 268,
												"src": "7427:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 261,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7427:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 264,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "7465:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 268,
												"src": "7449:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 263,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7449:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 266,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "7477:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 268,
												"src": "7469:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 265,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7469:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7426:57:0"
									},
									"src": "7412:72:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 269,
										"nodeType": "StructuredDocumentation",
										"src": "7492:151:0",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 277,
									"name": "Approval",
									"nameLocation": "7655:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 276,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 271,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "7680:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 277,
												"src": "7664:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 270,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7664:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 273,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "7703:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 277,
												"src": "7687:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 272,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7687:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 275,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "7720:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 277,
												"src": "7712:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 274,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7712:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7663:63:0"
									},
									"src": "7649:78:0"
								},
								{
									"anonymous": false,
									"eventSelector": "ab8530f87dc9b59234c4623bf917212bb2536d647574c8e7e5da92c2ede0c9f8",
									"id": 285,
									"name": "Mint",
									"nameLocation": "7741:4:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 284,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 279,
												"indexed": true,
												"mutability": "mutable",
												"name": "minter",
												"nameLocation": "7762:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 285,
												"src": "7746:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 278,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7746:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 281,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "7786:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 285,
												"src": "7770:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 280,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7770:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 283,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "7798:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 285,
												"src": "7790:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 282,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7790:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7745:60:0"
									},
									"src": "7735:71:0"
								}
							],
							"scope": 2290,
							"src": "4982:2827:0",
							"usedErrors": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Address",
							"contractDependencies": [],
							"contractKind": "library",
							"fullyImplemented": true,
							"id": 578,
							"linearizedBaseContracts": [
								578
							],
							"name": "Address",
							"nameLocation": "7821:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 300,
										"nodeType": "Block",
										"src": "8887:260:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 298,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 294,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 289,
																"src": "9116:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 295,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "9116:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 296,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "9116:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 297,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "9138:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "9116:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 293,
												"id": 299,
												"nodeType": "Return",
												"src": "9109:30:0"
											}
										]
									},
									"documentation": {
										"id": 287,
										"nodeType": "StructuredDocumentation",
										"src": "7836:979:0",
										"text": " @dev Returns true if `account` is a contract.\n [IMPORTANT]\n ====\n It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract.\n Among others, `isContract` will return false for the following\n types of addresses:\n  - an externally-owned account\n  - a contract in construction\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n ====\n [IMPORTANT]\n ====\n You shouldn't rely on `isContract` to protect against flash loan attacks!\n Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n constructor.\n ===="
									},
									"id": 301,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isContract",
									"nameLocation": "8830:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 290,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 289,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "8849:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 301,
												"src": "8841:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 288,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8841:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8840:17:0"
									},
									"returnParameters": {
										"id": 293,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 292,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 301,
												"src": "8881:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 291,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "8881:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8880:6:0"
									},
									"scope": 578,
									"src": "8821:326:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 334,
										"nodeType": "Block",
										"src": "10153:246:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 316,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 312,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "10180:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$578",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$578",
																				"typeString": "library Address"
																			}
																		],
																		"id": 311,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "10172:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 310,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "10172:7:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 313,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "10172:13:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 314,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "10172:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 315,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 306,
																"src": "10197:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10172:31:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e6365",
															"id": 317,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10205:31:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															},
															"value": "Address: insufficient balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															}
														],
														"id": 309,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "10164:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 318,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10164:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 319,
												"nodeType": "ExpressionStatement",
												"src": "10164:73:0"
											},
											{
												"assignments": [
													321,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 321,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "10256:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 334,
														"src": "10251:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 320,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "10251:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 328,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 326,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10299:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"id": 322,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 304,
																"src": "10269:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 323,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "10269:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 325,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 324,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 306,
																"src": "10291:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "10269:29:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 327,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10269:33:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10250:52:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 330,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 321,
															"src": "10321:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564",
															"id": 331,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10330:60:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															},
															"value": "Address: unable to send value, recipient may have reverted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															}
														],
														"id": 329,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "10313:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 332,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10313:78:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 333,
												"nodeType": "ExpressionStatement",
												"src": "10313:78:0"
											}
										]
									},
									"documentation": {
										"id": 302,
										"nodeType": "StructuredDocumentation",
										"src": "9155:921:0",
										"text": " @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."
									},
									"id": 335,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendValue",
									"nameLocation": "10091:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 307,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 304,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "10117:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 335,
												"src": "10101:25:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 303,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10101:15:0",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 306,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "10136:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 335,
												"src": "10128:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 305,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10128:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10100:43:0"
									},
									"returnParameters": {
										"id": 308,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10153:0:0"
									},
									"scope": 578,
									"src": "10082:317:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 351,
										"nodeType": "Block",
										"src": "11250:86:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 346,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 338,
															"src": "11281:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 347,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 340,
															"src": "11289:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 348,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11295:32:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															},
															"value": "Address: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															}
														],
														"id": 345,
														"name": "functionCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															352,
															372
														],
														"referencedDeclaration": 372,
														"src": "11268:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 349,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11268:60:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 344,
												"id": 350,
												"nodeType": "Return",
												"src": "11261:67:0"
											}
										]
									},
									"documentation": {
										"id": 336,
										"nodeType": "StructuredDocumentation",
										"src": "10407:748:0",
										"text": " @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason, it is bubbled up by this\n function (like regular Solidity function calls).\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert.\n _Available since v3.1._"
									},
									"id": 352,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "11170:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 341,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 338,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "11191:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 352,
												"src": "11183:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 337,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11183:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 340,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "11212:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 352,
												"src": "11199:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 339,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "11199:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11182:35:0"
									},
									"returnParameters": {
										"id": 344,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 343,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 352,
												"src": "11236:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 342,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "11236:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11235:14:0"
									},
									"scope": 578,
									"src": "11161:175:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 371,
										"nodeType": "Block",
										"src": "11717:78:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 365,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 355,
															"src": "11757:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 366,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 357,
															"src": "11765:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 367,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11771:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"id": 368,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 359,
															"src": "11774:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 364,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															392,
															442
														],
														"referencedDeclaration": 442,
														"src": "11735:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 369,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11735:52:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 363,
												"id": 370,
												"nodeType": "Return",
												"src": "11728:59:0"
											}
										]
									},
									"documentation": {
										"id": 353,
										"nodeType": "StructuredDocumentation",
										"src": "11344:216:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 372,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "11575:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 360,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 355,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "11606:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 372,
												"src": "11598:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 354,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11598:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 357,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "11636:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 372,
												"src": "11623:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 356,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "11623:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 359,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "11665:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 372,
												"src": "11651:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 358,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "11651:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11587:97:0"
									},
									"returnParameters": {
										"id": 363,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 362,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 372,
												"src": "11703:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 361,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "11703:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11702:14:0"
									},
									"scope": 578,
									"src": "11566:229:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 391,
										"nodeType": "Block",
										"src": "12317:113:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 385,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 375,
															"src": "12357:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 386,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 377,
															"src": "12365:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 387,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 379,
															"src": "12371:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564",
															"id": 388,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "12378:43:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															},
															"value": "Address: low-level call with value failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															}
														],
														"id": 384,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															392,
															442
														],
														"referencedDeclaration": 442,
														"src": "12335:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 389,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12335:87:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 383,
												"id": 390,
												"nodeType": "Return",
												"src": "12328:94:0"
											}
										]
									},
									"documentation": {
										"id": 373,
										"nodeType": "StructuredDocumentation",
										"src": "11803:361:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`.\n _Available since v3.1._"
									},
									"id": 392,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "12179:21:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 380,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 375,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "12219:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 392,
												"src": "12211:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 374,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12211:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 377,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "12249:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 392,
												"src": "12236:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 376,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "12236:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 379,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "12272:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 392,
												"src": "12264:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 378,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12264:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12200:84:0"
									},
									"returnParameters": {
										"id": 383,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 382,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 392,
												"src": "12303:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 381,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "12303:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12302:14:0"
									},
									"scope": 578,
									"src": "12170:260:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 441,
										"nodeType": "Block",
										"src": "12870:326:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 413,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 409,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "12897:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$578",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$578",
																				"typeString": "library Address"
																			}
																		],
																		"id": 408,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "12889:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 407,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "12889:7:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 410,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "12889:13:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 411,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "12889:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 412,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 399,
																"src": "12914:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "12889:30:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c",
															"id": 414,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "12921:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															},
															"value": "Address: insufficient balance for call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															}
														],
														"id": 406,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "12881:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 415,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12881:81:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 416,
												"nodeType": "ExpressionStatement",
												"src": "12881:81:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 419,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 395,
																	"src": "12992:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 418,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 301,
																"src": "12981:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 420,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "12981:18:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 421,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "13001:31:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																"typeString": "literal_string \"Address: call to non-contract\""
															},
															"value": "Address: call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																"typeString": "literal_string \"Address: call to non-contract\""
															}
														],
														"id": 417,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "12973:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 422,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12973:60:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 423,
												"nodeType": "ExpressionStatement",
												"src": "12973:60:0"
											},
											{
												"assignments": [
													425,
													427
												],
												"declarations": [
													{
														"constant": false,
														"id": 425,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "13052:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 441,
														"src": "13047:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 424,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "13047:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 427,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "13074:10:0",
														"nodeType": "VariableDeclaration",
														"scope": 441,
														"src": "13061:23:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 426,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "13061:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 434,
												"initialValue": {
													"arguments": [
														{
															"id": 432,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 397,
															"src": "13114:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 428,
																"name": "target",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 395,
																"src": "13088:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 429,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "13088:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 431,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 430,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 399,
																"src": "13107:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "13088:25:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 433,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13088:31:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "13046:73:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 436,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 425,
															"src": "13154:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 437,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 427,
															"src": "13163:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 438,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 401,
															"src": "13175:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 435,
														"name": "verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 577,
														"src": "13137:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 439,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13137:51:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 405,
												"id": 440,
												"nodeType": "Return",
												"src": "13130:58:0"
											}
										]
									},
									"documentation": {
										"id": 393,
										"nodeType": "StructuredDocumentation",
										"src": "12438:242:0",
										"text": " @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n with `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 442,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "12695:21:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 402,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 395,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "12735:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 442,
												"src": "12727:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 394,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12727:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 397,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "12765:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 442,
												"src": "12752:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 396,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "12752:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 399,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "12788:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 442,
												"src": "12780:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 398,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12780:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 401,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "12818:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 442,
												"src": "12804:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 400,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "12804:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12716:121:0"
									},
									"returnParameters": {
										"id": 405,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 404,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 442,
												"src": "12856:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 403,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "12856:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12855:14:0"
									},
									"scope": 578,
									"src": "12686:510:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 458,
										"nodeType": "Block",
										"src": "13481:99:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 453,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 445,
															"src": "13518:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 454,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 447,
															"src": "13526:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c207374617469632063616c6c206661696c6564",
															"id": 455,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "13532:39:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															},
															"value": "Address: low-level static call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															}
														],
														"id": 452,
														"name": "functionStaticCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															459,
															494
														],
														"referencedDeclaration": 494,
														"src": "13499:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 456,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13499:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 451,
												"id": 457,
												"nodeType": "Return",
												"src": "13492:80:0"
											}
										]
									},
									"documentation": {
										"id": 443,
										"nodeType": "StructuredDocumentation",
										"src": "13204:171:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 459,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "13390:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 448,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 445,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "13417:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 459,
												"src": "13409:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 444,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13409:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 447,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "13438:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 459,
												"src": "13425:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 446,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "13425:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13408:35:0"
									},
									"returnParameters": {
										"id": 451,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 450,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 459,
												"src": "13467:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 449,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "13467:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13466:14:0"
									},
									"scope": 578,
									"src": "13381:199:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 493,
										"nodeType": "Block",
										"src": "13934:233:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 473,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 462,
																	"src": "13964:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 472,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 301,
																"src": "13953:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 474,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "13953:18:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a207374617469632063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 475,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "13973:38:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c79cc78e4f16ce3933a42b84c73868f93bb4a59c031a0acf576679de98c608a9",
																"typeString": "literal_string \"Address: static call to non-contract\""
															},
															"value": "Address: static call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c79cc78e4f16ce3933a42b84c73868f93bb4a59c031a0acf576679de98c608a9",
																"typeString": "literal_string \"Address: static call to non-contract\""
															}
														],
														"id": 471,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "13945:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 476,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13945:67:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 477,
												"nodeType": "ExpressionStatement",
												"src": "13945:67:0"
											},
											{
												"assignments": [
													479,
													481
												],
												"declarations": [
													{
														"constant": false,
														"id": 479,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "14031:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 493,
														"src": "14026:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 478,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "14026:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 481,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "14053:10:0",
														"nodeType": "VariableDeclaration",
														"scope": 493,
														"src": "14040:23:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 480,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "14040:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 486,
												"initialValue": {
													"arguments": [
														{
															"id": 484,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 464,
															"src": "14085:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 482,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 462,
															"src": "14067:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 483,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "staticcall",
														"nodeType": "MemberAccess",
														"src": "14067:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) view returns (bool,bytes memory)"
														}
													},
													"id": 485,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14067:23:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "14025:65:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 488,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 479,
															"src": "14125:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 489,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 481,
															"src": "14134:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 490,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 466,
															"src": "14146:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 487,
														"name": "verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 577,
														"src": "14108:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 491,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14108:51:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 470,
												"id": 492,
												"nodeType": "Return",
												"src": "14101:58:0"
											}
										]
									},
									"documentation": {
										"id": 460,
										"nodeType": "StructuredDocumentation",
										"src": "13588:178:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 494,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "13781:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 467,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 462,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "13818:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 494,
												"src": "13810:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 461,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13810:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 464,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "13848:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 494,
												"src": "13835:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 463,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "13835:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 466,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "13877:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 494,
												"src": "13863:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 465,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "13863:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13799:97:0"
									},
									"returnParameters": {
										"id": 470,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 469,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 494,
												"src": "13920:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 468,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "13920:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13919:14:0"
									},
									"scope": 578,
									"src": "13772:395:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 510,
										"nodeType": "Block",
										"src": "14451:103:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 505,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 497,
															"src": "14490:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 506,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 499,
															"src": "14498:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564",
															"id": 507,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "14504:41:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															},
															"value": "Address: low-level delegate call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															}
														],
														"id": 504,
														"name": "functionDelegateCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															511,
															546
														],
														"referencedDeclaration": 546,
														"src": "14469:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 508,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14469:77:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 503,
												"id": 509,
												"nodeType": "Return",
												"src": "14462:84:0"
											}
										]
									},
									"documentation": {
										"id": 495,
										"nodeType": "StructuredDocumentation",
										"src": "14175:173:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 511,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "14363:20:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 500,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 497,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "14392:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 511,
												"src": "14384:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 496,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14384:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 499,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "14413:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 511,
												"src": "14400:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 498,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "14400:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14383:35:0"
									},
									"returnParameters": {
										"id": 503,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 502,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 511,
												"src": "14437:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 501,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "14437:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14436:14:0"
									},
									"scope": 578,
									"src": "14354:200:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 545,
										"nodeType": "Block",
										"src": "14907:237:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 525,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 514,
																	"src": "14937:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 524,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 301,
																"src": "14926:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 526,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "14926:18:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 527,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "14946:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520",
																"typeString": "literal_string \"Address: delegate call to non-contract\""
															},
															"value": "Address: delegate call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520",
																"typeString": "literal_string \"Address: delegate call to non-contract\""
															}
														],
														"id": 523,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "14918:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 528,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14918:69:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 529,
												"nodeType": "ExpressionStatement",
												"src": "14918:69:0"
											},
											{
												"assignments": [
													531,
													533
												],
												"declarations": [
													{
														"constant": false,
														"id": 531,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "15006:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 545,
														"src": "15001:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 530,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "15001:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 533,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "15028:10:0",
														"nodeType": "VariableDeclaration",
														"scope": 545,
														"src": "15015:23:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 532,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "15015:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 538,
												"initialValue": {
													"arguments": [
														{
															"id": 536,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 516,
															"src": "15062:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 534,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 514,
															"src": "15042:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 535,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "delegatecall",
														"nodeType": "MemberAccess",
														"src": "15042:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) returns (bool,bytes memory)"
														}
													},
													"id": 537,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15042:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "15000:67:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 540,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 531,
															"src": "15102:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 541,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 533,
															"src": "15111:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 542,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 518,
															"src": "15123:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 539,
														"name": "verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 577,
														"src": "15085:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 543,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15085:51:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 522,
												"id": 544,
												"nodeType": "Return",
												"src": "15078:58:0"
											}
										]
									},
									"documentation": {
										"id": 512,
										"nodeType": "StructuredDocumentation",
										"src": "14562:180:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 546,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "14757:20:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 519,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 514,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "14796:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 546,
												"src": "14788:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 513,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14788:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 516,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "14826:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 546,
												"src": "14813:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 515,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "14813:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 518,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "14855:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 546,
												"src": "14841:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 517,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "14841:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14777:97:0"
									},
									"returnParameters": {
										"id": 522,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 521,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 546,
												"src": "14893:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 520,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "14893:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14892:14:0"
									},
									"scope": 578,
									"src": "14748:396:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 576,
										"nodeType": "Block",
										"src": "15536:548:0",
										"statements": [
											{
												"condition": {
													"id": 558,
													"name": "success",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 549,
													"src": "15551:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 574,
													"nodeType": "Block",
													"src": "15610:467:0",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 565,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 562,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 551,
																		"src": "15696:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 563,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "15696:17:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 564,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "15716:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "15696:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 572,
																"nodeType": "Block",
																"src": "16011:55:0",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 569,
																					"name": "errorMessage",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 553,
																					"src": "16037:12:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				],
																				"id": 568,
																				"name": "revert",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					4294967277,
																					4294967277
																				],
																				"referencedDeclaration": 4294967277,
																				"src": "16030:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																					"typeString": "function (string memory) pure"
																				}
																			},
																			"id": 570,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "16030:20:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 571,
																		"nodeType": "ExpressionStatement",
																		"src": "16030:20:0"
																	}
																]
															},
															"id": 573,
															"nodeType": "IfStatement",
															"src": "15692:374:0",
															"trueBody": {
																"id": 567,
																"nodeType": "Block",
																"src": "15719:286:0",
																"statements": [
																	{
																		"AST": {
																			"nodeType": "YulBlock",
																			"src": "15842:148:0",
																			"statements": [
																				{
																					"nodeType": "YulVariableDeclaration",
																					"src": "15865:40:0",
																					"value": {
																						"arguments": [
																							{
																								"name": "returndata",
																								"nodeType": "YulIdentifier",
																								"src": "15894:10:0"
																							}
																						],
																						"functionName": {
																							"name": "mload",
																							"nodeType": "YulIdentifier",
																							"src": "15888:5:0"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "15888:17:0"
																					},
																					"variables": [
																						{
																							"name": "returndata_size",
																							"nodeType": "YulTypedName",
																							"src": "15869:15:0",
																							"type": ""
																						}
																					]
																				},
																				{
																					"expression": {
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "15938:2:0",
																										"type": "",
																										"value": "32"
																									},
																									{
																										"name": "returndata",
																										"nodeType": "YulIdentifier",
																										"src": "15942:10:0"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "15934:3:0"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "15934:19:0"
																							},
																							{
																								"name": "returndata_size",
																								"nodeType": "YulIdentifier",
																								"src": "15955:15:0"
																							}
																						],
																						"functionName": {
																							"name": "revert",
																							"nodeType": "YulIdentifier",
																							"src": "15927:6:0"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "15927:44:0"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "15927:44:0"
																				}
																			]
																		},
																		"evmVersion": "london",
																		"externalReferences": [
																			{
																				"declaration": 551,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "15894:10:0",
																				"valueSize": 1
																			},
																			{
																				"declaration": 551,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "15942:10:0",
																				"valueSize": 1
																			}
																		],
																		"id": 566,
																		"nodeType": "InlineAssembly",
																		"src": "15833:157:0"
																	}
																]
															}
														}
													]
												},
												"id": 575,
												"nodeType": "IfStatement",
												"src": "15547:530:0",
												"trueBody": {
													"id": 561,
													"nodeType": "Block",
													"src": "15560:44:0",
													"statements": [
														{
															"expression": {
																"id": 559,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 551,
																"src": "15582:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 557,
															"id": 560,
															"nodeType": "Return",
															"src": "15575:17:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 547,
										"nodeType": "StructuredDocumentation",
										"src": "15152:214:0",
										"text": " @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\n revert reason using the provided one.\n _Available since v4.3._"
									},
									"id": 577,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResult",
									"nameLocation": "15381:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 554,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 549,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "15413:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 577,
												"src": "15408:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 548,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "15408:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 551,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "15444:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 577,
												"src": "15431:23:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 550,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "15431:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 553,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "15479:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 577,
												"src": "15465:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 552,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "15465:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15397:101:0"
									},
									"returnParameters": {
										"id": 557,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 556,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 577,
												"src": "15522:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 555,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "15522:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15521:14:0"
									},
									"scope": 578,
									"src": "15372:712:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2290,
							"src": "7813:8274:0",
							"usedErrors": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SafeERC20",
							"contractDependencies": [],
							"contractKind": "library",
							"fullyImplemented": true,
							"id": 797,
							"linearizedBaseContracts": [
								797
							],
							"name": "SafeERC20",
							"nameLocation": "16099:9:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 581,
									"libraryName": {
										"id": 579,
										"name": "Address",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 578,
										"src": "16122:7:0"
									},
									"nodeType": "UsingForDirective",
									"src": "16116:26:0",
									"typeName": {
										"id": 580,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "16134:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									}
								},
								{
									"body": {
										"id": 603,
										"nodeType": "Block",
										"src": "16256:105:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 592,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 584,
															"src": "16287:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$286",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 595,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 584,
																			"src": "16317:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$286",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 596,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "transfer",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 218,
																		"src": "16317:14:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 597,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "16317:23:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 598,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 586,
																	"src": "16342:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 599,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 588,
																	"src": "16346:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 593,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "16294:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 594,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "16294:22:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 600,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "16294:58:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$286",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 591,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 796,
														"src": "16267:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$286_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 601,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16267:86:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 602,
												"nodeType": "ExpressionStatement",
												"src": "16267:86:0"
											}
										]
									},
									"id": 604,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransfer",
									"nameLocation": "16159:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 589,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 584,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "16189:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 604,
												"src": "16182:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$286",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 583,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 582,
														"name": "IERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 286,
														"src": "16182:6:0"
													},
													"referencedDeclaration": 286,
													"src": "16182:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$286",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 586,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "16213:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 604,
												"src": "16205:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 585,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16205:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 588,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "16234:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 604,
												"src": "16226:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 587,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16226:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16171:75:0"
									},
									"returnParameters": {
										"id": 590,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "16256:0:0"
									},
									"scope": 797,
									"src": "16150:211:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 629,
										"nodeType": "Block",
										"src": "16502:115:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 617,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 607,
															"src": "16533:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$286",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 620,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 607,
																			"src": "16563:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$286",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 621,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "transferFrom",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 259,
																		"src": "16563:18:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,address,uint256) external returns (bool)"
																		}
																	},
																	"id": 622,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "16563:27:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 623,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 609,
																	"src": "16592:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 624,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 611,
																	"src": "16598:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 625,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 613,
																	"src": "16602:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 618,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "16540:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 619,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "16540:22:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 626,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "16540:68:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$286",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 616,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 796,
														"src": "16513:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$286_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 627,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16513:96:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 628,
												"nodeType": "ExpressionStatement",
												"src": "16513:96:0"
											}
										]
									},
									"id": 630,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "16378:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 614,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 607,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "16412:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 630,
												"src": "16405:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$286",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 606,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 605,
														"name": "IERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 286,
														"src": "16405:6:0"
													},
													"referencedDeclaration": 286,
													"src": "16405:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$286",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 609,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "16436:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 630,
												"src": "16428:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 608,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16428:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 611,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "16459:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 630,
												"src": "16451:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 610,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16451:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 613,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "16480:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 630,
												"src": "16472:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 612,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16472:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16394:98:0"
									},
									"returnParameters": {
										"id": 615,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "16502:0:0"
									},
									"scope": 797,
									"src": "16369:248:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 673,
										"nodeType": "Block",
										"src": "16996:506:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 657,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 644,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 642,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 638,
																			"src": "17250:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 643,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "17259:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "17250:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 645,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "17249:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 655,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"id": 650,
																							"name": "this",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 4294967268,
																							"src": "17290:4:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_contract$_SafeERC20_$797",
																								"typeString": "library SafeERC20"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_contract$_SafeERC20_$797",
																								"typeString": "library SafeERC20"
																							}
																						],
																						"id": 649,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "17282:7:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_address_$",
																							"typeString": "type(address)"
																						},
																						"typeName": {
																							"id": 648,
																							"name": "address",
																							"nodeType": "ElementaryTypeName",
																							"src": "17282:7:0",
																							"typeDescriptions": {}
																						}
																					},
																					"id": 651,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "17282:13:0",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 652,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 636,
																					"src": "17297:7:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"expression": {
																					"id": 646,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 634,
																					"src": "17266:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC20_$286",
																						"typeString": "contract IERC20"
																					}
																				},
																				"id": 647,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "allowance",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 228,
																				"src": "17266:15:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																					"typeString": "function (address,address) view external returns (uint256)"
																				}
																			},
																			"id": 653,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "17266:39:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 654,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "17309:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "17266:44:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 656,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "17265:46:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "17249:62:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f20746f206e6f6e2d7a65726f20616c6c6f77616e6365",
															"id": 658,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "17326:56:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25",
																"typeString": "literal_string \"SafeERC20: approve from non-zero to non-zero allowance\""
															},
															"value": "SafeERC20: approve from non-zero to non-zero allowance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25",
																"typeString": "literal_string \"SafeERC20: approve from non-zero to non-zero allowance\""
															}
														],
														"id": 641,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "17227:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 659,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17227:166:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 660,
												"nodeType": "ExpressionStatement",
												"src": "17227:166:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 662,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 634,
															"src": "17424:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$286",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 665,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 634,
																			"src": "17454:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$286",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 666,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "approve",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 238,
																		"src": "17454:13:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 667,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "17454:22:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 668,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 636,
																	"src": "17478:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 669,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 638,
																	"src": "17487:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 663,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "17431:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 664,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "17431:22:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 670,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "17431:62:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$286",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 661,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 796,
														"src": "17404:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$286_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 671,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17404:90:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 672,
												"nodeType": "ExpressionStatement",
												"src": "17404:90:0"
											}
										]
									},
									"documentation": {
										"id": 631,
										"nodeType": "StructuredDocumentation",
										"src": "16625:255:0",
										"text": " @dev Deprecated. This function has issues similar to the ones found in\n {IERC20-approve}, and its usage is discouraged.\n Whenever possible, use {safeIncreaseAllowance} and\n {safeDecreaseAllowance} instead."
									},
									"id": 674,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeApprove",
									"nameLocation": "16895:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 639,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 634,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "16924:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 674,
												"src": "16917:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$286",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 633,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 632,
														"name": "IERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 286,
														"src": "16917:6:0"
													},
													"referencedDeclaration": 286,
													"src": "16917:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$286",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 636,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "16948:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 674,
												"src": "16940:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 635,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16940:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 638,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "16974:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 674,
												"src": "16966:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 637,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16966:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16906:80:0"
									},
									"returnParameters": {
										"id": 640,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "16996:0:0"
									},
									"scope": 797,
									"src": "16886:616:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 709,
										"nodeType": "Block",
										"src": "17630:197:0",
										"statements": [
											{
												"assignments": [
													685
												],
												"declarations": [
													{
														"constant": false,
														"id": 685,
														"mutability": "mutable",
														"name": "newAllowance",
														"nameLocation": "17649:12:0",
														"nodeType": "VariableDeclaration",
														"scope": 709,
														"src": "17641:20:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 684,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "17641:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 696,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 695,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 690,
																		"name": "this",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967268,
																		"src": "17688:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_SafeERC20_$797",
																			"typeString": "library SafeERC20"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_SafeERC20_$797",
																			"typeString": "library SafeERC20"
																		}
																	],
																	"id": 689,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "17680:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 688,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "17680:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 691,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "17680:13:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 692,
																"name": "spender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 679,
																"src": "17695:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"expression": {
																"id": 686,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 677,
																"src": "17664:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$286",
																	"typeString": "contract IERC20"
																}
															},
															"id": 687,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "allowance",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 228,
															"src": "17664:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																"typeString": "function (address,address) view external returns (uint256)"
															}
														},
														"id": 693,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "17664:39:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 694,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 681,
														"src": "17706:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "17664:47:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "17641:70:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 698,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 677,
															"src": "17742:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$286",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 701,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 677,
																			"src": "17772:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$286",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 702,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "approve",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 238,
																		"src": "17772:13:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 703,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "17772:22:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 704,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 679,
																	"src": "17796:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 705,
																	"name": "newAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 685,
																	"src": "17805:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 699,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "17749:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 700,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "17749:22:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 706,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "17749:69:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$286",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 697,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 796,
														"src": "17722:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$286_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 707,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17722:97:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 708,
												"nodeType": "ExpressionStatement",
												"src": "17722:97:0"
											}
										]
									},
									"id": 710,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeIncreaseAllowance",
									"nameLocation": "17519:21:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 682,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 677,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "17558:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 710,
												"src": "17551:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$286",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 676,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 675,
														"name": "IERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 286,
														"src": "17551:6:0"
													},
													"referencedDeclaration": 286,
													"src": "17551:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$286",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 679,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "17582:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 710,
												"src": "17574:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 678,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "17574:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 681,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "17608:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 710,
												"src": "17600:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 680,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "17600:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17540:80:0"
									},
									"returnParameters": {
										"id": 683,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "17630:0:0"
									},
									"scope": 797,
									"src": "17510:317:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 757,
										"nodeType": "Block",
										"src": "17955:377:0",
										"statements": [
											{
												"id": 756,
												"nodeType": "UncheckedBlock",
												"src": "17966:359:0",
												"statements": [
													{
														"assignments": [
															721
														],
														"declarations": [
															{
																"constant": false,
																"id": 721,
																"mutability": "mutable",
																"name": "oldAllowance",
																"nameLocation": "17999:12:0",
																"nodeType": "VariableDeclaration",
																"scope": 756,
																"src": "17991:20:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 720,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "17991:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 730,
														"initialValue": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 726,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "18038:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_SafeERC20_$797",
																				"typeString": "library SafeERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_SafeERC20_$797",
																				"typeString": "library SafeERC20"
																			}
																		],
																		"id": 725,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "18030:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 724,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "18030:7:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 727,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "18030:13:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 728,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 715,
																	"src": "18045:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 722,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 713,
																	"src": "18014:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$286",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 723,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "allowance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 228,
																"src": "18014:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address,address) view external returns (uint256)"
																}
															},
															"id": 729,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "18014:39:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "17991:62:0"
													},
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 734,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 732,
																		"name": "oldAllowance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 721,
																		"src": "18076:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">=",
																	"rightExpression": {
																		"id": 733,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 717,
																		"src": "18092:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "18076:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"hexValue": "5361666545524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f",
																	"id": 735,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "18099:43:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_2c3af60974a758b7e72e108c9bf0943ecc9e4f2e8af4695da5f52fbf57a63d3a",
																		"typeString": "literal_string \"SafeERC20: decreased allowance below zero\""
																	},
																	"value": "SafeERC20: decreased allowance below zero"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_stringliteral_2c3af60974a758b7e72e108c9bf0943ecc9e4f2e8af4695da5f52fbf57a63d3a",
																		"typeString": "literal_string \"SafeERC20: decreased allowance below zero\""
																	}
																],
																"id": 731,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "18068:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 736,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "18068:75:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 737,
														"nodeType": "ExpressionStatement",
														"src": "18068:75:0"
													},
													{
														"assignments": [
															739
														],
														"declarations": [
															{
																"constant": false,
																"id": 739,
																"mutability": "mutable",
																"name": "newAllowance",
																"nameLocation": "18166:12:0",
																"nodeType": "VariableDeclaration",
																"scope": 756,
																"src": "18158:20:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 738,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "18158:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 743,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 742,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 740,
																"name": "oldAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 721,
																"src": "18181:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"id": 741,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 717,
																"src": "18196:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "18181:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "18158:43:0"
													},
													{
														"expression": {
															"arguments": [
																{
																	"id": 745,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 713,
																	"src": "18236:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$286",
																		"typeString": "contract IERC20"
																	}
																},
																{
																	"arguments": [
																		{
																			"expression": {
																				"expression": {
																					"id": 748,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 713,
																					"src": "18266:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC20_$286",
																						"typeString": "contract IERC20"
																					}
																				},
																				"id": 749,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "approve",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 238,
																				"src": "18266:13:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																					"typeString": "function (address,uint256) external returns (bool)"
																				}
																			},
																			"id": 750,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "selector",
																			"nodeType": "MemberAccess",
																			"src": "18266:22:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes4",
																				"typeString": "bytes4"
																			}
																		},
																		{
																			"id": 751,
																			"name": "spender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 715,
																			"src": "18290:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 752,
																			"name": "newAllowance",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 739,
																			"src": "18299:12:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bytes4",
																				"typeString": "bytes4"
																			},
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"id": 746,
																			"name": "abi",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967295,
																			"src": "18243:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_abi",
																				"typeString": "abi"
																			}
																		},
																		"id": 747,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberName": "encodeWithSelector",
																		"nodeType": "MemberAccess",
																		"src": "18243:22:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																			"typeString": "function (bytes4) pure returns (bytes memory)"
																		}
																	},
																	"id": 753,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "18243:69:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$286",
																		"typeString": "contract IERC20"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"id": 744,
																"name": "_callOptionalReturn",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 796,
																"src": "18216:19:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$286_$_t_bytes_memory_ptr_$returns$__$",
																	"typeString": "function (contract IERC20,bytes memory)"
																}
															},
															"id": 754,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "18216:97:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 755,
														"nodeType": "ExpressionStatement",
														"src": "18216:97:0"
													}
												]
											}
										]
									},
									"id": 758,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeDecreaseAllowance",
									"nameLocation": "17844:21:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 718,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 713,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "17883:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 758,
												"src": "17876:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$286",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 712,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 711,
														"name": "IERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 286,
														"src": "17876:6:0"
													},
													"referencedDeclaration": 286,
													"src": "17876:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$286",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 715,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "17907:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 758,
												"src": "17899:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 714,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "17899:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 717,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "17933:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 758,
												"src": "17925:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 716,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "17925:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17865:80:0"
									},
									"returnParameters": {
										"id": 719,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "17955:0:0"
									},
									"scope": 797,
									"src": "17835:497:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 795,
										"nodeType": "Block",
										"src": "18793:646:0",
										"statements": [
											{
												"assignments": [
													768
												],
												"declarations": [
													{
														"constant": false,
														"id": 768,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "19160:10:0",
														"nodeType": "VariableDeclaration",
														"scope": 795,
														"src": "19147:23:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 767,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "19147:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 777,
												"initialValue": {
													"arguments": [
														{
															"id": 774,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 764,
															"src": "19201:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 775,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "19207:34:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_47fb62c2c272651d2f0f342bac006756b8ba07f21cc5cb87e0fbb9d50c0c585b",
																"typeString": "literal_string \"SafeERC20: low-level call failed\""
															},
															"value": "SafeERC20: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_47fb62c2c272651d2f0f342bac006756b8ba07f21cc5cb87e0fbb9d50c0c585b",
																"typeString": "literal_string \"SafeERC20: low-level call failed\""
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 771,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 762,
																	"src": "19181:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$286",
																		"typeString": "contract IERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$286",
																		"typeString": "contract IERC20"
																	}
																],
																"id": 770,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "19173:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 769,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "19173:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 772,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "19173:14:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 773,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "functionCall",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 372,
														"src": "19173:27:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$bound_to$_t_address_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 776,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "19173:69:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "19147:95:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 781,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 778,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 768,
															"src": "19257:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 779,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "19257:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 780,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "19277:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "19257:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 794,
												"nodeType": "IfStatement",
												"src": "19253:179:0",
												"trueBody": {
													"id": 793,
													"nodeType": "Block",
													"src": "19280:152:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 785,
																				"name": "returndata",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 768,
																				"src": "19354:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			},
																			{
																				"components": [
																					{
																						"id": 787,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "19367:4:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_bool_$",
																							"typeString": "type(bool)"
																						},
																						"typeName": {
																							"id": 786,
																							"name": "bool",
																							"nodeType": "ElementaryTypeName",
																							"src": "19367:4:0",
																							"typeDescriptions": {}
																						}
																					}
																				],
																				"id": 788,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "19366:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_bool_$",
																					"typeString": "type(bool)"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				},
																				{
																					"typeIdentifier": "t_type$_t_bool_$",
																					"typeString": "type(bool)"
																				}
																			],
																			"expression": {
																				"id": 783,
																				"name": "abi",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967295,
																				"src": "19343:3:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_abi",
																					"typeString": "abi"
																				}
																			},
																			"id": 784,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberName": "decode",
																			"nodeType": "MemberAccess",
																			"src": "19343:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 789,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "19343:30:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "5361666545524332303a204552433230206f7065726174696f6e20646964206e6f742073756363656564",
																		"id": 790,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "19375:44:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd",
																			"typeString": "literal_string \"SafeERC20: ERC20 operation did not succeed\""
																		},
																		"value": "SafeERC20: ERC20 operation did not succeed"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd",
																			"typeString": "literal_string \"SafeERC20: ERC20 operation did not succeed\""
																		}
																	],
																	"id": 782,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "19335:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 791,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "19335:85:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 792,
															"nodeType": "ExpressionStatement",
															"src": "19335:85:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 759,
										"nodeType": "StructuredDocumentation",
										"src": "18340:377:0",
										"text": " @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants)."
									},
									"id": 796,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_callOptionalReturn",
									"nameLocation": "18732:19:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 765,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 762,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "18759:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 796,
												"src": "18752:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$286",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 761,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 760,
														"name": "IERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 286,
														"src": "18752:6:0"
													},
													"referencedDeclaration": 286,
													"src": "18752:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$286",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 764,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "18779:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 796,
												"src": "18766:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 763,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "18766:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18751:33:0"
									},
									"returnParameters": {
										"id": 766,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "18793:0:0"
									},
									"scope": 797,
									"src": "18723:716:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 2290,
							"src": "16091:3351:0",
							"usedErrors": []
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 816,
							"linearizedBaseContracts": [
								816
							],
							"name": "Context",
							"nameLocation": "19464:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 805,
										"nodeType": "Block",
										"src": "19541:36:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 802,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "19559:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 803,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "19559:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 801,
												"id": 804,
												"nodeType": "Return",
												"src": "19552:17:0"
											}
										]
									},
									"id": 806,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "19488:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 798,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "19498:2:0"
									},
									"returnParameters": {
										"id": 801,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 800,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 806,
												"src": "19532:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 799,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "19532:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "19531:9:0"
									},
									"scope": 816,
									"src": "19479:98:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 814,
										"nodeType": "Block",
										"src": "19652:34:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 811,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "19670:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 812,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "19670:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 810,
												"id": 813,
												"nodeType": "Return",
												"src": "19663:15:0"
											}
										]
									},
									"id": 815,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "19594:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 807,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "19602:2:0"
									},
									"returnParameters": {
										"id": 810,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 809,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 815,
												"src": "19636:14:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 808,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "19636:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "19635:16:0"
									},
									"scope": 816,
									"src": "19585:101:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 2290,
							"src": "19446:243:0",
							"usedErrors": []
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 817,
										"name": "Context",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 816,
										"src": "19722:7:0"
									},
									"id": 818,
									"nodeType": "InheritanceSpecifier",
									"src": "19722:7:0"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 917,
							"linearizedBaseContracts": [
								917,
								816
							],
							"name": "Ownable",
							"nameLocation": "19711:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 820,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "19753:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 917,
									"src": "19737:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 819,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "19737:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 826,
									"name": "OwnershipTransferred",
									"nameLocation": "19774:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 825,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 822,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "19811:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 826,
												"src": "19795:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 821,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "19795:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 824,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "19842:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 826,
												"src": "19826:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 823,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "19826:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "19794:57:0"
									},
									"src": "19768:84:0"
								},
								{
									"body": {
										"id": 835,
										"nodeType": "Block",
										"src": "19973:51:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 831,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 806,
																"src": "20003:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 832,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "20003:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 830,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 916,
														"src": "19984:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 833,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "19984:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 834,
												"nodeType": "ExpressionStatement",
												"src": "19984:32:0"
											}
										]
									},
									"documentation": {
										"id": 827,
										"nodeType": "StructuredDocumentation",
										"src": "19860:93:0",
										"text": " @dev Initializes the contract setting the deployer as the initial owner."
									},
									"id": 836,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 828,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "19970:2:0"
									},
									"returnParameters": {
										"id": 829,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "19973:0:0"
									},
									"scope": 917,
									"src": "19959:65:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 844,
										"nodeType": "Block",
										"src": "20160:32:0",
										"statements": [
											{
												"expression": {
													"id": 842,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 820,
													"src": "20178:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 841,
												"id": 843,
												"nodeType": "Return",
												"src": "20171:13:0"
											}
										]
									},
									"documentation": {
										"id": 837,
										"nodeType": "StructuredDocumentation",
										"src": "20032:67:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 845,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "20114:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 838,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "20119:2:0"
									},
									"returnParameters": {
										"id": 841,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 840,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 845,
												"src": "20151:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 839,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "20151:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "20150:9:0"
									},
									"scope": 917,
									"src": "20105:87:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 858,
										"nodeType": "Block",
										"src": "20306:99:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 853,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 849,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 845,
																	"src": "20325:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 850,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "20325:7:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 851,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 806,
																	"src": "20336:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 852,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "20336:12:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "20325:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
															"id": 854,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "20350:34:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															},
															"value": "Ownable: caller is not the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															}
														],
														"id": 848,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "20317:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 855,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "20317:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 856,
												"nodeType": "ExpressionStatement",
												"src": "20317:68:0"
											},
											{
												"id": 857,
												"nodeType": "PlaceholderStatement",
												"src": "20396:1:0"
											}
										]
									},
									"documentation": {
										"id": 846,
										"nodeType": "StructuredDocumentation",
										"src": "20200:79:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 859,
									"name": "onlyOwner",
									"nameLocation": "20294:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 847,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "20303:2:0"
									},
									"src": "20285:120:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 872,
										"nodeType": "Block",
										"src": "20810:49:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 868,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "20848:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 867,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "20840:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 866,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "20840:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 869,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "20840:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 865,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 916,
														"src": "20821:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 870,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "20821:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 871,
												"nodeType": "ExpressionStatement",
												"src": "20821:30:0"
											}
										]
									},
									"documentation": {
										"id": 860,
										"nodeType": "StructuredDocumentation",
										"src": "20413:337:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions anymore. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby removing any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 873,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 863,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 862,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 859,
												"src": "20800:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "20800:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "20765:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 861,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "20782:2:0"
									},
									"returnParameters": {
										"id": 864,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "20810:0:0"
									},
									"scope": 917,
									"src": "20756:103:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 895,
										"nodeType": "Block",
										"src": "21084:131:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 887,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 882,
																"name": "newOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 876,
																"src": "21103:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 885,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "21123:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 884,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "21115:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 883,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "21115:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 886,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "21115:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "21103:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
															"id": 888,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "21127:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															},
															"value": "Ownable: new owner is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															}
														],
														"id": 881,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "21095:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 889,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "21095:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 890,
												"nodeType": "ExpressionStatement",
												"src": "21095:73:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 892,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 876,
															"src": "21198:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 891,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 916,
														"src": "21179:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 893,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "21179:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 894,
												"nodeType": "ExpressionStatement",
												"src": "21179:28:0"
											}
										]
									},
									"documentation": {
										"id": 874,
										"nodeType": "StructuredDocumentation",
										"src": "20867:141:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 896,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 879,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 878,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 859,
												"src": "21074:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "21074:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "21023:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 877,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 876,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "21049:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 896,
												"src": "21041:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 875,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "21041:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "21040:18:0"
									},
									"returnParameters": {
										"id": 880,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "21084:0:0"
									},
									"scope": 917,
									"src": "21014:201:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 915,
										"nodeType": "Block",
										"src": "21438:128:0",
										"statements": [
											{
												"assignments": [
													903
												],
												"declarations": [
													{
														"constant": false,
														"id": 903,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "21457:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 915,
														"src": "21449:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 902,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "21449:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 905,
												"initialValue": {
													"id": 904,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 820,
													"src": "21468:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "21449:25:0"
											},
											{
												"expression": {
													"id": 908,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 906,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 820,
														"src": "21485:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 907,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 899,
														"src": "21494:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "21485:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 909,
												"nodeType": "ExpressionStatement",
												"src": "21485:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 911,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 903,
															"src": "21539:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 912,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 899,
															"src": "21549:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 910,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 826,
														"src": "21518:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 913,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "21518:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 914,
												"nodeType": "EmitStatement",
												"src": "21513:45:0"
											}
										]
									},
									"documentation": {
										"id": 897,
										"nodeType": "StructuredDocumentation",
										"src": "21223:146:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 916,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "21384:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 900,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 899,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "21411:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 916,
												"src": "21403:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 898,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "21403:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "21402:18:0"
									},
									"returnParameters": {
										"id": 901,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "21438:0:0"
									},
									"scope": 917,
									"src": "21375:191:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 2290,
							"src": "19693:1876:0",
							"usedErrors": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IMigratorChef",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 927,
							"linearizedBaseContracts": [
								927
							],
							"name": "IMigratorChef",
							"nameLocation": "21583:13:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "ce5494bb",
									"id": 926,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "migrate",
									"nameLocation": "21613:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 921,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 920,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "21628:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 926,
												"src": "21621:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$286",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 919,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 918,
														"name": "IERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 286,
														"src": "21621:6:0"
													},
													"referencedDeclaration": 286,
													"src": "21621:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$286",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "21620:14:0"
									},
									"returnParameters": {
										"id": 925,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 924,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 926,
												"src": "21653:6:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$286",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 923,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 922,
														"name": "IERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 286,
														"src": "21653:6:0"
													},
													"referencedDeclaration": 286,
													"src": "21653:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$286",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "21652:8:0"
									},
									"scope": 927,
									"src": "21604:57:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2290,
							"src": "21573:91:0",
							"usedErrors": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 933,
							"linearizedBaseContracts": [
								933
							],
							"name": "IERC721",
							"nameLocation": "21678:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "17e5883c",
									"id": 932,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "createNFT",
									"nameLocation": "21702:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 930,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 929,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "21720:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 932,
												"src": "21712:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 928,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "21712:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "21711:12:0"
									},
									"returnParameters": {
										"id": 931,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "21732:0:0"
									},
									"scope": 933,
									"src": "21693:40:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2290,
							"src": "21668:68:0",
							"usedErrors": []
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 934,
										"name": "Ownable",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 917,
										"src": "22137:7:0"
									},
									"id": 935,
									"nodeType": "InheritanceSpecifier",
									"src": "22137:7:0"
								}
							],
							"canonicalName": "NFTMasterChef",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 2289,
							"linearizedBaseContracts": [
								2289,
								917,
								816
							],
							"name": "NFTMasterChef",
							"nameLocation": "22120:13:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 938,
									"libraryName": {
										"id": 936,
										"name": "SafeMath",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 194,
										"src": "22158:8:0"
									},
									"nodeType": "UsingForDirective",
									"src": "22152:27:0",
									"typeName": {
										"id": 937,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "22171:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"global": false,
									"id": 942,
									"libraryName": {
										"id": 939,
										"name": "SafeERC20",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 797,
										"src": "22191:9:0"
									},
									"nodeType": "UsingForDirective",
									"src": "22185:27:0",
									"typeName": {
										"id": 941,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 940,
											"name": "IERC20",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 286,
											"src": "22205:6:0"
										},
										"referencedDeclaration": 286,
										"src": "22205:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$286",
											"typeString": "contract IERC20"
										}
									}
								},
								{
									"canonicalName": "NFTMasterChef.UserInfo",
									"id": 947,
									"members": [
										{
											"constant": false,
											"id": 944,
											"mutability": "mutable",
											"name": "amount",
											"nameLocation": "22280:6:0",
											"nodeType": "VariableDeclaration",
											"scope": 947,
											"src": "22272:14:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 943,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "22272:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 946,
											"mutability": "mutable",
											"name": "rewardDebt",
											"nameLocation": "22350:10:0",
											"nodeType": "VariableDeclaration",
											"scope": 947,
											"src": "22342:18:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 945,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "22342:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "UserInfo",
									"nameLocation": "22252:8:0",
									"nodeType": "StructDefinition",
									"scope": 2289,
									"src": "22245:794:0",
									"visibility": "public"
								},
								{
									"canonicalName": "NFTMasterChef.PoolInfo",
									"id": 957,
									"members": [
										{
											"constant": false,
											"id": 950,
											"mutability": "mutable",
											"name": "lpToken",
											"nameLocation": "23106:7:0",
											"nodeType": "VariableDeclaration",
											"scope": 957,
											"src": "23099:14:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_contract$_IERC20_$286",
												"typeString": "contract IERC20"
											},
											"typeName": {
												"id": 949,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 948,
													"name": "IERC20",
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 286,
													"src": "23099:6:0"
												},
												"referencedDeclaration": 286,
												"src": "23099:6:0",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$286",
													"typeString": "contract IERC20"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 952,
											"mutability": "mutable",
											"name": "allocPoint",
											"nameLocation": "23165:10:0",
											"nodeType": "VariableDeclaration",
											"scope": 957,
											"src": "23157:18:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 951,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "23157:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 954,
											"mutability": "mutable",
											"name": "lastRewardBlock",
											"nameLocation": "23279:15:0",
											"nodeType": "VariableDeclaration",
											"scope": 957,
											"src": "23271:23:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 953,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "23271:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 956,
											"mutability": "mutable",
											"name": "accPowerPerShare",
											"nameLocation": "23367:16:0",
											"nodeType": "VariableDeclaration",
											"scope": 957,
											"src": "23359:24:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 955,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "23359:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "PoolInfo",
									"nameLocation": "23079:8:0",
									"nodeType": "StructDefinition",
									"scope": 2289,
									"src": "23072:375:0",
									"visibility": "public"
								},
								{
									"canonicalName": "NFTMasterChef.NFTsInfo",
									"id": 963,
									"members": [
										{
											"constant": false,
											"id": 960,
											"mutability": "mutable",
											"name": "NFT",
											"nameLocation": "23490:3:0",
											"nodeType": "VariableDeclaration",
											"scope": 963,
											"src": "23482:11:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_contract$_IERC721_$933",
												"typeString": "contract IERC721"
											},
											"typeName": {
												"id": 959,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 958,
													"name": "IERC721",
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 933,
													"src": "23482:7:0"
												},
												"referencedDeclaration": 933,
												"src": "23482:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC721_$933",
													"typeString": "contract IERC721"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 962,
											"mutability": "mutable",
											"name": "power",
											"nameLocation": "23512:5:0",
											"nodeType": "VariableDeclaration",
											"scope": 963,
											"src": "23504:13:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 961,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "23504:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "NFTsInfo",
									"nameLocation": "23462:8:0",
									"nodeType": "StructDefinition",
									"scope": 2289,
									"src": "23455:70:0",
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "61c1b724",
									"id": 967,
									"mutability": "mutable",
									"name": "nftsInfo",
									"nameLocation": "23551:8:0",
									"nodeType": "VariableDeclaration",
									"scope": 2289,
									"src": "23533:26:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_struct$_NFTsInfo_$963_storage_$dyn_storage",
										"typeString": "struct NFTMasterChef.NFTsInfo[]"
									},
									"typeName": {
										"baseType": {
											"id": 965,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 964,
												"name": "NFTsInfo",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 963,
												"src": "23533:8:0"
											},
											"referencedDeclaration": 963,
											"src": "23533:8:0",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_NFTsInfo_$963_storage_ptr",
												"typeString": "struct NFTMasterChef.NFTsInfo"
											}
										},
										"id": 966,
										"nodeType": "ArrayTypeName",
										"src": "23533:10:0",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_struct$_NFTsInfo_$963_storage_$dyn_storage_ptr",
											"typeString": "struct NFTMasterChef.NFTsInfo[]"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "cb3cba55",
									"id": 970,
									"mutability": "mutable",
									"name": "DDT",
									"nameLocation": "23607:3:0",
									"nodeType": "VariableDeclaration",
									"scope": 2289,
									"src": "23593:17:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC20_$286",
										"typeString": "contract IERC20"
									},
									"typeName": {
										"id": 969,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 968,
											"name": "IERC20",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 286,
											"src": "23593:6:0"
										},
										"referencedDeclaration": 286,
										"src": "23593:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$286",
											"typeString": "contract IERC20"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "d49e77cd",
									"id": 972,
									"mutability": "mutable",
									"name": "devaddr",
									"nameLocation": "23653:7:0",
									"nodeType": "VariableDeclaration",
									"scope": 2289,
									"src": "23638:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 971,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "23638:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "5990c569",
									"id": 974,
									"mutability": "mutable",
									"name": "PowerPerBlock",
									"nameLocation": "23722:13:0",
									"nodeType": "VariableDeclaration",
									"scope": 2289,
									"src": "23707:28:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 973,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "23707:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "8aa28550",
									"id": 977,
									"mutability": "mutable",
									"name": "BONUS_MULTIPLIER",
									"nameLocation": "23805:16:0",
									"nodeType": "VariableDeclaration",
									"scope": 2289,
									"src": "23790:35:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 975,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "23790:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31",
										"id": 976,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "23824:1:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1_by_1",
											"typeString": "int_const 1"
										},
										"value": "1"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "7cd07e47",
									"id": 980,
									"mutability": "mutable",
									"name": "migrator",
									"nameLocation": "23951:8:0",
									"nodeType": "VariableDeclaration",
									"scope": 2289,
									"src": "23930:29:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IMigratorChef_$927",
										"typeString": "contract IMigratorChef"
									},
									"typeName": {
										"id": 979,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 978,
											"name": "IMigratorChef",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 927,
											"src": "23930:13:0"
										},
										"referencedDeclaration": 927,
										"src": "23930:13:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IMigratorChef_$927",
											"typeString": "contract IMigratorChef"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "1526fe27",
									"id": 984,
									"mutability": "mutable",
									"name": "poolInfo",
									"nameLocation": "24011:8:0",
									"nodeType": "VariableDeclaration",
									"scope": 2289,
									"src": "23993:26:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_struct$_PoolInfo_$957_storage_$dyn_storage",
										"typeString": "struct NFTMasterChef.PoolInfo[]"
									},
									"typeName": {
										"baseType": {
											"id": 982,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 981,
												"name": "PoolInfo",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 957,
												"src": "23993:8:0"
											},
											"referencedDeclaration": 957,
											"src": "23993:8:0",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_PoolInfo_$957_storage_ptr",
												"typeString": "struct NFTMasterChef.PoolInfo"
											}
										},
										"id": 983,
										"nodeType": "ArrayTypeName",
										"src": "23993:10:0",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_struct$_PoolInfo_$957_storage_$dyn_storage_ptr",
											"typeString": "struct NFTMasterChef.PoolInfo[]"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "93f1a40b",
									"id": 991,
									"mutability": "mutable",
									"name": "userInfo",
									"nameLocation": "24131:8:0",
									"nodeType": "VariableDeclaration",
									"scope": 2289,
									"src": "24075:64:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_struct$_UserInfo_$947_storage_$_$",
										"typeString": "mapping(uint256 => mapping(address => struct NFTMasterChef.UserInfo))"
									},
									"typeName": {
										"id": 990,
										"keyType": {
											"id": 985,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "24083:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "24075:48:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_struct$_UserInfo_$947_storage_$_$",
											"typeString": "mapping(uint256 => mapping(address => struct NFTMasterChef.UserInfo))"
										},
										"valueType": {
											"id": 989,
											"keyType": {
												"id": 986,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "24102:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "24094:28:0",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserInfo_$947_storage_$",
												"typeString": "mapping(address => struct NFTMasterChef.UserInfo)"
											},
											"valueType": {
												"id": 988,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 987,
													"name": "UserInfo",
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 947,
													"src": "24113:8:0"
												},
												"referencedDeclaration": 947,
												"src": "24113:8:0",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_UserInfo_$947_storage_ptr",
													"typeString": "struct NFTMasterChef.UserInfo"
												}
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "17caf6f1",
									"id": 994,
									"mutability": "mutable",
									"name": "totalAllocPoint",
									"nameLocation": "24249:15:0",
									"nodeType": "VariableDeclaration",
									"scope": 2289,
									"src": "24234:34:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 992,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "24234:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "30",
										"id": 993,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "24267:1:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_0_by_1",
											"typeString": "int_const 0"
										},
										"value": "0"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "48cd4cb1",
									"id": 996,
									"mutability": "mutable",
									"name": "startBlock",
									"nameLocation": "24341:10:0",
									"nodeType": "VariableDeclaration",
									"scope": 2289,
									"src": "24326:25:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 995,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "24326:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "d209db8c",
									"id": 1000,
									"mutability": "mutable",
									"name": "powerBalance",
									"nameLocation": "24395:12:0",
									"nodeType": "VariableDeclaration",
									"scope": 2289,
									"src": "24360:47:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 999,
										"keyType": {
											"id": 997,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "24368:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "24360:27:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 998,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "24379:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"anonymous": false,
									"eventSelector": "90890809c654f11d6e72a28fa60149770a0d11ec6c92319d6ceb2bb0a4ea1a15",
									"id": 1008,
									"name": "Deposit",
									"nameLocation": "24422:7:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1007,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1002,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "24446:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1008,
												"src": "24430:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1001,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "24430:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1004,
												"indexed": true,
												"mutability": "mutable",
												"name": "pid",
												"nameLocation": "24468:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 1008,
												"src": "24452:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1003,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "24452:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1006,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "24481:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1008,
												"src": "24473:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1005,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "24473:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "24429:59:0"
									},
									"src": "24416:73:0"
								},
								{
									"anonymous": false,
									"eventSelector": "f279e6a1f5e320cca91135676d9cb6e44ca8a08c0b88342bcdb1144f6511b568",
									"id": 1016,
									"name": "Withdraw",
									"nameLocation": "24501:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1015,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1010,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "24526:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1016,
												"src": "24510:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1009,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "24510:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1012,
												"indexed": true,
												"mutability": "mutable",
												"name": "pid",
												"nameLocation": "24548:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 1016,
												"src": "24532:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1011,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "24532:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1014,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "24561:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1016,
												"src": "24553:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1013,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "24553:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "24509:59:0"
									},
									"src": "24495:74:0"
								},
								{
									"anonymous": false,
									"eventSelector": "bb757047c2b5f3974fe26b7c10f732e7bce710b0952a71082702781e62ae0595",
									"id": 1024,
									"name": "EmergencyWithdraw",
									"nameLocation": "24581:17:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1023,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1018,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "24625:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1024,
												"src": "24609:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1017,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "24609:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1020,
												"indexed": true,
												"mutability": "mutable",
												"name": "pid",
												"nameLocation": "24656:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 1024,
												"src": "24640:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1019,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "24640:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1022,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "24678:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1024,
												"src": "24670:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1021,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "24670:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "24598:93:0"
									},
									"src": "24575:117:0"
								},
								{
									"body": {
										"id": 1067,
										"nodeType": "Block",
										"src": "24831:387:0",
										"statements": [
											{
												"expression": {
													"id": 1038,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1036,
														"name": "DDT",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 970,
														"src": "24842:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$286",
															"typeString": "contract IERC20"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1037,
														"name": "_DDT",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1027,
														"src": "24848:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$286",
															"typeString": "contract IERC20"
														}
													},
													"src": "24842:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$286",
														"typeString": "contract IERC20"
													}
												},
												"id": 1039,
												"nodeType": "ExpressionStatement",
												"src": "24842:10:0"
											},
											{
												"expression": {
													"id": 1042,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1040,
														"name": "devaddr",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 972,
														"src": "24863:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1041,
														"name": "_devaddr",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1029,
														"src": "24873:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "24863:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1043,
												"nodeType": "ExpressionStatement",
												"src": "24863:18:0"
											},
											{
												"expression": {
													"id": 1046,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1044,
														"name": "PowerPerBlock",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 974,
														"src": "24892:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1045,
														"name": "_PowerPerBlock",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1031,
														"src": "24908:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "24892:30:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1047,
												"nodeType": "ExpressionStatement",
												"src": "24892:30:0"
											},
											{
												"expression": {
													"id": 1050,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1048,
														"name": "startBlock",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 996,
														"src": "24933:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1049,
														"name": "_startBlock",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1033,
														"src": "24946:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "24933:24:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1051,
												"nodeType": "ExpressionStatement",
												"src": "24933:24:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1056,
																	"name": "DDT",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 970,
																	"src": "25050:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$286",
																		"typeString": "contract IERC20"
																	}
																},
																{
																	"hexValue": "31303030",
																	"id": 1057,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "25080:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1000_by_1",
																		"typeString": "int_const 1000"
																	},
																	"value": "1000"
																},
																{
																	"id": 1058,
																	"name": "startBlock",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 996,
																	"src": "25116:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"hexValue": "30",
																	"id": 1059,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "25159:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$286",
																		"typeString": "contract IERC20"
																	},
																	{
																		"typeIdentifier": "t_rational_1000_by_1",
																		"typeString": "int_const 1000"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1055,
																"name": "PoolInfo",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 957,
																"src": "25017:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_struct$_PoolInfo_$957_storage_ptr_$",
																	"typeString": "type(struct NFTMasterChef.PoolInfo storage pointer)"
																}
															},
															"id": 1060,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "structConstructorCall",
															"lValueRequested": false,
															"names": [
																"lpToken",
																"allocPoint",
																"lastRewardBlock",
																"accPowerPerShare"
															],
															"nodeType": "FunctionCall",
															"src": "25017:155:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PoolInfo_$957_memory_ptr",
																"typeString": "struct NFTMasterChef.PoolInfo memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_PoolInfo_$957_memory_ptr",
																"typeString": "struct NFTMasterChef.PoolInfo memory"
															}
														],
														"expression": {
															"id": 1052,
															"name": "poolInfo",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 984,
															"src": "25003:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_PoolInfo_$957_storage_$dyn_storage",
																"typeString": "struct NFTMasterChef.PoolInfo storage ref[] storage ref"
															}
														},
														"id": 1054,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "push",
														"nodeType": "MemberAccess",
														"src": "25003:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_struct$_PoolInfo_$957_storage_$dyn_storage_ptr_$_t_struct$_PoolInfo_$957_storage_$returns$__$bound_to$_t_array$_t_struct$_PoolInfo_$957_storage_$dyn_storage_ptr_$",
															"typeString": "function (struct NFTMasterChef.PoolInfo storage ref[] storage pointer,struct NFTMasterChef.PoolInfo storage ref)"
														}
													},
													"id": 1061,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "25003:170:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1062,
												"nodeType": "ExpressionStatement",
												"src": "25003:170:0"
											},
											{
												"expression": {
													"id": 1065,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1063,
														"name": "totalAllocPoint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 994,
														"src": "25186:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "31303030",
														"id": 1064,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "25204:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1000_by_1",
															"typeString": "int_const 1000"
														},
														"value": "1000"
													},
													"src": "25186:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1066,
												"nodeType": "ExpressionStatement",
												"src": "25186:22:0"
											}
										]
									},
									"id": 1068,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1034,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1027,
												"mutability": "mutable",
												"name": "_DDT",
												"nameLocation": "24729:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1068,
												"src": "24722:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$286",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 1026,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1025,
														"name": "IERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 286,
														"src": "24722:6:0"
													},
													"referencedDeclaration": 286,
													"src": "24722:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$286",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1029,
												"mutability": "mutable",
												"name": "_devaddr",
												"nameLocation": "24752:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1068,
												"src": "24744:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1028,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "24744:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1031,
												"mutability": "mutable",
												"name": "_PowerPerBlock",
												"nameLocation": "24779:14:0",
												"nodeType": "VariableDeclaration",
												"scope": 1068,
												"src": "24771:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1030,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "24771:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1033,
												"mutability": "mutable",
												"name": "_startBlock",
												"nameLocation": "24812:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 1068,
												"src": "24804:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1032,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "24804:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "24711:119:0"
									},
									"returnParameters": {
										"id": 1035,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "24831:0:0"
									},
									"scope": 2289,
									"src": "24700:518:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1079,
										"nodeType": "Block",
										"src": "25297:47:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 1075,
														"name": "powerBalance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1000,
														"src": "25315:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 1077,
													"indexExpression": {
														"id": 1076,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1070,
														"src": "25328:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "25315:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1074,
												"id": 1078,
												"nodeType": "Return",
												"src": "25308:28:0"
											}
										]
									},
									"functionSelector": "8c51793b",
									"id": 1080,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getPowerBalance",
									"nameLocation": "25235:15:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1071,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1070,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "25259:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1080,
												"src": "25251:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1069,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "25251:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "25250:17:0"
									},
									"returnParameters": {
										"id": 1074,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1073,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1080,
												"src": "25288:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1072,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "25288:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "25287:9:0"
									},
									"scope": 2289,
									"src": "25226:118:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1099,
										"nodeType": "Block",
										"src": "25415:143:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1094,
																	"name": "_NFT",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1083,
																	"src": "25487:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC721_$933",
																		"typeString": "contract IERC721"
																	}
																},
																{
																	"id": 1095,
																	"name": "_power",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1085,
																	"src": "25517:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC721_$933",
																		"typeString": "contract IERC721"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1093,
																"name": "NFTsInfo",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 963,
																"src": "25454:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_struct$_NFTsInfo_$963_storage_ptr_$",
																	"typeString": "type(struct NFTMasterChef.NFTsInfo storage pointer)"
																}
															},
															"id": 1096,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "structConstructorCall",
															"lValueRequested": false,
															"names": [
																"NFT",
																"power"
															],
															"nodeType": "FunctionCall",
															"src": "25454:85:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_NFTsInfo_$963_memory_ptr",
																"typeString": "struct NFTMasterChef.NFTsInfo memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_NFTsInfo_$963_memory_ptr",
																"typeString": "struct NFTMasterChef.NFTsInfo memory"
															}
														],
														"expression": {
															"id": 1090,
															"name": "nftsInfo",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 967,
															"src": "25426:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_NFTsInfo_$963_storage_$dyn_storage",
																"typeString": "struct NFTMasterChef.NFTsInfo storage ref[] storage ref"
															}
														},
														"id": 1092,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "push",
														"nodeType": "MemberAccess",
														"src": "25426:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_struct$_NFTsInfo_$963_storage_$dyn_storage_ptr_$_t_struct$_NFTsInfo_$963_storage_$returns$__$bound_to$_t_array$_t_struct$_NFTsInfo_$963_storage_$dyn_storage_ptr_$",
															"typeString": "function (struct NFTMasterChef.NFTsInfo storage ref[] storage pointer,struct NFTMasterChef.NFTsInfo storage ref)"
														}
													},
													"id": 1097,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "25426:124:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1098,
												"nodeType": "ExpressionStatement",
												"src": "25426:124:0"
											}
										]
									},
									"functionSelector": "4ea2813c",
									"id": 1100,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1088,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1087,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 859,
												"src": "25405:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "25405:9:0"
										}
									],
									"name": "addNFT",
									"nameLocation": "25361:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1086,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1083,
												"mutability": "mutable",
												"name": "_NFT",
												"nameLocation": "25376:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1100,
												"src": "25368:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC721_$933",
													"typeString": "contract IERC721"
												},
												"typeName": {
													"id": 1082,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1081,
														"name": "IERC721",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 933,
														"src": "25368:7:0"
													},
													"referencedDeclaration": 933,
													"src": "25368:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC721_$933",
														"typeString": "contract IERC721"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1085,
												"mutability": "mutable",
												"name": "_power",
												"nameLocation": "25390:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1100,
												"src": "25382:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1084,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "25382:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "25367:30:0"
									},
									"returnParameters": {
										"id": 1089,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "25415:0:0"
									},
									"scope": 2289,
									"src": "25352:206:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1278,
										"nodeType": "Block",
										"src": "25626:1208:0",
										"statements": [
											{
												"assignments": [
													1109
												],
												"declarations": [
													{
														"constant": false,
														"id": 1109,
														"mutability": "mutable",
														"name": "pool",
														"nameLocation": "25654:4:0",
														"nodeType": "VariableDeclaration",
														"scope": 1278,
														"src": "25637:21:0",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_PoolInfo_$957_storage_ptr",
															"typeString": "struct NFTMasterChef.PoolInfo"
														},
														"typeName": {
															"id": 1108,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1107,
																"name": "PoolInfo",
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 957,
																"src": "25637:8:0"
															},
															"referencedDeclaration": 957,
															"src": "25637:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PoolInfo_$957_storage_ptr",
																"typeString": "struct NFTMasterChef.PoolInfo"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1113,
												"initialValue": {
													"baseExpression": {
														"id": 1110,
														"name": "poolInfo",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 984,
														"src": "25661:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_PoolInfo_$957_storage_$dyn_storage",
															"typeString": "struct NFTMasterChef.PoolInfo storage ref[] storage ref"
														}
													},
													"id": 1112,
													"indexExpression": {
														"id": 1111,
														"name": "_pid",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1104,
														"src": "25670:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "25661:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_PoolInfo_$957_storage",
														"typeString": "struct NFTMasterChef.PoolInfo storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "25637:38:0"
											},
											{
												"assignments": [
													1116
												],
												"declarations": [
													{
														"constant": false,
														"id": 1116,
														"mutability": "mutable",
														"name": "user",
														"nameLocation": "25703:4:0",
														"nodeType": "VariableDeclaration",
														"scope": 1278,
														"src": "25686:21:0",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_UserInfo_$947_storage_ptr",
															"typeString": "struct NFTMasterChef.UserInfo"
														},
														"typeName": {
															"id": 1115,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1114,
																"name": "UserInfo",
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 947,
																"src": "25686:8:0"
															},
															"referencedDeclaration": 947,
															"src": "25686:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$947_storage_ptr",
																"typeString": "struct NFTMasterChef.UserInfo"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1123,
												"initialValue": {
													"baseExpression": {
														"baseExpression": {
															"id": 1117,
															"name": "userInfo",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 991,
															"src": "25710:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_struct$_UserInfo_$947_storage_$_$",
																"typeString": "mapping(uint256 => mapping(address => struct NFTMasterChef.UserInfo storage ref))"
															}
														},
														"id": 1119,
														"indexExpression": {
															"id": 1118,
															"name": "_pid",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1104,
															"src": "25719:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "25710:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserInfo_$947_storage_$",
															"typeString": "mapping(address => struct NFTMasterChef.UserInfo storage ref)"
														}
													},
													"id": 1122,
													"indexExpression": {
														"expression": {
															"id": 1120,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "25725:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 1121,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "25725:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "25710:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UserInfo_$947_storage",
														"typeString": "struct NFTMasterChef.UserInfo storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "25686:50:0"
											},
											{
												"assignments": [
													1125
												],
												"declarations": [
													{
														"constant": false,
														"id": 1125,
														"mutability": "mutable",
														"name": "accPowerPerShare",
														"nameLocation": "25755:16:0",
														"nodeType": "VariableDeclaration",
														"scope": 1278,
														"src": "25747:24:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1124,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "25747:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1128,
												"initialValue": {
													"expression": {
														"id": 1126,
														"name": "pool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1109,
														"src": "25774:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_PoolInfo_$957_storage_ptr",
															"typeString": "struct NFTMasterChef.PoolInfo storage pointer"
														}
													},
													"id": 1127,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "accPowerPerShare",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 956,
													"src": "25774:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "25747:48:0"
											},
											{
												"assignments": [
													1130
												],
												"declarations": [
													{
														"constant": false,
														"id": 1130,
														"mutability": "mutable",
														"name": "lpSupply",
														"nameLocation": "25814:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 1278,
														"src": "25806:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1129,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "25806:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1139,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1136,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "25856:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_NFTMasterChef_$2289",
																		"typeString": "contract NFTMasterChef"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_NFTMasterChef_$2289",
																		"typeString": "contract NFTMasterChef"
																	}
																],
																"id": 1135,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "25848:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1134,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "25848:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 1137,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "25848:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"expression": {
																"id": 1131,
																"name": "pool",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1109,
																"src": "25825:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_PoolInfo_$957_storage_ptr",
																	"typeString": "struct NFTMasterChef.PoolInfo storage pointer"
																}
															},
															"id": 1132,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "lpToken",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 950,
															"src": "25825:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$286",
																"typeString": "contract IERC20"
															}
														},
														"id": 1133,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "balanceOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 208,
														"src": "25825:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 1138,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "25825:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "25806:56:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1148,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1144,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 1140,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "25877:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 1141,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "number",
															"nodeType": "MemberAccess",
															"src": "25877:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"expression": {
																"id": 1142,
																"name": "pool",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1109,
																"src": "25892:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_PoolInfo_$957_storage_ptr",
																	"typeString": "struct NFTMasterChef.PoolInfo storage pointer"
																}
															},
															"id": 1143,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "lastRewardBlock",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 954,
															"src": "25892:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "25877:35:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1147,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1145,
															"name": "lpSupply",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1130,
															"src": "25916:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"hexValue": "30",
															"id": 1146,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "25928:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "25916:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "25877:52:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1186,
												"nodeType": "IfStatement",
												"src": "25873:354:0",
												"trueBody": {
													"id": 1185,
													"nodeType": "Block",
													"src": "25931:296:0",
													"statements": [
														{
															"assignments": [
																1150
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1150,
																	"mutability": "mutable",
																	"name": "multiplier",
																	"nameLocation": "25954:10:0",
																	"nodeType": "VariableDeclaration",
																	"scope": 1185,
																	"src": "25946:18:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1149,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "25946:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1157,
															"initialValue": {
																"arguments": [
																	{
																		"expression": {
																			"id": 1152,
																			"name": "pool",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1109,
																			"src": "25981:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_PoolInfo_$957_storage_ptr",
																				"typeString": "struct NFTMasterChef.PoolInfo storage pointer"
																			}
																		},
																		"id": 1153,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "lastRewardBlock",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 954,
																		"src": "25981:20:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"expression": {
																			"id": 1154,
																			"name": "block",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967292,
																			"src": "26003:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_block",
																				"typeString": "block"
																			}
																		},
																		"id": 1155,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "number",
																		"nodeType": "MemberAccess",
																		"src": "26003:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1151,
																	"name": "getMultiplier",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1496,
																	"src": "25967:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																		"typeString": "function (uint256,uint256) view returns (uint256)"
																	}
																},
																"id": 1156,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "25967:49:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "25946:70:0"
														},
														{
															"assignments": [
																1159
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1159,
																	"mutability": "mutable",
																	"name": "PowerReward",
																	"nameLocation": "26039:11:0",
																	"nodeType": "VariableDeclaration",
																	"scope": 1185,
																	"src": "26031:19:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1158,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "26031:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1171,
															"initialValue": {
																"arguments": [
																	{
																		"id": 1169,
																		"name": "totalAllocPoint",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 994,
																		"src": "26108:15:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"expression": {
																					"id": 1165,
																					"name": "pool",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1109,
																					"src": "26087:4:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_PoolInfo_$957_storage_ptr",
																						"typeString": "struct NFTMasterChef.PoolInfo storage pointer"
																					}
																				},
																				"id": 1166,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "allocPoint",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 952,
																				"src": "26087:15:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"expression": {
																				"arguments": [
																					{
																						"id": 1162,
																						"name": "PowerPerBlock",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 974,
																						"src": "26068:13:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					],
																					"expression": {
																						"id": 1160,
																						"name": "multiplier",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1150,
																						"src": "26053:10:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"id": 1161,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "mul",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 107,
																					"src": "26053:14:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																						"typeString": "function (uint256,uint256) pure returns (uint256)"
																					}
																				},
																				"id": 1163,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "26053:29:0",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"id": 1164,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "mul",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 107,
																			"src": "26053:33:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																				"typeString": "function (uint256,uint256) pure returns (uint256)"
																			}
																		},
																		"id": 1167,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "26053:50:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1168,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "div",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 124,
																	"src": "26053:54:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 1170,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "26053:71:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "26031:93:0"
														},
														{
															"expression": {
																"id": 1183,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1172,
																	"name": "accPowerPerShare",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1125,
																	"src": "26139:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 1180,
																					"name": "lpSupply",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1130,
																					"src": "26205:8:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"arguments": [
																						{
																							"hexValue": "31653132",
																							"id": 1177,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "26195:4:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_1000000000000_by_1",
																								"typeString": "int_const 1000000000000"
																							},
																							"value": "1e12"
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_rational_1000000000000_by_1",
																								"typeString": "int_const 1000000000000"
																							}
																						],
																						"expression": {
																							"id": 1175,
																							"name": "PowerReward",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1159,
																							"src": "26179:11:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"id": 1176,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberName": "mul",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 107,
																						"src": "26179:15:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																							"typeString": "function (uint256,uint256) pure returns (uint256)"
																						}
																					},
																					"id": 1178,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "26179:21:0",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 1179,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "div",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 124,
																				"src": "26179:25:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																					"typeString": "function (uint256,uint256) pure returns (uint256)"
																				}
																			},
																			"id": 1181,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "26179:35:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"id": 1173,
																			"name": "accPowerPerShare",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1125,
																			"src": "26158:16:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1174,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "add",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 27,
																		"src": "26158:20:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 1182,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "26158:57:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "26139:76:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1184,
															"nodeType": "ExpressionStatement",
															"src": "26139:76:0"
														}
													]
												}
											},
											{
												"assignments": [
													1188
												],
												"declarations": [
													{
														"constant": false,
														"id": 1188,
														"mutability": "mutable",
														"name": "pending",
														"nameLocation": "26245:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 1278,
														"src": "26237:15:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1187,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "26237:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1201,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 1198,
																"name": "user",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1116,
																"src": "26303:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_UserInfo_$947_storage_ptr",
																	"typeString": "struct NFTMasterChef.UserInfo storage pointer"
																}
															},
															"id": 1199,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "rewardDebt",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 946,
															"src": "26303:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"hexValue": "31653132",
																	"id": 1195,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "26293:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1000000000000_by_1",
																		"typeString": "int_const 1000000000000"
																	},
																	"value": "1e12"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_1000000000000_by_1",
																		"typeString": "int_const 1000000000000"
																	}
																],
																"expression": {
																	"arguments": [
																		{
																			"id": 1192,
																			"name": "accPowerPerShare",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1125,
																			"src": "26271:16:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"expression": {
																				"id": 1189,
																				"name": "user",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1116,
																				"src": "26255:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_UserInfo_$947_storage_ptr",
																					"typeString": "struct NFTMasterChef.UserInfo storage pointer"
																				}
																			},
																			"id": 1190,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "amount",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 944,
																			"src": "26255:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1191,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "mul",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 107,
																		"src": "26255:15:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 1193,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "26255:33:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1194,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "div",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 124,
																"src": "26255:37:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 1196,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "26255:43:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1197,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sub",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 44,
														"src": "26255:47:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1200,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "26255:64:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "26237:82:0"
											},
											{
												"assignments": [
													1204
												],
												"declarations": [
													{
														"constant": false,
														"id": 1204,
														"mutability": "mutable",
														"name": "nft",
														"nameLocation": "26347:3:0",
														"nodeType": "VariableDeclaration",
														"scope": 1278,
														"src": "26330:20:0",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_NFTsInfo_$963_storage_ptr",
															"typeString": "struct NFTMasterChef.NFTsInfo"
														},
														"typeName": {
															"id": 1203,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1202,
																"name": "NFTsInfo",
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 963,
																"src": "26330:8:0"
															},
															"referencedDeclaration": 963,
															"src": "26330:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_NFTsInfo_$963_storage_ptr",
																"typeString": "struct NFTMasterChef.NFTsInfo"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1208,
												"initialValue": {
													"baseExpression": {
														"id": 1205,
														"name": "nftsInfo",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 967,
														"src": "26353:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_NFTsInfo_$963_storage_$dyn_storage",
															"typeString": "struct NFTMasterChef.NFTsInfo storage ref[] storage ref"
														}
													},
													"id": 1207,
													"indexExpression": {
														"id": 1206,
														"name": "level",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1102,
														"src": "26362:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "26353:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_NFTsInfo_$963_storage",
														"typeString": "struct NFTMasterChef.NFTsInfo storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "26330:38:0"
											},
											{
												"assignments": [
													1210
												],
												"declarations": [
													{
														"constant": false,
														"id": 1210,
														"mutability": "mutable",
														"name": "total",
														"nameLocation": "26387:5:0",
														"nodeType": "VariableDeclaration",
														"scope": 1278,
														"src": "26379:13:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1209,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "26379:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1218,
												"initialValue": {
													"arguments": [
														{
															"baseExpression": {
																"id": 1213,
																"name": "powerBalance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1000,
																"src": "26407:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																	"typeString": "mapping(address => uint256)"
																}
															},
															"id": 1216,
															"indexExpression": {
																"expression": {
																	"id": 1214,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "26420:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1215,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "26420:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "26407:24:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1211,
															"name": "pending",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1188,
															"src": "26395:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1212,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "add",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 27,
														"src": "26395:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1217,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "26395:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "26379:53:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1222,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1219,
														"name": "total",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1210,
														"src": "26446:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"id": 1220,
															"name": "nft",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1204,
															"src": "26454:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_NFTsInfo_$963_storage_ptr",
																"typeString": "struct NFTMasterChef.NFTsInfo storage pointer"
															}
														},
														"id": 1221,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "power",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 962,
														"src": "26454:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "26446:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1243,
												"nodeType": "IfStatement",
												"src": "26443:188:0",
												"trueBody": {
													"id": 1242,
													"nodeType": "Block",
													"src": "26464:167:0",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1225,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1223,
																	"name": "_pid",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1104,
																	"src": "26482:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 1224,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "26490:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "26482:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1231,
															"nodeType": "IfStatement",
															"src": "26479:63:0",
															"trueBody": {
																"id": 1230,
																"nodeType": "Block",
																"src": "26492:50:0",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"hexValue": "30",
																					"id": 1227,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "26524:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					},
																					"value": "0"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					}
																				],
																				"id": 1226,
																				"name": "leaveStaking",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2207,
																				"src": "26511:12:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
																					"typeString": "function (uint256)"
																				}
																			},
																			"id": 1228,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "26511:15:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1229,
																		"nodeType": "ExpressionStatement",
																		"src": "26511:15:0"
																	}
																]
															}
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1234,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1232,
																	"name": "_pid",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1104,
																	"src": "26559:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 1233,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "26567:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "26559:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1241,
															"nodeType": "IfStatement",
															"src": "26556:64:0",
															"trueBody": {
																"id": 1240,
																"nodeType": "Block",
																"src": "26569:51:0",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 1236,
																					"name": "_pid",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1104,
																					"src": "26597:4:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"hexValue": "30",
																					"id": 1237,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "26602:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					},
																					"value": "0"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					}
																				],
																				"id": 1235,
																				"name": "withdraw",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1960,
																				"src": "26588:8:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
																					"typeString": "function (uint256,uint256)"
																				}
																			},
																			"id": 1238,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "26588:16:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1239,
																		"nodeType": "ExpressionStatement",
																		"src": "26588:16:0"
																	}
																]
															}
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1251,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1245,
																	"name": "nft",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1204,
																	"src": "26649:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_NFTsInfo_$963_storage_ptr",
																		"typeString": "struct NFTMasterChef.NFTsInfo storage pointer"
																	}
																},
																"id": 1246,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "power",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 962,
																"src": "26649:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"baseExpression": {
																	"id": 1247,
																	"name": "powerBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1000,
																	"src": "26661:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 1250,
																"indexExpression": {
																	"expression": {
																		"id": 1248,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "26674:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 1249,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "26674:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "26661:24:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "26649:36:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "506f776572206973206e6f7420656e6f756768",
															"id": 1252,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "26687:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_2802e724701dc68a9a3726c72d44a6e6756fa09a3efd95f836f437d22954c406",
																"typeString": "literal_string \"Power is not enough\""
															},
															"value": "Power is not enough"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_2802e724701dc68a9a3726c72d44a6e6756fa09a3efd95f836f437d22954c406",
																"typeString": "literal_string \"Power is not enough\""
															}
														],
														"id": 1244,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "26641:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1253,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "26641:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1254,
												"nodeType": "ExpressionStatement",
												"src": "26641:68:0"
											},
											{
												"expression": {
													"id": 1267,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1255,
															"name": "powerBalance",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1000,
															"src": "26720:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1258,
														"indexExpression": {
															"expression": {
																"id": 1256,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "26733:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1257,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "26733:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "26720:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"expression": {
																	"id": 1264,
																	"name": "nft",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1204,
																	"src": "26776:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_NFTsInfo_$963_storage_ptr",
																		"typeString": "struct NFTMasterChef.NFTsInfo storage pointer"
																	}
																},
																"id": 1265,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "power",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 962,
																"src": "26776:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"baseExpression": {
																	"id": 1259,
																	"name": "powerBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1000,
																	"src": "26747:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 1262,
																"indexExpression": {
																	"expression": {
																		"id": 1260,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "26760:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 1261,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "26760:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "26747:24:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1263,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 44,
															"src": "26747:28:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1266,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "26747:39:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "26720:66:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1268,
												"nodeType": "ExpressionStatement",
												"src": "26720:66:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1274,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "26815:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1275,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "26815:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"expression": {
																"id": 1269,
																"name": "nft",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1204,
																"src": "26797:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_NFTsInfo_$963_storage_ptr",
																	"typeString": "struct NFTMasterChef.NFTsInfo storage pointer"
																}
															},
															"id": 1272,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "NFT",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 960,
															"src": "26797:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC721_$933",
																"typeString": "contract IERC721"
															}
														},
														"id": 1273,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "createNFT",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 932,
														"src": "26797:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address) external"
														}
													},
													"id": 1276,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "26797:29:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1277,
												"nodeType": "ExpressionStatement",
												"src": "26797:29:0"
											}
										]
									},
									"functionSelector": "1d5fbd87",
									"id": 1279,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "claimNFTReward",
									"nameLocation": "25575:14:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1105,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1102,
												"mutability": "mutable",
												"name": "level",
												"nameLocation": "25598:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1279,
												"src": "25590:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1101,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "25590:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1104,
												"mutability": "mutable",
												"name": "_pid",
												"nameLocation": "25613:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1279,
												"src": "25605:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1103,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "25605:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "25589:29:0"
									},
									"returnParameters": {
										"id": 1106,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "25626:0:0"
									},
									"scope": 2289,
									"src": "25566:1268:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1290,
										"nodeType": "Block",
										"src": "26911:54:0",
										"statements": [
											{
												"expression": {
													"id": 1288,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1286,
														"name": "BONUS_MULTIPLIER",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 977,
														"src": "26922:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1287,
														"name": "multiplierNumber",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1281,
														"src": "26941:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "26922:35:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1289,
												"nodeType": "ExpressionStatement",
												"src": "26922:35:0"
											}
										]
									},
									"functionSelector": "5ffe6146",
									"id": 1291,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1284,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1283,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 859,
												"src": "26901:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "26901:9:0"
										}
									],
									"name": "updateMultiplier",
									"nameLocation": "26851:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1282,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1281,
												"mutability": "mutable",
												"name": "multiplierNumber",
												"nameLocation": "26876:16:0",
												"nodeType": "VariableDeclaration",
												"scope": 1291,
												"src": "26868:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1280,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "26868:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "26867:26:0"
									},
									"returnParameters": {
										"id": 1285,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "26911:0:0"
									},
									"scope": 2289,
									"src": "26842:123:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1299,
										"nodeType": "Block",
										"src": "27027:41:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1296,
														"name": "poolInfo",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 984,
														"src": "27045:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_PoolInfo_$957_storage_$dyn_storage",
															"typeString": "struct NFTMasterChef.PoolInfo storage ref[] storage ref"
														}
													},
													"id": 1297,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "length",
													"nodeType": "MemberAccess",
													"src": "27045:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1295,
												"id": 1298,
												"nodeType": "Return",
												"src": "27038:22:0"
											}
										]
									},
									"functionSelector": "081e3eda",
									"id": 1300,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "poolLength",
									"nameLocation": "26982:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1292,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "26992:2:0"
									},
									"returnParameters": {
										"id": 1295,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1294,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1300,
												"src": "27018:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1293,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "27018:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "27017:9:0"
									},
									"scope": 2289,
									"src": "26973:95:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1347,
										"nodeType": "Block",
										"src": "27325:472:0",
										"statements": [
											{
												"condition": {
													"id": 1312,
													"name": "_withUpdate",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1307,
													"src": "27340:11:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1317,
												"nodeType": "IfStatement",
												"src": "27336:61:0",
												"trueBody": {
													"id": 1316,
													"nodeType": "Block",
													"src": "27353:44:0",
													"statements": [
														{
															"expression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1313,
																	"name": "massUpdatePools",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1623,
																	"src": "27368:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
																		"typeString": "function ()"
																	}
																},
																"id": 1314,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "27368:17:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1315,
															"nodeType": "ExpressionStatement",
															"src": "27368:17:0"
														}
													]
												}
											},
											{
												"assignments": [
													1319
												],
												"declarations": [
													{
														"constant": false,
														"id": 1319,
														"mutability": "mutable",
														"name": "lastRewardBlock",
														"nameLocation": "27415:15:0",
														"nodeType": "VariableDeclaration",
														"scope": 1347,
														"src": "27407:23:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1318,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "27407:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1328,
												"initialValue": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1323,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 1320,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "27433:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 1321,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "number",
															"nodeType": "MemberAccess",
															"src": "27433:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"id": 1322,
															"name": "startBlock",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 996,
															"src": "27448:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "27433:25:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 1326,
														"name": "startBlock",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 996,
														"src": "27476:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1327,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "27433:53:0",
													"trueExpression": {
														"expression": {
															"id": 1324,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "27461:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 1325,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "number",
														"nodeType": "MemberAccess",
														"src": "27461:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "27407:79:0"
											},
											{
												"expression": {
													"id": 1334,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1329,
														"name": "totalAllocPoint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 994,
														"src": "27497:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1332,
																"name": "_allocPoint",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1302,
																"src": "27535:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"id": 1330,
																"name": "totalAllocPoint",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 994,
																"src": "27515:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1331,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 27,
															"src": "27515:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1333,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "27515:32:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "27497:50:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1335,
												"nodeType": "ExpressionStatement",
												"src": "27497:50:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1340,
																	"name": "_lpToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1305,
																	"src": "27623:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$286",
																		"typeString": "contract IERC20"
																	}
																},
																{
																	"id": 1341,
																	"name": "_allocPoint",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1302,
																	"src": "27662:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 1342,
																	"name": "lastRewardBlock",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1319,
																	"src": "27709:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"hexValue": "30",
																	"id": 1343,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "27761:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$286",
																		"typeString": "contract IERC20"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1339,
																"name": "PoolInfo",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 957,
																"src": "27586:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_struct$_PoolInfo_$957_storage_ptr_$",
																	"typeString": "type(struct NFTMasterChef.PoolInfo storage pointer)"
																}
															},
															"id": 1344,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "structConstructorCall",
															"lValueRequested": false,
															"names": [
																"lpToken",
																"allocPoint",
																"lastRewardBlock",
																"accPowerPerShare"
															],
															"nodeType": "FunctionCall",
															"src": "27586:192:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PoolInfo_$957_memory_ptr",
																"typeString": "struct NFTMasterChef.PoolInfo memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_PoolInfo_$957_memory_ptr",
																"typeString": "struct NFTMasterChef.PoolInfo memory"
															}
														],
														"expression": {
															"id": 1336,
															"name": "poolInfo",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 984,
															"src": "27558:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_PoolInfo_$957_storage_$dyn_storage",
																"typeString": "struct NFTMasterChef.PoolInfo storage ref[] storage ref"
															}
														},
														"id": 1338,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "push",
														"nodeType": "MemberAccess",
														"src": "27558:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_struct$_PoolInfo_$957_storage_$dyn_storage_ptr_$_t_struct$_PoolInfo_$957_storage_$returns$__$bound_to$_t_array$_t_struct$_PoolInfo_$957_storage_$dyn_storage_ptr_$",
															"typeString": "function (struct NFTMasterChef.PoolInfo storage ref[] storage pointer,struct NFTMasterChef.PoolInfo storage ref)"
														}
													},
													"id": 1345,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "27558:231:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1346,
												"nodeType": "ExpressionStatement",
												"src": "27558:231:0"
											}
										]
									},
									"functionSelector": "1eaaa045",
									"id": 1348,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1310,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1309,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 859,
												"src": "27315:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "27315:9:0"
										}
									],
									"name": "add",
									"nameLocation": "27246:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1308,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1302,
												"mutability": "mutable",
												"name": "_allocPoint",
												"nameLocation": "27259:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 1348,
												"src": "27251:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1301,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "27251:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1305,
												"mutability": "mutable",
												"name": "_lpToken",
												"nameLocation": "27279:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1348,
												"src": "27272:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$286",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 1304,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1303,
														"name": "IERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 286,
														"src": "27272:6:0"
													},
													"referencedDeclaration": 286,
													"src": "27272:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$286",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1307,
												"mutability": "mutable",
												"name": "_withUpdate",
												"nameLocation": "27294:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 1348,
												"src": "27289:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1306,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "27289:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "27249:58:0"
									},
									"returnParameters": {
										"id": 1311,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "27325:0:0"
									},
									"scope": 2289,
									"src": "27237:560:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1385,
										"nodeType": "Block",
										"src": "27978:221:0",
										"statements": [
											{
												"condition": {
													"id": 1359,
													"name": "_withUpdate",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1354,
													"src": "27993:11:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1364,
												"nodeType": "IfStatement",
												"src": "27989:61:0",
												"trueBody": {
													"id": 1363,
													"nodeType": "Block",
													"src": "28006:44:0",
													"statements": [
														{
															"expression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1360,
																	"name": "massUpdatePools",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1623,
																	"src": "28021:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
																		"typeString": "function ()"
																	}
																},
																"id": 1361,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "28021:17:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1362,
															"nodeType": "ExpressionStatement",
															"src": "28021:17:0"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1376,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1365,
														"name": "totalAllocPoint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 994,
														"src": "28060:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1374,
																"name": "_allocPoint",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1352,
																"src": "28129:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"expression": {
																			"baseExpression": {
																				"id": 1368,
																				"name": "poolInfo",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 984,
																				"src": "28098:8:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_struct$_PoolInfo_$957_storage_$dyn_storage",
																					"typeString": "struct NFTMasterChef.PoolInfo storage ref[] storage ref"
																				}
																			},
																			"id": 1370,
																			"indexExpression": {
																				"id": 1369,
																				"name": "_pid",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1350,
																				"src": "28107:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "28098:14:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_PoolInfo_$957_storage",
																				"typeString": "struct NFTMasterChef.PoolInfo storage ref"
																			}
																		},
																		"id": 1371,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "allocPoint",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 952,
																		"src": "28098:25:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 1366,
																		"name": "totalAllocPoint",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 994,
																		"src": "28078:15:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1367,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sub",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 44,
																	"src": "28078:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 1372,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "28078:46:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1373,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 27,
															"src": "28078:50:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1375,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "28078:63:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "28060:81:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1377,
												"nodeType": "ExpressionStatement",
												"src": "28060:81:0"
											},
											{
												"expression": {
													"id": 1383,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 1378,
																"name": "poolInfo",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 984,
																"src": "28152:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_struct$_PoolInfo_$957_storage_$dyn_storage",
																	"typeString": "struct NFTMasterChef.PoolInfo storage ref[] storage ref"
																}
															},
															"id": 1380,
															"indexExpression": {
																"id": 1379,
																"name": "_pid",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1350,
																"src": "28161:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "28152:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PoolInfo_$957_storage",
																"typeString": "struct NFTMasterChef.PoolInfo storage ref"
															}
														},
														"id": 1381,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "allocPoint",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 952,
														"src": "28152:25:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1382,
														"name": "_allocPoint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1352,
														"src": "28180:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "28152:39:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1384,
												"nodeType": "ExpressionStatement",
												"src": "28152:39:0"
											}
										]
									},
									"functionSelector": "64482f79",
									"id": 1386,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1357,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1356,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 859,
												"src": "27968:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "27968:9:0"
										}
									],
									"name": "set",
									"nameLocation": "27903:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1355,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1350,
												"mutability": "mutable",
												"name": "_pid",
												"nameLocation": "27916:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1386,
												"src": "27908:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1349,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "27908:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1352,
												"mutability": "mutable",
												"name": "_allocPoint",
												"nameLocation": "27930:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 1386,
												"src": "27922:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1351,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "27922:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1354,
												"mutability": "mutable",
												"name": "_withUpdate",
												"nameLocation": "27948:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 1386,
												"src": "27943:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1353,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "27943:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "27906:54:0"
									},
									"returnParameters": {
										"id": 1358,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "27978:0:0"
									},
									"scope": 2289,
									"src": "27894:305:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1398,
										"nodeType": "Block",
										"src": "28338:39:0",
										"statements": [
											{
												"expression": {
													"id": 1396,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1394,
														"name": "migrator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 980,
														"src": "28349:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IMigratorChef_$927",
															"typeString": "contract IMigratorChef"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1395,
														"name": "_migrator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1389,
														"src": "28360:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IMigratorChef_$927",
															"typeString": "contract IMigratorChef"
														}
													},
													"src": "28349:20:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IMigratorChef_$927",
														"typeString": "contract IMigratorChef"
													}
												},
												"id": 1397,
												"nodeType": "ExpressionStatement",
												"src": "28349:20:0"
											}
										]
									},
									"functionSelector": "23cf3118",
									"id": 1399,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1392,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1391,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 859,
												"src": "28328:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "28328:9:0"
										}
									],
									"name": "setMigrator",
									"nameLocation": "28284:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1390,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1389,
												"mutability": "mutable",
												"name": "_migrator",
												"nameLocation": "28310:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 1399,
												"src": "28296:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IMigratorChef_$927",
													"typeString": "contract IMigratorChef"
												},
												"typeName": {
													"id": 1388,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1387,
														"name": "IMigratorChef",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 927,
														"src": "28296:13:0"
													},
													"referencedDeclaration": 927,
													"src": "28296:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IMigratorChef_$927",
														"typeString": "contract IMigratorChef"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "28295:25:0"
									},
									"returnParameters": {
										"id": 1393,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "28338:0:0"
									},
									"scope": 2289,
									"src": "28275:102:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1477,
										"nodeType": "Block",
										"src": "28538:453:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1413,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 1407,
																		"name": "migrator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 980,
																		"src": "28565:8:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IMigratorChef_$927",
																			"typeString": "contract IMigratorChef"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IMigratorChef_$927",
																			"typeString": "contract IMigratorChef"
																		}
																	],
																	"id": 1406,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "28557:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1405,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "28557:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 1408,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "28557:17:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1411,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "28586:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1410,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "28578:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1409,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "28578:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 1412,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "28578:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "28557:31:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "6d6967726174653a206e6f206d69677261746f72",
															"id": 1414,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "28590:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f2b78d14701a493fa40394b414840abc22dde75251115d332366fec4d94c3445",
																"typeString": "literal_string \"migrate: no migrator\""
															},
															"value": "migrate: no migrator"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_f2b78d14701a493fa40394b414840abc22dde75251115d332366fec4d94c3445",
																"typeString": "literal_string \"migrate: no migrator\""
															}
														],
														"id": 1404,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "28549:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1415,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "28549:64:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1416,
												"nodeType": "ExpressionStatement",
												"src": "28549:64:0"
											},
											{
												"assignments": [
													1419
												],
												"declarations": [
													{
														"constant": false,
														"id": 1419,
														"mutability": "mutable",
														"name": "pool",
														"nameLocation": "28641:4:0",
														"nodeType": "VariableDeclaration",
														"scope": 1477,
														"src": "28624:21:0",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_PoolInfo_$957_storage_ptr",
															"typeString": "struct NFTMasterChef.PoolInfo"
														},
														"typeName": {
															"id": 1418,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1417,
																"name": "PoolInfo",
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 957,
																"src": "28624:8:0"
															},
															"referencedDeclaration": 957,
															"src": "28624:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PoolInfo_$957_storage_ptr",
																"typeString": "struct NFTMasterChef.PoolInfo"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1423,
												"initialValue": {
													"baseExpression": {
														"id": 1420,
														"name": "poolInfo",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 984,
														"src": "28648:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_PoolInfo_$957_storage_$dyn_storage",
															"typeString": "struct NFTMasterChef.PoolInfo storage ref[] storage ref"
														}
													},
													"id": 1422,
													"indexExpression": {
														"id": 1421,
														"name": "_pid",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1401,
														"src": "28657:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "28648:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_PoolInfo_$957_storage",
														"typeString": "struct NFTMasterChef.PoolInfo storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "28624:38:0"
											},
											{
												"assignments": [
													1426
												],
												"declarations": [
													{
														"constant": false,
														"id": 1426,
														"mutability": "mutable",
														"name": "lpToken",
														"nameLocation": "28680:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 1477,
														"src": "28673:14:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$286",
															"typeString": "contract IERC20"
														},
														"typeName": {
															"id": 1425,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1424,
																"name": "IERC20",
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 286,
																"src": "28673:6:0"
															},
															"referencedDeclaration": 286,
															"src": "28673:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$286",
																"typeString": "contract IERC20"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1429,
												"initialValue": {
													"expression": {
														"id": 1427,
														"name": "pool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1419,
														"src": "28690:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_PoolInfo_$957_storage_ptr",
															"typeString": "struct NFTMasterChef.PoolInfo storage pointer"
														}
													},
													"id": 1428,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "lpToken",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 950,
													"src": "28690:12:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$286",
														"typeString": "contract IERC20"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "28673:29:0"
											},
											{
												"assignments": [
													1431
												],
												"declarations": [
													{
														"constant": false,
														"id": 1431,
														"mutability": "mutable",
														"name": "bal",
														"nameLocation": "28721:3:0",
														"nodeType": "VariableDeclaration",
														"scope": 1477,
														"src": "28713:11:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1430,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "28713:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1439,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1436,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "28753:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_NFTMasterChef_$2289",
																		"typeString": "contract NFTMasterChef"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_NFTMasterChef_$2289",
																		"typeString": "contract NFTMasterChef"
																	}
																],
																"id": 1435,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "28745:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1434,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "28745:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 1437,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "28745:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 1432,
															"name": "lpToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1426,
															"src": "28727:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$286",
																"typeString": "contract IERC20"
															}
														},
														"id": 1433,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "balanceOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 208,
														"src": "28727:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 1438,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "28727:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "28713:46:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1445,
																	"name": "migrator",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 980,
																	"src": "28798:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IMigratorChef_$927",
																		"typeString": "contract IMigratorChef"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IMigratorChef_$927",
																		"typeString": "contract IMigratorChef"
																	}
																],
																"id": 1444,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "28790:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1443,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "28790:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 1446,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "28790:17:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1447,
															"name": "bal",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1431,
															"src": "28809:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1440,
															"name": "lpToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1426,
															"src": "28770:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$286",
																"typeString": "contract IERC20"
															}
														},
														"id": 1442,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "safeApprove",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 674,
														"src": "28770:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$286_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$286_$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 1448,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "28770:43:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1449,
												"nodeType": "ExpressionStatement",
												"src": "28770:43:0"
											},
											{
												"assignments": [
													1452
												],
												"declarations": [
													{
														"constant": false,
														"id": 1452,
														"mutability": "mutable",
														"name": "newLpToken",
														"nameLocation": "28831:10:0",
														"nodeType": "VariableDeclaration",
														"scope": 1477,
														"src": "28824:17:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$286",
															"typeString": "contract IERC20"
														},
														"typeName": {
															"id": 1451,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1450,
																"name": "IERC20",
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 286,
																"src": "28824:6:0"
															},
															"referencedDeclaration": 286,
															"src": "28824:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$286",
																"typeString": "contract IERC20"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1457,
												"initialValue": {
													"arguments": [
														{
															"id": 1455,
															"name": "lpToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1426,
															"src": "28861:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$286",
																"typeString": "contract IERC20"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$286",
																"typeString": "contract IERC20"
															}
														],
														"expression": {
															"id": 1453,
															"name": "migrator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 980,
															"src": "28844:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IMigratorChef_$927",
																"typeString": "contract IMigratorChef"
															}
														},
														"id": 1454,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "migrate",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 926,
														"src": "28844:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_contract$_IERC20_$286_$returns$_t_contract$_IERC20_$286_$",
															"typeString": "function (contract IERC20) external returns (contract IERC20)"
														}
													},
													"id": 1456,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "28844:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$286",
														"typeString": "contract IERC20"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "28824:45:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1467,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1459,
																"name": "bal",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1431,
																"src": "28888:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 1464,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967268,
																				"src": "28924:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_NFTMasterChef_$2289",
																					"typeString": "contract NFTMasterChef"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_NFTMasterChef_$2289",
																					"typeString": "contract NFTMasterChef"
																				}
																			],
																			"id": 1463,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "28916:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1462,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "28916:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1465,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "28916:13:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"expression": {
																		"id": 1460,
																		"name": "newLpToken",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1452,
																		"src": "28895:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$286",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 1461,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "balanceOf",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 208,
																	"src": "28895:20:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address) view external returns (uint256)"
																	}
																},
																"id": 1466,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "28895:35:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "28888:42:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "6d6967726174653a20626164",
															"id": 1468,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "28932:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ed1ac0ecd515e3d8f412b4c0ca319587a2238640d669089c98335a92c60abee8",
																"typeString": "literal_string \"migrate: bad\""
															},
															"value": "migrate: bad"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ed1ac0ecd515e3d8f412b4c0ca319587a2238640d669089c98335a92c60abee8",
																"typeString": "literal_string \"migrate: bad\""
															}
														],
														"id": 1458,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "28880:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1469,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "28880:67:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1470,
												"nodeType": "ExpressionStatement",
												"src": "28880:67:0"
											},
											{
												"expression": {
													"id": 1475,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1471,
															"name": "pool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1419,
															"src": "28958:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PoolInfo_$957_storage_ptr",
																"typeString": "struct NFTMasterChef.PoolInfo storage pointer"
															}
														},
														"id": 1473,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "lpToken",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 950,
														"src": "28958:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$286",
															"typeString": "contract IERC20"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1474,
														"name": "newLpToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1452,
														"src": "28973:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$286",
															"typeString": "contract IERC20"
														}
													},
													"src": "28958:25:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$286",
														"typeString": "contract IERC20"
													}
												},
												"id": 1476,
												"nodeType": "ExpressionStatement",
												"src": "28958:25:0"
											}
										]
									},
									"functionSelector": "454b0608",
									"id": 1478,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "migrate",
									"nameLocation": "28509:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1402,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1401,
												"mutability": "mutable",
												"name": "_pid",
												"nameLocation": "28525:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1478,
												"src": "28517:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1400,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "28517:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "28516:14:0"
									},
									"returnParameters": {
										"id": 1403,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "28538:0:0"
									},
									"scope": 2289,
									"src": "28500:491:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1495,
										"nodeType": "Block",
										"src": "29148:63:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1492,
															"name": "BONUS_MULTIPLIER",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 977,
															"src": "29186:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 1489,
																	"name": "_from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1480,
																	"src": "29175:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 1487,
																	"name": "_to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1482,
																	"src": "29167:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1488,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sub",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 44,
																"src": "29167:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 1490,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "29167:14:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1491,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "mul",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 107,
														"src": "29167:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1493,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "29167:36:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1486,
												"id": 1494,
												"nodeType": "Return",
												"src": "29160:43:0"
											}
										]
									},
									"functionSelector": "8dbb1e3a",
									"id": 1496,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getMultiplier",
									"nameLocation": "29076:13:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1483,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1480,
												"mutability": "mutable",
												"name": "_from",
												"nameLocation": "29098:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1496,
												"src": "29090:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1479,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "29090:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1482,
												"mutability": "mutable",
												"name": "_to",
												"nameLocation": "29113:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 1496,
												"src": "29105:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1481,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "29105:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "29089:28:0"
									},
									"returnParameters": {
										"id": 1486,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1485,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1496,
												"src": "29139:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1484,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "29139:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "29138:9:0"
									},
									"scope": 2289,
									"src": "29067:144:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1597,
										"nodeType": "Block",
										"src": "29358:685:0",
										"statements": [
											{
												"assignments": [
													1507
												],
												"declarations": [
													{
														"constant": false,
														"id": 1507,
														"mutability": "mutable",
														"name": "pool",
														"nameLocation": "29386:4:0",
														"nodeType": "VariableDeclaration",
														"scope": 1597,
														"src": "29369:21:0",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_PoolInfo_$957_storage_ptr",
															"typeString": "struct NFTMasterChef.PoolInfo"
														},
														"typeName": {
															"id": 1506,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1505,
																"name": "PoolInfo",
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 957,
																"src": "29369:8:0"
															},
															"referencedDeclaration": 957,
															"src": "29369:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PoolInfo_$957_storage_ptr",
																"typeString": "struct NFTMasterChef.PoolInfo"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1511,
												"initialValue": {
													"baseExpression": {
														"id": 1508,
														"name": "poolInfo",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 984,
														"src": "29393:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_PoolInfo_$957_storage_$dyn_storage",
															"typeString": "struct NFTMasterChef.PoolInfo storage ref[] storage ref"
														}
													},
													"id": 1510,
													"indexExpression": {
														"id": 1509,
														"name": "_pid",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1498,
														"src": "29402:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "29393:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_PoolInfo_$957_storage",
														"typeString": "struct NFTMasterChef.PoolInfo storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "29369:38:0"
											},
											{
												"assignments": [
													1514
												],
												"declarations": [
													{
														"constant": false,
														"id": 1514,
														"mutability": "mutable",
														"name": "user",
														"nameLocation": "29435:4:0",
														"nodeType": "VariableDeclaration",
														"scope": 1597,
														"src": "29418:21:0",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_UserInfo_$947_storage_ptr",
															"typeString": "struct NFTMasterChef.UserInfo"
														},
														"typeName": {
															"id": 1513,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1512,
																"name": "UserInfo",
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 947,
																"src": "29418:8:0"
															},
															"referencedDeclaration": 947,
															"src": "29418:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$947_storage_ptr",
																"typeString": "struct NFTMasterChef.UserInfo"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1520,
												"initialValue": {
													"baseExpression": {
														"baseExpression": {
															"id": 1515,
															"name": "userInfo",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 991,
															"src": "29442:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_struct$_UserInfo_$947_storage_$_$",
																"typeString": "mapping(uint256 => mapping(address => struct NFTMasterChef.UserInfo storage ref))"
															}
														},
														"id": 1517,
														"indexExpression": {
															"id": 1516,
															"name": "_pid",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1498,
															"src": "29451:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "29442:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserInfo_$947_storage_$",
															"typeString": "mapping(address => struct NFTMasterChef.UserInfo storage ref)"
														}
													},
													"id": 1519,
													"indexExpression": {
														"id": 1518,
														"name": "_user",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1500,
														"src": "29457:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "29442:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UserInfo_$947_storage",
														"typeString": "struct NFTMasterChef.UserInfo storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "29418:45:0"
											},
											{
												"assignments": [
													1522
												],
												"declarations": [
													{
														"constant": false,
														"id": 1522,
														"mutability": "mutable",
														"name": "accPowerPerShare",
														"nameLocation": "29482:16:0",
														"nodeType": "VariableDeclaration",
														"scope": 1597,
														"src": "29474:24:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1521,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "29474:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1525,
												"initialValue": {
													"expression": {
														"id": 1523,
														"name": "pool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1507,
														"src": "29501:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_PoolInfo_$957_storage_ptr",
															"typeString": "struct NFTMasterChef.PoolInfo storage pointer"
														}
													},
													"id": 1524,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "accPowerPerShare",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 956,
													"src": "29501:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "29474:48:0"
											},
											{
												"assignments": [
													1527
												],
												"declarations": [
													{
														"constant": false,
														"id": 1527,
														"mutability": "mutable",
														"name": "lpSupply",
														"nameLocation": "29541:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 1597,
														"src": "29533:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1526,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "29533:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1536,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1533,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "29583:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_NFTMasterChef_$2289",
																		"typeString": "contract NFTMasterChef"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_NFTMasterChef_$2289",
																		"typeString": "contract NFTMasterChef"
																	}
																],
																"id": 1532,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "29575:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1531,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "29575:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 1534,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "29575:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"expression": {
																"id": 1528,
																"name": "pool",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1507,
																"src": "29552:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_PoolInfo_$957_storage_ptr",
																	"typeString": "struct NFTMasterChef.PoolInfo storage pointer"
																}
															},
															"id": 1529,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "lpToken",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 950,
															"src": "29552:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$286",
																"typeString": "contract IERC20"
															}
														},
														"id": 1530,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "balanceOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 208,
														"src": "29552:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 1535,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "29552:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "29533:56:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1545,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1541,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 1537,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "29604:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 1538,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "number",
															"nodeType": "MemberAccess",
															"src": "29604:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"expression": {
																"id": 1539,
																"name": "pool",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1507,
																"src": "29619:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_PoolInfo_$957_storage_ptr",
																	"typeString": "struct NFTMasterChef.PoolInfo storage pointer"
																}
															},
															"id": 1540,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "lastRewardBlock",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 954,
															"src": "29619:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "29604:35:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1544,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1542,
															"name": "lpSupply",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1527,
															"src": "29643:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"hexValue": "30",
															"id": 1543,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "29655:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "29643:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "29604:52:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1583,
												"nodeType": "IfStatement",
												"src": "29600:354:0",
												"trueBody": {
													"id": 1582,
													"nodeType": "Block",
													"src": "29658:296:0",
													"statements": [
														{
															"assignments": [
																1547
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1547,
																	"mutability": "mutable",
																	"name": "multiplier",
																	"nameLocation": "29681:10:0",
																	"nodeType": "VariableDeclaration",
																	"scope": 1582,
																	"src": "29673:18:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1546,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "29673:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1554,
															"initialValue": {
																"arguments": [
																	{
																		"expression": {
																			"id": 1549,
																			"name": "pool",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1507,
																			"src": "29708:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_PoolInfo_$957_storage_ptr",
																				"typeString": "struct NFTMasterChef.PoolInfo storage pointer"
																			}
																		},
																		"id": 1550,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "lastRewardBlock",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 954,
																		"src": "29708:20:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"expression": {
																			"id": 1551,
																			"name": "block",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967292,
																			"src": "29730:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_block",
																				"typeString": "block"
																			}
																		},
																		"id": 1552,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "number",
																		"nodeType": "MemberAccess",
																		"src": "29730:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1548,
																	"name": "getMultiplier",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1496,
																	"src": "29694:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																		"typeString": "function (uint256,uint256) view returns (uint256)"
																	}
																},
																"id": 1553,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "29694:49:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "29673:70:0"
														},
														{
															"assignments": [
																1556
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1556,
																	"mutability": "mutable",
																	"name": "PowerReward",
																	"nameLocation": "29766:11:0",
																	"nodeType": "VariableDeclaration",
																	"scope": 1582,
																	"src": "29758:19:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1555,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "29758:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1568,
															"initialValue": {
																"arguments": [
																	{
																		"id": 1566,
																		"name": "totalAllocPoint",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 994,
																		"src": "29835:15:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"expression": {
																					"id": 1562,
																					"name": "pool",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1507,
																					"src": "29814:4:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_PoolInfo_$957_storage_ptr",
																						"typeString": "struct NFTMasterChef.PoolInfo storage pointer"
																					}
																				},
																				"id": 1563,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "allocPoint",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 952,
																				"src": "29814:15:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"expression": {
																				"arguments": [
																					{
																						"id": 1559,
																						"name": "PowerPerBlock",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 974,
																						"src": "29795:13:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					],
																					"expression": {
																						"id": 1557,
																						"name": "multiplier",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1547,
																						"src": "29780:10:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"id": 1558,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "mul",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 107,
																					"src": "29780:14:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																						"typeString": "function (uint256,uint256) pure returns (uint256)"
																					}
																				},
																				"id": 1560,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "29780:29:0",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"id": 1561,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "mul",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 107,
																			"src": "29780:33:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																				"typeString": "function (uint256,uint256) pure returns (uint256)"
																			}
																		},
																		"id": 1564,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "29780:50:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1565,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "div",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 124,
																	"src": "29780:54:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 1567,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "29780:71:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "29758:93:0"
														},
														{
															"expression": {
																"id": 1580,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1569,
																	"name": "accPowerPerShare",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1522,
																	"src": "29866:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 1577,
																					"name": "lpSupply",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1527,
																					"src": "29932:8:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"arguments": [
																						{
																							"hexValue": "31653132",
																							"id": 1574,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "29922:4:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_1000000000000_by_1",
																								"typeString": "int_const 1000000000000"
																							},
																							"value": "1e12"
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_rational_1000000000000_by_1",
																								"typeString": "int_const 1000000000000"
																							}
																						],
																						"expression": {
																							"id": 1572,
																							"name": "PowerReward",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1556,
																							"src": "29906:11:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"id": 1573,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberName": "mul",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 107,
																						"src": "29906:15:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																							"typeString": "function (uint256,uint256) pure returns (uint256)"
																						}
																					},
																					"id": 1575,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "29906:21:0",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 1576,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "div",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 124,
																				"src": "29906:25:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																					"typeString": "function (uint256,uint256) pure returns (uint256)"
																				}
																			},
																			"id": 1578,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "29906:35:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"id": 1570,
																			"name": "accPowerPerShare",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1522,
																			"src": "29885:16:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1571,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "add",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 27,
																		"src": "29885:20:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 1579,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "29885:57:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "29866:76:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1581,
															"nodeType": "ExpressionStatement",
															"src": "29866:76:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1593,
																"name": "user",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1514,
																"src": "30019:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_UserInfo_$947_storage_ptr",
																	"typeString": "struct NFTMasterChef.UserInfo storage pointer"
																}
															},
															"id": 1594,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "rewardDebt",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 946,
															"src": "30019:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"hexValue": "31653132",
																	"id": 1590,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "30009:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1000000000000_by_1",
																		"typeString": "int_const 1000000000000"
																	},
																	"value": "1e12"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_1000000000000_by_1",
																		"typeString": "int_const 1000000000000"
																	}
																],
																"expression": {
																	"arguments": [
																		{
																			"id": 1587,
																			"name": "accPowerPerShare",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1522,
																			"src": "29987:16:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"expression": {
																				"id": 1584,
																				"name": "user",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1514,
																				"src": "29971:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_UserInfo_$947_storage_ptr",
																					"typeString": "struct NFTMasterChef.UserInfo storage pointer"
																				}
																			},
																			"id": 1585,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "amount",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 944,
																			"src": "29971:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1586,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "mul",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 107,
																		"src": "29971:15:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 1588,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "29971:33:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1589,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "div",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 124,
																"src": "29971:37:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 1591,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "29971:43:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1592,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sub",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 44,
														"src": "29971:47:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1595,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "29971:64:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1504,
												"id": 1596,
												"nodeType": "Return",
												"src": "29964:71:0"
											}
										]
									},
									"functionSelector": "f3239ab5",
									"id": 1598,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "pendingPower",
									"nameLocation": "29285:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1501,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1498,
												"mutability": "mutable",
												"name": "_pid",
												"nameLocation": "29306:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1598,
												"src": "29298:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1497,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "29298:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1500,
												"mutability": "mutable",
												"name": "_user",
												"nameLocation": "29320:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1598,
												"src": "29312:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1499,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "29312:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "29297:29:0"
									},
									"returnParameters": {
										"id": 1504,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1503,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1598,
												"src": "29350:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1502,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "29350:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "29349:9:0"
									},
									"scope": 2289,
									"src": "29276:767:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1622,
										"nodeType": "Block",
										"src": "30160:146:0",
										"statements": [
											{
												"assignments": [
													1602
												],
												"declarations": [
													{
														"constant": false,
														"id": 1602,
														"mutability": "mutable",
														"name": "length",
														"nameLocation": "30179:6:0",
														"nodeType": "VariableDeclaration",
														"scope": 1622,
														"src": "30171:14:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1601,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "30171:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1605,
												"initialValue": {
													"expression": {
														"id": 1603,
														"name": "poolInfo",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 984,
														"src": "30188:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_PoolInfo_$957_storage_$dyn_storage",
															"typeString": "struct NFTMasterChef.PoolInfo storage ref[] storage ref"
														}
													},
													"id": 1604,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "length",
													"nodeType": "MemberAccess",
													"src": "30188:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "30171:32:0"
											},
											{
												"body": {
													"id": 1620,
													"nodeType": "Block",
													"src": "30257:42:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1617,
																		"name": "pid",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1607,
																		"src": "30283:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1616,
																	"name": "updatePool",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1714,
																	"src": "30272:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
																		"typeString": "function (uint256)"
																	}
																},
																"id": 1618,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "30272:15:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1619,
															"nodeType": "ExpressionStatement",
															"src": "30272:15:0"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1612,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1610,
														"name": "pid",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1607,
														"src": "30236:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 1611,
														"name": "length",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1602,
														"src": "30242:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "30236:12:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1621,
												"initializationExpression": {
													"assignments": [
														1607
													],
													"declarations": [
														{
															"constant": false,
															"id": 1607,
															"mutability": "mutable",
															"name": "pid",
															"nameLocation": "30227:3:0",
															"nodeType": "VariableDeclaration",
															"scope": 1621,
															"src": "30219:11:0",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1606,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "30219:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 1609,
													"initialValue": {
														"hexValue": "30",
														"id": 1608,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "30233:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "30219:15:0"
												},
												"loopExpression": {
													"expression": {
														"id": 1614,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": true,
														"src": "30250:5:0",
														"subExpression": {
															"id": 1613,
															"name": "pid",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1607,
															"src": "30252:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1615,
													"nodeType": "ExpressionStatement",
													"src": "30250:5:0"
												},
												"nodeType": "ForStatement",
												"src": "30214:85:0"
											}
										]
									},
									"functionSelector": "630b5ba1",
									"id": 1623,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "massUpdatePools",
									"nameLocation": "30135:15:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1599,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "30150:2:0"
									},
									"returnParameters": {
										"id": 1600,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "30160:0:0"
									},
									"scope": 2289,
									"src": "30126:180:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1713,
										"nodeType": "Block",
										"src": "30423:649:0",
										"statements": [
											{
												"assignments": [
													1630
												],
												"declarations": [
													{
														"constant": false,
														"id": 1630,
														"mutability": "mutable",
														"name": "pool",
														"nameLocation": "30451:4:0",
														"nodeType": "VariableDeclaration",
														"scope": 1713,
														"src": "30434:21:0",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_PoolInfo_$957_storage_ptr",
															"typeString": "struct NFTMasterChef.PoolInfo"
														},
														"typeName": {
															"id": 1629,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1628,
																"name": "PoolInfo",
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 957,
																"src": "30434:8:0"
															},
															"referencedDeclaration": 957,
															"src": "30434:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PoolInfo_$957_storage_ptr",
																"typeString": "struct NFTMasterChef.PoolInfo"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1634,
												"initialValue": {
													"baseExpression": {
														"id": 1631,
														"name": "poolInfo",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 984,
														"src": "30458:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_PoolInfo_$957_storage_$dyn_storage",
															"typeString": "struct NFTMasterChef.PoolInfo storage ref[] storage ref"
														}
													},
													"id": 1633,
													"indexExpression": {
														"id": 1632,
														"name": "_pid",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1625,
														"src": "30467:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "30458:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_PoolInfo_$957_storage",
														"typeString": "struct NFTMasterChef.PoolInfo storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "30434:38:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1639,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1635,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "30487:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 1636,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "number",
														"nodeType": "MemberAccess",
														"src": "30487:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<=",
													"rightExpression": {
														"expression": {
															"id": 1637,
															"name": "pool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1630,
															"src": "30503:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PoolInfo_$957_storage_ptr",
																"typeString": "struct NFTMasterChef.PoolInfo storage pointer"
															}
														},
														"id": 1638,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "lastRewardBlock",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 954,
														"src": "30503:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "30487:36:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1642,
												"nodeType": "IfStatement",
												"src": "30483:75:0",
												"trueBody": {
													"id": 1641,
													"nodeType": "Block",
													"src": "30525:33:0",
													"statements": [
														{
															"functionReturnParameters": 1627,
															"id": 1640,
															"nodeType": "Return",
															"src": "30540:7:0"
														}
													]
												}
											},
											{
												"assignments": [
													1644
												],
												"declarations": [
													{
														"constant": false,
														"id": 1644,
														"mutability": "mutable",
														"name": "lpSupply",
														"nameLocation": "30576:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 1713,
														"src": "30568:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1643,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "30568:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1653,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1650,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "30618:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_NFTMasterChef_$2289",
																		"typeString": "contract NFTMasterChef"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_NFTMasterChef_$2289",
																		"typeString": "contract NFTMasterChef"
																	}
																],
																"id": 1649,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "30610:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1648,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "30610:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 1651,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "30610:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"expression": {
																"id": 1645,
																"name": "pool",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1630,
																"src": "30587:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_PoolInfo_$957_storage_ptr",
																	"typeString": "struct NFTMasterChef.PoolInfo storage pointer"
																}
															},
															"id": 1646,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "lpToken",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 950,
															"src": "30587:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$286",
																"typeString": "contract IERC20"
															}
														},
														"id": 1647,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "balanceOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 208,
														"src": "30587:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 1652,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "30587:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "30568:56:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1656,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1654,
														"name": "lpSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1644,
														"src": "30639:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<=",
													"rightExpression": {
														"hexValue": "30",
														"id": 1655,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "30651:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "30639:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1666,
												"nodeType": "IfStatement",
												"src": "30635:102:0",
												"trueBody": {
													"id": 1665,
													"nodeType": "Block",
													"src": "30654:83:0",
													"statements": [
														{
															"expression": {
																"id": 1662,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 1657,
																		"name": "pool",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1630,
																		"src": "30669:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_PoolInfo_$957_storage_ptr",
																			"typeString": "struct NFTMasterChef.PoolInfo storage pointer"
																		}
																	},
																	"id": 1659,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberName": "lastRewardBlock",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 954,
																	"src": "30669:20:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"expression": {
																		"id": 1660,
																		"name": "block",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967292,
																		"src": "30692:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_block",
																			"typeString": "block"
																		}
																	},
																	"id": 1661,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "number",
																	"nodeType": "MemberAccess",
																	"src": "30692:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "30669:35:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1663,
															"nodeType": "ExpressionStatement",
															"src": "30669:35:0"
														},
														{
															"functionReturnParameters": 1627,
															"id": 1664,
															"nodeType": "Return",
															"src": "30719:7:0"
														}
													]
												}
											},
											{
												"assignments": [
													1668
												],
												"declarations": [
													{
														"constant": false,
														"id": 1668,
														"mutability": "mutable",
														"name": "multiplier",
														"nameLocation": "30755:10:0",
														"nodeType": "VariableDeclaration",
														"scope": 1713,
														"src": "30747:18:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1667,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "30747:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1675,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 1670,
																"name": "pool",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1630,
																"src": "30782:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_PoolInfo_$957_storage_ptr",
																	"typeString": "struct NFTMasterChef.PoolInfo storage pointer"
																}
															},
															"id": 1671,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "lastRewardBlock",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 954,
															"src": "30782:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 1672,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "30804:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 1673,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "number",
															"nodeType": "MemberAccess",
															"src": "30804:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1669,
														"name": "getMultiplier",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1496,
														"src": "30768:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256) view returns (uint256)"
														}
													},
													"id": 1674,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "30768:49:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "30747:70:0"
											},
											{
												"assignments": [
													1677
												],
												"declarations": [
													{
														"constant": false,
														"id": 1677,
														"mutability": "mutable",
														"name": "PowerReward",
														"nameLocation": "30836:11:0",
														"nodeType": "VariableDeclaration",
														"scope": 1713,
														"src": "30828:19:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1676,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "30828:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1689,
												"initialValue": {
													"arguments": [
														{
															"id": 1687,
															"name": "totalAllocPoint",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 994,
															"src": "30905:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"expression": {
																		"id": 1683,
																		"name": "pool",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1630,
																		"src": "30884:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_PoolInfo_$957_storage_ptr",
																			"typeString": "struct NFTMasterChef.PoolInfo storage pointer"
																		}
																	},
																	"id": 1684,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "allocPoint",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 952,
																	"src": "30884:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"arguments": [
																		{
																			"id": 1680,
																			"name": "PowerPerBlock",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 974,
																			"src": "30865:13:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"id": 1678,
																			"name": "multiplier",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1668,
																			"src": "30850:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1679,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "mul",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 107,
																		"src": "30850:14:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 1681,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "30850:29:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1682,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "mul",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 107,
																"src": "30850:33:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 1685,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "30850:50:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1686,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "div",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 124,
														"src": "30850:54:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1688,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "30850:71:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "30828:93:0"
											},
											{
												"expression": {
													"id": 1704,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1690,
															"name": "pool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1630,
															"src": "30932:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PoolInfo_$957_storage_ptr",
																"typeString": "struct NFTMasterChef.PoolInfo storage pointer"
															}
														},
														"id": 1692,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "accPowerPerShare",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 956,
														"src": "30932:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 1701,
																		"name": "lpSupply",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1644,
																		"src": "31008:8:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"hexValue": "31653132",
																				"id": 1698,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "30998:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1000000000000_by_1",
																					"typeString": "int_const 1000000000000"
																				},
																				"value": "1e12"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_1000000000000_by_1",
																					"typeString": "int_const 1000000000000"
																				}
																			],
																			"expression": {
																				"id": 1696,
																				"name": "PowerReward",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1677,
																				"src": "30982:11:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"id": 1697,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "mul",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 107,
																			"src": "30982:15:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																				"typeString": "function (uint256,uint256) pure returns (uint256)"
																			}
																		},
																		"id": 1699,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "30982:21:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1700,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "div",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 124,
																	"src": "30982:25:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 1702,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "30982:35:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"expression": {
																	"id": 1693,
																	"name": "pool",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1630,
																	"src": "30956:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_PoolInfo_$957_storage_ptr",
																		"typeString": "struct NFTMasterChef.PoolInfo storage pointer"
																	}
																},
																"id": 1694,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "accPowerPerShare",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 956,
																"src": "30956:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1695,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 27,
															"src": "30956:25:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1703,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "30956:62:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "30932:86:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1705,
												"nodeType": "ExpressionStatement",
												"src": "30932:86:0"
											},
											{
												"expression": {
													"id": 1711,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1706,
															"name": "pool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1630,
															"src": "31029:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PoolInfo_$957_storage_ptr",
																"typeString": "struct NFTMasterChef.PoolInfo storage pointer"
															}
														},
														"id": 1708,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "lastRewardBlock",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 954,
														"src": "31029:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 1709,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "31052:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 1710,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "number",
														"nodeType": "MemberAccess",
														"src": "31052:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "31029:35:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1712,
												"nodeType": "ExpressionStatement",
												"src": "31029:35:0"
											}
										]
									},
									"functionSelector": "51eb05a6",
									"id": 1714,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "updatePool",
									"nameLocation": "30391:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1626,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1625,
												"mutability": "mutable",
												"name": "_pid",
												"nameLocation": "30410:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1714,
												"src": "30402:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1624,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "30402:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "30401:14:0"
									},
									"returnParameters": {
										"id": 1627,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "30423:0:0"
									},
									"scope": 2289,
									"src": "30382:690:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1837,
										"nodeType": "Block",
										"src": "31197:741:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1724,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1722,
																"name": "_pid",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1716,
																"src": "31219:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"hexValue": "30",
																"id": 1723,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "31227:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "31219:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "6465706f73697420506f776572206279207374616b696e67",
															"id": 1725,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "31230:26:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_8997113db37475c3d966d2b1151c847dca6ccea70a4d4a2b46d60e92c3a8e108",
																"typeString": "literal_string \"deposit Power by staking\""
															},
															"value": "deposit Power by staking"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_8997113db37475c3d966d2b1151c847dca6ccea70a4d4a2b46d60e92c3a8e108",
																"typeString": "literal_string \"deposit Power by staking\""
															}
														],
														"id": 1721,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "31210:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1726,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "31210:47:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1727,
												"nodeType": "ExpressionStatement",
												"src": "31210:47:0"
											},
											{
												"assignments": [
													1730
												],
												"declarations": [
													{
														"constant": false,
														"id": 1730,
														"mutability": "mutable",
														"name": "pool",
														"nameLocation": "31287:4:0",
														"nodeType": "VariableDeclaration",
														"scope": 1837,
														"src": "31270:21:0",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_PoolInfo_$957_storage_ptr",
															"typeString": "struct NFTMasterChef.PoolInfo"
														},
														"typeName": {
															"id": 1729,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1728,
																"name": "PoolInfo",
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 957,
																"src": "31270:8:0"
															},
															"referencedDeclaration": 957,
															"src": "31270:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PoolInfo_$957_storage_ptr",
																"typeString": "struct NFTMasterChef.PoolInfo"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1734,
												"initialValue": {
													"baseExpression": {
														"id": 1731,
														"name": "poolInfo",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 984,
														"src": "31294:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_PoolInfo_$957_storage_$dyn_storage",
															"typeString": "struct NFTMasterChef.PoolInfo storage ref[] storage ref"
														}
													},
													"id": 1733,
													"indexExpression": {
														"id": 1732,
														"name": "_pid",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1716,
														"src": "31303:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "31294:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_PoolInfo_$957_storage",
														"typeString": "struct NFTMasterChef.PoolInfo storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "31270:38:0"
											},
											{
												"assignments": [
													1737
												],
												"declarations": [
													{
														"constant": false,
														"id": 1737,
														"mutability": "mutable",
														"name": "user",
														"nameLocation": "31336:4:0",
														"nodeType": "VariableDeclaration",
														"scope": 1837,
														"src": "31319:21:0",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_UserInfo_$947_storage_ptr",
															"typeString": "struct NFTMasterChef.UserInfo"
														},
														"typeName": {
															"id": 1736,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1735,
																"name": "UserInfo",
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 947,
																"src": "31319:8:0"
															},
															"referencedDeclaration": 947,
															"src": "31319:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$947_storage_ptr",
																"typeString": "struct NFTMasterChef.UserInfo"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1744,
												"initialValue": {
													"baseExpression": {
														"baseExpression": {
															"id": 1738,
															"name": "userInfo",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 991,
															"src": "31343:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_struct$_UserInfo_$947_storage_$_$",
																"typeString": "mapping(uint256 => mapping(address => struct NFTMasterChef.UserInfo storage ref))"
															}
														},
														"id": 1740,
														"indexExpression": {
															"id": 1739,
															"name": "_pid",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1716,
															"src": "31352:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "31343:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserInfo_$947_storage_$",
															"typeString": "mapping(address => struct NFTMasterChef.UserInfo storage ref)"
														}
													},
													"id": 1743,
													"indexExpression": {
														"expression": {
															"id": 1741,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "31358:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 1742,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "31358:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "31343:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UserInfo_$947_storage",
														"typeString": "struct NFTMasterChef.UserInfo storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "31319:50:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1746,
															"name": "_pid",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1716,
															"src": "31391:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1745,
														"name": "updatePool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1714,
														"src": "31380:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 1747,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "31380:16:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1748,
												"nodeType": "ExpressionStatement",
												"src": "31380:16:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1752,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1749,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1737,
															"src": "31411:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$947_storage_ptr",
																"typeString": "struct NFTMasterChef.UserInfo storage pointer"
															}
														},
														"id": 1750,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "amount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 944,
														"src": "31411:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1751,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "31425:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "31411:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1788,
												"nodeType": "IfStatement",
												"src": "31407:263:0",
												"trueBody": {
													"id": 1787,
													"nodeType": "Block",
													"src": "31428:242:0",
													"statements": [
														{
															"assignments": [
																1754
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1754,
																	"mutability": "mutable",
																	"name": "pending",
																	"nameLocation": "31451:7:0",
																	"nodeType": "VariableDeclaration",
																	"scope": 1787,
																	"src": "31443:15:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1753,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "31443:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1768,
															"initialValue": {
																"arguments": [
																	{
																		"expression": {
																			"id": 1765,
																			"name": "user",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1737,
																			"src": "31514:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_UserInfo_$947_storage_ptr",
																				"typeString": "struct NFTMasterChef.UserInfo storage pointer"
																			}
																		},
																		"id": 1766,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "rewardDebt",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 946,
																		"src": "31514:15:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"hexValue": "31653132",
																				"id": 1762,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "31504:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1000000000000_by_1",
																					"typeString": "int_const 1000000000000"
																				},
																				"value": "1e12"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_1000000000000_by_1",
																					"typeString": "int_const 1000000000000"
																				}
																			],
																			"expression": {
																				"arguments": [
																					{
																						"expression": {
																							"id": 1758,
																							"name": "pool",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1730,
																							"src": "31477:4:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_struct$_PoolInfo_$957_storage_ptr",
																								"typeString": "struct NFTMasterChef.PoolInfo storage pointer"
																							}
																						},
																						"id": 1759,
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberName": "accPowerPerShare",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 956,
																						"src": "31477:21:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					],
																					"expression": {
																						"expression": {
																							"id": 1755,
																							"name": "user",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1737,
																							"src": "31461:4:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_struct$_UserInfo_$947_storage_ptr",
																								"typeString": "struct NFTMasterChef.UserInfo storage pointer"
																							}
																						},
																						"id": 1756,
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberName": "amount",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 944,
																						"src": "31461:11:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"id": 1757,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "mul",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 107,
																					"src": "31461:15:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																						"typeString": "function (uint256,uint256) pure returns (uint256)"
																					}
																				},
																				"id": 1760,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "31461:38:0",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"id": 1761,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "div",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 124,
																			"src": "31461:42:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																				"typeString": "function (uint256,uint256) pure returns (uint256)"
																			}
																		},
																		"id": 1763,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "31461:48:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1764,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sub",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 44,
																	"src": "31461:52:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 1767,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "31461:69:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "31443:87:0"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1771,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1769,
																	"name": "pending",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1754,
																	"src": "31548:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 1770,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "31558:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "31548:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1786,
															"nodeType": "IfStatement",
															"src": "31545:114:0",
															"trueBody": {
																"id": 1785,
																"nodeType": "Block",
																"src": "31560:99:0",
																"statements": [
																	{
																		"expression": {
																			"id": 1783,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"baseExpression": {
																					"id": 1772,
																					"name": "powerBalance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1000,
																					"src": "31579:12:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																						"typeString": "mapping(address => uint256)"
																					}
																				},
																				"id": 1775,
																				"indexExpression": {
																					"expression": {
																						"id": 1773,
																						"name": "msg",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 4294967281,
																						"src": "31592:3:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_magic_message",
																							"typeString": "msg"
																						}
																					},
																					"id": 1774,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "sender",
																					"nodeType": "MemberAccess",
																					"src": "31592:10:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": true,
																				"nodeType": "IndexAccess",
																				"src": "31579:24:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"arguments": [
																					{
																						"id": 1781,
																						"name": "pending",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1754,
																						"src": "31635:7:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					],
																					"expression": {
																						"baseExpression": {
																							"id": 1776,
																							"name": "powerBalance",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1000,
																							"src": "31606:12:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																								"typeString": "mapping(address => uint256)"
																							}
																						},
																						"id": 1779,
																						"indexExpression": {
																							"expression": {
																								"id": 1777,
																								"name": "msg",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 4294967281,
																								"src": "31619:3:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_magic_message",
																									"typeString": "msg"
																								}
																							},
																							"id": 1778,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberName": "sender",
																							"nodeType": "MemberAccess",
																							"src": "31619:10:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						},
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "IndexAccess",
																						"src": "31606:24:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"id": 1780,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "add",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 27,
																					"src": "31606:28:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																						"typeString": "function (uint256,uint256) pure returns (uint256)"
																					}
																				},
																				"id": 1782,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "31606:37:0",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "31579:64:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1784,
																		"nodeType": "ExpressionStatement",
																		"src": "31579:64:0"
																	}
																]
															}
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"expression": {
																		"id": 1796,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "31718:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 1797,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "31718:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1795,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "31710:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1794,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "31710:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 1798,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "31710:19:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 1801,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "31739:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_NFTMasterChef_$2289",
																		"typeString": "contract NFTMasterChef"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_NFTMasterChef_$2289",
																		"typeString": "contract NFTMasterChef"
																	}
																],
																"id": 1800,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "31731:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1799,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "31731:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 1802,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "31731:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1803,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1718,
															"src": "31746:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"expression": {
																"id": 1789,
																"name": "pool",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1730,
																"src": "31680:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_PoolInfo_$957_storage_ptr",
																	"typeString": "struct NFTMasterChef.PoolInfo storage pointer"
																}
															},
															"id": 1792,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "lpToken",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 950,
															"src": "31680:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$286",
																"typeString": "contract IERC20"
															}
														},
														"id": 1793,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "safeTransferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 630,
														"src": "31680:29:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$286_$_t_address_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$286_$",
															"typeString": "function (contract IERC20,address,address,uint256)"
														}
													},
													"id": 1804,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "31680:74:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1805,
												"nodeType": "ExpressionStatement",
												"src": "31680:74:0"
											},
											{
												"expression": {
													"id": 1814,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1806,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1737,
															"src": "31765:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$947_storage_ptr",
																"typeString": "struct NFTMasterChef.UserInfo storage pointer"
															}
														},
														"id": 1808,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "amount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 944,
														"src": "31765:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1812,
																"name": "_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1718,
																"src": "31795:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"expression": {
																	"id": 1809,
																	"name": "user",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1737,
																	"src": "31779:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_UserInfo_$947_storage_ptr",
																		"typeString": "struct NFTMasterChef.UserInfo storage pointer"
																	}
																},
																"id": 1810,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "amount",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 944,
																"src": "31779:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1811,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 27,
															"src": "31779:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1813,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "31779:24:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "31765:38:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1815,
												"nodeType": "ExpressionStatement",
												"src": "31765:38:0"
											},
											{
												"expression": {
													"id": 1828,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1816,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1737,
															"src": "31814:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$947_storage_ptr",
																"typeString": "struct NFTMasterChef.UserInfo storage pointer"
															}
														},
														"id": 1818,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "rewardDebt",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 946,
														"src": "31814:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"hexValue": "31653132",
																"id": 1826,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "31875:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1000000000000_by_1",
																	"typeString": "int_const 1000000000000"
																},
																"value": "1e12"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_1000000000000_by_1",
																	"typeString": "int_const 1000000000000"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 1822,
																			"name": "pool",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1730,
																			"src": "31848:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_PoolInfo_$957_storage_ptr",
																				"typeString": "struct NFTMasterChef.PoolInfo storage pointer"
																			}
																		},
																		"id": 1823,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "accPowerPerShare",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 956,
																		"src": "31848:21:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"expression": {
																			"id": 1819,
																			"name": "user",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1737,
																			"src": "31832:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_UserInfo_$947_storage_ptr",
																				"typeString": "struct NFTMasterChef.UserInfo storage pointer"
																			}
																		},
																		"id": 1820,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "amount",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 944,
																		"src": "31832:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1821,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "mul",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 107,
																	"src": "31832:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 1824,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "31832:38:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1825,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "div",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 124,
															"src": "31832:42:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1827,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "31832:48:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "31814:66:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1829,
												"nodeType": "ExpressionStatement",
												"src": "31814:66:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1831,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "31904:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1832,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "31904:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1833,
															"name": "_pid",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1716,
															"src": "31916:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1834,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1718,
															"src": "31922:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1830,
														"name": "Deposit",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1008,
														"src": "31896:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,uint256)"
														}
													},
													"id": 1835,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "31896:34:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1836,
												"nodeType": "EmitStatement",
												"src": "31891:39:0"
											}
										]
									},
									"functionSelector": "e2bbb158",
									"id": 1838,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "deposit",
									"nameLocation": "31151:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1719,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1716,
												"mutability": "mutable",
												"name": "_pid",
												"nameLocation": "31167:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1838,
												"src": "31159:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1715,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "31159:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1718,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "31181:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1838,
												"src": "31173:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1717,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "31173:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "31158:31:0"
									},
									"returnParameters": {
										"id": 1720,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "31197:0:0"
									},
									"scope": 2289,
									"src": "31142:796:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1959,
										"nodeType": "Block",
										"src": "32046:731:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1848,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1846,
																"name": "_pid",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1840,
																"src": "32068:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"hexValue": "30",
																"id": 1847,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "32076:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "32068:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "776974686472617720506f77657220627920756e7374616b696e67",
															"id": 1849,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "32079:29:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_2af9ac489fdfd3845a7a7fd4a89fb65b5b2a06bf8679b70fd9b405dd9a5bbd5f",
																"typeString": "literal_string \"withdraw Power by unstaking\""
															},
															"value": "withdraw Power by unstaking"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_2af9ac489fdfd3845a7a7fd4a89fb65b5b2a06bf8679b70fd9b405dd9a5bbd5f",
																"typeString": "literal_string \"withdraw Power by unstaking\""
															}
														],
														"id": 1845,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "32059:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1850,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "32059:50:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1851,
												"nodeType": "ExpressionStatement",
												"src": "32059:50:0"
											},
											{
												"assignments": [
													1854
												],
												"declarations": [
													{
														"constant": false,
														"id": 1854,
														"mutability": "mutable",
														"name": "pool",
														"nameLocation": "32139:4:0",
														"nodeType": "VariableDeclaration",
														"scope": 1959,
														"src": "32122:21:0",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_PoolInfo_$957_storage_ptr",
															"typeString": "struct NFTMasterChef.PoolInfo"
														},
														"typeName": {
															"id": 1853,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1852,
																"name": "PoolInfo",
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 957,
																"src": "32122:8:0"
															},
															"referencedDeclaration": 957,
															"src": "32122:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PoolInfo_$957_storage_ptr",
																"typeString": "struct NFTMasterChef.PoolInfo"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1858,
												"initialValue": {
													"baseExpression": {
														"id": 1855,
														"name": "poolInfo",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 984,
														"src": "32146:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_PoolInfo_$957_storage_$dyn_storage",
															"typeString": "struct NFTMasterChef.PoolInfo storage ref[] storage ref"
														}
													},
													"id": 1857,
													"indexExpression": {
														"id": 1856,
														"name": "_pid",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1840,
														"src": "32155:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "32146:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_PoolInfo_$957_storage",
														"typeString": "struct NFTMasterChef.PoolInfo storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "32122:38:0"
											},
											{
												"assignments": [
													1861
												],
												"declarations": [
													{
														"constant": false,
														"id": 1861,
														"mutability": "mutable",
														"name": "user",
														"nameLocation": "32188:4:0",
														"nodeType": "VariableDeclaration",
														"scope": 1959,
														"src": "32171:21:0",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_UserInfo_$947_storage_ptr",
															"typeString": "struct NFTMasterChef.UserInfo"
														},
														"typeName": {
															"id": 1860,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1859,
																"name": "UserInfo",
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 947,
																"src": "32171:8:0"
															},
															"referencedDeclaration": 947,
															"src": "32171:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$947_storage_ptr",
																"typeString": "struct NFTMasterChef.UserInfo"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1868,
												"initialValue": {
													"baseExpression": {
														"baseExpression": {
															"id": 1862,
															"name": "userInfo",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 991,
															"src": "32195:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_struct$_UserInfo_$947_storage_$_$",
																"typeString": "mapping(uint256 => mapping(address => struct NFTMasterChef.UserInfo storage ref))"
															}
														},
														"id": 1864,
														"indexExpression": {
															"id": 1863,
															"name": "_pid",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1840,
															"src": "32204:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "32195:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserInfo_$947_storage_$",
															"typeString": "mapping(address => struct NFTMasterChef.UserInfo storage ref)"
														}
													},
													"id": 1867,
													"indexExpression": {
														"expression": {
															"id": 1865,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "32210:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 1866,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "32210:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "32195:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UserInfo_$947_storage",
														"typeString": "struct NFTMasterChef.UserInfo storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "32171:50:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1873,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1870,
																	"name": "user",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1861,
																	"src": "32240:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_UserInfo_$947_storage_ptr",
																		"typeString": "struct NFTMasterChef.UserInfo storage pointer"
																	}
																},
																"id": 1871,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "amount",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 944,
																"src": "32240:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1872,
																"name": "_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1842,
																"src": "32255:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "32240:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "77697468647261773a206e6f7420676f6f64",
															"id": 1874,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "32264:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d09049ba12a4b0d32c8152176161276998fb1529c6184e3c4227161fe99644df",
																"typeString": "literal_string \"withdraw: not good\""
															},
															"value": "withdraw: not good"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_d09049ba12a4b0d32c8152176161276998fb1529c6184e3c4227161fe99644df",
																"typeString": "literal_string \"withdraw: not good\""
															}
														],
														"id": 1869,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "32232:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1875,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "32232:53:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1876,
												"nodeType": "ExpressionStatement",
												"src": "32232:53:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1878,
															"name": "_pid",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1840,
															"src": "32307:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1877,
														"name": "updatePool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1714,
														"src": "32296:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 1879,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "32296:16:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1880,
												"nodeType": "ExpressionStatement",
												"src": "32296:16:0"
											},
											{
												"assignments": [
													1882
												],
												"declarations": [
													{
														"constant": false,
														"id": 1882,
														"mutability": "mutable",
														"name": "pending",
														"nameLocation": "32331:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 1959,
														"src": "32323:15:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1881,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "32323:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1896,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 1893,
																"name": "user",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1861,
																"src": "32394:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_UserInfo_$947_storage_ptr",
																	"typeString": "struct NFTMasterChef.UserInfo storage pointer"
																}
															},
															"id": 1894,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "rewardDebt",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 946,
															"src": "32394:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"hexValue": "31653132",
																	"id": 1890,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "32384:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1000000000000_by_1",
																		"typeString": "int_const 1000000000000"
																	},
																	"value": "1e12"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_1000000000000_by_1",
																		"typeString": "int_const 1000000000000"
																	}
																],
																"expression": {
																	"arguments": [
																		{
																			"expression": {
																				"id": 1886,
																				"name": "pool",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1854,
																				"src": "32357:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_PoolInfo_$957_storage_ptr",
																					"typeString": "struct NFTMasterChef.PoolInfo storage pointer"
																				}
																			},
																			"id": 1887,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "accPowerPerShare",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 956,
																			"src": "32357:21:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"expression": {
																				"id": 1883,
																				"name": "user",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1861,
																				"src": "32341:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_UserInfo_$947_storage_ptr",
																					"typeString": "struct NFTMasterChef.UserInfo storage pointer"
																				}
																			},
																			"id": 1884,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "amount",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 944,
																			"src": "32341:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1885,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "mul",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 107,
																		"src": "32341:15:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 1888,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "32341:38:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1889,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "div",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 124,
																"src": "32341:42:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 1891,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "32341:48:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1892,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sub",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 44,
														"src": "32341:52:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1895,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "32341:69:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "32323:87:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1899,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1897,
														"name": "pending",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1882,
														"src": "32424:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1898,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "32434:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "32424:11:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1914,
												"nodeType": "IfStatement",
												"src": "32421:106:0",
												"trueBody": {
													"id": 1913,
													"nodeType": "Block",
													"src": "32436:91:0",
													"statements": [
														{
															"expression": {
																"id": 1911,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 1900,
																		"name": "powerBalance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1000,
																		"src": "32451:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 1903,
																	"indexExpression": {
																		"expression": {
																			"id": 1901,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "32464:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1902,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "32464:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "32451:24:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"id": 1909,
																			"name": "pending",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1882,
																			"src": "32507:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"baseExpression": {
																				"id": 1904,
																				"name": "powerBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1000,
																				"src": "32478:12:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 1907,
																			"indexExpression": {
																				"expression": {
																					"id": 1905,
																					"name": "msg",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967281,
																					"src": "32491:3:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_message",
																						"typeString": "msg"
																					}
																				},
																				"id": 1906,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "sender",
																				"nodeType": "MemberAccess",
																				"src": "32491:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "32478:24:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1908,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "add",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 27,
																		"src": "32478:28:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 1910,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "32478:37:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "32451:64:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1912,
															"nodeType": "ExpressionStatement",
															"src": "32451:64:0"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1923,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1915,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1861,
															"src": "32537:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$947_storage_ptr",
																"typeString": "struct NFTMasterChef.UserInfo storage pointer"
															}
														},
														"id": 1917,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "amount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 944,
														"src": "32537:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1921,
																"name": "_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1842,
																"src": "32567:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"expression": {
																	"id": 1918,
																	"name": "user",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1861,
																	"src": "32551:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_UserInfo_$947_storage_ptr",
																		"typeString": "struct NFTMasterChef.UserInfo storage pointer"
																	}
																},
																"id": 1919,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "amount",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 944,
																"src": "32551:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1920,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 44,
															"src": "32551:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1922,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "32551:24:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "32537:38:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1924,
												"nodeType": "ExpressionStatement",
												"src": "32537:38:0"
											},
											{
												"expression": {
													"id": 1937,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1925,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1861,
															"src": "32586:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$947_storage_ptr",
																"typeString": "struct NFTMasterChef.UserInfo storage pointer"
															}
														},
														"id": 1927,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "rewardDebt",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 946,
														"src": "32586:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"hexValue": "31653132",
																"id": 1935,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "32647:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1000000000000_by_1",
																	"typeString": "int_const 1000000000000"
																},
																"value": "1e12"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_1000000000000_by_1",
																	"typeString": "int_const 1000000000000"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 1931,
																			"name": "pool",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1854,
																			"src": "32620:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_PoolInfo_$957_storage_ptr",
																				"typeString": "struct NFTMasterChef.PoolInfo storage pointer"
																			}
																		},
																		"id": 1932,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "accPowerPerShare",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 956,
																		"src": "32620:21:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"expression": {
																			"id": 1928,
																			"name": "user",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1861,
																			"src": "32604:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_UserInfo_$947_storage_ptr",
																				"typeString": "struct NFTMasterChef.UserInfo storage pointer"
																			}
																		},
																		"id": 1929,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "amount",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 944,
																		"src": "32604:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1930,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "mul",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 107,
																	"src": "32604:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 1933,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "32604:38:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1934,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "div",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 124,
															"src": "32604:42:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1936,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "32604:48:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "32586:66:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1938,
												"nodeType": "ExpressionStatement",
												"src": "32586:66:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"expression": {
																		"id": 1946,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "32697:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 1947,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "32697:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1945,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "32689:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1944,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "32689:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 1948,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "32689:19:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1949,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1842,
															"src": "32710:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"expression": {
																"id": 1939,
																"name": "pool",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1854,
																"src": "32663:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_PoolInfo_$957_storage_ptr",
																	"typeString": "struct NFTMasterChef.PoolInfo storage pointer"
																}
															},
															"id": 1942,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "lpToken",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 950,
															"src": "32663:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$286",
																"typeString": "contract IERC20"
															}
														},
														"id": 1943,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "safeTransfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 604,
														"src": "32663:25:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$286_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$286_$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 1950,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "32663:55:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1951,
												"nodeType": "ExpressionStatement",
												"src": "32663:55:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1953,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "32743:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1954,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "32743:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1955,
															"name": "_pid",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1840,
															"src": "32755:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1956,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1842,
															"src": "32761:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1952,
														"name": "Withdraw",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1016,
														"src": "32734:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,uint256)"
														}
													},
													"id": 1957,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "32734:35:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1958,
												"nodeType": "EmitStatement",
												"src": "32729:40:0"
											}
										]
									},
									"functionSelector": "441a3e70",
									"id": 1960,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "withdraw",
									"nameLocation": "31999:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1843,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1840,
												"mutability": "mutable",
												"name": "_pid",
												"nameLocation": "32016:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1960,
												"src": "32008:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1839,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "32008:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1842,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "32030:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1960,
												"src": "32022:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1841,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "32022:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "32007:31:0"
									},
									"returnParameters": {
										"id": 1844,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "32046:0:0"
									},
									"scope": 2289,
									"src": "31990:787:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2088,
										"nodeType": "Block",
										"src": "32876:751:0",
										"statements": [
											{
												"assignments": [
													1967
												],
												"declarations": [
													{
														"constant": false,
														"id": 1967,
														"mutability": "mutable",
														"name": "pool",
														"nameLocation": "32904:4:0",
														"nodeType": "VariableDeclaration",
														"scope": 2088,
														"src": "32887:21:0",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_PoolInfo_$957_storage_ptr",
															"typeString": "struct NFTMasterChef.PoolInfo"
														},
														"typeName": {
															"id": 1966,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1965,
																"name": "PoolInfo",
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 957,
																"src": "32887:8:0"
															},
															"referencedDeclaration": 957,
															"src": "32887:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PoolInfo_$957_storage_ptr",
																"typeString": "struct NFTMasterChef.PoolInfo"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1971,
												"initialValue": {
													"baseExpression": {
														"id": 1968,
														"name": "poolInfo",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 984,
														"src": "32911:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_PoolInfo_$957_storage_$dyn_storage",
															"typeString": "struct NFTMasterChef.PoolInfo storage ref[] storage ref"
														}
													},
													"id": 1970,
													"indexExpression": {
														"hexValue": "30",
														"id": 1969,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "32920:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "32911:11:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_PoolInfo_$957_storage",
														"typeString": "struct NFTMasterChef.PoolInfo storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "32887:35:0"
											},
											{
												"assignments": [
													1974
												],
												"declarations": [
													{
														"constant": false,
														"id": 1974,
														"mutability": "mutable",
														"name": "user",
														"nameLocation": "32950:4:0",
														"nodeType": "VariableDeclaration",
														"scope": 2088,
														"src": "32933:21:0",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_UserInfo_$947_storage_ptr",
															"typeString": "struct NFTMasterChef.UserInfo"
														},
														"typeName": {
															"id": 1973,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1972,
																"name": "UserInfo",
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 947,
																"src": "32933:8:0"
															},
															"referencedDeclaration": 947,
															"src": "32933:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$947_storage_ptr",
																"typeString": "struct NFTMasterChef.UserInfo"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1984,
												"initialValue": {
													"baseExpression": {
														"baseExpression": {
															"id": 1975,
															"name": "userInfo",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 991,
															"src": "32957:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_struct$_UserInfo_$947_storage_$_$",
																"typeString": "mapping(uint256 => mapping(address => struct NFTMasterChef.UserInfo storage ref))"
															}
														},
														"id": 1977,
														"indexExpression": {
															"hexValue": "30",
															"id": 1976,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "32966:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "32957:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserInfo_$947_storage_$",
															"typeString": "mapping(address => struct NFTMasterChef.UserInfo storage ref)"
														}
													},
													"id": 1983,
													"indexExpression": {
														"arguments": [
															{
																"expression": {
																	"id": 1980,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "32977:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1981,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "32977:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 1979,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "32969:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1978,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "32969:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 1982,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "32969:19:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "32957:32:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UserInfo_$947_storage",
														"typeString": "struct NFTMasterChef.UserInfo storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "32933:56:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"hexValue": "30",
															"id": 1986,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "33021:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															}
														],
														"id": 1985,
														"name": "updatePool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1714,
														"src": "33010:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 1987,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "33010:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1988,
												"nodeType": "ExpressionStatement",
												"src": "33010:13:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1992,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1989,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1974,
															"src": "33038:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$947_storage_ptr",
																"typeString": "struct NFTMasterChef.UserInfo storage pointer"
															}
														},
														"id": 1990,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "amount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 944,
														"src": "33038:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1991,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "33052:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "33038:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2034,
												"nodeType": "IfStatement",
												"src": "33034:282:0",
												"trueBody": {
													"id": 2033,
													"nodeType": "Block",
													"src": "33055:261:0",
													"statements": [
														{
															"assignments": [
																1994
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1994,
																	"mutability": "mutable",
																	"name": "pending",
																	"nameLocation": "33078:7:0",
																	"nodeType": "VariableDeclaration",
																	"scope": 2033,
																	"src": "33070:15:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1993,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "33070:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 2008,
															"initialValue": {
																"arguments": [
																	{
																		"expression": {
																			"id": 2005,
																			"name": "user",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1974,
																			"src": "33141:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_UserInfo_$947_storage_ptr",
																				"typeString": "struct NFTMasterChef.UserInfo storage pointer"
																			}
																		},
																		"id": 2006,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "rewardDebt",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 946,
																		"src": "33141:15:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"hexValue": "31653132",
																				"id": 2002,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "33131:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1000000000000_by_1",
																					"typeString": "int_const 1000000000000"
																				},
																				"value": "1e12"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_1000000000000_by_1",
																					"typeString": "int_const 1000000000000"
																				}
																			],
																			"expression": {
																				"arguments": [
																					{
																						"expression": {
																							"id": 1998,
																							"name": "pool",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1967,
																							"src": "33104:4:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_struct$_PoolInfo_$957_storage_ptr",
																								"typeString": "struct NFTMasterChef.PoolInfo storage pointer"
																							}
																						},
																						"id": 1999,
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberName": "accPowerPerShare",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 956,
																						"src": "33104:21:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					],
																					"expression": {
																						"expression": {
																							"id": 1995,
																							"name": "user",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1974,
																							"src": "33088:4:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_struct$_UserInfo_$947_storage_ptr",
																								"typeString": "struct NFTMasterChef.UserInfo storage pointer"
																							}
																						},
																						"id": 1996,
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberName": "amount",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 944,
																						"src": "33088:11:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"id": 1997,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "mul",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 107,
																					"src": "33088:15:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																						"typeString": "function (uint256,uint256) pure returns (uint256)"
																					}
																				},
																				"id": 2000,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "33088:38:0",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"id": 2001,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "div",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 124,
																			"src": "33088:42:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																				"typeString": "function (uint256,uint256) pure returns (uint256)"
																			}
																		},
																		"id": 2003,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "33088:48:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2004,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sub",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 44,
																	"src": "33088:52:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 2007,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "33088:69:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "33070:87:0"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2011,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2009,
																	"name": "pending",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1994,
																	"src": "33175:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 2010,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "33185:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "33175:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 2032,
															"nodeType": "IfStatement",
															"src": "33172:133:0",
															"trueBody": {
																"id": 2031,
																"nodeType": "Block",
																"src": "33188:117:0",
																"statements": [
																	{
																		"expression": {
																			"id": 2029,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"baseExpression": {
																					"id": 2012,
																					"name": "powerBalance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1000,
																					"src": "33207:12:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																						"typeString": "mapping(address => uint256)"
																					}
																				},
																				"id": 2018,
																				"indexExpression": {
																					"arguments": [
																						{
																							"expression": {
																								"id": 2015,
																								"name": "msg",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 4294967281,
																								"src": "33228:3:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_magic_message",
																									"typeString": "msg"
																								}
																							},
																							"id": 2016,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberName": "sender",
																							"nodeType": "MemberAccess",
																							"src": "33228:10:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						],
																						"id": 2014,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "33220:7:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_address_$",
																							"typeString": "type(address)"
																						},
																						"typeName": {
																							"id": 2013,
																							"name": "address",
																							"nodeType": "ElementaryTypeName",
																							"src": "33220:7:0",
																							"typeDescriptions": {}
																						}
																					},
																					"id": 2017,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "33220:19:0",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": true,
																				"nodeType": "IndexAccess",
																				"src": "33207:33:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"arguments": [
																					{
																						"id": 2027,
																						"name": "pending",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1994,
																						"src": "33281:7:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					],
																					"expression": {
																						"baseExpression": {
																							"id": 2019,
																							"name": "powerBalance",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1000,
																							"src": "33243:12:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																								"typeString": "mapping(address => uint256)"
																							}
																						},
																						"id": 2025,
																						"indexExpression": {
																							"arguments": [
																								{
																									"expression": {
																										"id": 2022,
																										"name": "msg",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 4294967281,
																										"src": "33264:3:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_magic_message",
																											"typeString": "msg"
																										}
																									},
																									"id": 2023,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": false,
																									"lValueRequested": false,
																									"memberName": "sender",
																									"nodeType": "MemberAccess",
																									"src": "33264:10:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_address",
																										"typeString": "address"
																									}
																								}
																							],
																							"expression": {
																								"argumentTypes": [
																									{
																										"typeIdentifier": "t_address",
																										"typeString": "address"
																									}
																								],
																								"id": 2021,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"lValueRequested": false,
																								"nodeType": "ElementaryTypeNameExpression",
																								"src": "33256:7:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_type$_t_address_$",
																									"typeString": "type(address)"
																								},
																								"typeName": {
																									"id": 2020,
																									"name": "address",
																									"nodeType": "ElementaryTypeName",
																									"src": "33256:7:0",
																									"typeDescriptions": {}
																								}
																							},
																							"id": 2024,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"kind": "typeConversion",
																							"lValueRequested": false,
																							"names": [],
																							"nodeType": "FunctionCall",
																							"src": "33256:19:0",
																							"tryCall": false,
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						},
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "IndexAccess",
																						"src": "33243:33:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"id": 2026,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "add",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 27,
																					"src": "33243:37:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																						"typeString": "function (uint256,uint256) pure returns (uint256)"
																					}
																				},
																				"id": 2028,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "33243:46:0",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "33207:82:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 2030,
																		"nodeType": "ExpressionStatement",
																		"src": "33207:82:0"
																	}
																]
															}
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2037,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2035,
														"name": "_amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1962,
														"src": "33329:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 2036,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "33339:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "33329:11:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2066,
												"nodeType": "IfStatement",
												"src": "33326:170:0",
												"trueBody": {
													"id": 2065,
													"nodeType": "Block",
													"src": "33342:154:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"expression": {
																					"id": 2045,
																					"name": "msg",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967281,
																					"src": "33395:3:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_message",
																						"typeString": "msg"
																					}
																				},
																				"id": 2046,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "sender",
																				"nodeType": "MemberAccess",
																				"src": "33395:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 2044,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "33387:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 2043,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "33387:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 2047,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "33387:19:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"id": 2050,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967268,
																				"src": "33416:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_NFTMasterChef_$2289",
																					"typeString": "contract NFTMasterChef"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_NFTMasterChef_$2289",
																					"typeString": "contract NFTMasterChef"
																				}
																			],
																			"id": 2049,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "33408:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 2048,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "33408:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 2051,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "33408:13:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 2052,
																		"name": "_amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1962,
																		"src": "33423:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"expression": {
																			"id": 2038,
																			"name": "pool",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1967,
																			"src": "33357:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_PoolInfo_$957_storage_ptr",
																				"typeString": "struct NFTMasterChef.PoolInfo storage pointer"
																			}
																		},
																		"id": 2041,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "lpToken",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 950,
																		"src": "33357:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$286",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 2042,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "safeTransferFrom",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 630,
																	"src": "33357:29:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$286_$_t_address_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$286_$",
																		"typeString": "function (contract IERC20,address,address,uint256)"
																	}
																},
																"id": 2053,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "33357:74:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2054,
															"nodeType": "ExpressionStatement",
															"src": "33357:74:0"
														},
														{
															"expression": {
																"id": 2063,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 2055,
																		"name": "user",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1974,
																		"src": "33446:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_UserInfo_$947_storage_ptr",
																			"typeString": "struct NFTMasterChef.UserInfo storage pointer"
																		}
																	},
																	"id": 2057,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberName": "amount",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 944,
																	"src": "33446:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"id": 2061,
																			"name": "_amount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1962,
																			"src": "33476:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"expression": {
																				"id": 2058,
																				"name": "user",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1974,
																				"src": "33460:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_UserInfo_$947_storage_ptr",
																					"typeString": "struct NFTMasterChef.UserInfo storage pointer"
																				}
																			},
																			"id": 2059,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "amount",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 944,
																			"src": "33460:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 2060,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "add",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 27,
																		"src": "33460:15:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 2062,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "33460:24:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "33446:38:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2064,
															"nodeType": "ExpressionStatement",
															"src": "33446:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"id": 2079,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 2067,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1974,
															"src": "33506:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$947_storage_ptr",
																"typeString": "struct NFTMasterChef.UserInfo storage pointer"
															}
														},
														"id": 2069,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "rewardDebt",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 946,
														"src": "33506:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"hexValue": "31653132",
																"id": 2077,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "33567:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1000000000000_by_1",
																	"typeString": "int_const 1000000000000"
																},
																"value": "1e12"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_1000000000000_by_1",
																	"typeString": "int_const 1000000000000"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 2073,
																			"name": "pool",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1967,
																			"src": "33540:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_PoolInfo_$957_storage_ptr",
																				"typeString": "struct NFTMasterChef.PoolInfo storage pointer"
																			}
																		},
																		"id": 2074,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "accPowerPerShare",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 956,
																		"src": "33540:21:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"expression": {
																			"id": 2070,
																			"name": "user",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1974,
																			"src": "33524:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_UserInfo_$947_storage_ptr",
																				"typeString": "struct NFTMasterChef.UserInfo storage pointer"
																			}
																		},
																		"id": 2071,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "amount",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 944,
																		"src": "33524:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2072,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "mul",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 107,
																	"src": "33524:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 2075,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "33524:38:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2076,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "div",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 124,
															"src": "33524:42:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 2078,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "33524:48:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "33506:66:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2080,
												"nodeType": "ExpressionStatement",
												"src": "33506:66:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 2082,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "33596:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2083,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "33596:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"hexValue": "30",
															"id": 2084,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "33608:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"id": 2085,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1962,
															"src": "33611:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2081,
														"name": "Deposit",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1008,
														"src": "33588:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,uint256)"
														}
													},
													"id": 2086,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "33588:31:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2087,
												"nodeType": "EmitStatement",
												"src": "33583:36:0"
											}
										]
									},
									"functionSelector": "41441d3b",
									"id": 2089,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "enterStaking",
									"nameLocation": "32839:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1963,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1962,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "32860:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 2089,
												"src": "32852:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1961,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "32852:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "32851:17:0"
									},
									"returnParameters": {
										"id": 1964,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "32876:0:0"
									},
									"scope": 2289,
									"src": "32830:797:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2206,
										"nodeType": "Block",
										"src": "33725:701:0",
										"statements": [
											{
												"assignments": [
													2096
												],
												"declarations": [
													{
														"constant": false,
														"id": 2096,
														"mutability": "mutable",
														"name": "pool",
														"nameLocation": "33753:4:0",
														"nodeType": "VariableDeclaration",
														"scope": 2206,
														"src": "33736:21:0",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_PoolInfo_$957_storage_ptr",
															"typeString": "struct NFTMasterChef.PoolInfo"
														},
														"typeName": {
															"id": 2095,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 2094,
																"name": "PoolInfo",
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 957,
																"src": "33736:8:0"
															},
															"referencedDeclaration": 957,
															"src": "33736:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PoolInfo_$957_storage_ptr",
																"typeString": "struct NFTMasterChef.PoolInfo"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2100,
												"initialValue": {
													"baseExpression": {
														"id": 2097,
														"name": "poolInfo",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 984,
														"src": "33760:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_PoolInfo_$957_storage_$dyn_storage",
															"typeString": "struct NFTMasterChef.PoolInfo storage ref[] storage ref"
														}
													},
													"id": 2099,
													"indexExpression": {
														"hexValue": "30",
														"id": 2098,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "33769:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "33760:11:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_PoolInfo_$957_storage",
														"typeString": "struct NFTMasterChef.PoolInfo storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "33736:35:0"
											},
											{
												"assignments": [
													2103
												],
												"declarations": [
													{
														"constant": false,
														"id": 2103,
														"mutability": "mutable",
														"name": "user",
														"nameLocation": "33799:4:0",
														"nodeType": "VariableDeclaration",
														"scope": 2206,
														"src": "33782:21:0",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_UserInfo_$947_storage_ptr",
															"typeString": "struct NFTMasterChef.UserInfo"
														},
														"typeName": {
															"id": 2102,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 2101,
																"name": "UserInfo",
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 947,
																"src": "33782:8:0"
															},
															"referencedDeclaration": 947,
															"src": "33782:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$947_storage_ptr",
																"typeString": "struct NFTMasterChef.UserInfo"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2110,
												"initialValue": {
													"baseExpression": {
														"baseExpression": {
															"id": 2104,
															"name": "userInfo",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 991,
															"src": "33806:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_struct$_UserInfo_$947_storage_$_$",
																"typeString": "mapping(uint256 => mapping(address => struct NFTMasterChef.UserInfo storage ref))"
															}
														},
														"id": 2106,
														"indexExpression": {
															"hexValue": "30",
															"id": 2105,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "33815:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "33806:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserInfo_$947_storage_$",
															"typeString": "mapping(address => struct NFTMasterChef.UserInfo storage ref)"
														}
													},
													"id": 2109,
													"indexExpression": {
														"expression": {
															"id": 2107,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "33818:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 2108,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "33818:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "33806:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UserInfo_$947_storage",
														"typeString": "struct NFTMasterChef.UserInfo storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "33782:47:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2115,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 2112,
																	"name": "user",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2103,
																	"src": "33848:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_UserInfo_$947_storage_ptr",
																		"typeString": "struct NFTMasterChef.UserInfo storage pointer"
																	}
																},
																"id": 2113,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "amount",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 944,
																"src": "33848:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 2114,
																"name": "_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2091,
																"src": "33863:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "33848:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "77697468647261773a206e6f7420676f6f64",
															"id": 2116,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "33872:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d09049ba12a4b0d32c8152176161276998fb1529c6184e3c4227161fe99644df",
																"typeString": "literal_string \"withdraw: not good\""
															},
															"value": "withdraw: not good"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_d09049ba12a4b0d32c8152176161276998fb1529c6184e3c4227161fe99644df",
																"typeString": "literal_string \"withdraw: not good\""
															}
														],
														"id": 2111,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "33840:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2117,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "33840:53:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2118,
												"nodeType": "ExpressionStatement",
												"src": "33840:53:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"hexValue": "30",
															"id": 2120,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "33915:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															}
														],
														"id": 2119,
														"name": "updatePool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1714,
														"src": "33904:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 2121,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "33904:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2122,
												"nodeType": "ExpressionStatement",
												"src": "33904:13:0"
											},
											{
												"assignments": [
													2124
												],
												"declarations": [
													{
														"constant": false,
														"id": 2124,
														"mutability": "mutable",
														"name": "pending",
														"nameLocation": "33936:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 2206,
														"src": "33928:15:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2123,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "33928:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2138,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 2135,
																"name": "user",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2103,
																"src": "33999:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_UserInfo_$947_storage_ptr",
																	"typeString": "struct NFTMasterChef.UserInfo storage pointer"
																}
															},
															"id": 2136,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "rewardDebt",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 946,
															"src": "33999:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"hexValue": "31653132",
																	"id": 2132,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "33989:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1000000000000_by_1",
																		"typeString": "int_const 1000000000000"
																	},
																	"value": "1e12"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_1000000000000_by_1",
																		"typeString": "int_const 1000000000000"
																	}
																],
																"expression": {
																	"arguments": [
																		{
																			"expression": {
																				"id": 2128,
																				"name": "pool",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2096,
																				"src": "33962:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_PoolInfo_$957_storage_ptr",
																					"typeString": "struct NFTMasterChef.PoolInfo storage pointer"
																				}
																			},
																			"id": 2129,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "accPowerPerShare",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 956,
																			"src": "33962:21:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"expression": {
																				"id": 2125,
																				"name": "user",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2103,
																				"src": "33946:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_UserInfo_$947_storage_ptr",
																					"typeString": "struct NFTMasterChef.UserInfo storage pointer"
																				}
																			},
																			"id": 2126,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "amount",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 944,
																			"src": "33946:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 2127,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "mul",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 107,
																		"src": "33946:15:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 2130,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "33946:38:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 2131,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "div",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 124,
																"src": "33946:42:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 2133,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "33946:48:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2134,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sub",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 44,
														"src": "33946:52:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 2137,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "33946:69:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "33928:87:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2141,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2139,
														"name": "pending",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2124,
														"src": "34029:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 2140,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "34039:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "34029:11:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2156,
												"nodeType": "IfStatement",
												"src": "34026:107:0",
												"trueBody": {
													"id": 2155,
													"nodeType": "Block",
													"src": "34042:91:0",
													"statements": [
														{
															"expression": {
																"id": 2153,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 2142,
																		"name": "powerBalance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1000,
																		"src": "34057:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 2145,
																	"indexExpression": {
																		"expression": {
																			"id": 2143,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "34070:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 2144,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "34070:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "34057:24:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"id": 2151,
																			"name": "pending",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2124,
																			"src": "34113:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"baseExpression": {
																				"id": 2146,
																				"name": "powerBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1000,
																				"src": "34084:12:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 2149,
																			"indexExpression": {
																				"expression": {
																					"id": 2147,
																					"name": "msg",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967281,
																					"src": "34097:3:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_message",
																						"typeString": "msg"
																					}
																				},
																				"id": 2148,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "sender",
																				"nodeType": "MemberAccess",
																				"src": "34097:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "34084:24:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 2150,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "add",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 27,
																		"src": "34084:28:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 2152,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "34084:37:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "34057:64:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2154,
															"nodeType": "ExpressionStatement",
															"src": "34057:64:0"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2159,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2157,
														"name": "_amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2091,
														"src": "34146:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 2158,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "34156:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "34146:11:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2184,
												"nodeType": "IfStatement",
												"src": "34143:151:0",
												"trueBody": {
													"id": 2183,
													"nodeType": "Block",
													"src": "34159:135:0",
													"statements": [
														{
															"expression": {
																"id": 2168,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 2160,
																		"name": "user",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2103,
																		"src": "34174:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_UserInfo_$947_storage_ptr",
																			"typeString": "struct NFTMasterChef.UserInfo storage pointer"
																		}
																	},
																	"id": 2162,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberName": "amount",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 944,
																	"src": "34174:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"id": 2166,
																			"name": "_amount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2091,
																			"src": "34204:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"expression": {
																				"id": 2163,
																				"name": "user",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2103,
																				"src": "34188:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_UserInfo_$947_storage_ptr",
																					"typeString": "struct NFTMasterChef.UserInfo storage pointer"
																				}
																			},
																			"id": 2164,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "amount",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 944,
																			"src": "34188:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 2165,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sub",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 44,
																		"src": "34188:15:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 2167,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "34188:24:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "34174:38:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2169,
															"nodeType": "ExpressionStatement",
															"src": "34174:38:0"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"expression": {
																					"id": 2177,
																					"name": "msg",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967281,
																					"src": "34261:3:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_message",
																						"typeString": "msg"
																					}
																				},
																				"id": 2178,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "sender",
																				"nodeType": "MemberAccess",
																				"src": "34261:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 2176,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "34253:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 2175,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "34253:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 2179,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "34253:19:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 2180,
																		"name": "_amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2091,
																		"src": "34274:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"expression": {
																			"id": 2170,
																			"name": "pool",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2096,
																			"src": "34227:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_PoolInfo_$957_storage_ptr",
																				"typeString": "struct NFTMasterChef.PoolInfo storage pointer"
																			}
																		},
																		"id": 2173,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "lpToken",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 950,
																		"src": "34227:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$286",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 2174,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "safeTransfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 604,
																	"src": "34227:25:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$286_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$286_$",
																		"typeString": "function (contract IERC20,address,uint256)"
																	}
																},
																"id": 2181,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "34227:55:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2182,
															"nodeType": "ExpressionStatement",
															"src": "34227:55:0"
														}
													]
												}
											},
											{
												"expression": {
													"id": 2197,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 2185,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2103,
															"src": "34304:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$947_storage_ptr",
																"typeString": "struct NFTMasterChef.UserInfo storage pointer"
															}
														},
														"id": 2187,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "rewardDebt",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 946,
														"src": "34304:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"hexValue": "31653132",
																"id": 2195,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "34365:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1000000000000_by_1",
																	"typeString": "int_const 1000000000000"
																},
																"value": "1e12"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_1000000000000_by_1",
																	"typeString": "int_const 1000000000000"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 2191,
																			"name": "pool",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2096,
																			"src": "34338:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_PoolInfo_$957_storage_ptr",
																				"typeString": "struct NFTMasterChef.PoolInfo storage pointer"
																			}
																		},
																		"id": 2192,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "accPowerPerShare",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 956,
																		"src": "34338:21:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"expression": {
																			"id": 2188,
																			"name": "user",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2103,
																			"src": "34322:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_UserInfo_$947_storage_ptr",
																				"typeString": "struct NFTMasterChef.UserInfo storage pointer"
																			}
																		},
																		"id": 2189,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "amount",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 944,
																		"src": "34322:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2190,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "mul",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 107,
																	"src": "34322:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 2193,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "34322:38:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2194,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "div",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 124,
															"src": "34322:42:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 2196,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "34322:48:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "34304:66:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2198,
												"nodeType": "ExpressionStatement",
												"src": "34304:66:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 2200,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "34395:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2201,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "34395:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"hexValue": "30",
															"id": 2202,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "34407:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"id": 2203,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2091,
															"src": "34410:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2199,
														"name": "Withdraw",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1016,
														"src": "34386:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,uint256)"
														}
													},
													"id": 2204,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "34386:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2205,
												"nodeType": "EmitStatement",
												"src": "34381:37:0"
											}
										]
									},
									"functionSelector": "1058d281",
									"id": 2207,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "leaveStaking",
									"nameLocation": "33688:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2092,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2091,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "33709:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 2207,
												"src": "33701:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2090,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "33701:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "33700:17:0"
									},
									"returnParameters": {
										"id": 2093,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "33725:0:0"
									},
									"scope": 2289,
									"src": "33679:747:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2263,
										"nodeType": "Block",
										"src": "34553:308:0",
										"statements": [
											{
												"assignments": [
													2214
												],
												"declarations": [
													{
														"constant": false,
														"id": 2214,
														"mutability": "mutable",
														"name": "pool",
														"nameLocation": "34581:4:0",
														"nodeType": "VariableDeclaration",
														"scope": 2263,
														"src": "34564:21:0",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_PoolInfo_$957_storage_ptr",
															"typeString": "struct NFTMasterChef.PoolInfo"
														},
														"typeName": {
															"id": 2213,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 2212,
																"name": "PoolInfo",
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 957,
																"src": "34564:8:0"
															},
															"referencedDeclaration": 957,
															"src": "34564:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PoolInfo_$957_storage_ptr",
																"typeString": "struct NFTMasterChef.PoolInfo"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2218,
												"initialValue": {
													"baseExpression": {
														"id": 2215,
														"name": "poolInfo",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 984,
														"src": "34588:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_PoolInfo_$957_storage_$dyn_storage",
															"typeString": "struct NFTMasterChef.PoolInfo storage ref[] storage ref"
														}
													},
													"id": 2217,
													"indexExpression": {
														"id": 2216,
														"name": "_pid",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2209,
														"src": "34597:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "34588:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_PoolInfo_$957_storage",
														"typeString": "struct NFTMasterChef.PoolInfo storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "34564:38:0"
											},
											{
												"assignments": [
													2221
												],
												"declarations": [
													{
														"constant": false,
														"id": 2221,
														"mutability": "mutable",
														"name": "user",
														"nameLocation": "34630:4:0",
														"nodeType": "VariableDeclaration",
														"scope": 2263,
														"src": "34613:21:0",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_UserInfo_$947_storage_ptr",
															"typeString": "struct NFTMasterChef.UserInfo"
														},
														"typeName": {
															"id": 2220,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 2219,
																"name": "UserInfo",
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 947,
																"src": "34613:8:0"
															},
															"referencedDeclaration": 947,
															"src": "34613:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$947_storage_ptr",
																"typeString": "struct NFTMasterChef.UserInfo"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2228,
												"initialValue": {
													"baseExpression": {
														"baseExpression": {
															"id": 2222,
															"name": "userInfo",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 991,
															"src": "34637:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_struct$_UserInfo_$947_storage_$_$",
																"typeString": "mapping(uint256 => mapping(address => struct NFTMasterChef.UserInfo storage ref))"
															}
														},
														"id": 2224,
														"indexExpression": {
															"id": 2223,
															"name": "_pid",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2209,
															"src": "34646:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "34637:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserInfo_$947_storage_$",
															"typeString": "mapping(address => struct NFTMasterChef.UserInfo storage ref)"
														}
													},
													"id": 2227,
													"indexExpression": {
														"expression": {
															"id": 2225,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "34652:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 2226,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "34652:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "34637:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UserInfo_$947_storage",
														"typeString": "struct NFTMasterChef.UserInfo storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "34613:50:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"expression": {
																		"id": 2236,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "34708:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 2237,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "34708:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 2235,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "34700:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2234,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "34700:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 2238,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "34700:19:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 2239,
																"name": "user",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2221,
																"src": "34721:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_UserInfo_$947_storage_ptr",
																	"typeString": "struct NFTMasterChef.UserInfo storage pointer"
																}
															},
															"id": 2240,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "amount",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 944,
															"src": "34721:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"expression": {
																"id": 2229,
																"name": "pool",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2214,
																"src": "34674:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_PoolInfo_$957_storage_ptr",
																	"typeString": "struct NFTMasterChef.PoolInfo storage pointer"
																}
															},
															"id": 2232,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "lpToken",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 950,
															"src": "34674:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$286",
																"typeString": "contract IERC20"
															}
														},
														"id": 2233,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "safeTransfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 604,
														"src": "34674:25:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$286_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$286_$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 2241,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "34674:59:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2242,
												"nodeType": "ExpressionStatement",
												"src": "34674:59:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 2244,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "34767:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2245,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "34767:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2246,
															"name": "_pid",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2209,
															"src": "34779:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 2247,
																"name": "user",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2221,
																"src": "34785:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_UserInfo_$947_storage_ptr",
																	"typeString": "struct NFTMasterChef.UserInfo storage pointer"
																}
															},
															"id": 2248,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "amount",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 944,
															"src": "34785:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2243,
														"name": "EmergencyWithdraw",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1024,
														"src": "34749:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,uint256)"
														}
													},
													"id": 2249,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "34749:48:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2250,
												"nodeType": "EmitStatement",
												"src": "34744:53:0"
											},
											{
												"expression": {
													"id": 2255,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 2251,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2221,
															"src": "34808:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$947_storage_ptr",
																"typeString": "struct NFTMasterChef.UserInfo storage pointer"
															}
														},
														"id": 2253,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "amount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 944,
														"src": "34808:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 2254,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "34822:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "34808:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2256,
												"nodeType": "ExpressionStatement",
												"src": "34808:15:0"
											},
											{
												"expression": {
													"id": 2261,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 2257,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2221,
															"src": "34834:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$947_storage_ptr",
																"typeString": "struct NFTMasterChef.UserInfo storage pointer"
															}
														},
														"id": 2259,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "rewardDebt",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 946,
														"src": "34834:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 2260,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "34852:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "34834:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2262,
												"nodeType": "ExpressionStatement",
												"src": "34834:19:0"
											}
										]
									},
									"functionSelector": "5312ea8e",
									"id": 2264,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "emergencyWithdraw",
									"nameLocation": "34514:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2210,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2209,
												"mutability": "mutable",
												"name": "_pid",
												"nameLocation": "34540:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 2264,
												"src": "34532:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2208,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "34532:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "34531:14:0"
									},
									"returnParameters": {
										"id": 2211,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "34553:0:0"
									},
									"scope": 2289,
									"src": "34505:356:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2275,
										"nodeType": "Block",
										"src": "34931:37:0",
										"statements": [
											{
												"expression": {
													"id": 2273,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2271,
														"name": "devaddr",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 972,
														"src": "34942:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2272,
														"name": "_devaddr",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2266,
														"src": "34952:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "34942:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 2274,
												"nodeType": "ExpressionStatement",
												"src": "34942:18:0"
											}
										]
									},
									"functionSelector": "d0d41fe1",
									"id": 2276,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2269,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2268,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 859,
												"src": "34921:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "34921:9:0"
										}
									],
									"name": "setDevAddress",
									"nameLocation": "34882:13:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2267,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2266,
												"mutability": "mutable",
												"name": "_devaddr",
												"nameLocation": "34904:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 2276,
												"src": "34896:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2265,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "34896:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "34895:18:0"
									},
									"returnParameters": {
										"id": 2270,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "34931:0:0"
									},
									"scope": 2289,
									"src": "34873:95:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2287,
										"nodeType": "Block",
										"src": "35039:44:0",
										"statements": [
											{
												"expression": {
													"id": 2285,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2283,
														"name": "PowerPerBlock",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 974,
														"src": "35050:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2284,
														"name": "newAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2278,
														"src": "35066:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "35050:25:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2286,
												"nodeType": "ExpressionStatement",
												"src": "35050:25:0"
											}
										]
									},
									"functionSelector": "3df7aff3",
									"id": 2288,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2281,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2280,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 859,
												"src": "35029:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "35029:9:0"
										}
									],
									"name": "updatePowerPerBlock",
									"nameLocation": "34983:19:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2279,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2278,
												"mutability": "mutable",
												"name": "newAmount",
												"nameLocation": "35011:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 2288,
												"src": "35003:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2277,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "35003:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "35002:19:0"
									},
									"returnParameters": {
										"id": 2282,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "35039:0:0"
									},
									"scope": 2289,
									"src": "34974:109:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 2290,
							"src": "22111:12975:0",
							"usedErrors": []
						}
					],
					"src": "103:34983:0"
				},
				"id": 0
			}
		}
	}
}